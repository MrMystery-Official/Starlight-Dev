; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?ShowLinkContextMenu@NodeEditor@ax@@YA_NPEAULinkId@12@@Z ; ax::NodeEditor::ShowLinkContextMenu
PUBLIC	?ShowNodeContextMenu@NodeEditor@ax@@YA_NPEAUNodeId@12@@Z ; ax::NodeEditor::ShowNodeContextMenu
PUBLIC	?NavigateToContent@NodeEditor@ax@@YAXM@Z	; ax::NodeEditor::NavigateToContent
PUBLIC	?DeleteLink@NodeEditor@ax@@YA_NULinkId@12@@Z	; ax::NodeEditor::DeleteLink
PUBLIC	?DeleteNode@NodeEditor@ax@@YA_NUNodeId@12@@Z	; ax::NodeEditor::DeleteNode
PUBLIC	?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z ; ax::NodeEditor::GetSelectedLinks
PUBLIC	?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z ; ax::NodeEditor::GetSelectedNodes
PUBLIC	?Resume@NodeEditor@ax@@YAXXZ			; ax::NodeEditor::Resume
PUBLIC	?Suspend@NodeEditor@ax@@YAXXZ			; ax::NodeEditor::Suspend
PUBLIC	?SetNodePosition@NodeEditor@ax@@YAXUNodeId@12@AEBUImVec2@@@Z ; ax::NodeEditor::SetNodePosition
PUBLIC	?EndCreate@NodeEditor@ax@@YAXXZ			; ax::NodeEditor::EndCreate
PUBLIC	?RejectNewItem@NodeEditor@ax@@YAXAEBUImVec4@@M@Z ; ax::NodeEditor::RejectNewItem
PUBLIC	?AcceptNewItem@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z ; ax::NodeEditor::AcceptNewItem
PUBLIC	?QueryNewLink@NodeEditor@ax@@YA_NPEAUPinId@12@0@Z ; ax::NodeEditor::QueryNewLink
PUBLIC	?BeginCreate@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z	; ax::NodeEditor::BeginCreate
PUBLIC	?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z ; ax::NodeEditor::Link
PUBLIC	?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z ; ax::NodeEditor::GetNodeBackgroundDrawList
PUBLIC	?EndNode@NodeEditor@ax@@YAXXZ			; ax::NodeEditor::EndNode
PUBLIC	?EndPin@NodeEditor@ax@@YAXXZ			; ax::NodeEditor::EndPin
PUBLIC	?PinPivotRect@NodeEditor@ax@@YAXAEBUImVec2@@0@Z	; ax::NodeEditor::PinPivotRect
PUBLIC	?PinRect@NodeEditor@ax@@YAXAEBUImVec2@@0@Z	; ax::NodeEditor::PinRect
PUBLIC	?BeginPin@NodeEditor@ax@@YAXUPinId@12@W4PinKind@12@@Z ; ax::NodeEditor::BeginPin
PUBLIC	?BeginNode@NodeEditor@ax@@YAXUNodeId@12@@Z	; ax::NodeEditor::BeginNode
PUBLIC	?End@NodeEditor@ax@@YAXXZ			; ax::NodeEditor::End
PUBLIC	?Begin@NodeEditor@ax@@YAXPEBDAEBUImVec2@@@Z	; ax::NodeEditor::Begin
PUBLIC	?PopStyleVar@NodeEditor@ax@@YAXH@Z		; ax::NodeEditor::PopStyleVar
PUBLIC	?PushStyleVar@NodeEditor@ax@@YAXW4StyleVar@12@AEBUImVec4@@@Z ; ax::NodeEditor::PushStyleVar
PUBLIC	?GetCurrentEditor@NodeEditor@ax@@YAPEAUEditorContext@12@XZ ; ax::NodeEditor::GetCurrentEditor
PUBLIC	?SetCurrentEditor@NodeEditor@ax@@YAXPEAUEditorContext@12@@Z ; ax::NodeEditor::SetCurrentEditor
PUBLIC	??_GEditorContext@Detail@NodeEditor@ax@@QEAAPEAXI@Z ; ax::NodeEditor::Detail::EditorContext::`scalar deleting destructor'
PUBLIC	?DestroyEditor@NodeEditor@ax@@YAXPEAUEditorContext@12@@Z ; ax::NodeEditor::DestroyEditor
PUBLIC	?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z ; ax::NodeEditor::CreateEditor
PUBLIC	?NavigateTo@EditorContext@Detail@NodeEditor@ax@@QEAAXAEBUImRect@@_NM@Z ; ax::NodeEditor::Detail::EditorContext::NavigateTo
PUBLIC	?GetContextMenu@EditorContext@Detail@NodeEditor@ax@@QEAAAEAUContextMenuAction@234@XZ ; ax::NodeEditor::Detail::EditorContext::GetContextMenu
PUBLIC	?GetItemCreator@EditorContext@Detail@NodeEditor@ax@@QEAAAEAUCreateItemAction@234@XZ ; ax::NodeEditor::Detail::EditorContext::GetItemCreator
PUBLIC	?GetNodeBuilder@EditorContext@Detail@NodeEditor@ax@@QEAAAEAUNodeBuilder@234@XZ ; ax::NodeEditor::Detail::EditorContext::GetNodeBuilder
PUBLIC	?GetStyle@NodeEditor@ax@@YAAEAUStyle@12@XZ	; ax::NodeEditor::GetStyle
;	COMDAT ?s_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@23@PEAUEditorContext@23@@Z@4U423@A
_BSS	SEGMENT
?s_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@23@PEAUEditorContext@23@@Z@4U423@A DB 070H DUP (?) ; `ax::NodeEditor::GetConfig'::`9'::s_EmptyConfig
?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA DQ 01H DUP (?) ; s_Editor
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@45@H@Z@@Z DD imagerel ??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@45@H@Z@@Z
	DD	imagerel ??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@45@H@Z@@Z+83
	DD	imagerel $unwind$??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@45@H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@45@H@Z@@Z DD imagerel ??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@45@H@Z@@Z
	DD	imagerel ??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@45@H@Z@@Z+83
	DD	imagerel $unwind$??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@45@H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z DD imagerel ??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z
	DD	imagerel ??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z+24
	DD	imagerel $unwind$??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z DD imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z+32
	DD	imagerel $unwind$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z DD imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z+32
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z+133
	DD	imagerel $chain$1$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z DD imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z+133
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z+149
	DD	imagerel $chain$2$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z DD imagerel ??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z
	DD	imagerel ??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z+24
	DD	imagerel $unwind$??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z DD imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z+32
	DD	imagerel $unwind$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z DD imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z+32
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z+133
	DD	imagerel $chain$1$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z DD imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z+133
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z+149
	DD	imagerel $chain$2$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ShowLinkContextMenu@NodeEditor@ax@@YA_NPEAULinkId@12@@Z DD imagerel $LN58
	DD	imagerel $LN58+188
	DD	imagerel $unwind$?ShowLinkContextMenu@NodeEditor@ax@@YA_NPEAULinkId@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ShowNodeContextMenu@NodeEditor@ax@@YA_NPEAUNodeId@12@@Z DD imagerel $LN58
	DD	imagerel $LN58+188
	DD	imagerel $unwind$?ShowNodeContextMenu@NodeEditor@ax@@YA_NPEAUNodeId@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavigateToContent@NodeEditor@ax@@YAXM@Z DD imagerel $LN6
	DD	imagerel $LN6+61
	DD	imagerel $unwind$?NavigateToContent@NodeEditor@ax@@YAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteLink@NodeEditor@ax@@YA_NULinkId@12@@Z DD imagerel $LN16
	DD	imagerel $LN16+168
	DD	imagerel $unwind$?DeleteLink@NodeEditor@ax@@YA_NULinkId@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteNode@NodeEditor@ax@@YA_NUNodeId@12@@Z DD imagerel $LN31
	DD	imagerel $LN31+200
	DD	imagerel $unwind$?DeleteNode@NodeEditor@ax@@YA_NUNodeId@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z DD imagerel $LN57
	DD	imagerel $LN57+46
	DD	imagerel $unwind$?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z DD imagerel $LN57+46
	DD	imagerel $LN57+148
	DD	imagerel $chain$1$?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z DD imagerel $LN57+148
	DD	imagerel $LN57+164
	DD	imagerel $chain$2$?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z DD imagerel $LN57
	DD	imagerel $LN57+46
	DD	imagerel $unwind$?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z DD imagerel $LN57+46
	DD	imagerel $LN57+148
	DD	imagerel $chain$1$?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z DD imagerel $LN57+148
	DD	imagerel $LN57+164
	DD	imagerel $chain$2$?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNodePosition@NodeEditor@ax@@YAXUNodeId@12@AEBUImVec2@@@Z DD imagerel $LN71
	DD	imagerel $LN71+323
	DD	imagerel $unwind$?SetNodePosition@NodeEditor@ax@@YAXUNodeId@12@AEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EndCreate@NodeEditor@ax@@YAXXZ DD imagerel $LN13
	DD	imagerel $LN13+99
	DD	imagerel $unwind$?EndCreate@NodeEditor@ax@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RejectNewItem@NodeEditor@ax@@YAXAEBUImVec4@@M@Z DD imagerel $LN19
	DD	imagerel $LN19+104
	DD	imagerel $unwind$?RejectNewItem@NodeEditor@ax@@YAXAEBUImVec4@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AcceptNewItem@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z DD imagerel $LN22
	DD	imagerel $LN22+177
	DD	imagerel $unwind$?AcceptNewItem@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?QueryNewLink@NodeEditor@ax@@YA_NPEAUPinId@12@0@Z DD imagerel $LN4
	DD	imagerel $LN4+42
	DD	imagerel $unwind$?QueryNewLink@NodeEditor@ax@@YA_NPEAUPinId@12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BeginCreate@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z DD imagerel $LN17
	DD	imagerel $LN17+166
	DD	imagerel $unwind$?BeginCreate@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z DD imagerel $LN71
	DD	imagerel $LN71+160
	DD	imagerel $unwind$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z DD imagerel $LN71+160
	DD	imagerel $LN71+185
	DD	imagerel $chain$0$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z DD imagerel $LN71+185
	DD	imagerel $LN71+361
	DD	imagerel $chain$1$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z DD imagerel $LN71+361
	DD	imagerel $LN71+433
	DD	imagerel $chain$2$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z DD imagerel $LN71+433
	DD	imagerel $LN71+468
	DD	imagerel $chain$3$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z DD imagerel $LN31
	DD	imagerel $LN31+67
	DD	imagerel $unwind$?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z DD imagerel $LN31+67
	DD	imagerel $LN31+124
	DD	imagerel $chain$0$?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z DD imagerel $LN31+124
	DD	imagerel $LN31+138
	DD	imagerel $chain$2$?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PopStyleVar@NodeEditor@ax@@YAXH@Z DD imagerel $LN41
	DD	imagerel $LN41+198
	DD	imagerel $unwind$?PopStyleVar@NodeEditor@ax@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PushStyleVar@NodeEditor@ax@@YAXW4StyleVar@12@AEBUImVec4@@@Z DD imagerel $LN30
	DD	imagerel $LN30+101
	DD	imagerel $unwind$?PushStyleVar@NodeEditor@ax@@YAXW4StyleVar@12@AEBUImVec4@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ DD imagerel ??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ
	DD	imagerel ??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ+46
	DD	imagerel $unwind$??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GEditorContext@Detail@NodeEditor@ax@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+36
	DD	imagerel $unwind$??_GEditorContext@Detail@NodeEditor@ax@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DestroyEditor@NodeEditor@ax@@YAXPEAUEditorContext@12@@Z DD imagerel $LN15
	DD	imagerel $LN15+85
	DD	imagerel $unwind$?DestroyEditor@NodeEditor@ax@@YAXPEAUEditorContext@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z DD imagerel $LN8
	DD	imagerel $LN8+42
	DD	imagerel $unwind$?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z@4HA DD imagerel ?dtor$0@?0??CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z@4HA+29
	DD	imagerel $unwind$?dtor$0@?0??CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NavigateTo@EditorContext@Detail@NodeEditor@ax@@QEAAXAEBUImRect@@_NM@Z DD imagerel $LN4
	DD	imagerel $LN4+42
	DD	imagerel $unwind$?NavigateTo@EditorContext@Detail@NodeEditor@ax@@QEAAXAEBUImRect@@_NM@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavigateTo@EditorContext@Detail@NodeEditor@ax@@QEAAXAEBUImRect@@_NM@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z DB 04H
	DB	01cH
	DB	00H
	DB	' '
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z DB 028H
	DD	imagerel $stateUnwindMap$?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z
	DD	imagerel $ip2state$?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z DD 020611H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DestroyEditor@NodeEditor@ax@@YAXPEAUEditorContext@12@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GEditorContext@Detail@NodeEditor@ax@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ
	DD	imagerel $ip2state$??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ DD 010411H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PushStyleVar@NodeEditor@ax@@YAXW4StyleVar@12@AEBUImVec4@@@Z DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PopStyleVar@NodeEditor@ax@@YAXH@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z DD 020021H
	DD	043400H
	DD	imagerel $LN31
	DD	imagerel $LN31+67
	DD	imagerel $unwind$?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z DD 020521H
	DD	043405H
	DD	imagerel $LN31
	DD	imagerel $LN31+67
	DD	imagerel $unwind$?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z DD 021H
	DD	imagerel $LN71
	DD	imagerel $LN71+160
	DD	imagerel $unwind$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z DD 021H
	DD	imagerel $LN71+160
	DD	imagerel $LN71+185
	DD	imagerel $chain$0$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z DD 020521H
	DD	0df405H
	DD	imagerel $LN71+160
	DD	imagerel $LN71+185
	DD	imagerel $chain$0$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z DD 020521H
	DD	0c7405H
	DD	imagerel $LN71
	DD	imagerel $LN71+160
	DD	imagerel $unwind$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z DD 082219H
	DD	0f5413H
	DD	0e3413H
	DD	0e00f7213H
	DD	0600bc00dH
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BeginCreate@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z DD 031301H
	DD	036813H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryNewLink@NodeEditor@ax@@YA_NPEAUPinId@12@0@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AcceptNewItem@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z DD 031001H
	DD	036810H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RejectNewItem@NodeEditor@ax@@YAXAEBUImVec4@@M@Z DD 031001H
	DD	036810H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EndCreate@NodeEditor@ax@@YAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNodePosition@NodeEditor@ax@@YAXUNodeId@12@AEBUImVec2@@@Z DD 041919H
	DD	08340aH
	DD	07006520aH
	DD	imagerel __GSHandlerCheck
	DD	020H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+46
	DD	imagerel $unwind$?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z DD 041121H
	DD	0a7411H
	DD	0bf405H
	DD	imagerel $LN57
	DD	imagerel $LN57+46
	DD	imagerel $unwind$?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z DD 060d01H
	DD	0c340dH
	DD	0e009520dH
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+46
	DD	imagerel $unwind$?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z DD 041121H
	DD	0a7411H
	DD	0bf405H
	DD	imagerel $LN57
	DD	imagerel $LN57+46
	DD	imagerel $unwind$?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z DD 060d01H
	DD	0c340dH
	DD	0e009520dH
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteNode@NodeEditor@ax@@YA_NUNodeId@12@@Z DD 011319H
	DD	06204H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteLink@NodeEditor@ax@@YA_NULinkId@12@@Z DD 011319H
	DD	06204H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NavigateToContent@NodeEditor@ax@@YAXM@Z DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ShowNodeContextMenu@NodeEditor@ax@@YA_NPEAUNodeId@12@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ShowLinkContextMenu@NodeEditor@ax@@YA_NPEAULinkId@12@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z DD 021H
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z+32
	DD	imagerel $unwind$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z DD 041121H
	DD	0b7411H
	DD	0ce405H
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z+32
	DD	imagerel $unwind$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z DD 060d01H
	DD	0d340dH
	DD	0f009520dH
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z DD 021H
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z+32
	DD	imagerel $unwind$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z DD 041121H
	DD	0b7411H
	DD	0ce405H
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z
	DD	imagerel ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z+32
	DD	imagerel $unwind$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z DD 060d01H
	DD	0d340dH
	DD	0f009520dH
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@45@H@Z@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@45@H@Z@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?GetStyle@NodeEditor@ax@@YAAEAUStyle@12@XZ
_TEXT	SEGMENT
?GetStyle@NodeEditor@ax@@YAAEAUStyle@12@XZ PROC		; ax::NodeEditor::GetStyle, COMDAT

; 98   :     return s_Editor->GetStyle();

	mov	rax, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	sub	rax, -128				; ffffffffffffff80H

; 99   : }

	ret	0
?GetStyle@NodeEditor@ax@@YAAEAUStyle@12@XZ ENDP		; ax::NodeEditor::GetStyle
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_internal.h
;	COMDAT ?GetNodeBuilder@EditorContext@Detail@NodeEditor@ax@@QEAAAEAUNodeBuilder@234@XZ
_TEXT	SEGMENT
this$dead$ = 8
?GetNodeBuilder@EditorContext@Detail@NodeEditor@ax@@QEAAAEAUNodeBuilder@234@XZ PROC ; ax::NodeEditor::Detail::EditorContext::GetNodeBuilder, COMDAT

; 1307 :     NodeBuilder& GetNodeBuilder() { return m_NodeBuilder; }

	mov	rax, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	add	rax, 1032				; 00000408H
	ret	0
?GetNodeBuilder@EditorContext@Detail@NodeEditor@ax@@QEAAAEAUNodeBuilder@234@XZ ENDP ; ax::NodeEditor::Detail::EditorContext::GetNodeBuilder
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_internal.h
;	COMDAT ?GetItemCreator@EditorContext@Detail@NodeEditor@ax@@QEAAAEAUCreateItemAction@234@XZ
_TEXT	SEGMENT
this$dead$ = 8
?GetItemCreator@EditorContext@Detail@NodeEditor@ax@@QEAAAEAUCreateItemAction@234@XZ PROC ; ax::NodeEditor::Detail::EditorContext::GetItemCreator, COMDAT

; 1312 :     CreateItemAction& GetItemCreator() { return m_CreateItemAction; }

	mov	rax, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	add	rax, 1800				; 00000708H
	ret	0
?GetItemCreator@EditorContext@Detail@NodeEditor@ax@@QEAAAEAUCreateItemAction@234@XZ ENDP ; ax::NodeEditor::Detail::EditorContext::GetItemCreator
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_internal.h
;	COMDAT ?GetContextMenu@EditorContext@Detail@NodeEditor@ax@@QEAAAEAUContextMenuAction@234@XZ
_TEXT	SEGMENT
this$dead$ = 8
?GetContextMenu@EditorContext@Detail@NodeEditor@ax@@QEAAAEAUContextMenuAction@234@XZ PROC ; ax::NodeEditor::Detail::EditorContext::GetContextMenu, COMDAT

; 1314 :     ContextMenuAction& GetContextMenu() { return m_ContextMenuAction; }

	mov	rax, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	add	rax, 1712				; 000006b0H
	ret	0
?GetContextMenu@EditorContext@Detail@NodeEditor@ax@@QEAAAEAUContextMenuAction@234@XZ ENDP ; ax::NodeEditor::Detail::EditorContext::GetContextMenu
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_internal.h
;	COMDAT ?NavigateTo@EditorContext@Detail@NodeEditor@ax@@QEAAXAEBUImRect@@_NM@Z
_TEXT	SEGMENT
this$dead$ = 64
bounds$ = 72
zoomIn$dead$ = 80
duration$ = 88
?NavigateTo@EditorContext@Detail@NodeEditor@ax@@QEAAXAEBUImRect@@_NM@Z PROC ; ax::NodeEditor::Detail::EditorContext::NavigateTo, COMDAT

; 1435 :     {

$LN4:
	sub	rsp, 56					; 00000038H

; 1436 :         auto zoomMode = zoomIn ? NavigateAction::ZoomMode::WithMargin : NavigateAction::ZoomMode::None;
; 1437 :         m_NavigateAction.NavigateTo(bounds, zoomMode, duration);

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	mov	r8d, 2
	add	rcx, 1224				; 000004c8H
	mov	DWORD PTR [rsp+32], 0
	call	?NavigateTo@NavigateAction@Detail@NodeEditor@ax@@QEAAXAEBUImRect@@W4ZoomMode@1234@MW4NavigationReason@1234@@Z ; ax::NodeEditor::Detail::NavigateAction::NavigateTo

; 1438 :     }

	add	rsp, 56					; 00000038H
	ret	0
?NavigateTo@EditorContext@Detail@NodeEditor@ax@@QEAAXAEBUImRect@@_NM@Z ENDP ; ax::NodeEditor::Detail::EditorContext::NavigateTo
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z
_TEXT	SEGMENT
config$ = 48
$T1 = 56
?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z PROC ; ax::NodeEditor::CreateEditor, COMDAT

; 48   : {

$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 49   :     return reinterpret_cast<ax::NodeEditor::EditorContext*>(new ax::NodeEditor::Detail::EditorContext(config));

	mov	ecx, 2256				; 000008d0H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, rbx
	mov	rcx, rax
	call	??0EditorContext@Detail@NodeEditor@ax@@QEAA@PEBUConfig@23@@Z ; ax::NodeEditor::Detail::EditorContext::EditorContext
	npad	1

; 50   : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z ENDP ; ax::NodeEditor::CreateEditor
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
config$ = 48
$T1 = 56
?dtor$0@?0??CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z@4HA PROC ; `ax::NodeEditor::CreateEditor'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 2256				; 000008d0H
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??CreateEditor@NodeEditor@ax@@YAPEAUEditorContext@12@PEBUConfig@12@@Z@4HA ENDP ; `ax::NodeEditor::CreateEditor'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?DestroyEditor@NodeEditor@ax@@YAXPEAUEditorContext@12@@Z
_TEXT	SEGMENT
ctx$dead$ = 48
?DestroyEditor@NodeEditor@ax@@YAXPEAUEditorContext@12@@Z PROC ; ax::NodeEditor::DestroyEditor, COMDAT

; 53   : {

$LN15:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, QWORD PTR ?Context@UIAINBEditor@@3PEAUEditorContext@NodeEditor@ax@@EA ; UIAINBEditor::Context

; 54   :     auto lastContext = GetCurrentEditor();

	mov	rdi, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	cmp	rdi, rbx

; 55   : 
; 56   :     // Set context we're about to destroy as current, to give callback valid context
; 57   :     if (lastContext != ctx)

	je	SHORT $LN2@DestroyEdi

; 58   :         SetCurrentEditor(ctx);

	mov	QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA, rbx
$LN2@DestroyEdi:

; 59   : 
; 60   :     auto editor = reinterpret_cast<ax::NodeEditor::Detail::EditorContext*>(ctx);
; 61   : 
; 62   :     delete editor;

	test	rbx, rbx
	je	SHORT $LN8@DestroyEdi
	mov	rcx, rbx
	call	??1EditorContext@Detail@NodeEditor@ax@@QEAA@XZ ; ax::NodeEditor::Detail::EditorContext::~EditorContext
	mov	edx, 2256				; 000008d0H
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@DestroyEdi:

; 63   : 
; 64   :     if (lastContext != ctx)

	cmp	rdi, rbx
	je	SHORT $LN3@DestroyEdi

; 65   :         SetCurrentEditor(lastContext);

	mov	QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA, rdi
$LN3@DestroyEdi:

; 66   : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?DestroyEditor@NodeEditor@ax@@YAXPEAUEditorContext@12@@Z ENDP ; ax::NodeEditor::DestroyEditor
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GEditorContext@Detail@NodeEditor@ax@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GEditorContext@Detail@NodeEditor@ax@@QEAAPEAXI@Z PROC ; ax::NodeEditor::Detail::EditorContext::`scalar deleting destructor', COMDAT
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??1EditorContext@Detail@NodeEditor@ax@@QEAA@XZ ; ax::NodeEditor::Detail::EditorContext::~EditorContext
	mov	edx, 2256				; 000008d0H
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GEditorContext@Detail@NodeEditor@ax@@QEAAPEAXI@Z ENDP ; ax::NodeEditor::Detail::EditorContext::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
;	COMDAT ??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ
text$yd	SEGMENT
??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ PROC ; `ax::NodeEditor::GetConfig'::`9'::`dynamic atexit destructor for 's_EmptyConfig'', COMDAT
	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1906 :     inline ~ImVector()                                      { if (Data) IM_FREE(Data); } // Important: does not destruct anything

	mov	rcx, QWORD PTR ?s_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@23@PEAUEditorContext@23@@Z@4U423@A+72
	test	rcx, rcx
	je	SHORT $LN18@dynamic
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 4312 :         if (ImGuiContext* ctx = GImGui)

	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	test	rax, rax
	je	SHORT $LN12@dynamic

; 4313 :             ctx->IO.MetricsActiveAllocations--;

	dec	DWORD PTR [rax+244]
$LN12@dynamic:

; 1159 : static void    FreeWrapper(void* ptr, void* user_data)        { IM_UNUSED(user_data); free(ptr); }

	call	QWORD PTR __imp_free
	npad	1
$LN18@dynamic:
	add	rsp, 40					; 00000028H
	ret	0
??__Fs_EmptyConfig@?8??GetConfig@NodeEditor@ax@@YAAEBUConfig@12@PEAUEditorContext@12@@Z@YAXXZ ENDP ; `ax::NodeEditor::GetConfig'::`9'::`dynamic atexit destructor for 's_EmptyConfig''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?SetCurrentEditor@NodeEditor@ax@@YAXPEAUEditorContext@12@@Z
_TEXT	SEGMENT
ctx$ = 8
?SetCurrentEditor@NodeEditor@ax@@YAXPEAUEditorContext@12@@Z PROC ; ax::NodeEditor::SetCurrentEditor, COMDAT

; 88   :     s_Editor = reinterpret_cast<ax::NodeEditor::Detail::EditorContext*>(ctx);

	mov	QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA, rcx

; 89   : }

	ret	0
?SetCurrentEditor@NodeEditor@ax@@YAXPEAUEditorContext@12@@Z ENDP ; ax::NodeEditor::SetCurrentEditor
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?GetCurrentEditor@NodeEditor@ax@@YAPEAUEditorContext@12@XZ
_TEXT	SEGMENT
?GetCurrentEditor@NodeEditor@ax@@YAPEAUEditorContext@12@XZ PROC ; ax::NodeEditor::GetCurrentEditor, COMDAT

; 93   :     return reinterpret_cast<ax::NodeEditor::EditorContext*>(s_Editor);

	mov	rax, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA

; 94   : }

	ret	0
?GetCurrentEditor@NodeEditor@ax@@YAPEAUEditorContext@12@XZ ENDP ; ax::NodeEditor::GetCurrentEditor
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?PushStyleVar@NodeEditor@ax@@YAXW4StyleVar@12@AEBUImVec4@@@Z
_TEXT	SEGMENT
modifier$1 = 32
varIndex$dead$ = 80
value$ = 88
?PushStyleVar@NodeEditor@ax@@YAXW4StyleVar@12@AEBUImVec4@@@Z PROC ; ax::NodeEditor::PushStyleVar, COMDAT

; 127  : {

$LN30:
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5657 :     *var = value;

	movups	xmm0, XMMWORD PTR [rdx]
	mov	DWORD PTR modifier$1[rsp], 0
	movups	xmm1, XMMWORD PTR [rax+128]

; 5658 :     m_VarStack.push_back(modifier);

	lea	rcx, QWORD PTR [rax+600]
	movups	XMMWORD PTR [rax+128], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rdx, QWORD PTR [rcx+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5656 :     modifier.Value = *var;

	movups	XMMWORD PTR modifier$1[rsp+4], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	cmp	rdx, QWORD PTR [rcx+16]
	je	SHORT $LN18@PushStyleV
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR modifier$1[rsp]
	psrldq	xmm1, 12
	movups	XMMWORD PTR [rdx], xmm0
	movd	DWORD PTR [rdx+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 806  :         ++_Mylast;

	add	QWORD PTR [rcx+8], 20
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 129  : }

	add	rsp, 72					; 00000048H
	ret	0
$LN18@PushStyleV:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR modifier$1[rsp]
	call	??$_Emplace_reallocate@AEBUVarModifier@Style@Detail@NodeEditor@ax@@@?$vector@UVarModifier@Style@Detail@NodeEditor@ax@@V?$allocator@UVarModifier@Style@Detail@NodeEditor@ax@@@std@@@std@@AEAAPEAUVarModifier@Style@Detail@NodeEditor@ax@@QEAU23456@AEBU23456@@Z ; std::vector<ax::NodeEditor::Detail::Style::VarModifier,std::allocator<ax::NodeEditor::Detail::Style::VarModifier> >::_Emplace_reallocate<ax::NodeEditor::Detail::Style::VarModifier const &>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 129  : }

	add	rsp, 72					; 00000048H
	ret	0
?PushStyleVar@NodeEditor@ax@@YAXW4StyleVar@12@AEBUImVec4@@@Z ENDP ; ax::NodeEditor::PushStyleVar
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?PopStyleVar@NodeEditor@ax@@YAXH@Z
_TEXT	SEGMENT
count$dead$ = 48
?PopStyleVar@NodeEditor@ax@@YAXH@Z PROC			; ax::NodeEditor::PopStyleVar, COMDAT

; 132  : {

$LN41:
	sub	rsp, 40					; 00000028H
	mov	r9, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	sub	r9, -128				; ffffffffffffff80H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5666 :         if (auto floatValue = GetVarFloatAddr(modifier.Index))

	mov	rcx, r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1944 :         return _My_data._Mylast[-1];

	mov	r10, QWORD PTR [r9+480]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5666 :         if (auto floatValue = GetVarFloatAddr(modifier.Index))

	mov	r11d, DWORD PTR [r10-20]
	mov	edx, r11d
	call	?GetVarFloatAddr@Style@Detail@NodeEditor@ax@@AEAAPEAMW4StyleVar@34@@Z ; ax::NodeEditor::Detail::Style::GetVarFloatAddr
	test	rax, rax
	je	SHORT $LN6@PopStyleVa

; 5667 :             *floatValue = modifier.Value.x;

	mov	ecx, DWORD PTR [r10-16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 134  : }

	add	QWORD PTR [r9+480], -20
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5667 :             *floatValue = modifier.Value.x;

	mov	DWORD PTR [rax], ecx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 134  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN6@PopStyleVa:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5738 :     switch (idx)

	mov	ecx, r11d
	sub	ecx, 8
	je	SHORT $LN17@PopStyleVa
	sub	ecx, 1
	je	SHORT $LN18@PopStyleVa
	sub	ecx, 5
	je	SHORT $LN19@PopStyleVa
	sub	ecx, 1
	je	SHORT $LN20@PopStyleVa
	cmp	ecx, 1
	jne	SHORT $LN8@PopStyleVa

; 5744 :         case StyleVar_PivotScale:       return &PivotScale;

	lea	eax, QWORD PTR [rcx+99]
	jmp	SHORT $LN14@PopStyleVa
$LN20@PopStyleVa:

; 5743 :         case StyleVar_PivotSize:        return &PivotSize;

	mov	eax, 92					; 0000005cH
	jmp	SHORT $LN14@PopStyleVa
$LN19@PopStyleVa:

; 5742 :         case StyleVar_PivotAlignment:   return &PivotAlignment;

	mov	eax, 84					; 00000054H
	jmp	SHORT $LN14@PopStyleVa
$LN18@PopStyleVa:

; 5741 :         case StyleVar_TargetDirection:  return &TargetDirection;

	mov	eax, 60					; 0000003cH
	jmp	SHORT $LN14@PopStyleVa
$LN17@PopStyleVa:

; 5739 :     {
; 5740 :         case StyleVar_SourceDirection:  return &SourceDirection;

	mov	eax, 52					; 00000034H
$LN14@PopStyleVa:

; 5668 :         else if (auto vec2Value = GetVarVec2Addr(modifier.Index))

	lea	rcx, QWORD PTR [rax+r9]
	test	rcx, rcx
	je	SHORT $LN8@PopStyleVa
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	xmm0, DWORD PTR [r10-16]
	movss	xmm1, DWORD PTR [r10-12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5669 :             *vec2Value = ImVec2(modifier.Value.x, modifier.Value.y);

	movss	DWORD PTR [rcx], xmm0
	movss	DWORD PTR [rcx+4], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 134  : }

	add	QWORD PTR [r9+480], -20
	add	rsp, 40					; 00000028H
	ret	0
$LN8@PopStyleVa:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5670 :         else if (auto vec4Value = GetVarVec4Addr(modifier.Index))

	xor	eax, eax
	test	r11d, r11d
	cmove	rax, r9
	test	rax, rax
	je	SHORT $LN38@PopStyleVa

; 5671 :             *vec4Value = modifier.Value;

	movups	xmm0, XMMWORD PTR [r10-16]
	movups	XMMWORD PTR [rax], xmm0
$LN38@PopStyleVa:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 134  : }

	add	QWORD PTR [r9+480], -20
	add	rsp, 40					; 00000028H
	ret	0
?PopStyleVar@NodeEditor@ax@@YAXH@Z ENDP			; ax::NodeEditor::PopStyleVar
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?Begin@NodeEditor@ax@@YAXPEBDAEBUImVec2@@@Z
_TEXT	SEGMENT
id$dead$ = 8
size$ = 16
?Begin@NodeEditor@ax@@YAXPEBDAEBUImVec2@@@Z PROC	; ax::NodeEditor::Begin, COMDAT

; 138  :     s_Editor->Begin(id, size);

	mov	r8, rdx
	jmp	?Begin@EditorContext@Detail@NodeEditor@ax@@QEAAXPEBDAEBUImVec2@@@Z ; ax::NodeEditor::Detail::EditorContext::Begin
?Begin@NodeEditor@ax@@YAXPEBDAEBUImVec2@@@Z ENDP	; ax::NodeEditor::Begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?End@NodeEditor@ax@@YAXXZ
_TEXT	SEGMENT
?End@NodeEditor@ax@@YAXXZ PROC				; ax::NodeEditor::End, COMDAT

; 143  :     s_Editor->End();

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	jmp	?End@EditorContext@Detail@NodeEditor@ax@@QEAAXXZ ; ax::NodeEditor::Detail::EditorContext::End
?End@NodeEditor@ax@@YAXXZ ENDP				; ax::NodeEditor::End
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?BeginNode@NodeEditor@ax@@YAXUNodeId@12@@Z
_TEXT	SEGMENT
id$ = 8
?BeginNode@NodeEditor@ax@@YAXUNodeId@12@@Z PROC		; ax::NodeEditor::BeginNode, COMDAT

; 147  : {

	mov	rdx, rcx

; 148  :     s_Editor->GetNodeBuilder().Begin(id);

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	add	rcx, 1032				; 00000408H
	jmp	?Begin@NodeBuilder@Detail@NodeEditor@ax@@QEAAXUNodeId@34@@Z ; ax::NodeEditor::Detail::NodeBuilder::Begin
?BeginNode@NodeEditor@ax@@YAXUNodeId@12@@Z ENDP		; ax::NodeEditor::BeginNode
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?BeginPin@NodeEditor@ax@@YAXUPinId@12@W4PinKind@12@@Z
_TEXT	SEGMENT
id$ = 8
kind$ = 16
?BeginPin@NodeEditor@ax@@YAXUPinId@12@W4PinKind@12@@Z PROC ; ax::NodeEditor::BeginPin, COMDAT

; 152  : {

	mov	r8d, edx
	mov	rdx, rcx

; 153  :     s_Editor->GetNodeBuilder().BeginPin(id, kind);

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	add	rcx, 1032				; 00000408H
	jmp	?BeginPin@NodeBuilder@Detail@NodeEditor@ax@@QEAAXUPinId@34@W4PinKind@34@@Z ; ax::NodeEditor::Detail::NodeBuilder::BeginPin
?BeginPin@NodeEditor@ax@@YAXUPinId@12@W4PinKind@12@@Z ENDP ; ax::NodeEditor::BeginPin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?PinRect@NodeEditor@ax@@YAXAEBUImVec2@@0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
?PinRect@NodeEditor@ax@@YAXAEBUImVec2@@0@Z PROC		; ax::NodeEditor::PinRect, COMDAT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5419 :     m_CurrentPin->m_Bounds = ImRect(a, b);

	movsd	xmm0, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 523  :     constexpr ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                {}

	movsd	xmm1, QWORD PTR [rdx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 158  :     s_Editor->GetNodeBuilder().PinRect(a, b);

	mov	r8, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5419 :     m_CurrentPin->m_Bounds = ImRect(a, b);

	unpcklpd xmm0, xmm1
	mov	rax, QWORD PTR [r8+1048]
	movups	XMMWORD PTR [rax+48], xmm0

; 5420 :     m_CurrentPin->m_Bounds.Floor();

	mov	rcx, QWORD PTR [r8+1048]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 548  :     void        Floor()                             { Min.x = IM_FLOOR(Min.x); Min.y = IM_FLOOR(Min.y); Max.x = IM_FLOOR(Max.x); Max.y = IM_FLOOR(Max.y); }

	cvttss2si eax, DWORD PTR [rcx+48]
	movd	xmm0, eax
	cvttss2si eax, DWORD PTR [rcx+52]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [rcx+48], xmm0
	movd	xmm0, eax
	cvttss2si eax, DWORD PTR [rcx+56]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [rcx+52], xmm0
	movd	xmm0, eax
	cvttss2si eax, DWORD PTR [rcx+60]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [rcx+56], xmm0
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [rcx+60], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5421 :     m_ResolvePinRect     = false;

	mov	BYTE PTR [r8+1112], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 159  : }

	ret	0
?PinRect@NodeEditor@ax@@YAXAEBUImVec2@@0@Z ENDP		; ax::NodeEditor::PinRect
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?PinPivotRect@NodeEditor@ax@@YAXAEBUImVec2@@0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
?PinPivotRect@NodeEditor@ax@@YAXAEBUImVec2@@0@Z PROC	; ax::NodeEditor::PinPivotRect, COMDAT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 523  :     constexpr ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                {}

	movsd	xmm0, QWORD PTR [rdx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5428 :     m_CurrentPin->m_Pivot = ImRect(a, b);

	movsd	xmm1, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 163  :     s_Editor->GetNodeBuilder().PinPivotRect(a, b);

	mov	r8, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5428 :     m_CurrentPin->m_Pivot = ImRect(a, b);

	unpcklpd xmm1, xmm0
	mov	rax, QWORD PTR [r8+1048]
	movups	XMMWORD PTR [rax+64], xmm1

; 5429 :     m_ResolvePivot      = false;

	mov	BYTE PTR [r8+1113], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 164  : }

	ret	0
?PinPivotRect@NodeEditor@ax@@YAXAEBUImVec2@@0@Z ENDP	; ax::NodeEditor::PinPivotRect
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?EndPin@NodeEditor@ax@@YAXXZ
_TEXT	SEGMENT
?EndPin@NodeEditor@ax@@YAXXZ PROC			; ax::NodeEditor::EndPin, COMDAT

; 183  :     s_Editor->GetNodeBuilder().EndPin();

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	add	rcx, 1032				; 00000408H
	jmp	?EndPin@NodeBuilder@Detail@NodeEditor@ax@@QEAAXXZ ; ax::NodeEditor::Detail::NodeBuilder::EndPin
?EndPin@NodeEditor@ax@@YAXXZ ENDP			; ax::NodeEditor::EndPin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?EndNode@NodeEditor@ax@@YAXXZ
_TEXT	SEGMENT
?EndNode@NodeEditor@ax@@YAXXZ PROC			; ax::NodeEditor::EndNode, COMDAT

; 193  :     s_Editor->GetNodeBuilder().End();

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	add	rcx, 1032				; 00000408H
	jmp	?End@NodeBuilder@Detail@NodeEditor@ax@@QEAAXXZ ; ax::NodeEditor::Detail::NodeBuilder::End
?EndNode@NodeEditor@ax@@YAXXZ ENDP			; ax::NodeEditor::EndNode
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z
_TEXT	SEGMENT
nodeId$ = 48
?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z PROC ; ax::NodeEditor::GetNodeBackgroundDrawList, COMDAT

; 227  : {

$LN31:
	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 2111 :     return FindItemInLinear(m_Nodes, id);

	mov	r9, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA

; 2077 :     for (auto item : container)

	mov	rax, QWORD PTR [r9+624]
	mov	rdx, QWORD PTR [r9+632]
	cmp	rax, rdx
	je	SHORT $LN2@GetNodeBac
	npad	2
$LL10@GetNodeBac:
	mov	r8, QWORD PTR [rax+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.h

; 497  :     return lhs.Get() == rhs.Get();

	cmp	QWORD PTR [rax], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 2078 :         if (item.m_ID == id)

	je	SHORT $LN22@GetNodeBac

; 2077 :     for (auto item : container)

	add	rax, 16
	cmp	rax, rdx
	jne	SHORT $LL10@GetNodeBac
$LN2@GetNodeBac:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 231  :         return nullptr;

	xor	eax, eax

; 232  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN22@GetNodeBac:

; 228  :     if (auto node = s_Editor->FindNode(nodeId))

	test	r8, r8
	je	SHORT $LN2@GetNodeBac
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5480 :     if (node && node->m_IsLive)

	cmp	BYTE PTR [r8+16], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 228  :     if (auto node = s_Editor->FindNode(nodeId))

	mov	QWORD PTR [rsp+32], rbx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5480 :     if (node && node->m_IsLive)

	je	SHORT $LN16@GetNodeBac

; 5481 :     {
; 5482 :         auto drawList = Editor->GetDrawList();

	mov	rax, QWORD PTR [r9+1032]

; 5483 :         drawList->ChannelsSetCurrent(node->m_Channel + c_NodeUserBackgroundChannel);

	mov	r8d, DWORD PTR [r8+56]
	add	r8d, 2
	mov	rbx, QWORD PTR [rax+2216]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2828 :     inline void     ChannelsSetCurrent(int n)   { _Splitter.SetCurrentChannel(this, n); }

	mov	rdx, rbx
	lea	rcx, QWORD PTR [rbx+168]
	call	?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z ; ImDrawListSplitter::SetCurrentChannel
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 229  :         return s_Editor->GetNodeBuilder().GetUserBackgroundDrawList(node);

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+32]

; 232  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN16@GetNodeBac:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5487 :         return nullptr;

	xor	ebx, ebx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 229  :         return s_Editor->GetNodeBuilder().GetUserBackgroundDrawList(node);

	mov	eax, ebx
	mov	rbx, QWORD PTR [rsp+32]

; 232  : }

	add	rsp, 40					; 00000028H
	ret	0
?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z ENDP ; ax::NodeEditor::GetNodeBackgroundDrawList
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 32
__$ArrayPad$ = 48
id$ = 96
startPinId$ = 104
endPinId$ = 112
color$ = 120
thickness$ = 128
?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z PROC ; ax::NodeEditor::Link, COMDAT

; 235  : {

$LN71:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rbp
	push	rsi
	push	r12
	push	r14
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	movups	xmm0, XMMWORD PTR [r9]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 235  : {

	mov	rbx, rcx
	mov	r11, r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	lea	rcx, QWORD PTR $T4[rsp]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 235  : {

	mov	r10, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	movups	XMMWORD PTR $T4[rsp], xmm0

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	call	?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 236  :     return s_Editor->DoLink(id, startPinId, endPinId, ImColor(color), thickness);

	mov	rsi, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 1617 :     auto startPin = FindPin(startPinId);

	mov	rdx, r10
	mov	rcx, rsi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	mov	r12d, eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 1617 :     auto startPin = FindPin(startPinId);

	call	?FindPin@EditorContext@Detail@NodeEditor@ax@@QEAAPEAUPin@234@UPinId@34@@Z ; ax::NodeEditor::Detail::EditorContext::FindPin

; 1618 :     auto endPin   = FindPin(endPinId);

	mov	rcx, rsi
	mov	rdx, r11
	mov	r14, rax
	call	?FindPin@EditorContext@Detail@NodeEditor@ax@@QEAAPEAUPin@234@UPinId@34@@Z ; ax::NodeEditor::Detail::EditorContext::FindPin
	mov	rbp, rax

; 1619 : 
; 1620 :     if (!startPin || !startPin->m_IsLive || !endPin || !endPin->m_IsLive)

	test	r14, r14
	je	$LN9@Link
	cmp	BYTE PTR [r14+16], 0
	je	$LN9@Link
	test	rax, rax
	je	$LN9@Link
	cmp	BYTE PTR [rax+16], 0
	je	$LN9@Link

; 1621 :         return false;
; 1622 : 
; 1623 :     startPin->m_HasConnection = true;

	mov	BYTE PTR [r14+133], 1

; 2157 :     if (auto link = FindLink(id))

	mov	rdx, rbx
	mov	rcx, rsi

; 1624 :       endPin->m_HasConnection = true;

	mov	BYTE PTR [rax+133], 1
	mov	QWORD PTR [rsp+96], rdi

; 2157 :     if (auto link = FindLink(id))

	call	?FindLink@EditorContext@Detail@NodeEditor@ax@@QEAAPEAULink@234@ULinkId@34@@Z ; ax::NodeEditor::Detail::EditorContext::FindLink
	mov	rdi, rax
	test	rax, rax
	jne	$LN13@Link

; 2060 :     auto link = new Link(this, id);

	lea	ecx, QWORD PTR [rax+80]

; 2157 :     if (auto link = FindLink(id))

	mov	QWORD PTR [rsp+104], r15

; 2060 :     auto link = new Link(this, id);

	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T2[rsp], rax
	mov	rdi, rax

; 2061 :     m_Links.push_back({id, link});

	mov	QWORD PTR $T1[rsp], rbx
	mov	QWORD PTR $T1[rsp+8], rdi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_internal.h

; 226  :         : Editor(editor)

	mov	QWORD PTR [rax+8], rsi

; 227  :         , m_IsLive(true)

	mov	WORD PTR [rax+16], 1

; 228  :         , m_IsSelected(false)
; 229  :         , m_DeleteOnNewFrame(false)

	mov	BYTE PTR [rax+18], 0

; 472  :     {

	lea	rax, OFFSET FLAT:??_7Link@Detail@NodeEditor@ax@@6B@
	mov	QWORD PTR [rdi], rax

; 230  :     {
; 231  :     }
; 232  : 
; 233  :     virtual ~Object() = default;
; 234  : 
; 235  :     virtual ObjectId ID() = 0;
; 236  : 
; 237  :     bool IsVisible() const
; 238  :     {
; 239  :         if (!m_IsLive)
; 240  :             return false;
; 241  : 
; 242  :         const auto bounds = GetBounds();
; 243  : 
; 244  :         return ImGui::IsRectVisible(bounds.Min, bounds.Max);
; 245  :     }
; 246  : 
; 247  :     virtual void Reset() { m_IsLive = false; }
; 248  : 
; 249  :     virtual void Draw(ImDrawList* drawList, DrawFlags flags = None) = 0;
; 250  : 
; 251  :     virtual bool AcceptDrag() { return false; }
; 252  :     virtual void UpdateDrag(const ImVec2& offset) { IM_UNUSED(offset); }
; 253  :     virtual bool EndDrag() { return false; }
; 254  :     virtual ImVec2 DragStartLocation() { return GetBounds().Min; }
; 255  : 
; 256  :     virtual bool IsDraggable() { bool result = AcceptDrag(); EndDrag(); return result; }
; 257  :     virtual bool IsSelectable() { return false; }
; 258  : 
; 259  :     virtual bool TestHit(const ImVec2& point, float extraThickness = 0.0f) const
; 260  :     {
; 261  :         if (!m_IsLive)
; 262  :             return false;
; 263  : 
; 264  :         auto bounds = GetBounds();
; 265  :         if (extraThickness > 0)
; 266  :             bounds.Expand(extraThickness);
; 267  : 
; 268  :         return bounds.Contains(point);
; 269  :     }
; 270  : 
; 271  :     virtual bool TestHit(const ImRect& rect, bool allowIntersect = true) const
; 272  :     {
; 273  :         if (!m_IsLive)
; 274  :             return false;
; 275  : 
; 276  :         const auto bounds = GetBounds();
; 277  : 
; 278  :         return !ImRect_IsEmpty(bounds) && (allowIntersect ? bounds.Overlaps(rect) : rect.Contains(bounds));
; 279  :     }
; 280  : 
; 281  :     virtual ImRect GetBounds() const = 0;
; 282  : 
; 283  :     virtual Node*  AsNode()  { return nullptr; }
; 284  :     virtual Pin*   AsPin()   { return nullptr; }
; 285  :     virtual Link*  AsLink()  { return nullptr; }
; 286  : };
; 287  : 
; 288  : struct Pin final: Object
; 289  : {
; 290  :     using IdType = PinId;
; 291  : 
; 292  :     PinId   m_ID;
; 293  :     PinKind m_Kind;
; 294  :     Node*   m_Node;
; 295  :     ImRect  m_Bounds;
; 296  :     ImRect  m_Pivot;
; 297  :     Pin*    m_PreviousPin;
; 298  :     ImU32   m_Color;
; 299  :     ImU32   m_BorderColor;
; 300  :     float   m_BorderWidth;
; 301  :     float   m_Rounding;
; 302  :     int     m_Corners;
; 303  :     ImVec2  m_Dir;
; 304  :     float   m_Strength;
; 305  :     float   m_Radius;
; 306  :     float   m_ArrowSize;
; 307  :     float   m_ArrowWidth;
; 308  :     bool    m_SnapLinkToDir;
; 309  :     bool    m_HasConnection;
; 310  :     bool    m_HadConnection;
; 311  : 
; 312  :     Pin(EditorContext* editor, PinId id, PinKind kind)
; 313  :         : Object(editor)
; 314  :         , m_ID(id)
; 315  :         , m_Kind(kind)
; 316  :         , m_Node(nullptr)
; 317  :         , m_Bounds()
; 318  :         , m_PreviousPin(nullptr)
; 319  :         , m_Color(IM_COL32_WHITE)
; 320  :         , m_BorderColor(IM_COL32_BLACK)
; 321  :         , m_BorderWidth(0)
; 322  :         , m_Rounding(0)
; 323  :         , m_Corners(0)
; 324  :         , m_Dir(0, 0)
; 325  :         , m_Strength(0)
; 326  :         , m_Radius(0)
; 327  :         , m_ArrowSize(0)
; 328  :         , m_ArrowWidth(0)
; 329  :         , m_SnapLinkToDir(true)
; 330  :         , m_HasConnection(false)
; 331  :         , m_HadConnection(false)
; 332  :     {
; 333  :     }
; 334  : 
; 335  :     virtual ObjectId ID() override { return m_ID; }
; 336  : 
; 337  :     virtual void Reset() override final
; 338  :     {
; 339  :         m_HadConnection = m_HasConnection && m_IsLive;
; 340  :         m_HasConnection = false;
; 341  : 
; 342  :         Object::Reset();
; 343  :     }
; 344  : 
; 345  :     virtual void Draw(ImDrawList* drawList, DrawFlags flags = None) override final;
; 346  : 
; 347  :     ImVec2 GetClosestPoint(const ImVec2& p) const;
; 348  :     ImLine GetClosestLine(const Pin* pin) const;
; 349  : 
; 350  :     virtual ImRect GetBounds() const override final { return m_Bounds; }
; 351  : 
; 352  :     virtual Pin* AsPin() override final { return this; }
; 353  : };
; 354  : 
; 355  : enum class NodeType
; 356  : {
; 357  :     Node,
; 358  :     Group
; 359  : };
; 360  : 
; 361  : enum class NodeRegion : uint8_t
; 362  : {
; 363  :     None        = 0x00,
; 364  :     Top         = 0x01,
; 365  :     Bottom      = 0x02,
; 366  :     Left        = 0x04,
; 367  :     Right       = 0x08,
; 368  :     Center      = 0x10,
; 369  :     Header      = 0x20,
; 370  :     TopLeft     = Top | Left,
; 371  :     TopRight    = Top | Right,
; 372  :     BottomLeft  = Bottom | Left,
; 373  :     BottomRight = Bottom | Right,
; 374  : };
; 375  : 
; 376  : inline NodeRegion operator |(NodeRegion lhs, NodeRegion rhs) { return static_cast<NodeRegion>(static_cast<uint8_t>(lhs) | static_cast<uint8_t>(rhs)); }
; 377  : inline NodeRegion operator &(NodeRegion lhs, NodeRegion rhs) { return static_cast<NodeRegion>(static_cast<uint8_t>(lhs) & static_cast<uint8_t>(rhs)); }
; 378  : 
; 379  : 
; 380  : struct Node final: Object
; 381  : {
; 382  :     using IdType = NodeId;
; 383  : 
; 384  :     NodeId   m_ID;
; 385  :     NodeType m_Type;
; 386  :     ImRect   m_Bounds;
; 387  :     float    m_ZPosition;
; 388  :     int      m_Channel;
; 389  :     Pin*     m_LastPin;
; 390  :     ImVec2   m_DragStart;
; 391  : 
; 392  :     ImU32    m_Color;
; 393  :     ImU32    m_BorderColor;
; 394  :     float    m_BorderWidth;
; 395  :     float    m_Rounding;
; 396  : 
; 397  :     ImU32    m_GroupColor;
; 398  :     ImU32    m_GroupBorderColor;
; 399  :     float    m_GroupBorderWidth;
; 400  :     float    m_GroupRounding;
; 401  :     ImRect   m_GroupBounds;
; 402  : 
; 403  :     bool     m_HighlightConnectedLinks;
; 404  : 
; 405  :     bool     m_RestoreState;
; 406  :     bool     m_CenterOnScreen;
; 407  : 
; 408  :     Node(EditorContext* editor, NodeId id)
; 409  :         : Object(editor)
; 410  :         , m_ID(id)
; 411  :         , m_Type(NodeType::Node)
; 412  :         , m_Bounds()
; 413  :         , m_ZPosition(0.0f)
; 414  :         , m_Channel(0)
; 415  :         , m_LastPin(nullptr)
; 416  :         , m_DragStart()
; 417  :         , m_Color(IM_COL32_WHITE)
; 418  :         , m_BorderColor(IM_COL32_BLACK)
; 419  :         , m_BorderWidth(0)
; 420  :         , m_Rounding(0)
; 421  :         , m_GroupBounds()
; 422  :         , m_HighlightConnectedLinks(false)
; 423  :         , m_RestoreState(false)
; 424  :         , m_CenterOnScreen(false)
; 425  :     {
; 426  :     }
; 427  : 
; 428  :     virtual ObjectId ID() override { return m_ID; }
; 429  : 
; 430  :     bool AcceptDrag() override;
; 431  :     void UpdateDrag(const ImVec2& offset) override;
; 432  :     bool EndDrag() override; // return true, when changed
; 433  :     ImVec2 DragStartLocation() override { return m_DragStart; }
; 434  : 
; 435  :     virtual bool IsSelectable() override { return true; }
; 436  : 
; 437  :     virtual void Draw(ImDrawList* drawList, DrawFlags flags = None) override final;
; 438  :     void DrawBorder(ImDrawList* drawList, ImU32 color, float thickness = 1.0f, float offset = 0.0f);
; 439  : 
; 440  :     void GetGroupedNodes(std::vector<Node*>& result, bool append = false);
; 441  : 
; 442  :     void CenterOnScreenInNextFrame() { m_CenterOnScreen = true; }
; 443  : 
; 444  :     ImRect GetRegionBounds(NodeRegion region) const;
; 445  :     NodeRegion GetRegion(const ImVec2& point) const;
; 446  : 
; 447  :     virtual ImRect GetBounds() const override final { return m_Bounds; }
; 448  : 
; 449  :     virtual Node* AsNode() override final { return this; }
; 450  : };
; 451  : 
; 452  : struct Link final: Object
; 453  : {
; 454  :     using IdType = LinkId;
; 455  : 
; 456  :     LinkId m_ID;
; 457  :     Pin*   m_StartPin;
; 458  :     Pin*   m_EndPin;
; 459  :     ImU32  m_Color;
; 460  :     ImU32  m_HighlightColor;
; 461  :     float  m_Thickness;
; 462  :     ImVec2 m_Start;
; 463  :     ImVec2 m_End;
; 464  : 
; 465  :     Link(EditorContext* editor, LinkId id)
; 466  :         : Object(editor)
; 467  :         , m_ID(id)
; 468  :         , m_StartPin(nullptr)

	xor	eax, eax
	mov	QWORD PTR [rdi+32], rax

; 469  :         , m_EndPin(nullptr)

	mov	QWORD PTR [rdi+40], rax
	mov	QWORD PTR [rdi+24], rbx

; 470  :         , m_Color(IM_COL32_WHITE)

	mov	DWORD PTR [rdi+48], -1			; ffffffffH

; 471  :         , m_Thickness(1.0f)

	mov	QWORD PTR [rdi+56], 1065353216		; 3f800000H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 269  :     constexpr ImVec2()                      : x(0.0f), y(0.0f) { }

	mov	QWORD PTR [rdi+64], rax
	mov	DWORD PTR [rdi+72], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rdx, QWORD PTR [rsi+680]
	cmp	rdx, QWORD PTR [rsi+688]
	je	SHORT $LN31@Link
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rdx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 806  :         ++_Mylast;

	add	QWORD PTR [rsi+680], 16

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	jmp	SHORT $LN30@Link
$LN31@Link:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR [rsi+672]
	call	??$_Emplace_reallocate@U?$ObjectWrapper@ULink@Detail@NodeEditor@ax@@ULinkId@34@@Detail@NodeEditor@ax@@@?$vector@U?$ObjectWrapper@ULink@Detail@NodeEditor@ax@@ULinkId@34@@Detail@NodeEditor@ax@@V?$allocator@U?$ObjectWrapper@ULink@Detail@NodeEditor@ax@@ULinkId@34@@Detail@NodeEditor@ax@@@std@@@std@@AEAAPEAU?$ObjectWrapper@ULink@Detail@NodeEditor@ax@@ULinkId@34@@Detail@NodeEditor@ax@@QEAU2345@$$QEAU2345@@Z ; std::vector<ax::NodeEditor::Detail::ObjectWrapper<ax::NodeEditor::Detail::Link,ax::NodeEditor::LinkId>,std::allocator<ax::NodeEditor::Detail::ObjectWrapper<ax::NodeEditor::Detail::Link,ax::NodeEditor::LinkId> > >::_Emplace_reallocate<ax::NodeEditor::Detail::ObjectWrapper<ax::NodeEditor::Detail::Link,ax::NodeEditor::LinkId> >
$LN30@Link:

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	rdx, QWORD PTR [rsi+680]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

	xor	r9d, r9d
	mov	rcx, QWORD PTR [rsi+672]
	mov	r8, rdx
	sub	r8, rcx
	sar	r8, 4
	call	??$_Sort_unchecked@PEAU?$ObjectWrapper@ULink@Detail@NodeEditor@ax@@ULinkId@34@@Detail@NodeEditor@ax@@U?$less@X@std@@@std@@YAXPEAU?$ObjectWrapper@ULink@Detail@NodeEditor@ax@@ULinkId@34@@Detail@NodeEditor@ax@@0_JU?$less@X@0@@Z ; std::_Sort_unchecked<ax::NodeEditor::Detail::ObjectWrapper<ax::NodeEditor::Detail::Link,ax::NodeEditor::LinkId> *,std::less<void> >
	mov	r15, QWORD PTR [rsp+104]
$LN13@Link:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 1627 :     link->m_StartPin      = startPin;

	mov	QWORD PTR [rdi+32], r14
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	lea	rcx, QWORD PTR $T3[rsp]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 1628 :     link->m_EndPin        = endPin;

	mov	QWORD PTR [rdi+40], rbp

; 1629 :     link->m_Color         = color;

	mov	DWORD PTR [rdi+48], r12d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	movups	xmm0, XMMWORD PTR [rsi+428]
	movups	XMMWORD PTR $T3[rsp], xmm0

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	call	?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 1631 :     link->m_Thickness     = thickness;

	movss	xmm0, DWORD PTR thickness$[rsp]

; 1632 :     link->m_IsLive        = true;
; 1633 : 
; 1634 :     link->UpdateEndpoints();

	mov	rcx, rdi
	movss	DWORD PTR [rdi+56], xmm0
	mov	DWORD PTR [rdi+52], eax
	mov	BYTE PTR [rdi+16], 1
	call	?UpdateEndpoints@Link@Detail@NodeEditor@ax@@QEAAXXZ ; ax::NodeEditor::Detail::Link::UpdateEndpoints
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 236  :     return s_Editor->DoLink(id, startPinId, endPinId, ImColor(color), thickness);

	mov	rdi, QWORD PTR [rsp+96]
	mov	al, 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 1636 :     return true;

	jmp	SHORT $LN7@Link
$LN9@Link:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 236  :     return s_Editor->DoLink(id, startPinId, endPinId, ImColor(color), thickness);

	xor	al, al
$LN7@Link:

; 237  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+112]
	mov	rbp, QWORD PTR [rsp+120]
	add	rsp, 64					; 00000040H
	pop	r14
	pop	r12
	pop	rsi
	ret	0
?Link@NodeEditor@ax@@YA_NULinkId@12@UPinId@12@1AEBUImVec4@@M@Z ENDP ; ax::NodeEditor::Link
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?BeginCreate@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z
_TEXT	SEGMENT
$T1 = 32
color$ = 80
thickness$ = 88
?BeginCreate@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z PROC	; ax::NodeEditor::BeginCreate, COMDAT

; 246  : {

$LN17:
	sub	rsp, 72					; 00000048H

; 247  :     auto& context = s_Editor->GetItemCreator();

	mov	r8, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	mov	rdx, rcx
	movaps	XMMWORD PTR [rsp+48], xmm6
	movaps	xmm6, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4740 :     m_CurrentStage    = m_NextStage;

	mov	eax, DWORD PTR [r8+1820]
	mov	BYTE PTR [r8+1816], 1
	mov	DWORD PTR [r8+1824], eax

; 4741 :     m_UserAction      = Unknown;

	mov	DWORD PTR [r8+1832], 0

; 4742 :     m_LinkColor       = IM_COL32_WHITE;

	mov	DWORD PTR [r8+1836], -1			; ffffffffH

; 4743 :     m_LinkThickness   = 1.0f;

	mov	DWORD PTR [r8+1840], 1065353216		; 3f800000H

; 4744 : 
; 4745 :     if (m_CurrentStage == None)

	test	eax, eax
	je	SHORT $LN2@BeginCreat

; 4748 :     m_LastChannel = Editor->GetDrawList()->_Splitter._Current;

	mov	rax, QWORD PTR [r8+1808]
	mov	rcx, QWORD PTR [rax+2216]
	mov	eax, DWORD PTR [rcx+168]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	lea	rcx, QWORD PTR $T1[rsp]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4748 :     m_LastChannel = Editor->GetDrawList()->_Splitter._Current;

	mov	DWORD PTR [r8+1880], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR $T1[rsp], xmm0

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	call	?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4731 :     m_LinkColor     = color;

	mov	DWORD PTR [r8+1836], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 252  :         return true;

	mov	al, 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4732 :     m_LinkThickness = thickness;

	movss	DWORD PTR [r8+1840], xmm6
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 256  : }

	movaps	xmm6, XMMWORD PTR [rsp+48]
	add	rsp, 72					; 00000048H
	ret	0
$LN2@BeginCreat:
	movaps	xmm6, XMMWORD PTR [rsp+48]
	xor	al, al
	add	rsp, 72					; 00000048H
	ret	0
?BeginCreate@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z ENDP	; ax::NodeEditor::BeginCreate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?QueryNewLink@NodeEditor@ax@@YA_NPEAUPinId@12@0@Z
_TEXT	SEGMENT
startId$ = 48
endId$ = 56
?QueryNewLink@NodeEditor@ax@@YA_NPEAUPinId@12@0@Z PROC	; ax::NodeEditor::QueryNewLink, COMDAT

; 259  : {

$LN4:
	sub	rsp, 40					; 00000028H
	mov	r9, rcx

; 260  :     using Result = ax::NodeEditor::Detail::CreateItemAction::Result;
; 261  : 
; 262  :     auto& context = s_Editor->GetItemCreator();
; 263  : 
; 264  :     return context.QueryLink(startId, endId) == Result::True;

	mov	r8, rdx
	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	mov	rdx, r9
	add	rcx, 1800				; 00000708H
	call	?QueryLink@CreateItemAction@Detail@NodeEditor@ax@@QEAA?AW4Result@1234@PEAUPinId@34@0@Z ; ax::NodeEditor::Detail::CreateItemAction::QueryLink
	test	eax, eax
	sete	al

; 265  : }

	add	rsp, 40					; 00000028H
	ret	0
?QueryNewLink@NodeEditor@ax@@YA_NPEAUPinId@12@0@Z ENDP	; ax::NodeEditor::QueryNewLink
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?AcceptNewItem@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z
_TEXT	SEGMENT
$T1 = 32
color$ = 80
thickness$ = 88
?AcceptNewItem@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z PROC	; ax::NodeEditor::AcceptNewItem, COMDAT

; 312  : {

$LN22:
	sub	rsp, 72					; 00000048H

; 313  :     using Result = ax::NodeEditor::Detail::CreateItemAction::Result;
; 314  : 
; 315  :     auto& context = s_Editor->GetItemCreator();

	mov	r8, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	movaps	XMMWORD PTR [rsp+48], xmm6
	movaps	xmm6, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4838 :     if (!m_InActive || m_CurrentStage == None || m_ItemType == NoItem)

	cmp	BYTE PTR [r8+1816], 0
	je	SHORT $LN6@AcceptNewI
	mov	eax, DWORD PTR [r8+1824]
	test	eax, eax
	je	SHORT $LN6@AcceptNewI
	cmp	DWORD PTR [r8+1828], 0
	je	SHORT $LN6@AcceptNewI

; 4840 : 
; 4841 :     m_UserAction = UserAccept;

	mov	DWORD PTR [r8+1832], 2

; 4842 : 
; 4843 :     if (m_CurrentStage == Create)

	cmp	eax, 2
	jne	SHORT $LN7@AcceptNewI

; 4844 :     {
; 4845 :         m_NextStage = None;

	xor	r9d, r9d
	mov	DWORD PTR [r8+1820], r9d

; 4846 :         m_ItemType  = NoItem;

	mov	DWORD PTR [r8+1828], r9d

; 4847 :         m_LinkStart = nullptr;

	mov	QWORD PTR [r8+1848], r9

; 4848 :         m_LinkEnd   = nullptr;

	mov	QWORD PTR [r8+1856], r9

; 4849 :         return True;

	jmp	SHORT $LN16@AcceptNewI
$LN7@AcceptNewI:

; 4850 :     }
; 4851 :     else
; 4852 :         return False;

	mov	r9d, 1
$LN16@AcceptNewI:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	movups	xmm0, XMMWORD PTR [rcx]

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	lea	rcx, QWORD PTR $T1[rsp]

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	movups	XMMWORD PTR $T1[rsp], xmm0

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	call	?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 321  :     return result == Result::True;

	test	r9d, r9d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4731 :     m_LinkColor     = color;

	mov	DWORD PTR [r8+1836], eax

; 4732 :     m_LinkThickness = thickness;

	movss	DWORD PTR [r8+1840], xmm6
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 321  :     return result == Result::True;

	sete	al

; 322  : }

	movaps	xmm6, XMMWORD PTR [rsp+48]
	add	rsp, 72					; 00000048H
	ret	0
$LN6@AcceptNewI:
	movaps	xmm6, XMMWORD PTR [rsp+48]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4839 :         return Indeterminate;

	mov	r9d, 2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 321  :     return result == Result::True;

	test	r9d, r9d
	sete	al

; 322  : }

	add	rsp, 72					; 00000048H
	ret	0
?AcceptNewItem@NodeEditor@ax@@YA_NAEBUImVec4@@M@Z ENDP	; ax::NodeEditor::AcceptNewItem
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?RejectNewItem@NodeEditor@ax@@YAXAEBUImVec4@@M@Z
_TEXT	SEGMENT
$T1 = 32
color$ = 80
thickness$ = 88
?RejectNewItem@NodeEditor@ax@@YAXAEBUImVec4@@M@Z PROC	; ax::NodeEditor::RejectNewItem, COMDAT

; 332  : {

$LN19:
	sub	rsp, 72					; 00000048H

; 333  :     using Result = ax::NodeEditor::Detail::CreateItemAction::Result;
; 334  : 
; 335  :     auto& context = s_Editor->GetItemCreator();

	mov	r8, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	movaps	XMMWORD PTR [rsp+48], xmm6
	movaps	xmm6, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4826 :     if (!m_InActive || m_CurrentStage == None || m_ItemType == NoItem)

	cmp	BYTE PTR [r8+1816], 0
	je	SHORT $LN2@RejectNewI
	cmp	DWORD PTR [r8+1824], 0
	je	SHORT $LN2@RejectNewI
	cmp	DWORD PTR [r8+1828], 0
	je	SHORT $LN2@RejectNewI

; 4827 :         return Indeterminate;
; 4828 : 
; 4829 :     m_UserAction = UserReject;

	mov	DWORD PTR [r8+1832], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	movups	xmm0, XMMWORD PTR [rcx]

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	lea	rcx, QWORD PTR $T1[rsp]

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	movups	XMMWORD PTR $T1[rsp], xmm0

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	call	?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4731 :     m_LinkColor     = color;

	mov	DWORD PTR [r8+1836], eax

; 4732 :     m_LinkThickness = thickness;

	movss	DWORD PTR [r8+1840], xmm6
$LN2@RejectNewI:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 339  : }

	movaps	xmm6, XMMWORD PTR [rsp+48]
	add	rsp, 72					; 00000048H
	ret	0
?RejectNewItem@NodeEditor@ax@@YAXAEBUImVec4@@M@Z ENDP	; ax::NodeEditor::RejectNewItem
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?EndCreate@NodeEditor@ax@@YAXXZ
_TEXT	SEGMENT
?EndCreate@NodeEditor@ax@@YAXXZ PROC			; ax::NodeEditor::EndCreate, COMDAT

; 342  : {

$LN13:
	push	rbx
	sub	rsp, 32					; 00000020H

; 343  :     auto& context = s_Editor->GetItemCreator();

	mov	rbx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4757 :     if (m_IsInGlobalSpace)

	cmp	BYTE PTR [rbx+1884], 0
	je	SHORT $LN9@EndCreate

; 4758 :     {
; 4759 :         ImGui::PopClipRect();

	call	?PopClipRect@ImGui@@YAXXZ		; ImGui::PopClipRect

; 4760 :         Editor->Resume(SuspendFlags::KeepSplitter);

	mov	rcx, QWORD PTR [rbx+1808]
	mov	dl, 1
	call	?Resume@EditorContext@Detail@NodeEditor@ax@@QEAAXW4SuspendFlags@234@@Z ; ax::NodeEditor::Detail::EditorContext::Resume

; 4761 : 
; 4762 :         auto currentChannel = Editor->GetDrawList()->_Splitter._Current;

	mov	rax, QWORD PTR [rbx+1808]

; 4763 :         if (currentChannel != m_LastChannel)

	mov	r8d, DWORD PTR [rbx+1880]
	mov	rdx, QWORD PTR [rax+2216]
	lea	rcx, QWORD PTR [rdx+168]
	cmp	DWORD PTR [rcx], r8d
	je	SHORT $LN5@EndCreate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2828 :     inline void     ChannelsSetCurrent(int n)   { _Splitter.SetCurrentChannel(this, n); }

	call	?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z ; ImDrawListSplitter::SetCurrentChannel
$LN5@EndCreate:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4766 :         m_IsInGlobalSpace = false;

	mov	BYTE PTR [rbx+1884], 0
$LN9@EndCreate:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 346  : }

	mov	BYTE PTR [rbx+1816], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?EndCreate@NodeEditor@ax@@YAXXZ ENDP			; ax::NodeEditor::EndCreate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_extra_math.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?SetNodePosition@NodeEditor@ax@@YAXUNodeId@12@AEBUImVec2@@@Z
_TEXT	SEGMENT
__$ArrayPad$ = 32
nodeId$ = 64
position$ = 72
?SetNodePosition@NodeEditor@ax@@YAXUNodeId@12@AEBUImVec2@@@Z PROC ; ax::NodeEditor::SetNodePosition, COMDAT

; 391  : {

$LN71:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 392  :     s_Editor->SetNodePosition(nodeId, position);

	mov	rbx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	mov	rdi, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 2077 :     for (auto item : container)

	mov	rax, QWORD PTR [rbx+624]
	mov	r8, QWORD PTR [rbx+632]
	cmp	rax, r8
	je	SHORT $LN61@SetNodePos
$LL12@SetNodePos:
	mov	rdx, QWORD PTR [rax+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.h

; 497  :     return lhs.Get() == rhs.Get();

	cmp	QWORD PTR [rax], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 2078 :         if (item.m_ID == id)

	je	SHORT $LN50@SetNodePos

; 2077 :     for (auto item : container)

	add	rax, 16
	cmp	rax, r8
	jne	SHORT $LL12@SetNodePos

; 2750 :         if (settings.m_ID == id)

	jmp	SHORT $LN61@SetNodePos
$LN50@SetNodePos:

; 1642 :     if (!node)

	test	rdx, rdx
	jne	SHORT $LN4@SetNodePos
$LN61@SetNodePos:

; 1643 :     {
; 1644 :         node = CreateNode(nodeId);

	mov	rdx, rcx
	mov	rcx, rbx
	call	?CreateNode@EditorContext@Detail@NodeEditor@ax@@QEAAPEAUNode@234@UNodeId@34@@Z ; ax::NodeEditor::Detail::EditorContext::CreateNode
	mov	rdx, rax

; 1645 :         node->m_IsLive = false;

	mov	BYTE PTR [rax+16], 0
$LN4@SetNodePos:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_extra_math.inl

; 30   :     return lhs.x != rhs.x || lhs.y != rhs.y;

	movss	xmm4, DWORD PTR [rdx+36]
	movss	xmm3, DWORD PTR [rdi]
	ucomiss	xmm4, xmm3
	jp	SHORT $LN59@SetNodePos
	jne	SHORT $LN59@SetNodePos
	movss	xmm0, DWORD PTR [rdx+40]
	ucomiss	xmm0, DWORD PTR [rdi+4]
	jp	SHORT $LN59@SetNodePos
	je	$LN32@SetNodePos
$LN59@SetNodePos:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm2, DWORD PTR [rdi+4]
	subss	xmm3, xmm4
	subss	xmm2, DWORD PTR [rdx+40]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 543  :     void        Translate(const ImVec2& d)          { Min.x += d.x; Min.y += d.y; Max.x += d.x; Max.y += d.y; }

	movaps	xmm0, xmm3
	addss	xmm3, DWORD PTR [rdx+44]
	addss	xmm0, xmm4
	movaps	xmm1, xmm2
	addss	xmm1, DWORD PTR [rdx+40]
	addss	xmm2, DWORD PTR [rdx+48]

; 548  :     void        Floor()                             { Min.x = IM_FLOOR(Min.x); Min.y = IM_FLOOR(Min.y); Max.x = IM_FLOOR(Max.x); Max.y = IM_FLOOR(Max.y); }

	cvttss2si eax, xmm0
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	cvttss2si eax, xmm1
	movss	DWORD PTR [rdx+36], xmm0
	movd	xmm1, eax
	cvttss2si eax, xmm3
	cvtdq2ps xmm1, xmm1
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [rdx+40], xmm1
	movss	DWORD PTR [rdx+44], xmm0
	cvttss2si eax, xmm2
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [rdx+48], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 2786 :     m_DirtyReason = m_DirtyReason | reason;

	or	DWORD PTR [rbx+2132], 2
	mov	BYTE PTR [rbx+2128], 1

; 2787 : 
; 2788 :     if (node)

	test	rdx, rdx
	je	SHORT $LN32@SetNodePos

; 2789 :     {
; 2790 :         auto settings = FindNode(node->m_ID);

	mov	rax, QWORD PTR [rdx+24]

; 2749 :     for (auto& settings : m_Nodes)

	mov	rdx, QWORD PTR [rbx+2144]
	mov	rcx, QWORD PTR [rbx+2136]
	cmp	rcx, rdx
	je	SHORT $LN38@SetNodePos
$LL39@SetNodePos:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.h

; 497  :     return lhs.Get() == rhs.Get();

	cmp	QWORD PTR [rcx], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 2750 :         if (settings.m_ID == id)

	je	SHORT $LN36@SetNodePos

; 2674 : }
; 2675 : 
; 2676 : ed::json::value ed::NodeSettings::Serialize()
; 2677 : {
; 2678 :     json::value result;
; 2679 :     result["location"]["x"] = m_Location.x;
; 2680 :     result["location"]["y"] = m_Location.y;
; 2681 : 
; 2682 :     if (m_GroupSize.x > 0 || m_GroupSize.y > 0)
; 2683 :     {
; 2684 :         result["group_size"]["x"] = m_GroupSize.x;
; 2685 :         result["group_size"]["y"] = m_GroupSize.y;
; 2686 :     }
; 2687 : 
; 2688 :     return result;
; 2689 : }
; 2690 : 
; 2691 : bool ed::NodeSettings::Parse(const std::string& string, NodeSettings& settings)
; 2692 : {
; 2693 :     auto settingsValue = json::value::parse(string);
; 2694 :     if (settingsValue.is_discarded())
; 2695 :         return false;
; 2696 : 
; 2697 :     return Parse(settingsValue, settings);
; 2698 : }
; 2699 : 
; 2700 : bool ed::NodeSettings::Parse(const json::value& data, NodeSettings& result)
; 2701 : {
; 2702 :     if (!data.is_object())
; 2703 :         return false;
; 2704 : 
; 2705 :     auto tryParseVector = [](const json::value& v, ImVec2& result) -> bool
; 2706 :     {
; 2707 :         if (v.is_object())
; 2708 :         {
; 2709 :             auto xValue = v["x"];
; 2710 :             auto yValue = v["y"];
; 2711 : 
; 2712 :             if (xValue.is_number() && yValue.is_number())
; 2713 :             {
; 2714 :                 result.x = static_cast<float>(xValue.get<double>());
; 2715 :                 result.y = static_cast<float>(yValue.get<double>());
; 2716 : 
; 2717 :                 return true;
; 2718 :             }
; 2719 :         }
; 2720 : 
; 2721 :         return false;
; 2722 :     };
; 2723 : 
; 2724 :     if (!tryParseVector(data["location"], result.m_Location))
; 2725 :         return false;
; 2726 : 
; 2727 :     if (data.contains("group_size") && !tryParseVector(data["group_size"], result.m_GroupSize))
; 2728 :         return false;
; 2729 : 
; 2730 :     return true;
; 2731 : }
; 2732 : 
; 2733 : 
; 2734 : 
; 2735 : 
; 2736 : //------------------------------------------------------------------------------
; 2737 : //
; 2738 : // Settings
; 2739 : //
; 2740 : //------------------------------------------------------------------------------
; 2741 : ed::NodeSettings* ed::Settings::AddNode(NodeId id)
; 2742 : {
; 2743 :     m_Nodes.push_back(NodeSettings(id));
; 2744 :     return &m_Nodes.back();
; 2745 : }
; 2746 : 
; 2747 : ed::NodeSettings* ed::Settings::FindNode(NodeId id)
; 2748 : {
; 2749 :     for (auto& settings : m_Nodes)

	add	rcx, 40					; 00000028H
	cmp	rcx, rdx
	jne	SHORT $LL39@SetNodePos
$LN38@SetNodePos:

; 2751 :             return &settings;
; 2752 : 
; 2753 :     return nullptr;

	xor	ecx, ecx
$LN36@SetNodePos:

; 2673 :     m_DirtyReason = m_DirtyReason | reason;

	or	DWORD PTR [rcx+36], 2
	mov	BYTE PTR [rcx+34], 1
$LN32@SetNodePos:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 393  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?SetNodePosition@NodeEditor@ax@@YAXUNodeId@12@AEBUImVec2@@@Z ENDP ; ax::NodeEditor::SetNodePosition
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?Suspend@NodeEditor@ax@@YAXXZ
_TEXT	SEGMENT
?Suspend@NodeEditor@ax@@YAXXZ PROC			; ax::NodeEditor::Suspend, COMDAT

; 434  :     s_Editor->Suspend();

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	xor	edx, edx
	jmp	?Suspend@EditorContext@Detail@NodeEditor@ax@@QEAAXW4SuspendFlags@234@@Z ; ax::NodeEditor::Detail::EditorContext::Suspend
?Suspend@NodeEditor@ax@@YAXXZ ENDP			; ax::NodeEditor::Suspend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?Resume@NodeEditor@ax@@YAXXZ
_TEXT	SEGMENT
?Resume@NodeEditor@ax@@YAXXZ PROC			; ax::NodeEditor::Resume, COMDAT

; 439  :     s_Editor->Resume();

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	xor	edx, edx
	jmp	?Resume@EditorContext@Detail@NodeEditor@ax@@QEAAXW4SuspendFlags@234@@Z ; ax::NodeEditor::Detail::EditorContext::Resume
?Resume@NodeEditor@ax@@YAXXZ ENDP			; ax::NodeEditor::Resume
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z
_TEXT	SEGMENT
$T1 = 32
nodes$dead$ = 80
size$dead$ = 88
?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z PROC ; ax::NodeEditor::GetSelectedNodes, COMDAT

; 463  : {

$LN57:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	r14
	sub	rsp, 48					; 00000030H

; 464  :     return BuildIdList(s_Editor->GetSelectedObjects(), nodes, size, [](auto object)

	mov	rax, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA

; 26   :         int count = 0;

	xor	ebp, ebp

; 464  :     return BuildIdList(s_Editor->GetSelectedObjects(), nodes, size, [](auto object)

	mov	esi, 1

; 27   :         for (auto object : container)

	mov	rbx, QWORD PTR [rax+696]
	mov	r14, QWORD PTR [rax+704]
	cmp	rbx, r14
	je	SHORT $LN48@GetSelecte
	mov	QWORD PTR [rsp+88], r15
	lea	r15, OFFSET FLAT:?ContextNodeId@UIAINBEditor@@3UNodeId@NodeEditor@ax@@A ; UIAINBEditor::ContextNodeId
	mov	QWORD PTR [rsp+80], rdi
	npad	1
$LL6@GetSelecte:

; 28   :         {
; 29   :             if (listSize <= 0)

	test	esi, esi
	jle	SHORT $LN47@GetSelecte

; 27   :         for (auto object : container)

	mov	rdi, QWORD PTR [rbx]

; 466  :         return object->AsNode() != nullptr;

	mov	rcx, rdi
	mov	rax, QWORD PTR [rdi]
	call	QWORD PTR [rax+104]
	test	rax, rax

; 32   :             if (accept(object))

	je	SHORT $LN4@GetSelecte

; 33   :             {
; 34   :                 list[count] = I(object->ID().AsPointer());

	mov	rax, QWORD PTR [rdi]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rdi
	call	QWORD PTR [rax+8]

; 35   :                 ++count;

	inc	ebp
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [r15], rcx
	add	r15, 8

; 36   :                 --listSize;}

	dec	esi
$LN4@GetSelecte:

; 27   :         for (auto object : container)

	add	rbx, 8
	cmp	rbx, r14
	jne	SHORT $LL6@GetSelecte
$LN47@GetSelecte:
	mov	rdi, QWORD PTR [rsp+80]

; 464  :     return BuildIdList(s_Editor->GetSelectedObjects(), nodes, size, [](auto object)

	mov	eax, ebp
	mov	r15, QWORD PTR [rsp+88]

; 467  :     });
; 468  : }

	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 48					; 00000030H
	pop	r14
	pop	rsi
	pop	rbp
	ret	0
$LN48@GetSelecte:
	mov	rbx, QWORD PTR [rsp+96]
	mov	eax, ebp
	add	rsp, 48					; 00000030H
	pop	r14
	pop	rsi
	pop	rbp
	ret	0
?GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@12@H@Z ENDP ; ax::NodeEditor::GetSelectedNodes
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z
_TEXT	SEGMENT
$T1 = 32
links$dead$ = 80
size$dead$ = 88
?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z PROC ; ax::NodeEditor::GetSelectedLinks, COMDAT

; 471  : {

$LN57:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	r14
	sub	rsp, 48					; 00000030H

; 472  :     return BuildIdList(s_Editor->GetSelectedObjects(), links, size, [](auto object)

	mov	rax, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA

; 26   :         int count = 0;

	xor	ebp, ebp

; 472  :     return BuildIdList(s_Editor->GetSelectedObjects(), links, size, [](auto object)

	mov	esi, 1

; 27   :         for (auto object : container)

	mov	rbx, QWORD PTR [rax+696]
	mov	r14, QWORD PTR [rax+704]
	cmp	rbx, r14
	je	SHORT $LN48@GetSelecte
	mov	QWORD PTR [rsp+88], r15
	lea	r15, OFFSET FLAT:?ContextLinkId@UIAINBEditor@@3ULinkId@NodeEditor@ax@@A ; UIAINBEditor::ContextLinkId
	mov	QWORD PTR [rsp+80], rdi
	npad	1
$LL6@GetSelecte:

; 28   :         {
; 29   :             if (listSize <= 0)

	test	esi, esi
	jle	SHORT $LN47@GetSelecte

; 27   :         for (auto object : container)

	mov	rdi, QWORD PTR [rbx]

; 474  :         return object->AsLink() != nullptr;

	mov	rcx, rdi
	mov	rax, QWORD PTR [rdi]
	call	QWORD PTR [rax+120]
	test	rax, rax

; 32   :             if (accept(object))

	je	SHORT $LN4@GetSelecte

; 33   :             {
; 34   :                 list[count] = I(object->ID().AsPointer());

	mov	rax, QWORD PTR [rdi]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rdi
	call	QWORD PTR [rax+8]

; 35   :                 ++count;

	inc	ebp
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [r15], rcx
	add	r15, 8

; 36   :                 --listSize;}

	dec	esi
$LN4@GetSelecte:

; 27   :         for (auto object : container)

	add	rbx, 8
	cmp	rbx, r14
	jne	SHORT $LL6@GetSelecte
$LN47@GetSelecte:
	mov	rdi, QWORD PTR [rsp+80]

; 472  :     return BuildIdList(s_Editor->GetSelectedObjects(), links, size, [](auto object)

	mov	eax, ebp
	mov	r15, QWORD PTR [rsp+88]

; 475  :     });
; 476  : }

	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 48					; 00000030H
	pop	r14
	pop	rsi
	pop	rbp
	ret	0
$LN48@GetSelecte:
	mov	rbx, QWORD PTR [rsp+96]
	mov	eax, ebp
	add	rsp, 48					; 00000030H
	pop	r14
	pop	rsi
	pop	rbp
	ret	0
?GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@12@H@Z ENDP ; ax::NodeEditor::GetSelectedLinks
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?DeleteNode@NodeEditor@ax@@YA_NUNodeId@12@@Z
_TEXT	SEGMENT
object$ = 32
__$ArrayPad$ = 40
nodeId$ = 64
?DeleteNode@NodeEditor@ax@@YA_NUNodeId@12@@Z PROC	; ax::NodeEditor::DeleteNode, COMDAT

; 534  : {

$LN31:
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 2111 :     return FindItemInLinear(m_Nodes, id);

	mov	rdx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA

; 2077 :     for (auto item : container)

	mov	rax, QWORD PTR [rdx+624]
	mov	r8, QWORD PTR [rdx+632]
	cmp	rax, r8
	je	SHORT $LN2@DeleteNode
	npad	3
$LL10@DeleteNode:
	mov	r9, QWORD PTR [rax+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.h

; 497  :     return lhs.Get() == rhs.Get();

	cmp	QWORD PTR [rax], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 2078 :         if (item.m_ID == id)

	je	SHORT $LN26@DeleteNode

; 2077 :     for (auto item : container)

	add	rax, 16
	cmp	rax, r8
	jne	SHORT $LL10@DeleteNode
$LN2@DeleteNode:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 539  : }

	xor	al, al
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
$LN26@DeleteNode:

; 535  :     if (auto node = s_Editor->FindNode(nodeId))

	test	r9, r9
	je	SHORT $LN2@DeleteNode
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5016 :     if (Editor->GetCurrentAction() != nullptr)

	mov	rax, QWORD PTR [rdx+1896]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 536  :         return s_Editor->GetItemDeleter().Add(node);

	mov	QWORD PTR object$[rsp], r9
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5016 :     if (Editor->GetCurrentAction() != nullptr)

	cmp	QWORD PTR [rax+1216], 0
	jne	SHORT $LN2@DeleteNode
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rax, QWORD PTR [rdx+1920]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5019 :     m_ManuallyDeletedObjects.push_back(object);

	lea	rcx, QWORD PTR [rdx+1912]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	cmp	rax, QWORD PTR [rdx+1928]
	je	SHORT $LN21@DeleteNode

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

	mov	QWORD PTR [rax], r9
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5021 :     return true;

	mov	al, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 806  :         ++_Mylast;

	add	QWORD PTR [rdx+1920], 8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 539  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
$LN21@DeleteNode:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR object$[rsp]
	mov	rdx, rax
	call	??$_Emplace_reallocate@AEBQEAUObject@Detail@NodeEditor@ax@@@?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@AEAAPEAPEAUObject@Detail@NodeEditor@ax@@QEAPEAU2345@AEBQEAU2345@@Z ; std::vector<ax::NodeEditor::Detail::Object *,std::allocator<ax::NodeEditor::Detail::Object *> >::_Emplace_reallocate<ax::NodeEditor::Detail::Object * const &>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5021 :     return true;

	mov	al, 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 539  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?DeleteNode@NodeEditor@ax@@YA_NUNodeId@12@@Z ENDP	; ax::NodeEditor::DeleteNode
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?DeleteLink@NodeEditor@ax@@YA_NULinkId@12@@Z
_TEXT	SEGMENT
object$ = 32
__$ArrayPad$ = 40
linkId$ = 64
?DeleteLink@NodeEditor@ax@@YA_NULinkId@12@@Z PROC	; ax::NodeEditor::DeleteLink, COMDAT

; 542  : {

$LN16:
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 543  :     if (auto link = s_Editor->FindLink(linkId))

	mov	r11, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	mov	rdx, rcx
	mov	rcx, r11
	call	?FindLink@EditorContext@Detail@NodeEditor@ax@@QEAAPEAULink@234@ULinkId@34@@Z ; ax::NodeEditor::Detail::EditorContext::FindLink
	test	rax, rax
	je	SHORT $LN2@DeleteLink
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5016 :     if (Editor->GetCurrentAction() != nullptr)

	mov	rcx, QWORD PTR [r11+1896]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 544  :         return s_Editor->GetItemDeleter().Add(link);

	mov	QWORD PTR object$[rsp], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5016 :     if (Editor->GetCurrentAction() != nullptr)

	cmp	QWORD PTR [rcx+1216], 0
	jne	SHORT $LN2@DeleteLink
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rdx, QWORD PTR [r11+1920]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5019 :     m_ManuallyDeletedObjects.push_back(object);

	lea	rcx, QWORD PTR [r11+1912]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	cmp	rdx, QWORD PTR [r11+1928]
	je	SHORT $LN11@DeleteLink

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

	mov	QWORD PTR [rdx], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5021 :     return true;

	mov	al, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 806  :         ++_Mylast;

	add	QWORD PTR [r11+1920], 8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 547  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
$LN11@DeleteLink:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR object$[rsp]
	call	??$_Emplace_reallocate@AEBQEAUObject@Detail@NodeEditor@ax@@@?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@AEAAPEAPEAUObject@Detail@NodeEditor@ax@@QEAPEAU2345@AEBQEAU2345@@Z ; std::vector<ax::NodeEditor::Detail::Object *,std::allocator<ax::NodeEditor::Detail::Object *> >::_Emplace_reallocate<ax::NodeEditor::Detail::Object * const &>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5021 :     return true;

	mov	al, 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 547  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
$LN2@DeleteLink:
	xor	al, al
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?DeleteLink@NodeEditor@ax@@YA_NULinkId@12@@Z ENDP	; ax::NodeEditor::DeleteLink
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?NavigateToContent@NodeEditor@ax@@YAXM@Z
_TEXT	SEGMENT
$T1 = 48
duration$ = 80
?NavigateToContent@NodeEditor@ax@@YAXM@Z PROC		; ax::NodeEditor::NavigateToContent, COMDAT

; 570  : {

$LN6:
	sub	rsp, 72					; 00000048H

; 571  :     s_Editor->NavigateTo(s_Editor->GetContentBounds(), true, duration);

	mov	r9, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r9
	movaps	xmm3, xmm0
	call	?GetContentBounds@EditorContext@Detail@NodeEditor@ax@@QEAA?AUImRect@@XZ ; ax::NodeEditor::Detail::EditorContext::GetContentBounds
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_internal.h

; 1437 :         m_NavigateAction.NavigateTo(bounds, zoomMode, duration);

	lea	rcx, QWORD PTR [r9+1224]
	mov	DWORD PTR [rsp+32], 0
	mov	r8d, 2
	mov	rdx, rax
	call	?NavigateTo@NavigateAction@Detail@NodeEditor@ax@@QEAAXAEBUImRect@@W4ZoomMode@1234@MW4NavigationReason@1234@@Z ; ax::NodeEditor::Detail::NavigateAction::NavigateTo
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 572  : }

	add	rsp, 72					; 00000048H
	ret	0
?NavigateToContent@NodeEditor@ax@@YAXM@Z ENDP		; ax::NodeEditor::NavigateToContent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?ShowNodeContextMenu@NodeEditor@ax@@YA_NPEAUNodeId@12@@Z
_TEXT	SEGMENT
nodeId$dead$ = 48
?ShowNodeContextMenu@NodeEditor@ax@@YA_NPEAUNodeId@12@@Z PROC ; ax::NodeEditor::ShowNodeContextMenu, COMDAT

; 580  : {

$LN58:
	sub	rsp, 40					; 00000028H

; 581  :     return s_Editor->GetContextMenu().ShowNodeContextMenu(nodeId);

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4332 :     if (m_CurrentMenu != Node)

	cmp	DWORD PTR [rcx+1732], 1
	je	SHORT $LN4@ShowNodeCo
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 581  :     return s_Editor->GetContextMenu().ShowNodeContextMenu(nodeId);

	xor	al, al

; 582  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN4@ShowNodeCo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4335 :     *nodeId = m_ContextId.AsNodeId();

	mov	rax, QWORD PTR [rcx+1736]
	mov	QWORD PTR ?ContextNodeId@UIAINBEditor@@3UNodeId@NodeEditor@ax@@A, rax ; UIAINBEditor::ContextNodeId

; 4336 :     Editor->SetUserContext();

	mov	rdx, QWORD PTR [rcx+1720]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 9009 :     return g.IO.MousePos;

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 300  :     return point * m_View.Scale + m_ViewTransformPosition;

	movss	xmm0, DWORD PTR [rdx+880]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 9009 :     return g.IO.MousePos;

	movss	xmm1, DWORD PTR [rcx+3592]
	movss	xmm2, DWORD PTR [rcx+3596]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rax, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm1, xmm0
	mulss	xmm2, xmm0

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	addss	xmm1, DWORD PTR [rdx+904]
	addss	xmm2, DWORD PTR [rdx+908]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10249:     window->DC.CursorPos = pos;

	movss	DWORD PTR [rax+312], xmm1
	movss	DWORD PTR [rax+316], xmm2

; 10250:     //window->DC.CursorMaxPos = ImMax(window->DC.CursorMaxPos, window->DC.CursorPos);
; 10251:     window->DC.IsSetPos = true;

	mov	BYTE PTR [rax+377], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.h

; 199  :     bool IsSuspended() const { return m_SuspendCounter > 0; }

	cmp	DWORD PTR [rdx+912], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 2304 :     if (!IsSuspended())

	jg	SHORT $LN19@ShowNodeCo

; 2305 :     {
; 2306 :         m_DrawList->ChannelsSetCurrent(c_UserChannel_Content);

	mov	rdx, QWORD PTR [rdx+2216]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2828 :     inline void     ChannelsSetCurrent(int n)   { _Splitter.SetCurrentChannel(this, n); }

	mov	r8d, 1
	lea	rcx, QWORD PTR [rdx+168]
	call	?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z ; ImDrawListSplitter::SetCurrentChannel
$LN19@ShowNodeCo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 581  :     return s_Editor->GetContextMenu().ShowNodeContextMenu(nodeId);

	mov	al, 1

; 582  : }

	add	rsp, 40					; 00000028H
	ret	0
?ShowNodeContextMenu@NodeEditor@ax@@YA_NPEAUNodeId@12@@Z ENDP ; ax::NodeEditor::ShowNodeContextMenu
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ?ShowLinkContextMenu@NodeEditor@ax@@YA_NPEAULinkId@12@@Z
_TEXT	SEGMENT
linkId$dead$ = 48
?ShowLinkContextMenu@NodeEditor@ax@@YA_NPEAULinkId@12@@Z PROC ; ax::NodeEditor::ShowLinkContextMenu, COMDAT

; 590  : {

$LN58:
	sub	rsp, 40					; 00000028H

; 591  :     return s_Editor->GetContextMenu().ShowLinkContextMenu(linkId);

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4352 :     if (m_CurrentMenu != Link)

	cmp	DWORD PTR [rcx+1732], 3
	je	SHORT $LN4@ShowLinkCo
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 591  :     return s_Editor->GetContextMenu().ShowLinkContextMenu(linkId);

	xor	al, al

; 592  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN4@ShowLinkCo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 4355 :     *linkId = m_ContextId.AsLinkId();

	mov	rax, QWORD PTR [rcx+1736]
	mov	QWORD PTR ?ContextLinkId@UIAINBEditor@@3ULinkId@NodeEditor@ax@@A, rax ; UIAINBEditor::ContextLinkId

; 4356 :     Editor->SetUserContext();

	mov	rdx, QWORD PTR [rcx+1720]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 9009 :     return g.IO.MousePos;

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 300  :     return point * m_View.Scale + m_ViewTransformPosition;

	movss	xmm0, DWORD PTR [rdx+880]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 9009 :     return g.IO.MousePos;

	movss	xmm1, DWORD PTR [rcx+3592]
	movss	xmm2, DWORD PTR [rcx+3596]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rax, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm1, xmm0
	mulss	xmm2, xmm0

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	addss	xmm1, DWORD PTR [rdx+904]
	addss	xmm2, DWORD PTR [rdx+908]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10249:     window->DC.CursorPos = pos;

	movss	DWORD PTR [rax+312], xmm1
	movss	DWORD PTR [rax+316], xmm2

; 10250:     //window->DC.CursorMaxPos = ImMax(window->DC.CursorMaxPos, window->DC.CursorPos);
; 10251:     window->DC.IsSetPos = true;

	mov	BYTE PTR [rax+377], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.h

; 199  :     bool IsSuspended() const { return m_SuspendCounter > 0; }

	cmp	DWORD PTR [rdx+912], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 2304 :     if (!IsSuspended())

	jg	SHORT $LN19@ShowLinkCo

; 2305 :     {
; 2306 :         m_DrawList->ChannelsSetCurrent(c_UserChannel_Content);

	mov	rdx, QWORD PTR [rdx+2216]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2828 :     inline void     ChannelsSetCurrent(int n)   { _Splitter.SetCurrentChannel(this, n); }

	mov	r8d, 1
	lea	rcx, QWORD PTR [rdx+168]
	call	?SetCurrentChannel@ImDrawListSplitter@@QEAAXPEAUImDrawList@@H@Z ; ImDrawListSplitter::SetCurrentChannel
$LN19@ShowLinkCo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 591  :     return s_Editor->GetContextMenu().ShowLinkContextMenu(linkId);

	mov	al, 1

; 592  : }

	add	rsp, 40					; 00000028H
	ret	0
?ShowLinkContextMenu@NodeEditor@ax@@YA_NPEAULinkId@12@@Z ENDP ; ax::NodeEditor::ShowLinkContextMenu
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z
_TEXT	SEGMENT
$T1 = 32
container$ = 80
list$dead$ = 88
listSize$dead$ = 96
accept$dead$ = 104
??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z PROC ; BuildIdList<std::vector<ax::NodeEditor::Detail::Object *,std::allocator<ax::NodeEditor::Detail::Object *> > const ,ax::NodeEditor::NodeId,`ax::NodeEditor::GetSelectedNodes'::`2'::<lambda_1> >, COMDAT

; 23   : {

	mov	QWORD PTR [rsp+32], rbx
	push	rbp
	push	rsi
	push	r15
	sub	rsp, 48					; 00000030H

; 24   :     if (list != nullptr)
; 25   :     {
; 26   :         int count = 0;
; 27   :         for (auto object : container)

	mov	rbx, QWORD PTR [rcx]
	xor	ebp, ebp
	mov	r15, QWORD PTR [rcx+8]
	mov	esi, 1
	cmp	rbx, r15
	je	SHORT $LN46@BuildIdLis
	mov	QWORD PTR [rsp+96], r14
	lea	r14, OFFSET FLAT:?ContextNodeId@UIAINBEditor@@3UNodeId@NodeEditor@ax@@A ; UIAINBEditor::ContextNodeId
	mov	QWORD PTR [rsp+88], rdi
$LL4@BuildIdLis:

; 28   :         {
; 29   :             if (listSize <= 0)

	test	esi, esi
	jle	SHORT $LN45@BuildIdLis

; 24   :     if (list != nullptr)
; 25   :     {
; 26   :         int count = 0;
; 27   :         for (auto object : container)

	mov	rdi, QWORD PTR [rbx]

; 466  :         return object->AsNode() != nullptr;

	mov	rcx, rdi
	mov	rax, QWORD PTR [rdi]
	call	QWORD PTR [rax+104]
	test	rax, rax

; 30   :                 break;
; 31   : 
; 32   :             if (accept(object))

	je	SHORT $LN2@BuildIdLis

; 33   :             {
; 34   :                 list[count] = I(object->ID().AsPointer());

	mov	rax, QWORD PTR [rdi]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rdi
	call	QWORD PTR [rax+8]

; 35   :                 ++count;

	inc	ebp
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [r14], rcx
	add	r14, 8

; 36   :                 --listSize;}

	dec	esi
$LN2@BuildIdLis:

; 24   :     if (list != nullptr)
; 25   :     {
; 26   :         int count = 0;
; 27   :         for (auto object : container)

	add	rbx, 8
	cmp	rbx, r15
	jne	SHORT $LL4@BuildIdLis
$LN45@BuildIdLis:
	mov	rdi, QWORD PTR [rsp+88]

; 37   :         }
; 38   : 
; 39   :         return count;

	mov	eax, ebp
	mov	r14, QWORD PTR [rsp+96]

; 40   :     }
; 41   :     else
; 42   :         return static_cast<int>(std::count_if(container.begin(), container.end(), accept));
; 43   : }

	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	rsi
	pop	rbp
	ret	0
$LN46@BuildIdLis:
	mov	rbx, QWORD PTR [rsp+104]
	mov	eax, ebp
	add	rsp, 48					; 00000030H
	pop	r15
	pop	rsi
	pop	rbp
	ret	0
??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@UNodeId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedNodes@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAUNodeId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedNodes@34@YAH1H@Z@@Z ENDP ; BuildIdList<std::vector<ax::NodeEditor::Detail::Object *,std::allocator<ax::NodeEditor::Detail::Object *> > const ,ax::NodeEditor::NodeId,`ax::NodeEditor::GetSelectedNodes'::`2'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z
_TEXT	SEGMENT
this$dead$ = 48
object$ = 56
??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z PROC ; `ax::NodeEditor::GetSelectedNodes'::`2'::<lambda_1>::operator()<ax::NodeEditor::Detail::Object *>, COMDAT

; 465  :     {

	sub	rsp, 40					; 00000028H

; 466  :         return object->AsNode() != nullptr;

	mov	rax, QWORD PTR [rdx]
	mov	rcx, rdx
	call	QWORD PTR [rax+104]
	test	rax, rax
	setne	al

; 467  :     });

	add	rsp, 40					; 00000028H
	ret	0
??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z ENDP ; `ax::NodeEditor::GetSelectedNodes'::`2'::<lambda_1>::operator()<ax::NodeEditor::Detail::Object *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z
_TEXT	SEGMENT
$T1 = 32
container$ = 80
list$dead$ = 88
listSize$dead$ = 96
accept$dead$ = 104
??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z PROC ; BuildIdList<std::vector<ax::NodeEditor::Detail::Object *,std::allocator<ax::NodeEditor::Detail::Object *> > const ,ax::NodeEditor::LinkId,`ax::NodeEditor::GetSelectedLinks'::`2'::<lambda_1> >, COMDAT

; 23   : {

	mov	QWORD PTR [rsp+32], rbx
	push	rbp
	push	rsi
	push	r15
	sub	rsp, 48					; 00000030H

; 24   :     if (list != nullptr)
; 25   :     {
; 26   :         int count = 0;
; 27   :         for (auto object : container)

	mov	rbx, QWORD PTR [rcx]
	xor	ebp, ebp
	mov	r15, QWORD PTR [rcx+8]
	mov	esi, 1
	cmp	rbx, r15
	je	SHORT $LN46@BuildIdLis
	mov	QWORD PTR [rsp+96], r14
	lea	r14, OFFSET FLAT:?ContextLinkId@UIAINBEditor@@3ULinkId@NodeEditor@ax@@A ; UIAINBEditor::ContextLinkId
	mov	QWORD PTR [rsp+88], rdi
$LL4@BuildIdLis:

; 28   :         {
; 29   :             if (listSize <= 0)

	test	esi, esi
	jle	SHORT $LN45@BuildIdLis

; 24   :     if (list != nullptr)
; 25   :     {
; 26   :         int count = 0;
; 27   :         for (auto object : container)

	mov	rdi, QWORD PTR [rbx]

; 474  :         return object->AsLink() != nullptr;

	mov	rcx, rdi
	mov	rax, QWORD PTR [rdi]
	call	QWORD PTR [rax+120]
	test	rax, rax

; 30   :                 break;
; 31   : 
; 32   :             if (accept(object))

	je	SHORT $LN2@BuildIdLis

; 33   :             {
; 34   :                 list[count] = I(object->ID().AsPointer());

	mov	rax, QWORD PTR [rdi]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rdi
	call	QWORD PTR [rax+8]

; 35   :                 ++count;

	inc	ebp
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [r14], rcx
	add	r14, 8

; 36   :                 --listSize;}

	dec	esi
$LN2@BuildIdLis:

; 24   :     if (list != nullptr)
; 25   :     {
; 26   :         int count = 0;
; 27   :         for (auto object : container)

	add	rbx, 8
	cmp	rbx, r15
	jne	SHORT $LL4@BuildIdLis
$LN45@BuildIdLis:
	mov	rdi, QWORD PTR [rsp+88]

; 37   :         }
; 38   : 
; 39   :         return count;

	mov	eax, ebp
	mov	r14, QWORD PTR [rsp+96]

; 40   :     }
; 41   :     else
; 42   :         return static_cast<int>(std::count_if(container.begin(), container.end(), accept));
; 43   : }

	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	rsi
	pop	rbp
	ret	0
$LN46@BuildIdLis:
	mov	rbx, QWORD PTR [rsp+104]
	mov	eax, ebp
	add	rsp, 48					; 00000030H
	pop	r15
	pop	rsi
	pop	rbp
	ret	0
??$BuildIdList@$$CBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@ULinkId@NodeEditor@ax@@V<lambda_1>@?1??GetSelectedLinks@45@YAHPEAU345@H@Z@@@YAHAEBV?$vector@PEAUObject@Detail@NodeEditor@ax@@V?$allocator@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@PEAULinkId@NodeEditor@ax@@H$$QEAV<lambda_1>@?1??GetSelectedLinks@34@YAH1H@Z@@Z ENDP ; BuildIdList<std::vector<ax::NodeEditor::Detail::Object *,std::allocator<ax::NodeEditor::Detail::Object *> > const ,ax::NodeEditor::LinkId,`ax::NodeEditor::GetSelectedLinks'::`2'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
;	COMDAT ??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z
_TEXT	SEGMENT
this$dead$ = 48
object$ = 56
??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z PROC ; `ax::NodeEditor::GetSelectedLinks'::`2'::<lambda_1>::operator()<ax::NodeEditor::Detail::Object *>, COMDAT

; 473  :     {

	sub	rsp, 40					; 00000028H

; 474  :         return object->AsLink() != nullptr;

	mov	rax, QWORD PTR [rdx]
	mov	rcx, rdx
	call	QWORD PTR [rax+120]
	test	rax, rax
	setne	al

; 475  :     });

	add	rsp, 40					; 00000028H
	ret	0
??$?RPEAUObject@Detail@NodeEditor@ax@@@<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@23@H@Z@QEBA?A_PPEAUObject@Detail@23@@Z ENDP ; `ax::NodeEditor::GetSelectedLinks'::`2'::<lambda_1>::operator()<ax::NodeEditor::Detail::Object *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@45@H@Z@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Pred$dead$ = 64
??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@45@H@Z@@Z PROC ; std::count_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ax::NodeEditor::Detail::Object *> > >,`ax::NodeEditor::GetSelectedNodes'::`2'::<lambda_1> >, COMDAT

; 481  : _NODISCARD _CONSTEXPR20 _Iter_diff_t<_InIt> count_if(_InIt _First, _InIt _Last, _Pr _Pred) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 482  :     // count elements satisfying _Pred
; 483  :     _Adl_verify_range(_First, _Last);
; 484  :     auto _UFirst               = _Get_unwrapped(_First);
; 485  :     const auto _ULast          = _Get_unwrapped(_Last);
; 486  :     _Iter_diff_t<_InIt> _Count = 0;

	xor	edi, edi
	mov	rbx, rdx
	mov	rsi, rcx

; 487  :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rcx, rdx
	je	SHORT $LN13@count_if
	npad	4
$LL4@count_if:

; 488  :         if (_Pred(*_UFirst)) {

	mov	rcx, QWORD PTR [rsi]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 466  :         return object->AsNode() != nullptr;

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+104]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 487  :     for (; _UFirst != _ULast; ++_UFirst) {

	test	rax, rax
	lea	rdx, QWORD PTR [rdi+1]
	cmove	rdx, rdi
	add	rsi, 8
	mov	rdi, rdx
	cmp	rsi, rbx
	jne	SHORT $LL4@count_if
$LN13@count_if:

; 489  :             ++_Count;
; 490  :         }
; 491  :     }
; 492  : 
; 493  :     return _Count;
; 494  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedNodes@NodeEditor@ax@@YAHPEAUNodeId@45@H@Z@@Z ENDP ; std::count_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ax::NodeEditor::Detail::Object *> > >,`ax::NodeEditor::GetSelectedNodes'::`2'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@45@H@Z@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Pred$dead$ = 64
??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@45@H@Z@@Z PROC ; std::count_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ax::NodeEditor::Detail::Object *> > >,`ax::NodeEditor::GetSelectedLinks'::`2'::<lambda_1> >, COMDAT

; 481  : _NODISCARD _CONSTEXPR20 _Iter_diff_t<_InIt> count_if(_InIt _First, _InIt _Last, _Pr _Pred) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 482  :     // count elements satisfying _Pred
; 483  :     _Adl_verify_range(_First, _Last);
; 484  :     auto _UFirst               = _Get_unwrapped(_First);
; 485  :     const auto _ULast          = _Get_unwrapped(_Last);
; 486  :     _Iter_diff_t<_InIt> _Count = 0;

	xor	edi, edi
	mov	rbx, rdx
	mov	rsi, rcx

; 487  :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rcx, rdx
	je	SHORT $LN13@count_if
	npad	4
$LL4@count_if:

; 488  :         if (_Pred(*_UFirst)) {

	mov	rcx, QWORD PTR [rsi]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 474  :         return object->AsLink() != nullptr;

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+120]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 487  :     for (; _UFirst != _ULast; ++_UFirst) {

	test	rax, rax
	lea	rdx, QWORD PTR [rdi+1]
	cmove	rdx, rdi
	add	rsi, 8
	mov	rdi, rdx
	cmp	rsi, rbx
	jne	SHORT $LL4@count_if
$LN13@count_if:

; 489  :             ++_Count;
; 490  :         }
; 491  :     }
; 492  : 
; 493  :     return _Count;
; 494  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$count_if@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@std@@V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@56@H@Z@@std@@YA_JV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PEAUObject@Detail@NodeEditor@ax@@@std@@@std@@@0@0V<lambda_1>@?1??GetSelectedLinks@NodeEditor@ax@@YAHPEAULinkId@45@H@Z@@Z ENDP ; std::count_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<ax::NodeEditor::Detail::Object *> > >,`ax::NodeEditor::GetSelectedLinks'::`2'::<lambda_1> >
_TEXT	ENDS
END

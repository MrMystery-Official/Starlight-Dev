; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0L@POIDPCAG@COMPLETED?6@			; `string'
PUBLIC	??_C@_0CG@MDIGJEBJ@Tried?5to?5write?5hash?5out?5of?5boun@ ; `string'
PUBLIC	??_C@_0BE@FKOCFIKO@PhiveStaticCompound@		; `string'
PUBLIC	??_C@_0BK@NDLFKFCE@?5actor?5links?4?5Aborting?4?4?4@ ; `string'
PUBLIC	??_C@_08MHHFDANP@?5out?5of?5@			; `string'
PUBLIC	??_C@_0CC@HEEFFKJM@Hash?5collision?5detected?5at?5inde@ ; `string'
;	COMDAT ??_C@_0CC@HEEFFKJM@Hash?5collision?5detected?5at?5inde@
CONST	SEGMENT
??_C@_0CC@HEEFFKJM@Hash?5collision?5detected?5at?5inde@ DB 'Hash collisio'
	DB	'n detected at index ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08MHHFDANP@?5out?5of?5@
CONST	SEGMENT
??_C@_08MHHFDANP@?5out?5of?5@ DB ' out of ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NDLFKFCE@?5actor?5links?4?5Aborting?4?4?4@
CONST	SEGMENT
??_C@_0BK@NDLFKFCE@?5actor?5links?4?5Aborting?4?4?4@ DB ' actor links. Ab'
	DB	'orting...', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FKOCFIKO@PhiveStaticCompound@
CONST	SEGMENT
??_C@_0BE@FKOCFIKO@PhiveStaticCompound@ DB 'PhiveStaticCompound', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MDIGJEBJ@Tried?5to?5write?5hash?5out?5of?5boun@
CONST	SEGMENT
??_C@_0CG@MDIGJEBJ@Tried?5to?5write?5hash?5out?5of?5boun@ DB 'Tried to wr'
	DB	'ite hash out of bounds at ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@POIDPCAG@COMPLETED?6@
CONST	SEGMENT
??_C@_0L@POIDPCAG@COMPLETED?6@ DB 'COMPLETED', 0aH, 00H	; `string'
PUBLIC	??$forward@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA$$QEAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAPEAU12@@Z ; std::forward<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *>
PUBLIC	??$forward@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YA$$QEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@AEAV10@@Z ; std::forward<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@00@Z ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
PUBLIC	??$?0V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU23@PEAU23@@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@$$QEAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@22@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1><std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *>
PUBLIC	??$exchange@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$T@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAPEAU12@$$QEA$$T@Z ; std::exchange<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,std::nullptr_t>
PUBLIC	??$move@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YA$$QEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@AEAV10@@Z ; std::move<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> &>
PUBLIC	??0?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
PUBLIC	??0PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@$$QEAU01@@Z ; PhiveStaticCompound::PhiveStaticCompoundHkTagFile::PhiveStaticCompoundHkTagFile
PUBLIC	??0PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@$$QEAU01@@Z ; PhiveStaticCompound::PhiveStaticCompoundBphsh::PhiveStaticCompoundBphsh
PUBLIC	??$construct_at@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,0>
PUBLIC	??$construct_at@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,0>
PUBLIC	??$construct_at@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,0>
PUBLIC	??$construct_at@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,0>
PUBLIC	??$construct_at@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,0>
PUBLIC	??$construct_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,PhiveStaticCompound::PhiveStaticCompoundHkTagFile,0>
PUBLIC	??$construct_at@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,0>
PUBLIC	??$construct_at@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterFall,PhiveStaticCompound::PhiveStaticCompoundWaterFall,0>
PUBLIC	??$construct_at@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,PhiveStaticCompound::PhiveStaticCompoundExternalMesh,0>
PUBLIC	??$construct_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundBphsh,PhiveStaticCompound::PhiveStaticCompoundBphsh,0>
PUBLIC	??0?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAA@XZ ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1><>
PUBLIC	??$construct_at@_K$$V$0A@@std@@YAPEA_KQEA_K@Z	; std::construct_at<unsigned __int64,0>
PUBLIC	??$construct_at@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,0>
PUBLIC	??$construct@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::construct<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
PUBLIC	??$forward@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAU12@@Z ; std::forward<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
PUBLIC	??$to_address@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@@Z ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
PUBLIC	??$construct_at@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundActorLink,0>
PUBLIC	??$construct_at@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,0>
PUBLIC	??$construct@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
PUBLIC	??$forward@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@AEAU12@@Z ; std::forward<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
PUBLIC	??$to_address@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@@Z ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
PUBLIC	??$construct_at@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,0>
PUBLIC	??$construct@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
PUBLIC	??$forward@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@AEAU12@@Z ; std::forward<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
PUBLIC	??$to_address@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@@Z ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
PUBLIC	??$construct_at@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,0>
PUBLIC	??$construct@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
PUBLIC	??$forward@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@AEAU12@@Z ; std::forward<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
PUBLIC	??$to_address@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@@Z ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
PUBLIC	??$construct_at@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,0>
PUBLIC	??$construct@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::construct<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
PUBLIC	??$forward@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@AEAU12@@Z ; std::forward<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
PUBLIC	??$to_address@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@@Z ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
PUBLIC	??$construct_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,0>
PUBLIC	??$construct@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::construct<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
PUBLIC	??$forward@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@AEAU12@@Z ; std::forward<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
PUBLIC	??$construct_at@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterBox,0>
PUBLIC	??$construct_at@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,0>
PUBLIC	??$construct@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
PUBLIC	??$forward@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@AEAU12@@Z ; std::forward<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
PUBLIC	??$to_address@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@@Z ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
PUBLIC	??$construct_at@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterFall,0>
PUBLIC	??$construct@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterFall,PhiveStaticCompound::PhiveStaticCompoundWaterFall>
PUBLIC	??$forward@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@AEAU12@@Z ; std::forward<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
PUBLIC	??$to_address@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@@Z ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
PUBLIC	??$construct_at@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,0>
PUBLIC	??$construct@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::construct<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
PUBLIC	??$forward@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@AEAU12@@Z ; std::forward<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
PUBLIC	??$to_address@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@@Z ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
PUBLIC	??$construct_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@@Z ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundBphsh,0>
PUBLIC	??$construct@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::construct<PhiveStaticCompound::PhiveStaticCompoundBphsh,PhiveStaticCompound::PhiveStaticCompoundBphsh>
PUBLIC	??$forward@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@AEAU12@@Z ; std::forward<PhiveStaticCompound::PhiveStaticCompoundBphsh>
PUBLIC	??0?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
PUBLIC	??$construct@_K$$V@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SAXAEAV?$allocator@_K@1@QEA_K@Z ; std::_Default_allocator_traits<std::allocator<unsigned __int64> >::construct<unsigned __int64>
PUBLIC	??$construct@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::construct<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
PUBLIC	??$_Emplace_back@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
PUBLIC	??$_To_address@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *>
PUBLIC	??$_Copy_memmove@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@00@Z ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *>
PUBLIC	??$_Unfancy@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
PUBLIC	??$move@AEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAU12@@Z ; std::move<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 &>
PUBLIC	??$construct@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::construct<PhiveStaticCompound::PhiveStaticCompoundActorLink>
PUBLIC	??$construct@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
PUBLIC	??$_Emplace_back@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
PUBLIC	??$_To_address@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 *>
PUBLIC	??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@00@Z ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 *,PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 *>
PUBLIC	??$_Unfancy@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
PUBLIC	??$move@AEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@AEAU12@@Z ; std::move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 &>
PUBLIC	??$construct@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
PUBLIC	??$_Emplace_back@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
PUBLIC	??$_To_address@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 *>
PUBLIC	??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@00@Z ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 *,PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 *>
PUBLIC	??$_Unfancy@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
PUBLIC	??$move@AEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@AEAU12@@Z ; std::move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 &>
PUBLIC	??$construct@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
PUBLIC	??$_Emplace_back@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
PUBLIC	??$_To_address@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 *>
PUBLIC	??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@00@Z ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 *,PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 *>
PUBLIC	??$_Unfancy@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
PUBLIC	??$move@AEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@AEAU12@@Z ; std::move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 &>
PUBLIC	??$construct@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::construct<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
PUBLIC	??$_Emplace_back@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
PUBLIC	??$_To_address@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain *>
PUBLIC	??$_Copy_memmove@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@00@Z ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain *,PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain *>
PUBLIC	??$_Unfancy@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
PUBLIC	??$move@AEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@AEAU12@@Z ; std::move<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain &>
PUBLIC	??$construct@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::construct<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
PUBLIC	??$_Emplace_back@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
PUBLIC	??$move@AEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@AEAU12@@Z ; std::move<PhiveStaticCompound::PhiveStaticCompoundHkTagFile &>
PUBLIC	??$construct@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterBox>
PUBLIC	??$construct@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
PUBLIC	??$_Emplace_back@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
PUBLIC	??$_To_address@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder *>
PUBLIC	??$_Copy_memmove@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@00@Z ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder *,PhiveStaticCompound::PhiveStaticCompoundWaterCylinder *>
PUBLIC	??$_Unfancy@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
PUBLIC	??$move@AEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@AEAU12@@Z ; std::move<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder &>
PUBLIC	??$construct@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
PUBLIC	??$_Emplace_back@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
PUBLIC	??$_To_address@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundWaterFall *>
PUBLIC	??$_Copy_memmove@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@00@Z ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundWaterFall *,PhiveStaticCompound::PhiveStaticCompoundWaterFall *>
PUBLIC	??$_Unfancy@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
PUBLIC	??$move@AEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@AEAU12@@Z ; std::move<PhiveStaticCompound::PhiveStaticCompoundWaterFall &>
PUBLIC	??$construct@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::construct<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
PUBLIC	??$_Emplace_back@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
PUBLIC	??$_To_address@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundExternalMesh *>
PUBLIC	??$_Copy_memmove@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@00@Z ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundExternalMesh *,PhiveStaticCompound::PhiveStaticCompoundExternalMesh *>
PUBLIC	??$_Unfancy@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
PUBLIC	??$move@AEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@AEAU12@@Z ; std::move<PhiveStaticCompound::PhiveStaticCompoundExternalMesh &>
PUBLIC	??0PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@XZ ; PhiveStaticCompound::PhiveStaticCompoundHkTagFile::PhiveStaticCompoundHkTagFile
PUBLIC	??0PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@XZ ; PhiveStaticCompound::PhiveStaticCompoundBphsh::PhiveStaticCompoundBphsh
PUBLIC	??$construct@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::construct<PhiveStaticCompound::PhiveStaticCompoundBphsh>
PUBLIC	??$_Emplace_back@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundBphsh>
PUBLIC	??$move@AEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@AEAU12@@Z ; std::move<PhiveStaticCompound::PhiveStaticCompoundBphsh &>
PUBLIC	??$addressof@U?$vec@$02M$0A@@glm@@@std@@YAPEAU?$vec@$02M$0A@@glm@@AEAU12@@Z ; std::addressof<glm::vec<3,float,0> >
PUBLIC	?_Tidy@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Tidy
PUBLIC	??1?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::~vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
PUBLIC	??_GPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAAPEAXI@Z ; PhiveStaticCompound::PhiveStaticCompoundHkTagFile::`scalar deleting destructor'
PUBLIC	??_GPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAAPEAXI@Z ; PhiveStaticCompound::PhiveStaticCompoundBphsh::`scalar deleting destructor'
PUBLIC	??$_Get_size_of_n@$0CM@@std@@YA_K_K@Z		; std::_Get_size_of_n<44>
PUBLIC	??$_Get_size_of_n@$0IA@@std@@YA_K_K@Z		; std::_Get_size_of_n<128>
PUBLIC	??$destroy_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z ; std::destroy_at<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
PUBLIC	??1PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@XZ ; PhiveStaticCompound::PhiveStaticCompoundHkTagFile::~PhiveStaticCompoundHkTagFile
PUBLIC	??1PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@XZ ; PhiveStaticCompound::PhiveStaticCompoundBphsh::~PhiveStaticCompoundBphsh
PUBLIC	??$destroy_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z ; std::destroy_at<PhiveStaticCompound::PhiveStaticCompoundBphsh>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<unsigned __int64> >::_Emplace_back<>
PUBLIC	??$_Zero_range@PEA_K@std@@YAPEA_KQEA_K0@Z	; std::_Zero_range<unsigned __int64 *>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
PUBLIC	??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 * const &>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Emplace_back<>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
PUBLIC	??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 * const &>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
PUBLIC	??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 * const &>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
PUBLIC	??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 * const &>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
PUBLIC	??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain * const &>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundHkTagFile *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
PUBLIC	??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundHkTagFile * const &>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Emplace_back<>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
PUBLIC	??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder * const &>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundWaterFall *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
PUBLIC	??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundWaterFall * const &>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundExternalMesh *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
PUBLIC	??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundExternalMesh * const &>
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Emplace_back<>
PUBLIC	??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundBphsh *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
PUBLIC	??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundBphsh * const &>
PUBLIC	??$_Construct_in_place@U?$vec@$02M$0A@@glm@@U12@@std@@YAXAEAU?$vec@$02M$0A@@glm@@$$QEAU12@@Z ; std::_Construct_in_place<glm::vec<3,float,0>,glm::vec<3,float,0> >
PUBLIC	??$?XM@?$vec@$03M$0A@@glm@@QEAAAEAU01@AEBU01@@Z	; glm::vec<4,float,0>::operator*=<float>
PUBLIC	??$?0U?$vec@$01M$0A@@glm@@@?$_Optional_destruct_base@U?$vec@$01M$0A@@glm@@$00@std@@QEAA@Uin_place_t@1@$$QEAU?$vec@$01M$0A@@glm@@@Z ; std::_Optional_destruct_base<glm::vec<2,float,0>,1>::_Optional_destruct_base<glm::vec<2,float,0>,1><glm::vec<2,float,0> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >,1>::_Get_first
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::max_size
PUBLIC	?capacity@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::capacity
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::max_size
PUBLIC	?capacity@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::capacity
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::max_size
PUBLIC	?capacity@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::capacity
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::max_size
PUBLIC	?capacity@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::capacity
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::max_size
PUBLIC	?capacity@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::capacity
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::max_size
PUBLIC	?capacity@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::capacity
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::max_size
PUBLIC	?capacity@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::capacity
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::max_size
PUBLIC	?capacity@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::capacity
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::max_size
PUBLIC	?capacity@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::capacity
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::max_size
PUBLIC	?capacity@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::capacity
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Getal
PUBLIC	?deallocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>::deallocate
PUBLIC	?allocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>::allocate
PUBLIC	?max_size@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::max_size
PUBLIC	?_Calculate_growth@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K1@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Change_array
PUBLIC	?_Xlength@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Xlength
PUBLIC	?allocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>::allocate
PUBLIC	?max_size@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::max_size
PUBLIC	?_Calculate_growth@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K1@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Change_array
PUBLIC	?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Xlength
PUBLIC	?allocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>::allocate
PUBLIC	?max_size@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::max_size
PUBLIC	?_Calculate_growth@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K1@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Change_array
PUBLIC	?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Xlength
PUBLIC	?allocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>::allocate
PUBLIC	?max_size@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::max_size
PUBLIC	?_Calculate_growth@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K1@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Change_array
PUBLIC	?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Xlength
PUBLIC	?allocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>::allocate
PUBLIC	?max_size@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::max_size
PUBLIC	?_Calculate_growth@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K1@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Change_array
PUBLIC	?_Xlength@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Xlength
PUBLIC	?allocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>::allocate
PUBLIC	?max_size@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::max_size
PUBLIC	?_Calculate_growth@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K1@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Change_array
PUBLIC	?_Xlength@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Xlength
PUBLIC	?allocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>::allocate
PUBLIC	?max_size@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::max_size
PUBLIC	?_Calculate_growth@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K1@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Change_array
PUBLIC	?_Xlength@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Xlength
PUBLIC	?allocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>::allocate
PUBLIC	?max_size@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::max_size
PUBLIC	?_Calculate_growth@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K1@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Change_array
PUBLIC	?_Xlength@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Xlength
PUBLIC	?allocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>::allocate
PUBLIC	?max_size@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::max_size
PUBLIC	?_Calculate_growth@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K1@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Change_array
PUBLIC	?_Xlength@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Xlength
PUBLIC	?allocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>::allocate
PUBLIC	?max_size@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::max_size
PUBLIC	?_Calculate_growth@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K1@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Change_array
PUBLIC	?_Xlength@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Xlength
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Release
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Release
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Release
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Release
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Release
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Release
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Release
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Release
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Release
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@XZ ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Release
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::__autoclassinit2
PUBLIC	??$destroy@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::destroy<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
PUBLIC	??$_Unfancy@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
PUBLIC	??$destroy@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::destroy<PhiveStaticCompound::PhiveStaticCompoundBphsh>
PUBLIC	??$_Unfancy@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundBphsh>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@_K@std@@@std@@YAPEA_KPEA_K_KAEAV?$allocator@_K@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<unsigned __int64> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Emplace_reallocate<glm::vec<3,float,0> >
PUBLIC	??$_Emplace_back_with_unused_capacity@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAAEAU?$vec@$02M$0A@@glm@@$$QEAU23@@Z ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Emplace_back_with_unused_capacity<glm::vec<3,float,0> >
PUBLIC	??$_Fill_zero_memset@PEAG@std@@YAXPEAG_K@Z	; std::_Fill_zero_memset<unsigned short *>
PUBLIC	??$?0U?$vec@$01M$0A@@glm@@@?$_Optional_construct_base@U?$vec@$01M$0A@@glm@@@std@@QEAA@Uin_place_t@1@$$QEAU?$vec@$01M$0A@@glm@@@Z ; std::_Optional_construct_base<glm::vec<2,float,0> >::_Optional_construct_base<glm::vec<2,float,0> ><glm::vec<2,float,0> >
PUBLIC	??$forward@U?$vec@$01M$0A@@glm@@@std@@YA$$QEAU?$vec@$01M$0A@@glm@@AEAU12@@Z ; std::forward<glm::vec<2,float,0> >
PUBLIC	??$?DM$0A@@glm@@YA?AU?$vec@$03M$0A@@0@AEBU10@0@Z ; glm::operator*<float,0>
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1>::_Get_first
PUBLIC	?_Orphan_range@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@0@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Orphan_range
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Getal
PUBLIC	??0?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@QEAA@XZ ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundActorLink> >
PUBLIC	??0?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAA@XZ ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
PUBLIC	?_Orphan_range@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@0@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Orphan_range
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
PUBLIC	??0?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAA@XZ ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
PUBLIC	?_Orphan_range@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@0@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Orphan_range
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
PUBLIC	??0?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAA@XZ ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
PUBLIC	?_Orphan_range@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@0@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Orphan_range
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
PUBLIC	??0?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAA@XZ ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
PUBLIC	?_Orphan_range@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@0@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Orphan_range
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
PUBLIC	??0?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAA@XZ ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
PUBLIC	?_Orphan_range@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@0@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Orphan_range
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
PUBLIC	??0?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@QEAA@XZ ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >
PUBLIC	??0?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAA@XZ ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
PUBLIC	?_Orphan_range@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@0@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Orphan_range
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
PUBLIC	??0?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAA@XZ ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
PUBLIC	?_Orphan_range@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@0@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Orphan_range
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
PUBLIC	??0?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAA@XZ ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
PUBLIC	?_Orphan_range@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@0@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Orphan_range
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
PUBLIC	??0?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAA@XZ ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>
PUBLIC	?_Orphan_range@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@0@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Orphan_range
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
PUBLIC	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
PUBLIC	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
PUBLIC	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
PUBLIC	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
PUBLIC	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
PUBLIC	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
PUBLIC	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
PUBLIC	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
PUBLIC	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Unfancy_maybe_null@_K@std@@YAPEA_KPEA_K@Z	; std::_Unfancy_maybe_null<unsigned __int64>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Unfancy_maybe_null@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundActorLink> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundActorLink> >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Unfancy_maybe_null@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundActorLink>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Unfancy_maybe_null@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Unfancy_maybe_null@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Unfancy_maybe_null@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Unfancy_maybe_null@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Resize<std::_Value_init_tag>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Unfancy_maybe_null@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundWaterBox>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Unfancy_maybe_null@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Unfancy_maybe_null@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Unfancy_maybe_null@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@Z ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >,1><>
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Emplace_one_at_back@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAAEAU?$vec@$02M$0A@@glm@@$$QEAU23@@Z ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Emplace_one_at_back<glm::vec<3,float,0> >
PUBLIC	??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z ; std::fill<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >,int>
PUBLIC	??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@_K@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@_K@std@@@std@@@0@0AEBH@Z ; std::fill<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned __int64> > >,int>
PUBLIC	??$?0U?$vec@$01M$0A@@glm@@$0A@@?$optional@U?$vec@$01M$0A@@glm@@@std@@QEAA@$$QEAU?$vec@$01M$0A@@glm@@@Z ; std::optional<glm::vec<2,float,0> >::optional<glm::vec<2,float,0> ><glm::vec<2,float,0>,0>
PUBLIC	??$?DM$0A@@glm@@YA?AU?$vec@$03M$0A@@0@AEBU?$mat@$03$03M$0A@@0@AEBU10@@Z ; glm::operator*<float,0>
PUBLIC	??$scale@M$0A@@glm@@YA?AU?$mat@$03$03M$0A@@0@AEBU10@AEBU?$vec@$02M$0A@@0@@Z ; glm::scale<float,0>
PUBLIC	??0?$vec@$01M$0A@@glm@@QEAA@M@Z			; glm::vec<2,float,0>::vec<2,float,0>
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >,1>::_Get_first
PUBLIC	?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>::deallocate
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Getal
PUBLIC	?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>::deallocate
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Getal
PUBLIC	?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>::deallocate
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Getal
PUBLIC	?deallocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>::deallocate
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Getal
PUBLIC	?deallocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>::deallocate
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Getal
PUBLIC	?deallocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>::deallocate
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Getal
PUBLIC	?deallocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>::deallocate
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Getal
PUBLIC	?deallocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>::deallocate
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Getal
PUBLIC	?deallocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>::deallocate
PUBLIC	?_Getal@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Getal
PUBLIC	?_Tidy@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Tidy
PUBLIC	?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Tidy
PUBLIC	?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Tidy
PUBLIC	?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Tidy
PUBLIC	?_Tidy@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Tidy
PUBLIC	?_Tidy@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Tidy
PUBLIC	?_Tidy@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Tidy
PUBLIC	?_Tidy@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Tidy
PUBLIC	?_Tidy@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Tidy
PUBLIC	?_Tidy@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Tidy
PUBLIC	?_Tidy@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Tidy
PUBLIC	??0?$_Optional_destruct_base@U?$vec@$01M$0A@@glm@@$00@std@@QEAA@XZ ; std::_Optional_destruct_base<glm::vec<2,float,0>,1>::_Optional_destruct_base<glm::vec<2,float,0>,1>
PUBLIC	?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::resize
PUBLIC	?data@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::data
PUBLIC	?size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::size
PUBLIC	?resize@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::resize
PUBLIC	?data@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::data
PUBLIC	?size@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::size
PUBLIC	??0?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >
PUBLIC	??1?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::~vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >
PUBLIC	?resize@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::resize
PUBLIC	?data@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::data
PUBLIC	??A?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAAEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::operator[]
PUBLIC	??0?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
PUBLIC	??1?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::~vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
PUBLIC	?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::resize
PUBLIC	?data@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::data
PUBLIC	?size@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::size
PUBLIC	??0?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
PUBLIC	??1?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::~vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
PUBLIC	?resize@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::resize
PUBLIC	?data@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::data
PUBLIC	?size@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::size
PUBLIC	??0?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
PUBLIC	??1?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::~vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
PUBLIC	?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::resize
PUBLIC	?data@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::data
PUBLIC	?size@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::size
PUBLIC	??0?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
PUBLIC	??1?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::~vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
PUBLIC	?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::resize
PUBLIC	?data@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::data
PUBLIC	?size@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::size
PUBLIC	??0?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
PUBLIC	??1?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::~vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
PUBLIC	?resize@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::resize
PUBLIC	?size@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::size
PUBLIC	??A?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAAEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::operator[]
PUBLIC	??0?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >
PUBLIC	??1?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::~vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >
PUBLIC	?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::resize
PUBLIC	?data@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::data
PUBLIC	??0?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
PUBLIC	??1?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::~vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
PUBLIC	?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::resize
PUBLIC	?data@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::data
PUBLIC	??0?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
PUBLIC	??1?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::~vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
PUBLIC	?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::resize
PUBLIC	?data@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::data
PUBLIC	?size@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::size
PUBLIC	??0?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
PUBLIC	??1?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::~vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
PUBLIC	?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::resize
PUBLIC	?data@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::data
PUBLIC	?size@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::size
PUBLIC	??0?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
PUBLIC	??1?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::~vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
PUBLIC	?resize@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::resize
PUBLIC	?size@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::size
PUBLIC	??A?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAAEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::operator[]
PUBLIC	??0?$_Optional_construct_base@U?$vec@$01M$0A@@glm@@@std@@QEAA@XZ ; std::_Optional_construct_base<glm::vec<2,float,0> >::_Optional_construct_base<glm::vec<2,float,0> >
PUBLIC	??0?$optional@U?$vec@$01M$0A@@glm@@@std@@QEAA@Unullopt_t@1@@Z ; std::optional<glm::vec<2,float,0> >::optional<glm::vec<2,float,0> >
PUBLIC	?push_back@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$vec@$02M$0A@@glm@@@Z ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::push_back
PUBLIC	?__autoclassinit2@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::__autoclassinit2
PUBLIC	??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z ; PhiveStaticCompound::PhiveStaticCompound
PUBLIC	?lowest@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::lowest
PUBLIC	?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ ; PhiveStaticCompound::ToBinary
PUBLIC	?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z ; PhiveStaticCompound::GetActorModelScale
PUBLIC	?ActorFluidTypeToInternalFluidType@PhiveStaticCompound@@SAIW4WaterFluidType@Actor@@@Z ; PhiveStaticCompound::ActorFluidTypeToInternalFluidType
PUBLIC	?InternalFluidTypeToActorFluidType@PhiveStaticCompound@@SA?AW4WaterFluidType@Actor@@I@Z ; PhiveStaticCompound::InternalFluidTypeToActorFluidType
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+92
	DD	imagerel $unwind$?_Tidy@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+92
	DD	imagerel $unwind$??1?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAAPEAXI@Z DD imagerel $LN41
	DD	imagerel $LN41+93
	DD	imagerel $unwind$??_GPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAAPEAXI@Z DD imagerel $LN103
	DD	imagerel $LN103+246
	DD	imagerel $unwind$??_GPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0CM@@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+34
	DD	imagerel $unwind$??$_Get_size_of_n@$0CM@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0IA@@std@@YA_K_K@Z DD imagerel $LN7
	DD	imagerel $LN7+37
	DD	imagerel $unwind$??$_Get_size_of_n@$0IA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z DD imagerel $LN44
	DD	imagerel $LN44+90
	DD	imagerel $unwind$??$destroy_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@XZ DD imagerel $LN36
	DD	imagerel $LN36+90
	DD	imagerel $unwind$??1PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@XZ DD imagerel $LN98
	DD	imagerel $LN98+243
	DD	imagerel $unwind$??1PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z DD imagerel $LN106
	DD	imagerel $LN106+243
	DD	imagerel $unwind$??$destroy_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Zero_range@PEA_K@std@@YAPEA_KQEA_K0@Z DD imagerel $LN4
	DD	imagerel $LN4+31
	DD	imagerel $unwind$??$_Zero_range@PEA_K@std@@YAPEA_KQEA_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z DD imagerel $LN27
	DD	imagerel $LN27+52
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z DD imagerel $LN27
	DD	imagerel $LN27+79
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z DD imagerel $LN27
	DD	imagerel $LN27+52
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z DD imagerel $LN23
	DD	imagerel $LN23+52
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z DD imagerel $LN23
	DD	imagerel $LN23+52
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD imagerel $LN42
	DD	imagerel $LN42+20
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD imagerel $LN42+20
	DD	imagerel $LN42+110
	DD	imagerel $chain$0$??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD imagerel $LN42+110
	DD	imagerel $LN42+130
	DD	imagerel $chain$1$??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z DD imagerel $LN27
	DD	imagerel $LN27+78
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z DD imagerel $LN27
	DD	imagerel $LN27+78
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z DD imagerel $LN27
	DD	imagerel $LN27+78
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD imagerel $LN69
	DD	imagerel $LN69+24
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD imagerel $LN69+24
	DD	imagerel $LN69+437
	DD	imagerel $chain$0$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD imagerel $LN69+437
	DD	imagerel $LN69+457
	DD	imagerel $chain$1$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+66
	DD	imagerel $unwind$?deallocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z DD imagerel $LN32
	DD	imagerel $LN32+108
	DD	imagerel $unwind$?allocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K1@Z DD imagerel $LN30
	DD	imagerel $LN30+142
	DD	imagerel $unwind$?_Change_array@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z DD imagerel $LN32
	DD	imagerel $LN32+116
	DD	imagerel $unwind$?allocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K1@Z DD imagerel $LN30
	DD	imagerel $LN30+168
	DD	imagerel $unwind$?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z DD imagerel $LN32
	DD	imagerel $LN32+108
	DD	imagerel $unwind$?allocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K1@Z DD imagerel $LN30
	DD	imagerel $LN30+142
	DD	imagerel $unwind$?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z DD imagerel $LN32
	DD	imagerel $LN32+112
	DD	imagerel $unwind$?allocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K1@Z DD imagerel $LN30
	DD	imagerel $LN30+136
	DD	imagerel $unwind$?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z DD imagerel $LN32
	DD	imagerel $LN32+112
	DD	imagerel $unwind$?allocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K1@Z DD imagerel $LN30
	DD	imagerel $LN30+136
	DD	imagerel $unwind$?_Change_array@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z DD imagerel $LN32
	DD	imagerel $LN32+108
	DD	imagerel $unwind$?allocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K1@Z DD imagerel $LN30
	DD	imagerel $LN30+154
	DD	imagerel $unwind$?_Change_array@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z DD imagerel $LN32
	DD	imagerel $LN32+108
	DD	imagerel $unwind$?allocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K1@Z DD imagerel $LN30
	DD	imagerel $LN30+160
	DD	imagerel $unwind$?_Change_array@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z DD imagerel $LN32
	DD	imagerel $LN32+108
	DD	imagerel $unwind$?allocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K1@Z DD imagerel $LN30
	DD	imagerel $LN30+160
	DD	imagerel $unwind$?_Change_array@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z DD imagerel $LN32
	DD	imagerel $LN32+108
	DD	imagerel $unwind$?allocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K1@Z DD imagerel $LN30
	DD	imagerel $LN30+160
	DD	imagerel $unwind$?_Change_array@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z DD imagerel $LN32
	DD	imagerel $LN32+108
	DD	imagerel $unwind$?allocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K1@Z DD imagerel $LN30
	DD	imagerel $LN30+154
	DD	imagerel $unwind$?_Change_array@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z DD imagerel $LN47
	DD	imagerel $LN47+90
	DD	imagerel $unwind$??$destroy@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z DD imagerel $LN109
	DD	imagerel $LN109+243
	DD	imagerel $unwind$??$destroy@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@_K@std@@@std@@YAPEA_KPEA_K_KAEAV?$allocator@_K@0@@Z DD imagerel $LN27
	DD	imagerel $LN27+46
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@_K@std@@@std@@YAPEA_KPEA_K_KAEAV?$allocator@_K@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN65
	DD	imagerel $LN65+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN65+33
	DD	imagerel $LN65+181
	DD	imagerel $chain$1$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN65+181
	DD	imagerel $LN65+187
	DD	imagerel $chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z DD imagerel $LN26
	DD	imagerel $LN26+64
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN134
	DD	imagerel $LN134+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN134+33
	DD	imagerel $LN134+337
	DD	imagerel $chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN134+337
	DD	imagerel $LN134+344
	DD	imagerel $chain$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN134+344
	DD	imagerel $LN134+350
	DD	imagerel $chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN134+350
	DD	imagerel $LN134+356
	DD	imagerel $chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@0@@Z DD imagerel $LN26
	DD	imagerel $LN26+64
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN67
	DD	imagerel $LN67+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN67+33
	DD	imagerel $LN67+127
	DD	imagerel $chain$1$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN67+127
	DD	imagerel $LN67+185
	DD	imagerel $chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN67+185
	DD	imagerel $LN67+191
	DD	imagerel $chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z DD imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+14
	DD	imagerel $LN26+52
	DD	imagerel $chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+52
	DD	imagerel $LN26+61
	DD	imagerel $chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+32
	DD	imagerel $LN135+386
	DD	imagerel $chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+386
	DD	imagerel $LN135+393
	DD	imagerel $chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+393
	DD	imagerel $LN135+399
	DD	imagerel $chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+399
	DD	imagerel $LN135+405
	DD	imagerel $chain$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z DD imagerel $LN26
	DD	imagerel $LN26+64
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN134
	DD	imagerel $LN134+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN134+33
	DD	imagerel $LN134+337
	DD	imagerel $chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN134+337
	DD	imagerel $LN134+344
	DD	imagerel $chain$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN134+344
	DD	imagerel $LN134+350
	DD	imagerel $chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN134+350
	DD	imagerel $LN134+356
	DD	imagerel $chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z DD imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+14
	DD	imagerel $LN26+52
	DD	imagerel $chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+52
	DD	imagerel $LN26+61
	DD	imagerel $chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN130
	DD	imagerel $LN130+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN130+32
	DD	imagerel $LN130+334
	DD	imagerel $chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN130+334
	DD	imagerel $LN130+341
	DD	imagerel $chain$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN130+341
	DD	imagerel $LN130+347
	DD	imagerel $chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN130+347
	DD	imagerel $LN130+353
	DD	imagerel $chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z DD imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+14
	DD	imagerel $LN26+52
	DD	imagerel $chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+52
	DD	imagerel $LN26+61
	DD	imagerel $chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN130
	DD	imagerel $LN130+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN130+32
	DD	imagerel $LN130+334
	DD	imagerel $chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN130+334
	DD	imagerel $LN130+341
	DD	imagerel $chain$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN130+341
	DD	imagerel $LN130+347
	DD	imagerel $chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN130+347
	DD	imagerel $LN130+353
	DD	imagerel $chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD imagerel $LN36
	DD	imagerel $LN36+88
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN161
	DD	imagerel $LN161+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN161+33
	DD	imagerel $LN161+488
	DD	imagerel $chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN161+488
	DD	imagerel $LN161+495
	DD	imagerel $chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN161+495
	DD	imagerel $LN161+501
	DD	imagerel $chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN161+501
	DD	imagerel $LN161+507
	DD	imagerel $chain$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z DD imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+14
	DD	imagerel $LN26+52
	DD	imagerel $chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+52
	DD	imagerel $LN26+61
	DD	imagerel $chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN67
	DD	imagerel $LN67+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN67+33
	DD	imagerel $LN67+143
	DD	imagerel $chain$1$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN67+143
	DD	imagerel $LN67+208
	DD	imagerel $chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN67+208
	DD	imagerel $LN67+214
	DD	imagerel $chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z DD imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+14
	DD	imagerel $LN26+48
	DD	imagerel $chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+48
	DD	imagerel $LN26+57
	DD	imagerel $chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+32
	DD	imagerel $LN135+368
	DD	imagerel $chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+368
	DD	imagerel $LN135+375
	DD	imagerel $chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+375
	DD	imagerel $LN135+381
	DD	imagerel $chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+381
	DD	imagerel $LN135+387
	DD	imagerel $chain$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z DD imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+14
	DD	imagerel $LN26+48
	DD	imagerel $chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+48
	DD	imagerel $LN26+57
	DD	imagerel $chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+32
	DD	imagerel $LN135+368
	DD	imagerel $chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+368
	DD	imagerel $LN135+375
	DD	imagerel $chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+375
	DD	imagerel $LN135+381
	DD	imagerel $chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+381
	DD	imagerel $LN135+387
	DD	imagerel $chain$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z DD imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+14
	DD	imagerel $LN26+48
	DD	imagerel $chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z DD imagerel $LN26+48
	DD	imagerel $LN26+57
	DD	imagerel $chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+32
	DD	imagerel $LN135+368
	DD	imagerel $chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+368
	DD	imagerel $LN135+375
	DD	imagerel $chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+375
	DD	imagerel $LN135+381
	DD	imagerel $chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN135+381
	DD	imagerel $LN135+387
	DD	imagerel $chain$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD imagerel $LN51
	DD	imagerel $LN51+145
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN153
	DD	imagerel $LN153+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN153+32
	DD	imagerel $LN153+208
	DD	imagerel $chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN153+208
	DD	imagerel $LN153+635
	DD	imagerel $chain$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN153+635
	DD	imagerel $LN153+745
	DD	imagerel $chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN153+745
	DD	imagerel $LN153+752
	DD	imagerel $chain$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN153+752
	DD	imagerel $LN153+758
	DD	imagerel $chain$8$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN153+758
	DD	imagerel $LN153+764
	DD	imagerel $chain$9$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z DD imagerel $LN101
	DD	imagerel $LN101+116
	DD	imagerel $unwind$??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z DD imagerel $LN101+116
	DD	imagerel $LN101+294
	DD	imagerel $chain$1$??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z DD imagerel $LN101+294
	DD	imagerel $LN101+300
	DD	imagerel $chain$2$??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD imagerel $LN62
	DD	imagerel $LN62+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD imagerel $LN62+10
	DD	imagerel $LN62+124
	DD	imagerel $chain$1$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD imagerel $LN62+124
	DD	imagerel $LN62+125
	DD	imagerel $chain$2$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD imagerel $LN62+125
	DD	imagerel $LN62+132
	DD	imagerel $chain$3$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD imagerel $LN124
	DD	imagerel $LN124+14
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD imagerel $LN124+14
	DD	imagerel $LN124+273
	DD	imagerel $chain$1$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD imagerel $LN124+273
	DD	imagerel $LN124+274
	DD	imagerel $chain$2$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD imagerel $LN124+274
	DD	imagerel $LN124+281
	DD	imagerel $chain$3$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN36
	DD	imagerel $LN36+93
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN36+93
	DD	imagerel $LN36+132
	DD	imagerel $chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN36+132
	DD	imagerel $LN36+143
	DD	imagerel $chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN10
	DD	imagerel $LN10+100
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN10
	DD	imagerel $LN10+100
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+117
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+117
	DD	imagerel $LN33+151
	DD	imagerel $chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+151
	DD	imagerel $LN33+166
	DD	imagerel $chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN10
	DD	imagerel $LN10+100
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+95
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+95
	DD	imagerel $LN33+129
	DD	imagerel $chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+129
	DD	imagerel $LN33+144
	DD	imagerel $chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+95
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+95
	DD	imagerel $LN33+129
	DD	imagerel $chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+129
	DD	imagerel $LN33+144
	DD	imagerel $chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN10
	DD	imagerel $LN10+136
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+117
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+117
	DD	imagerel $LN33+151
	DD	imagerel $chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+151
	DD	imagerel $LN33+166
	DD	imagerel $chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+116
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+116
	DD	imagerel $LN33+146
	DD	imagerel $chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+146
	DD	imagerel $LN33+161
	DD	imagerel $chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+116
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+116
	DD	imagerel $LN33+146
	DD	imagerel $chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+146
	DD	imagerel $LN33+161
	DD	imagerel $chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+116
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+116
	DD	imagerel $LN33+146
	DD	imagerel $chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN33+146
	DD	imagerel $LN33+161
	DD	imagerel $chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN10
	DD	imagerel $LN10+136
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z DD imagerel $LN28
	DD	imagerel $LN28+69
	DD	imagerel $unwind$??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z DD imagerel $LN28+69
	DD	imagerel $LN28+126
	DD	imagerel $chain$0$??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z DD imagerel $LN28+126
	DD	imagerel $LN28+166
	DD	imagerel $chain$1$??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DM$0A@@glm@@YA?AU?$vec@$03M$0A@@0@AEBU?$mat@$03$03M$0A@@0@AEBU10@@Z DD imagerel $LN192
	DD	imagerel $LN192+351
	DD	imagerel $unwind$??$?DM$0A@@glm@@YA?AU?$vec@$03M$0A@@0@AEBU?$mat@$03$03M$0A@@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$scale@M$0A@@glm@@YA?AU?$mat@$03$03M$0A@@0@AEBU10@AEBU?$vec@$02M$0A@@0@@Z DD imagerel $LN98
	DD	imagerel $LN98+282
	DD	imagerel $unwind$??$scale@M$0A@@glm@@YA?AU?$mat@$03$03M$0A@@0@AEBU10@AEBU?$vec@$02M$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+66
	DD	imagerel $unwind$?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+66
	DD	imagerel $unwind$?deallocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+63
	DD	imagerel $unwind$?deallocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+63
	DD	imagerel $unwind$?deallocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+63
	DD	imagerel $unwind$?deallocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+66
	DD	imagerel $unwind$?deallocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+92
	DD	imagerel $unwind$?_Tidy@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+114
	DD	imagerel $unwind$?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+92
	DD	imagerel $unwind$?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+92
	DD	imagerel $unwind$?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+92
	DD	imagerel $unwind$?_Tidy@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+104
	DD	imagerel $unwind$?_Tidy@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+114
	DD	imagerel $unwind$?_Tidy@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+110
	DD	imagerel $unwind$?_Tidy@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+110
	DD	imagerel $unwind$?_Tidy@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+110
	DD	imagerel $unwind$?_Tidy@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+104
	DD	imagerel $unwind$?_Tidy@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z DD imagerel $LN38
	DD	imagerel $LN38+93
	DD	imagerel $unwind$?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z DD imagerel $LN38+93
	DD	imagerel $LN38+132
	DD	imagerel $chain$0$?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z DD imagerel $LN38+132
	DD	imagerel $LN38+143
	DD	imagerel $chain$1$?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN12
	DD	imagerel $LN12+100
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+92
	DD	imagerel $unwind$??1?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN12
	DD	imagerel $LN12+100
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+114
	DD	imagerel $unwind$??1?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35
	DD	imagerel $LN35+117
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+117
	DD	imagerel $LN35+151
	DD	imagerel $chain$0$?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+151
	DD	imagerel $LN35+166
	DD	imagerel $chain$1$?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+92
	DD	imagerel $unwind$??1?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN12
	DD	imagerel $LN12+100
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+92
	DD	imagerel $unwind$??1?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35
	DD	imagerel $LN35+95
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+95
	DD	imagerel $LN35+129
	DD	imagerel $chain$0$?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+129
	DD	imagerel $LN35+144
	DD	imagerel $chain$1$?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+92
	DD	imagerel $unwind$??1?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35
	DD	imagerel $LN35+95
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+95
	DD	imagerel $LN35+129
	DD	imagerel $chain$0$?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+129
	DD	imagerel $LN35+144
	DD	imagerel $chain$1$?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+104
	DD	imagerel $unwind$??1?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN12
	DD	imagerel $LN12+136
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+114
	DD	imagerel $unwind$??1?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35
	DD	imagerel $LN35+117
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+117
	DD	imagerel $LN35+151
	DD	imagerel $chain$0$?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+151
	DD	imagerel $LN35+166
	DD	imagerel $chain$1$?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+110
	DD	imagerel $unwind$??1?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35
	DD	imagerel $LN35+116
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+116
	DD	imagerel $LN35+146
	DD	imagerel $chain$0$?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+146
	DD	imagerel $LN35+161
	DD	imagerel $chain$1$?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+110
	DD	imagerel $unwind$??1?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35
	DD	imagerel $LN35+116
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+116
	DD	imagerel $LN35+146
	DD	imagerel $chain$0$?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+146
	DD	imagerel $LN35+161
	DD	imagerel $chain$1$?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+110
	DD	imagerel $unwind$??1?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35
	DD	imagerel $LN35+116
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+116
	DD	imagerel $LN35+146
	DD	imagerel $chain$0$?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN35+146
	DD	imagerel $LN35+161
	DD	imagerel $chain$1$?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+104
	DD	imagerel $unwind$??1?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD imagerel $LN12
	DD	imagerel $LN12+136
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z DD imagerel $LN976
	DD	imagerel $LN976+3385
	DD	imagerel $unwind$??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ DD imagerel $LN1901
	DD	imagerel $LN1901+9966
	DD	imagerel $unwind$?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$13@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA DD imagerel ?dtor$13@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA
	DD	imagerel ?dtor$13@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA+41
	DD	imagerel $unwind$?dtor$13@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z DD imagerel $LN510
	DD	imagerel $LN510+1168
	DD	imagerel $unwind$?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z DB 04H
	DB	01H, 0cH
	DB	02H
	DB	0c9H, 04H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z
	DD	imagerel $ip2state$?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z DD 0217019H
	DD	0bf862H
	DD	0ce85aH
	DD	0dd852H
	DD	0ec84aH
	DD	0fb842H
	DD	010a83aH
	DD	0119835H
	DD	0128830H
	DD	013782bH
	DD	0146827H
	DD	0337423H
	DD	0326423H
	DD	0313423H
	DD	02a0123H
	DD	0e016f018H
	DD	0c012d014H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z
	DD	0a2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$13@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ DB '$'
	DB	0ceH
	DB	04H
	DB	05H, 03H
	DB	06H
	DB	'P'
	DB	08H
	DB	'e', 06H
	DB	016H
	DB	0a6H
	DB	018H
	DB	'H'
	DB	016H
	DB	01eH
	DB	08H
	DB	0a1H, 02H
	DB	0aH
	DB	01aH
	DB	0cH
	DB	0a6H
	DB	0eH
	DB	019H, 02H
	DB	010H
	DB	'4'
	DB	012H
	DB	08dH, 02H
	DB	014H
	DB	'L'
	DB	012H
	DB	01cH
	DB	010H
	DB	0c5H, 06H
	DB	08H
	DB	0cdH, 'x'
	DB	06H
	DB	0edH, 03H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ DB 018H
	DB	0eH
	DD	imagerel ?dtor$13@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA
	DB	02aH
	DD	imagerel ??1BinaryVectorWriter@@QEAA@XZ
	DB	021H
	DB	05H
	DB	03aH
	DD	imagerel ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
	DB	0a1H
	DB	05H
	DB	03aH
	DD	imagerel ??1?$vector@GV?$allocator@G@std@@@std@@QEAA@XZ
	DB	01H
	DB	06H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	04H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	081H
	DB	03H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	01H
	DB	04H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e0H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
	DB	0e5H
	DB	02H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e0H
	DB	03cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ DB 028H
	DD	imagerel $stateUnwindMap$?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ
	DD	imagerel $ip2state$?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ DD 0b3019H
	DD	042341fH
	DD	038011fH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ
	DD	01b2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z DB 04H
	DB	0adH, 08H
	DB	01eH
	DB	'}*'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z DB 01eH
	DB	0cH
	DD	imagerel ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
	DB	070H
	DB	036H
	DD	imagerel ?dtor$1@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$9@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$11@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$12@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$13@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$14@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z
	DD	imagerel $ip2state$??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z DD 0a2319H
	DD	0143414H
	DD	0f0109214H
	DD	0d00ce00eH
	DD	07008c00aH
	DD	050066007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z
	DD	042H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 021H
	DD	imagerel $LN35
	DD	imagerel $LN35+116
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 020521H
	DD	083405H
	DD	imagerel $LN35
	DD	imagerel $LN35+116
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 021H
	DD	imagerel $LN35
	DD	imagerel $LN35+116
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 020521H
	DD	083405H
	DD	imagerel $LN35
	DD	imagerel $LN35+116
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 021H
	DD	imagerel $LN35
	DD	imagerel $LN35+116
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 020521H
	DD	083405H
	DD	imagerel $LN35
	DD	imagerel $LN35+116
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 021H
	DD	imagerel $LN35
	DD	imagerel $LN35+117
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 020521H
	DD	083405H
	DD	imagerel $LN35
	DD	imagerel $LN35+117
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 021H
	DD	imagerel $LN35
	DD	imagerel $LN35+95
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 020521H
	DD	083405H
	DD	imagerel $LN35
	DD	imagerel $LN35+95
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 021H
	DD	imagerel $LN35
	DD	imagerel $LN35+95
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 020521H
	DD	083405H
	DD	imagerel $LN35
	DD	imagerel $LN35+95
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 021H
	DD	imagerel $LN35
	DD	imagerel $LN35+117
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 020521H
	DD	083405H
	DD	imagerel $LN35
	DD	imagerel $LN35+117
	DD	imagerel $unwind$?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z DD 021H
	DD	imagerel $LN38
	DD	imagerel $LN38+93
	DD	imagerel $unwind$?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z DD 020521H
	DD	083405H
	DD	imagerel $LN38
	DD	imagerel $LN38+93
	DD	imagerel $unwind$?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$scale@M$0A@@glm@@YA?AU?$mat@$03$03M$0A@@0@AEBU10@AEBU?$vec@$02M$0A@@0@@Z DD 031401H
	DD	016814H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DM$0A@@glm@@YA?AU?$vec@$03M$0A@@0@AEBU?$mat@$03$03M$0A@@0@AEBU10@@Z DD 0d5301H
	DD	0b853H
	DD	01a849H
	DD	029843H
	DD	038837H
	DD	04782aH
	DD	056821H
	DD	0c204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z DD 021H
	DD	imagerel $LN28
	DD	imagerel $LN28+69
	DD	imagerel $unwind$??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z DD 020521H
	DD	047405H
	DD	imagerel $LN28
	DD	imagerel $LN28+69
	DD	imagerel $unwind$??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN33
	DD	imagerel $LN33+116
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020521H
	DD	083405H
	DD	imagerel $LN33
	DD	imagerel $LN33+116
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN33
	DD	imagerel $LN33+116
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020521H
	DD	083405H
	DD	imagerel $LN33
	DD	imagerel $LN33+116
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN33
	DD	imagerel $LN33+116
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020521H
	DD	083405H
	DD	imagerel $LN33
	DD	imagerel $LN33+116
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN33
	DD	imagerel $LN33+117
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020521H
	DD	083405H
	DD	imagerel $LN33
	DD	imagerel $LN33+117
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN33
	DD	imagerel $LN33+95
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020521H
	DD	083405H
	DD	imagerel $LN33
	DD	imagerel $LN33+95
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN33
	DD	imagerel $LN33+95
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020521H
	DD	083405H
	DD	imagerel $LN33
	DD	imagerel $LN33+95
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN33
	DD	imagerel $LN33+117
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020521H
	DD	083405H
	DD	imagerel $LN33
	DD	imagerel $LN33+117
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN36
	DD	imagerel $LN36+93
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020521H
	DD	083405H
	DD	imagerel $LN36
	DD	imagerel $LN36+93
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040a01H
	DD	09640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD 040021H
	DD	086400H
	DD	073400H
	DD	imagerel $LN124
	DD	imagerel $LN124+14
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD 021H
	DD	imagerel $LN124
	DD	imagerel $LN124+14
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD 040d21H
	DD	08640dH
	DD	073405H
	DD	imagerel $LN124
	DD	imagerel $LN124+14
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD 020e01H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD 040021H
	DD	086400H
	DD	073400H
	DD	imagerel $LN62
	DD	imagerel $LN62+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD 021H
	DD	imagerel $LN62
	DD	imagerel $LN62+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD 040d21H
	DD	08640dH
	DD	073405H
	DD	imagerel $LN62
	DD	imagerel $LN62+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z DD 021H
	DD	imagerel $LN101
	DD	imagerel $LN101+116
	DD	imagerel $unwind$??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z DD 041521H
	DD	046415H
	DD	0e5405H
	DD	imagerel $LN101
	DD	imagerel $LN101+116
	DD	imagerel $unwind$??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z DD 070f01H
	DD	0f00b420fH
	DD	0d007e009H
	DD	07003c005H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 080021H
	DD	05e400H
	DD	06c400H
	DD	0d6400H
	DD	0c3400H
	DD	imagerel $LN153
	DD	imagerel $LN153+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN153
	DD	imagerel $LN153+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 080021H
	DD	05e400H
	DD	06c400H
	DD	0d6400H
	DD	0c3400H
	DD	imagerel $LN153
	DD	imagerel $LN153+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN153+32
	DD	imagerel $LN153+208
	DD	imagerel $chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020521H
	DD	04f405H
	DD	imagerel $LN153+32
	DD	imagerel $LN153+208
	DD	imagerel $chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 081a21H
	DD	05e41aH
	DD	06c412H
	DD	0d640dH
	DD	0c3405H
	DD	imagerel $LN153
	DD	imagerel $LN153+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 030701H
	DD	070036207H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 080021H
	DD	04f400H
	DD	05e400H
	DD	066400H
	DD	0c3400H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 080021H
	DD	04f400H
	DD	05e400H
	DD	066400H
	DD	0c3400H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 082d21H
	DD	04f42dH
	DD	05e412H
	DD	06640dH
	DD	0c3405H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 030701H
	DD	070036207H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z DD 021H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 080021H
	DD	04f400H
	DD	05e400H
	DD	066400H
	DD	0c3400H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 080021H
	DD	04f400H
	DD	05e400H
	DD	066400H
	DD	0c3400H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 082d21H
	DD	04f42dH
	DD	05e412H
	DD	06640dH
	DD	0c3405H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 030701H
	DD	070036207H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z DD 021H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 080021H
	DD	04f400H
	DD	05e400H
	DD	066400H
	DD	0c3400H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 080021H
	DD	04f400H
	DD	05e400H
	DD	066400H
	DD	0c3400H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 082d21H
	DD	04f42dH
	DD	05e412H
	DD	06640dH
	DD	0c3405H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 030701H
	DD	070036207H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z DD 021H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN67
	DD	imagerel $LN67+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020021H
	DD	0bf400H
	DD	imagerel $LN67
	DD	imagerel $LN67+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 043821H
	DD	0bf438H
	DD	0ae405H
	DD	imagerel $LN67
	DD	imagerel $LN67+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040801H
	DD	070043208H
	DD	030026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z DD 021H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 080021H
	DD	04f400H
	DD	057400H
	DD	065400H
	DD	0c3400H
	DD	imagerel $LN161
	DD	imagerel $LN161+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN161
	DD	imagerel $LN161+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 080021H
	DD	04f400H
	DD	057400H
	DD	065400H
	DD	0c3400H
	DD	imagerel $LN161
	DD	imagerel $LN161+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 083621H
	DD	04f436H
	DD	057431H
	DD	06540dH
	DD	0c3405H
	DD	imagerel $LN161
	DD	imagerel $LN161+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 030801H
	DD	0e0046208H
	DD	06002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 060021H
	DD	04e400H
	DD	0b6400H
	DD	0a3400H
	DD	imagerel $LN130
	DD	imagerel $LN130+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN130
	DD	imagerel $LN130+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 060021H
	DD	04e400H
	DD	0b6400H
	DD	0a3400H
	DD	imagerel $LN130
	DD	imagerel $LN130+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 061221H
	DD	04e412H
	DD	0b640dH
	DD	0a3405H
	DD	imagerel $LN130
	DD	imagerel $LN130+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 030701H
	DD	070034207H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z DD 021H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 060021H
	DD	04e400H
	DD	0b6400H
	DD	0a3400H
	DD	imagerel $LN130
	DD	imagerel $LN130+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN130
	DD	imagerel $LN130+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 060021H
	DD	04e400H
	DD	0b6400H
	DD	0a3400H
	DD	imagerel $LN130
	DD	imagerel $LN130+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 061221H
	DD	04e412H
	DD	0b640dH
	DD	0a3405H
	DD	imagerel $LN130
	DD	imagerel $LN130+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 030701H
	DD	070034207H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z DD 021H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 060021H
	DD	047400H
	DD	0b5400H
	DD	0a3400H
	DD	imagerel $LN134
	DD	imagerel $LN134+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN134
	DD	imagerel $LN134+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 060021H
	DD	047400H
	DD	0b5400H
	DD	0a3400H
	DD	imagerel $LN134
	DD	imagerel $LN134+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 063121H
	DD	047431H
	DD	0b540dH
	DD	0a3405H
	DD	imagerel $LN134
	DD	imagerel $LN134+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 030801H
	DD	0e0044208H
	DD	06002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 080021H
	DD	04f400H
	DD	05e400H
	DD	065400H
	DD	0c3400H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 080021H
	DD	04f400H
	DD	05e400H
	DD	065400H
	DD	0c3400H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 082121H
	DD	04f421H
	DD	05e41cH
	DD	06540dH
	DD	0c3405H
	DD	imagerel $LN135
	DD	imagerel $LN135+32
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 030701H
	DD	070036207H
	DD	06002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z DD 021H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN26
	DD	imagerel $LN26+14
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN67
	DD	imagerel $LN67+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 020021H
	DD	0be400H
	DD	imagerel $LN67
	DD	imagerel $LN67+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 042c21H
	DD	0be42cH
	DD	0a5405H
	DD	imagerel $LN67
	DD	imagerel $LN67+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040801H
	DD	070043208H
	DD	030026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 060021H
	DD	047400H
	DD	0b5400H
	DD	0a3400H
	DD	imagerel $LN134
	DD	imagerel $LN134+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN134
	DD	imagerel $LN134+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 060021H
	DD	047400H
	DD	0b5400H
	DD	0a3400H
	DD	imagerel $LN134
	DD	imagerel $LN134+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 063121H
	DD	047431H
	DD	0b540dH
	DD	0a3405H
	DD	imagerel $LN134
	DD	imagerel $LN134+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 030801H
	DD	0e0044208H
	DD	06002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 021H
	DD	imagerel $LN65
	DD	imagerel $LN65+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 042c21H
	DD	0be42cH
	DD	0a5405H
	DD	imagerel $LN65
	DD	imagerel $LN65+33
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 040801H
	DD	070043208H
	DD	030026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@_K@std@@@std@@YAPEA_KPEA_K_KAEAV?$allocator@_K@0@@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K1@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K1@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K1@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K1@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K1@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K1@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K1@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K1@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K1@Z DD 081501H
	DD	097415H
	DD	086415H
	DD	073415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K1@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	073414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD 021H
	DD	imagerel $LN69
	DD	imagerel $LN69+24
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD 020521H
	DD	077405H
	DD	imagerel $LN69
	DD	imagerel $LN69+24
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD 021H
	DD	imagerel $LN42
	DD	imagerel $LN42+20
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD 020521H
	DD	077405H
	DD	imagerel $LN42
	DD	imagerel $LN42+20
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Zero_range@PEA_K@std@@YAPEA_KQEA_K0@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@XZ DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0IA@@std@@YA_K_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0CM@@std@@YA_K_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAAPEAXI@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@00@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@00@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@00@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@00@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@00@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@00@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@00@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@00@Z DD 040a01H
	DD	09340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
;	COMDAT ?InternalFluidTypeToActorFluidType@PhiveStaticCompound@@SA?AW4WaterFluidType@Actor@@I@Z
_TEXT	SEGMENT
Type$ = 8
?InternalFluidTypeToActorFluidType@PhiveStaticCompound@@SA?AW4WaterFluidType@Actor@@I@Z PROC ; PhiveStaticCompound::InternalFluidTypeToActorFluidType, COMDAT

; 26   : 	switch (Type)

	cmp	ecx, 3
	je	SHORT $LN6@InternalFl
	xor	eax, eax
	cmp	ecx, 38					; 00000026H
	je	SHORT $LN1@InternalFl
	cmp	ecx, 41					; 00000029H
	sete	al

; 34   : 	default:
; 35   : 		return Actor::WaterFluidType::Water;
; 36   : 	}
; 37   : }

	ret	0
$LN6@InternalFl:

; 27   : 	{
; 28   : 	case 38:
; 29   : 		return Actor::WaterFluidType::Water;
; 30   : 	case 41:
; 31   : 		return Actor::WaterFluidType::Lava;
; 32   : 	case 3:
; 33   : 		return Actor::WaterFluidType::DriftSand;

	mov	eax, 2
$LN1@InternalFl:

; 34   : 	default:
; 35   : 		return Actor::WaterFluidType::Water;
; 36   : 	}
; 37   : }

	ret	0
?InternalFluidTypeToActorFluidType@PhiveStaticCompound@@SA?AW4WaterFluidType@Actor@@I@Z ENDP ; PhiveStaticCompound::InternalFluidTypeToActorFluidType
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
;	COMDAT ?ActorFluidTypeToInternalFluidType@PhiveStaticCompound@@SAIW4WaterFluidType@Actor@@@Z
_TEXT	SEGMENT
Type$ = 8
?ActorFluidTypeToInternalFluidType@PhiveStaticCompound@@SAIW4WaterFluidType@Actor@@@Z PROC ; PhiveStaticCompound::ActorFluidTypeToInternalFluidType, COMDAT

; 11   : 	switch (Type)

	test	ecx, ecx
	je	SHORT $LN4@ActorFluid
	sub	ecx, 1
	je	SHORT $LN5@ActorFluid
	cmp	ecx, 1
	jne	SHORT $LN4@ActorFluid

; 17   : 	case Actor::WaterFluidType::DriftSand:
; 18   : 		return 3;

	lea	eax, QWORD PTR [rcx+2]

; 19   : 	default:
; 20   : 		return 38; //Water
; 21   : 	}
; 22   : }

	ret	0
$LN5@ActorFluid:

; 15   : 	case Actor::WaterFluidType::Lava:
; 16   : 		return 41;

	mov	eax, 41					; 00000029H

; 19   : 	default:
; 20   : 		return 38; //Water
; 21   : 	}
; 22   : }

	ret	0
$LN4@ActorFluid:

; 12   : 	{
; 13   : 	case Actor::WaterFluidType::Water:
; 14   : 		return 38;

	mov	eax, 38					; 00000026H

; 19   : 	default:
; 20   : 		return 38; //Water
; 21   : 	}
; 22   : }

	ret	0
?ActorFluidTypeToInternalFluidType@PhiveStaticCompound@@SAIW4WaterFluidType@Actor@@@Z ENDP ; PhiveStaticCompound::ActorFluidTypeToInternalFluidType
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec3.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec3.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec2.inl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\limits
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
;	COMDAT ?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z
_TEXT	SEGMENT
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
_y$1$ = 48
Max$ = 48
GLMModel$1$ = 56
_z$1$ = 60
ModelVertices$ = 64
GLMModel$ = 96
__$ArrayPad$ = 160
__$ReturnUdt$ = 384
SceneActor$ = 392
?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z PROC ; PhiveStaticCompound::GetActorModelScale, COMDAT

; 40   : {

$LN510:
	mov	rax, rsp
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax+24], rsi
	mov	QWORD PTR [rax+32], rdi
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rax-120]
	sub	rsp, 336				; 00000150H
	movaps	XMMWORD PTR [rax-56], xmm6
	movaps	XMMWORD PTR [rax-72], xmm7
	movaps	XMMWORD PTR [rax-88], xmm8
	movaps	XMMWORD PTR [rax-104], xmm9
	movaps	XMMWORD PTR [rax-120], xmm10
	movaps	XMMWORD PTR [rax-136], xmm11
	movaps	XMMWORD PTR [rax-152], xmm12
	movaps	XMMWORD PTR [rax-168], xmm13
	movaps	XMMWORD PTR [rax-184], xmm14
	movaps	XMMWORD PTR [rax-200], xmm15
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	r14, rdx
	mov	r12, rcx

; 41   : 	if (SceneActor.Model->IsDefaultModel() || SceneActor.Model->GetModels().empty())

	mov	rcx, QWORD PTR [rdx+424]
	cmp	BYTE PTR [rcx+72], 0
	jne	$LN12@GetActorMo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1864 :         return _My_data._Myfirst == _My_data._Mylast;

	mov	rdx, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 41   : 	if (SceneActor.Model->IsDefaultModel() || SceneActor.Model->GetModels().empty())

	cmp	rdx, QWORD PTR [rcx+8]
	je	$LN12@GetActorMo

; 42   : 		return std::nullopt;
; 43   : 
; 44   : 	if (SceneActor.Model->GetModels()[0].LODs.empty())

	mov	rax, QWORD PTR [rdx+8]
	cmp	QWORD PTR [rdx], rax
	je	$LN12@GetActorMo
	xor	eax, eax
	xorps	xmm1, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	movdqu	XMMWORD PTR ModelVertices$[rsp], xmm1
	mov	QWORD PTR ModelVertices$[rsp+16], rax

; 1883 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR [rcx]

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	r13, QWORD PTR [rax]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 178  : 		: x(static_cast<T>(_x))

	mov	QWORD PTR GLMModel$[rsp], 1065353216	; 3f800000H
	xorps	xmm3, xmm3

; 179  : 		, y(static_cast<T>(_y))
; 180  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR GLMModel$[rsp+8], 0

; 178  : 		: x(static_cast<T>(_x))

	movaps	xmm6, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 52   : 	GLMModel = glm::scale(GLMModel, glm::vec3(SceneActor.Scale.GetX(), SceneActor.Scale.GetY(), SceneActor.Scale.GetZ()));

	movss	xmm4, DWORD PTR [r14+72]
	movss	xmm1, DWORD PTR [r14+68]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec3.inl

; 38   : 		: x(_x), y(_y), z(_z)

	movss	xmm5, DWORD PTR [r14+64]
	movaps	xmm0, xmm5
	mulss	xmm0, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 81   : 		Result[0] = m[0] * v[0];

	shufps	xmm5, xmm5, 225				; 000000e1H
	movss	xmm5, xmm0
	shufps	xmm5, xmm5, 198				; 000000c6H
	movss	xmm5, xmm0
	shufps	xmm5, xmm5, 39				; 00000027H
	movss	xmm5, xmm0
	shufps	xmm5, xmm5, 57				; 00000039H
	movups	XMMWORD PTR $T4[rsp], xmm5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 156  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	movaps	xmm0, xmm1
	mulss	xmm0, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 82   : 		Result[1] = m[1] * v[1];

	movaps	xmm2, xmm0
	shufps	xmm2, xmm2, 225				; 000000e1H
	movss	xmm2, xmm1
	shufps	xmm2, xmm2, 198				; 000000c6H
	movss	xmm2, xmm0
	shufps	xmm2, xmm2, 39				; 00000027H
	movss	xmm2, xmm0
	shufps	xmm2, xmm2, 57				; 00000039H
	movups	XMMWORD PTR $T3[rsp], xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 156  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	movaps	xmm0, xmm4
	mulss	xmm0, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 83   : 		Result[2] = m[2] * v[2];

	movaps	xmm1, xmm0
	shufps	xmm1, xmm1, 225				; 000000e1H
	movss	xmm1, xmm0
	shufps	xmm1, xmm1, 198				; 000000c6H
	movss	xmm1, xmm4
	shufps	xmm1, xmm1, 39				; 00000027H
	movss	xmm1, xmm0
	shufps	xmm1, xmm1, 57				; 00000039H
	movups	XMMWORD PTR $T2[rsp], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 52   : 	GLMModel = glm::scale(GLMModel, glm::vec3(SceneActor.Scale.GetX(), SceneActor.Scale.GetY(), SceneActor.Scale.GetZ()));

	movaps	XMMWORD PTR GLMModel$[rsp], xmm5
	movaps	XMMWORD PTR GLMModel$[rsp+16], xmm2
	movaps	XMMWORD PTR GLMModel$[rbp-224], xmm1
	movaps	XMMWORD PTR GLMModel$[rbp-208], xmm6

; 53   : 	for (uint32_t SubModelIndex = 0; SubModelIndex < LODModel->Faces.size(); SubModelIndex++)

	xor	r15d, r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [r13+8]
	sub	rax, QWORD PTR [r13]
	sar	rax, 3
	mov	r10, -6148914691236517205		; aaaaaaaaaaaaaaabH
	imul	rax, r10
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 53   : 	for (uint32_t SubModelIndex = 0; SubModelIndex < LODModel->Faces.size(); SubModelIndex++)

	mov	r9, QWORD PTR ModelVertices$[rsp+8]
	test	rax, rax
	je	$LN3@GetActorMo
	xor	ecx, ecx
	movss	xmm0, DWORD PTR GLMModel$[rbp-200]
	movss	DWORD PTR _z$1$[rsp], xmm0
	movss	xmm0, DWORD PTR GLMModel$[rbp-204]
	movss	DWORD PTR _y$1$[rsp], xmm0
	movss	xmm7, DWORD PTR GLMModel$[rbp-208]
	movss	xmm8, DWORD PTR GLMModel$[rbp-216]
	movss	xmm9, DWORD PTR GLMModel$[rbp-220]
	movss	xmm10, DWORD PTR GLMModel$[rbp-224]
	movss	xmm11, DWORD PTR GLMModel$[rsp+24]
	movss	xmm12, DWORD PTR GLMModel$[rsp+20]
	movss	xmm13, DWORD PTR GLMModel$[rsp+16]
	movss	xmm14, DWORD PTR GLMModel$[rsp+8]
	movss	xmm15, DWORD PTR GLMModel$[rsp+4]
	movss	xmm3, DWORD PTR GLMModel$[rsp]
	movss	DWORD PTR GLMModel$1$[rsp], xmm3
	npad	3
$LL4@GetActorMo:

; 55   : 		for (size_t i = 0; i < SceneActor.Model->GetModels()[0].Vertices[SubModelIndex].size() / 3; i++)

	xor	ebx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1883 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR [r14+424]

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	r8, QWORD PTR [rax]
	lea	rdi, QWORD PTR [rcx+rcx*2]
	mov	rax, QWORD PTR [r8+24]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rax+rdi*8+8]
	sub	rcx, QWORD PTR [rax+rdi*8]
	sar	rcx, 2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 55   : 		for (size_t i = 0; i < SceneActor.Model->GetModels()[0].Vertices[SubModelIndex].size() / 3; i++)

	mov	rax, r10
	mul	rcx
	shr	rdx, 1
	je	$LN2@GetActorMo
	xor	esi, esi
$LL7@GetActorMo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [r8+24]
	mov	rcx, QWORD PTR [rax+rdi*8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 57   : 			glm::vec4 Vertex(SceneActor.Model->GetModels()[0].Vertices[SubModelIndex][i * 3],

	movss	xmm6, DWORD PTR [rsi+rcx+8]
	movss	xmm5, DWORD PTR [rsi+rcx+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl

; 561  : 		typename mat<4, 4, T, Q>::col_type const Mov0(v[0]);

	movss	xmm2, DWORD PTR [rsi+rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movaps	xmm0, xmm2
	mulss	xmm0, xmm14
	movaps	xmm1, xmm2
	mulss	xmm1, xmm15
	mulss	xmm2, xmm3
	movaps	xmm3, xmm5
	mulss	xmm3, xmm11
	movaps	xmm4, xmm5
	mulss	xmm4, xmm12

; 13   : 			return vec<4, T, Q>(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);

	addss	xmm3, xmm0
	addss	xmm4, xmm1

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulss	xmm5, xmm13

; 13   : 			return vec<4, T, Q>(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);

	addss	xmm5, xmm2

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movaps	xmm0, xmm6
	mulss	xmm0, xmm8
	movaps	xmm1, xmm6
	mulss	xmm1, xmm9
	mulss	xmm6, xmm10

; 13   : 			return vec<4, T, Q>(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);

	movss	xmm2, DWORD PTR _z$1$[rsp]
	addss	xmm2, xmm0
	movss	xmm0, DWORD PTR _y$1$[rsp]
	addss	xmm0, xmm1
	addss	xmm2, xmm3
	addss	xmm0, xmm4
	addss	xmm6, xmm7
	addss	xmm6, xmm5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec3.inl

; 38   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T5[rsp], xmm6
	movss	DWORD PTR $T5[rsp+4], xmm0
	movss	DWORD PTR $T5[rsp+8], xmm2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	cmp	r9, QWORD PTR ModelVertices$[rsp+16]
	je	SHORT $LN188@GetActorMo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	movss	DWORD PTR [r9], xmm6
	movss	DWORD PTR [r9+4], xmm0
	movss	DWORD PTR [r9+8], xmm2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 806  :         ++_Mylast;

	mov	r9, QWORD PTR ModelVertices$[rsp+8]
	add	r9, 12
	mov	QWORD PTR ModelVertices$[rsp+8], r9

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	jmp	SHORT $LN5@GetActorMo
$LN188@GetActorMo:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR $T5[rsp]
	mov	rdx, r9
	lea	rcx, QWORD PTR ModelVertices$[rsp]
	call	??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Emplace_reallocate<glm::vec<3,float,0> >
	mov	r9, QWORD PTR ModelVertices$[rsp+8]
	mov	r10, -6148914691236517205		; aaaaaaaaaaaaaaabH
$LN5@GetActorMo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 55   : 		for (size_t i = 0; i < SceneActor.Model->GetModels()[0].Vertices[SubModelIndex].size() / 3; i++)

	inc	rbx
	add	rsi, 12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1883 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR [r14+424]

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR [r8+24]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rax+rdi*8+8]
	sub	rcx, QWORD PTR [rax+rdi*8]
	sar	rcx, 2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 55   : 		for (size_t i = 0; i < SceneActor.Model->GetModels()[0].Vertices[SubModelIndex].size() / 3; i++)

	mov	rax, r10
	mul	rcx
	shr	rdx, 1
	cmp	rbx, rdx
	movss	xmm3, DWORD PTR GLMModel$1$[rsp]
	jb	$LL7@GetActorMo
$LN2@GetActorMo:

; 53   : 	for (uint32_t SubModelIndex = 0; SubModelIndex < LODModel->Faces.size(); SubModelIndex++)

	inc	r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [r13+8]
	sub	rax, QWORD PTR [r13]
	sar	rax, 3
	imul	rax, r10
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 53   : 	for (uint32_t SubModelIndex = 0; SubModelIndex < LODModel->Faces.size(); SubModelIndex++)

	mov	ecx, r15d
	cmp	rcx, rax
	jb	$LL4@GetActorMo
$LN3@GetActorMo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec2.inl

; 33   : 		: x(scalar), y(scalar)

	movss	xmm0, DWORD PTR __real@ff7fffff
	movss	DWORD PTR Max$[rsp], xmm0
	movaps	xmm1, xmm0
	movss	DWORD PTR Max$[rsp+4], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\limits

; 877  :         return -(max) ();

	mov	rcx, QWORD PTR ModelVertices$[rsp]
	mov	rax, rcx
	cmp	rcx, r9
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 69   : 	for (glm::vec3& Vertex : ModelVertices) {

	je	SHORT $LN9@GetActorMo
$LL10@GetActorMo:

; 70   : 		if (Vertex.x > Max.x) Max.x = Vertex.x * 2;

	movss	xmm2, DWORD PTR [rax]
	comiss	xmm2, xmm0
	jbe	SHORT $LN14@GetActorMo
	movaps	xmm0, xmm2
	addss	xmm0, xmm2
	movss	DWORD PTR Max$[rsp], xmm0
$LN14@GetActorMo:

; 71   : 		if (Vertex.z > Max.y) Max.y = Vertex.z * 2;

	movss	xmm2, DWORD PTR [rax+8]
	comiss	xmm2, xmm1
	jbe	SHORT $LN8@GetActorMo
	movaps	xmm1, xmm2
	addss	xmm1, xmm2
	movss	DWORD PTR Max$[rsp+4], xmm1
$LN8@GetActorMo:

; 69   : 	for (glm::vec3& Vertex : ModelVertices) {

	add	rax, 12
	cmp	rax, r9
	jne	SHORT $LL10@GetActorMo
$LN9@GetActorMo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional

; 83   :         : _Value(_STD forward<_Types>(_Args)...), _Has_value{true} {} // initialize contained value with _Args...

	mov	rax, QWORD PTR Max$[rsp]
	mov	QWORD PTR [r12], rax
	mov	BYTE PTR [r12+8], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	test	rcx, rcx
	je	SHORT $LN35@GetActorMo

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR ModelVertices$[rsp+16]
	sub	rax, rcx
	sar	rax, 2
	imul	rax, r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 2
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN47@GetActorMo

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN47@GetActorMo
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN47@GetActorMo:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 74   : 	return Max;

	jmp	SHORT $LN35@GetActorMo
$LN12@GetActorMo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional

; 78   :     constexpr _Optional_destruct_base() noexcept : _Dummy{}, _Has_value{false} {} // initialize an empty optional

	mov	BYTE PTR [r12+8], 0
$LN35@GetActorMo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 75   : }

	mov	rax, r12
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+336]
	mov	rbx, QWORD PTR [r11+56]
	mov	rsi, QWORD PTR [r11+64]
	mov	rdi, QWORD PTR [r11+72]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	movaps	xmm11, XMMWORD PTR [r11-96]
	movaps	xmm12, XMMWORD PTR [r11-112]
	movaps	xmm13, XMMWORD PTR [r11-128]
	movaps	xmm14, XMMWORD PTR [r11-144]
	movaps	xmm15, XMMWORD PTR [r11-160]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
$LN507@GetActorMo:
?GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z ENDP ; PhiveStaticCompound::GetActorModelScale
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T2 = 32
$T3 = 32
$T4 = 32
$T5 = 32
_y$1$ = 48
Max$ = 48
GLMModel$1$ = 56
_z$1$ = 60
ModelVertices$ = 64
GLMModel$ = 96
__$ArrayPad$ = 160
__$ReturnUdt$ = 384
SceneActor$ = 392
?dtor$0@?0??GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z@4HA PROC ; `PhiveStaticCompound::GetActorModelScale'::`1'::dtor$0
	lea	rcx, QWORD PTR ModelVertices$[rdx]
	jmp	??1?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::~vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >
?dtor$0@?0??GetActorModelScale@PhiveStaticCompound@@SA?AV?$optional@U?$vec@$01M$0A@@glm@@@std@@AEAUActor@@@Z@4HA ENDP ; `PhiveStaticCompound::GetActorModelScale'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
;	COMDAT ?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ
_TEXT	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ PROC ; PhiveStaticCompound::ToBinary, COMDAT

; 201  : {

$LN1901:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-192]
	sub	rsp, 448				; 000001c0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-256], rdx
	mov	rbx, rcx
	mov	QWORD PTR this$GSCopy$1$[rbp-256], rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rbp-256], rdx
	xor	esi, esi
	mov	r15d, esi
	mov	DWORD PTR $T1[rsp], esi
	xorps	xmm0, xmm0
	movups	XMMWORD PTR Writer$[rbp-240], xmm0
	xorps	xmm1, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	movdqu	XMMWORD PTR Writer$[rbp-256], xmm1
	mov	QWORD PTR Writer$[rbp-240], rsi
	mov	DWORD PTR Writer$[rbp-232], esi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 24   : 			this->m_Data.resize(Offset + 1);

	mov	edx, 781				; 0000030dH
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 26   : 		this->m_Offset = Offset;

	mov	DWORD PTR Writer$[rbp-232], 780		; 0000030cH
	npad	13
$LL1232@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], 0

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL1232@ToBinary
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
	lea	eax, DWORD PTR [rdi+19120]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 30   : 		if (this->m_Offset + Offset >= this->m_Data.size())

	movsxd	rcx, eax
	cmp	rcx, rdx
	jb	SHORT $LN1247@ToBinary

; 31   : 		{
; 32   : 			this->m_Data.resize(Offset + this->m_Offset + 1);

	lea	eax, DWORD PTR [rdi+19121]
	movsxd	rdx, eax
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1247@ToBinary:

; 33   : 		}
; 34   : 		this->m_Offset += Offset;

	add	edi, 19120				; 00004ab0H
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1861@ToBinary
	npad	8
$LL1257@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], 0

; 14   : 	this->m_Offset++;

	mov	eax, DWORD PTR Writer$[rbp-232]
	inc	eax
	mov	DWORD PTR Writer$[rbp-232], eax
	test	al, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL1257@ToBinary
$LN1861@ToBinary:
	xorps	xmm1, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	movdqu	XMMWORD PTR ActorHashMap$[rbp-256], xmm1
	mov	QWORD PTR ActorHashMap$[rbp-240], rsi
	movdqu	XMMWORD PTR ActorIndexMap$[rbp-256], xmm1
	mov	QWORD PTR ActorIndexMap$[rbp-240], rsi

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR [rbx+19912]
	sub	rdx, QWORD PTR [rbx+19904]
	sar	rdx, 5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 211  : 	ActorHashMap.resize(mActorLinks.size() * 2);

	add	rdx, rdx
	lea	rcx, QWORD PTR ActorHashMap$[rbp-256]
	call	?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::resize
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR [rbx+19912]
	sub	rdx, QWORD PTR [rbx+19904]
	sar	rdx, 5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 212  : 	ActorIndexMap.resize(mActorLinks.size() * 2);

	add	rdx, rdx
	lea	rcx, QWORD PTR ActorIndexMap$[rbp-256]
	call	?resize@?$vector@GV?$allocator@G@std@@@std@@QEAAX_K@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::resize
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5039 :         const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR ActorHashMap$[rbp-248]

; 5016 :     _CSTD memset(_To_address(_Dest), 0, _Count * sizeof(_Iter_value_t<_CtgIt>));

	sub	r8, QWORD PTR ActorHashMap$[rbp-256]
	and	r8, -8
	xor	edx, edx
	mov	rcx, QWORD PTR ActorHashMap$[rbp-256]
	call	memset

; 5049 :                     _Fill_zero_memset(_UFirst, static_cast<size_t>(_ULast - _UFirst));

	mov	r8, QWORD PTR ActorIndexMap$[rbp-248]
	mov	rcx, QWORD PTR ActorIndexMap$[rbp-256]
	sub	r8, rcx
	sar	r8, 1

; 5016 :     _CSTD memset(_To_address(_Dest), 0, _Count * sizeof(_Iter_value_t<_CtgIt>));

	add	r8, r8
	xor	edx, edx
	call	memset

; 5050 :                     return;

	mov	rsi, QWORD PTR ActorHashMap$[rbp-256]
	xor	r10d, r10d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 216  : 	for (size_t i = 0; i < mActorLinks.size(); i++)

	mov	r14d, r10d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r8, QWORD PTR [rbx+19912]
	mov	rcx, QWORD PTR [rbx+19904]
	mov	rax, r8
	sub	rax, rcx
	sar	rax, 5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 216  : 	for (size_t i = 0; i < mActorLinks.size(); i++)

	test	rax, rax
	je	$LN779@ToBinary
	mov	r13d, r10d
	npad	7
$LL4@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	lea	rax, QWORD PTR [rcx+r13]
	mov	QWORD PTR Link$1$[rsp], rax

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	sub	r8, rcx
	sar	r8, 5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 220  : 		uint32_t HashIndex = Link.mActorHash % (mActorLinks.size() * 2);

	lea	rcx, QWORD PTR [r8+r8]
	xor	edx, edx
	mov	rax, QWORD PTR [rax+8]
	div	rcx
	mov	rdi, rdx

; 221  : 
; 222  : 		while (ActorHashMap[HashIndex] > 0)

	mov	eax, edx
	cmp	QWORD PTR [rsi+rax*8], 0
	jbe	SHORT $LN6@ToBinary
	mov	rdx, QWORD PTR ActorHashMap$[rbp-248]
	sub	rdx, rsi
	sar	rdx, 3
	npad	12
$LL5@ToBinary:

; 223  : 		{
; 224  : 			HashIndex++;

	inc	edi

; 225  : 			if (HashIndex >= ActorHashMap.size())

	mov	eax, edi

; 221  : 
; 222  : 		while (ActorHashMap[HashIndex] > 0)

	mov	ecx, r10d
	cmp	rax, rdx
	cmovb	ecx, edi
	mov	eax, ecx
	mov	edi, ecx
	cmp	QWORD PTR [rsi+rcx*8], 0
	ja	SHORT $LL5@ToBinary
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	mov	edi, eax
$LN6@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR ActorHashMap$[rbp-248]
	sub	rax, rsi
	sar	rax, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 231  : 		if (HashIndex >= ActorHashMap.size())

	mov	r12d, edi
	cmp	r12, rax
	jae	$LN1357@ToBinary

; 234  : 			break;
; 235  : 		}
; 236  : 
; 237  : 		if (ActorHashMap[HashIndex] > 0)

	cmp	QWORD PTR [rsi+r12*8], 0
	jbe	$LN1073@ToBinary

; 239  : 			Logger::Error("PhiveStaticCompound", "Hash collision detected at index " + std::to_string(HashIndex));

	lea	rax, QWORD PTR $T7[rsp]
	mov	QWORD PTR $T5[rsp], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string

; 500  :     _Elem* const _RNext    = _UIntegral_to_buff(_Buff_end, _Val);

	lea	r9, QWORD PTR _Buff$17[rbp-235]
	npad	3
$LL1151@ToBinary:

; 467  :         *--_RNext = static_cast<_Elem>('0' + _UVal_trunc % 10);

	dec	r9
	mov	eax, -858993459				; cccccccdH
	mul	edi
	shr	edx, 3
	movzx	eax, dl
	shl	al, 2
	lea	ecx, DWORD PTR [rax+rdx]
	add	cl, cl
	sub	dil, cl
	add	dil, 48					; 00000030H
	mov	BYTE PTR [r9], dil

; 468  :         _UVal_trunc /= 10;

	mov	edi, edx

; 469  :     } while (_UVal_trunc != 0);

	test	edx, edx
	jne	SHORT $LL1151@ToBinary
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T9[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T9[rbp-240], r10

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T9[rbp-232], r10

; 2574 :         if (_UFirst == _ULast) {

	lea	rax, QWORD PTR _Buff$17[rbp-235]
	cmp	r9, rax
	jne	SHORT $LN1154@ToBinary

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T9[rbp-240], r10

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T9[rbp-232], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T9[rsp], dl

; 2577 :         } else {

	jmp	SHORT $LN1155@ToBinary
$LN1154@ToBinary:

; 2578 :             if constexpr (_Is_elem_cptr<decltype(_UFirst)>::value) {
; 2579 :                 _Construct<_Construct_strategy::_From_ptr>(

	lea	r8, QWORD PTR _Buff$17[rbp-235]
	sub	r8, r9
	mov	rdx, r9
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char *>
$LN1155@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string

; 509  :     return _UIntegral_to_string<char>(_Val);

	or	r15d, 192				; 000000c0H
	mov	DWORD PTR $T1[rsp], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3537 :         return insert(_Off, _Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r9d, 33					; 00000021H
	lea	r8, OFFSET FLAT:??_C@_0CC@HEEFFKJM@Hash?5collision?5detected?5at?5inde@
	lea	rcx, QWORD PTR $T9[rsp]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T7[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	ecx, ecx
	mov	QWORD PTR $T7[rsp+16], rcx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T7[rsp+24], rcx

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T7[rsp], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T7[rsp+16], xmm1

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR [rax+16], rcx

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR [rax+24], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR [rax], cl

; 4986 :     return _STD move(_Right.insert(0, _Left));

	or	r15d, 32				; 00000020H
	mov	DWORD PTR $T1[rsp], r15d
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T11[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T11[rbp-240], rcx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T11[rbp-232], rcx

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	r8d, QWORD PTR [rcx+19]
	lea	rdx, OFFSET FLAT:??_C@_0BE@FKOCFIKO@PhiveStaticCompound@
	lea	rcx, QWORD PTR $T11[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 239  : 			Logger::Error("PhiveStaticCompound", "Hash collision detected at index " + std::to_string(HashIndex));

	lea	rdx, QWORD PTR $T7[rsp]
	lea	rcx, QWORD PTR $T11[rbp-256]
	call	?Error@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Error
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T9[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN1758@ToBinary

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T9[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN1085@ToBinary

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN1082@ToBinary
$LN1085@ToBinary:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN1758@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 242  : 		ActorHashMap[HashIndex] = Link.mActorHash;

	xor	r10d, r10d
	mov	rsi, QWORD PTR ActorHashMap$[rbp-256]
$LN1073@ToBinary:
	mov	rax, QWORD PTR Link$1$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rsi+r12*8], rax

; 243  : 		ActorIndexMap[HashIndex] = i;

	mov	rax, QWORD PTR ActorIndexMap$[rbp-256]
	mov	WORD PTR [rax+r12*2], r14w

; 216  : 	for (size_t i = 0; i < mActorLinks.size(); i++)

	inc	r14
	add	r13, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r8, QWORD PTR [rbx+19912]
	mov	rcx, QWORD PTR [rbx+19904]
	mov	rax, r8
	sub	rax, rcx
	sar	rax, 5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 216  : 	for (size_t i = 0; i < mActorLinks.size(); i++)

	cmp	r14, rax
	jae	$LN1759@ToBinary
	mov	rsi, QWORD PTR ActorHashMap$[rbp-256]
	jmp	$LL4@ToBinary
$LN1082@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN1357@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 233  : 			Logger::Error("PhiveStaticCompound", "Tried to write hash out of bounds at " + std::to_string(i) + " out of " + std::to_string(mActorLinks.size()) + " actor links. Aborting...");

	lea	rax, QWORD PTR $T12[rbp-256]
	mov	QWORD PTR $T6[rsp], rax
	mov	rdx, r8
	lea	rcx, QWORD PTR $T16[rbp-256]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::to_string
	mov	rsi, rax
	mov	rdx, r14
	lea	rcx, QWORD PTR $T14[rbp-256]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::to_string
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3537 :         return insert(_Off, _Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r9d, 37					; 00000025H
	lea	r8, OFFSET FLAT:??_C@_0CG@MDIGJEBJ@Tried?5to?5write?5hash?5out?5of?5boun@
	mov	rcx, rax
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T8[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	r14d, r14d
	mov	QWORD PTR $T8[rsp+16], r14

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T8[rsp+24], r14

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T8[rsp], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T8[rsp+16], xmm1

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR [rax+16], r14

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR [rax+24], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR [rax], r14b

; 4986 :     return _STD move(_Right.insert(0, _Left));

	or	r15d, 2
	mov	DWORD PTR $T1[rsp], r15d

; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rdx, QWORD PTR $T8[rsp+16]
	mov	rdi, QWORD PTR $T8[rsp+24]
	mov	rax, rdi
	sub	rax, rdx

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	lea	rcx, QWORD PTR $T8[rsp]
	cmp	rax, 8
	jb	SHORT $LN1007@ToBinary

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR $T8[rsp+16], rax

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdi, 16
	cmovae	rcx, QWORD PTR $T8[rsp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	rax, QWORD PTR ??_C@_08MHHFDANP@?5out?5of?5@
	mov	QWORD PTR [rcx+rdx], rax

; 3276 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rcx+rdx+8], r14b

; 3277 :             return *this;

	lea	rax, QWORD PTR $T8[rsp]
	jmp	SHORT $LN1006@ToBinary
$LN1007@ToBinary:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], 8
	lea	r9, OFFSET FLAT:??_C@_08MHHFDANP@?5out?5of?5@
	mov	edx, 8
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
$LN1006@ToBinary:

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T15[rbp-256], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T15[rbp-240], xmm1

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR [rax+16], r14

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR [rax+24], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR [rax], 0

; 4998 :     return _STD move(_Left.append(_Right));

	or	r15d, 16
	mov	DWORD PTR $T1[rsp], r15d

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, rsi
	lea	r8, QWORD PTR $T15[rbp-256]
	lea	rcx, QWORD PTR $T10[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	or	r15d, 8
	mov	DWORD PTR $T1[rsp], r15d

; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR $T10[rbp-240]
	mov	rdx, QWORD PTR $T10[rbp-232]
	mov	rax, rdx
	sub	rax, rcx

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rax, 25
	jb	SHORT $LN942@ToBinary

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rcx+25]
	mov	QWORD PTR $T10[rbp-240], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rdi, QWORD PTR $T10[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rdi, QWORD PTR $T10[rsp]

; 3275 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

	add	rdi, rcx

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8d, 25
	lea	rdx, OFFSET FLAT:??_C@_0BK@NDLFKFCE@?5actor?5links?4?5Aborting?4?4?4@
	mov	rcx, rdi
	call	memmove

; 3276 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rdi+25], 0

; 3277 :             return *this;

	lea	rax, QWORD PTR $T10[rsp]
	jmp	SHORT $LN941@ToBinary
$LN942@ToBinary:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], 25
	lea	r9, OFFSET FLAT:??_C@_0BK@NDLFKFCE@?5actor?5links?4?5Aborting?4?4?4@
	mov	edx, 25
	lea	rcx, QWORD PTR $T10[rsp]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
$LN941@ToBinary:
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T12[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T12[rbp-240], r14

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T12[rbp-232], r14

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T12[rbp-256], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T12[rbp-240], xmm1

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR [rax+16], r14

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR [rax+24], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR [rax], 0

; 4998 :     return _STD move(_Left.append(_Right));

	or	r15d, 4
	mov	DWORD PTR $T1[rsp], r15d
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T13[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T13[rbp-240], r14

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T13[rbp-232], r14

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 19
	lea	rdx, OFFSET FLAT:??_C@_0BE@FKOCFIKO@PhiveStaticCompound@
	lea	rcx, QWORD PTR $T13[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 233  : 			Logger::Error("PhiveStaticCompound", "Tried to write hash out of bounds at " + std::to_string(i) + " out of " + std::to_string(mActorLinks.size()) + " actor links. Aborting...");

	lea	rdx, QWORD PTR $T12[rbp-256]
	lea	rcx, QWORD PTR $T13[rbp-256]
	call	?Error@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Error
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T10[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN748@ToBinary

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T10[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN760@ToBinary

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN760@ToBinary
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN760@ToBinary:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN748@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T10[rbp-240], r14

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T10[rbp-232], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T10[rsp], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T15[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN866@ToBinary

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T15[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN878@ToBinary

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN878@ToBinary
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN878@ToBinary:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN866@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T8[rsp+24]
	cmp	rdx, 16
	jb	SHORT $LN837@ToBinary

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T8[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN849@ToBinary

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN849@ToBinary
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN849@ToBinary:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN837@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	xor	r10d, r10d
	mov	QWORD PTR $T8[rsp+16], r10

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T8[rsp+24], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T8[rsp], r10b

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T14[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN808@ToBinary

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T14[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN820@ToBinary

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN820@ToBinary
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN820@ToBinary:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xor	r10d, r10d
$LN808@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T14[rbp-240], r10

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T14[rbp-232], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T14[rbp-256], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T16[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN1759@ToBinary

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T16[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN791@ToBinary

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN791@ToBinary
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN791@ToBinary:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN1759@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 246  : 	mHeader.mActorLinkOffset = Writer.GetPosition();

	mov	rsi, QWORD PTR ActorHashMap$[rbp-256]
$LN779@ToBinary:
	mov	edi, DWORD PTR Writer$[rbp-232]
	mov	DWORD PTR [rbx+16], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r13, QWORD PTR [rbx+19904]
	mov	r14, QWORD PTR [rbx+19912]
	sub	r14, r13
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 247  : 	Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(mActorLinks.data()), sizeof(PhiveStaticCompoundActorLink) * mActorLinks.size());

	and	r14d, -32				; ffffffffffffffe0H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	r12, r14d
	lea	eax, DWORD PTR [rdi+r14]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1738@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, r12
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
	mov	rsi, QWORD PTR ActorHashMap$[rbp-256]
$LN1738@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	xor	r9d, r9d
	xor	r8d, r8d
	test	r14d, r14d
	jle	SHORT $LN572@ToBinary
	npad	10
$LL573@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r13]
	lea	eax, DWORD PTR [rdi+r9]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, r12
	jl	SHORT $LL573@ToBinary
	mov	rsi, QWORD PTR ActorHashMap$[rbp-256]
$LN572@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r14d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN584@ToBinary
	npad	14
$LL583@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], 0

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL583@ToBinary
	mov	rsi, QWORD PTR ActorHashMap$[rbp-256]
$LN584@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 249  : 	mHeader.mActorLinkArraySize = Writer.GetPosition() - mHeader.mActorLinkOffset;

	mov	eax, edi
	sub	eax, DWORD PTR [rbx+16]
	mov	DWORD PTR [rbx+400], eax

; 250  : 
; 251  : 	mHeader.mActorHashMapOffset = Writer.GetPosition();

	mov	DWORD PTR [rbx+20], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR ActorHashMap$[rbp-248]
	sub	rax, rsi
	sar	rax, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 252  : 	Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(ActorHashMap.data()), sizeof(uint64_t) * ActorHashMap.size());

	lea	r12d, DWORD PTR [rax*8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	r14, r12d
	lea	eax, DWORD PTR [rdi+r12]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1739@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, r14
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1739@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	xor	r13d, r13d
	mov	r9d, r13d
	mov	r8d, r13d
	test	r12d, r12d
	jle	SHORT $LN596@ToBinary
	npad	9
$LL597@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+rsi]
	lea	eax, DWORD PTR [rdi+r9]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, r14
	jl	SHORT $LL597@ToBinary
$LN596@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r12d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1865@ToBinary
	npad	2
$LL607@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], r13b

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL607@ToBinary
$LN1865@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 254  : 	mHeader.mActorHashMapSize = Writer.GetPosition() - mHeader.mActorHashMapOffset;

	mov	eax, edi
	sub	eax, DWORD PTR [rbx+20]
	mov	DWORD PTR [rbx+404], eax

; 255  : 
; 256  : 	mHeader.mActorIndexMapOffset = Writer.GetPosition();

	mov	DWORD PTR [rbx+24], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR ActorIndexMap$[rbp-248]
	mov	r14, QWORD PTR ActorIndexMap$[rbp-256]
	sub	rax, r14
	sar	rax, 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 257  : 	Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(ActorIndexMap.data()), sizeof(uint16_t) * ActorIndexMap.size());

	lea	r12d, DWORD PTR [rax+rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r12d
	lea	eax, DWORD PTR [rdi+r12]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1740@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1740@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	mov	r9d, r13d
	mov	r8, r13
	test	r12d, r12d
	jle	SHORT $LN620@ToBinary
	npad	11
$LL621@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [rdi+r9]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL621@ToBinary
$LN620@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r12d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1867@ToBinary
	npad	2
$LL631@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], r13b

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL631@ToBinary
$LN1867@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 259  : 	mHeader.mActorIndexMapSize = Writer.GetPosition() - mHeader.mActorIndexMapOffset;

	mov	eax, edi
	sub	eax, DWORD PTR [rbx+24]
	mov	DWORD PTR [rbx+408], eax

; 260  : 
; 261  : 	mHeader.mFixedOffset0 = Writer.GetPosition();

	mov	DWORD PTR [rbx+28], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r14, QWORD PTR [rbx+19952]
	mov	rax, QWORD PTR [rbx+19960]
	sub	rax, r14
	sar	rax, 2
	mov	rcx, -3689348814741910323		; cccccccccccccccdH
	imul	rax, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 262  : 	Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(mFixedOffset0Array.data()), sizeof(PhiveStaticCompoundFixedOffset0) * mFixedOffset0Array.size());

	lea	r12d, DWORD PTR [rax+rax*4]
	shl	r12d, 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r12d
	lea	eax, DWORD PTR [rdi+r12]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1741@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1741@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	mov	r9d, r13d
	mov	r8, r13
	test	r12d, r12d
	jle	SHORT $LN538@ToBinary
	npad	8
$LL539@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [rdi+r9]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL539@ToBinary
$LN538@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r12d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1869@ToBinary
	npad	2
$LL643@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], r13b

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL643@ToBinary
$LN1869@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 265  : 	mHeader.mFixedOffset1 = Writer.GetPosition();

	mov	DWORD PTR [rbx+32], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r12, QWORD PTR [rbx+19976]
	mov	rsi, QWORD PTR [rbx+19984]
	sub	rsi, r12
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 266  : 	Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(mFixedOffset1Array.data()), sizeof(PhiveStaticCompoundFixedOffset1) * mFixedOffset1Array.size());

	and	esi, -16
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	r14, esi
	lea	eax, DWORD PTR [rdi+rsi]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1742@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, r14
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1742@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	mov	r9d, r13d
	mov	r8, r13
	test	esi, esi
	jle	SHORT $LN656@ToBinary
	npad	12
$LL657@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r12]
	lea	eax, DWORD PTR [rdi+r9]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, r14
	jl	SHORT $LL657@ToBinary
$LN656@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, esi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1871@ToBinary
	npad	3
$LL667@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], r13b

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL667@ToBinary
$LN1871@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 269  : 	mHeader.mFixedOffset2 = Writer.GetPosition();

	mov	DWORD PTR [rbx+36], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r14, QWORD PTR [rbx+20000]
	mov	rax, QWORD PTR [rbx+20008]
	sub	rax, r14
	sar	rax, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 270  : 	Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(mFixedOffset2Array.data()), sizeof(PhiveStaticCompoundFixedOffset2) * mFixedOffset2Array.size());

	lea	r12d, DWORD PTR [rax*8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r12d
	lea	eax, DWORD PTR [rdi+r12]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1743@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1743@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	mov	r9d, r13d
	mov	r8, r13
	test	r12d, r12d
	jle	SHORT $LN466@ToBinary
	npad	1
$LL467@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [rdi+r9]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL467@ToBinary
$LN466@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r12d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1873@ToBinary
	npad	2
$LL477@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], r13b

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL477@ToBinary
$LN1873@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+20136]
	sub	rax, QWORD PTR [rbx+20128]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 273  : 	mTeraWater.mSubTerrainSize0 = mTeraWaterSubTerrain0.size();

	mov	QWORD PTR [rbx+20064], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+20160]
	sub	rax, QWORD PTR [rbx+20152]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 274  : 	mTeraWater.mSubTerrainSize1 = mTeraWaterSubTerrain1.size();

	mov	QWORD PTR [rbx+20072], rax

; 275  : 
; 276  : 	mHeader.mTeraWaterOffset = Writer.GetPosition();

	mov	DWORD PTR [rbx+40], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	lea	eax, DWORD PTR [rdi+80]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LL494@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, 80					; 00000050H
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
	npad	2
$LL494@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movsxd	rdx, edi
	movzx	ecx, BYTE PTR [rbx+20024]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	inc	eax
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20025]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 2
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20026]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 3
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20027]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 4
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20028]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 5
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20029]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 6
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20030]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 7
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20031]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 8
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20032]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 9
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20033]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 10
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20034]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 11
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20035]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 12
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20036]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 13
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20037]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 14
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20038]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 15
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20039]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 16
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20040]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 17
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20041]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 18
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20042]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 19
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20043]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 20
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20044]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 21
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20045]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 22
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20046]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 23
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20047]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 24
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20048]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 25
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20049]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 26
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20050]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 27
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20051]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 28
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20052]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 29
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20053]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 30
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20054]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 31
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20055]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 32					; 00000020H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20056]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 33					; 00000021H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20057]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 34					; 00000022H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20058]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 35					; 00000023H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20059]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 36					; 00000024H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20060]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 37					; 00000025H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20061]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 38					; 00000026H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20062]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 39					; 00000027H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20063]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 40					; 00000028H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20064]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 41					; 00000029H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20065]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 42					; 0000002aH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20066]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 43					; 0000002bH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20067]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 44					; 0000002cH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20068]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 45					; 0000002dH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20069]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 46					; 0000002eH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20070]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 47					; 0000002fH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20071]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 48					; 00000030H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20072]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 49					; 00000031H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20073]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 50					; 00000032H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20074]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 51					; 00000033H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20075]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 52					; 00000034H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20076]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 53					; 00000035H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20077]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 54					; 00000036H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20078]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 55					; 00000037H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20079]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 56					; 00000038H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20080]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 57					; 00000039H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20081]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 58					; 0000003aH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20082]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 59					; 0000003bH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20083]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 60					; 0000003cH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20084]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 61					; 0000003dH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20085]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 62					; 0000003eH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20086]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 63					; 0000003fH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20087]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 64					; 00000040H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20088]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 65					; 00000041H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20089]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 66					; 00000042H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20090]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 67					; 00000043H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20091]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 68					; 00000044H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20092]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 69					; 00000045H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20093]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 70					; 00000046H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20094]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 71					; 00000047H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20095]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 72					; 00000048H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20096]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 73					; 00000049H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20097]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 74					; 0000004aH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20098]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 75					; 0000004bH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20099]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 76					; 0000004cH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20100]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 77					; 0000004dH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20101]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 78					; 0000004eH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx+20102]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	movzx	edx, BYTE PTR [rbx+20103]
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 79					; 0000004fH
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	mov	edi, DWORD PTR Writer$[rbp-232]
	add	edi, 80					; 00000050H
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN504@ToBinary
	npad	8
$LL503@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], r13b

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL503@ToBinary
$LN504@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 280  : 	mHeader.mTeraWaterTerrainOffset = Writer.GetPosition();

	mov	DWORD PTR [rbx+44], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r14, QWORD PTR [rbx+20104]
	mov	rax, QWORD PTR [rbx+20112]
	sub	rax, r14
	sar	rax, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 281  : 	Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(mTeraWaterTerrain.data()), sizeof(PhiveStaticCompoundTeraWaterTerrain) * mTeraWaterTerrain.size());

	lea	r12d, DWORD PTR [rax*8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r12d
	lea	eax, DWORD PTR [rdi+r12]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1744@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1744@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	mov	r9d, r13d
	mov	r8, r13
	test	r12d, r12d
	jle	SHORT $LN516@ToBinary
	npad	1
$LL517@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [rdi+r9]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL517@ToBinary
$LN516@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r12d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1875@ToBinary
	npad	2
$LL527@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], r13b

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL527@ToBinary
$LN1875@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 284  : 	mHeader.mTeraWaterSubTerrainOffset0 = Writer.GetPosition();

	mov	DWORD PTR [rbx+48], edi

; 285  : 	if (mTeraWater.mSubTerrainSize0 != 0)

	cmp	QWORD PTR [rbx+20064], r13
	je	$LN1877@ToBinary
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r14, QWORD PTR [rbx+20128]
	mov	r12, QWORD PTR [rbx+20136]
	sub	r12, r14
	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r12d
	lea	eax, DWORD PTR [rdi+r12]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1745@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1745@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	mov	r9d, r13d
	mov	r8, r13
	test	r12d, r12d
	jle	SHORT $LN698@ToBinary
$LL699@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [r9+rdi]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL699@ToBinary
$LN698@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r12d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1877@ToBinary
	npad	2
$LL687@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], r13b

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL687@ToBinary
$LN1877@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 291  : 	mHeader.mTeraWaterSubTerrainOffset1 = Writer.GetPosition();

	mov	DWORD PTR [rbx+52], edi

; 292  : 	if (mTeraWater.mSubTerrainSize1 != 0)

	cmp	QWORD PTR [rbx+20072], r13
	je	$LN1879@ToBinary
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r14, QWORD PTR [rbx+20152]
	mov	r12, QWORD PTR [rbx+20160]
	sub	r12, r14
	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r12d
	lea	eax, DWORD PTR [rdi+r12]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1746@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1746@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	mov	r9d, r13d
	mov	r8, r13
	test	r12d, r12d
	jle	SHORT $LN720@ToBinary
$LL721@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [r9+rdi]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL721@ToBinary
$LN720@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r12d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1879@ToBinary
	npad	2
$LL709@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], r13b

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL709@ToBinary
$LN1879@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 298  : 	uint32_t ImageIter = 0;

	mov	r12d, r13d

; 299  : 
; 300  : 	memset(mHeader.mCompoundShapeImageOffsetArray, 0, (sizeof(mHeader.mCompoundShapeImageOffsetArray) / sizeof(mHeader.mCompoundShapeImageOffsetArray[0])) * sizeof(mHeader.mCompoundShapeImageOffsetArray[0]));

	lea	rcx, QWORD PTR [rbx+56]
	xor	edx, edx
	mov	r8d, 340				; 00000154H
	call	memset

; 301  : 	memset(mHeader.mCompoundShapeImageSizeArray, 0, (sizeof(mHeader.mCompoundShapeImageSizeArray) / sizeof(mHeader.mCompoundShapeImageSizeArray[0])) * sizeof(mHeader.mCompoundShapeImageSizeArray[0]));

	lea	rcx, QWORD PTR [rbx+440]
	xor	edx, edx
	mov	r8d, 340				; 00000154H
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+19912]
	sub	rax, QWORD PTR [rbx+19904]
	sar	rax, 5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 303  : 	mImage.mActorLinkCount = mActorLinks.size();

	mov	DWORD PTR [rbx+17184], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+20280]
	sub	rax, QWORD PTR [rbx+20272]
	sar	rax, 2
	mov	r8, 3353953467947191203			; 2e8ba2e8ba2e8ba3H
	imul	rax, r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 304  : 	mImage.mExternalMeshCount = mExternalMeshArray.size();

	mov	DWORD PTR [rbx+19900], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR [rbx+20200]
	mov	rax, QWORD PTR [rbx+20208]
	sub	rax, rdx
	sar	rax, 3
	mov	r9, -8198552921648689607		; 8e38e38e38e38e39H
	imul	rax, r9
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 305  : 	mImage.mWaterBoxCount = mWaterBoxArray.size();

	mov	DWORD PTR [rbx+19888], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+20232]
	sub	rax, QWORD PTR [rbx+20224]
	sar	rax, 3
	imul	rax, r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 306  : 	mImage.mWaterCylinderCount = mWaterCylinderArray.size();

	mov	DWORD PTR [rbx+19892], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rbx+20248]
	mov	rax, QWORD PTR [rbx+20256]
	sub	rax, rcx
	sar	rax, 3
	imul	rax, r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 307  : 	mImage.mWaterFallCount = mWaterFallArray.size();

	mov	DWORD PTR [rbx+19896], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+19960]
	sub	rax, QWORD PTR [rbx+19952]
	sar	rax, 2
	mov	r10, -3689348814741910323		; cccccccccccccccdH
	imul	rax, r10
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 308  : 	mImage.mFixedCount0 = mFixedOffset0Array.size();

	mov	DWORD PTR [rbx+17188], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+19984]
	sub	rax, QWORD PTR [rbx+19976]
	sar	rax, 4
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 309  : 	mImage.mFixedCount1 = mFixedOffset1Array.size();

	mov	DWORD PTR [rbx+17192], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+20008]
	sub	rax, QWORD PTR [rbx+20000]
	sar	rax, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 310  : 	mImage.mFixedCount2 = mFixedOffset2Array.size();

	mov	DWORD PTR [rbx+17196], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+20208]
	sub	rax, rdx
	sar	rax, 3
	imul	rax, r9
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 312  : 	mImage.mRigidBodyInfoArray[0].mWaterBoxCount = mWaterBoxArray.size();

	mov	WORD PTR [rbx+17226], ax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+20256]
	sub	rax, rcx
	sar	rax, 3
	imul	rax, r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 313  : 	mImage.mRigidBodyInfoArray[0].mWaterFallCount = mWaterFallArray.size();

	mov	WORD PTR [rbx+17228], ax

; 315  : 	for (size_t i = 0; i < mCompoundTagFile.size(); i++)

	mov	QWORD PTR i$1$[rsp], r13
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+20184]
	sub	rax, QWORD PTR [rbx+20176]
	sar	rax, 5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 315  : 	for (size_t i = 0; i < mCompoundTagFile.size(); i++)

	test	rax, rax
	je	$LN8@ToBinary

; 298  : 	uint32_t ImageIter = 0;

	mov	r15, r13
$LL9@ToBinary:

; 316  : 	{
; 317  : 		uint32_t Start = Writer.GetPosition();

	mov	DWORD PTR Start$1$[rsp], edi

; 318  : 		mHeader.mCompoundShapeImageOffsetArray[ImageIter] = Start;

	mov	eax, r12d
	mov	DWORD PTR [rbx+rax*4+56], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rbx+20176]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 319  : 		Writer.WriteInteger(_byteswap_ulong(mCompoundTagFile[i].mSizeFlag), sizeof(uint32_t));

	mov	esi, DWORD PTR [r15+rax]
	bswap	esi
	mov	esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
	lea	eax, DWORD PTR [rdi+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 83   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN330@ToBinary

; 84   : 	{
; 85   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, 4
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
$LN330@ToBinary:

; 86   : 	}
; 87   : 
; 88   : 	char* Bytes = new char[sizeof(int64_t)];

	mov	ecx, 8
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	rdi, rax

; 89   : 
; 90   : 	std::memcpy(Bytes, &Data, sizeof(Bytes));

	mov	QWORD PTR [rax], rsi

; 91   : 
; 92   : 	for (int i = 0; i < Size; i++) {
; 93   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], sil
	mov	eax, DWORD PTR Writer$[rbp-232]
	inc	eax
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rdi+1]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 2
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rdi+2]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	movzx	edx, BYTE PTR [rdi+3]
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 3
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 94   : 	}
; 95   : 
; 96   : 	delete[] Bytes;

	mov	rcx, rdi
	call	??_V@YAXPEAX@Z				; operator delete[]

; 97   : 
; 98   : 	this->m_Offset += Size;

	mov	edx, DWORD PTR Writer$[rbp-232]
	add	edx, 4
	mov	DWORD PTR Writer$[rbp-232], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rsi, QWORD PTR [rbx+20176]
	add	rsi, r15

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdi, QWORD PTR Writer$[rbp-248]
	mov	r8, QWORD PTR Writer$[rbp-256]
	sub	rdi, r8
	lea	eax, DWORD PTR [rdx+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rcx, eax
	cmp	rcx, rdi
	jbe	SHORT $LL318@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	lea	rdx, QWORD PTR [rdi+4]
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edx, DWORD PTR Writer$[rbp-232]
	mov	r8, QWORD PTR Writer$[rbp-256]
	npad	7
$LL318@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movsxd	rcx, edx
	movzx	eax, BYTE PTR [rsi+4]
	mov	BYTE PTR [rcx+r8], al
	mov	eax, DWORD PTR Writer$[rbp-232]
	inc	eax
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+5]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 2
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+6]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	movzx	edx, BYTE PTR [rsi+7]
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 3
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	mov	edi, DWORD PTR Writer$[rbp-232]
	add	edi, 4
	mov	DWORD PTR Writer$[rbp-232], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rbx+20176]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r14, QWORD PTR [r15+rax+8]
	mov	r13, QWORD PTR [r15+rax+16]
	sub	r13, r14
	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r13d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	lea	eax, DWORD PTR [rdi+r13]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1747@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1747@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	xor	r9d, r9d
	xor	r8d, r8d
	test	r13d, r13d
	jle	SHORT $LN356@ToBinary
	npad	12
$LL357@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [r9+rdi]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL357@ToBinary
$LN356@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r13d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1881@ToBinary
	npad	2
$LL345@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], 0

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL345@ToBinary
$LN1881@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 324  : 		mHeader.mCompoundShapeImageSizeArray[ImageIter] = End - Start;

	mov	eax, edi
	sub	eax, DWORD PTR Start$1$[rsp]
	mov	ecx, r12d
	mov	DWORD PTR [rbx+rcx*4+440], eax

; 325  : 		ImageIter++;

	inc	r12d

; 315  : 	for (size_t i = 0; i < mCompoundTagFile.size(); i++)

	mov	r8, QWORD PTR i$1$[rsp]
	inc	r8
	mov	QWORD PTR i$1$[rsp], r8
	add	r15, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+20184]
	sub	rax, QWORD PTR [rbx+20176]
	sar	rax, 5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 315  : 	for (size_t i = 0; i < mCompoundTagFile.size(); i++)

	cmp	r8, rax
	jb	$LL9@ToBinary
	mov	r15d, DWORD PTR $T1[rsp]
	mov	r9, -8198552921648689607		; 8e38e38e38e38e39H
$LN8@ToBinary:

; 326  : 	}
; 327  : 
; 328  : 	if (mImage.mWaterBoxCount != 0)

	cmp	DWORD PTR [rbx+19888], 0
	je	$LN18@ToBinary

; 329  : 	{
; 330  : 		uint32_t Start = Writer.GetPosition();

	mov	DWORD PTR Start$1$[rsp], edi

; 331  : 		mHeader.mCompoundShapeImageOffsetArray[ImageIter] = Start;

	mov	eax, r12d
	mov	DWORD PTR [rbx+rax*4+56], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r14, QWORD PTR [rbx+20200]
	mov	rax, QWORD PTR [rbx+20208]
	sub	rax, r14
	sar	rax, 3
	imul	rax, r9
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 332  : 		Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(mWaterBoxArray.data()), sizeof(PhiveStaticCompoundWaterBox) * mWaterBoxArray.size());

	lea	r13d, DWORD PTR [rax+rax*8]
	shl	r13d, 3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r13d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	lea	eax, DWORD PTR [rdi+r13]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1748@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1748@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	xor	r9d, r9d
	xor	r8d, r8d
	test	r13d, r13d
	jle	SHORT $LN368@ToBinary
	npad	10
$LL369@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [rdi+r9]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL369@ToBinary
$LN368@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r13d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1883@ToBinary
	npad	2
$LL379@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], 0

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL379@ToBinary
$LN1883@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 335  : 		mHeader.mCompoundShapeImageSizeArray[ImageIter] = End - Start;

	mov	eax, edi
	sub	eax, DWORD PTR Start$1$[rsp]
	mov	ecx, r12d
	mov	DWORD PTR [rbx+rcx*4+440], eax

; 336  : 		ImageIter++;

	inc	r12d
$LN18@ToBinary:

; 337  : 	}
; 338  : 	if (mImage.mWaterCylinderCount != 0)

	cmp	DWORD PTR [rbx+19892], 0
	je	$LN19@ToBinary

; 339  : 	{
; 340  : 		mHeader.mCompoundShapeImageOffsetArray[ImageIter] = Writer.GetPosition();

	mov	eax, r12d
	mov	DWORD PTR [rbx+rax*4+56], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r14, QWORD PTR [rbx+20224]
	mov	rax, QWORD PTR [rbx+20232]
	sub	rax, r14
	sar	rax, 3
	mov	rcx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	imul	rax, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 341  : 		Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(mWaterCylinderArray.data()), sizeof(PhiveStaticCompoundWaterCylinder) * mWaterCylinderArray.size());

	imul	r13d, eax, 88				; 00000058H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r13d
	lea	eax, DWORD PTR [rdi+r13]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1749@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1749@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	xor	r9d, r9d
	xor	r8d, r8d
	test	r13d, r13d
	jle	SHORT $LN392@ToBinary
	npad	3
$LL393@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [rdi+r9]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL393@ToBinary
$LN392@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r13d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1885@ToBinary
	npad	2
$LL403@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], 0

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL403@ToBinary
$LN1885@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 343  : 		ImageIter++;

	inc	r12d
$LN19@ToBinary:

; 344  : 	}
; 345  : 	if (mImage.mWaterFallCount != 0)

	cmp	DWORD PTR [rbx+19896], 0
	je	$LN20@ToBinary

; 346  : 	{
; 347  : 		mHeader.mCompoundShapeImageOffsetArray[ImageIter] = Writer.GetPosition();

	mov	eax, r12d
	mov	DWORD PTR [rbx+rax*4+56], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r14, QWORD PTR [rbx+20248]
	mov	rax, QWORD PTR [rbx+20256]
	sub	rax, r14
	sar	rax, 3
	mov	rcx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	imul	rax, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 348  : 		Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(mWaterFallArray.data()), sizeof(PhiveStaticCompoundWaterFall) * mWaterFallArray.size());

	imul	r13d, eax, 88				; 00000058H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r13d
	lea	eax, DWORD PTR [rdi+r13]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1750@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1750@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	xor	r9d, r9d
	xor	r8d, r8d
	test	r13d, r13d
	jle	SHORT $LN452@ToBinary
	npad	3
$LL453@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [rdi+r9]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL453@ToBinary
$LN452@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r13d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1887@ToBinary
	npad	2
$LL415@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], 0

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL415@ToBinary
$LN1887@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 350  : 		ImageIter++;

	inc	r12d
$LN20@ToBinary:

; 351  : 	}
; 352  : 	if (mImage.mExternalMeshCount != 0)

	cmp	DWORD PTR [rbx+19900], 0
	je	$LN21@ToBinary

; 353  : 	{
; 354  : 		uint32_t Start = Writer.GetPosition();

	mov	DWORD PTR Start$1$[rsp], edi

; 355  : 		mHeader.mCompoundShapeImageOffsetArray[ImageIter] = Start;

	mov	eax, r12d
	mov	DWORD PTR [rbx+rax*4+56], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r14, QWORD PTR [rbx+20272]
	mov	rax, QWORD PTR [rbx+20280]
	sub	rax, r14
	sar	rax, 2
	mov	rdx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	imul	rax, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 356  : 		Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(mExternalMeshArray.data()), sizeof(PhiveStaticCompoundExternalMesh) * mExternalMeshArray.size());

	imul	r13d, eax, 44				; 0000002cH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r13d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	lea	eax, DWORD PTR [rdi+r13]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1751@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1751@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	xor	r9d, r9d
	xor	r8d, r8d
	test	r13d, r13d
	jle	SHORT $LN428@ToBinary
	npad	15
$LL429@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [rdi+r9]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL429@ToBinary
$LN428@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r13d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1889@ToBinary
	npad	2
$LL439@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], 0

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL439@ToBinary
$LN1889@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 360  : 		mHeader.mCompoundShapeImageSizeArray[ImageIter] = End - Start;

	mov	eax, edi
	sub	eax, DWORD PTR Start$1$[rsp]
	mov	ecx, r12d
	mov	DWORD PTR [rbx+rcx*4+440], eax

; 361  : 		ImageIter++;

	inc	r12d
$LN21@ToBinary:

; 364  : 	for (size_t i = 0; i < mExternalBphshMeshes.size(); i++)

	mov	QWORD PTR i$1$[rsp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+20304]
	sub	rax, QWORD PTR [rbx+20296]
	sar	rax, 7
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 364  : 	for (size_t i = 0; i < mExternalBphshMeshes.size(); i++)

	test	rax, rax
	je	$LN11@ToBinary
	xor	r13d, r13d
	npad	8
$LL12@ToBinary:

; 365  : 	{
; 366  : 		uint32_t Start = Writer.GetPosition();

	mov	DWORD PTR Start$1$[rsp], edi

; 367  : 		mHeader.mCompoundShapeImageOffsetArray[ImageIter] = Start;

	mov	eax, r12d
	mov	DWORD PTR [rbx+rax*4+56], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rsi, QWORD PTR [rbx+20296]
	add	rsi, r13

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
	lea	eax, DWORD PTR [rdi+48]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LL82@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, 48					; 00000030H
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
	npad	8
$LL82@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movsxd	rdx, edi
	movzx	ecx, BYTE PTR [rsi]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	inc	eax
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+1]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 2
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+2]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 3
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+3]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 4
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+4]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 5
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+5]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 6
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+6]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 7
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+7]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 8
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+8]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 9
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+9]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 10
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+10]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 11
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+11]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 12
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+12]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 13
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+13]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 14
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+14]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 15
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+15]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 16
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+16]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 17
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+17]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 18
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+18]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 19
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+19]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 20
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+20]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 21
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+21]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 22
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+22]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 23
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+23]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 24
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+24]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 25
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+25]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 26
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+26]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 27
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+27]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 28
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+28]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 29
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+29]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 30
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+30]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 31
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+31]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 32					; 00000020H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+32]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 33					; 00000021H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+33]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 34					; 00000022H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+34]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 35					; 00000023H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+35]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 36					; 00000024H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+36]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 37					; 00000025H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+37]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 38					; 00000026H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+38]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 39					; 00000027H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+39]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 40					; 00000028H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+40]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 41					; 00000029H
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+41]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 42					; 0000002aH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+42]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 43					; 0000002bH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+43]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 44					; 0000002cH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+44]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 45					; 0000002dH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+45]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 46					; 0000002eH
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+46]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	movzx	edx, BYTE PTR [rsi+47]
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 47					; 0000002fH
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	mov	edx, DWORD PTR Writer$[rbp-232]
	add	edx, 48					; 00000030H
	mov	DWORD PTR Writer$[rbp-232], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rbx+20296]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 371  : 		Writer.WriteInteger(_byteswap_ulong(mExternalBphshMeshes[i].mTagFile.mSizeFlag), sizeof(uint32_t));

	mov	esi, DWORD PTR [rax+r13+48]
	bswap	esi
	mov	esi, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdi, QWORD PTR Writer$[rbp-248]
	sub	rdi, QWORD PTR Writer$[rbp-256]
	lea	eax, DWORD PTR [rdx+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 83   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rcx, eax
	cmp	rcx, rdi
	jbe	SHORT $LN66@ToBinary

; 84   : 	{
; 85   : 		this->m_Data.resize(this->m_Data.size() + Size);

	lea	rdx, QWORD PTR [rdi+4]
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
$LN66@ToBinary:

; 86   : 	}
; 87   : 
; 88   : 	char* Bytes = new char[sizeof(int64_t)];

	mov	ecx, 8
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	rdi, rax

; 89   : 
; 90   : 	std::memcpy(Bytes, &Data, sizeof(Bytes));

	mov	QWORD PTR [rax], rsi

; 91   : 
; 92   : 	for (int i = 0; i < Size; i++) {
; 93   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], sil
	mov	eax, DWORD PTR Writer$[rbp-232]
	inc	eax
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rdi+1]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 2
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rdi+2]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	movzx	edx, BYTE PTR [rdi+3]
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 3
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 94   : 	}
; 95   : 
; 96   : 	delete[] Bytes;

	mov	rcx, rdi
	call	??_V@YAXPEAX@Z				; operator delete[]

; 97   : 
; 98   : 	this->m_Offset += Size;

	mov	edx, DWORD PTR Writer$[rbp-232]
	add	edx, 4
	mov	DWORD PTR Writer$[rbp-232], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rsi, QWORD PTR [rbx+20296]
	add	rsi, r13

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdi, QWORD PTR Writer$[rbp-248]
	mov	r8, QWORD PTR Writer$[rbp-256]
	sub	rdi, r8
	lea	eax, DWORD PTR [rdx+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rcx, eax
	cmp	rcx, rdi
	jbe	SHORT $LL52@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	lea	rdx, QWORD PTR [rdi+4]
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edx, DWORD PTR Writer$[rbp-232]
	mov	r8, QWORD PTR Writer$[rbp-256]
	npad	3
$LL52@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movsxd	rcx, edx
	movzx	eax, BYTE PTR [rsi+52]
	mov	BYTE PTR [rcx+r8], al
	mov	eax, DWORD PTR Writer$[rbp-232]
	inc	eax
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+53]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 2
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rsi+54]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	movzx	edx, BYTE PTR [rsi+55]
	mov	eax, DWORD PTR Writer$[rbp-232]
	add	eax, 3
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	mov	edi, DWORD PTR Writer$[rbp-232]
	add	edi, 4
	mov	DWORD PTR Writer$[rbp-232], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rbx+20296]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r14, QWORD PTR [rax+r13+56]
	mov	r10, QWORD PTR [rax+r13+64]
	sub	r10, r14
	mov	QWORD PTR $T4[rsp], r10
	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r10d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	lea	eax, DWORD PTR [rdi+r10]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1752@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
	mov	r10, QWORD PTR $T4[rsp]
$LN1752@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	xor	r9d, r9d
	xor	r8d, r8d
	test	rsi, rsi
	jle	SHORT $LN266@ToBinary
	npad	2
$LL267@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [r9+rdi]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL267@ToBinary
$LN266@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r10d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1891@ToBinary
	npad	2
$LL255@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], 0

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL255@ToBinary
$LN1891@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rbx+20296]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r14, QWORD PTR [rax+r13+80]
	mov	rcx, QWORD PTR [rax+r13+88]
	sub	rcx, r14
	sar	rcx, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 376  : 		Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(mExternalBphshMeshes[i].mReserve0Array.data()), sizeof(uint64_t) * mExternalBphshMeshes[i].mReserve0Array.size());

	lea	r10d, DWORD PTR [rcx*8]
	mov	DWORD PTR $T3[rsp], r10d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	rsi, r10d
	lea	eax, DWORD PTR [rdi+r10]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1753@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, rsi
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
	mov	r10d, DWORD PTR $T3[rsp]
$LN1753@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	xor	r9d, r9d
	xor	r8d, r8d
	test	rsi, rsi
	jle	SHORT $LN240@ToBinary
	npad	7
$LL241@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+r14]
	lea	eax, DWORD PTR [r9+rdi]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, rsi
	jl	SHORT $LL241@ToBinary
$LN240@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, r10d
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1893@ToBinary
	npad	2
$LL229@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], 0

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL229@ToBinary
$LN1893@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rbx+20296]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rax+r13+104]
	mov	QWORD PTR $T2[rsp], rcx
	mov	rsi, QWORD PTR [rax+r13+112]
	sub	rsi, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 379  : 		Writer.WriteRawUnsafeFixed(reinterpret_cast<const char*>(mExternalBphshMeshes[i].mReserve1Array.data()), sizeof(PhiveStaticCompoundBphshReserve1) * mExternalBphshMeshes[i].mReserve1Array.size());

	and	esi, -16
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	movsxd	r14, esi
	lea	eax, DWORD PTR [rdi+rsi]
	movsxd	rcx, eax
	cmp	rcx, rdx
	jbe	SHORT $LN1754@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, r14
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edi, DWORD PTR Writer$[rbp-232]
$LN1754@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	xor	r9d, r9d
	xor	r8d, r8d
	test	esi, esi
	jle	SHORT $LN212@ToBinary
	mov	rbx, QWORD PTR $T2[rsp]
	npad	2
$LL213@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	movzx	edx, BYTE PTR [r8+rbx]
	lea	eax, DWORD PTR [r9+rdi]
	movsxd	rcx, eax
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], dl

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	lea	r9d, DWORD PTR [r9+1]
	inc	r8
	mov	edi, DWORD PTR Writer$[rbp-232]
	cmp	r8, r14
	jl	SHORT $LL213@ToBinary
	mov	rbx, QWORD PTR this$GSCopy$1$[rbp-256]
$LN212@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	edi, esi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN1895@ToBinary
$LL201@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], 0

; 14   : 	this->m_Offset++;

	mov	edi, DWORD PTR Writer$[rbp-232]
	inc	edi
	mov	DWORD PTR Writer$[rbp-232], edi
	test	dil, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL201@ToBinary
$LN1895@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 383  : 		mHeader.mCompoundShapeImageSizeArray[ImageIter] = End - Start;

	mov	eax, edi
	sub	eax, DWORD PTR Start$1$[rsp]
	mov	ecx, r12d
	mov	DWORD PTR [rbx+rcx*4+440], eax

; 384  : 		ImageIter++;

	inc	r12d

; 364  : 	for (size_t i = 0; i < mExternalBphshMeshes.size(); i++)

	mov	r8, QWORD PTR i$1$[rsp]
	inc	r8
	mov	QWORD PTR i$1$[rsp], r8
	sub	r13, -128				; ffffffffffffff80H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rbx+20304]
	sub	rax, QWORD PTR [rbx+20296]
	sar	rax, 7
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 364  : 	for (size_t i = 0; i < mExternalBphshMeshes.size(); i++)

	cmp	r8, rax
	jb	$LL12@ToBinary
$LN11@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 26   : 		this->m_Offset = Offset;

	mov	DWORD PTR Writer$[rbp-232], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	cmp	rdx, 780				; 0000030cH
	jae	SHORT $LN94@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	add	rdx, 780				; 0000030cH
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
$LN94@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	xor	r9d, r9d
	mov	r10, rbx
	mov	r11d, 390				; 00000186H
$LL93@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	mov	ecx, DWORD PTR Writer$[rbp-232]
	add	ecx, r9d
	movsxd	rdx, ecx
	movzx	ecx, BYTE PTR [r10]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	movzx	r8d, BYTE PTR [r10+1]
	mov	ecx, DWORD PTR Writer$[rbp-232]
	add	ecx, r9d
	movsxd	rdx, ecx
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax+1], r8b
	lea	r10, QWORD PTR [r10+2]
	add	r9d, 2

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	sub	r11, 1
	jne	SHORT $LL93@ToBinary

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	mov	edx, DWORD PTR Writer$[rbp-232]
	add	edx, 780				; 0000030cH
	mov	DWORD PTR Writer$[rbp-232], edx
	test	dl, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	je	SHORT $LN145@ToBinary
	npad	4
$LL144@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR Writer$[rbp-248]
	sub	rdx, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 12   : 	this->m_Data.resize(this->m_Data.size() + 1);

	inc	rdx
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize

; 13   : 	this->m_Data[m_Offset] = Byte;

	movsxd	rcx, DWORD PTR Writer$[rbp-232]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rcx+rax], 0

; 14   : 	this->m_Offset++;

	mov	edx, DWORD PTR Writer$[rbp-232]
	inc	edx
	mov	DWORD PTR Writer$[rbp-232], edx
	test	dl, 15

; 108  : 	while (GetPosition() % Alignment != 0)

	jne	SHORT $LL144@ToBinary
$LN145@ToBinary:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r8, QWORD PTR Writer$[rbp-248]
	sub	r8, QWORD PTR Writer$[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorWriter.cpp

; 70   : 	if (this->m_Offset + Size > this->m_Data.size())

	lea	eax, DWORD PTR [rdx+19120]
	movsxd	rcx, eax
	cmp	rcx, r8
	jbe	SHORT $LN135@ToBinary

; 72   : 		this->m_Data.resize(this->m_Data.size() + Size);

	lea	rdx, QWORD PTR [r8+19120]
	lea	rcx, QWORD PTR Writer$[rbp-256]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	mov	edx, DWORD PTR Writer$[rbp-232]
$LN135@ToBinary:

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	xor	esi, esi
	mov	r9d, esi
	add	rbx, 785				; 00000311H
	mov	r10d, 9560				; 00002558H
	npad	8
$LL134@ToBinary:

; 75   : 	{
; 76   : 		this->m_Data[this->m_Offset + i] = Bytes[i];

	lea	eax, DWORD PTR [r9+rdx]
	movsxd	rdx, eax
	movzx	ecx, BYTE PTR [rbx-1]
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax], cl
	movzx	r8d, BYTE PTR [rbx]
	mov	ecx, DWORD PTR Writer$[rbp-232]
	add	ecx, r9d
	movsxd	rdx, ecx
	mov	rax, QWORD PTR Writer$[rbp-256]
	mov	BYTE PTR [rdx+rax+1], r8b
	lea	rbx, QWORD PTR [rbx+2]
	add	r9d, 2

; 73   : 	}
; 74   : 	for (int i = 0; i < Size; i++)

	sub	r10, 1
	je	SHORT $LN1897@ToBinary
	mov	edx, DWORD PTR Writer$[rbp-232]
	jmp	SHORT $LL134@ToBinary
$LN1897@ToBinary:

; 77   : 	}
; 78   : 	this->m_Offset += Size;

	add	DWORD PTR Writer$[rbp-232], 19120	; 00004ab0H
	xorps	xmm0, xmm0
	xor	eax, eax
	mov	rbx, QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-256]
	movups	XMMWORD PTR [rbx], xmm0
	mov	QWORD PTR [rbx+16], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 394  : 	std::vector<unsigned char> Data = Writer.GetData();

	lea	rdx, QWORD PTR Writer$[rbp-256]
	mov	rcx, rbx
	call	??0?$vector@EV?$allocator@E@std@@@std@@QEAA@AEBV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >

; 397  : 	return Data;

	or	r15d, 1
	mov	DWORD PTR $T1[rsp], r15d

; 395  : 	Data.resize(FileEnd);

	mov	edx, edi
	mov	rcx, rbx
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR ActorIndexMap$[rbp-256]
	test	rcx, rcx
	je	SHORT $LN105@ToBinary

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR ActorIndexMap$[rbp-240]
	sub	rax, rcx
	sar	rax, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN123@ToBinary

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN123@ToBinary
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN123@ToBinary:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	movdqu	XMMWORD PTR ActorIndexMap$[rbp-256], xmm0

; 2050 :             _Mylast  = nullptr;
; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR ActorIndexMap$[rbp-240], rsi
$LN105@ToBinary:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR ActorHashMap$[rbp-256]
	test	rcx, rcx
	je	SHORT $LN279@ToBinary

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR ActorHashMap$[rbp-240]
	sub	rax, rcx
	sar	rax, 3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax*8]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN297@ToBinary

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN297@ToBinary
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN297@ToBinary:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	movdqu	XMMWORD PTR ActorHashMap$[rbp-256], xmm0

; 2050 :             _Mylast  = nullptr;
; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR ActorHashMap$[rbp-240], rsi
$LN279@ToBinary:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR Writer$[rbp-256]
	test	rcx, rcx
	je	SHORT $LN176@ToBinary

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR Writer$[rbp-240]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN194@ToBinary

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN194@ToBinary
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN194@ToBinary:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN176@ToBinary:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 397  : 	return Data;

	mov	rax, rbx

; 398  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+528]
	add	rsp, 448				; 000001c0H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
	int	3
$LN1898@ToBinary:
?ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ ENDP ; PhiveStaticCompound::ToBinary
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?dtor$0@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA PROC ; `PhiveStaticCompound::ToBinary'::`1'::dtor$0
	lea	rcx, QWORD PTR Writer$[rdx]
	jmp	??1BinaryVectorWriter@@QEAA@XZ
?dtor$0@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA ENDP ; `PhiveStaticCompound::ToBinary'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?dtor$1@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA PROC ; `PhiveStaticCompound::ToBinary'::`1'::dtor$1
	lea	rcx, QWORD PTR ActorHashMap$[rdx]
	jmp	??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$1@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA ENDP ; `PhiveStaticCompound::ToBinary'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?dtor$2@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA PROC ; `PhiveStaticCompound::ToBinary'::`1'::dtor$2
	lea	rcx, QWORD PTR ActorIndexMap$[rdx]
	jmp	??1?$vector@GV?$allocator@G@std@@@std@@QEAA@XZ ; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
?dtor$2@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA ENDP ; `PhiveStaticCompound::ToBinary'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?dtor$3@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA PROC ; `PhiveStaticCompound::ToBinary'::`1'::dtor$3
	lea	rcx, QWORD PTR $T16[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA ENDP ; `PhiveStaticCompound::ToBinary'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?dtor$4@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA PROC ; `PhiveStaticCompound::ToBinary'::`1'::dtor$4
	lea	rcx, QWORD PTR $T14[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA ENDP ; `PhiveStaticCompound::ToBinary'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?dtor$5@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA PROC ; `PhiveStaticCompound::ToBinary'::`1'::dtor$5
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA ENDP ; `PhiveStaticCompound::ToBinary'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?dtor$6@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA PROC ; `PhiveStaticCompound::ToBinary'::`1'::dtor$6
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$6@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA ENDP ; `PhiveStaticCompound::ToBinary'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?dtor$7@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA PROC ; `PhiveStaticCompound::ToBinary'::`1'::dtor$7
	lea	rcx, QWORD PTR $T10[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$7@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA ENDP ; `PhiveStaticCompound::ToBinary'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?dtor$8@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA PROC ; `PhiveStaticCompound::ToBinary'::`1'::dtor$8
	mov	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$8@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA ENDP ; `PhiveStaticCompound::ToBinary'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?dtor$10@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA PROC ; `PhiveStaticCompound::ToBinary'::`1'::dtor$10
	lea	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$10@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA ENDP ; `PhiveStaticCompound::ToBinary'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?dtor$11@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA PROC ; `PhiveStaticCompound::ToBinary'::`1'::dtor$11
	mov	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$11@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA ENDP ; `PhiveStaticCompound::ToBinary'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
$T3 = 56
$T4 = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 56
Start$1$ = 64
i$1$ = 64
$T5 = 64
i$1$ = 72
Link$1$ = 72
$T6 = 72
$T7 = 80
$T8 = 80
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
this$GSCopy$1$ = 176
__$ReturnUdt$GSCopy$1$ = 184
$T13 = 192
$T14 = 224
$T15 = 256
__$ReturnUdt$GSCopy$ = 288
$T16 = 296
Writer$ = 328
ActorHashMap$ = 360
ActorIndexMap$ = 384
_Buff$17 = 408
__$ArrayPad$ = 432
this$ = 512
__$ReturnUdt$ = 520
?dtor$13@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA PROC ; `PhiveStaticCompound::ToBinary'::`1'::dtor$13
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN37@dtor$13
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
	call	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
$LN37@dtor$13:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$13@?0??ToBinary@PhiveStaticCompound@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ@4HA ENDP ; `PhiveStaticCompound::ToBinary'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\limits
;	COMDAT ?lowest@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?lowest@?$numeric_limits@M@std@@SAMXZ PROC		; std::numeric_limits<float>::lowest, COMDAT

; 877  :         return -(max) ();

	movss	xmm0, DWORD PTR __real@ff7fffff

; 878  :     }

	ret	0
?lowest@?$numeric_limits@M@std@@SAMXZ ENDP		; std::numeric_limits<float>::lowest
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
;	COMDAT ??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z
_TEXT	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z PROC ; PhiveStaticCompound::PhiveStaticCompound, COMDAT

; 78   : {

$LN976:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r14, rdx
	mov	rdi, rcx

; 77   : PhiveStaticCompound::PhiveStaticCompound(std::vector<unsigned char> Bytes)

	mov	QWORD PTR this$GSCopy$[rsp], rcx
	mov	QWORD PTR Bytes$GSCopy$[rsp], rdx

; 78   : {

	lea	rsi, QWORD PTR [rcx+19904]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	ecx, ecx
	mov	QWORD PTR [rsi], rcx
	mov	QWORD PTR [rsi+8], rcx
	mov	QWORD PTR [rsi+16], rcx
	mov	QWORD PTR [rdi+19928], rcx
	mov	QWORD PTR [rdi+19936], rcx
	mov	QWORD PTR [rdi+19944], rcx
	mov	QWORD PTR [rdi+19952], rcx
	mov	QWORD PTR [rdi+19960], rcx
	mov	QWORD PTR [rdi+19968], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 78   : {

	lea	r15, QWORD PTR [rdi+19976]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [r15], rcx
	mov	QWORD PTR [r15+8], rcx
	mov	QWORD PTR [r15+16], rcx
	mov	QWORD PTR [rdi+20000], rcx
	mov	QWORD PTR [rdi+20008], rcx
	mov	QWORD PTR [rdi+20016], rcx
	mov	QWORD PTR [rdi+20104], rcx
	mov	QWORD PTR [rdi+20112], rcx
	mov	QWORD PTR [rdi+20120], rcx
	mov	QWORD PTR [rdi+20128], rcx
	mov	QWORD PTR [rdi+20136], rcx
	mov	QWORD PTR [rdi+20144], rcx
	mov	QWORD PTR [rdi+20152], rcx
	mov	QWORD PTR [rdi+20160], rcx
	mov	QWORD PTR [rdi+20168], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 78   : {

	lea	r13, QWORD PTR [rdi+20176]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [r13], rcx
	mov	QWORD PTR [r13+8], rcx
	mov	QWORD PTR [r13+16], rcx
	mov	QWORD PTR [rdi+20200], rcx
	mov	QWORD PTR [rdi+20208], rcx
	mov	QWORD PTR [rdi+20216], rcx
	mov	QWORD PTR [rdi+20224], rcx
	mov	QWORD PTR [rdi+20232], rcx
	mov	QWORD PTR [rdi+20240], rcx
	mov	QWORD PTR [rdi+20248], rcx
	mov	QWORD PTR [rdi+20256], rcx
	mov	QWORD PTR [rdi+20264], rcx
	mov	QWORD PTR [rdi+20272], rcx
	mov	QWORD PTR [rdi+20280], rcx
	mov	QWORD PTR [rdi+20288], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 78   : {

	lea	r12, QWORD PTR [rdi+20296]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [r12], rcx
	mov	QWORD PTR [r12+8], rcx
	mov	QWORD PTR [r12+16], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	mov	rcx, QWORD PTR [rdx]
	mov	rdx, rdi
	mov	eax, 6
	npad	2
$LL972@PhiveStati:
	movups	xmm0, XMMWORD PTR [rcx]
	movups	XMMWORD PTR [rdx], xmm0
	movups	xmm1, XMMWORD PTR [rcx+16]
	movups	XMMWORD PTR [rdx+16], xmm1
	movups	xmm0, XMMWORD PTR [rcx+32]
	movups	XMMWORD PTR [rdx+32], xmm0
	movups	xmm1, XMMWORD PTR [rcx+48]
	movups	XMMWORD PTR [rdx+48], xmm1
	movups	xmm0, XMMWORD PTR [rcx+64]
	movups	XMMWORD PTR [rdx+64], xmm0
	movups	xmm1, XMMWORD PTR [rcx+80]
	movups	XMMWORD PTR [rdx+80], xmm1
	movups	xmm0, XMMWORD PTR [rcx+96]
	movups	XMMWORD PTR [rdx+96], xmm0
	lea	rdx, QWORD PTR [rdx+128]
	movups	xmm1, XMMWORD PTR [rcx+112]
	movups	XMMWORD PTR [rdx-16], xmm1
	lea	rcx, QWORD PTR [rcx+128]
	sub	rax, 1
	jne	SHORT $LL972@PhiveStati
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
	mov	eax, DWORD PTR [rcx+8]
	mov	DWORD PTR [rdx+8], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 82   : 	Reader.Seek(mHeader.mImageOffset, BinaryVectorReader::Position::Begin);

	mov	eax, DWORD PTR [rdi+12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	dec	eax

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rcx, eax
	mov	rdx, QWORD PTR [r14]
	inc	rdx
	add	rdx, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 83   : 	Reader.ReadStruct(&mImage, sizeof(PhiveStaticCompoundImage));

	lea	rcx, QWORD PTR [rdi+784]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	mov	r8d, 19120				; 00004ab0H
	call	memcpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 85   : 	Reader.Seek(mHeader.mActorLinkOffset, BinaryVectorReader::Position::Begin);

	mov	eax, DWORD PTR [rdi+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	dec	eax
	mov	DWORD PTR Reader$$sroa$3091$1$[rsp], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 86   : 	mActorLinks.resize(mImage.mActorLinkCount);

	mov	ebx, DWORD PTR [rdi+17184]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rbp, QWORD PTR [rsi+8]
	mov	rdx, QWORD PTR [rsi]
	mov	rcx, rbp
	sub	rcx, rdx
	sar	rcx, 5

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rbx, rcx
	jae	SHORT $LN553@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rbx, 5
	add	rbx, rdx

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rsi+8], rbx

; 1564 :             return;

	jmp	SHORT $LN554@PhiveStati
$LN553@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN554@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rsi+16]
	sub	rax, rdx
	sar	rax, 5

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rbx, rax
	jbe	SHORT $LN555@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, rbx
	mov	rcx, rsi
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN554@PhiveStati
$LN555@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN560@PhiveStati
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	shl	rbx, 5
	mov	r8, rbx
	xor	edx, edx
	mov	rcx, rbp
	call	memset
	add	rbp, rbx
$LN560@PhiveStati:
	mov	QWORD PTR [rsi+8], rbp
$LN554@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 87   : 	Reader.ReadStruct(mActorLinks.data(), sizeof(PhiveStaticCompoundActorLink) * mImage.mActorLinkCount);

	mov	r8d, DWORD PTR [rdi+17184]
	shl	r8d, 5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, DWORD PTR Reader$$sroa$3091$1$[rsp]
	inc	rdx
	add	rdx, QWORD PTR [r14]
	mov	rcx, QWORD PTR [rsi]
	call	memcpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 89   : 	Reader.Seek(mHeader.mActorHashMapOffset, BinaryVectorReader::Position::Begin);

	mov	ebx, DWORD PTR [rdi+20]

; 90   : 	mActorHashMap.resize(mImage.mActorLinkCount * 2);

	mov	eax, DWORD PTR [rdi+17184]
	lea	edx, DWORD PTR [rax+rax]
	lea	rcx, QWORD PTR [rdi+19928]
	call	?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::resize

; 91   : 	Reader.ReadStruct(mActorHashMap.data(), sizeof(uint64_t) * mImage.mActorLinkCount * 2);

	mov	r8d, DWORD PTR [rdi+17184]
	shl	r8d, 4
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	lea	eax, DWORD PTR [rbx-1]

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, eax
	mov	rax, QWORD PTR [r14]
	inc	rax
	add	rdx, rax
	mov	rcx, QWORD PTR [rdi+19928]
	call	memcpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 99   : 	Reader.Seek(mHeader.mFixedOffset0, BinaryVectorReader::Position::Begin);

	mov	ebx, DWORD PTR [rdi+28]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	dec	ebx
	mov	DWORD PTR Reader$$sroa$3091$2$[rsp], ebx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 100  : 	mFixedOffset0Array.resize(mImage.mFixedCount0);

	mov	ecx, DWORD PTR [rdi+17188]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	lea	rbp, QWORD PTR [rdi+19952]
	mov	rsi, QWORD PTR [rbp+8]
	mov	r8, QWORD PTR [rbp]
	mov	rdx, rsi
	sub	rdx, r8
	sar	rdx, 2
	mov	r9, -3689348814741910323		; cccccccccccccccdH
	imul	rdx, r9

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rcx, rdx
	jae	SHORT $LN765@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [rcx+rcx*4]
	lea	rcx, QWORD PTR [r8+rax*4]

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rbp+8], rcx

; 1564 :             return;

	jmp	SHORT $LN766@PhiveStati
$LN765@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN766@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rbp+16]
	sub	rax, r8
	sar	rax, 2
	imul	rax, r9

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rcx, rax
	jbe	SHORT $LN767@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, rcx
	mov	rcx, rbp
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN766@PhiveStati
$LN767@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN772@PhiveStati
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	lea	rbx, QWORD PTR [rcx+rcx*4]
	shl	rbx, 2
	mov	r8, rbx
	xor	edx, edx
	mov	rcx, rsi
	call	memset
	add	rsi, rbx
	mov	ebx, DWORD PTR Reader$$sroa$3091$2$[rsp]
$LN772@PhiveStati:
	mov	QWORD PTR [rbp+8], rsi
$LN766@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 101  : 	Reader.ReadStruct(mFixedOffset0Array.data(), sizeof(PhiveStaticCompoundFixedOffset0) * mImage.mFixedCount0);

	mov	eax, DWORD PTR [rdi+17188]
	lea	r8d, DWORD PTR [rax+rax*4]
	shl	r8d, 2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, ebx
	mov	rax, QWORD PTR [r14]
	inc	rax
	add	rdx, rax
	mov	rcx, QWORD PTR [rbp]
	call	memcpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 103  : 	Reader.Seek(mHeader.mFixedOffset1, BinaryVectorReader::Position::Begin);

	mov	ebp, DWORD PTR [rdi+32]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	dec	ebp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 104  : 	mFixedOffset1Array.resize(mImage.mFixedCount1);

	mov	ebx, DWORD PTR [rdi+17192]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [r15+8]
	mov	rdx, QWORD PTR [r15]
	mov	rcx, rsi
	sub	rcx, rdx
	sar	rcx, 4

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rbx, rcx
	jae	SHORT $LN722@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rbx, 4
	add	rbx, rdx

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [r15+8], rbx

; 1564 :             return;

	jmp	SHORT $LN723@PhiveStati
$LN722@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN723@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [r15+16]
	sub	rax, rdx
	sar	rax, 4

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rbx, rax
	jbe	SHORT $LN724@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, rbx
	mov	rcx, r15
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN723@PhiveStati
$LN724@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN729@PhiveStati
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	shl	rbx, 4
	mov	r8, rbx
	xor	edx, edx
	mov	rcx, rsi
	call	memset
	add	rsi, rbx
$LN729@PhiveStati:
	mov	QWORD PTR [r15+8], rsi
$LN723@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 105  : 	Reader.ReadStruct(mFixedOffset1Array.data(), sizeof(PhiveStaticCompoundFixedOffset1) * mImage.mFixedCount1);

	mov	r8d, DWORD PTR [rdi+17192]
	shl	r8d, 4
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, ebp
	mov	rax, QWORD PTR [r14]
	inc	rax
	add	rdx, rax
	mov	rcx, QWORD PTR [r15]
	call	memcpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 107  : 	Reader.Seek(mHeader.mFixedOffset2, BinaryVectorReader::Position::Begin);

	mov	ebp, DWORD PTR [rdi+36]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	dec	ebp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 108  : 	mFixedOffset2Array.resize(mImage.mFixedCount2);

	mov	ebx, DWORD PTR [rdi+17196]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	lea	r15, QWORD PTR [rdi+20000]
	mov	rsi, QWORD PTR [r15+8]
	mov	rdx, QWORD PTR [r15]
	mov	rcx, rsi
	sub	rcx, rdx
	sar	rcx, 3

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rbx, rcx
	jae	SHORT $LN687@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [rdx+rbx*8]

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [r15+8], rax

; 1564 :             return;

	jmp	SHORT $LN688@PhiveStati
$LN687@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN688@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [r15+16]
	sub	rax, rdx
	sar	rax, 3

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rbx, rax
	jbe	SHORT $LN689@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, rbx
	mov	rcx, r15
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN688@PhiveStati
$LN689@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN694@PhiveStati
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	lea	rbx, QWORD PTR [rbx*8]
	mov	r8, rbx
	xor	edx, edx
	mov	rcx, rsi
	call	memset
	add	rsi, rbx
$LN694@PhiveStati:
	mov	QWORD PTR [r15+8], rsi
$LN688@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 109  : 	Reader.ReadStruct(mFixedOffset2Array.data(), sizeof(PhiveStaticCompoundFixedOffset2) * mImage.mFixedCount2);

	mov	r8d, DWORD PTR [rdi+17196]
	shl	r8d, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, ebp
	mov	rax, QWORD PTR [r14]
	inc	rax
	add	rdx, rax
	mov	rcx, QWORD PTR [r15]
	call	memcpy
	movsxd	rcx, DWORD PTR [rdi+40]
	mov	rax, QWORD PTR [r14]
	movups	xmm0, XMMWORD PTR [rcx+rax]
	movups	XMMWORD PTR [rdi+20024], xmm0
	movups	xmm1, XMMWORD PTR [rcx+rax+16]
	movups	XMMWORD PTR [rdi+20040], xmm1
	movups	xmm0, XMMWORD PTR [rcx+rax+32]
	movups	XMMWORD PTR [rdi+20056], xmm0
	movups	xmm1, XMMWORD PTR [rcx+rax+48]
	movups	XMMWORD PTR [rdi+20072], xmm1
	movups	xmm0, XMMWORD PTR [rcx+rax+64]
	movups	XMMWORD PTR [rdi+20088], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 114  : 	if (mTeraWater.mWidth * mTeraWater.mHeight * 8 == mTeraWater.mTerrainSize)

	mov	edx, DWORD PTR [rdi+20048]
	imul	edx, DWORD PTR [rdi+20052]
	lea	ecx, DWORD PTR [rdx*8]
	cmp	rcx, QWORD PTR [rdi+20056]
	jne	$LN8@PhiveStati

; 115  : 	{
; 116  : 		Reader.Seek(mHeader.mTeraWaterTerrainOffset, BinaryVectorReader::Position::Begin);

	mov	ebp, DWORD PTR [rdi+44]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	dec	ebp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 117  : 		mTeraWaterTerrain.resize(mTeraWater.mWidth * mTeraWater.mHeight);

	mov	ebx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	lea	r15, QWORD PTR [rdi+20104]
	mov	rsi, QWORD PTR [r15+8]
	mov	rdx, QWORD PTR [r15]
	mov	rcx, rsi
	sub	rcx, rdx
	sar	rcx, 3

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rbx, rcx
	jae	SHORT $LN887@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [rdx+rbx*8]

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [r15+8], rax

; 1564 :             return;

	jmp	SHORT $LN888@PhiveStati
$LN887@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN888@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [r15+16]
	sub	rax, rdx
	sar	rax, 3

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rbx, rax
	jbe	SHORT $LN889@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, rbx
	mov	rcx, r15
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN888@PhiveStati
$LN889@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN894@PhiveStati
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	lea	rbx, QWORD PTR [rbx*8]
	mov	r8, rbx
	xor	edx, edx
	mov	rcx, rsi
	call	memset
	add	rsi, rbx
$LN894@PhiveStati:
	mov	QWORD PTR [r15+8], rsi
$LN888@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 118  : 		Reader.ReadStruct(mTeraWaterTerrain.data(), sizeof(PhiveStaticCompoundTeraWaterTerrain) * mTeraWater.mWidth * mTeraWater.mHeight);

	mov	r8d, DWORD PTR [rdi+20052]
	imul	r8d, DWORD PTR [rdi+20048]
	shl	r8d, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, ebp
	mov	rax, QWORD PTR [r14]
	inc	rax
	add	rdx, rax
	mov	rcx, QWORD PTR [r15]
	call	memcpy
$LN8@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 120  : 	if (mTeraWater.mSubTerrainSize0 != 0)

	mov	rdx, QWORD PTR [rdi+20064]
	test	rdx, rdx
	je	SHORT $LN9@PhiveStati

; 121  : 	{
; 122  : 		Reader.Seek(mHeader.mTeraWaterSubTerrainOffset0, BinaryVectorReader::Position::Begin);

	mov	ebx, DWORD PTR [rdi+48]

; 123  : 		mTeraWaterSubTerrain0.resize(mTeraWater.mSubTerrainSize0);

	lea	rcx, QWORD PTR [rdi+20128]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	mov	r8d, DWORD PTR [rdi+20064]

; 12   : 		this->m_Offset = Offset - 1;

	lea	eax, DWORD PTR [rbx-1]

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, eax
	mov	rax, QWORD PTR [r14]
	inc	rax
	add	rdx, rax
	mov	rcx, QWORD PTR [rdi+20128]
	call	memcpy
$LN9@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 126  : 	if (mTeraWater.mSubTerrainSize1 != 0)

	mov	rdx, QWORD PTR [rdi+20072]
	test	rdx, rdx
	je	SHORT $LN10@PhiveStati

; 127  : 	{
; 128  : 		Reader.Seek(mHeader.mTeraWaterSubTerrainOffset1, BinaryVectorReader::Position::Begin);

	mov	ebx, DWORD PTR [rdi+52]

; 129  : 		mTeraWaterSubTerrain1.resize(mTeraWater.mSubTerrainSize1);

	lea	rcx, QWORD PTR [rdi+20152]
	call	?resize@?$vector@EV?$allocator@E@std@@@std@@QEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::resize
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	mov	r8d, DWORD PTR [rdi+20072]

; 12   : 		this->m_Offset = Offset - 1;

	lea	eax, DWORD PTR [rbx-1]

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, eax
	mov	rax, QWORD PTR [r14]
	inc	rax
	add	rdx, rax
	mov	rcx, QWORD PTR [rdi+20152]
	call	memcpy
$LN10@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 133  : 	uint32_t CompoundBodyCount = mImage.mRigidBodyEntryEntityCount + mImage.mRigidBodyEntrySensorCount;

	mov	esi, DWORD PTR [rdi+17180]
	add	esi, DWORD PTR [rdi+17176]

; 134  : 	mCompoundTagFile.resize(CompoundBodyCount);

	mov	ebx, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [r13+8]
	mov	r8, QWORD PTR [r13]
	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 5

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rbx, rcx
	jae	SHORT $LN577@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rbx, 5
	add	rbx, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	rdx, r9
	mov	rcx, rbx
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [r13+8], rbx

; 1564 :             return;

	jmp	SHORT $LN578@PhiveStati
$LN577@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN578@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [r13+16]
	sub	rax, r8
	sar	rax, 5

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rbx, rax
	jbe	SHORT $LN579@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, rbx
	mov	rcx, r13
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN578@PhiveStati
$LN579@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rbx, rcx
	mov	rdx, rbx
	mov	rcx, r9
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
	mov	QWORD PTR [r13+8], rax
$LN578@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 135  : 	uint32_t ImageIter = 0;

	xor	ebp, ebp

; 136  : 	for (uint32_t i = 0; i < CompoundBodyCount; i++)

	test	esi, esi
	je	$LN3@PhiveStati
	mov	r12d, esi
	npad	10
$LL4@PhiveStati:

; 137  : 	{
; 138  : 		Reader.Seek(mHeader.mCompoundShapeImageOffsetArray[ImageIter], BinaryVectorReader::Position::Begin);

	mov	r15d, ebp
	movsxd	r8, DWORD PTR [rdi+rbp*4+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	shl	r15, 5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	mov	rax, QWORD PTR [r14]
	mov	rcx, QWORD PTR [r13]
	mov	rax, QWORD PTR [r8+rax]
	mov	QWORD PTR [r15+rcx], rax
	lea	eax, DWORD PTR [r8+7]
	mov	DWORD PTR tv5816[rsp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rcx, QWORD PTR [r13]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 140  : 		mCompoundTagFile[ImageIter].mSizeFlag = _byteswap_ulong(mCompoundTagFile[ImageIter].mSizeFlag);

	mov	eax, DWORD PTR [rcx+r15]
	bswap	eax
	mov	DWORD PTR [rcx+r15], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [r13]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 141  : 		mCompoundTagFile[ImageIter].mData.resize(mCompoundTagFile[ImageIter].mSizeFlag - 8);

	lea	rsi, QWORD PTR [rax+r15]
	mov	eax, DWORD PTR [rax+r15]
	sub	eax, 8
	mov	r8d, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [rsi+16]
	mov	rdx, QWORD PTR [rsi+8]
	mov	rcx, r9
	sub	rcx, rdx

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	r8, rcx
	jae	SHORT $LN273@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	add	rax, rdx

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rsi+16], rax

; 1564 :             return;

	jmp	SHORT $LN274@PhiveStati
$LN273@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN274@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rsi+24]
	sub	rax, rdx

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	r8, rax
	jbe	SHORT $LN275@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, r8
	lea	rcx, QWORD PTR [rsi+8]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@EV?$allocator@E@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN274@PhiveStati
$LN275@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	r8, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

	lea	rbx, QWORD PTR [r8+r9]

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	xor	edx, edx
	mov	rcx, r9
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	QWORD PTR [rsi+16], rbx
$LN274@PhiveStati:

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [r13]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR [r15+rax+8]
	mov	r8, QWORD PTR [r15+rax+16]
	sub	r8, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	mov	r8d, r8d
	movsxd	rdx, DWORD PTR tv5816[rsp]
	inc	rdx
	add	rdx, QWORD PTR [r14]
	call	memcpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 143  : 		ImageIter++;

	inc	ebp

; 136  : 	for (uint32_t i = 0; i < CompoundBodyCount; i++)

	cmp	ebp, r12d
	jb	$LL4@PhiveStati
	lea	r12, QWORD PTR [rdi+20296]
$LN3@PhiveStati:

; 144  : 	}
; 145  : 
; 146  : 	if (mImage.mWaterBoxCount != 0)

	mov	edx, DWORD PTR [rdi+19888]
	test	edx, edx
	je	$LN11@PhiveStati

; 147  : 	{
; 148  : 		Reader.Seek(mHeader.mCompoundShapeImageOffsetArray[ImageIter], BinaryVectorReader::Position::Begin);

	mov	r15d, DWORD PTR [rdi+rbp*4+56]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	dec	r15d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 149  : 		mWaterBoxArray.resize(mImage.mWaterBoxCount);

	mov	ecx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	lea	r13, QWORD PTR [rdi+20200]
	mov	rsi, QWORD PTR [r13+8]
	mov	r8, QWORD PTR [r13]
	mov	rdx, rsi
	sub	rdx, r8
	sar	rdx, 3
	mov	r9, -8198552921648689607		; 8e38e38e38e38e39H
	imul	rdx, r9

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rcx, rdx
	jae	SHORT $LN438@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [rcx+rcx*8]
	lea	rcx, QWORD PTR [r8+rax*8]

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [r13+8], rcx

; 1564 :             return;

	jmp	SHORT $LN439@PhiveStati
$LN438@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN439@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [r13+16]
	sub	rax, r8
	sar	rax, 3
	imul	rax, r9

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rcx, rax
	jbe	SHORT $LN440@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, rcx
	mov	rcx, r13
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN439@PhiveStati
$LN440@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN445@PhiveStati
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	lea	rbx, QWORD PTR [rcx+rcx*8]
	shl	rbx, 3
	mov	r8, rbx
	xor	edx, edx
	mov	rcx, rsi
	call	memset
	add	rsi, rbx
$LN445@PhiveStati:
	mov	QWORD PTR [r13+8], rsi
$LN439@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 150  : 		Reader.ReadStruct(mWaterBoxArray.data(), sizeof(PhiveStaticCompoundWaterBox) * mImage.mWaterBoxCount);

	mov	eax, DWORD PTR [rdi+19888]
	lea	r8d, DWORD PTR [rax+rax*8]
	shl	r8d, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, r15d
	mov	rax, QWORD PTR [r14]
	inc	rax
	add	rdx, rax
	mov	rcx, QWORD PTR [r13]
	call	memcpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 151  : 		ImageIter++;

	inc	ebp
$LN11@PhiveStati:

; 152  : 	}
; 153  : 	if (mImage.mWaterCylinderCount != 0)

	mov	edx, DWORD PTR [rdi+19892]
	mov	rbx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	test	edx, edx
	je	$LN12@PhiveStati

; 154  : 	{
; 155  : 		Reader.Seek(mHeader.mCompoundShapeImageOffsetArray[ImageIter], BinaryVectorReader::Position::Begin);

	mov	r15d, DWORD PTR [rdi+rbp*4+56]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	dec	r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	lea	r13, QWORD PTR [rdi+20224]
	mov	rsi, QWORD PTR [r13+8]
	mov	r8, QWORD PTR [r13]
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3
	imul	rcx, rbx

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN481@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, rdx, 88				; 00000058H
	add	rax, r8

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [r13+8], rax

; 1564 :             return;

	jmp	SHORT $LN482@PhiveStati
$LN481@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN482@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [r13+16]
	sub	rax, r8
	sar	rax, 3
	imul	rax, rbx

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN483@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, r13
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN482@PhiveStati
$LN483@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN488@PhiveStati
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	imul	rbx, rdx, 88				; 00000058H
	mov	r8, rbx
	xor	edx, edx
	mov	rcx, rsi
	call	memset
	add	rsi, rbx
	mov	rbx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
$LN488@PhiveStati:
	mov	QWORD PTR [r13+8], rsi
$LN482@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 157  : 		Reader.ReadStruct(mWaterCylinderArray.data(), sizeof(PhiveStaticCompoundWaterCylinder) * mImage.mWaterCylinderCount);

	imul	r8d, DWORD PTR [rdi+19892], 88		; 00000058H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, r15d
	mov	rax, QWORD PTR [r14]
	inc	rax
	add	rdx, rax
	mov	rcx, QWORD PTR [r13]
	call	memcpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 158  : 		ImageIter++;

	inc	ebp
$LN12@PhiveStati:

; 159  : 	}
; 160  : 	if (mImage.mWaterFallCount != 0)

	mov	edx, DWORD PTR [rdi+19896]
	test	edx, edx
	je	$LN13@PhiveStati

; 161  : 	{
; 162  : 		Reader.Seek(mHeader.mCompoundShapeImageOffsetArray[ImageIter], BinaryVectorReader::Position::Begin);

	mov	r15d, DWORD PTR [rdi+rbp*4+56]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	dec	r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	lea	r13, QWORD PTR [rdi+20248]
	mov	rsi, QWORD PTR [r13+8]
	mov	r8, QWORD PTR [r13]
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3
	imul	rcx, rbx

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN406@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, rdx, 88				; 00000058H
	add	rax, r8

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [r13+8], rax

; 1564 :             return;

	jmp	SHORT $LN407@PhiveStati
$LN406@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN407@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [r13+16]
	sub	rax, r8
	sar	rax, 3
	imul	rax, rbx

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN408@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, r13
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN407@PhiveStati
$LN408@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN413@PhiveStati
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	imul	rbx, rdx, 88				; 00000058H
	mov	r8, rbx
	xor	edx, edx
	mov	rcx, rsi
	call	memset
	add	rsi, rbx
	mov	rbx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
$LN413@PhiveStati:
	mov	QWORD PTR [r13+8], rsi
$LN407@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 164  : 		Reader.ReadStruct(mWaterFallArray.data(), sizeof(PhiveStaticCompoundWaterFall) * mImage.mWaterFallCount);

	imul	r8d, DWORD PTR [rdi+19896], 88		; 00000058H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, r15d
	mov	rax, QWORD PTR [r14]
	inc	rax
	add	rdx, rax
	mov	rcx, QWORD PTR [r13]
	call	memcpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 165  : 		ImageIter++;

	inc	ebp
$LN13@PhiveStati:

; 166  : 	}
; 167  : 	if (mImage.mExternalMeshCount != 0)

	mov	edx, DWORD PTR [rdi+19900]
	test	edx, edx
	je	$LN14@PhiveStati

; 168  : 	{
; 169  : 		Reader.Seek(mHeader.mCompoundShapeImageOffsetArray[ImageIter], BinaryVectorReader::Position::Begin);

	mov	r15d, DWORD PTR [rdi+rbp*4+56]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	dec	r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	lea	r13, QWORD PTR [rdi+20272]
	mov	rsi, QWORD PTR [r13+8]
	mov	r8, QWORD PTR [r13]
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 2
	imul	rcx, rbx

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN371@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, rdx, 44				; 0000002cH
	add	rax, r8

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [r13+8], rax

; 1564 :             return;

	jmp	SHORT $LN372@PhiveStati
$LN371@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN372@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [r13+16]
	sub	rax, r8
	sar	rax, 2
	imul	rax, rbx

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN373@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, r13
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN372@PhiveStati
$LN373@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN378@PhiveStati
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	imul	rbx, rdx, 44				; 0000002cH
	mov	r8, rbx
	xor	edx, edx
	mov	rcx, rsi
	call	memset
	add	rsi, rbx
$LN378@PhiveStati:
	mov	QWORD PTR [r13+8], rsi
$LN372@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 171  : 		Reader.ReadStruct(mExternalMeshArray.data(), sizeof(PhiveStaticCompoundExternalMesh) * mImage.mExternalMeshCount);

	imul	r8d, DWORD PTR [rdi+19900], 44		; 0000002cH
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, r15d
	mov	rax, QWORD PTR [r14]
	inc	rax
	add	rdx, rax
	mov	rcx, QWORD PTR [r13]
	call	memcpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 172  : 		ImageIter++;

	inc	ebp
$LN14@PhiveStati:

; 173  : 	}
; 174  : 
; 175  : 	mExternalBphshMeshes.resize(mImage.mExternalMeshCount);

	mov	ebx, DWORD PTR [rdi+19900]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [r12+8]
	mov	r8, QWORD PTR [r12]
	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 7

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rbx, rcx
	jae	SHORT $LN311@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rbx, 7
	add	rbx, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	rdx, r9
	mov	rcx, rbx
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [r12+8], rbx

; 1564 :             return;

	jmp	SHORT $LN312@PhiveStati
$LN311@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN312@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [r12+16]
	sub	rax, r8
	sar	rax, 7

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rbx, rax
	jbe	SHORT $LN313@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, rbx
	mov	rcx, r12
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN312@PhiveStati
$LN313@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rbx, rcx
	mov	rdx, rbx
	mov	rcx, r9
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
	mov	QWORD PTR [r12+8], rax
$LN312@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 176  : 	for (uint32_t i = 0; i < mImage.mExternalMeshCount; i++)

	xor	ebx, ebx
	mov	r13d, ebx
	cmp	DWORD PTR [rdi+19900], ebx
	jbe	$LN6@PhiveStati
	npad	3
$LL7@PhiveStati:

; 177  : 	{
; 178  : 		Reader.Seek(mHeader.mCompoundShapeImageOffsetArray[ImageIter], BinaryVectorReader::Position::Begin);

	mov	eax, ebp
	add	rax, 14
	lea	r9, QWORD PTR [rdi+rax*4]
	mov	QWORD PTR tv5814[rsp], r9

; 179  : 		Reader.ReadStruct(&mExternalBphshMeshes[i], 48);

	mov	esi, r13d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	shl	rsi, 7
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, DWORD PTR [r9]
	mov	rcx, QWORD PTR [r14]
	mov	rax, QWORD PTR [r12]
	movups	xmm0, XMMWORD PTR [rdx+rcx]
	movups	XMMWORD PTR [rax+rsi], xmm0
	movups	xmm1, XMMWORD PTR [rdx+rcx+16]
	movups	XMMWORD PTR [rax+rsi+16], xmm1
	movups	xmm0, XMMWORD PTR [rdx+rcx+32]
	movups	XMMWORD PTR [rax+rsi+32], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	r8, QWORD PTR [r12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 181  : 		Reader.Seek(mHeader.mCompoundShapeImageOffsetArray[ImageIter] + mExternalBphshMeshes[i].mImageOffset, BinaryVectorReader::Position::Begin);

	mov	edx, DWORD PTR [r8+rsi+12]
	add	edx, DWORD PTR [r9]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rcx, edx
	mov	rax, QWORD PTR [r14]
	mov	rcx, QWORD PTR [rcx+rax]
	mov	QWORD PTR [r8+rsi+48], rcx
	lea	eax, DWORD PTR [rdx+7]
	mov	DWORD PTR tv5832[rsp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rcx, QWORD PTR [r12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 183  : 		mExternalBphshMeshes[i].mTagFile.mSizeFlag = _byteswap_ulong(mExternalBphshMeshes[i].mTagFile.mSizeFlag);

	mov	eax, DWORD PTR [rcx+rsi+48]
	bswap	eax
	mov	DWORD PTR [rcx+rsi+48], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [r12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 184  : 		mExternalBphshMeshes[i].mTagFile.mData.resize(mExternalBphshMeshes[i].mTagFile.mSizeFlag - 8);

	lea	r15, QWORD PTR [rax+rsi]
	mov	eax, DWORD PTR [rax+rsi+48]
	sub	eax, 8
	mov	r8d, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [r15+64]
	mov	rdx, QWORD PTR [r15+56]
	mov	rcx, r9
	sub	rcx, rdx

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	r8, rcx
	jae	SHORT $LN174@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	add	rax, rdx

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [r15+64], rax

; 1564 :             return;

	jmp	SHORT $LN175@PhiveStati
$LN174@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN175@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [r15+72]
	sub	rax, rdx

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	r8, rax
	jbe	SHORT $LN176@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, r8
	lea	rcx, QWORD PTR [r15+56]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@EV?$allocator@E@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN175@PhiveStati
$LN176@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	r8, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

	lea	rbx, QWORD PTR [r8+r9]

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	xor	edx, edx
	mov	rcx, r9
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	QWORD PTR [r15+64], rbx
$LN175@PhiveStati:

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [r12]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rsi+rax+56]
	mov	r8, QWORD PTR [rsi+rax+64]
	sub	r8, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	mov	r8d, r8d
	movsxd	rdx, DWORD PTR tv5832[rsp]
	inc	rdx
	add	rdx, QWORD PTR [r14]
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rcx, QWORD PTR [r12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 187  : 		Reader.Seek(mHeader.mCompoundShapeImageOffsetArray[ImageIter] + mExternalBphshMeshes[i].mReserve0Offset, BinaryVectorReader::Position::Begin);

	mov	eax, DWORD PTR [rcx+rsi+16]
	mov	rdx, QWORD PTR tv5814[rsp]
	dec	eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	add	eax, DWORD PTR [rdx]
	mov	DWORD PTR Reader$$sroa$3091$10$[rsp], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 188  : 		mExternalBphshMeshes[i].mReserve0Array.resize(mExternalBphshMeshes[i].mReserve0Size >> 3);

	lea	r15, QWORD PTR [rcx+rsi]
	mov	r8d, DWORD PTR [rcx+rsi+32]
	shr	r8, 3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [r15+88]
	mov	rdx, QWORD PTR [r15+80]
	mov	rcx, r9
	sub	rcx, rdx
	sar	rcx, 3

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	r8, rcx
	jae	SHORT $LN55@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [rdx+r8*8]

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [r15+88], rax

; 1564 :             return;

	jmp	SHORT $LN56@PhiveStati
$LN55@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN56@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [r15+96]
	sub	rax, rdx
	sar	rax, 3

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	r8, rax
	jbe	SHORT $LN57@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, r8
	lea	rcx, QWORD PTR [r15+80]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN56@PhiveStati
$LN57@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	r8, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

	lea	r8, QWORD PTR [r8*8]
	lea	rbx, QWORD PTR [r8+r9]

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	xor	edx, edx
	mov	rcx, r9
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	QWORD PTR [r15+88], rbx
$LN56@PhiveStati:

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [r12]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rsi+rax+80]
	mov	rax, QWORD PTR [rsi+rax+88]
	sub	rax, rcx
	sar	rax, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 189  : 		Reader.ReadStruct(mExternalBphshMeshes[i].mReserve0Array.data(), mExternalBphshMeshes[i].mReserve0Array.size() * 8);

	lea	r8d, DWORD PTR [rax*8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, DWORD PTR Reader$$sroa$3091$10$[rsp]
	inc	rdx
	add	rdx, QWORD PTR [r14]
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rcx, QWORD PTR [r12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 191  : 		Reader.Seek(mHeader.mCompoundShapeImageOffsetArray[ImageIter] + mExternalBphshMeshes[i].mReserve1Offset, BinaryVectorReader::Position::Begin);

	mov	r15d, DWORD PTR [rcx+rsi+20]
	mov	rdx, QWORD PTR tv5814[rsp]
	dec	r15d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 12   : 		this->m_Offset = Offset - 1;

	add	r15d, DWORD PTR [rdx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 192  : 		mExternalBphshMeshes[i].mReserve1Array.resize(mExternalBphshMeshes[i].mReserve1Size >> 4);

	lea	rbx, QWORD PTR [rcx+rsi]
	mov	edx, DWORD PTR [rcx+rsi+36]
	shr	rdx, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [rbx+112]
	mov	r8, QWORD PTR [rbx+104]
	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 4

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN126@PhiveStati

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rdx, 4
	add	rdx, r8

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rbx+112], rdx

; 1564 :             return;

	jmp	SHORT $LN127@PhiveStati
$LN126@PhiveStati:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN127@PhiveStati

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rbx+120]
	sub	rax, r8
	sar	rax, 4

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN128@PhiveStati

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	lea	rcx, QWORD PTR [rbx+104]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN127@PhiveStati
$LN128@PhiveStati:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
	mov	rcx, r9
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
	mov	QWORD PTR [rbx+112], rax
$LN127@PhiveStati:

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [r12]

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rsi+rax+104]
	mov	r8, QWORD PTR [rsi+rax+112]
	sub	r8, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 193  : 		Reader.ReadStruct(mExternalBphshMeshes[i].mReserve1Array.data(), mExternalBphshMeshes[i].mReserve1Array.size() * sizeof(PhiveStaticCompoundBphshReserve1));

	and	r8d, -16				; fffffff0H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\BinaryVectorReader.cpp

; 146  : 	std::memcpy(Dest, this->m_Bytes.data() + this->m_Offset + 1, Size);

	movsxd	rdx, r15d
	mov	rax, QWORD PTR [r14]
	inc	rax
	add	rdx, rax
	call	memcpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 195  : 		ImageIter++;

	inc	ebp

; 176  : 	for (uint32_t i = 0; i < mImage.mExternalMeshCount; i++)

	inc	r13d
	cmp	r13d, DWORD PTR [rdi+19900]
	jb	$LL7@PhiveStati
	xor	ebx, ebx
$LN6@PhiveStati:

; 196  : 	}
; 197  : 	std::cout << "COMPLETED\n";

	lea	rdx, OFFSET FLAT:??_C@_0L@POIDPCAG@COMPLETED?6@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [r14]
	test	rcx, rcx
	je	SHORT $LN82@PhiveStati

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [r14+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN100@PhiveStati

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN97@PhiveStati

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN100@PhiveStati:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [r14], rbx

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [r14+8], rbx

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [r14+16], rbx
$LN82@PhiveStati:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

; 198  : }

	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+160]
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN97@PhiveStati:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN973@PhiveStati:
??0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z ENDP ; PhiveStaticCompound::PhiveStaticCompound
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$0@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$0
	mov	rcx, QWORD PTR Bytes$GSCopy$[rdx]
	jmp	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
?dtor$0@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$1@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$1
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 19904				; 00004dc0H
	jmp	??1?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::~vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >
?dtor$1@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$2@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$2
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 19928				; 00004dd8H
	jmp	??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
?dtor$2@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$3@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$3
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 19952				; 00004df0H
	jmp	??1?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::~vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
?dtor$3@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$4@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$4
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 19976				; 00004e08H
	jmp	??1?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::~vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
?dtor$4@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$5@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$5
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 20000				; 00004e20H
	jmp	??1?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::~vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
?dtor$5@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$6@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$6
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 20104				; 00004e88H
	jmp	??1?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::~vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
?dtor$6@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$7@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$7
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 20128				; 00004ea0H
	jmp	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
?dtor$7@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$8@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$8
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 20152				; 00004eb8H
	jmp	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
?dtor$8@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$9@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$9
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 20176				; 00004ed0H
	jmp	??1?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::~vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
?dtor$9@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$10@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$10
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 20200				; 00004ee8H
	jmp	??1?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::~vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >
?dtor$10@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$11@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$11
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 20224				; 00004f00H
	jmp	??1?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::~vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
?dtor$11@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$12@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$12
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 20248				; 00004f18H
	jmp	??1?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::~vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
?dtor$12@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$13@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$13
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 20272				; 00004f30H
	jmp	??1?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::~vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
?dtor$13@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Reader$$sroa$3091$10$ = 32
Reader$$sroa$3091$2$ = 32
Reader$$sroa$3091$1$ = 32
tv5832 = 32
tv5816 = 32
tv5814 = 40
this$GSCopy$ = 48
Bytes$GSCopy$ = 56
__$ArrayPad$ = 64
this$ = 144
Bytes$ = 152
?dtor$14@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA PROC ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$14
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	add	rcx, 20296				; 00004f48H
	jmp	??1?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::~vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
?dtor$14@?0???0PhiveStaticCompound@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z@4HA ENDP ; `PhiveStaticCompound::PhiveStaticCompound'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?push_back@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$vec@$02M$0A@@glm@@@Z
_TEXT	SEGMENT
this$ = 8
_Val$ = 16
?push_back@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$vec@$02M$0A@@glm@@@Z PROC ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::push_back, COMDAT

; 876  :     _CONSTEXPR20 void push_back(_Ty&& _Val) {

	mov	r8, rdx

; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rdx, QWORD PTR [rcx+8]
	cmp	rdx, QWORD PTR [rcx+16]
	je	SHORT $LN4@push_back
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	movsd	xmm0, QWORD PTR [r8]
	movsd	QWORD PTR [rdx], xmm0
	mov	eax, DWORD PTR [r8+8]
	mov	DWORD PTR [rdx+8], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 806  :         ++_Mylast;

	add	QWORD PTR [rcx+8], 12

; 877  :         // insert by moving into element at end, provide strong guarantee
; 878  :         _Emplace_one_at_back(_STD move(_Val));
; 879  :     }

	ret	0
$LN4@push_back:

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	jmp	??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Emplace_reallocate<glm::vec<3,float,0> >
?push_back@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@QEAAX$$QEAU?$vec@$02M$0A@@glm@@@Z ENDP ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional
;	COMDAT ??0?$optional@U?$vec@$01M$0A@@glm@@@std@@QEAA@Unullopt_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??0?$optional@U?$vec@$01M$0A@@glm@@@std@@QEAA@Unullopt_t@1@@Z PROC ; std::optional<glm::vec<2,float,0> >::optional<glm::vec<2,float,0> >, COMDAT

; 78   :     constexpr _Optional_destruct_base() noexcept : _Dummy{}, _Has_value{false} {} // initialize an empty optional

	mov	BYTE PTR [rcx+8], 0

; 227  :     constexpr optional(nullopt_t) noexcept {}

	mov	rax, rcx
	ret	0
??0?$optional@U?$vec@$01M$0A@@glm@@@std@@QEAA@Unullopt_t@1@@Z ENDP ; std::optional<glm::vec<2,float,0> >::optional<glm::vec<2,float,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional
;	COMDAT ??0?$_Optional_construct_base@U?$vec@$01M$0A@@glm@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Optional_construct_base@U?$vec@$01M$0A@@glm@@@std@@QEAA@XZ PROC ; std::_Optional_construct_base<glm::vec<2,float,0> >::_Optional_construct_base<glm::vec<2,float,0> >, COMDAT

; 78   :     constexpr _Optional_destruct_base() noexcept : _Dummy{}, _Has_value{false} {} // initialize an empty optional

	mov	BYTE PTR [rcx+8], 0
	mov	rax, rcx
	ret	0
??0?$_Optional_construct_base@U?$vec@$01M$0A@@glm@@@std@@QEAA@XZ ENDP ; std::_Optional_construct_base<glm::vec<2,float,0> >::_Optional_construct_base<glm::vec<2,float,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??A?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAAEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAAEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::operator[], COMDAT

; 1883 :         auto& _My_data = _Mypair._Myval2;
; 1884 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1885 :         _STL_VERIFY(
; 1886 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1887 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1888 : 
; 1889 :         return _My_data._Myfirst[_Pos];

	shl	rdx, 7
	add	rdx, QWORD PTR [rcx]
	mov	rax, rdx

; 1890 :     }

	ret	0
??A?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAAEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?size@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::size, COMDAT

; 1868 :         auto& _My_data = _Mypair._Myval2;
; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 7

; 1870 :     }

	ret	0
?size@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rdi, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rbx, rdx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 7

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rbx, 7

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	rdx, r9
	add	rbx, r8
	mov	rcx, rbx
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rbx

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 7

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rbx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1571 :                 return;
; 1572 :             }
; 1573 : 
; 1574 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1575 :             const pointer _Oldlast = _Mylast;
; 1576 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rbx, rcx
	mov	rcx, r9
	mov	rdx, rbx
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
	mov	QWORD PTR [rdi+8], rax
$LN5@resize:

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::~vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdx, QWORD PTR [rbx+8]
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >

; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -128				; ffffffffffffff80H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::~vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?size@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::size, COMDAT

; 1868 :         auto& _My_data = _Mypair._Myval2;
; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	mov	rcx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sar	rax, 2
	imul	rax, rcx

; 1870 :     }

	ret	0
?size@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?data@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::data, COMDAT

; 1787 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx]

; 1788 :     }

	ret	0
?data@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN35:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rdi, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]
	mov	r9, 3353953467947191203			; 2e8ba2e8ba2e8ba3H
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 2
	imul	rcx, r9

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, rdx, 44				; 0000002cH
	add	rax, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rax

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 2
	imul	rax, r9

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN11@resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	imul	rbx, rdx, 44				; 0000002cH
	xor	edx, edx
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN11@resize:
	mov	QWORD PTR [rdi+8], rsi
$LN5@resize:

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::~vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sub	rax, rcx
	sar	rax, 2
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 44				; 0000002cH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::~vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?size@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::size, COMDAT

; 1868 :         auto& _My_data = _Mypair._Myval2;
; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	mov	rcx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sar	rax, 3
	imul	rax, rcx

; 1870 :     }

	ret	0
?size@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?data@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::data, COMDAT

; 1787 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx]

; 1788 :     }

	ret	0
?data@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN35:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rdi, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]
	mov	r9, 3353953467947191203			; 2e8ba2e8ba2e8ba3H
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3
	imul	rcx, r9

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, rdx, 88				; 00000058H
	add	rax, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rax

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 3
	imul	rax, r9

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN11@resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	imul	rbx, rdx, 88				; 00000058H
	xor	edx, edx
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN11@resize:
	mov	QWORD PTR [rdi+8], rsi
$LN5@resize:

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::~vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 88				; 00000058H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::~vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?data@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::data, COMDAT

; 1787 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx]

; 1788 :     }

	ret	0
?data@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN35:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rdi, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]
	mov	r9, 3353953467947191203			; 2e8ba2e8ba2e8ba3H
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3
	imul	rcx, r9

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, rdx, 88				; 00000058H
	add	rax, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rax

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 3
	imul	rax, r9

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN11@resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	imul	rbx, rdx, 88				; 00000058H
	xor	edx, edx
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN11@resize:
	mov	QWORD PTR [rdi+8], rsi
$LN5@resize:

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::~vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 88				; 00000058H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::~vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?data@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::data, COMDAT

; 1787 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx]

; 1788 :     }

	ret	0
?data@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN35:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rdi, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]
	mov	r9, -8198552921648689607		; 8e38e38e38e38e39H
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3
	imul	rcx, r9

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [rdx+rdx*8]
	lea	rcx, QWORD PTR [r8+rax*8]

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rcx

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 3
	imul	rax, r9

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN11@resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	lea	rbx, QWORD PTR [rdx+rdx*8]
	xor	edx, edx
	shl	rbx, 3
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN11@resize:
	mov	QWORD PTR [rdi+8], rsi
$LN5@resize:

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::~vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, -8198552921648689607		; 8e38e38e38e38e39H
	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*8]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::~vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??A?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAAEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAAEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::operator[], COMDAT

; 1883 :         auto& _My_data = _Mypair._Myval2;
; 1884 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1885 :         _STL_VERIFY(
; 1886 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1887 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1888 : 
; 1889 :         return _My_data._Myfirst[_Pos];

	shl	rdx, 5
	add	rdx, QWORD PTR [rcx]
	mov	rax, rdx

; 1890 :     }

	ret	0
??A?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAAEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?size@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::size, COMDAT

; 1868 :         auto& _My_data = _Mypair._Myval2;
; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 5

; 1870 :     }

	ret	0
?size@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rdi, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rbx, rdx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 5

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rbx, 5

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	rdx, r9
	add	rbx, r8
	mov	rcx, rbx
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rbx

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 5

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rbx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1571 :                 return;
; 1572 :             }
; 1573 : 
; 1574 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1575 :             const pointer _Oldlast = _Mylast;
; 1576 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rbx, rcx
	mov	rcx, r9
	mov	rdx, rbx
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
	mov	QWORD PTR [rdi+8], rax
$LN5@resize:

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::~vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdx, QWORD PTR [rbx+8]
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >

; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -32				; ffffffffffffffe0H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::~vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?size@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::size, COMDAT

; 1868 :         auto& _My_data = _Mypair._Myval2;
; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 1870 :     }

	ret	0
?size@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?data@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::data, COMDAT

; 1787 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx]

; 1788 :     }

	ret	0
?data@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN35:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rdi, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [r8+rdx*8]

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rax

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 3

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN11@resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	lea	rbx, QWORD PTR [rdx*8]
	xor	edx, edx
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN11@resize:
	mov	QWORD PTR [rdi+8], rsi
$LN5@resize:

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::~vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::~vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?size@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::size, COMDAT

; 1868 :         auto& _My_data = _Mypair._Myval2;
; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 1870 :     }

	ret	0
?size@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?data@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::data, COMDAT

; 1787 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx]

; 1788 :     }

	ret	0
?data@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN35:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rdi, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [r8+rdx*8]

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rax

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 3

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN11@resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	lea	rbx, QWORD PTR [rdx*8]
	xor	edx, edx
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN11@resize:
	mov	QWORD PTR [rdi+8], rsi
$LN5@resize:

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::~vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::~vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?size@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::size, COMDAT

; 1868 :         auto& _My_data = _Mypair._Myval2;
; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 4

; 1870 :     }

	ret	0
?size@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?data@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::data, COMDAT

; 1787 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx]

; 1788 :     }

	ret	0
?data@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rbx, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]
	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 4

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rdx, 4
	add	rdx, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rbx+8], rdx

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rbx+16]
	sub	rax, r8
	sar	rax, 4

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rbx

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1571 :                 return;
; 1572 :             }
; 1573 : 
; 1574 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1575 :             const pointer _Oldlast = _Mylast;
; 1576 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
	mov	rcx, r9
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
	mov	QWORD PTR [rbx+8], rax
$LN5@resize:

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?resize@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::~vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::~vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?size@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::size, COMDAT

; 1868 :         auto& _My_data = _Mypair._Myval2;
; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	mov	rcx, -3689348814741910323		; cccccccccccccccdH
	sar	rax, 2
	imul	rax, rcx

; 1870 :     }

	ret	0
?size@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?data@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::data, COMDAT

; 1787 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx]

; 1788 :     }

	ret	0
?data@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN35:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rdi, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]
	mov	r9, -3689348814741910323		; cccccccccccccccdH
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 2
	imul	rcx, r9

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [rdx+rdx*4]
	lea	rcx, QWORD PTR [r8+rax*4]

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rcx

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 2
	imul	rax, r9

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN11@resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	lea	rbx, QWORD PTR [rdx+rdx*4]
	xor	edx, edx
	shl	rbx, 2
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN11@resize:
	mov	QWORD PTR [rdi+8], rsi
$LN5@resize:

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::~vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, -3689348814741910323		; cccccccccccccccdH
	sub	rax, rcx
	sar	rax, 2
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 2

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::~vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??A?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAAEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Pos$ = 16
??A?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAAEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::operator[], COMDAT

; 1883 :         auto& _My_data = _Mypair._Myval2;
; 1884 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1885 :         _STL_VERIFY(
; 1886 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1887 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1888 : 
; 1889 :         return _My_data._Myfirst[_Pos];

	shl	rdx, 5
	add	rdx, QWORD PTR [rcx]
	mov	rax, rdx

; 1890 :     }

	ret	0
??A?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAAEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?data@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::data, COMDAT

; 1787 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx]

; 1788 :     }

	ret	0
?data@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rbx, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]
	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 5

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rdx, 5
	add	rdx, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rbx+8], rdx

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rbx+16]
	sub	rax, r8
	sar	rax, 5

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rbx

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1571 :                 return;
; 1572 :             }
; 1573 : 
; 1574 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1575 :             const pointer _Oldlast = _Mylast;
; 1576 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
	mov	rcx, r9
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >
	mov	QWORD PTR [rbx+8], rax
$LN5@resize:

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?resize@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::~vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -32				; ffffffffffffffe0H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::~vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?size@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::size, COMDAT

; 1868 :         auto& _My_data = _Mypair._Myval2;
; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 4

; 1870 :     }

	ret	0
?size@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?data@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::data, COMDAT

; 1787 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx]

; 1788 :     }

	ret	0
?data@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rbx, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]
	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 4

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rdx, 4
	add	rdx, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rbx+8], rdx

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rbx+16]
	sub	rax, r8
	sar	rax, 4

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rbx

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1571 :                 return;
; 1572 :             }
; 1573 : 
; 1574 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1575 :             const pointer _Oldlast = _Mylast;
; 1576 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
	mov	rcx, r9
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
	mov	QWORD PTR [rbx+8], rax
$LN5@resize:

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?resize@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::size, COMDAT

; 1868 :         auto& _My_data = _Mypair._Myval2;
; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 1870 :     }

	ret	0
?size@?$vector@_KV?$allocator@_K@std@@@std@@QEBA_KXZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?data@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ
_TEXT	SEGMENT
this$ = 8
?data@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::data, COMDAT

; 1787 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx]

; 1788 :     }

	ret	0
?data@?$vector@_KV?$allocator@_K@std@@@std@@QEAAPEA_KXZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::resize, COMDAT

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN38:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]

; 1590 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	mov	rdi, rcx

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r8, QWORD PTR [rcx]
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN4@resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [r8+rdx*8]

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	QWORD PTR [rdi+8], rax
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@resize:

; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN5@resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 3

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN6@resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Resize_reallocate<std::_Value_init_tag>
$LN6@resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	rcx, rsi

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

	lea	rbx, QWORD PTR [rdx*8]

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	xor	edx, edx
	mov	r8, rbx
	call	memset

; 2036 :             return _First + _Count;

	lea	rax, QWORD PTR [rbx+rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rbx, QWORD PTR [rsp+64]

; 1591 :         // trim or append value-initialized elements, provide strong guarantee
; 1592 :         _Resize(_Newsize, _Value_init_tag{});
; 1593 :     }

	mov	QWORD PTR [rdi+8], rax
$LN5@resize:
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$vector@_KV?$allocator@_K@std@@@std@@QEAAX_K@Z ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional
;	COMDAT ??0?$_Optional_destruct_base@U?$vec@$01M$0A@@glm@@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Optional_destruct_base@U?$vec@$01M$0A@@glm@@$00@std@@QEAA@XZ PROC ; std::_Optional_destruct_base<glm::vec<2,float,0>,1>::_Optional_destruct_base<glm::vec<2,float,0>,1>, COMDAT

; 78   :     constexpr _Optional_destruct_base() noexcept : _Dummy{}, _Has_value{false} {} // initialize an empty optional

	mov	BYTE PTR [rcx+8], 0
	mov	rax, rcx
	ret	0
??0?$_Optional_destruct_base@U?$vec@$01M$0A@@glm@@$00@std@@QEAA@XZ ENDP ; std::_Optional_destruct_base<glm::vec<2,float,0>,1>::_Optional_destruct_base<glm::vec<2,float,0>,1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdx, QWORD PTR [rbx+8]
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >

; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -128				; ffffffffffffff80H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sub	rax, rcx
	sar	rax, 2
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 44				; 0000002cH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 88				; 00000058H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 88				; 00000058H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, -8198552921648689607		; 8e38e38e38e38e39H
	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*8]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdx, QWORD PTR [rbx+8]
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >

; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -32				; ffffffffffffffe0H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, -3689348814741910323		; cccccccccccccccdH
	sub	rax, rcx
	sar	rax, 2
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 2

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -32				; ffffffffffffffe0H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	shl	r8, 7
	mov	rax, rdx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	r8, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rdx-8]
	add	r8, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, r8
	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, r8, 44				; 0000002cH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, r8, 88				; 00000058H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, r8, 88				; 00000058H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	shl	r8, 5
	mov	rax, rdx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	r8, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rdx-8]
	add	r8, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, r8
	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8*8]

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8*8]

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	shl	r8, 4
	mov	rax, rdx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	r8, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rdx-8]
	add	r8, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, r8
	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8+r8*4]
	shl	rdx, 2

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01M$0A@@glm@@QEAA@M@Z
_TEXT	SEGMENT
this$ = 8
scalar$ = 16
??0?$vec@$01M$0A@@glm@@QEAA@M@Z PROC			; glm::vec<2,float,0>::vec<2,float,0>, COMDAT

; 33   : 		: x(scalar), y(scalar)

	movss	DWORD PTR [rcx], xmm1

; 34   : 	{}

	mov	rax, rcx
	movss	DWORD PTR [rcx+4], xmm1
	ret	0
??0?$vec@$01M$0A@@glm@@QEAA@M@Z ENDP			; glm::vec<2,float,0>::vec<2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl
;	COMDAT ??$scale@M$0A@@glm@@YA?AU?$mat@$03$03M$0A@@0@AEBU10@AEBU?$vec@$02M$0A@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
m$ = 56
v$ = 64
??$scale@M$0A@@glm@@YA?AU?$mat@$03$03M$0A@@0@AEBU10@AEBU?$vec@$02M$0A@@0@@Z PROC ; glm::scale<float,0>, COMDAT

; 79   : 	{

$LN98:
	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 866  : 		return vec<4, T, Q>(v) *= scalar;

	movups	xmm4, XMMWORD PTR [rdx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 85   : 		return Result;

	mov	rax, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 866  : 		return vec<4, T, Q>(v) *= scalar;

	movss	xmm5, DWORD PTR [r8]
	movaps	XMMWORD PTR [rsp+16], xmm6

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm2, xmm5

; 156  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	movaps	xmm6, xmm5

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm3, xmm5

; 156  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mulss	xmm6, xmm4

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm0, xmm4
	shufps	xmm0, xmm4, 85				; 00000055H
	movaps	xmm1, xmm4
	mulss	xmm2, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 81   : 		Result[0] = m[0] * v[0];

	shufps	xmm6, xmm6, 225				; 000000e1H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	shufps	xmm1, xmm4, 170				; 000000aaH
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 81   : 		Result[0] = m[0] * v[0];

	movss	xmm6, xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	mulss	xmm3, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 81   : 		Result[0] = m[0] * v[0];

	shufps	xmm6, xmm6, 198				; 000000c6H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	shufps	xmm4, xmm4, 255				; 000000ffH
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 81   : 		Result[0] = m[0] * v[0];

	movss	xmm6, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	mulss	xmm5, xmm4

; 866  : 		return vec<4, T, Q>(v) *= scalar;

	movups	xmm4, XMMWORD PTR [rdx+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 81   : 		Result[0] = m[0] * v[0];

	shufps	xmm6, xmm6, 39				; 00000027H
	movss	xmm6, xmm5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm0, xmm4

; 866  : 		return vec<4, T, Q>(v) *= scalar;

	movss	xmm5, DWORD PTR [r8+4]

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm1, xmm4
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 81   : 		Result[0] = m[0] * v[0];

	shufps	xmm6, xmm6, 57				; 00000039H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm2, xmm5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 81   : 		Result[0] = m[0] * v[0];

	movups	XMMWORD PTR [rcx], xmm6
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	shufps	xmm0, xmm4, 85				; 00000055H

; 156  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	movaps	xmm6, xmm5
	mulss	xmm6, xmm4

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm3, xmm5
	mulss	xmm2, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 82   : 		Result[1] = m[1] * v[1];

	shufps	xmm6, xmm6, 225				; 000000e1H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	shufps	xmm1, xmm4, 170				; 000000aaH
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 82   : 		Result[1] = m[1] * v[1];

	movss	xmm6, xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	mulss	xmm3, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 82   : 		Result[1] = m[1] * v[1];

	shufps	xmm6, xmm6, 198				; 000000c6H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	shufps	xmm4, xmm4, 255				; 000000ffH
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 82   : 		Result[1] = m[1] * v[1];

	movss	xmm6, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	mulss	xmm5, xmm4

; 866  : 		return vec<4, T, Q>(v) *= scalar;

	movups	xmm4, XMMWORD PTR [rdx+32]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 82   : 		Result[1] = m[1] * v[1];

	shufps	xmm6, xmm6, 39				; 00000027H
	movss	xmm6, xmm5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm0, xmm4

; 866  : 		return vec<4, T, Q>(v) *= scalar;

	movss	xmm5, DWORD PTR [r8+8]

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm1, xmm4
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 82   : 		Result[1] = m[1] * v[1];

	shufps	xmm6, xmm6, 57				; 00000039H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm2, xmm5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 82   : 		Result[1] = m[1] * v[1];

	movups	XMMWORD PTR [rcx+16], xmm6
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 156  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	movaps	xmm6, xmm5

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	shufps	xmm0, xmm4, 85				; 00000055H

; 156  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mulss	xmm6, xmm4

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm3, xmm5
	mulss	xmm2, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 84   : 		Result[3] = m[3];

	movups	xmm0, XMMWORD PTR [rdx+48]
	shufps	xmm6, xmm6, 225				; 000000e1H
	movss	xmm6, xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	shufps	xmm1, xmm4, 170				; 000000aaH
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 83   : 		Result[2] = m[2] * v[2];

	shufps	xmm6, xmm6, 198				; 000000c6H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	mulss	xmm3, xmm1
	shufps	xmm4, xmm4, 255				; 000000ffH
	mulss	xmm5, xmm4
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\ext\matrix_transform.inl

; 83   : 		Result[2] = m[2] * v[2];

	movss	xmm6, xmm3
	shufps	xmm6, xmm6, 39				; 00000027H
	movss	xmm6, xmm5
	shufps	xmm6, xmm6, 57				; 00000039H
	movups	XMMWORD PTR [rcx+32], xmm6

; 86   : 	}

	movaps	xmm6, XMMWORD PTR [rsp+16]
	movups	XMMWORD PTR [rcx+48], xmm0
	add	rsp, 40					; 00000028H
	ret	0
??$scale@M$0A@@glm@@YA?AU?$mat@$03$03M$0A@@0@AEBU10@AEBU?$vec@$02M$0A@@0@@Z ENDP ; glm::scale<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$vec@$03M$0A@@0@AEBU?$mat@$03$03M$0A@@0@AEBU10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 112
m$ = 120
v$ = 128
??$?DM$0A@@glm@@YA?AU?$vec@$03M$0A@@0@AEBU?$mat@$03$03M$0A@@0@AEBU10@@Z PROC ; glm::operator*<float,0>, COMDAT

; 541  : 	{

$LN192:
	sub	rsp, 104				; 00000068H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 890  : 		return vec<4, T, Q>(v1) *= v2;

	movups	xmm5, XMMWORD PTR [rdx+32]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl

; 572  : 		return Add2;

	mov	rax, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 890  : 		return vec<4, T, Q>(v1) *= v2;

	movups	xmm2, XMMWORD PTR [rdx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl

; 561  : 		typename mat<4, 4, T, Q>::col_type const Mov0(v[0]);

	movss	xmm3, DWORD PTR [r8]

; 562  : 		typename mat<4, 4, T, Q>::col_type const Mov1(v[1]);

	movss	xmm1, DWORD PTR [r8+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movaps	xmm0, xmm2
	movaps	XMMWORD PTR [rsp+80], xmm6

; 890  : 		return vec<4, T, Q>(v1) *= v2;

	movups	xmm6, XMMWORD PTR [rdx+48]
	movaps	XMMWORD PTR [rsp+64], xmm7

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulss	xmm0, xmm3
	movaps	xmm4, xmm6
	movaps	XMMWORD PTR [rsp+48], xmm8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl

; 566  : 		typename mat<4, 4, T, Q>::col_type const Mov2(v[2]);

	movss	xmm8, DWORD PTR [r8+8]
	movaps	XMMWORD PTR [rsp+32], xmm9
	movaps	XMMWORD PTR [rsp+16], xmm10
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 890  : 		return vec<4, T, Q>(v1) *= v2;

	movups	xmm10, XMMWORD PTR [rdx+16]
	movaps	XMMWORD PTR [rsp], xmm11

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	shufps	xmm4, xmm6, 85				; 00000055H
	movaps	xmm11, xmm10
	mulss	xmm11, xmm1
	movaps	xmm7, xmm10
	shufps	xmm7, xmm10, 85				; 00000055H
	movaps	xmm9, xmm10
	mulss	xmm7, xmm1

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm11, xmm0

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	shufps	xmm9, xmm10, 170			; 000000aaH
	movaps	xmm0, xmm2
	mulss	xmm9, xmm1
	shufps	xmm0, xmm2, 85				; 00000055H
	mulss	xmm0, xmm3
	shufps	xmm10, xmm10, 255			; 000000ffH
	mulss	xmm10, xmm1
	movaps	xmm1, xmm6

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm7, xmm0

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	shufps	xmm1, xmm6, 255				; 000000ffH
	movaps	xmm0, xmm2
	shufps	xmm0, xmm2, 170				; 000000aaH
	mulss	xmm0, xmm3
	shufps	xmm2, xmm2, 255				; 000000ffH
	mulss	xmm2, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl

; 567  : 		typename mat<4, 4, T, Q>::col_type const Mov3(v[3]);

	movss	xmm3, DWORD PTR [r8+12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm9, xmm0

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movaps	xmm0, xmm5
	mulss	xmm4, xmm3
	shufps	xmm0, xmm5, 85				; 00000055H

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm10, xmm2

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulss	xmm0, xmm8
	movaps	xmm2, xmm6
	shufps	xmm2, xmm6, 170				; 000000aaH
	mulss	xmm6, xmm3

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm4, xmm0

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulss	xmm2, xmm3
	movaps	xmm0, xmm5
	mulss	xmm1, xmm3
	shufps	xmm0, xmm5, 170				; 000000aaH
	mulss	xmm0, xmm8

; 13   : 			return vec<4, T, Q>(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);

	addss	xmm4, xmm7

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm2, xmm0

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movaps	xmm0, xmm5
	shufps	xmm0, xmm5, 255				; 000000ffH
	mulss	xmm5, xmm8
	mulss	xmm0, xmm8

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm6, xmm5

; 13   : 			return vec<4, T, Q>(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);

	addss	xmm2, xmm9

; 161  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm1, xmm0
	addss	xmm6, xmm11

; 13   : 			return vec<4, T, Q>(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w);

	addss	xmm1, xmm10

; 830  : 		return vec<4, T, Q>(v1) += v2;

	movss	DWORD PTR [rcx], xmm6
	movss	DWORD PTR [rcx+4], xmm4
	movss	DWORD PTR [rcx+8], xmm2
	movss	DWORD PTR [rcx+12], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_mat4x4.inl

; 581  : 	}

	movaps	xmm6, XMMWORD PTR [rsp+80]
	movaps	xmm7, XMMWORD PTR [rsp+64]
	movaps	xmm8, XMMWORD PTR [rsp+48]
	movaps	xmm9, XMMWORD PTR [rsp+32]
	movaps	xmm10, XMMWORD PTR [rsp+16]
	movaps	xmm11, XMMWORD PTR [rsp]
	add	rsp, 104				; 00000068H
	ret	0
??$?DM$0A@@glm@@YA?AU?$vec@$03M$0A@@0@AEBU?$mat@$03$03M$0A@@0@AEBU10@@Z ENDP ; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional
;	COMDAT ??$?0U?$vec@$01M$0A@@glm@@$0A@@?$optional@U?$vec@$01M$0A@@glm@@@std@@QEAA@$$QEAU?$vec@$01M$0A@@glm@@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??$?0U?$vec@$01M$0A@@glm@@$0A@@?$optional@U?$vec@$01M$0A@@glm@@@std@@QEAA@$$QEAU?$vec@$01M$0A@@glm@@@Z PROC ; std::optional<glm::vec<2,float,0> >::optional<glm::vec<2,float,0> ><glm::vec<2,float,0>,0>, COMDAT

; 83   :         : _Value(_STD forward<_Types>(_Args)...), _Has_value{true} {} // initialize contained value with _Args...

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax

; 249  :         : _Mybase(in_place, _STD forward<_Ty2>(_Right)) {}

	mov	rax, rcx

; 83   :         : _Value(_STD forward<_Types>(_Args)...), _Has_value{true} {} // initialize contained value with _Args...

	mov	BYTE PTR [rcx+8], 1

; 249  :         : _Mybase(in_place, _STD forward<_Ty2>(_Right)) {}

	ret	0
??$?0U?$vec@$01M$0A@@glm@@$0A@@?$optional@U?$vec@$01M$0A@@glm@@@std@@QEAA@$$QEAU?$vec@$01M$0A@@glm@@@Z ENDP ; std::optional<glm::vec<2,float,0> >::optional<glm::vec<2,float,0> ><glm::vec<2,float,0>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@_K@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@_K@std@@@std@@@0@0AEBH@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Val$ = 24
??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@_K@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@_K@std@@@std@@@0@0AEBH@Z PROC ; std::fill<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned __int64> > >,int>, COMDAT

; 5027 :         return _CSTD memcmp(&_Val, &_Zero, sizeof(_Ty)) == 0;

	cmp	DWORD PTR [r8], 0
	jne	SHORT $LN6@fill

; 5033 :     // copy _Val through [_First, _Last)
; 5034 :     _Adl_verify_range(_First, _Last);
; 5035 :     if constexpr (_Is_vb_iterator<_FwdIt, true>) {
; 5036 :         _Fill_vbool(_First, _Last, _Val);
; 5037 :     } else {
; 5038 :         auto _UFirst      = _Get_unwrapped(_First);
; 5039 :         const auto _ULast = _Get_unwrapped(_Last);
; 5040 : #if _HAS_CXX20
; 5041 :         if (!_STD is_constant_evaluated())
; 5042 : #endif // _HAS_CXX20
; 5043 :         {
; 5044 :             if constexpr (_Fill_memset_is_safe<decltype(_UFirst), _Ty>) {
; 5045 :                 _Fill_memset(_UFirst, _Val, static_cast<size_t>(_ULast - _UFirst));
; 5046 :                 return;
; 5047 :             } else if constexpr (_Fill_zero_memset_is_safe<decltype(_UFirst), _Ty>) {
; 5048 :                 if (_Is_all_bits_zero(_Val)) {
; 5049 :                     _Fill_zero_memset(_UFirst, static_cast<size_t>(_ULast - _UFirst));

	sub	rdx, rcx

; 5016 :     _CSTD memset(_To_address(_Dest), 0, _Count * sizeof(_Iter_value_t<_CtgIt>));

	and	rdx, -8
	mov	r8, rdx
	xor	edx, edx
	jmp	memset
$LN6@fill:

; 5050 :                     return;
; 5051 :                 }
; 5052 :             }
; 5053 :         }
; 5054 : 
; 5055 :         for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rcx, rdx
	je	SHORT $LN3@fill
	npad	4
$LL4@fill:

; 5056 :             *_UFirst = _Val;

	movsxd	rax, DWORD PTR [r8]
	mov	QWORD PTR [rcx], rax
	add	rcx, 8
	cmp	rcx, rdx
	jne	SHORT $LL4@fill
$LN3@fill:

; 5057 :         }
; 5058 :     }
; 5059 : }

	ret	0
??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@_K@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@_K@std@@@std@@@0@0AEBH@Z ENDP ; std::fill<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned __int64> > >,int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Val$ = 64
??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z PROC ; std::fill<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >,int>, COMDAT

; 5032 : _CONSTEXPR20 void fill(const _FwdIt _First, const _FwdIt _Last, const _Ty& _Val) {

$LN28:
	sub	rsp, 40					; 00000028H
	mov	r9, rcx

; 5027 :         return _CSTD memcmp(&_Val, &_Zero, sizeof(_Ty)) == 0;

	mov	rax, rdx
	sub	rax, r9
	xor	ecx, ecx

; 5032 : _CONSTEXPR20 void fill(const _FwdIt _First, const _FwdIt _Last, const _Ty& _Val) {

	mov	r10, r8

; 5027 :         return _CSTD memcmp(&_Val, &_Zero, sizeof(_Ty)) == 0;

	cmp	DWORD PTR [r8], ecx
	jne	SHORT $LN6@fill

; 5033 :     // copy _Val through [_First, _Last)
; 5034 :     _Adl_verify_range(_First, _Last);
; 5035 :     if constexpr (_Is_vb_iterator<_FwdIt, true>) {
; 5036 :         _Fill_vbool(_First, _Last, _Val);
; 5037 :     } else {
; 5038 :         auto _UFirst      = _Get_unwrapped(_First);
; 5039 :         const auto _ULast = _Get_unwrapped(_Last);
; 5040 : #if _HAS_CXX20
; 5041 :         if (!_STD is_constant_evaluated())
; 5042 : #endif // _HAS_CXX20
; 5043 :         {
; 5044 :             if constexpr (_Fill_memset_is_safe<decltype(_UFirst), _Ty>) {
; 5045 :                 _Fill_memset(_UFirst, _Val, static_cast<size_t>(_ULast - _UFirst));
; 5046 :                 return;
; 5047 :             } else if constexpr (_Fill_zero_memset_is_safe<decltype(_UFirst), _Ty>) {
; 5048 :                 if (_Is_all_bits_zero(_Val)) {
; 5049 :                     _Fill_zero_memset(_UFirst, static_cast<size_t>(_ULast - _UFirst));

	sar	rax, 1

; 5016 :     _CSTD memset(_To_address(_Dest), 0, _Count * sizeof(_Iter_value_t<_CtgIt>));

	xor	edx, edx
	mov	rcx, r9
	lea	r8, QWORD PTR [rax+rax]

; 5057 :         }
; 5058 :     }
; 5059 : }

	add	rsp, 40					; 00000028H

; 5016 :     _CSTD memset(_To_address(_Dest), 0, _Count * sizeof(_Iter_value_t<_CtgIt>));

	jmp	memset
$LN6@fill:

; 5050 :                     return;
; 5051 :                 }
; 5052 :             }
; 5053 :         }
; 5054 : 
; 5055 :         for (; _UFirst != _ULast; ++_UFirst) {

	lea	r8, QWORD PTR [rax+1]
	shr	r8, 1
	cmp	r9, rdx
	cmova	r8, rcx
	test	r8, r8
	je	SHORT $LN15@fill
	cmp	r8, 8
	jb	SHORT $LN15@fill
	mov	QWORD PTR [rsp+32], rdi
	lea	rax, QWORD PTR [r9-2]

; 5056 :             *_UFirst = _Val;

	movzx	edi, WORD PTR [r10]
	lea	rax, QWORD PTR [rax+r8*2]
	cmp	r9, r10
	ja	SHORT $LN16@fill

; 5050 :                     return;
; 5051 :                 }
; 5052 :             }
; 5053 :         }
; 5054 : 
; 5055 :         for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rax, r10
	jae	SHORT $LN26@fill
$LN16@fill:
	and	r8, -8
	mov	rax, rdi
	add	r8, r8
	mov	rdi, r9
	mov	rcx, r8
	shr	rcx, 1
	rep stosw
	add	r9, r8
$LN26@fill:
	mov	rdi, QWORD PTR [rsp+32]
$LN15@fill:
	cmp	r9, rdx
	je	SHORT $LN3@fill
	npad	13
$LL14@fill:

; 5056 :             *_UFirst = _Val;

	movzx	eax, WORD PTR [r10]
	mov	WORD PTR [r9], ax
	add	r9, 2
	cmp	r9, rdx
	jne	SHORT $LL14@fill
$LN3@fill:

; 5057 :         }
; 5058 :     }
; 5059 : }

	add	rsp, 40					; 00000028H
	ret	0
??$fill@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@0@0AEBH@Z ENDP ; std::fill<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >,int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_one_at_back@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAAEAU?$vec@$02M$0A@@glm@@$$QEAU23@@Z
_TEXT	SEGMENT
this$ = 8
<_Val_0>$ = 16
??$_Emplace_one_at_back@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAAEAU?$vec@$02M$0A@@glm@@$$QEAU23@@Z PROC ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Emplace_one_at_back<glm::vec<3,float,0> >, COMDAT

; 776  :     _CONSTEXPR20 _Ty& _Emplace_one_at_back(_Valty&&... _Val) {

	mov	r8, rdx
	mov	r9, rcx

; 777  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 778  :         auto& _My_data   = _Mypair._Myval2;
; 779  :         pointer& _Mylast = _My_data._Mylast;
; 780  : 
; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rdx, QWORD PTR [rcx+8]
	cmp	rdx, QWORD PTR [rcx+16]
	je	SHORT $LN2@Emplace_on
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	movsd	xmm0, QWORD PTR [r8]
	movsd	QWORD PTR [rdx], xmm0
	mov	eax, DWORD PTR [r8+8]
	mov	DWORD PTR [rdx+8], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 805  :         _Ty& _Result = *_Mylast;

	mov	rax, QWORD PTR [rcx+8]

; 806  :         ++_Mylast;

	lea	rcx, QWORD PTR [rax+12]
	mov	QWORD PTR [r9+8], rcx

; 786  :     }

	ret	0
$LN2@Emplace_on:

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);
; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	jmp	??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Emplace_reallocate<glm::vec<3,float,0> >
??$_Emplace_one_at_back@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAAEAU?$vec@$02M$0A@@glm@@$$QEAU23@@Z ENDP ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Emplace_one_at_back<glm::vec<3,float,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN10:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [rcx+8]
	mov	rdi, rcx
	mov	r8, QWORD PTR [rcx]
	mov	rbx, rdx
	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 7

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rbx, 7

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	rdx, r9
	add	rbx, r8
	mov	rcx, rbx
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rbx

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Resize:

; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 7

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rbx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1571 :                 return;
; 1572 :             }
; 1573 : 
; 1574 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1575 :             const pointer _Oldlast = _Mylast;
; 1576 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rbx, rcx
	mov	rcx, r9
	mov	rdx, rbx
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
	mov	QWORD PTR [rdi+8], rax
$LN3@Resize:

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Unfancy_maybe_null@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy_maybe_null@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>, COMDAT

; 434  :     return _Ptr;

	mov	rax, rcx

; 435  : }

	ret	0
??$_Unfancy_maybe_null@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN33:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]
	mov	rdi, rcx
	mov	r8, QWORD PTR [rcx]
	mov	r9, 3353953467947191203			; 2e8ba2e8ba2e8ba3H
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 2
	imul	rcx, r9

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, rdx, 44				; 0000002cH
	add	rax, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rax

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Resize:

; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 2
	imul	rax, r9

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN9@Resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	imul	rbx, rdx, 44				; 0000002cH
	xor	edx, edx
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN9@Resize:
	mov	QWORD PTR [rdi+8], rsi
$LN3@Resize:

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Unfancy_maybe_null@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy_maybe_null@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundWaterFall>, COMDAT

; 434  :     return _Ptr;

	mov	rax, rcx

; 435  : }

	ret	0
??$_Unfancy_maybe_null@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN33:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]
	mov	rdi, rcx
	mov	r8, QWORD PTR [rcx]
	mov	r9, 3353953467947191203			; 2e8ba2e8ba2e8ba3H
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3
	imul	rcx, r9

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, rdx, 88				; 00000058H
	add	rax, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rax

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Resize:

; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 3
	imul	rax, r9

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN9@Resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	imul	rbx, rdx, 88				; 00000058H
	xor	edx, edx
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN9@Resize:
	mov	QWORD PTR [rdi+8], rsi
$LN3@Resize:

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Unfancy_maybe_null@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy_maybe_null@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>, COMDAT

; 434  :     return _Ptr;

	mov	rax, rcx

; 435  : }

	ret	0
??$_Unfancy_maybe_null@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN33:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]
	mov	rdi, rcx
	mov	r8, QWORD PTR [rcx]
	mov	r9, 3353953467947191203			; 2e8ba2e8ba2e8ba3H
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3
	imul	rcx, r9

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	imul	rax, rdx, 88				; 00000058H
	add	rax, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rax

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Resize:

; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 3
	imul	rax, r9

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN9@Resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	imul	rbx, rdx, 88				; 00000058H
	xor	edx, edx
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN9@Resize:
	mov	QWORD PTR [rdi+8], rsi
$LN3@Resize:

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Unfancy_maybe_null@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy_maybe_null@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundWaterBox>, COMDAT

; 434  :     return _Ptr;

	mov	rax, rcx

; 435  : }

	ret	0
??$_Unfancy_maybe_null@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundWaterBox>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN33:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]
	mov	rdi, rcx
	mov	r8, QWORD PTR [rcx]
	mov	r9, -8198552921648689607		; 8e38e38e38e38e39H
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3
	imul	rcx, r9

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [rdx+rdx*8]
	lea	rcx, QWORD PTR [r8+rax*8]

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rcx

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Resize:

; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 3
	imul	rax, r9

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN9@Resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	lea	rbx, QWORD PTR [rdx+rdx*8]
	xor	edx, edx
	shl	rbx, 3
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN9@Resize:
	mov	QWORD PTR [rdi+8], rsi
$LN3@Resize:

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN10:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [rcx+8]
	mov	rdi, rcx
	mov	r8, QWORD PTR [rcx]
	mov	rbx, rdx
	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 5

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rbx, 5

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	rdx, r9
	add	rbx, r8
	mov	rcx, rbx
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >

; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rbx

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Resize:

; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 5

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rbx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1571 :                 return;
; 1572 :             }
; 1573 : 
; 1574 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1575 :             const pointer _Oldlast = _Mylast;
; 1576 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rbx, rcx
	mov	rcx, r9
	mov	rdx, rbx
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
	mov	QWORD PTR [rdi+8], rax
$LN3@Resize:

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Unfancy_maybe_null@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy_maybe_null@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>, COMDAT

; 434  :     return _Ptr;

	mov	rax, rcx

; 435  : }

	ret	0
??$_Unfancy_maybe_null@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN33:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]
	mov	rdi, rcx
	mov	r8, QWORD PTR [rcx]
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [r8+rdx*8]

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rax

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Resize:

; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 3

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN9@Resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	lea	rbx, QWORD PTR [rdx*8]
	xor	edx, edx
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN9@Resize:
	mov	QWORD PTR [rdi+8], rsi
$LN3@Resize:

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Unfancy_maybe_null@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy_maybe_null@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>, COMDAT

; 434  :     return _Ptr;

	mov	rax, rcx

; 435  : }

	ret	0
??$_Unfancy_maybe_null@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN33:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]
	mov	rdi, rcx
	mov	r8, QWORD PTR [rcx]
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [r8+rdx*8]

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rax

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Resize:

; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 3

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN9@Resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	lea	rbx, QWORD PTR [rdx*8]
	xor	edx, edx
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN9@Resize:
	mov	QWORD PTR [rdi+8], rsi
$LN3@Resize:

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Unfancy_maybe_null@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy_maybe_null@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>, COMDAT

; 434  :     return _Ptr;

	mov	rax, rcx

; 435  : }

	ret	0
??$_Unfancy_maybe_null@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [rcx+8]
	mov	rbx, rcx
	mov	r8, QWORD PTR [rcx]
	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 4

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rdx, 4
	add	rdx, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rbx+8], rdx

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN2@Resize:

; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rbx+16]
	sub	rax, r8
	sar	rax, 4

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rbx

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1571 :                 return;
; 1572 :             }
; 1573 : 
; 1574 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1575 :             const pointer _Oldlast = _Mylast;
; 1576 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
	mov	rcx, r9
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
	mov	QWORD PTR [rbx+8], rax
$LN3@Resize:

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Unfancy_maybe_null@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy_maybe_null@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>, COMDAT

; 434  :     return _Ptr;

	mov	rax, rcx

; 435  : }

	ret	0
??$_Unfancy_maybe_null@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN33:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]
	mov	rdi, rcx
	mov	r8, QWORD PTR [rcx]
	mov	r9, -3689348814741910323		; cccccccccccccccdH
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 2
	imul	rcx, r9

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [rdx+rdx*4]
	lea	rcx, QWORD PTR [r8+rax*4]

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rdi+8], rcx

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Resize:

; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 2
	imul	rax, r9

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN9@Resize
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rcx, rsi
	lea	rbx, QWORD PTR [rdx+rdx*4]
	xor	edx, edx
	shl	rbx, 2
	mov	r8, rbx
	call	memset
	add	rsi, rbx
	mov	rbx, QWORD PTR [rsp+64]
$LN9@Resize:
	mov	QWORD PTR [rdi+8], rsi
$LN3@Resize:

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Unfancy_maybe_null@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy_maybe_null@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundActorLink>, COMDAT

; 434  :     return _Ptr;

	mov	rax, rcx

; 435  : }

	ret	0
??$_Unfancy_maybe_null@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundActorLink>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [rcx+8]
	mov	rbx, rcx
	mov	r8, QWORD PTR [rcx]
	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 5

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rdx, 5
	add	rdx, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rbx+8], rdx

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN2@Resize:

; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rbx+16]
	sub	rax, r8
	sar	rax, 5

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rbx

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1571 :                 return;
; 1572 :             }
; 1573 : 
; 1574 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1575 :             const pointer _Oldlast = _Mylast;
; 1576 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
	mov	rcx, r9
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >
	mov	QWORD PTR [rbx+8], rax
$LN3@Resize:

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundActorLink> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundActorLink> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundActorLink> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundActorLink> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Unfancy_maybe_null@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy_maybe_null@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>, COMDAT

; 434  :     return _Ptr;

	mov	rax, rcx

; 435  : }

	ret	0
??$_Unfancy_maybe_null@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy_maybe_null<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR [rcx+8]
	mov	rbx, rcx
	mov	r8, QWORD PTR [rcx]
	mov	rcx, r9
	sub	rcx, r8
	sar	rcx, 4

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	shl	rdx, 4
	add	rdx, r8

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;

	mov	QWORD PTR [rbx+8], rdx

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN2@Resize:

; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rbx+16]
	sub	rax, r8
	sar	rax, 4

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rbx

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1571 :                 return;
; 1572 :             }
; 1573 : 
; 1574 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1575 :             const pointer _Oldlast = _Mylast;
; 1576 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1577 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1578 :             } else {
; 1579 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
	mov	rcx, r9
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
	mov	QWORD PTR [rbx+8], rax
$LN3@Resize:

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Unfancy_maybe_null@_K@std@@YAPEA_KPEA_K@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy_maybe_null@_K@std@@YAPEA_KPEA_K@Z PROC	; std::_Unfancy_maybe_null<unsigned __int64>, COMDAT

; 434  :     return _Ptr;

	mov	rax, rcx

; 435  : }

	ret	0
??$_Unfancy_maybe_null@_K@std@@YAPEA_KPEA_K@Z ENDP	; std::_Unfancy_maybe_null<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
_Val$dead$ = 64
??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Resize<std::_Value_init_tag>, COMDAT

; 1551 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

$LN36:
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1552 :         // trim or append elements, provide strong guarantee
; 1553 :         auto& _Al           = _Getal();
; 1554 :         auto& _My_data      = _Mypair._Myval2;
; 1555 :         pointer& _Myfirst   = _My_data._Myfirst;
; 1556 :         pointer& _Mylast    = _My_data._Mylast;
; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rsi, QWORD PTR [rcx+8]
	mov	rdi, rcx
	mov	r8, QWORD PTR [rcx]
	mov	rcx, rsi
	sub	rcx, r8
	sar	rcx, 3

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rdx, rcx
	jae	SHORT $LN2@Resize

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	lea	rax, QWORD PTR [r8+rdx*8]

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	QWORD PTR [rdi+8], rax
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Resize:

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;
; 1564 :             return;
; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN3@Resize

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, r8
	sar	rax, 3

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	rdx, rax
	jbe	SHORT $LN4@Resize

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rcx, rdi

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	jmp	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Resize_reallocate<std::_Value_init_tag>
$LN4@Resize:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	rdx, rcx
	mov	QWORD PTR [rsp+64], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	rcx, rsi

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

	lea	rbx, QWORD PTR [rdx*8]

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	xor	edx, edx
	mov	r8, rbx
	call	memset

; 2036 :             return _First + _Count;

	lea	rax, QWORD PTR [rbx+rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	rbx, QWORD PTR [rsp+64]

; 1581 :             }
; 1582 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1583 :             _Orphan_range(_Oldlast, _Oldlast);
; 1584 :         }
; 1585 : 
; 1586 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1587 :     }

	mov	QWORD PTR [rdi+8], rax
$LN3@Resize:
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Resize@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z PROC ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN124:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	$LN121@Destroy_ra
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rsp+56], rbx
	mov	rdi, rdx
	mov	QWORD PTR [rsp+64], rsi
	lea	rbx, QWORD PTR [rcx+120]
	xor	esi, esi
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx-16]
	test	rcx, rcx
	je	SHORT $LN19@Destroy_ra

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN37@Destroy_ra

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	$LN90@Destroy_ra

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN37@Destroy_ra:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx-16], rsi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx-8], rsi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx], rsi
$LN19@Destroy_ra:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx-40]
	test	rcx, rcx
	je	SHORT $LN46@Destroy_ra

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx-24]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN64@Destroy_ra

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN90@Destroy_ra

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN64@Destroy_ra:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx-40], rsi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx-32], rsi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx-24], rsi
$LN46@Destroy_ra:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx-64]
	test	rcx, rcx
	je	SHORT $LN75@Destroy_ra

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx-48]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN93@Destroy_ra

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN90@Destroy_ra

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN93@Destroy_ra:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx-64], rsi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx-56], rsi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx-48], rsi
$LN75@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	sub	rbx, -128				; ffffffffffffff80H
	lea	rax, QWORD PTR [rbx-120]
	cmp	rax, rdi
	jne	$LL4@Destroy_ra
	mov	rbx, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	add	rsp, 32					; 00000020H
	pop	rdi
$LN121@Destroy_ra:
	ret	0
$LN90@Destroy_ra:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN120@Destroy_ra:
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z PROC ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >, COMDAT

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {
; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	ret	0
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z PROC ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >, COMDAT

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {
; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	ret	0
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z PROC ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >, COMDAT

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {
; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	ret	0
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z PROC ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN62:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN59@Destroy_ra
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rsp+56], rbx
	mov	rdi, rdx
	mov	QWORD PTR [rsp+64], rsi
	lea	rbx, QWORD PTR [rcx+24]
	xor	esi, esi
	npad	3
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx-16]
	test	rcx, rcx
	je	SHORT $LN19@Destroy_ra

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN37@Destroy_ra

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN34@Destroy_ra

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN37@Destroy_ra:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx-16], rsi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx-8], rsi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx], rsi
$LN19@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 32					; 00000020H
	lea	rax, QWORD PTR [rbx-24]
	cmp	rax, rdi
	jne	SHORT $LL4@Destroy_ra
	mov	rbx, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	add	rsp, 32					; 00000020H
	pop	rdi
$LN59@Destroy_ra:
	ret	0
$LN34@Destroy_ra:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN58@Destroy_ra:
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z PROC ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >, COMDAT

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {
; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	ret	0
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z PROC ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >, COMDAT

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {
; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	ret	0
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z PROC ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >, COMDAT

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {
; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	ret	0
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z PROC ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >, COMDAT

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {
; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	ret	0
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Orphan_range@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@0@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Orphan_range, COMDAT

; 2177 :     _CONSTEXPR20 void _Orphan_range(pointer, pointer) const {}

	ret	0
?_Orphan_range@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@0@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAA@XZ PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAA@XZ ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Orphan_range@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@0@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Orphan_range, COMDAT

; 2177 :     _CONSTEXPR20 void _Orphan_range(pointer, pointer) const {}

	ret	0
?_Orphan_range@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@0@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAA@XZ PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAA@XZ ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Orphan_range@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@0@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Orphan_range, COMDAT

; 2177 :     _CONSTEXPR20 void _Orphan_range(pointer, pointer) const {}

	ret	0
?_Orphan_range@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@0@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAA@XZ PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAA@XZ ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Orphan_range@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@0@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Orphan_range, COMDAT

; 2177 :     _CONSTEXPR20 void _Orphan_range(pointer, pointer) const {}

	ret	0
?_Orphan_range@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@0@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAA@XZ PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAA@XZ ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@QEAA@XZ PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@QEAA@XZ ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Orphan_range@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@0@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Orphan_range, COMDAT

; 2177 :     _CONSTEXPR20 void _Orphan_range(pointer, pointer) const {}

	ret	0
?_Orphan_range@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@0@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAA@XZ PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAA@XZ ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Orphan_range@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@0@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Orphan_range, COMDAT

; 2177 :     _CONSTEXPR20 void _Orphan_range(pointer, pointer) const {}

	ret	0
?_Orphan_range@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@0@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAA@XZ PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAA@XZ ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Orphan_range@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@0@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Orphan_range, COMDAT

; 2177 :     _CONSTEXPR20 void _Orphan_range(pointer, pointer) const {}

	ret	0
?_Orphan_range@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@0@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAA@XZ PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAA@XZ ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Orphan_range@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@0@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Orphan_range, COMDAT

; 2177 :     _CONSTEXPR20 void _Orphan_range(pointer, pointer) const {}

	ret	0
?_Orphan_range@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@0@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAA@XZ PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAA@XZ ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Orphan_range@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@0@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Orphan_range, COMDAT

; 2177 :     _CONSTEXPR20 void _Orphan_range(pointer, pointer) const {}

	ret	0
?_Orphan_range@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@0@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAA@XZ PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAA@XZ ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundActorLink> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundActorLink> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@QEAA@XZ PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@QEAA@XZ ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Orphan_range@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@0@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Orphan_range, COMDAT

; 2177 :     _CONSTEXPR20 void _Orphan_range(pointer, pointer) const {}

	ret	0
?_Orphan_range@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEBAXPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@0@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$vec@$03M$0A@@0@AEBU10@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
v1$ = 16
v2$ = 24
??$?DM$0A@@glm@@YA?AU?$vec@$03M$0A@@0@AEBU10@0@Z PROC	; glm::operator*<float,0>, COMDAT

; 890  : 		return vec<4, T, Q>(v1) *= v2;

	movups	xmm5, XMMWORD PTR [rdx]
	mov	rax, rcx

; 597  : 		return (*this = detail::compute_vec4_mul<T, Q, detail::is_aligned<Q>::value>::call(*this, vec<4, T, Q>(v)));

	movups	xmm3, XMMWORD PTR [r8]

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movaps	xmm4, xmm5
	movaps	xmm2, xmm5
	shufps	xmm4, xmm5, 85				; 00000055H
	movaps	xmm0, xmm3
	shufps	xmm0, xmm3, 85				; 00000055H
	movaps	xmm1, xmm3
	mulss	xmm4, xmm0
	movaps	xmm0, xmm3
	shufps	xmm0, xmm3, 170				; 000000aaH
	shufps	xmm2, xmm5, 170				; 000000aaH
	mulss	xmm2, xmm0
	movaps	xmm0, xmm5
	shufps	xmm0, xmm5, 255				; 000000ffH
	mulss	xmm5, xmm3
	shufps	xmm1, xmm3, 255				; 000000ffH
	mulss	xmm1, xmm0

; 890  : 		return vec<4, T, Q>(v1) *= v2;

	movss	DWORD PTR [rcx], xmm5
	movss	DWORD PTR [rcx+4], xmm4
	movss	DWORD PTR [rcx+8], xmm2
	movss	DWORD PTR [rcx+12], xmm1

; 891  : 	}

	ret	0
??$?DM$0A@@glm@@YA?AU?$vec@$03M$0A@@0@AEBU10@0@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@U?$vec@$01M$0A@@glm@@@std@@YA$$QEAU?$vec@$01M$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$vec@$01M$0A@@glm@@@std@@YA$$QEAU?$vec@$01M$0A@@glm@@AEAU12@@Z PROC ; std::forward<glm::vec<2,float,0> >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@U?$vec@$01M$0A@@glm@@@std@@YA$$QEAU?$vec@$01M$0A@@glm@@AEAU12@@Z ENDP ; std::forward<glm::vec<2,float,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp
;	COMDAT ??$?0U?$vec@$01M$0A@@glm@@@?$_Optional_construct_base@U?$vec@$01M$0A@@glm@@@std@@QEAA@Uin_place_t@1@$$QEAU?$vec@$01M$0A@@glm@@@Z
_TEXT	SEGMENT
this$ = 8
__param0$dead$ = 16
__param1$ = 24
??$?0U?$vec@$01M$0A@@glm@@@?$_Optional_construct_base@U?$vec@$01M$0A@@glm@@@std@@QEAA@Uin_place_t@1@$$QEAU?$vec@$01M$0A@@glm@@@Z PROC ; std::_Optional_construct_base<glm::vec<2,float,0> >::_Optional_construct_base<glm::vec<2,float,0> ><glm::vec<2,float,0> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional

; 83   :         : _Value(_STD forward<_Types>(_Args)...), _Has_value{true} {} // initialize contained value with _Args...

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional

; 83   :         : _Value(_STD forward<_Types>(_Args)...), _Has_value{true} {} // initialize contained value with _Args...

	mov	BYTE PTR [rcx+8], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PhiveStaticCompound.cpp

	ret	0
??$?0U?$vec@$01M$0A@@glm@@@?$_Optional_construct_base@U?$vec@$01M$0A@@glm@@@std@@QEAA@Uin_place_t@1@$$QEAU?$vec@$01M$0A@@glm@@@Z ENDP ; std::_Optional_construct_base<glm::vec<2,float,0> >::_Optional_construct_base<glm::vec<2,float,0> ><glm::vec<2,float,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Fill_zero_memset@PEAG@std@@YAXPEAG_K@Z
_TEXT	SEGMENT
_Dest$ = 8
_Count$ = 16
??$_Fill_zero_memset@PEAG@std@@YAXPEAG_K@Z PROC		; std::_Fill_zero_memset<unsigned short *>, COMDAT

; 5016 :     _CSTD memset(_To_address(_Dest), 0, _Count * sizeof(_Iter_value_t<_CtgIt>));

	lea	r8, QWORD PTR [rdx+rdx]
	xor	edx, edx
	jmp	memset
??$_Fill_zero_memset@PEAG@std@@YAXPEAG_K@Z ENDP		; std::_Fill_zero_memset<unsigned short *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAAEAU?$vec@$02M$0A@@glm@@$$QEAU23@@Z
_TEXT	SEGMENT
this$ = 8
<_Val_0>$ = 16
??$_Emplace_back_with_unused_capacity@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAAEAU?$vec@$02M$0A@@glm@@$$QEAU23@@Z PROC ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Emplace_back_with_unused_capacity<glm::vec<3,float,0> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	movsd	xmm0, QWORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 797  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

	mov	r8, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	movsd	QWORD PTR [r8], xmm0
	mov	eax, DWORD PTR [rdx+8]
	mov	DWORD PTR [r8+8], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 805  :         _Ty& _Result = *_Mylast;

	mov	rax, QWORD PTR [rcx+8]

; 806  :         ++_Mylast;

	lea	rdx, QWORD PTR [rax+12]
	mov	QWORD PTR [rcx+8], rdx

; 807  : 
; 808  :         return _Result;
; 809  :     }

	ret	0
??$_Emplace_back_with_unused_capacity@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAAEAU?$vec@$02M$0A@@glm@@$$QEAU23@@Z ENDP ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Emplace_back_with_unused_capacity<glm::vec<3,float,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z
_TEXT	SEGMENT
this$ = 96
_Whereptr$ = 104
<_Val_0>$ = 112
??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z PROC ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Emplace_reallocate<glm::vec<3,float,0> >, COMDAT

; 812  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN101:
	push	rbx
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 40					; 00000028H

; 813  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 814  :         _Alty& _Al        = _Getal();
; 815  :         auto& _My_data    = _Mypair._Myval2;
; 816  :         pointer& _Myfirst = _My_data._Myfirst;
; 817  :         pointer& _Mylast  = _My_data._Mylast;
; 818  : 
; 819  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 820  : 
; 821  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

	mov	r9, QWORD PTR [rcx]
	mov	rdi, rcx
	mov	rcx, rdx
	mov	rax, 3074457345618258603		; 2aaaaaaaaaaaaaabH
	sub	rcx, r9
	mov	r15, rdx
	imul	rcx

; 822  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r14, QWORD PTR [rdi+8]

; 823  : 
; 824  :         if (_Oldsize == max_size()) {

	mov	rbx, 1537228672809129301		; 1555555555555555H
	sub	r14, r9
	mov	r12, rdx
	sar	r12, 1
	mov	r13, r8
	mov	rax, r12
	sar	r14, 2
	shr	rax, 63					; 0000003fH
	add	r12, rax
	mov	rax, -6148914691236517205		; aaaaaaaaaaaaaaabH
	imul	r14, rax
	cmp	r14, rbx
	je	$LN99@Emplace_re

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rdi+16]

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

	inc	r14

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sub	rcx, r9
	mov	QWORD PTR [rsp+112], rbp
	sar	rcx, 2
	imul	rcx, rax

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, rbx
	mov	QWORD PTR [rsp+32], rsi
	mov	rdx, rcx
	shr	rdx, 1
	sub	rax, rdx
	cmp	rcx, rax
	ja	SHORT $LN13@Emplace_re

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rbx, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rbx, r14
	cmovb	rbx, r14
$LN13@Emplace_re:

; 831  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

	mov	rdx, rbx
	call	?allocate@?$allocator@U?$vec@$02M$0A@@glm@@@std@@QEAAPEAU?$vec@$02M$0A@@glm@@_K@Z ; std::allocator<glm::vec<3,float,0> >::allocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movsd	xmm0, QWORD PTR [r13]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 836  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

	lea	rcx, QWORD PTR [r12+r12*2]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movsd	QWORD PTR [rax+rcx*4], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 831  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

	mov	rsi, rax

; 836  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

	lea	rbp, QWORD PTR [rax+rcx*4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	ecx, DWORD PTR [r13+8]
	mov	DWORD PTR [rbp+8], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 839  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

	mov	rcx, rax
	mov	r8, QWORD PTR [rdi+8]
	mov	rdx, QWORD PTR [rdi]
	cmp	r15, r8
	jne	SHORT $LN4@Emplace_re
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 845  :         } else { // provide basic guarantee

	jmp	SHORT $LN97@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	r8, r15
	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR [rdi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

	lea	rcx, QWORD PTR [rbp+12]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, r15

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, r15
$LN97@Emplace_re:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

	call	memmove

; 849  :         }
; 850  :         _CATCH_ALL
; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 852  :         _Al.deallocate(_Newvec, _Newcapacity);
; 853  :         _RERAISE;
; 854  :         _CATCH_END
; 855  : 
; 856  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, rbx
	mov	r8, r14
	mov	rdx, rsi
	mov	rcx, rdi
	call	?_Change_array@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAXQEAU?$vec@$02M$0A@@glm@@_K1@Z ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Change_array

; 857  :         return _Newvec + _Whereoff;

	mov	rsi, QWORD PTR [rsp+32]
	mov	rax, rbp
	mov	rbp, QWORD PTR [rsp+112]

; 858  :     }

	add	rsp, 40					; 00000028H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rbx
	ret	0
$LN99@Emplace_re:

; 825  :             _Xlength();

	call	?_Xlength@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@CAXXZ ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Xlength
	int	3
$LN96@Emplace_re:
??$_Emplace_reallocate@U?$vec@$02M$0A@@glm@@@?$vector@U?$vec@$02M$0A@@glm@@V?$allocator@U?$vec@$02M$0A@@glm@@@std@@@std@@AEAAPEAU?$vec@$02M$0A@@glm@@QEAU23@$$QEAU23@@Z ENDP ; std::vector<glm::vec<3,float,0>,std::allocator<glm::vec<3,float,0> > >::_Emplace_reallocate<glm::vec<3,float,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 80
_Newsize$ = 88
_Val$dead$ = 96
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN153:
	push	rbp
	push	rdi
	sub	rsp, 56					; 00000038H

; 1512 :         if (_Newsize > max_size()) {

	mov	r8, 144115188075855871			; 01ffffffffffffffH
	mov	rbp, rdx
	mov	rdi, rcx
	cmp	rdx, r8
	ja	$LN151@Resize_rea
	mov	QWORD PTR [rsp+96], rbx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, r8
	mov	QWORD PTR [rsp+104], rsi
	mov	QWORD PTR [rsp+48], r12
	xor	r12d, r12d
	mov	QWORD PTR [rsp+40], r14

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r14, QWORD PTR [rcx+8]
	sub	r14, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [rdi]
	sar	rcx, 7

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	r14, 7

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	shr	rdx, 1
	sub	rax, rdx
	cmp	rcx, rax
	jbe	SHORT $LN10@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow

	mov	rbx, -128				; ffffffffffffff80H
	lea	rcx, QWORD PTR [rbx+39]
	jmp	SHORT $LN33@Resize_rea
$LN10@Resize_rea:

; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rbx, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rbx, rbp
	jae	SHORT $LN11@Resize_rea

; 1973 :             return _Newsize; // geometric growth would be insufficient

	mov	rbx, rbp
	jmp	SHORT $LN131@Resize_rea
$LN11@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

	cmp	rbx, r8
	ja	$LN133@Resize_rea
$LN131@Resize_rea:

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	shl	rbx, 7

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rbx, 4096				; 00001000H
	jb	SHORT $LN23@Resize_rea

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rbx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rbx
	jbe	$LN133@Resize_rea
$LN33@Resize_rea:

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN120@Resize_rea

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rsi, QWORD PTR [rax+39]
	and	rsi, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rsi-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN23@Resize_rea:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rbx, rbx
	je	SHORT $LN24@Resize_rea

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rbx
	call	??2@YAPEAX_K@Z				; operator new
	mov	rsi, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN24@Resize_rea:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	mov	rsi, r12
$LN21@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rdx, rbp
	mov	QWORD PTR [rsp+32], r15
	sub	rdx, r14
	shl	r14, 7
	lea	rcx, QWORD PTR [rsi+r14]
	call	??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	r11, QWORD PTR [rdi]

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	r14, rsi

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r15, QWORD PTR [rdi+8]

; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	r11, r15
	je	$LN45@Resize_rea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	lea	r10, QWORD PTR [rsi+72]
	lea	rax, QWORD PTR [r11+64]
$LL46@Resize_rea:
	mov	ecx, DWORD PTR [r11]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	lea	r10, QWORD PTR [r10+128]
	mov	DWORD PTR [r14], ecx

; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	lea	rax, QWORD PTR [rax+128]
	movzx	ecx, WORD PTR [r11+4]
	sub	r11, -128				; ffffffffffffff80H
	mov	WORD PTR [r14+4], cx

; 1803 :         ++_Last;

	sub	r14, -128				; ffffffffffffff80H
	movzx	ecx, WORD PTR [rax-186]
	mov	WORD PTR [r10-194], cx
	movzx	ecx, WORD PTR [rax-184]
	mov	WORD PTR [r10-192], cx
	movzx	ecx, WORD PTR [rax-182]
	mov	WORD PTR [r10-190], cx
	mov	ecx, DWORD PTR [rax-180]
	mov	DWORD PTR [r10-188], ecx
	mov	ecx, DWORD PTR [rax-176]
	mov	DWORD PTR [r10-184], ecx
	mov	ecx, DWORD PTR [rax-172]
	mov	DWORD PTR [r10-180], ecx
	mov	ecx, DWORD PTR [rax-168]
	mov	DWORD PTR [r10-176], ecx
	mov	ecx, DWORD PTR [rax-164]
	mov	DWORD PTR [r10-172], ecx
	mov	ecx, DWORD PTR [rax-160]
	mov	DWORD PTR [r10-168], ecx
	mov	ecx, DWORD PTR [rax-156]
	mov	DWORD PTR [r10-164], ecx
	mov	ecx, DWORD PTR [rax-152]
	mov	DWORD PTR [r10-160], ecx
	mov	ecx, DWORD PTR [rax-148]
	mov	DWORD PTR [r10-156], ecx
	mov	ecx, DWORD PTR [rax-144]
	mov	DWORD PTR [r10-152], ecx
	mov	ecx, DWORD PTR [rax-140]
	mov	DWORD PTR [r10-148], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rax-120]
	mov	rdx, QWORD PTR [rax-128]
	mov	rcx, QWORD PTR [rax-136]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rax-120], r12
	mov	QWORD PTR [rax-128], r12
	mov	QWORD PTR [rax-136], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r10-144], rcx
	mov	QWORD PTR [r10-136], rdx
	mov	QWORD PTR [r10-128], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rax-96]
	mov	rdx, QWORD PTR [rax-104]
	mov	rcx, QWORD PTR [rax-112]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rax-96], r12
	mov	QWORD PTR [rax-104], r12
	mov	QWORD PTR [rax-112], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r10-120], rcx
	mov	QWORD PTR [r10-112], rdx
	mov	QWORD PTR [r10-104], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r9, QWORD PTR [rax-72]
	mov	r8, QWORD PTR [rax-80]
	mov	rdx, QWORD PTR [rax-88]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rax-72], r12
	mov	QWORD PTR [rax-80], r12
	mov	QWORD PTR [rax-88], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r10-96], rdx
	mov	QWORD PTR [r10-88], r8
	mov	QWORD PTR [r10-80], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	r11, r15
	jne	$LL46@Resize_rea
$LN45@Resize_rea:

; 1797 :         _Destroy_range(_First, _Last, _Al);

	mov	rdx, r14
	mov	rcx, r14
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
	mov	r15, QWORD PTR [rsp+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdi]
	test	rcx, rcx
	je	SHORT $LN111@Resize_rea

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdx, QWORD PTR [rdi+8]
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >

; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rdi]
	mov	rdx, QWORD PTR [rdi+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -128				; ffffffffffffff80H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN123@Resize_rea

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN120@Resize_rea

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN123@Resize_rea:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN111@Resize_rea:
	mov	r12, QWORD PTR [rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [rbx+rsi]
	mov	rbx, QWORD PTR [rsp+96]
	mov	r14, QWORD PTR [rsp+40]

; 2027 :         }
; 2028 : 
; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [rdi], rsi

; 2030 :         _Mylast  = _Newvec + _Newsize;

	shl	rbp, 7
	add	rbp, rsi
	mov	rsi, QWORD PTR [rsp+104]
	mov	QWORD PTR [rdi+8], rbp

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	mov	QWORD PTR [rdi+16], rax

; 1548 :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rbp
	ret	0
$LN120@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN151@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Xlength
	int	3
$LN133@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN149@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN51:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2041 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN3@Uninitiali
	lea	rax, QWORD PTR [rcx+72]
	xor	ecx, ecx
	npad	12
$LL4@Uninitiali:
	xorps	xmm0, xmm0

; 1803 :         ++_Last;

	lea	rax, QWORD PTR [rax+128]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	XMMWORD PTR [rbx], xmm0
	movups	XMMWORD PTR [rbx+16], xmm0
	movups	XMMWORD PTR [rbx+32], xmm0
	movups	XMMWORD PTR [rbx+48], xmm0
	movups	XMMWORD PTR [rbx+64], xmm0
	movups	XMMWORD PTR [rbx+80], xmm0
	movups	XMMWORD PTR [rbx+96], xmm0
	movups	XMMWORD PTR [rbx+112], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	sub	rbx, -128				; ffffffffffffff80H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rax-144], rcx
	mov	QWORD PTR [rax-136], rcx
	mov	QWORD PTR [rax-128], rcx
	mov	QWORD PTR [rax-120], rcx
	mov	QWORD PTR [rax-112], rcx
	mov	QWORD PTR [rax-104], rcx
	mov	QWORD PTR [rax-96], rcx
	mov	QWORD PTR [rax-88], rcx
	mov	QWORD PTR [rax-80], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	sub	rdx, 1
	jne	SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1797 :         _Destroy_range(_First, _Last, _Al);

	mov	rdx, rbx
	mov	rcx, rbx
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rax, rbx

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 80
_Newsize$ = 88
_Val$dead$ = 96
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN135:
	push	rbp
	push	rdi
	sub	rsp, 56					; 00000038H

; 1512 :         if (_Newsize > max_size()) {

	mov	r8, 419244183493398900			; 05d1745d1745d174H
	mov	rbp, rdx
	mov	rdi, rcx
	cmp	rdx, r8
	ja	$LN133@Resize_rea
	mov	QWORD PTR [rsp+96], rbx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, r8
	mov	QWORD PTR [rsp+48], rsi
	mov	QWORD PTR [rsp+40], r14

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r14, QWORD PTR [rcx+8]
	sub	r14, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [rdi]
	sar	rcx, 2

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	r14, 2
	mov	QWORD PTR [rsp+32], r15
	mov	r15, 3353953467947191203		; 2e8ba2e8ba2e8ba3H

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	imul	rcx, r15

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	imul	r14, r15

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx
	shr	rdx, 1
	sub	rax, rdx
	cmp	rcx, rax
	ja	$LN114@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rbp
	jae	SHORT $LN11@Resize_rea

; 1973 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, rbp
	jmp	SHORT $LN112@Resize_rea
$LN11@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

	cmp	rax, r8
	ja	$LN114@Resize_rea
$LN112@Resize_rea:

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	imul	rsi, rax, 44				; 0000002cH

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rsi, 4096				; 00001000H
	jb	SHORT $LN109@Resize_rea

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rsi+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rsi
	jbe	$LN114@Resize_rea

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN96@Resize_rea

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rbx, QWORD PTR [rax+39]
	and	rbx, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rbx-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN109@Resize_rea:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rsi, rsi
	je	SHORT $LN24@Resize_rea

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rsi
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN24@Resize_rea:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	xor	ebx, ebx
$LN21@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

	imul	rcx, r14, 44				; 0000002cH

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, rbp
	add	rcx, rbx
	sub	rax, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN46@Resize_rea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	imul	r8, rax, 44				; 0000002cH
	xor	edx, edx
	call	memset
$LN46@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1931 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	rdx, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR [rdi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdi]
	test	rcx, rcx
	je	SHORT $LN87@Resize_rea

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, rcx
	sar	rax, 2
	imul	rax, r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 44				; 0000002cH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN99@Resize_rea

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN96@Resize_rea

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN99@Resize_rea:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN87@Resize_rea:
	mov	r14, QWORD PTR [rsp+40]
	mov	r15, QWORD PTR [rsp+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [rdi], rbx

; 2030 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, rbp, 44				; 0000002cH
	add	rax, rbx
	mov	QWORD PTR [rdi+8], rax

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [rsi+rbx]
	mov	rsi, QWORD PTR [rsp+48]
	mov	rbx, QWORD PTR [rsp+96]
	mov	QWORD PTR [rdi+16], rax

; 1548 :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rbp
	ret	0
$LN96@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN133@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Xlength
	int	3
$LN114@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN131@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN26:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 2027 :     // value-initialize _Count objects to raw _First, using _Al
; 2028 :     using _Ptrty = typename _Alloc::value_type*;
; 2029 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 2030 : #if _HAS_CXX20
; 2031 :         if (!_STD is_constant_evaluated())
; 2032 : #endif // _HAS_CXX20
; 2033 :         {
; 2034 :             auto _PFirst = _Unfancy(_First);
; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);
; 2036 :             return _First + _Count;
; 2037 :         }
; 2038 :     }
; 2039 : 
; 2040 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 2041 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN22@Uninitiali
	mov	QWORD PTR [rsp+48], rbx
	imul	rbx, rdx, 44				; 0000002cH
	xor	edx, edx
	mov	r8, rbx
	call	memset
	lea	rax, QWORD PTR [rbx+rdi]

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rbx, QWORD PTR [rsp+48]

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN22@Uninitiali:

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rax, rdi

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 80
_Newsize$ = 88
_Val$dead$ = 96
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN135:
	push	rbp
	push	rdi
	sub	rsp, 56					; 00000038H

; 1512 :         if (_Newsize > max_size()) {

	mov	r8, 209622091746699450			; 02e8ba2e8ba2e8baH
	mov	rbp, rdx
	mov	rdi, rcx
	cmp	rdx, r8
	ja	$LN133@Resize_rea
	mov	QWORD PTR [rsp+96], rbx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, r8
	mov	QWORD PTR [rsp+48], rsi
	mov	QWORD PTR [rsp+40], r14

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r14, QWORD PTR [rcx+8]
	sub	r14, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [rdi]
	sar	rcx, 3

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	r14, 3
	mov	QWORD PTR [rsp+32], r15
	mov	r15, 3353953467947191203		; 2e8ba2e8ba2e8ba3H

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	imul	rcx, r15

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	imul	r14, r15

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx
	shr	rdx, 1
	sub	rax, rdx
	cmp	rcx, rax
	ja	$LN114@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rbp
	jae	SHORT $LN11@Resize_rea

; 1973 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, rbp
	jmp	SHORT $LN112@Resize_rea
$LN11@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

	cmp	rax, r8
	ja	$LN114@Resize_rea
$LN112@Resize_rea:

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	imul	rsi, rax, 88				; 00000058H

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rsi, 4096				; 00001000H
	jb	SHORT $LN109@Resize_rea

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rsi+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rsi
	jbe	$LN114@Resize_rea

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN96@Resize_rea

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rbx, QWORD PTR [rax+39]
	and	rbx, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rbx-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN109@Resize_rea:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rsi, rsi
	je	SHORT $LN24@Resize_rea

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rsi
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN24@Resize_rea:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	xor	ebx, ebx
$LN21@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

	imul	rcx, r14, 88				; 00000058H

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, rbp
	add	rcx, rbx
	sub	rax, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN46@Resize_rea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	imul	r8, rax, 88				; 00000058H
	xor	edx, edx
	call	memset
$LN46@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1931 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	rdx, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR [rdi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdi]
	test	rcx, rcx
	je	SHORT $LN87@Resize_rea

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, rcx
	sar	rax, 3
	imul	rax, r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 88				; 00000058H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN99@Resize_rea

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN96@Resize_rea

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN99@Resize_rea:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN87@Resize_rea:
	mov	r14, QWORD PTR [rsp+40]
	mov	r15, QWORD PTR [rsp+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [rdi], rbx

; 2030 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, rbp, 88				; 00000058H
	add	rax, rbx
	mov	QWORD PTR [rdi+8], rax

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [rsi+rbx]
	mov	rsi, QWORD PTR [rsp+48]
	mov	rbx, QWORD PTR [rsp+96]
	mov	QWORD PTR [rdi+16], rax

; 1548 :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rbp
	ret	0
$LN96@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN133@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Xlength
	int	3
$LN114@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN131@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN26:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 2027 :     // value-initialize _Count objects to raw _First, using _Al
; 2028 :     using _Ptrty = typename _Alloc::value_type*;
; 2029 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 2030 : #if _HAS_CXX20
; 2031 :         if (!_STD is_constant_evaluated())
; 2032 : #endif // _HAS_CXX20
; 2033 :         {
; 2034 :             auto _PFirst = _Unfancy(_First);
; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);
; 2036 :             return _First + _Count;
; 2037 :         }
; 2038 :     }
; 2039 : 
; 2040 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 2041 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN22@Uninitiali
	mov	QWORD PTR [rsp+48], rbx
	imul	rbx, rdx, 88				; 00000058H
	xor	edx, edx
	mov	r8, rbx
	call	memset
	lea	rax, QWORD PTR [rbx+rdi]

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rbx, QWORD PTR [rsp+48]

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN22@Uninitiali:

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rax, rdi

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 80
_Newsize$ = 88
_Val$dead$ = 96
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN135:
	push	rbp
	push	rdi
	sub	rsp, 56					; 00000038H

; 1512 :         if (_Newsize > max_size()) {

	mov	r8, 209622091746699450			; 02e8ba2e8ba2e8baH
	mov	rbp, rdx
	mov	rdi, rcx
	cmp	rdx, r8
	ja	$LN133@Resize_rea
	mov	QWORD PTR [rsp+96], rbx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, r8
	mov	QWORD PTR [rsp+48], rsi
	mov	QWORD PTR [rsp+40], r14

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r14, QWORD PTR [rcx+8]
	sub	r14, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [rdi]
	sar	rcx, 3

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	r14, 3
	mov	QWORD PTR [rsp+32], r15
	mov	r15, 3353953467947191203		; 2e8ba2e8ba2e8ba3H

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	imul	rcx, r15

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	imul	r14, r15

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx
	shr	rdx, 1
	sub	rax, rdx
	cmp	rcx, rax
	ja	$LN114@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rbp
	jae	SHORT $LN11@Resize_rea

; 1973 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, rbp
	jmp	SHORT $LN112@Resize_rea
$LN11@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

	cmp	rax, r8
	ja	$LN114@Resize_rea
$LN112@Resize_rea:

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	imul	rsi, rax, 88				; 00000058H

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rsi, 4096				; 00001000H
	jb	SHORT $LN109@Resize_rea

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rsi+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rsi
	jbe	$LN114@Resize_rea

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN96@Resize_rea

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rbx, QWORD PTR [rax+39]
	and	rbx, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rbx-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN109@Resize_rea:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rsi, rsi
	je	SHORT $LN24@Resize_rea

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rsi
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN24@Resize_rea:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	xor	ebx, ebx
$LN21@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

	imul	rcx, r14, 88				; 00000058H

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, rbp
	add	rcx, rbx
	sub	rax, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN46@Resize_rea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	imul	r8, rax, 88				; 00000058H
	xor	edx, edx
	call	memset
$LN46@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1931 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	rdx, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR [rdi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdi]
	test	rcx, rcx
	je	SHORT $LN87@Resize_rea

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, rcx
	sar	rax, 3
	imul	rax, r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 88				; 00000058H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN99@Resize_rea

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN96@Resize_rea

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN99@Resize_rea:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN87@Resize_rea:
	mov	r14, QWORD PTR [rsp+40]
	mov	r15, QWORD PTR [rsp+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [rdi], rbx

; 2030 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, rbp, 88				; 00000058H
	add	rax, rbx
	mov	QWORD PTR [rdi+8], rax

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [rsi+rbx]
	mov	rsi, QWORD PTR [rsp+48]
	mov	rbx, QWORD PTR [rsp+96]
	mov	QWORD PTR [rdi+16], rax

; 1548 :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rbp
	ret	0
$LN96@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN133@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Xlength
	int	3
$LN114@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN131@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN26:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 2027 :     // value-initialize _Count objects to raw _First, using _Al
; 2028 :     using _Ptrty = typename _Alloc::value_type*;
; 2029 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 2030 : #if _HAS_CXX20
; 2031 :         if (!_STD is_constant_evaluated())
; 2032 : #endif // _HAS_CXX20
; 2033 :         {
; 2034 :             auto _PFirst = _Unfancy(_First);
; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);
; 2036 :             return _First + _Count;
; 2037 :         }
; 2038 :     }
; 2039 : 
; 2040 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 2041 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN22@Uninitiali
	mov	QWORD PTR [rsp+48], rbx
	imul	rbx, rdx, 88				; 00000058H
	xor	edx, edx
	mov	r8, rbx
	call	memset
	lea	rax, QWORD PTR [rbx+rdi]

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rbx, QWORD PTR [rsp+48]

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN22@Uninitiali:

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rax, rdi

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 64
_Newsize$ = 72
_Val$dead$ = 80
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN67:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1512 :         if (_Newsize > max_size()) {

	mov	rbx, 256204778801521550			; 038e38e38e38e38eH
	mov	rdi, rdx
	mov	rsi, rcx
	cmp	rdx, rbx
	ja	$LN65@Resize_rea

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	QWORD PTR [rsp+80], r14
	mov	rdx, -8198552921648689607		; 8e38e38e38e38e39H
	mov	r14, QWORD PTR [rcx+8]

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, rbx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sub	r14, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [rsi]
	sar	rcx, 3
	imul	rcx, rdx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	r14, 3
	imul	r14, rdx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx
	mov	QWORD PTR [rsp+88], r15
	shr	rdx, 1
	sub	rax, rdx
	cmp	rcx, rax
	ja	SHORT $LN11@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rbx, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rbx, rdi
	cmovb	rbx, rdi
$LN11@Resize_rea:

; 1524 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, rbx
	call	?allocate@?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox>::allocate

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

	lea	rcx, QWORD PTR [r14+r14*8]
	mov	r15, rax
	lea	rax, QWORD PTR [rax+rcx*8]

; 1526 :         pointer _Appended_last        = _Appended_first;
; 1527 : 
; 1528 :         _TRY_BEGIN
; 1529 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1530 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1531 :         } else {
; 1532 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rcx, rdi
	sub	rcx, r14
	mov	r14, QWORD PTR [rsp+80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN18@Resize_rea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1524 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	lea	r8, QWORD PTR [rcx+rcx*8]
	xor	edx, edx
	shl	r8, 3
	mov	rcx, rax
	call	memset
$LN18@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1931 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	rdx, QWORD PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR [rsi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1547 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, rbx
	mov	r8, rdi
	mov	rdx, r15
	mov	rcx, rsi
	mov	r15, QWORD PTR [rsp+88]

; 1548 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	pop	rsi
	pop	rbx

; 1547 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	jmp	?_Change_array@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@_K1@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Change_array
$LN65@Resize_rea:

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Xlength
	int	3
$LN63@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterBox,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN26:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 2027 :     // value-initialize _Count objects to raw _First, using _Al
; 2028 :     using _Ptrty = typename _Alloc::value_type*;
; 2029 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 2030 : #if _HAS_CXX20
; 2031 :         if (!_STD is_constant_evaluated())
; 2032 : #endif // _HAS_CXX20
; 2033 :         {
; 2034 :             auto _PFirst = _Unfancy(_First);
; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);
; 2036 :             return _First + _Count;
; 2037 :         }
; 2038 :     }
; 2039 : 
; 2040 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 2041 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN22@Uninitiali
	mov	QWORD PTR [rsp+48], rbx
	lea	rbx, QWORD PTR [rdx+rdx*8]
	shl	rbx, 3
	xor	edx, edx
	mov	r8, rbx
	call	memset
	lea	rax, QWORD PTR [rbx+rdi]

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rbx, QWORD PTR [rsp+48]

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN22@Uninitiali:

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rax, rdi

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 80
_Newsize$ = 88
_Val$dead$ = 96
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN161:
	push	rsi
	push	r14
	sub	rsp, 56					; 00000038H

; 1512 :         if (_Newsize > max_size()) {

	mov	r8, 576460752303423487			; 07ffffffffffffffH
	mov	rsi, rdx
	mov	r14, rcx
	cmp	rdx, r8
	ja	$LN159@Resize_rea
	mov	QWORD PTR [rsp+96], rbx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, r8
	mov	QWORD PTR [rsp+48], rbp

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rbp, QWORD PTR [rcx+8]
	sub	rbp, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [r14]
	sar	rcx, 5

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	rbp, 5

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	shr	rdx, 1
	sub	rax, rdx
	mov	QWORD PTR [rsp+40], rdi
	mov	QWORD PTR [rsp+32], r15
	cmp	rcx, rax
	ja	$LN139@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rbx, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rbx, rsi
	jae	SHORT $LN11@Resize_rea

; 1973 :             return _Newsize; // geometric growth would be insufficient

	mov	rbx, rsi
	jmp	SHORT $LN137@Resize_rea
$LN11@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

	cmp	rbx, r8
	ja	$LN139@Resize_rea
$LN137@Resize_rea:

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	shl	rbx, 5

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	xor	r15d, r15d
	cmp	rbx, 4096				; 00001000H
	jb	SHORT $LN134@Resize_rea

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rbx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rbx
	jbe	$LN139@Resize_rea

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN121@Resize_rea

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rdi, QWORD PTR [rax+39]
	and	rdi, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rdi-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN134@Resize_rea:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rbx, rbx
	je	SHORT $LN24@Resize_rea

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rbx
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN24@Resize_rea:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	mov	rdi, r15
$LN21@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

	mov	rcx, rbp

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rdx, rsi
	shl	rcx, 5
	add	rcx, rdi
	sub	rdx, rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN45@Resize_rea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	lea	rax, QWORD PTR [rcx+24]
	npad	5
$LL46@Resize_rea:
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	lea	rax, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	XMMWORD PTR [rcx], xmm0
	movups	XMMWORD PTR [rcx+16], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	rcx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rax-48], r15
	mov	QWORD PTR [rax-40], r15
	mov	QWORD PTR [rax-32], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	sub	rdx, 1
	jne	SHORT $LL46@Resize_rea
$LN45@Resize_rea:

; 1797 :         _Destroy_range(_First, _Last, _Al);

	mov	rdx, rcx
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >

; 1807 :         _First = _Last;

	mov	r11, QWORD PTR [r14]

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	rcx, rdi

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	rbp, QWORD PTR [r14+8]

; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	r11, rbp
	je	SHORT $LN73@Resize_rea

; 1797 :         _Destroy_range(_First, _Last, _Al);

	lea	r10, QWORD PTR [rdi+24]
	lea	r9, QWORD PTR [r11+16]
$LL74@Resize_rea:
	mov	eax, DWORD PTR [r11]

; 1803 :         ++_Last;

	lea	r10, QWORD PTR [r10+32]
	mov	DWORD PTR [rcx], eax
	add	rcx, 32					; 00000020H
	mov	eax, DWORD PTR [r9-12]

; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	lea	r9, QWORD PTR [r9+32]
	mov	DWORD PTR [r10-52], eax
	add	r11, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [r9-24]
	mov	rdx, QWORD PTR [r9-32]
	mov	rax, QWORD PTR [r9-40]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r9-24], r15
	mov	QWORD PTR [r9-32], r15
	mov	QWORD PTR [r9-40], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r10-48], rax
	mov	QWORD PTR [r10-40], rdx
	mov	QWORD PTR [r10-32], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	r11, rbp
	jne	SHORT $LL74@Resize_rea
$LN73@Resize_rea:

; 1797 :         _Destroy_range(_First, _Last, _Al);

	mov	rdx, rcx
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [r14]
	test	rcx, rcx
	je	SHORT $LN112@Resize_rea

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdx, QWORD PTR [r14+8]
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >

; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [r14]
	mov	rdx, QWORD PTR [r14+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -32				; ffffffffffffffe0H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN124@Resize_rea

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN121@Resize_rea

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN124@Resize_rea:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN112@Resize_rea:
	mov	rbp, QWORD PTR [rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [rbx+rdi]
	mov	rbx, QWORD PTR [rsp+96]
	mov	r15, QWORD PTR [rsp+32]

; 2027 :         }
; 2028 : 
; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [r14], rdi

; 2030 :         _Mylast  = _Newvec + _Newsize;

	shl	rsi, 5
	add	rsi, rdi
	mov	rdi, QWORD PTR [rsp+40]
	mov	QWORD PTR [r14+8], rsi

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	mov	QWORD PTR [r14+16], rax

; 1548 :     }

	add	rsp, 56					; 00000038H
	pop	r14
	pop	rsi
	ret	0
$LN121@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN159@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Xlength
	int	3
$LN139@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN157@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN36:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2041 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN3@Uninitiali
	lea	rax, QWORD PTR [rcx+24]
	xor	ecx, ecx
	npad	12
$LL4@Uninitiali:
	xorps	xmm0, xmm0

; 1803 :         ++_Last;

	lea	rax, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	XMMWORD PTR [rbx], xmm0
	movups	XMMWORD PTR [rbx+16], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	rbx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rax-48], rcx
	mov	QWORD PTR [rax-40], rcx
	mov	QWORD PTR [rax-32], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	sub	rdx, 1
	jne	SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1797 :         _Destroy_range(_First, _Last, _Al);

	mov	rdx, rbx
	mov	rcx, rbx
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rax, rbx

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 64
_Newsize$ = 72
_Val$dead$ = 80
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN130:
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H

; 1512 :         if (_Newsize > max_size()) {

	mov	r8, 2305843009213693951			; 1fffffffffffffffH
	mov	rbp, rdx
	mov	rdi, rcx
	cmp	rdx, r8
	ja	$LN128@Resize_rea
	mov	QWORD PTR [rsp+80], rbx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, r8
	mov	QWORD PTR [rsp+88], rsi
	mov	QWORD PTR [rsp+32], r14

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r14, QWORD PTR [rcx+8]
	sub	r14, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [rdi]
	sar	rcx, 3

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	r14, 3

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	shr	rdx, 1
	sub	rax, rdx
	cmp	rcx, rax
	ja	$LN110@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rsi, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rsi, rbp
	jae	SHORT $LN11@Resize_rea

; 1973 :             return _Newsize; // geometric growth would be insufficient

	mov	rsi, rbp
	jmp	SHORT $LN108@Resize_rea
$LN11@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

	cmp	rsi, r8
	ja	$LN110@Resize_rea
$LN108@Resize_rea:

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	lea	rsi, QWORD PTR [rsi*8]

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rsi, 4096				; 00001000H
	jb	SHORT $LN105@Resize_rea

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rsi+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rsi
	jbe	$LN110@Resize_rea

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN92@Resize_rea

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rbx, QWORD PTR [rax+39]
	and	rbx, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rbx-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN105@Resize_rea:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rsi, rsi
	je	SHORT $LN24@Resize_rea

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rsi
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN24@Resize_rea:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	xor	ebx, ebx
$LN21@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	r8, rbp
	lea	rcx, QWORD PTR [rbx+r14*8]
	sub	r8, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN46@Resize_rea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	lea	r8, QWORD PTR [r8*8]
	xor	edx, edx
	call	memset
$LN46@Resize_rea:

; 1534 :         }
; 1535 : 
; 1536 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1537 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	rdx, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR [rdi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdi]
	test	rcx, rcx
	je	SHORT $LN83@Resize_rea

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rdi+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN95@Resize_rea

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN92@Resize_rea

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN95@Resize_rea:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN83@Resize_rea:
	mov	r14, QWORD PTR [rsp+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

	lea	rax, QWORD PTR [rbx+rbp*8]
	mov	QWORD PTR [rdi], rbx
	mov	QWORD PTR [rdi+8], rax

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [rsi+rbx]
	mov	rsi, QWORD PTR [rsp+88]
	mov	rbx, QWORD PTR [rsp+80]
	mov	QWORD PTR [rdi+16], rax

; 1548 :     }

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
$LN92@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN128@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Xlength
	int	3
$LN110@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN126@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN26:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 2027 :     // value-initialize _Count objects to raw _First, using _Al
; 2028 :     using _Ptrty = typename _Alloc::value_type*;
; 2029 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 2030 : #if _HAS_CXX20
; 2031 :         if (!_STD is_constant_evaluated())
; 2032 : #endif // _HAS_CXX20
; 2033 :         {
; 2034 :             auto _PFirst = _Unfancy(_First);
; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);
; 2036 :             return _First + _Count;
; 2037 :         }
; 2038 :     }
; 2039 : 
; 2040 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 2041 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN22@Uninitiali
	mov	QWORD PTR [rsp+48], rbx
	lea	rbx, QWORD PTR [rdx*8]
	mov	r8, rbx
	xor	edx, edx
	call	memset
	lea	rax, QWORD PTR [rbx+rdi]

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rbx, QWORD PTR [rsp+48]

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN22@Uninitiali:

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rax, rdi

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 64
_Newsize$ = 72
_Val$dead$ = 80
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN130:
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H

; 1512 :         if (_Newsize > max_size()) {

	mov	r8, 2305843009213693951			; 1fffffffffffffffH
	mov	rbp, rdx
	mov	rdi, rcx
	cmp	rdx, r8
	ja	$LN128@Resize_rea
	mov	QWORD PTR [rsp+80], rbx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, r8
	mov	QWORD PTR [rsp+88], rsi
	mov	QWORD PTR [rsp+32], r14

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r14, QWORD PTR [rcx+8]
	sub	r14, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [rdi]
	sar	rcx, 3

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	r14, 3

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	shr	rdx, 1
	sub	rax, rdx
	cmp	rcx, rax
	ja	$LN110@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rsi, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rsi, rbp
	jae	SHORT $LN11@Resize_rea

; 1973 :             return _Newsize; // geometric growth would be insufficient

	mov	rsi, rbp
	jmp	SHORT $LN108@Resize_rea
$LN11@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

	cmp	rsi, r8
	ja	$LN110@Resize_rea
$LN108@Resize_rea:

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	lea	rsi, QWORD PTR [rsi*8]

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rsi, 4096				; 00001000H
	jb	SHORT $LN105@Resize_rea

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rsi+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rsi
	jbe	$LN110@Resize_rea

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN92@Resize_rea

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rbx, QWORD PTR [rax+39]
	and	rbx, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rbx-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN105@Resize_rea:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rsi, rsi
	je	SHORT $LN24@Resize_rea

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rsi
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN24@Resize_rea:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	xor	ebx, ebx
$LN21@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	r8, rbp
	lea	rcx, QWORD PTR [rbx+r14*8]
	sub	r8, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN46@Resize_rea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	lea	r8, QWORD PTR [r8*8]
	xor	edx, edx
	call	memset
$LN46@Resize_rea:

; 1534 :         }
; 1535 : 
; 1536 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1537 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	rdx, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR [rdi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdi]
	test	rcx, rcx
	je	SHORT $LN83@Resize_rea

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rdi+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN95@Resize_rea

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN92@Resize_rea

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN95@Resize_rea:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN83@Resize_rea:
	mov	r14, QWORD PTR [rsp+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

	lea	rax, QWORD PTR [rbx+rbp*8]
	mov	QWORD PTR [rdi], rbx
	mov	QWORD PTR [rdi+8], rax

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [rsi+rbx]
	mov	rsi, QWORD PTR [rsp+88]
	mov	rbx, QWORD PTR [rsp+80]
	mov	QWORD PTR [rdi+16], rax

; 1548 :     }

	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
$LN92@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN128@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Xlength
	int	3
$LN110@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN126@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN26:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 2027 :     // value-initialize _Count objects to raw _First, using _Al
; 2028 :     using _Ptrty = typename _Alloc::value_type*;
; 2029 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 2030 : #if _HAS_CXX20
; 2031 :         if (!_STD is_constant_evaluated())
; 2032 : #endif // _HAS_CXX20
; 2033 :         {
; 2034 :             auto _PFirst = _Unfancy(_First);
; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);
; 2036 :             return _First + _Count;
; 2037 :         }
; 2038 :     }
; 2039 : 
; 2040 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 2041 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN22@Uninitiali
	mov	QWORD PTR [rsp+48], rbx
	lea	rbx, QWORD PTR [rdx*8]
	mov	r8, rbx
	xor	edx, edx
	call	memset
	lea	rax, QWORD PTR [rbx+rdi]

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rbx, QWORD PTR [rsp+48]

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN22@Uninitiali:

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rax, rdi

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 64
_Newsize$ = 72
_Val$dead$ = 80
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN134:
	push	rsi
	push	r14
	sub	rsp, 40					; 00000028H

; 1512 :         if (_Newsize > max_size()) {

	mov	r8, 1152921504606846975			; 0fffffffffffffffH
	mov	rsi, rdx
	mov	r14, rcx
	cmp	rdx, r8
	ja	$LN132@Resize_rea
	mov	QWORD PTR [rsp+80], rbx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, r8
	mov	QWORD PTR [rsp+88], rbp

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rbp, QWORD PTR [rcx+8]
	sub	rbp, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [r14]
	sar	rcx, 4

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	rbp, 4

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	shr	rdx, 1
	sub	rax, rdx
	mov	QWORD PTR [rsp+32], rdi
	cmp	rcx, rax
	ja	$LN114@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rbx, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rbx, rsi
	jae	SHORT $LN11@Resize_rea

; 1973 :             return _Newsize; // geometric growth would be insufficient

	mov	rbx, rsi
	jmp	SHORT $LN112@Resize_rea
$LN11@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

	cmp	rbx, r8
	ja	$LN114@Resize_rea
$LN112@Resize_rea:

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	shl	rbx, 4

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rbx, 4096				; 00001000H
	jb	SHORT $LN109@Resize_rea

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rbx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rbx
	jbe	$LN114@Resize_rea

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN96@Resize_rea

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rdi, QWORD PTR [rax+39]
	and	rdi, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rdi-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN109@Resize_rea:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rbx, rbx
	je	SHORT $LN24@Resize_rea

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rbx
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN24@Resize_rea:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	xor	edi, edi
$LN21@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

	mov	rcx, rbp

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	r8, rsi
	shl	rcx, 4
	add	rcx, rdi
	sub	r8, rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN46@Resize_rea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	shl	r8, 4
	xor	edx, edx
	call	memset
$LN46@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1931 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	rdx, QWORD PTR [r14]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR [r14+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [r14]
	test	rcx, rcx
	je	SHORT $LN87@Resize_rea

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [r14+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN99@Resize_rea

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN96@Resize_rea

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN99@Resize_rea:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN87@Resize_rea:
	mov	rbp, QWORD PTR [rsp+88]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [rbx+rdi]
	mov	rbx, QWORD PTR [rsp+80]

; 2027 :         }
; 2028 : 
; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [r14], rdi

; 2030 :         _Mylast  = _Newvec + _Newsize;

	shl	rsi, 4
	add	rsi, rdi
	mov	rdi, QWORD PTR [rsp+32]
	mov	QWORD PTR [r14+8], rsi

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	mov	QWORD PTR [r14+16], rax

; 1548 :     }

	add	rsp, 40					; 00000028H
	pop	r14
	pop	rsi
	ret	0
$LN96@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN132@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Xlength
	int	3
$LN114@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN130@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 2027 :     // value-initialize _Count objects to raw _First, using _Al
; 2028 :     using _Ptrty = typename _Alloc::value_type*;
; 2029 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 2030 : #if _HAS_CXX20
; 2031 :         if (!_STD is_constant_evaluated())
; 2032 : #endif // _HAS_CXX20
; 2033 :         {
; 2034 :             auto _PFirst = _Unfancy(_First);
; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);
; 2036 :             return _First + _Count;
; 2037 :         }
; 2038 :     }
; 2039 : 
; 2040 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 2041 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN22@Uninitiali
	shl	rbx, 4
	xor	edx, edx
	mov	r8, rbx
	call	memset
	lea	rax, QWORD PTR [rbx+rdi]

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();
; 2046 : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN22@Uninitiali:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 80
_Newsize$ = 88
_Val$dead$ = 96
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN135:
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 1512 :         if (_Newsize > max_size()) {

	mov	r8, 922337203685477580			; 0cccccccccccccccH
	mov	rsi, rdx
	mov	rdi, rcx
	cmp	rdx, r8
	ja	$LN133@Resize_rea
	mov	QWORD PTR [rsp+96], rbx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, r8
	mov	QWORD PTR [rsp+48], rbp

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rbp, -3689348814741910323		; cccccccccccccccdH
	mov	QWORD PTR [rsp+40], r14
	mov	QWORD PTR [rsp+32], r15
	mov	r15, QWORD PTR [rcx+8]
	sub	r15, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [rdi]
	sar	rcx, 2
	imul	rcx, rbp

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	r15, 2

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx
	shr	rdx, 1
	sub	rax, rdx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	imul	r15, rbp

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	cmp	rcx, rax
	ja	$LN114@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rsi
	jae	SHORT $LN11@Resize_rea

; 1973 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, rsi
	jmp	SHORT $LN112@Resize_rea
$LN11@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

	cmp	rax, r8
	ja	$LN114@Resize_rea
$LN112@Resize_rea:

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	lea	rax, QWORD PTR [rax+rax*4]
	lea	r14, QWORD PTR [rax*4]

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	r14, 4096				; 00001000H
	jb	SHORT $LN109@Resize_rea

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [r14+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, r14
	jbe	$LN114@Resize_rea

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN96@Resize_rea

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rbx, QWORD PTR [rax+39]
	and	rbx, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rbx-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN109@Resize_rea:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	r14, r14
	je	SHORT $LN24@Resize_rea

; 87   :         return ::operator new(_Bytes);

	mov	rcx, r14
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN24@Resize_rea:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	xor	ebx, ebx
$LN21@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

	lea	rax, QWORD PTR [r15+r15*4]
	lea	rcx, QWORD PTR [rbx+rax*4]

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	rax, rsi
	sub	rax, r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN46@Resize_rea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	lea	r8, QWORD PTR [rax+rax*4]
	xor	edx, edx
	shl	r8, 2
	call	memset
$LN46@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1931 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	rdx, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR [rdi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdi]
	test	rcx, rcx
	je	SHORT $LN87@Resize_rea

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rdi+16]
	sub	rax, rcx
	sar	rax, 2
	imul	rax, rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 2

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN99@Resize_rea

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN96@Resize_rea

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN99@Resize_rea:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN87@Resize_rea:
	mov	rbp, QWORD PTR [rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

	lea	rax, QWORD PTR [rsi+rsi*4]
	mov	r15, QWORD PTR [rsp+32]
	lea	rcx, QWORD PTR [rbx+rax*4]

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [r14+rbx]
	mov	QWORD PTR [rdi], rbx
	mov	r14, QWORD PTR [rsp+40]
	mov	rbx, QWORD PTR [rsp+96]

; 2030 :         _Mylast  = _Newvec + _Newsize;

	mov	QWORD PTR [rdi+8], rcx

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	mov	QWORD PTR [rdi+16], rax

; 1548 :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
$LN96@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN133@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Xlength
	int	3
$LN114@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN131@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN26:
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 2027 :     // value-initialize _Count objects to raw _First, using _Al
; 2028 :     using _Ptrty = typename _Alloc::value_type*;
; 2029 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 2030 : #if _HAS_CXX20
; 2031 :         if (!_STD is_constant_evaluated())
; 2032 : #endif // _HAS_CXX20
; 2033 :         {
; 2034 :             auto _PFirst = _Unfancy(_First);
; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);
; 2036 :             return _First + _Count;
; 2037 :         }
; 2038 :     }
; 2039 : 
; 2040 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 2041 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN22@Uninitiali
	mov	QWORD PTR [rsp+48], rbx
	lea	rbx, QWORD PTR [rdx+rdx*4]
	shl	rbx, 2
	xor	edx, edx
	mov	r8, rbx
	call	memset
	lea	rax, QWORD PTR [rbx+rdi]

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rbx, QWORD PTR [rsp+48]

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN22@Uninitiali:

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();

	mov	rax, rdi

; 2046 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 64
_Newsize$ = 72
_Val$dead$ = 80
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN67:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1512 :         if (_Newsize > max_size()) {

	mov	rbx, 576460752303423487			; 07ffffffffffffffH
	mov	rdi, rdx
	mov	rsi, rcx
	cmp	rdx, rbx
	ja	$LN65@Resize_rea
	mov	QWORD PTR [rsp+80], rbp

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, rbx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rbp, QWORD PTR [rcx+8]
	sub	rbp, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [rsi]
	sar	rcx, 5

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	rbp, 5

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	shr	rdx, 1
	sub	rax, rdx
	mov	QWORD PTR [rsp+88], r14
	cmp	rcx, rax
	ja	SHORT $LN11@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rbx, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rbx, rdi
	cmovb	rbx, rdi
$LN11@Resize_rea:

; 1524 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, rbx
	call	?allocate@?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@_K@Z ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink>::allocate

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

	mov	rcx, rbp

; 1526 :         pointer _Appended_last        = _Appended_first;
; 1527 : 
; 1528 :         _TRY_BEGIN
; 1529 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1530 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1531 :         } else {
; 1532 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	r8, rdi
	shl	rcx, 5
	mov	r14, rax
	add	rcx, rax
	sub	r8, rbp
	mov	rbp, QWORD PTR [rsp+80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN18@Resize_rea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1524 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	shl	r8, 5
	xor	edx, edx
	call	memset
$LN18@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1931 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	rdx, QWORD PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR [rsi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1547 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, rbx
	mov	r8, rdi
	mov	rdx, r14
	mov	rcx, rsi
	mov	r14, QWORD PTR [rsp+88]

; 1548 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	pop	rsi
	pop	rbx

; 1547 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	jmp	?_Change_array@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@_K1@Z ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Change_array
$LN65@Resize_rea:

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Xlength
	int	3
$LN63@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundActorLink,std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 2027 :     // value-initialize _Count objects to raw _First, using _Al
; 2028 :     using _Ptrty = typename _Alloc::value_type*;
; 2029 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 2030 : #if _HAS_CXX20
; 2031 :         if (!_STD is_constant_evaluated())
; 2032 : #endif // _HAS_CXX20
; 2033 :         {
; 2034 :             auto _PFirst = _Unfancy(_First);
; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);
; 2036 :             return _First + _Count;
; 2037 :         }
; 2038 :     }
; 2039 : 
; 2040 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 2041 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN22@Uninitiali
	shl	rbx, 5
	xor	edx, edx
	mov	r8, rbx
	call	memset
	lea	rax, QWORD PTR [rbx+rdi]

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();
; 2046 : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN22@Uninitiali:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z PROC ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >, COMDAT

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {
; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	ret	0
??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 64
_Newsize$ = 72
_Val$dead$ = 80
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN134:
	push	rsi
	push	r14
	sub	rsp, 40					; 00000028H

; 1512 :         if (_Newsize > max_size()) {

	mov	r8, 1152921504606846975			; 0fffffffffffffffH
	mov	rsi, rdx
	mov	r14, rcx
	cmp	rdx, r8
	ja	$LN132@Resize_rea
	mov	QWORD PTR [rsp+80], rbx

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, r8
	mov	QWORD PTR [rsp+88], rbp

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rbp, QWORD PTR [rcx+8]
	sub	rbp, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [r14]
	sar	rcx, 4

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	rbp, 4

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	shr	rdx, 1
	sub	rax, rdx
	mov	QWORD PTR [rsp+32], rdi
	cmp	rcx, rax
	ja	$LN114@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rbx, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rbx, rsi
	jae	SHORT $LN11@Resize_rea

; 1973 :             return _Newsize; // geometric growth would be insufficient

	mov	rbx, rsi
	jmp	SHORT $LN112@Resize_rea
$LN11@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 70   :         if (_Count > _Max_possible) {

	cmp	rbx, r8
	ja	$LN114@Resize_rea
$LN112@Resize_rea:

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	shl	rbx, 4

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rbx, 4096				; 00001000H
	jb	SHORT $LN109@Resize_rea

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rbx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rbx
	jbe	$LN114@Resize_rea

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN96@Resize_rea

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rdi, QWORD PTR [rax+39]
	and	rdi, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rdi-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN109@Resize_rea:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rbx, rbx
	je	SHORT $LN24@Resize_rea

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rbx
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN21@Resize_rea
$LN24@Resize_rea:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	xor	edi, edi
$LN21@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1525 :         const pointer _Appended_first = _Newvec + _Oldsize;

	mov	rcx, rbp

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	r8, rsi
	shl	rcx, 4
	add	rcx, rdi
	sub	r8, rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2041 :     for (; 0 < _Count; --_Count) {

	je	SHORT $LN46@Resize_rea
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	shl	r8, 4
	xor	edx, edx
	call	memset
$LN46@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1931 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	rdx, QWORD PTR [r14]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR [r14+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [r14]
	test	rcx, rcx
	je	SHORT $LN87@Resize_rea

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [r14+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN99@Resize_rea

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN96@Resize_rea

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN99@Resize_rea:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN87@Resize_rea:
	mov	rbp, QWORD PTR [rsp+88]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [rbx+rdi]
	mov	rbx, QWORD PTR [rsp+80]

; 2027 :         }
; 2028 : 
; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [r14], rdi

; 2030 :         _Mylast  = _Newvec + _Newsize;

	shl	rsi, 4
	add	rsi, rdi
	mov	rdi, QWORD PTR [rsp+32]
	mov	QWORD PTR [r14+8], rsi

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	mov	QWORD PTR [r14+16], rax

; 1548 :     }

	add	rsp, 40					; 00000028H
	pop	r14
	pop	rsi
	ret	0
$LN96@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN132@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@CAXXZ ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Xlength
	int	3
$LN114@Resize_rea:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN130@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 2027 :     // value-initialize _Count objects to raw _First, using _Al
; 2028 :     using _Ptrty = typename _Alloc::value_type*;
; 2029 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 2030 : #if _HAS_CXX20
; 2031 :         if (!_STD is_constant_evaluated())
; 2032 : #endif // _HAS_CXX20
; 2033 :         {
; 2034 :             auto _PFirst = _Unfancy(_First);
; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);
; 2036 :             return _First + _Count;
; 2037 :         }
; 2038 :     }
; 2039 : 
; 2040 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 2041 :     for (; 0 < _Count; --_Count) {

	test	rdx, rdx
	je	SHORT $LN22@Uninitiali
	shl	rbx, 4
	xor	edx, edx
	mov	r8, rbx
	call	memset
	lea	rax, QWORD PTR [rbx+rdi]

; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();
; 2046 : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN22@Uninitiali:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@_KAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
this$ = 64
_Newsize$ = 72
_Val$dead$ = 80
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1511 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN65:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1512 :         if (_Newsize > max_size()) {

	mov	rbx, 2305843009213693951		; 1fffffffffffffffH
	mov	rdi, rdx
	mov	rsi, rcx
	cmp	rdx, rbx
	ja	$LN63@Resize_rea
	mov	QWORD PTR [rsp+80], rbp

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, rbx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rbp, QWORD PTR [rcx+8]
	sub	rbp, QWORD PTR [rcx]

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, QWORD PTR [rsi]
	sar	rcx, 3

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx

; 1514 :         }
; 1515 : 
; 1516 :         auto& _Al         = _Getal();
; 1517 :         auto& _My_data    = _Mypair._Myval2;
; 1518 :         pointer& _Myfirst = _My_data._Myfirst;
; 1519 :         pointer& _Mylast  = _My_data._Mylast;
; 1520 : 
; 1521 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	sar	rbp, 3

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	shr	rdx, 1
	sub	rax, rdx
	mov	QWORD PTR [rsp+88], r14
	cmp	rcx, rax
	ja	SHORT $LN11@Resize_rea

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rbx, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rbx, rdi
	cmovb	rbx, rdi
$LN11@Resize_rea:

; 1522 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1523 : 
; 1524 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	rdx, rbx
	call	?allocate@?$allocator@_K@std@@QEAAPEA_K_K@Z ; std::allocator<unsigned __int64>::allocate

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	r8, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	xor	edx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1533 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	sub	r8, rbp
	mov	r14, rax
	lea	rcx, QWORD PTR [rax+rbp*8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

	lea	r8, QWORD PTR [r8*8]

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1537 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	rdx, QWORD PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1932 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	r8, QWORD PTR [rsi+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	r8, rdx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	call	memmove
	mov	rbp, QWORD PTR [rsp+80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1547 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, rbx
	mov	r8, rdi
	mov	rdx, r14
	mov	rcx, rsi
	mov	r14, QWORD PTR [rsp+88]

; 1548 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	pop	rsi
	pop	rbx

; 1547 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	jmp	?_Change_array@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXQEA_K_K1@Z ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Change_array
$LN63@Resize_rea:

; 1513 :             _Xlength();

	call	?_Xlength@?$vector@_KV?$allocator@_K@std@@@std@@CAXXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Xlength
	int	3
$LN61@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@_KV?$allocator@_K@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@_K@std@@@std@@YAPEA_KPEA_K_KAEAV?$allocator@_K@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@V?$allocator@_K@std@@@std@@YAPEA_KPEA_K_KAEAV?$allocator@_K@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<unsigned __int64> >, COMDAT

; 2026 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN27:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2027 :     // value-initialize _Count objects to raw _First, using _Al
; 2028 :     using _Ptrty = typename _Alloc::value_type*;
; 2029 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 2030 : #if _HAS_CXX20
; 2031 :         if (!_STD is_constant_evaluated())
; 2032 : #endif // _HAS_CXX20
; 2033 :         {
; 2034 :             auto _PFirst = _Unfancy(_First);
; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

	lea	rbx, QWORD PTR [rdx*8]
	mov	rdi, rcx

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rbx
	xor	edx, edx
	call	memset

; 2036 :             return _First + _Count;

	lea	rax, QWORD PTR [rbx+rdi]

; 2037 :         }
; 2038 :     }
; 2039 : 
; 2040 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 2041 :     for (; 0 < _Count; --_Count) {
; 2042 :         _Backout._Emplace_back();
; 2043 :     }
; 2044 : 
; 2045 :     return _Backout._Release();
; 2046 : }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@_K@std@@@std@@YAPEA_KPEA_K_KAEAV?$allocator@_K@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<unsigned __int64> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundBphsh>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundBphsh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::destroy<PhiveStaticCompound::PhiveStaticCompoundBphsh>, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN109:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdx+104]
	xor	edi, edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	test	rcx, rcx
	je	SHORT $LN14@destroy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rdx+120]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN32@destroy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	$LN85@destroy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN32@destroy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+104], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+112], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+120], rdi
$LN14@destroy:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx+80]
	test	rcx, rcx
	je	SHORT $LN41@destroy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+96]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN59@destroy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN85@destroy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN59@destroy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+80], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+88], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+96], rdi
$LN41@destroy:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx+56]
	test	rcx, rcx
	je	SHORT $LN70@destroy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+72]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN88@destroy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN85@destroy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN88@destroy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+56], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+64], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+72], rdi
$LN70@destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN85@destroy:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN106@destroy:
??$destroy@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::destroy<PhiveStaticCompound::PhiveStaticCompoundBphsh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::destroy<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN47:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	test	rcx, rcx
	je	SHORT $LN14@destroy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rdx+24]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN32@destroy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN29@destroy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN32@destroy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+8], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+16], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+24], rax
$LN14@destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN29@destroy:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN44@destroy:
??$destroy@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::destroy<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Release, COMDAT

; 1807 :         _First = _Last;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax

; 1808 :         return _Last;
; 1809 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >, COMDAT

; 1797 :         _Destroy_range(_First, _Last, _Al);
; 1798 :     }

	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >, COMDAT

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Release, COMDAT

; 1807 :         _First = _Last;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax

; 1808 :         return _Last;
; 1809 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >, COMDAT

; 1797 :         _Destroy_range(_First, _Last, _Al);
; 1798 :     }

	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >, COMDAT

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Release, COMDAT

; 1807 :         _First = _Last;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax

; 1808 :         return _Last;
; 1809 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >, COMDAT

; 1797 :         _Destroy_range(_First, _Last, _Al);
; 1798 :     }

	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >, COMDAT

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Release, COMDAT

; 1807 :         _First = _Last;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax

; 1808 :         return _Last;
; 1809 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >, COMDAT

; 1797 :         _Destroy_range(_First, _Last, _Al);
; 1798 :     }

	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >, COMDAT

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Release, COMDAT

; 1807 :         _First = _Last;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax

; 1808 :         return _Last;
; 1809 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >, COMDAT

; 1797 :         _Destroy_range(_First, _Last, _Al);
; 1798 :     }

	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >, COMDAT

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Release, COMDAT

; 1807 :         _First = _Last;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax

; 1808 :         return _Last;
; 1809 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >, COMDAT

; 1797 :         _Destroy_range(_First, _Last, _Al);

	mov	rdx, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR [rcx]
	jmp	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >, COMDAT

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Release, COMDAT

; 1807 :         _First = _Last;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax

; 1808 :         return _Last;
; 1809 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >, COMDAT

; 1797 :         _Destroy_range(_First, _Last, _Al);
; 1798 :     }

	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >, COMDAT

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Release, COMDAT

; 1807 :         _First = _Last;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax

; 1808 :         return _Last;
; 1809 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >, COMDAT

; 1797 :         _Destroy_range(_First, _Last, _Al);
; 1798 :     }

	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >, COMDAT

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Release, COMDAT

; 1807 :         _First = _Last;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax

; 1808 :         return _Last;
; 1809 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >, COMDAT

; 1797 :         _Destroy_range(_First, _Last, _Al);
; 1798 :     }

	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >, COMDAT

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Release, COMDAT

; 1807 :         _First = _Last;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax

; 1808 :         return _Last;
; 1809 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >, COMDAT

; 1797 :         _Destroy_range(_First, _Last, _Al);

	mov	rdx, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR [rcx]
	jmp	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
??1?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::~_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >, COMDAT

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@CAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Xlength, COMDAT

; 2137 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H

; 2138 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@CAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Newvec$ = 56
_Newsize$ = 64
_Newcapacity$ = 72
?_Change_array@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K1@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Change_array, COMDAT

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN30:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdi, r9

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	mov	rsi, r8
	mov	rbp, rdx
	test	rcx, rcx
	je	SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdx, QWORD PTR [rbx+8]
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >

; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -128				; ffffffffffffff80H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [rbx], rbp

; 2030 :         _Mylast  = _Newvec + _Newsize;

	shl	rsi, 7
	add	rsi, rbp

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	shl	rdi, 7
	mov	QWORD PTR [rbx+8], rsi
	add	rdi, rbp

; 2033 :     }

	mov	rbp, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	mov	QWORD PTR [rbx+16], rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN17@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Change_arr:
?_Change_array@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K1@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Calculate_growth, COMDAT

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	r8, QWORD PTR [rcx+16]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, 144115188075855871			; 01ffffffffffffffH

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sub	r8, QWORD PTR [rcx]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rcx, rax

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sar	r8, 7

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	r9, r8
	shr	r9, 1
	sub	rcx, r9
	cmp	r8, rcx
	ja	SHORT $LN1@Calculate_

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [r9+r8]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rdx
	cmovb	rax, rdx
$LN1@Calculate_:

; 1973 :             return _Newsize; // geometric growth would be insufficient
; 1974 :         }
; 1975 : 
; 1976 :         return _Geometric; // geometric growth is sufficient
; 1977 :     }

	ret	0
?_Calculate_growth@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::max_size, COMDAT

; 1873 :         return (_STD min)(

	mov	rax, 144115188075855871			; 01ffffffffffffffH

; 1874 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1875 :     }

	ret	0
?max_size@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>::allocate, COMDAT

; 972  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN32:
	sub	rsp, 40					; 00000028H

; 70   :         if (_Count > _Max_possible) {

	mov	rax, 144115188075855871			; 01ffffffffffffffH
	cmp	rdx, rax
	ja	SHORT $LN28@allocate

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	shl	rdx, 7

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN9@allocate

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rdx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rdx
	jbe	SHORT $LN28@allocate

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN18@allocate

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN18@allocate:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN9@allocate:

; 244  :     if (_Bytes != 0) {

	test	rdx, rdx
	je	SHORT $LN10@allocate

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rdx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H

; 87   :         return ::operator new(_Bytes);

	jmp	??2@YAPEAX_K@Z				; operator new
$LN10@allocate:

; 248  :     return nullptr;

	xor	eax, eax

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN28@allocate:

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN30@allocate:
?allocate@?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@CAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Xlength, COMDAT

; 2137 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H

; 2138 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@CAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Newvec$ = 56
_Newsize$ = 64
_Newcapacity$ = 72
?_Change_array@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K1@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Change_array, COMDAT

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN30:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rsi, r9

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	mov	rbp, r8
	mov	rdi, rdx
	test	rcx, rcx
	je	SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sub	rax, rcx
	sar	rax, 2
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 44				; 0000002cH

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, rbp, 44				; 0000002cH

; 2033 :     }

	mov	rbp, QWORD PTR [rsp+64]
	add	rax, rdi
	mov	QWORD PTR [rbx], rdi
	mov	QWORD PTR [rbx+8], rax
	imul	rax, rsi, 44				; 0000002cH
	mov	rsi, QWORD PTR [rsp+72]
	add	rax, rdi
	mov	QWORD PTR [rbx+16], rax
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN17@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Change_arr:
?_Change_array@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K1@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Calculate_growth, COMDAT

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	r8, QWORD PTR [rcx+16]
	mov	rax, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sub	r8, QWORD PTR [rcx]
	sar	r8, 2
	imul	r8, rax

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, 419244183493398900			; 05d1745d1745d174H
	mov	r9, r8
	mov	rcx, rax
	shr	r9, 1
	sub	rcx, r9
	cmp	r8, rcx
	ja	SHORT $LN1@Calculate_

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [r9+r8]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rdx
	cmovb	rax, rdx
$LN1@Calculate_:

; 1973 :             return _Newsize; // geometric growth would be insufficient
; 1974 :         }
; 1975 : 
; 1976 :         return _Geometric; // geometric growth is sufficient
; 1977 :     }

	ret	0
?_Calculate_growth@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::max_size, COMDAT

; 1873 :         return (_STD min)(

	mov	rax, 419244183493398900			; 05d1745d1745d174H

; 1874 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1875 :     }

	ret	0
?max_size@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>::allocate, COMDAT

; 972  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN32:
	sub	rsp, 40					; 00000028H

; 70   :         if (_Count > _Max_possible) {

	mov	rax, 419244183493398900			; 05d1745d1745d174H
	cmp	rdx, rax
	ja	SHORT $LN28@allocate

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	imul	rcx, rdx, 44				; 0000002cH

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN9@allocate

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	SHORT $LN28@allocate

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN18@allocate

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN18@allocate:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN9@allocate:

; 244  :     if (_Bytes != 0) {

	test	rcx, rcx
	je	SHORT $LN10@allocate

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H

; 87   :         return ::operator new(_Bytes);

	jmp	??2@YAPEAX_K@Z				; operator new
$LN10@allocate:

; 248  :     return nullptr;

	xor	eax, eax

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN28@allocate:

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN30@allocate:
?allocate@?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@CAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Xlength, COMDAT

; 2137 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H

; 2138 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@CAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Newvec$ = 56
_Newsize$ = 64
_Newcapacity$ = 72
?_Change_array@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K1@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Change_array, COMDAT

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN30:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rsi, r9

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	mov	rbp, r8
	mov	rdi, rdx
	test	rcx, rcx
	je	SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 88				; 00000058H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, rbp, 88				; 00000058H

; 2033 :     }

	mov	rbp, QWORD PTR [rsp+64]
	add	rax, rdi
	mov	QWORD PTR [rbx], rdi
	mov	QWORD PTR [rbx+8], rax
	imul	rax, rsi, 88				; 00000058H
	mov	rsi, QWORD PTR [rsp+72]
	add	rax, rdi
	mov	QWORD PTR [rbx+16], rax
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN17@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Change_arr:
?_Change_array@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K1@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Calculate_growth, COMDAT

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	r8, QWORD PTR [rcx+16]
	mov	rax, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sub	r8, QWORD PTR [rcx]
	sar	r8, 3
	imul	r8, rax

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH
	mov	r9, r8
	mov	rcx, rax
	shr	r9, 1
	sub	rcx, r9
	cmp	r8, rcx
	ja	SHORT $LN1@Calculate_

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [r9+r8]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rdx
	cmovb	rax, rdx
$LN1@Calculate_:

; 1973 :             return _Newsize; // geometric growth would be insufficient
; 1974 :         }
; 1975 : 
; 1976 :         return _Geometric; // geometric growth is sufficient
; 1977 :     }

	ret	0
?_Calculate_growth@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::max_size, COMDAT

; 1873 :         return (_STD min)(

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH

; 1874 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1875 :     }

	ret	0
?max_size@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>::allocate, COMDAT

; 972  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN32:
	sub	rsp, 40					; 00000028H

; 70   :         if (_Count > _Max_possible) {

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH
	cmp	rdx, rax
	ja	SHORT $LN28@allocate

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	imul	rcx, rdx, 88				; 00000058H

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN9@allocate

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	SHORT $LN28@allocate

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN18@allocate

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN18@allocate:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN9@allocate:

; 244  :     if (_Bytes != 0) {

	test	rcx, rcx
	je	SHORT $LN10@allocate

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H

; 87   :         return ::operator new(_Bytes);

	jmp	??2@YAPEAX_K@Z				; operator new
$LN10@allocate:

; 248  :     return nullptr;

	xor	eax, eax

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN28@allocate:

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN30@allocate:
?allocate@?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@CAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Xlength, COMDAT

; 2137 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H

; 2138 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@CAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Newvec$ = 56
_Newsize$ = 64
_Newcapacity$ = 72
?_Change_array@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K1@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Change_array, COMDAT

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN30:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rsi, r9

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	mov	rbp, r8
	mov	rdi, rdx
	test	rcx, rcx
	je	SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 88				; 00000058H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

	imul	rax, rbp, 88				; 00000058H

; 2033 :     }

	mov	rbp, QWORD PTR [rsp+64]
	add	rax, rdi
	mov	QWORD PTR [rbx], rdi
	mov	QWORD PTR [rbx+8], rax
	imul	rax, rsi, 88				; 00000058H
	mov	rsi, QWORD PTR [rsp+72]
	add	rax, rdi
	mov	QWORD PTR [rbx+16], rax
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN17@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Change_arr:
?_Change_array@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K1@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Calculate_growth, COMDAT

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	r8, QWORD PTR [rcx+16]
	mov	rax, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sub	r8, QWORD PTR [rcx]
	sar	r8, 3
	imul	r8, rax

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH
	mov	r9, r8
	mov	rcx, rax
	shr	r9, 1
	sub	rcx, r9
	cmp	r8, rcx
	ja	SHORT $LN1@Calculate_

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [r9+r8]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rdx
	cmovb	rax, rdx
$LN1@Calculate_:

; 1973 :             return _Newsize; // geometric growth would be insufficient
; 1974 :         }
; 1975 : 
; 1976 :         return _Geometric; // geometric growth is sufficient
; 1977 :     }

	ret	0
?_Calculate_growth@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::max_size, COMDAT

; 1873 :         return (_STD min)(

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH

; 1874 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1875 :     }

	ret	0
?max_size@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>::allocate, COMDAT

; 972  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN32:
	sub	rsp, 40					; 00000028H

; 70   :         if (_Count > _Max_possible) {

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH
	cmp	rdx, rax
	ja	SHORT $LN28@allocate

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	imul	rcx, rdx, 88				; 00000058H

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN9@allocate

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	SHORT $LN28@allocate

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN18@allocate

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN18@allocate:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN9@allocate:

; 244  :     if (_Bytes != 0) {

	test	rcx, rcx
	je	SHORT $LN10@allocate

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H

; 87   :         return ::operator new(_Bytes);

	jmp	??2@YAPEAX_K@Z				; operator new
$LN10@allocate:

; 248  :     return nullptr;

	xor	eax, eax

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN28@allocate:

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN30@allocate:
?allocate@?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@CAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Xlength, COMDAT

; 2137 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H

; 2138 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@CAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Newvec$ = 56
_Newsize$ = 64
_Newcapacity$ = 72
?_Change_array@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K1@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Change_array, COMDAT

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN30:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdi, r9

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	mov	rsi, r8
	mov	rbp, rdx
	test	rcx, rcx
	je	SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdx, QWORD PTR [rbx+8]
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >

; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -32				; ffffffffffffffe0H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [rbx], rbp

; 2030 :         _Mylast  = _Newvec + _Newsize;

	shl	rsi, 5
	add	rsi, rbp

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	shl	rdi, 5
	mov	QWORD PTR [rbx+8], rsi
	add	rdi, rbp

; 2033 :     }

	mov	rbp, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	mov	QWORD PTR [rbx+16], rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN17@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Change_arr:
?_Change_array@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K1@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Calculate_growth, COMDAT

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	r8, QWORD PTR [rcx+16]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, 576460752303423487			; 07ffffffffffffffH

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sub	r8, QWORD PTR [rcx]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rcx, rax

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sar	r8, 5

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	r9, r8
	shr	r9, 1
	sub	rcx, r9
	cmp	r8, rcx
	ja	SHORT $LN1@Calculate_

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [r9+r8]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rdx
	cmovb	rax, rdx
$LN1@Calculate_:

; 1973 :             return _Newsize; // geometric growth would be insufficient
; 1974 :         }
; 1975 : 
; 1976 :         return _Geometric; // geometric growth is sufficient
; 1977 :     }

	ret	0
?_Calculate_growth@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::max_size, COMDAT

; 1873 :         return (_STD min)(

	mov	rax, 576460752303423487			; 07ffffffffffffffH

; 1874 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1875 :     }

	ret	0
?max_size@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>::allocate, COMDAT

; 972  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN32:
	sub	rsp, 40					; 00000028H

; 70   :         if (_Count > _Max_possible) {

	mov	rax, 576460752303423487			; 07ffffffffffffffH
	cmp	rdx, rax
	ja	SHORT $LN28@allocate

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	shl	rdx, 5

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN9@allocate

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rdx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rdx
	jbe	SHORT $LN28@allocate

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN18@allocate

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN18@allocate:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN9@allocate:

; 244  :     if (_Bytes != 0) {

	test	rdx, rdx
	je	SHORT $LN10@allocate

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rdx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H

; 87   :         return ::operator new(_Bytes);

	jmp	??2@YAPEAX_K@Z				; operator new
$LN10@allocate:

; 248  :     return nullptr;

	xor	eax, eax

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN28@allocate:

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN30@allocate:
?allocate@?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@CAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Xlength, COMDAT

; 2137 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H

; 2138 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@CAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Newvec$ = 56
_Newsize$ = 64
_Newcapacity$ = 72
?_Change_array@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K1@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Change_array, COMDAT

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN30:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rsi, r9

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	mov	rbp, r8
	mov	rdi, rdx
	test	rcx, rcx
	je	SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

	lea	rax, QWORD PTR [rdi+rbp*8]
	mov	QWORD PTR [rbx], rdi

; 2033 :     }

	mov	rbp, QWORD PTR [rsp+64]
	mov	QWORD PTR [rbx+8], rax
	lea	rax, QWORD PTR [rdi+rsi*8]
	mov	rsi, QWORD PTR [rsp+72]
	mov	QWORD PTR [rbx+16], rax
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN17@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Change_arr:
?_Change_array@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K1@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Calculate_growth, COMDAT

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	r8, QWORD PTR [rcx+16]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sub	r8, QWORD PTR [rcx]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rcx, rax

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sar	r8, 3

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	r9, r8
	shr	r9, 1
	sub	rcx, r9
	cmp	r8, rcx
	ja	SHORT $LN1@Calculate_

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [r9+r8]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rdx
	cmovb	rax, rdx
$LN1@Calculate_:

; 1973 :             return _Newsize; // geometric growth would be insufficient
; 1974 :         }
; 1975 : 
; 1976 :         return _Geometric; // geometric growth is sufficient
; 1977 :     }

	ret	0
?_Calculate_growth@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::max_size, COMDAT

; 1873 :         return (_STD min)(

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 1874 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1875 :     }

	ret	0
?max_size@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>::allocate, COMDAT

; 972  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN32:
	sub	rsp, 40					; 00000028H

; 70   :         if (_Count > _Max_possible) {

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	rdx, rax
	ja	SHORT $LN28@allocate

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	lea	rcx, QWORD PTR [rdx*8]

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN9@allocate

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	SHORT $LN28@allocate

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN18@allocate

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN18@allocate:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN9@allocate:

; 244  :     if (_Bytes != 0) {

	test	rcx, rcx
	je	SHORT $LN10@allocate

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H

; 87   :         return ::operator new(_Bytes);

	jmp	??2@YAPEAX_K@Z				; operator new
$LN10@allocate:

; 248  :     return nullptr;

	xor	eax, eax

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN28@allocate:

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN30@allocate:
?allocate@?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@CAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Xlength, COMDAT

; 2137 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H

; 2138 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@CAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Newvec$ = 56
_Newsize$ = 64
_Newcapacity$ = 72
?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K1@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Change_array, COMDAT

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN30:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rsi, r9

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	mov	rbp, r8
	mov	rdi, rdx
	test	rcx, rcx
	je	SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2030 :         _Mylast  = _Newvec + _Newsize;

	lea	rax, QWORD PTR [rdi+rbp*8]
	mov	QWORD PTR [rbx], rdi

; 2033 :     }

	mov	rbp, QWORD PTR [rsp+64]
	mov	QWORD PTR [rbx+8], rax
	lea	rax, QWORD PTR [rdi+rsi*8]
	mov	rsi, QWORD PTR [rsp+72]
	mov	QWORD PTR [rbx+16], rax
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN17@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Change_arr:
?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K1@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Calculate_growth, COMDAT

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	r8, QWORD PTR [rcx+16]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sub	r8, QWORD PTR [rcx]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rcx, rax

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sar	r8, 3

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	r9, r8
	shr	r9, 1
	sub	rcx, r9
	cmp	r8, rcx
	ja	SHORT $LN1@Calculate_

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [r9+r8]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rdx
	cmovb	rax, rdx
$LN1@Calculate_:

; 1973 :             return _Newsize; // geometric growth would be insufficient
; 1974 :         }
; 1975 : 
; 1976 :         return _Geometric; // geometric growth is sufficient
; 1977 :     }

	ret	0
?_Calculate_growth@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::max_size, COMDAT

; 1873 :         return (_STD min)(

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 1874 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1875 :     }

	ret	0
?max_size@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>::allocate, COMDAT

; 972  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN32:
	sub	rsp, 40					; 00000028H

; 70   :         if (_Count > _Max_possible) {

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	rdx, rax
	ja	SHORT $LN28@allocate

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	lea	rcx, QWORD PTR [rdx*8]

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN9@allocate

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	SHORT $LN28@allocate

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN18@allocate

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN18@allocate:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN9@allocate:

; 244  :     if (_Bytes != 0) {

	test	rcx, rcx
	je	SHORT $LN10@allocate

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H

; 87   :         return ::operator new(_Bytes);

	jmp	??2@YAPEAX_K@Z				; operator new
$LN10@allocate:

; 248  :     return nullptr;

	xor	eax, eax

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN28@allocate:

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN30@allocate:
?allocate@?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@CAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Xlength, COMDAT

; 2137 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H

; 2138 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@CAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Newvec$ = 56
_Newsize$ = 64
_Newcapacity$ = 72
?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K1@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Change_array, COMDAT

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN30:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
	mov	rbx, r9

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	mov	rdi, r8
	mov	rbp, rdx
	test	rcx, rcx
	je	SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rsi+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [rsi], rbp

; 2030 :         _Mylast  = _Newvec + _Newsize;

	shl	rdi, 4
	add	rdi, rbp

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	shl	rbx, 4
	add	rbx, rbp
	mov	QWORD PTR [rsi+8], rdi

; 2033 :     }

	mov	rbp, QWORD PTR [rsp+64]
	mov	QWORD PTR [rsi+16], rbx
	mov	rbx, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN17@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Change_arr:
?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K1@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Calculate_growth, COMDAT

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	r8, QWORD PTR [rcx+16]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sub	r8, QWORD PTR [rcx]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rcx, rax

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sar	r8, 4

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	r9, r8
	shr	r9, 1
	sub	rcx, r9
	cmp	r8, rcx
	ja	SHORT $LN1@Calculate_

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [r9+r8]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rdx
	cmovb	rax, rdx
$LN1@Calculate_:

; 1973 :             return _Newsize; // geometric growth would be insufficient
; 1974 :         }
; 1975 : 
; 1976 :         return _Geometric; // geometric growth is sufficient
; 1977 :     }

	ret	0
?_Calculate_growth@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::max_size, COMDAT

; 1873 :         return (_STD min)(

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 1874 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1875 :     }

	ret	0
?max_size@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>::allocate, COMDAT

; 972  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN32:
	sub	rsp, 40					; 00000028H

; 70   :         if (_Count > _Max_possible) {

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	rdx, rax
	ja	SHORT $LN28@allocate

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	shl	rdx, 4

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN9@allocate

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rdx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rdx
	jbe	SHORT $LN28@allocate

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN18@allocate

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN18@allocate:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN9@allocate:

; 244  :     if (_Bytes != 0) {

	test	rdx, rdx
	je	SHORT $LN10@allocate

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rdx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H

; 87   :         return ::operator new(_Bytes);

	jmp	??2@YAPEAX_K@Z				; operator new
$LN10@allocate:

; 248  :     return nullptr;

	xor	eax, eax

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN28@allocate:

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN30@allocate:
?allocate@?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@CAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Xlength, COMDAT

; 2137 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H

; 2138 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@CAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Newvec$ = 56
_Newsize$ = 64
_Newcapacity$ = 72
?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K1@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Change_array, COMDAT

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN30:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rsi, r9

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	mov	r14, r8
	mov	rdi, rdx
	test	rcx, rcx
	je	SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, -3689348814741910323		; cccccccccccccccdH
	sub	rax, rcx
	sar	rax, 2
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 2

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [rbx], rdi

; 2030 :         _Mylast  = _Newvec + _Newsize;

	lea	rax, QWORD PTR [r14+r14*4]
	lea	rcx, QWORD PTR [rdi+rax*4]
	mov	QWORD PTR [rbx+8], rcx

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [rsi+rsi*4]

; 2033 :     }

	mov	rsi, QWORD PTR [rsp+64]
	lea	rcx, QWORD PTR [rdi+rax*4]
	mov	rdi, QWORD PTR [rsp+72]
	mov	QWORD PTR [rbx+16], rcx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN17@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Change_arr:
?_Change_array@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K1@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Calculate_growth, COMDAT

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	r8, QWORD PTR [rcx+16]
	mov	rax, -3689348814741910323		; cccccccccccccccdH
	sub	r8, QWORD PTR [rcx]
	sar	r8, 2
	imul	r8, rax

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, 922337203685477580			; 0cccccccccccccccH
	mov	r9, r8
	mov	rcx, rax
	shr	r9, 1
	sub	rcx, r9
	cmp	r8, rcx
	ja	SHORT $LN1@Calculate_

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [r9+r8]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rdx
	cmovb	rax, rdx
$LN1@Calculate_:

; 1973 :             return _Newsize; // geometric growth would be insufficient
; 1974 :         }
; 1975 : 
; 1976 :         return _Geometric; // geometric growth is sufficient
; 1977 :     }

	ret	0
?_Calculate_growth@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::max_size, COMDAT

; 1873 :         return (_STD min)(

	mov	rax, 922337203685477580			; 0cccccccccccccccH

; 1874 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1875 :     }

	ret	0
?max_size@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>::allocate, COMDAT

; 972  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN32:
	sub	rsp, 40					; 00000028H

; 70   :         if (_Count > _Max_possible) {

	mov	rax, 922337203685477580			; 0cccccccccccccccH
	cmp	rdx, rax
	ja	SHORT $LN28@allocate

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	lea	rax, QWORD PTR [rdx+rdx*4]
	lea	rcx, QWORD PTR [rax*4]

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN9@allocate

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	SHORT $LN28@allocate

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN18@allocate

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN18@allocate:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN9@allocate:

; 244  :     if (_Bytes != 0) {

	test	rcx, rcx
	je	SHORT $LN10@allocate

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H

; 87   :         return ::operator new(_Bytes);

	jmp	??2@YAPEAX_K@Z				; operator new
$LN10@allocate:

; 248  :     return nullptr;

	xor	eax, eax

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN28@allocate:

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN30@allocate:
?allocate@?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@CAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Xlength, COMDAT

; 2137 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H

; 2138 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@CAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K1@Z
_TEXT	SEGMENT
this$ = 48
_Newvec$ = 56
_Newsize$ = 64
_Newcapacity$ = 72
?_Change_array@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K1@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Change_array, COMDAT

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN30:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
	mov	rbx, r9

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	mov	rdi, r8
	mov	rbp, rdx
	test	rcx, rcx
	je	SHORT $LN8@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2025 :             _ASAN_VECTOR_REMOVE;
; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rsi+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Change_arr

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN8@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [rsi], rbp

; 2030 :         _Mylast  = _Newvec + _Newsize;

	shl	rdi, 4
	add	rdi, rbp

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	shl	rbx, 4
	add	rbx, rbp
	mov	QWORD PTR [rsi+8], rdi

; 2033 :     }

	mov	rbp, QWORD PTR [rsp+64]
	mov	QWORD PTR [rsi+16], rbx
	mov	rbx, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN17@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Change_arr:
?_Change_array@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K1@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Calculate_growth, COMDAT

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	r8, QWORD PTR [rcx+16]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sub	r8, QWORD PTR [rcx]

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rcx, rax

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	sar	r8, 4

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	r9, r8
	shr	r9, 1
	sub	rcx, r9
	cmp	r8, rcx
	ja	SHORT $LN1@Calculate_

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [r9+r8]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rdx
	cmovb	rax, rdx
$LN1@Calculate_:

; 1973 :             return _Newsize; // geometric growth would be insufficient
; 1974 :         }
; 1975 : 
; 1976 :         return _Geometric; // geometric growth is sufficient
; 1977 :     }

	ret	0
?_Calculate_growth@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::max_size, COMDAT

; 1873 :         return (_STD min)(

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 1874 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1875 :     }

	ret	0
?max_size@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>::allocate, COMDAT

; 972  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN32:
	sub	rsp, 40					; 00000028H

; 70   :         if (_Count > _Max_possible) {

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	rdx, rax
	ja	SHORT $LN28@allocate

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	shl	rdx, 4

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN9@allocate

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rcx, QWORD PTR [rdx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rcx, rdx
	jbe	SHORT $LN28@allocate

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN18@allocate

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN18@allocate:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN9@allocate:

; 244  :     if (_Bytes != 0) {

	test	rdx, rdx
	je	SHORT $LN10@allocate

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rdx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H

; 87   :         return ::operator new(_Bytes);

	jmp	??2@YAPEAX_K@Z				; operator new
$LN10@allocate:

; 248  :     return nullptr;

	xor	eax, eax

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN28@allocate:

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN30@allocate:
?allocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	shl	r8, 4
	mov	rax, rdx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	r8, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rdx-8]
	add	r8, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, r8
	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAAXQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@_K@Z ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Getal, COMDAT

; 2185 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2186 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?capacity@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::capacity, COMDAT

; 1878 :         auto& _My_data = _Mypair._Myval2;
; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 7

; 1880 :     }

	ret	0
?capacity@?$vector@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphsh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 144115188075855871			; 01ffffffffffffffH

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Getal, COMDAT

; 2185 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2186 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?capacity@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::capacity, COMDAT

; 1878 :         auto& _My_data = _Mypair._Myval2;
; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	mov	rcx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sar	rax, 2
	imul	rax, rcx

; 1880 :     }

	ret	0
?capacity@?$vector@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 419244183493398900			; 05d1745d1745d174H

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Getal, COMDAT

; 2185 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2186 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?capacity@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::capacity, COMDAT

; 1878 :         auto& _My_data = _Mypair._Myval2;
; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	mov	rcx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sar	rax, 3
	imul	rax, rcx

; 1880 :     }

	ret	0
?capacity@?$vector@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterFall,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Getal, COMDAT

; 2185 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2186 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?capacity@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::capacity, COMDAT

; 1878 :         auto& _My_data = _Mypair._Myval2;
; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	mov	rcx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	sar	rax, 3
	imul	rax, rcx

; 1880 :     }

	ret	0
?capacity@?$vector@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Getal, COMDAT

; 2185 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2186 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?capacity@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::capacity, COMDAT

; 1878 :         auto& _My_data = _Mypair._Myval2;
; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 5

; 1880 :     }

	ret	0
?capacity@?$vector@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 576460752303423487			; 07ffffffffffffffH

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Getal, COMDAT

; 2185 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2186 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?capacity@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::capacity, COMDAT

; 1878 :         auto& _My_data = _Mypair._Myval2;
; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 1880 :     }

	ret	0
?capacity@?$vector@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Getal, COMDAT

; 2185 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2186 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?capacity@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::capacity, COMDAT

; 1878 :         auto& _My_data = _Mypair._Myval2;
; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 1880 :     }

	ret	0
?capacity@?$vector@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Getal, COMDAT

; 2185 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2186 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?capacity@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::capacity, COMDAT

; 1878 :         auto& _My_data = _Mypair._Myval2;
; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 4

; 1880 :     }

	ret	0
?capacity@?$vector@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Getal, COMDAT

; 2185 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2186 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?capacity@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::capacity, COMDAT

; 1878 :         auto& _My_data = _Mypair._Myval2;
; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	mov	rcx, -3689348814741910323		; cccccccccccccccdH
	sar	rax, 2
	imul	rax, rcx

; 1880 :     }

	ret	0
?capacity@?$vector@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 922337203685477580			; 0cccccccccccccccH

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Getal, COMDAT

; 2185 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2186 :     }

	ret	0
?_Getal@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEBAAEBV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?capacity@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::capacity, COMDAT

; 1878 :         auto& _My_data = _Mypair._Myval2;
; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 4

; 1880 :     }

	ret	0
?capacity@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 1152921504606846975		; 0fffffffffffffffH

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@SA_KAEBV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphsh> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\optional
;	COMDAT ??$?0U?$vec@$01M$0A@@glm@@@?$_Optional_destruct_base@U?$vec@$01M$0A@@glm@@$00@std@@QEAA@Uin_place_t@1@$$QEAU?$vec@$01M$0A@@glm@@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
<_Args_0>$ = 24
??$?0U?$vec@$01M$0A@@glm@@@?$_Optional_destruct_base@U?$vec@$01M$0A@@glm@@$00@std@@QEAA@Uin_place_t@1@$$QEAU?$vec@$01M$0A@@glm@@@Z PROC ; std::_Optional_destruct_base<glm::vec<2,float,0>,1>::_Optional_destruct_base<glm::vec<2,float,0>,1><glm::vec<2,float,0> >, COMDAT

; 83   :         : _Value(_STD forward<_Types>(_Args)...), _Has_value{true} {} // initialize contained value with _Args...

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	mov	BYTE PTR [rcx+8], 1
	ret	0
??$?0U?$vec@$01M$0A@@glm@@@?$_Optional_destruct_base@U?$vec@$01M$0A@@glm@@$00@std@@QEAA@Uin_place_t@1@$$QEAU?$vec@$01M$0A@@glm@@@Z ENDP ; std::_Optional_destruct_base<glm::vec<2,float,0>,1>::_Optional_destruct_base<glm::vec<2,float,0>,1><glm::vec<2,float,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\type_vec4.inl
;	COMDAT ??$?XM@?$vec@$03M$0A@@glm@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
this$ = 8
v$ = 16
??$?XM@?$vec@$03M$0A@@glm@@QEAAAEAU01@AEBU01@@Z PROC	; glm::vec<4,float,0>::operator*=<float>, COMDAT

; 597  : 		return (*this = detail::compute_vec4_mul<T, Q, detail::is_aligned<Q>::value>::call(*this, vec<4, T, Q>(v)));

	movups	xmm2, XMMWORD PTR [rdx]
	mov	rax, rcx

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movaps	xmm0, xmm2
	movaps	xmm1, xmm2
	mulss	xmm0, DWORD PTR [rcx]
	shufps	xmm1, xmm2, 85				; 00000055H
	mulss	xmm1, DWORD PTR [rcx+4]

; 597  : 		return (*this = detail::compute_vec4_mul<T, Q, detail::is_aligned<Q>::value>::call(*this, vec<4, T, Q>(v)));

	movss	DWORD PTR [rcx], xmm0

; 31   : 			return vec<4, T, Q>(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movaps	xmm0, xmm2
	shufps	xmm0, xmm2, 170				; 000000aaH
	mulss	xmm0, DWORD PTR [rcx+8]
	shufps	xmm2, xmm2, 255				; 000000ffH
	mulss	xmm2, DWORD PTR [rcx+12]

; 597  : 		return (*this = detail::compute_vec4_mul<T, Q, detail::is_aligned<Q>::value>::call(*this, vec<4, T, Q>(v)));

	movss	DWORD PTR [rcx+4], xmm1
	movss	DWORD PTR [rcx+8], xmm0
	movss	DWORD PTR [rcx+12], xmm2

; 598  : 	}

	ret	0
??$?XM@?$vec@$03M$0A@@glm@@QEAAAEAU01@AEBU01@@Z ENDP	; glm::vec<4,float,0>::operator*=<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Construct_in_place@U?$vec@$02M$0A@@glm@@U12@@std@@YAXAEAU?$vec@$02M$0A@@glm@@$$QEAU12@@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@U?$vec@$02M$0A@@glm@@U12@@std@@YAXAEAU?$vec@$02M$0A@@glm@@$$QEAU12@@Z PROC ; std::_Construct_in_place<glm::vec<3,float,0>,glm::vec<3,float,0> >, COMDAT

; 248  : #if _HAS_CXX20
; 249  :     if (_STD is_constant_evaluated()) {
; 250  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 251  :     } else
; 252  : #endif // _HAS_CXX20
; 253  :     {
; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	movsd	xmm0, QWORD PTR [rdx]
	movsd	QWORD PTR [rcx], xmm0
	mov	eax, DWORD PTR [rdx+8]
	mov	DWORD PTR [rcx+8], eax

; 255  :     }
; 256  : }

	ret	0
??$_Construct_in_place@U?$vec@$02M$0A@@glm@@U12@@std@@YAXAEAU?$vec@$02M$0A@@glm@@$$QEAU12@@Z ENDP ; std::_Construct_in_place<glm::vec<3,float,0>,glm::vec<3,float,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z PROC ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundBphsh * const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z ENDP ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundBphsh * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundBphsh *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >, COMDAT

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN69:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	r11, rdx

; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rcx, rdx
	je	$LN3@Uninitiali
	mov	r10, rbx
	mov	QWORD PTR [rsp+56], rdi
	sub	r10, rcx
	lea	r8, QWORD PTR [rcx+64]
	xor	edi, edi
	npad	10
$LL4@Uninitiali:
	mov	eax, DWORD PTR [r8-64]

; 1803 :         ++_Last;

	lea	r8, QWORD PTR [r8+128]
	mov	DWORD PTR [rbx], eax
	movzx	eax, WORD PTR [r8-188]
	mov	WORD PTR [rbx+4], ax
	sub	rbx, -128				; ffffffffffffff80H
	movzx	eax, WORD PTR [r8-186]
	mov	WORD PTR [r10+r8-186], ax
	movzx	eax, WORD PTR [r8-184]
	mov	WORD PTR [r10+r8-184], ax
	movzx	eax, WORD PTR [r8-182]
	mov	WORD PTR [r10+r8-182], ax
	mov	eax, DWORD PTR [r8-180]
	mov	DWORD PTR [r10+r8-180], eax
	mov	eax, DWORD PTR [r8-176]
	mov	DWORD PTR [r10+r8-176], eax
	mov	eax, DWORD PTR [r8-172]
	mov	DWORD PTR [r10+r8-172], eax
	mov	eax, DWORD PTR [r8-168]
	mov	DWORD PTR [r10+r8-168], eax
	mov	eax, DWORD PTR [r8-164]
	mov	DWORD PTR [r10+r8-164], eax
	mov	eax, DWORD PTR [r8-160]
	mov	DWORD PTR [r10+r8-160], eax
	mov	eax, DWORD PTR [r8-156]
	mov	DWORD PTR [r10+r8-156], eax
	mov	eax, DWORD PTR [r8-152]
	mov	DWORD PTR [r10+r8-152], eax
	mov	eax, DWORD PTR [r8-148]
	mov	DWORD PTR [r10+r8-148], eax
	mov	eax, DWORD PTR [r8-144]
	mov	DWORD PTR [r8+r10-144], eax
	mov	eax, DWORD PTR [r8-140]
	mov	DWORD PTR [r10+r8-140], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r8-120]
	mov	rcx, QWORD PTR [r8-128]
	mov	rax, QWORD PTR [r8-136]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8-120], rdi
	mov	QWORD PTR [r8-128], rdi
	mov	QWORD PTR [r8-136], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r8+r10-128], rcx
	mov	QWORD PTR [r10+r8-136], rax
	mov	QWORD PTR [r10+r8-120], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r8-96]
	mov	rcx, QWORD PTR [r8-104]
	mov	rax, QWORD PTR [r8-112]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8-96], rdi
	mov	QWORD PTR [r8-104], rdi
	mov	QWORD PTR [r8-112], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r10+r8-104], rcx
	mov	QWORD PTR [r8+r10-112], rax
	mov	QWORD PTR [r10+r8-96], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rcx, QWORD PTR [r8-88]
	mov	r9, QWORD PTR [r8-72]
	mov	rdx, QWORD PTR [r8-80]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8-72], rdi
	mov	QWORD PTR [r8-80], rdi
	mov	QWORD PTR [r8-88], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r8+r10-88], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	lea	rcx, QWORD PTR [r8-64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r10+r8-80], rdx
	mov	QWORD PTR [r10+r8-72], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rcx, r11
	jne	$LL4@Uninitiali
	mov	rdi, QWORD PTR [rsp+56]
$LN3@Uninitiali:

; 1797 :         _Destroy_range(_First, _Last, _Al);

	mov	rdx, rbx
	mov	rcx, rbx
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >

; 1946 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1947 :     }
; 1948 : 
; 1949 :     return _Backout._Release();

	mov	rax, rbx

; 1950 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Uninitialized_move@PEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundBphsh *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	edx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	XMMWORD PTR [rax], xmm0
	movups	XMMWORD PTR [rax+16], xmm0
	movups	XMMWORD PTR [rax+32], xmm0
	movups	XMMWORD PTR [rax+48], xmm0
	movups	XMMWORD PTR [rax+64], xmm0
	movups	XMMWORD PTR [rax+80], xmm0
	movups	XMMWORD PTR [rax+96], xmm0
	movups	XMMWORD PTR [rax+112], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rax+64], rdx
	mov	QWORD PTR [rax+72], rdx
	mov	QWORD PTR [rax+80], rdx
	mov	QWORD PTR [rax+88], rdx
	mov	QWORD PTR [rax+96], rdx
	mov	QWORD PTR [rax+104], rdx
	mov	QWORD PTR [rax+112], rdx
	mov	QWORD PTR [rax+120], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	sub	QWORD PTR [rcx+8], -128			; ffffffffffffff80H

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z PROC ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundExternalMesh * const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z ENDP ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundExternalMesh * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundExternalMesh *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >, COMDAT

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN27:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1940 :             return _Dest + (_ULast - _UFirst);

	mov	rax, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	imul	rbx

; 1941 :         }
; 1942 :     }
; 1943 : 
; 1944 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {
; 1946 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1947 :     }
; 1948 : 
; 1949 :     return _Backout._Release();
; 1950 : }

	mov	rbx, QWORD PTR [rsp+72]
	sar	rdx, 3
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	imul	rax, rdx, 44				; 0000002cH
	add	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundExternalMesh *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xorps	xmm0, xmm0
	xor	edx, edx
	movups	XMMWORD PTR [rax], xmm0
	movups	XMMWORD PTR [rax+16], xmm0
	mov	QWORD PTR [rax+32], rdx
	mov	DWORD PTR [rax+40], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 44			; 0000002cH

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z PROC ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundWaterFall * const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z ENDP ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundWaterFall * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundWaterFall *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >, COMDAT

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN27:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1940 :             return _Dest + (_ULast - _UFirst);

	mov	rax, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	imul	rbx

; 1941 :         }
; 1942 :     }
; 1943 : 
; 1944 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {
; 1946 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1947 :     }
; 1948 : 
; 1949 :     return _Backout._Release();
; 1950 : }

	mov	rbx, QWORD PTR [rsp+72]
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	imul	rax, rdx, 88				; 00000058H
	add	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundWaterFall *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xorps	xmm0, xmm0
	xor	edx, edx
	movups	XMMWORD PTR [rax], xmm0
	movups	XMMWORD PTR [rax+16], xmm0
	movups	XMMWORD PTR [rax+32], xmm0
	movups	XMMWORD PTR [rax+48], xmm0
	movups	XMMWORD PTR [rax+64], xmm0
	mov	QWORD PTR [rax+80], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 88			; 00000058H

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z PROC ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder * const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z ENDP ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >, COMDAT

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN27:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1940 :             return _Dest + (_ULast - _UFirst);

	mov	rax, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	imul	rbx

; 1941 :         }
; 1942 :     }
; 1943 : 
; 1944 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {
; 1946 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1947 :     }
; 1948 : 
; 1949 :     return _Backout._Release();
; 1950 : }

	mov	rbx, QWORD PTR [rsp+72]
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	imul	rax, rdx, 88				; 00000058H
	add	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xorps	xmm0, xmm0
	xor	edx, edx
	movups	XMMWORD PTR [rax], xmm0
	movups	XMMWORD PTR [rax+16], xmm0
	movups	XMMWORD PTR [rax+32], xmm0
	movups	XMMWORD PTR [rax+48], xmm0
	movups	XMMWORD PTR [rax+64], xmm0
	mov	QWORD PTR [rax+80], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 88			; 00000058H

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xorps	xmm0, xmm0
	xor	edx, edx
	movups	XMMWORD PTR [rax], xmm0
	movups	XMMWORD PTR [rax+16], xmm0
	movups	XMMWORD PTR [rax+32], xmm0
	movups	XMMWORD PTR [rax+48], xmm0
	mov	QWORD PTR [rax+64], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 72			; 00000048H

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z PROC ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundHkTagFile * const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z ENDP ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundHkTagFile * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundHkTagFile *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >, COMDAT

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN42:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	r11, rdx

; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rcx, rdx
	je	SHORT $LN3@Uninitiali
	mov	r10, rbx
	mov	QWORD PTR [rsp+56], rdi
	sub	r10, rcx
	lea	r8, QWORD PTR [rcx+16]
	xor	edi, edi
$LL4@Uninitiali:
	mov	eax, DWORD PTR [r8-16]

; 1803 :         ++_Last;

	lea	r8, QWORD PTR [r8+32]
	mov	DWORD PTR [rbx], eax
	add	rbx, 32					; 00000020H
	mov	eax, DWORD PTR [r8-44]
	mov	DWORD PTR [r10+r8-44], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rcx, QWORD PTR [r8-40]
	mov	r9, QWORD PTR [r8-24]
	mov	rdx, QWORD PTR [r8-32]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8-24], rdi
	mov	QWORD PTR [r8-32], rdi
	mov	QWORD PTR [r8-40], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r10+r8-40], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	lea	rcx, QWORD PTR [r8-16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r8+r10-32], rdx
	mov	QWORD PTR [r10+r8-24], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rcx, r11
	jne	SHORT $LL4@Uninitiali
	mov	rdi, QWORD PTR [rsp+56]
$LN3@Uninitiali:

; 1797 :         _Destroy_range(_First, _Last, _Al);

	mov	rdx, rbx
	mov	rcx, rbx
	call	??$_Destroy_range@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAXPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ; std::_Destroy_range<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >

; 1946 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1947 :     }
; 1948 : 
; 1949 :     return _Backout._Release();

	mov	rax, rbx

; 1950 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Uninitialized_move@PEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundHkTagFile *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xor	edx, edx
	mov	QWORD PTR [rax], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rax+8], rdx
	mov	QWORD PTR [rax+16], rdx
	mov	QWORD PTR [rax+24], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 32			; 00000020H

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z PROC ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain * const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z ENDP ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >, COMDAT

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN23:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1940 :             return _Dest + (_ULast - _UFirst);

	sar	rbx, 3
	lea	rax, QWORD PTR [rdi+rbx*8]

; 1941 :         }
; 1942 :     }
; 1943 : 
; 1944 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {
; 1946 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1947 :     }
; 1948 : 
; 1949 :     return _Backout._Release();
; 1950 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xor	edx, edx
	mov	QWORD PTR [rax], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 8

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z PROC ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 * const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z ENDP ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >, COMDAT

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN23:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1940 :             return _Dest + (_ULast - _UFirst);

	sar	rbx, 3
	lea	rax, QWORD PTR [rdi+rbx*8]

; 1941 :         }
; 1942 :     }
; 1943 : 
; 1944 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {
; 1946 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1947 :     }
; 1948 : 
; 1949 :     return _Backout._Release();
; 1950 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xor	edx, edx
	mov	QWORD PTR [rax], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 8

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z PROC ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 * const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z ENDP ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >, COMDAT

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN27:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1940 :             return _Dest + (_ULast - _UFirst);

	and	rbx, -16
	lea	rax, QWORD PTR [rdi+rbx]

; 1941 :         }
; 1942 :     }
; 1943 : 
; 1944 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {
; 1946 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1947 :     }
; 1948 : 
; 1949 :     return _Backout._Release();
; 1950 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rax], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 16

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z PROC ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 * const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z ENDP ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >, COMDAT

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN27:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1940 :             return _Dest + (_ULast - _UFirst);

	mov	rax, 7378697629483820647		; 6666666666666667H
	imul	rbx

; 1941 :         }
; 1942 :     }
; 1943 : 
; 1944 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {
; 1946 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1947 :     }
; 1948 : 
; 1949 :     return _Backout._Release();
; 1950 : }

	mov	rbx, QWORD PTR [rsp+72]
	sar	rdx, 3
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	lea	rax, QWORD PTR [rdx+rdx*4]
	lea	rax, QWORD PTR [rdi+rax*4]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xorps	xmm0, xmm0
	xor	edx, edx
	movups	XMMWORD PTR [rax], xmm0
	mov	DWORD PTR [rax+16], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 20

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rax], xmm0
	movups	XMMWORD PTR [rax+16], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 32			; 00000020H

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z PROC ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 * const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA?A_TAEBQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z ENDP ; std::_Get_unwrapped<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_move@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z PROC ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >, COMDAT

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN27:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1940 :             return _Dest + (_ULast - _UFirst);

	and	rbx, -16
	lea	rax, QWORD PTR [rdi+rbx]

; 1941 :         }
; 1942 :     }
; 1943 : 
; 1944 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {
; 1946 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1947 :     }
; 1948 : 
; 1949 :     return _Backout._Release();
; 1950 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@0PEAU12@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@@Z ENDP ; std::_Uninitialized_move<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rax], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 16

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Zero_range@PEA_K@std@@YAPEA_KQEA_K0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Zero_range@PEA_K@std@@YAPEA_KQEA_K0@Z PROC		; std::_Zero_range<unsigned __int64 *>, COMDAT

; 2017 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 2018 :     char* const _First_ch = reinterpret_cast<char*>(_To_address(_First));
; 2019 :     char* const _Last_ch  = reinterpret_cast<char*>(_To_address(_Last));
; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rdx
	mov	rbx, rdx
	sub	r8, rcx
	xor	edx, edx
	call	memset

; 2021 :     return _Last;

	mov	rax, rbx

; 2022 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Zero_range@PEA_K@std@@YAPEA_KQEA_K0@Z ENDP		; std::_Zero_range<unsigned __int64 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<unsigned __int64> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rcx+8]
	xor	edx, edx
	mov	QWORD PTR [rax], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 8

; 1804 :     }

	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@_K@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<unsigned __int64> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z PROC ; std::destroy_at<PhiveStaticCompound::PhiveStaticCompoundBphsh>, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN106:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	xor	edi, edi
	mov	rcx, QWORD PTR [rcx+104]
	test	rcx, rcx
	je	SHORT $LN12@destroy_at

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+120]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN30@destroy_at

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	$LN83@destroy_at

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN30@destroy_at:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+104], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+112], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+120], rdi
$LN12@destroy_at:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx+80]
	test	rcx, rcx
	je	SHORT $LN39@destroy_at

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+96]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN57@destroy_at

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN83@destroy_at

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN57@destroy_at:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+80], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+88], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+96], rdi
$LN39@destroy_at:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx+56]
	test	rcx, rcx
	je	SHORT $LN68@destroy_at

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+72]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN86@destroy_at

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN83@destroy_at

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN86@destroy_at:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+56], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+64], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+72], rdi
$LN68@destroy_at:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN83@destroy_at:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN103@destroy_at:
??$destroy_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z ENDP ; std::destroy_at<PhiveStaticCompound::PhiveStaticCompoundBphsh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@XZ PROC ; PhiveStaticCompound::PhiveStaticCompoundBphsh::~PhiveStaticCompoundBphsh, COMDAT
$LN98:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	xor	edi, edi
	mov	rcx, QWORD PTR [rcx+104]
	test	rcx, rcx
	je	SHORT $LN6@PhiveStati

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+120]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN24@PhiveStati

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	$LN77@PhiveStati

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN24@PhiveStati:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+104], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+112], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+120], rdi
$LN6@PhiveStati:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx+80]
	test	rcx, rcx
	je	SHORT $LN33@PhiveStati

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+96]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN51@PhiveStati

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN77@PhiveStati

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN51@PhiveStati:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+80], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+88], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+96], rdi
$LN33@PhiveStati:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx+56]
	test	rcx, rcx
	je	SHORT $LN62@PhiveStati

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+72]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN80@PhiveStati

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN77@PhiveStati

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN80@PhiveStati:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+56], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+64], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+72], rdi
$LN62@PhiveStati:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN77@PhiveStati:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN95@PhiveStati:
??1PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@XZ ENDP ; PhiveStaticCompound::PhiveStaticCompoundBphsh::~PhiveStaticCompoundBphsh
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@XZ PROC ; PhiveStaticCompound::PhiveStaticCompoundHkTagFile::~PhiveStaticCompoundHkTagFile, COMDAT
$LN36:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN6@PhiveStati

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+24]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN24@PhiveStati

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN21@PhiveStati

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN24@PhiveStati:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+8], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+16], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+24], rax
$LN6@PhiveStati:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN21@PhiveStati:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@PhiveStati:
??1PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@XZ ENDP ; PhiveStaticCompound::PhiveStaticCompoundHkTagFile::~PhiveStaticCompoundHkTagFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z PROC ; std::destroy_at<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN44:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN12@destroy_at

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+24]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN30@destroy_at

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN27@destroy_at

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN30@destroy_at:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+8], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+16], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+24], rax
$LN12@destroy_at:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN27@destroy_at:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN41@destroy_at:
??$destroy_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YAXQEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z ENDP ; std::destroy_at<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0IA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$ = 48
??$_Get_size_of_n@$0IA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<128>, COMDAT

; 65   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN7:
	sub	rsp, 40					; 00000028H

; 66   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;
; 67   : 
; 68   :     if constexpr (_Overflow_is_possible) {
; 69   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 70   :         if (_Count > _Max_possible) {

	mov	rax, 144115188075855871			; 01ffffffffffffffH
	cmp	rcx, rax
	ja	SHORT $LN6@Get_size_o

; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	shl	rcx, 7
	mov	rax, rcx

; 76   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN6@Get_size_o:

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN4@Get_size_o:
??$_Get_size_of_n@$0IA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<128>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0CM@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$ = 48
??$_Get_size_of_n@$0CM@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<44>, COMDAT

; 65   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN7:
	sub	rsp, 40					; 00000028H

; 66   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;
; 67   : 
; 68   :     if constexpr (_Overflow_is_possible) {
; 69   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 70   :         if (_Count > _Max_possible) {

	mov	rax, 419244183493398900			; 05d1745d1745d174H
	cmp	rcx, rax
	ja	SHORT $LN6@Get_size_o

; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	imul	rax, rcx, 44				; 0000002cH

; 76   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN6@Get_size_o:

; 71   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN4@Get_size_o:
??$_Get_size_of_n@$0CM@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<44>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??_GPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAAPEAXI@Z PROC ; PhiveStaticCompound::PhiveStaticCompoundBphsh::`scalar deleting destructor', COMDAT
$LN103:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	xor	edi, edi
	mov	rcx, QWORD PTR [rcx+104]
	test	rcx, rcx
	je	SHORT $LN10@scalar

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+120]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN28@scalar

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	$LN81@scalar

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN28@scalar:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+104], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+112], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+120], rdi
$LN10@scalar:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx+80]
	test	rcx, rcx
	je	SHORT $LN37@scalar

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+96]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN55@scalar

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN81@scalar

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN55@scalar:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+80], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+88], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+96], rdi
$LN37@scalar:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx+56]
	test	rcx, rcx
	je	SHORT $LN66@scalar

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+72]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN84@scalar

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN81@scalar

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN84@scalar:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+56], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+64], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+72], rdi
$LN66@scalar:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN81@scalar:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN100@scalar:
??_GPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAAPEAXI@Z ENDP ; PhiveStaticCompound::PhiveStaticCompoundBphsh::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??_GPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAAPEAXI@Z PROC ; PhiveStaticCompound::PhiveStaticCompoundHkTagFile::`scalar deleting destructor', COMDAT
$LN41:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN10@scalar

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+24]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN28@scalar

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN25@scalar

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN28@scalar:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+8], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+16], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+24], rax
$LN10@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN25@scalar:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN38@scalar:
??_GPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAAPEAXI@Z ENDP ; PhiveStaticCompound::PhiveStaticCompoundHkTagFile::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::~vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::~vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -16

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@AEAAXXZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@U?$vec@$02M$0A@@glm@@@std@@YAPEAU?$vec@$02M$0A@@glm@@AEAU12@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U?$vec@$02M$0A@@glm@@@std@@YAPEAU?$vec@$02M$0A@@glm@@AEAU12@@Z PROC ; std::addressof<glm::vec<3,float,0> >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@U?$vec@$02M$0A@@glm@@@std@@YAPEAU?$vec@$02M$0A@@glm@@AEAU12@@Z ENDP ; std::addressof<glm::vec<3,float,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@AEAU12@@Z PROC ; std::move<PhiveStaticCompound::PhiveStaticCompoundBphsh &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::move<PhiveStaticCompound::PhiveStaticCompoundBphsh &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundBphsh>, COMDAT

; 1801 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

	mov	eax, DWORD PTR [rdx]
	mov	r9, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	r8, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r11d, r11d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1801 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

	mov	r10, rcx
	mov	DWORD PTR [r8], eax
	movzx	eax, WORD PTR [rdx+4]
	mov	WORD PTR [r8+4], ax
	movzx	eax, WORD PTR [rdx+6]
	mov	WORD PTR [r8+6], ax
	movzx	eax, WORD PTR [rdx+8]
	mov	WORD PTR [r8+8], ax
	movzx	eax, WORD PTR [rdx+10]
	mov	WORD PTR [r8+10], ax
	mov	eax, DWORD PTR [rdx+12]
	mov	DWORD PTR [r8+12], eax
	mov	eax, DWORD PTR [rdx+16]
	mov	DWORD PTR [r8+16], eax
	mov	eax, DWORD PTR [rdx+20]
	mov	DWORD PTR [r8+20], eax
	mov	eax, DWORD PTR [rdx+24]
	mov	DWORD PTR [r8+24], eax
	mov	eax, DWORD PTR [rdx+28]
	mov	DWORD PTR [r8+28], eax
	mov	eax, DWORD PTR [rdx+32]
	mov	DWORD PTR [r8+32], eax
	mov	eax, DWORD PTR [rdx+36]
	mov	DWORD PTR [r8+36], eax
	mov	eax, DWORD PTR [rdx+40]
	mov	DWORD PTR [r8+40], eax
	mov	eax, DWORD PTR [rdx+44]
	mov	DWORD PTR [r8+44], eax
	mov	eax, DWORD PTR [rdx+48]
	mov	DWORD PTR [r8+48], eax
	mov	eax, DWORD PTR [rdx+52]
	mov	DWORD PTR [r8+52], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rdx+72]
	mov	rcx, QWORD PTR [r9+64]
	mov	rax, QWORD PTR [r9+56]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r9+72], r11
	mov	QWORD PTR [r9+64], r11
	mov	QWORD PTR [r9+56], r11
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r8+56], rax
	mov	QWORD PTR [r8+64], rcx
	mov	QWORD PTR [r8+72], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r9+96]
	mov	rcx, QWORD PTR [r9+88]
	mov	rax, QWORD PTR [r9+80]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r9+96], r11
	mov	QWORD PTR [r9+88], r11
	mov	QWORD PTR [r9+80], r11
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r8+80], rax
	mov	QWORD PTR [r8+88], rcx
	mov	QWORD PTR [r8+96], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r9+120]
	mov	rcx, QWORD PTR [r9+112]
	mov	rax, QWORD PTR [r9+104]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r9+120], r11
	mov	QWORD PTR [r9+112], r11
	mov	QWORD PTR [r9+104], r11
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r8+104], rax
	mov	QWORD PTR [r8+112], rcx
	mov	QWORD PTR [r8+120], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	sub	QWORD PTR [r10+8], -128			; ffffffffffffff80H

; 1804 :     }

	ret	0
??$_Emplace_back@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundBphsh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::construct<PhiveStaticCompound::PhiveStaticCompoundBphsh>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	XMMWORD PTR [rdx], xmm0
	movups	XMMWORD PTR [rdx+16], xmm0
	movups	XMMWORD PTR [rdx+32], xmm0
	movups	XMMWORD PTR [rdx+48], xmm0
	movups	XMMWORD PTR [rdx+64], xmm0
	movups	XMMWORD PTR [rdx+80], xmm0
	movups	XMMWORD PTR [rdx+96], xmm0
	movups	XMMWORD PTR [rdx+112], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rdx+64], rax
	mov	QWORD PTR [rdx+72], rax
	mov	QWORD PTR [rdx+80], rax
	mov	QWORD PTR [rdx+88], rax
	mov	QWORD PTR [rdx+96], rax
	mov	QWORD PTR [rdx+104], rax
	mov	QWORD PTR [rdx+112], rax
	mov	QWORD PTR [rdx+120], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::construct<PhiveStaticCompound::PhiveStaticCompoundBphsh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@XZ PROC ; PhiveStaticCompound::PhiveStaticCompoundBphsh::PhiveStaticCompoundBphsh, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx+56], rax
	mov	QWORD PTR [rcx+64], rax
	mov	QWORD PTR [rcx+72], rax
	mov	QWORD PTR [rcx+80], rax
	mov	QWORD PTR [rcx+88], rax
	mov	QWORD PTR [rcx+96], rax
	mov	QWORD PTR [rcx+104], rax
	mov	QWORD PTR [rcx+112], rax
	mov	QWORD PTR [rcx+120], rax
	mov	rax, rcx
	ret	0
??0PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@XZ ENDP ; PhiveStaticCompound::PhiveStaticCompoundBphsh::PhiveStaticCompoundBphsh
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@XZ PROC ; PhiveStaticCompound::PhiveStaticCompoundHkTagFile::PhiveStaticCompoundHkTagFile, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	QWORD PTR [rcx+24], rax
	mov	rax, rcx
	ret	0
??0PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@XZ ENDP ; PhiveStaticCompound::PhiveStaticCompoundHkTagFile::PhiveStaticCompoundHkTagFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@AEAU12@@Z PROC ; std::move<PhiveStaticCompound::PhiveStaticCompoundExternalMesh &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::move<PhiveStaticCompound::PhiveStaticCompoundExternalMesh &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@00@Z PROC ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundExternalMesh *,PhiveStaticCompound::PhiveStaticCompoundExternalMesh *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	rax, QWORD PTR [rdi+rbx]

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@PEAU12@00@Z ENDP ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundExternalMesh *,PhiveStaticCompound::PhiveStaticCompoundExternalMesh *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_To_address@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_To_address@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z PROC ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundExternalMesh *>, COMDAT

; 4395 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4396 :     return _STD to_address(_Val);

	mov	rax, QWORD PTR [rcx]

; 4397 : }

	ret	0
??$_To_address@PEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z ENDP ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundExternalMesh *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1802 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	r8, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	XMMWORD PTR [r8], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [r8+16], xmm1
	movsd	xmm0, QWORD PTR [rdx+32]
	movsd	QWORD PTR [r8+32], xmm0
	mov	eax, DWORD PTR [rdx+40]
	mov	DWORD PTR [r8+40], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 44			; 0000002cH

; 1804 :     }

	ret	0
??$_Emplace_back@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::construct<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	movups	XMMWORD PTR [rdx], xmm0
	movups	XMMWORD PTR [rdx+16], xmm0
	mov	QWORD PTR [rdx+32], rax
	mov	DWORD PTR [rdx+40], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::construct<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@AEAU12@@Z PROC ; std::move<PhiveStaticCompound::PhiveStaticCompoundWaterFall &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::move<PhiveStaticCompound::PhiveStaticCompoundWaterFall &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundWaterFall>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@00@Z PROC ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundWaterFall *,PhiveStaticCompound::PhiveStaticCompoundWaterFall *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	rax, QWORD PTR [rdi+rbx]

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@PEAU12@00@Z ENDP ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundWaterFall *,PhiveStaticCompound::PhiveStaticCompoundWaterFall *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_To_address@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_To_address@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z PROC ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundWaterFall *>, COMDAT

; 4395 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4396 :     return _STD to_address(_Val);

	mov	rax, QWORD PTR [rcx]

; 4397 : }

	ret	0
??$_To_address@PEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z ENDP ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundWaterFall *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundWaterFall>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1802 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	XMMWORD PTR [rax], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rax+16], xmm1
	movups	xmm0, XMMWORD PTR [rdx+32]
	movups	XMMWORD PTR [rax+32], xmm0
	movups	xmm1, XMMWORD PTR [rdx+48]
	movups	XMMWORD PTR [rax+48], xmm1
	movups	xmm0, XMMWORD PTR [rdx+64]
	movups	XMMWORD PTR [rax+64], xmm0
	movsd	xmm1, QWORD PTR [rdx+80]
	movsd	QWORD PTR [rax+80], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 88			; 00000058H

; 1804 :     }

	ret	0
??$_Emplace_back@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterFall>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	movups	XMMWORD PTR [rdx], xmm0
	movups	XMMWORD PTR [rdx+16], xmm0
	movups	XMMWORD PTR [rdx+32], xmm0
	movups	XMMWORD PTR [rdx+48], xmm0
	movups	XMMWORD PTR [rdx+64], xmm0
	mov	QWORD PTR [rdx+80], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@AEAU12@@Z PROC ; std::move<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::move<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@00@Z PROC ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder *,PhiveStaticCompound::PhiveStaticCompoundWaterCylinder *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	rax, QWORD PTR [rdi+rbx]

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@PEAU12@00@Z ENDP ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder *,PhiveStaticCompound::PhiveStaticCompoundWaterCylinder *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_To_address@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_To_address@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z PROC ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder *>, COMDAT

; 4395 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4396 :     return _STD to_address(_Val);

	mov	rax, QWORD PTR [rcx]

; 4397 : }

	ret	0
??$_To_address@PEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z ENDP ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1802 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	XMMWORD PTR [rax], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rax+16], xmm1
	movups	xmm0, XMMWORD PTR [rdx+32]
	movups	XMMWORD PTR [rax+32], xmm0
	movups	xmm1, XMMWORD PTR [rdx+48]
	movups	XMMWORD PTR [rax+48], xmm1
	movups	xmm0, XMMWORD PTR [rdx+64]
	movups	XMMWORD PTR [rax+64], xmm0
	movsd	xmm1, QWORD PTR [rdx+80]
	movsd	QWORD PTR [rax+80], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 88			; 00000058H

; 1804 :     }

	ret	0
??$_Emplace_back@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	movups	XMMWORD PTR [rdx], xmm0
	movups	XMMWORD PTR [rdx+16], xmm0
	movups	XMMWORD PTR [rdx+32], xmm0
	movups	XMMWORD PTR [rdx+48], xmm0
	movups	XMMWORD PTR [rdx+64], xmm0
	mov	QWORD PTR [rdx+80], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterBox>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	movups	XMMWORD PTR [rdx], xmm0
	movups	XMMWORD PTR [rdx+16], xmm0
	movups	XMMWORD PTR [rdx+32], xmm0
	movups	XMMWORD PTR [rdx+48], xmm0
	mov	QWORD PTR [rdx+64], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterBox> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterBox>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@AEAU12@@Z PROC ; std::move<PhiveStaticCompound::PhiveStaticCompoundHkTagFile &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::move<PhiveStaticCompound::PhiveStaticCompoundHkTagFile &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>, COMDAT

; 1801 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

	mov	eax, DWORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r11d, r11d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	r9, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1801 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

	mov	r10, rcx
	mov	DWORD PTR [r9], eax
	mov	eax, DWORD PTR [rdx+4]
	mov	DWORD PTR [r9+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rdx+24]
	mov	rcx, QWORD PTR [rdx+16]
	mov	rax, QWORD PTR [rdx+8]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdx+24], r11
	mov	QWORD PTR [rdx+16], r11
	mov	QWORD PTR [rdx+8], r11
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r9+8], rax
	mov	QWORD PTR [r9+16], rcx
	mov	QWORD PTR [r9+24], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [r10+8], 32			; 00000020H

; 1804 :     }

	ret	0
??$_Emplace_back@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::construct<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	mov	QWORD PTR [rdx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rdx+8], rax
	mov	QWORD PTR [rdx+16], rax
	mov	QWORD PTR [rdx+24], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::construct<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@AEAU12@@Z PROC ; std::move<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::move<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@00@Z PROC ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain *,PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	rax, QWORD PTR [rdi+rbx]

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@PEAU12@00@Z ENDP ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain *,PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_To_address@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_To_address@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z PROC ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain *>, COMDAT

; 4395 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4396 :     return _STD to_address(_Val);

	mov	rax, QWORD PTR [rcx]

; 4397 : }

	ret	0
??$_To_address@PEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z ENDP ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>, COMDAT

; 1802 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	r8, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [r8], rax

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 8

; 1804 :     }

	ret	0
??$_Emplace_back@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::construct<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	mov	QWORD PTR [rdx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::construct<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@AEAU12@@Z PROC ; std::move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@00@Z PROC ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 *,PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	rax, QWORD PTR [rdi+rbx]

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@PEAU12@00@Z ENDP ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 *,PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_To_address@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_To_address@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z PROC ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 *>, COMDAT

; 4395 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4396 :     return _STD to_address(_Val);

	mov	rax, QWORD PTR [rcx]

; 4397 : }

	ret	0
??$_To_address@PEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z ENDP ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>, COMDAT

; 1802 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	r8, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [r8], rax

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 8

; 1804 :     }

	ret	0
??$_Emplace_back@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	mov	QWORD PTR [rdx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@AEAU12@@Z PROC ; std::move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@00@Z PROC ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 *,PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	rax, QWORD PTR [rdi+rbx]

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@PEAU12@00@Z ENDP ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 *,PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_To_address@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_To_address@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z PROC ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 *>, COMDAT

; 4395 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4396 :     return _STD to_address(_Val);

	mov	rax, QWORD PTR [rcx]

; 4397 : }

	ret	0
??$_To_address@PEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z ENDP ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>, COMDAT

; 1802 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rax], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 16

; 1804 :     }

	ret	0
??$_Emplace_back@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	XMMWORD PTR [rdx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@AEAU12@@Z PROC ; std::move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::move<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@00@Z PROC ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 *,PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	rax, QWORD PTR [rdi+rbx]

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@PEAU12@00@Z ENDP ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 *,PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_To_address@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_To_address@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z PROC ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 *>, COMDAT

; 4395 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4396 :     return _STD to_address(_Val);

	mov	rax, QWORD PTR [rcx]

; 4397 : }

	ret	0
??$_To_address@PEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z ENDP ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>, COMDAT

; 1802 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	r8, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [r8], xmm0
	mov	eax, DWORD PTR [rdx+16]
	mov	DWORD PTR [r8+16], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 20

; 1804 :     }

	ret	0
??$_Emplace_back@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	movups	XMMWORD PTR [rdx], xmm0
	mov	DWORD PTR [rdx+16], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::construct<PhiveStaticCompound::PhiveStaticCompoundActorLink>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	XMMWORD PTR [rdx], xmm0
	movups	XMMWORD PTR [rdx+16], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundActorLink> >::construct<PhiveStaticCompound::PhiveStaticCompoundActorLink>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAU12@@Z PROC ; std::move<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::move<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@Z PROC ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@Z ENDP ; std::_Unfancy<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@00@Z PROC ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *>, COMDAT

; 4526 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

$LN4:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 4527 :     auto _FirstPtr              = _To_address(_First);
; 4528 :     auto _LastPtr               = _To_address(_Last);
; 4529 :     auto _DestPtr               = _To_address(_Dest);
; 4530 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));
; 4531 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));
; 4532 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));
; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 4535 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4536 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	lea	rax, QWORD PTR [rdi+rbx]

; 4537 :     } else {
; 4538 :         return _Dest + (_LastPtr - _FirstPtr);
; 4539 :     }
; 4540 : }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU12@00@Z ENDP ; std::_Copy_memmove<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_To_address@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_To_address@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z PROC ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *>, COMDAT

; 4395 :     _STL_INTERNAL_STATIC_ASSERT(contiguous_iterator<_Iter>);
; 4396 :     return _STD to_address(_Val);

	mov	rax, QWORD PTR [rcx]

; 4397 : }

	ret	0
??$_To_address@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA?A_PAEBQEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z ENDP ; std::_To_address<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
this$ = 8
<_Vals_0>$ = 16
??$_Emplace_back@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>, COMDAT

; 1802 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	rax, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rax], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rcx+8], 16

; 1804 :     }

	ret	0
??$_Emplace_back@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@?$_Uninitialized_backout_al@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAAX$$QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Emplace_back<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::construct<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	XMMWORD PTR [rdx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$V@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::construct<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@_K$$V@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SAXAEAV?$allocator@_K@1@QEA_K@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$construct@_K$$V@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SAXAEAV?$allocator@_K@1@QEA_K@Z PROC ; std::_Default_allocator_traits<std::allocator<unsigned __int64> >::construct<unsigned __int64>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	mov	QWORD PTR [rdx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@_K$$V@?$_Default_allocator_traits@V?$allocator@_K@std@@@std@@SAXAEAV?$allocator@_K@1@QEA_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<unsigned __int64> >::construct<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@AEAU12@@Z PROC ; std::forward<PhiveStaticCompound::PhiveStaticCompoundBphsh>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::forward<PhiveStaticCompound::PhiveStaticCompoundBphsh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@$$QEAU34@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::construct<PhiveStaticCompound::PhiveStaticCompoundBphsh,PhiveStaticCompound::PhiveStaticCompoundBphsh>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	mov	eax, DWORD PTR [r8]
	mov	r9, rdx
	mov	DWORD PTR [rdx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r10d, r10d
	movzx	eax, WORD PTR [r8+4]
	mov	WORD PTR [rdx+4], ax
	movzx	eax, WORD PTR [r8+6]
	mov	WORD PTR [rdx+6], ax
	movzx	eax, WORD PTR [r8+8]
	mov	WORD PTR [rdx+8], ax
	movzx	eax, WORD PTR [r8+10]
	mov	WORD PTR [rdx+10], ax
	mov	eax, DWORD PTR [r8+12]
	mov	DWORD PTR [rdx+12], eax
	mov	eax, DWORD PTR [r8+16]
	mov	DWORD PTR [rdx+16], eax
	mov	eax, DWORD PTR [r8+20]
	mov	DWORD PTR [rdx+20], eax
	mov	eax, DWORD PTR [r8+24]
	mov	DWORD PTR [rdx+24], eax
	mov	eax, DWORD PTR [r8+28]
	mov	DWORD PTR [rdx+28], eax
	mov	eax, DWORD PTR [r8+32]
	mov	DWORD PTR [rdx+32], eax
	mov	eax, DWORD PTR [r8+36]
	mov	DWORD PTR [rdx+36], eax
	mov	eax, DWORD PTR [r8+40]
	mov	DWORD PTR [rdx+40], eax
	mov	eax, DWORD PTR [r8+44]
	mov	DWORD PTR [rdx+44], eax
	mov	eax, DWORD PTR [r8+48]
	mov	DWORD PTR [rdx+48], eax
	mov	eax, DWORD PTR [r8+52]
	mov	DWORD PTR [rdx+52], eax

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r8+72]
	mov	rcx, QWORD PTR [r8+64]
	mov	rax, QWORD PTR [r8+56]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8+72], r10
	mov	QWORD PTR [r8+64], r10
	mov	QWORD PTR [r8+56], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r9+56], rax
	mov	QWORD PTR [r9+64], rcx
	mov	QWORD PTR [r9+72], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r8+96]
	mov	rcx, QWORD PTR [r8+88]
	mov	rax, QWORD PTR [r8+80]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8+96], r10
	mov	QWORD PTR [r8+88], r10
	mov	QWORD PTR [r8+80], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r9+80], rax
	mov	QWORD PTR [r9+88], rcx
	mov	QWORD PTR [r9+96], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r8+120]
	mov	rcx, QWORD PTR [r8+112]
	mov	rax, QWORD PTR [r8+104]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8+120], r10
	mov	QWORD PTR [r8+112], r10
	mov	QWORD PTR [r8+104], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r9+104], rax
	mov	QWORD PTR [r9+112], rcx
	mov	QWORD PTR [r9+120], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphsh> >::construct<PhiveStaticCompound::PhiveStaticCompoundBphsh,PhiveStaticCompound::PhiveStaticCompoundBphsh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundBphsh,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	XMMWORD PTR [rcx], xmm0
	movups	XMMWORD PTR [rcx+16], xmm0
	movups	XMMWORD PTR [rcx+32], xmm0
	movups	XMMWORD PTR [rcx+48], xmm0
	movups	XMMWORD PTR [rcx+64], xmm0
	movups	XMMWORD PTR [rcx+80], xmm0
	movups	XMMWORD PTR [rcx+96], xmm0
	movups	XMMWORD PTR [rcx+112], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx+64], rax
	mov	QWORD PTR [rcx+72], rax
	mov	QWORD PTR [rcx+80], rax
	mov	QWORD PTR [rcx+88], rax
	mov	QWORD PTR [rcx+96], rax
	mov	QWORD PTR [rcx+104], rax
	mov	QWORD PTR [rcx+112], rax
	mov	QWORD PTR [rcx+120], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundBphsh,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$to_address@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Val$ = 8
??$to_address@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@@Z PROC ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>, COMDAT

; 328  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 329  :     return _Val;

	mov	rax, rcx

; 330  : }

	ret	0
??$to_address@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@AEAU12@@Z PROC ; std::forward<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::forward<PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@$$QEAU34@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::construct<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,PhiveStaticCompound::PhiveStaticCompoundExternalMesh>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [r8]
	movups	XMMWORD PTR [rdx], xmm0
	movups	xmm1, XMMWORD PTR [r8+16]
	movups	XMMWORD PTR [rdx+16], xmm1
	movsd	xmm0, QWORD PTR [r8+32]
	movsd	QWORD PTR [rdx+32], xmm0
	mov	eax, DWORD PTR [r8+40]
	mov	DWORD PTR [rdx+40], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundExternalMesh> >::construct<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,PhiveStaticCompound::PhiveStaticCompoundExternalMesh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rcx], xmm0
	movups	XMMWORD PTR [rcx+16], xmm0
	mov	QWORD PTR [rcx+32], rax
	mov	DWORD PTR [rcx+40], eax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$to_address@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Val$ = 8
??$to_address@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@@Z PROC ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundWaterFall>, COMDAT

; 328  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 329  :     return _Val;

	mov	rax, rcx

; 330  : }

	ret	0
??$to_address@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@AEAU12@@Z PROC ; std::forward<PhiveStaticCompound::PhiveStaticCompoundWaterFall>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::forward<PhiveStaticCompound::PhiveStaticCompoundWaterFall>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@$$QEAU34@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterFall,PhiveStaticCompound::PhiveStaticCompoundWaterFall>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [r8]
	movups	XMMWORD PTR [rdx], xmm0
	movups	xmm1, XMMWORD PTR [r8+16]
	movups	XMMWORD PTR [rdx+16], xmm1
	movups	xmm0, XMMWORD PTR [r8+32]
	movups	XMMWORD PTR [rdx+32], xmm0
	movups	xmm1, XMMWORD PTR [r8+48]
	movups	XMMWORD PTR [rdx+48], xmm1
	movups	xmm0, XMMWORD PTR [r8+64]
	movups	XMMWORD PTR [rdx+64], xmm0
	movsd	xmm1, QWORD PTR [r8+80]
	movsd	QWORD PTR [rdx+80], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterFall> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterFall,PhiveStaticCompound::PhiveStaticCompoundWaterFall>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterFall,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

	xorps	xmm0, xmm0

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	movups	XMMWORD PTR [rcx+16], xmm0
	movups	XMMWORD PTR [rcx+32], xmm0
	movups	XMMWORD PTR [rcx+48], xmm0
	movups	XMMWORD PTR [rcx+64], xmm0
	mov	QWORD PTR [rcx+80], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterFall,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$to_address@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Val$ = 8
??$to_address@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@@Z PROC ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>, COMDAT

; 328  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 329  :     return _Val;

	mov	rax, rcx

; 330  : }

	ret	0
??$to_address@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@AEAU12@@Z PROC ; std::forward<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::forward<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@$$QEAU34@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [r8]
	movups	XMMWORD PTR [rdx], xmm0
	movups	xmm1, XMMWORD PTR [r8+16]
	movups	XMMWORD PTR [rdx+16], xmm1
	movups	xmm0, XMMWORD PTR [r8+32]
	movups	XMMWORD PTR [rdx+32], xmm0
	movups	xmm1, XMMWORD PTR [r8+48]
	movups	XMMWORD PTR [rdx+48], xmm1
	movups	xmm0, XMMWORD PTR [r8+64]
	movups	XMMWORD PTR [rdx+64], xmm0
	movsd	xmm1, QWORD PTR [r8+80]
	movsd	QWORD PTR [rdx+80], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder> >::construct<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,PhiveStaticCompound::PhiveStaticCompoundWaterCylinder>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

	xorps	xmm0, xmm0

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	movups	XMMWORD PTR [rcx+16], xmm0
	movups	XMMWORD PTR [rcx+32], xmm0
	movups	XMMWORD PTR [rcx+48], xmm0
	movups	XMMWORD PTR [rcx+64], xmm0
	mov	QWORD PTR [rcx+80], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterBox,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

	xorps	xmm0, xmm0

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	movups	XMMWORD PTR [rcx+16], xmm0
	movups	XMMWORD PTR [rcx+32], xmm0
	movups	XMMWORD PTR [rcx+48], xmm0
	mov	QWORD PTR [rcx+64], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundWaterBox@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundWaterBox@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterBox,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@AEAU12@@Z PROC ; std::forward<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::forward<PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@$$QEAU34@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::construct<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,PhiveStaticCompound::PhiveStaticCompoundHkTagFile>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	mov	eax, DWORD PTR [r8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r10d, r10d
	mov	DWORD PTR [rdx], eax
	mov	eax, DWORD PTR [r8+4]
	mov	DWORD PTR [rdx+4], eax

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r9, QWORD PTR [r8+24]
	mov	rcx, QWORD PTR [r8+16]
	mov	rax, QWORD PTR [r8+8]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8+24], r10
	mov	QWORD PTR [r8+16], r10
	mov	QWORD PTR [r8+8], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rdx+8], rax
	mov	QWORD PTR [rdx+16], rcx
	mov	QWORD PTR [rdx+24], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundHkTagFile> >::construct<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,PhiveStaticCompound::PhiveStaticCompoundHkTagFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	QWORD PTR [rcx+24], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$to_address@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Val$ = 8
??$to_address@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@@Z PROC ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>, COMDAT

; 328  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 329  :     return _Val;

	mov	rax, rcx

; 330  : }

	ret	0
??$to_address@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@AEAU12@@Z PROC ; std::forward<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::forward<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@$$QEAU34@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::construct<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain> >::construct<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$to_address@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Val$ = 8
??$to_address@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@@Z PROC ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>, COMDAT

; 328  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 329  :     return _Val;

	mov	rax, rcx

; 330  : }

	ret	0
??$to_address@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@AEAU12@@Z PROC ; std::forward<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::forward<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@$$QEAU34@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,PhiveStaticCompound::PhiveStaticCompoundFixedOffset2>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$to_address@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Val$ = 8
??$to_address@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@@Z PROC ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>, COMDAT

; 328  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 329  :     return _Val;

	mov	rax, rcx

; 330  : }

	ret	0
??$to_address@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@AEAU12@@Z PROC ; std::forward<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::forward<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@$$QEAU34@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [r8]
	movups	XMMWORD PTR [rdx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,PhiveStaticCompound::PhiveStaticCompoundFixedOffset1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

	xorps	xmm0, xmm0

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rcx
	movups	XMMWORD PTR [rcx], xmm0

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$to_address@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Val$ = 8
??$to_address@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@@Z PROC ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>, COMDAT

; 328  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 329  :     return _Val;

	mov	rax, rcx

; 330  : }

	ret	0
??$to_address@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@AEAU12@@Z PROC ; std::forward<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::forward<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@$$QEAU34@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [r8]
	movups	XMMWORD PTR [rdx], xmm0
	mov	eax, DWORD PTR [r8+16]
	mov	DWORD PTR [rdx+16], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0> >::construct<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,PhiveStaticCompound::PhiveStaticCompoundFixedOffset0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rcx], xmm0
	mov	DWORD PTR [rcx+16], eax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundActorLink,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

	xorps	xmm0, xmm0

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rcx
	movups	XMMWORD PTR [rcx], xmm0
	movups	XMMWORD PTR [rcx+16], xmm0

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundActorLink@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundActorLink@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundActorLink,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$to_address@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Val$ = 8
??$to_address@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@@Z PROC ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>, COMDAT

; 328  :     static_assert(!is_function_v<_Ty>, "N4950 [pointer.conversion]/1: Mandates: T is not a function type.");
; 329  :     return _Val;

	mov	rax, rcx

; 330  : }

	ret	0
??$to_address@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::to_address<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAU12@@Z PROC ; std::forward<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA$$QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAU12@@Z ENDP ; std::forward<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$QEAU34@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::construct<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [r8]
	movups	XMMWORD PTR [rdx], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	ret	0
??$construct@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@U12@@?$_Default_allocator_traits@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@SAXAEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@QEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::construct<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

	xorps	xmm0, xmm0

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rcx
	movups	XMMWORD PTR [rcx], xmm0

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$V$0A@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@_K$$V$0A@@std@@YAPEA_KQEA_K@Z
_TEXT	SEGMENT
_Location$ = 8
??$construct_at@_K$$V$0A@@std@@YAPEA_KQEA_K@Z PROC	; std::construct_at<unsigned __int64,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@_K$$V$0A@@std@@YAPEA_KQEA_K@Z ENDP	; std::construct_at<unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAA@XZ PROC ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@QEAA@XZ ENDP ; std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundBphsh,PhiveStaticCompound::PhiveStaticCompoundBphsh,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

	mov	eax, DWORD PTR [rdx]
	mov	r8, rdx
	mov	DWORD PTR [rcx], eax
	mov	r9, rcx
	movzx	eax, WORD PTR [rdx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r10d, r10d
	mov	WORD PTR [rcx+4], ax
	movzx	eax, WORD PTR [rdx+6]
	mov	WORD PTR [rcx+6], ax
	movzx	eax, WORD PTR [rdx+8]
	mov	WORD PTR [rcx+8], ax
	movzx	eax, WORD PTR [rdx+10]
	mov	WORD PTR [rcx+10], ax
	mov	eax, DWORD PTR [rdx+12]
	mov	DWORD PTR [rcx+12], eax
	mov	eax, DWORD PTR [rdx+16]
	mov	DWORD PTR [rcx+16], eax
	mov	eax, DWORD PTR [rdx+20]
	mov	DWORD PTR [rcx+20], eax
	mov	eax, DWORD PTR [rdx+24]
	mov	DWORD PTR [rcx+24], eax
	mov	eax, DWORD PTR [rdx+28]
	mov	DWORD PTR [rcx+28], eax
	mov	eax, DWORD PTR [rdx+32]
	mov	DWORD PTR [rcx+32], eax
	mov	eax, DWORD PTR [rdx+36]
	mov	DWORD PTR [rcx+36], eax
	mov	eax, DWORD PTR [rdx+40]
	mov	DWORD PTR [rcx+40], eax
	mov	eax, DWORD PTR [rdx+44]
	mov	DWORD PTR [rcx+44], eax
	mov	eax, DWORD PTR [rdx+48]
	mov	DWORD PTR [rcx+48], eax
	mov	eax, DWORD PTR [rdx+52]
	mov	DWORD PTR [rcx+52], eax

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rdx+72]
	mov	rcx, QWORD PTR [r8+64]
	mov	rax, QWORD PTR [r8+56]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8+72], r10
	mov	QWORD PTR [r8+64], r10
	mov	QWORD PTR [r8+56], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r9+56], rax
	mov	QWORD PTR [r9+64], rcx
	mov	QWORD PTR [r9+72], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r8+96]
	mov	rcx, QWORD PTR [r8+88]
	mov	rax, QWORD PTR [r8+80]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8+96], r10
	mov	QWORD PTR [r8+88], r10
	mov	QWORD PTR [r8+80], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r9+80], rax
	mov	QWORD PTR [r9+88], rcx
	mov	QWORD PTR [r9+96], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [r8+104]
	mov	rdx, QWORD PTR [r8+120]
	mov	rcx, QWORD PTR [r8+112]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8+120], r10
	mov	QWORD PTR [r8+112], r10
	mov	QWORD PTR [r8+104], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r9+104], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r9+112], rcx
	mov	QWORD PTR [r9+120], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundBphsh@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundBphsh,PhiveStaticCompound::PhiveStaticCompoundBphsh,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,PhiveStaticCompound::PhiveStaticCompoundExternalMesh,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rcx+16], xmm1
	movsd	xmm0, QWORD PTR [rdx+32]
	movsd	QWORD PTR [rcx+32], xmm0
	mov	eax, DWORD PTR [rdx+40]
	mov	DWORD PTR [rcx+40], eax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundExternalMesh@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundExternalMesh,PhiveStaticCompound::PhiveStaticCompoundExternalMesh,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterFall,PhiveStaticCompound::PhiveStaticCompoundWaterFall,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [rdx]
	mov	rax, rcx
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rcx+16], xmm1
	movups	xmm0, XMMWORD PTR [rdx+32]
	movups	XMMWORD PTR [rcx+32], xmm0
	movups	xmm1, XMMWORD PTR [rdx+48]
	movups	XMMWORD PTR [rcx+48], xmm1
	movups	xmm0, XMMWORD PTR [rdx+64]
	movups	XMMWORD PTR [rcx+64], xmm0
	movsd	xmm1, QWORD PTR [rdx+80]
	movsd	QWORD PTR [rcx+80], xmm1

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundWaterFall@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundWaterFall@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterFall,PhiveStaticCompound::PhiveStaticCompoundWaterFall,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [rdx]
	mov	rax, rcx
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rcx+16], xmm1
	movups	xmm0, XMMWORD PTR [rdx+32]
	movups	XMMWORD PTR [rcx+32], xmm0
	movups	xmm1, XMMWORD PTR [rdx+48]
	movups	XMMWORD PTR [rcx+48], xmm1
	movups	xmm0, XMMWORD PTR [rdx+64]
	movups	XMMWORD PTR [rcx+64], xmm0
	movsd	xmm1, QWORD PTR [rdx+80]
	movsd	QWORD PTR [rcx+80], xmm1

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundWaterCylinder@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,PhiveStaticCompound::PhiveStaticCompoundWaterCylinder,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,PhiveStaticCompound::PhiveStaticCompoundHkTagFile,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

	mov	eax, DWORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r10d, r10d
	mov	DWORD PTR [rcx], eax
	mov	eax, DWORD PTR [rdx+4]
	mov	DWORD PTR [rcx+4], eax

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rdx+8]
	mov	r9, QWORD PTR [rdx+24]
	mov	r8, QWORD PTR [rdx+16]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdx+24], r10
	mov	QWORD PTR [rdx+16], r10
	mov	QWORD PTR [rdx+8], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx+16], r8
	mov	QWORD PTR [rcx+24], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundHkTagFile,PhiveStaticCompound::PhiveStaticCompoundHkTagFile,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundTeraWaterTerrain@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,PhiveStaticCompound::PhiveStaticCompoundTeraWaterTerrain,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset2@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,PhiveStaticCompound::PhiveStaticCompoundFixedOffset2,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [rdx]
	mov	rax, rcx
	movups	XMMWORD PTR [rcx], xmm0

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset1@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,PhiveStaticCompound::PhiveStaticCompoundFixedOffset1,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
	mov	eax, DWORD PTR [rdx+16]
	mov	DWORD PTR [rcx+16], eax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundFixedOffset0@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,PhiveStaticCompound::PhiveStaticCompoundFixedOffset0,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z PROC ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movups	xmm0, XMMWORD PTR [rdx]
	mov	rax, rcx
	movups	XMMWORD PTR [rcx], xmm0

; 242  : }

	ret	0
??$construct_at@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@U12@$0A@@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@QEAU12@$$QEAU12@@Z ENDP ; std::construct_at<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 8
__that$ = 16
??0PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@$$QEAU01@@Z PROC ; PhiveStaticCompound::PhiveStaticCompoundBphsh::PhiveStaticCompoundBphsh, COMDAT
	mov	eax, DWORD PTR [rdx]
	mov	r8, rdx
	mov	DWORD PTR [rcx], eax
	mov	r9, rcx
	movzx	eax, WORD PTR [rdx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r10d, r10d
	mov	WORD PTR [rcx+4], ax
	movzx	eax, WORD PTR [rdx+6]
	mov	WORD PTR [rcx+6], ax
	movzx	eax, WORD PTR [rdx+8]
	mov	WORD PTR [rcx+8], ax
	movzx	eax, WORD PTR [rdx+10]
	mov	WORD PTR [rcx+10], ax
	mov	eax, DWORD PTR [rdx+12]
	mov	DWORD PTR [rcx+12], eax
	mov	eax, DWORD PTR [rdx+16]
	mov	DWORD PTR [rcx+16], eax
	mov	eax, DWORD PTR [rdx+20]
	mov	DWORD PTR [rcx+20], eax
	mov	eax, DWORD PTR [rdx+24]
	mov	DWORD PTR [rcx+24], eax
	mov	eax, DWORD PTR [rdx+28]
	mov	DWORD PTR [rcx+28], eax
	mov	eax, DWORD PTR [rdx+32]
	mov	DWORD PTR [rcx+32], eax
	mov	eax, DWORD PTR [rdx+36]
	mov	DWORD PTR [rcx+36], eax
	mov	eax, DWORD PTR [rdx+40]
	mov	DWORD PTR [rcx+40], eax
	mov	eax, DWORD PTR [rdx+44]
	mov	DWORD PTR [rcx+44], eax
	mov	eax, DWORD PTR [rdx+48]
	mov	DWORD PTR [rcx+48], eax
	mov	eax, DWORD PTR [rdx+52]
	mov	DWORD PTR [rcx+52], eax

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rdx+72]
	mov	rcx, QWORD PTR [r8+64]
	mov	rax, QWORD PTR [r8+56]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8+72], r10
	mov	QWORD PTR [r8+64], r10
	mov	QWORD PTR [r8+56], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r9+56], rax
	mov	QWORD PTR [r9+64], rcx
	mov	QWORD PTR [r9+72], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r8+96]
	mov	rcx, QWORD PTR [r8+88]
	mov	rax, QWORD PTR [r8+80]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8+96], r10
	mov	QWORD PTR [r8+88], r10
	mov	QWORD PTR [r8+80], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r9+80], rax
	mov	QWORD PTR [r9+88], rcx
	mov	QWORD PTR [r9+96], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [r8+104]
	mov	rdx, QWORD PTR [r8+120]
	mov	rcx, QWORD PTR [r8+112]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r8+120], r10
	mov	QWORD PTR [r8+112], r10
	mov	QWORD PTR [r8+104], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r9+104], rax
	mov	rax, r9
	mov	QWORD PTR [r9+112], rcx
	mov	QWORD PTR [r9+120], rdx
	ret	0
??0PhiveStaticCompoundBphsh@PhiveStaticCompound@@QEAA@$$QEAU01@@Z ENDP ; PhiveStaticCompound::PhiveStaticCompoundBphsh::PhiveStaticCompoundBphsh
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 8
__that$ = 16
??0PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@$$QEAU01@@Z PROC ; PhiveStaticCompound::PhiveStaticCompoundHkTagFile::PhiveStaticCompoundHkTagFile, COMDAT
	mov	eax, DWORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r10d, r10d
	mov	DWORD PTR [rcx], eax
	mov	eax, DWORD PTR [rdx+4]
	mov	DWORD PTR [rcx+4], eax

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rdx+8]
	mov	r9, QWORD PTR [rdx+24]
	mov	r8, QWORD PTR [rdx+16]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdx+24], r10
	mov	QWORD PTR [rdx+16], r10
	mov	QWORD PTR [rdx+8], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	mov	QWORD PTR [rcx+16], r8
	mov	QWORD PTR [rcx+24], r9
	ret	0
??0PhiveStaticCompoundHkTagFile@PhiveStaticCompound@@QEAA@$$QEAU01@@Z ENDP ; PhiveStaticCompound::PhiveStaticCompoundHkTagFile::PhiveStaticCompoundHkTagFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rdx]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r10d, r10d
	mov	r9, QWORD PTR [rdx+16]

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rdx+8]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdx+16], r10
	mov	QWORD PTR [rdx+8], r10
	mov	QWORD PTR [rdx], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx], rax

; 701  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 702  :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);
; 703  :     }

	mov	rax, rcx

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx+8], r8
	mov	QWORD PTR [rcx+16], r9

; 701  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 702  :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);
; 703  :     }

	ret	0
??0?$vector@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::vector<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1,std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YA$$QEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YA$$QEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@AEAV10@@Z PROC ; std::move<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YA$$QEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@AEAV10@@Z ENDP ; std::move<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$T@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAPEAU12@$$QEA$$T@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$T@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAPEAU12@$$QEA$$T@Z PROC ; std::exchange<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,std::nullptr_t>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@$$T@std@@YAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAPEAU12@$$QEA$$T@Z ENDP ; std::exchange<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU23@PEAU23@@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@$$QEAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@22@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
<_Val2_0>$ = 32
<_Val2_1>$ = 40
<_Val2_2>$ = 48
??$?0V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU23@PEAU23@@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@$$QEAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@22@Z PROC ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1><std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *>, COMDAT

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, QWORD PTR <_Val2_2>$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR <_Val2_1>$[rsp]
	mov	rdx, QWORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	rax, QWORD PTR [r9]
	mov	QWORD PTR [rcx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	ret	0
??$?0V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@PEAU23@PEAU23@@?$_Compressed_pair@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@V?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@1@$$QEAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@22@Z ENDP ; std::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1>::_Compressed_pair<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >,1><std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1>,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *,PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@00@Z
_TEXT	SEGMENT
this$ = 8
_First$ = 16
_Last$ = 24
_End$ = 32
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@00@Z PROC ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >, COMDAT

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	mov	QWORD PTR [rcx+16], r9
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@QEAA@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@00@Z ENDP ; std::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >::_Vector_val<std::_Simple_types<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YA$$QEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YA$$QEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@V?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@@std@@YA$$QEAV?$allocator@UPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA$$QEAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAPEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA$$QEAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAPEAU12@@Z PROC ; std::forward<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@PEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@@std@@YA$$QEAPEAUPhiveStaticCompoundBphshReserve1@PhiveStaticCompound@@AEAPEAU12@@Z ENDP ; std::forward<PhiveStaticCompound::PhiveStaticCompoundBphshReserve1 *>
_TEXT	ENDS
END

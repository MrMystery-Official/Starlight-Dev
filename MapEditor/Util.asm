; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_08OBNFFMDJ@is_empty@			; `string'
PUBLIC	??_C@_06LEMKAMD@remove@				; `string'
PUBLIC	??_C@_09IEBMEPAH@copy_file@			; `string'
PUBLIC	??_C@_0BD@EPABGGCG@create_directories@		; `string'
PUBLIC	??_C@_04KDDNKLJG@Util@				; `string'
PUBLIC	??_C@_04COAGEIMF@copy@				; `string'
PUBLIC	??_R1A@?0A@EA@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R2?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_8?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@AEAM@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@AEA_J@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@AEAI@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@AEA_K@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@AEAH@Z:PROC
EXTRN	__std_fs_create_symbolic_link:PROC
EXTRN	__std_fs_read_reparse_data_buffer:PROC
EXTRN	__std_fs_create_directory:PROC
EXTRN	__std_fs_copy_file:PROC
EXTRN	__std_fs_get_file_attributes_by_handle:PROC
EXTRN	__std_fs_write_reparse_data_buffer:PROC
EXTRN	__std_fs_read_name_from_reparse_data_buffer:PROC
EXTRN	??_U@YAPEAX_KAEBUnothrow_t@std@@@Z:PROC		; operator new[]
EXTRN	__std_fs_create_hard_link:PROC
EXTRN	__std_fs_get_file_id:PROC
EXTRN	__std_fs_remove:PROC
EXTRN	__std_fs_open_handle:PROC
EXTRN	__std_fs_close_handle:PROC
EXTRN	__std_fs_is_junction_from_reparse_data_buffer:PROC
EXTRN	__std_fs_create_directory_symbolic_link:PROC
;	COMDAT ??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DQ FLAT:??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DQ	FLAT:??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 01H ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	090H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	imagerel ??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
	DD	imagerel ??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_8?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ DD 00H ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	090H
CONST	ENDS
;	COMDAT ??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allo'
	DB	'cator@D@2@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_04COAGEIMF@copy@
CONST	SEGMENT
??_C@_04COAGEIMF@copy@ DB 'copy', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KDDNKLJG@Util@
CONST	SEGMENT
??_C@_04KDDNKLJG@Util@ DB 'Util', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EPABGGCG@create_directories@
CONST	SEGMENT
??_C@_0BD@EPABGGCG@create_directories@ DB 'create_directories', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IEBMEPAH@copy_file@
CONST	SEGMENT
??_C@_09IEBMEPAH@copy_file@ DB 'copy_file', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LEMKAMD@remove@
CONST	SEGMENT
??_C@_06LEMKAMD@remove@ DB 'remove', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OBNFFMDJ@is_empty@
CONST	SEGMENT
??_C@_08OBNFFMDJ@is_empty@ DB 'is_empty', 00H		; `string'
PUBLIC	??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??$_Refancy@PEBD$0A@@std@@YAPEBDPEBD@Z		; std::_Refancy<char const *,0>
PUBLIC	??$forward@PEA_W@std@@YA$$QEAPEA_WAEAPEA_W@Z	; std::forward<wchar_t *>
PUBLIC	?_Seek_to@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAXPEBD@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Seek_to
PUBLIC	??$exchange@PEA_W$$T@std@@YAPEA_WAEAPEA_W$$QEA$$T@Z ; std::exchange<wchar_t *,std::nullptr_t>
PUBLIC	??$_Seek_wrapped@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@AEAPEAD@std@@YAXAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@AEAPEAD@Z ; std::_Seek_wrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,char * &>
PUBLIC	??$forward@W4__std_win_error@@@std@@YA$$QEAW4__std_win_error@@AEAW41@@Z ; std::forward<enum __std_win_error>
PUBLIC	??$forward@AEAW4__std_win_error@@@std@@YAAEAW4__std_win_error@@AEAW41@@Z ; std::forward<enum __std_win_error &>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$default_delete@$$BY0A@D@std@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<char [0]>,char *,1>::_Compressed_pair<std::default_delete<char [0]>,char *,1><>
PUBLIC	??$exchange@PEADAEAPEAD@std@@YAPEADAEAPEAD0@Z	; std::exchange<char *,char * &>
PUBLIC	??$?0U?$default_delete@$$BY0A@_W@std@@PEA_W@?$_Compressed_pair@U?$default_delete@$$BY0A@_W@std@@PEA_W$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@$$BY0A@_W@1@$$QEAPEA_W@Z ; std::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1>::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1><std::default_delete<wchar_t [0]>,wchar_t *>
PUBLIC	??$forward@U?$default_delete@$$BY0A@_W@std@@@std@@YA$$QEAU?$default_delete@$$BY0A@_W@0@AEAU10@@Z ; std::forward<std::default_delete<wchar_t [0]> >
PUBLIC	??$_Seek_wrapped@PEA_WAEAPEA_W@std@@YAXAEAPEA_W0@Z ; std::_Seek_wrapped<wchar_t *,wchar_t * &>
PUBLIC	??$?0AEAPEA_W@?$_Compressed_pair@U?$default_delete@$$BY0A@_W@std@@PEA_W$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEA_W@Z ; std::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1>::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1><wchar_t * &>
PUBLIC	?get_deleter@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAAAEAU?$default_delete@$$BY0A@_W@2@XZ ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::get_deleter
PUBLIC	?release@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAAPEA_WXZ ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::release
PUBLIC	?_Verify_offset@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAX_J@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Verify_offset
PUBLIC	??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace'::`2'::<lambda_1>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>
PUBLIC	??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<`std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve'::`2'::<lambda_1> >
PUBLIC	??$?R_W$0A@@?$default_delete@$$BY0A@_W@std@@QEBAXPEA_W@Z ; std::default_delete<wchar_t [0]>::operator()<wchar_t,0>
PUBLIC	??$?RD$0A@@?$default_delete@$$BY0A@D@std@@QEBAXPEAD@Z ; std::default_delete<char [0]>::operator()<char,0>
PUBLIC	??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>
PUBLIC	??$_Get_unwrapped_n@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@_J@Z ; std::_Get_unwrapped_n<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &,__int64>
PUBLIC	??$_Idl_distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@PEAD@std@@YA?A_PAEBQEAD0@Z ; std::_Idl_distance<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,char *>
PUBLIC	??$transform@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@P6AHH@Z@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0V10@P6AHH@Z@Z ; std::transform<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,int (__cdecl*)(int)>
PUBLIC	??$degrees@M@glm@@YAMM@Z			; glm::degrees<float>
PUBLIC	??$append@PEB_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append<wchar_t const *,0>
PUBLIC	??$?0W4__std_win_error@@_N$0A@@?$pair@W4__std_win_error@@_N@std@@QEAA@$$QEAW4__std_win_error@@$$QEA_N@Z ; std::pair<enum __std_win_error,bool>::pair<enum __std_win_error,bool><enum __std_win_error,bool,0>
PUBLIC	??$?0AEAW4__std_win_error@@_N$0A@@?$pair@W4__std_win_error@@_N@std@@QEAA@AEAW4__std_win_error@@$$QEA_N@Z ; std::pair<enum __std_win_error,bool>::pair<enum __std_win_error,bool><enum __std_win_error &,bool,0>
PUBLIC	??$?0U?$default_delete@$$BY0A@D@std@@$0A@@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAA@XZ ; std::unique_ptr<char [0],std::default_delete<char [0]> >::unique_ptr<char [0],std::default_delete<char [0]> ><std::default_delete<char [0]>,0>
PUBLIC	??$reset@PEAD$0A@@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAAXPEAD@Z ; std::unique_ptr<char [0],std::default_delete<char [0]> >::reset<char *,0>
PUBLIC	??$?0U?$default_delete@$$BY0A@_W@std@@$0A@@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAA@$$QEAV01@@Z ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> ><std::default_delete<wchar_t [0]>,0>
PUBLIC	??$_Get_unwrapped_n@AEAPEA_W_J@std@@YA?A_TAEAPEA_W_J@Z ; std::_Get_unwrapped_n<wchar_t * &,__int64>
PUBLIC	??$_Idl_distance@PEB_WPEB_W@std@@YA?A_PAEBQEB_W0@Z ; std::_Idl_distance<wchar_t const *,wchar_t const *>
PUBLIC	??$replace_copy_if@PEB_WPEA_WU_Is_slash_oper@std@@_W@std@@YAPEA_WPEB_W0PEA_WU_Is_slash_oper@0@AEB_W@Z ; std::replace_copy_if<wchar_t const *,wchar_t *,std::_Is_slash_oper,wchar_t>
PUBLIC	??$?0PEA_WU?$default_delete@$$BY0A@_W@std@@$0A@$0A@@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAA@PEA_W@Z ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> ><wchar_t *,std::default_delete<wchar_t [0]>,0,0>
PUBLIC	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
PUBLIC	??R<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_K_KQEBD0@Z@QEBA@QEAD200020@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace'::`2'::<lambda_1>::operator()
PUBLIC	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@$$BY0A@_W@std@@PEA_W$00@std@@QEAAAEAU?$default_delete@$$BY0A@_W@2@XZ ; std::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@$$BY0A@D@std@@PEAD$00@std@@QEAAAEAU?$default_delete@$$BY0A@D@2@XZ ; std::_Compressed_pair<std::default_delete<char [0]>,char *,1>::_Get_first
PUBLIC	?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat
PUBLIC	??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
PUBLIC	?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::clear
PUBLIC	??R<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@QEBA@QEA_WQEB_W0@Z ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve'::`2'::<lambda_1>::operator()
PUBLIC	?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve
PUBLIC	?empty@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_NXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::empty
PUBLIC	??B?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEBA_NXZ ; std::shared_ptr<std::filesystem::_Dir_enum_impl>::operator bool
PUBLIC	??1?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAA@XZ ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::~unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >
PUBLIC	?get@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEBAPEA_WXZ ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::get
PUBLIC	??B?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEBA_NXZ ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::operator bool
PUBLIC	??1?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAA@XZ ; std::unique_ptr<char [0],std::default_delete<char [0]> >::~unique_ptr<char [0],std::default_delete<char [0]> >
PUBLIC	?get@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEBAPEADXZ ; std::unique_ptr<char [0],std::default_delete<char [0]> >::get
PUBLIC	??B?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEBA_NXZ ; std::unique_ptr<char [0],std::default_delete<char [0]> >::operator bool
PUBLIC	??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator==
PUBLIC	?__autoclassinit2@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2
PUBLIC	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z ; std::filesystem::copy
PUBLIC	?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z ; std::filesystem::copy
PUBLIC	?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z ; std::filesystem::_Copy_impl
PUBLIC	?create_directories@filesystem@std@@YA_NAEBVpath@12@@Z ; std::filesystem::create_directories
PUBLIC	?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z ; std::filesystem::create_directories
PUBLIC	?create_directory@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z ; std::filesystem::create_directory
PUBLIC	?_Get_any_status@filesystem@std@@YA?AU_File_status_and_error@12@AEBVpath@12@W4__std_fs_stats_flags@@@Z ; std::filesystem::_Get_any_status
PUBLIC	?remove@filesystem@std@@YA_NAEBVpath@12@@Z	; std::filesystem::remove
PUBLIC	?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z	; std::filesystem::is_empty
PUBLIC	?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z ; std::filesystem::is_empty
PUBLIC	?__autoclassinit2@error_code@std@@QEAAX_K@Z	; std::error_code::__autoclassinit2
PUBLIC	?equivalent@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z ; std::filesystem::equivalent
PUBLIC	?_Equivalent@filesystem@std@@YA?AU?$pair@W4__std_win_error@@_N@2@QEB_W0@Z ; std::filesystem::_Equivalent
PUBLIC	?copy_file@filesystem@std@@YA_NAEBVpath@12@0@Z	; std::filesystem::copy_file
PUBLIC	?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@@Z ; std::filesystem::copy_file
PUBLIC	?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z ; std::filesystem::copy_file
PUBLIC	?copy_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z ; std::filesystem::copy_symlink
PUBLIC	??1_Delete_directory_scope_guard@?1??_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@23@0@Z@QEAA@XZ ; `std::filesystem::_Copy_junction'::`2'::_Delete_directory_scope_guard::~_Delete_directory_scope_guard
PUBLIC	?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z ; std::filesystem::_Copy_junction
PUBLIC	?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z ; std::filesystem::_Copy_symlink
PUBLIC	?__autoclassinit2@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAAX_K@Z ; std::unique_ptr<char [0],std::default_delete<char [0]> >::__autoclassinit2
PUBLIC	?_Read_reparse_data@filesystem@std@@YA?AW4__std_win_error@@AEBU_Fs_file@2@AEAV?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@2@@Z ; std::filesystem::_Read_reparse_data
PUBLIC	?create_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z ; std::filesystem::create_symlink
PUBLIC	?create_hard_link@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z ; std::filesystem::create_hard_link
PUBLIC	?__autoclassinit2@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAAX_K@Z ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::__autoclassinit2
PUBLIC	?_Get_cleaned_symlink_target@filesystem@std@@YA?AV?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@2@AEBVpath@12@@Z ; std::filesystem::_Get_cleaned_symlink_target
PUBLIC	?_At_end@directory_iterator@filesystem@std@@QEBA_NXZ ; std::filesystem::directory_iterator::_At_end
PUBLIC	?increment@directory_iterator@filesystem@std@@QEAAAEAV123@AEAVerror_code@3@@Z ; std::filesystem::directory_iterator::increment
PUBLIC	??Cdirectory_iterator@filesystem@std@@QEBAPEBVdirectory_entry@12@XZ ; std::filesystem::directory_iterator::operator->
PUBLIC	??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z ; std::filesystem::directory_iterator::directory_iterator
PUBLIC	?_Refresh@directory_entry@filesystem@std@@CA?AW4__std_win_error@@AEAU__std_fs_stats@@AEBVpath@23@@Z ; std::filesystem::directory_entry::_Refresh
PUBLIC	?is_directory@directory_entry@filesystem@std@@QEBA_NXZ ; std::filesystem::directory_entry::is_directory
PUBLIC	??Bdirectory_entry@filesystem@std@@QEBAAEBVpath@12@XZ ; std::filesystem::directory_entry::operator std::filesystem::path const &
PUBLIC	?refresh@directory_entry@filesystem@std@@QEAAXAEAVerror_code@3@@Z ; std::filesystem::directory_entry::refresh
PUBLIC	??0directory_entry@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z ; std::filesystem::directory_entry::directory_entry
PUBLIC	?is_symlink@filesystem@std@@YA_NVfile_status@12@@Z ; std::filesystem::is_symlink
PUBLIC	?is_other@filesystem@std@@YA_NVfile_status@12@@Z ; std::filesystem::is_other
PUBLIC	?is_directory@filesystem@std@@YA_NVfile_status@12@@Z ; std::filesystem::is_directory
PUBLIC	?exists@filesystem@std@@YA_NVfile_status@12@@Z	; std::filesystem::exists
PUBLIC	??Ufilesystem@std@@YA?AW4copy_options@01@W4201@0@Z ; std::filesystem::operator|
PUBLIC	??Ifilesystem@std@@YA?AW4copy_options@01@W4201@0@Z ; std::filesystem::operator&
PUBLIC	?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z ; std::filesystem::_Throw_fs_error
PUBLIC	?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
PUBLIC	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z ; std::filesystem::_Throw_fs_error
PUBLIC	??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z ; std::filesystem::filesystem_error::filesystem_error
PUBLIC	??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z	; std::filesystem::operator/
PUBLIC	?empty@path@filesystem@std@@QEBA_NXZ		; std::filesystem::path::empty
PUBLIC	?clear@path@filesystem@std@@QEAAXXZ		; std::filesystem::path::clear
PUBLIC	??1_Fs_file@std@@QEAA@XZ			; std::_Fs_file::~_Fs_file
PUBLIC	??0_Fs_file@std@@QEAA@QEB_WW4__std_access_rights@@W4__std_fs_file_flags@@QEAW4__std_win_error@@@Z ; std::_Fs_file::_Fs_file
PUBLIC	??U@YA?AW4__std_fs_file_flags@@W40@0@Z		; operator|
PUBLIC	??Berror_code@std@@QEBA_NXZ			; std::error_code::operator bool
PUBLIC	?clear@error_code@std@@QEAAXXZ			; std::error_code::clear
PUBLIC	??0error_code@std@@QEAA@XZ			; std::error_code::error_code
PUBLIC	?fabs@@YAMM@Z					; fabs
PUBLIC	?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z ; Util::WriteFile
PUBLIC	?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; Util::ReadFile
PUBLIC	?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Util::CopyFileToDest
PUBLIC	?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Util::RemoveFile
PUBLIC	?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Util::StringToLowerCase
PUBLIC	?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Util::IsNumber
PUBLIC	?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Util::CopyDirectoryRecursively
PUBLIC	?RadiansToDegrees@Util@@YAMM@Z			; Util::RadiansToDegrees
PUBLIC	??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Util::StringToNumber<unsigned __int64>
PUBLIC	??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Util::StringToNumber<unsigned int>
PUBLIC	??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Util::StringToNumber<__int64>
PUBLIC	??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Util::StringToNumber<int>
PUBLIC	??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Util::StringToNumber<float>
PUBLIC	?CompareFloatsWithTolerance@Util@@YA_NMMM@Z	; Util::CompareFloatsWithTolerance
PUBLIC	?DegreesToRadians@Util@@YAMM@Z			; Util::DegreesToRadians
PUBLIC	?ReplaceString@Util@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@1@Z ; Util::ReplaceString
PUBLIC	?FileExists@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Util::FileExists
PUBLIC	?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Util::CreateDir
EXTRN	??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z DD imagerel $LN153
	DD	imagerel $LN153+58
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z DD imagerel $LN153+58
	DD	imagerel $LN153+464
	DD	imagerel $chain$3$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z DD imagerel $LN153+464
	DD	imagerel $LN153+470
	DD	imagerel $chain$5$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z DD imagerel $LN153+470
	DD	imagerel $LN153+476
	DD	imagerel $chain$6$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z DD imagerel $LN74
	DD	imagerel $LN74+41
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z DD imagerel $LN74+41
	DD	imagerel $LN74+55
	DD	imagerel $chain$1$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z DD imagerel $LN74+55
	DD	imagerel $LN74+149
	DD	imagerel $chain$2$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z DD imagerel $LN74+149
	DD	imagerel $LN74+251
	DD	imagerel $chain$3$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z DD imagerel $LN74+251
	DD	imagerel $LN74+257
	DD	imagerel $chain$4$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@V10@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@@Z DD imagerel ??$find_if@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@V10@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@@Z
	DD	imagerel ??$find_if@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@V10@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@@Z+97
	DD	imagerel $unwind$??$find_if@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@V10@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$transform@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@P6AHH@Z@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0V10@P6AHH@Z@Z DD imagerel $LN17
	DD	imagerel $LN17+88
	DD	imagerel $unwind$??$transform@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@P6AHH@Z@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0V10@P6AHH@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z DD imagerel $LN42
	DD	imagerel $LN42+77
	DD	imagerel $unwind$?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z DD imagerel $LN42+77
	DD	imagerel $LN42+225
	DD	imagerel $chain$0$?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z DD imagerel $LN42+225
	DD	imagerel $LN42+258
	DD	imagerel $chain$1$?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_K_KQEBD0@Z@QEBA@QEAD200020@Z DD imagerel $LN41
	DD	imagerel $LN41+135
	DD	imagerel $unwind$??R<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_K_KQEBD0@Z@QEBA@QEAD200020@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z DD imagerel $LN214
	DD	imagerel $LN214+103
	DD	imagerel $unwind$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z DD imagerel $LN214+103
	DD	imagerel $LN214+198
	DD	imagerel $chain$1$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z DD imagerel $LN214+198
	DD	imagerel $LN214+385
	DD	imagerel $chain$2$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z DD imagerel $LN214+385
	DD	imagerel $LN214+407
	DD	imagerel $chain$3$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z DD imagerel $LN214+407
	DD	imagerel $LN214+413
	DD	imagerel $chain$4$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD imagerel $LN52
	DD	imagerel $LN52+187
	DD	imagerel $unwind$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD imagerel $LN8
	DD	imagerel $LN8+59
	DD	imagerel $unwind$??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z DD imagerel $LN10
	DD	imagerel $LN10+33
	DD	imagerel $unwind$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD imagerel $LN80
	DD	imagerel $LN80+28
	DD	imagerel $unwind$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD imagerel $LN80+28
	DD	imagerel $LN80+254
	DD	imagerel $chain$2$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD imagerel $LN80+254
	DD	imagerel $LN80+263
	DD	imagerel $chain$3$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD imagerel $LN80+263
	DD	imagerel $LN80+269
	DD	imagerel $chain$4$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD imagerel $LN60
	DD	imagerel $LN60+273
	DD	imagerel $unwind$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA+46
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@QEBA@E@Z DD imagerel ??R<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@QEBA@E@Z
	DD	imagerel ??R<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@QEBA@E@Z+23
	DD	imagerel $unwind$??R<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@QEBA@E@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+121
	DD	imagerel $unwind$??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z DD imagerel $LN97
	DD	imagerel $LN97+309
	DD	imagerel $unwind$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z DD imagerel $LN86
	DD	imagerel $LN86+289
	DD	imagerel $unwind$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z DD imagerel $LN717
	DD	imagerel $LN717+2276
	DD	imagerel $unwind$?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$20@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA DD imagerel ?dtor$20@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA
	DD	imagerel ?dtor$20@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$20@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$15@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA DD imagerel ?dtor$15@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA
	DD	imagerel ?dtor$15@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA+41
	DD	imagerel $unwind$?dtor$15@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?create_directories@filesystem@std@@YA_NAEBVpath@12@@Z DD imagerel $LN15
	DD	imagerel $LN15+100
	DD	imagerel $unwind$?create_directories@filesystem@std@@YA_NAEBVpath@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z DD imagerel $LN322
	DD	imagerel $LN322+815
	DD	imagerel $unwind$?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?create_directory@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z DD imagerel $LN19
	DD	imagerel $LN19+61
	DD	imagerel $unwind$?create_directory@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_any_status@filesystem@std@@YA?AU_File_status_and_error@12@AEBVpath@12@W4__std_fs_stats_flags@@@Z DD imagerel $LN57
	DD	imagerel $LN57+215
	DD	imagerel $unwind$?_Get_any_status@filesystem@std@@YA?AU_File_status_and_error@12@AEBVpath@12@W4__std_fs_stats_flags@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?remove@filesystem@std@@YA_NAEBVpath@12@@Z DD imagerel $LN19
	DD	imagerel $LN19+66
	DD	imagerel $unwind$?remove@filesystem@std@@YA_NAEBVpath@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z DD imagerel $LN70
	DD	imagerel $LN70+336
	DD	imagerel $unwind$?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z DD imagerel $LN59
	DD	imagerel $LN59+286
	DD	imagerel $unwind$?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equivalent@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z DD imagerel $LN45
	DD	imagerel $LN45+184
	DD	imagerel $unwind$?equivalent@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Equivalent@filesystem@std@@YA?AU?$pair@W4__std_win_error@@_N@2@QEB_W0@Z DD imagerel $LN20
	DD	imagerel $LN20+145
	DD	imagerel $unwind$?_Equivalent@filesystem@std@@YA?AU?$pair@W4__std_win_error@@_N@2@QEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy_file@filesystem@std@@YA_NAEBVpath@12@0@Z DD imagerel $LN32
	DD	imagerel $LN32+87
	DD	imagerel $unwind$?copy_file@filesystem@std@@YA_NAEBVpath@12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@@Z DD imagerel $LN29
	DD	imagerel $LN29+87
	DD	imagerel $unwind$?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z DD imagerel $LN29
	DD	imagerel $LN29+71
	DD	imagerel $unwind$?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z DD imagerel $LN9
	DD	imagerel $LN9+44
	DD	imagerel $unwind$?copy_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD imagerel $LN154
	DD	imagerel $LN154+90
	DD	imagerel $unwind$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD imagerel $LN154+90
	DD	imagerel $LN154+318
	DD	imagerel $chain$0$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD imagerel $LN154+318
	DD	imagerel $LN154+376
	DD	imagerel $chain$1$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD imagerel $LN154+376
	DD	imagerel $LN154+381
	DD	imagerel $chain$2$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD imagerel $LN154+381
	DD	imagerel $LN154+401
	DD	imagerel $chain$3$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD imagerel $LN131
	DD	imagerel $LN131+90
	DD	imagerel $unwind$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD imagerel $LN131+90
	DD	imagerel $LN131+250
	DD	imagerel $chain$0$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD imagerel $LN131+250
	DD	imagerel $LN131+377
	DD	imagerel $chain$1$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD imagerel $LN131+377
	DD	imagerel $LN131+382
	DD	imagerel $chain$2$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD imagerel $LN131+382
	DD	imagerel $LN131+402
	DD	imagerel $chain$3$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Read_reparse_data@filesystem@std@@YA?AW4__std_win_error@@AEBU_Fs_file@2@AEAV?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@2@@Z DD imagerel $LN20
	DD	imagerel $LN20+95
	DD	imagerel $unwind$?_Read_reparse_data@filesystem@std@@YA?AW4__std_win_error@@AEBU_Fs_file@2@AEAV?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?create_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z DD imagerel $LN136
	DD	imagerel $LN136+322
	DD	imagerel $unwind$?create_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?create_hard_link@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z DD imagerel $LN29
	DD	imagerel $LN29+73
	DD	imagerel $unwind$?create_hard_link@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_cleaned_symlink_target@filesystem@std@@YA?AV?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@2@AEBVpath@12@@Z DD imagerel $LN103
	DD	imagerel $LN103+252
	DD	imagerel $unwind$?_Get_cleaned_symlink_target@filesystem@std@@YA?AV?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@2@AEBVpath@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?increment@directory_iterator@filesystem@std@@QEAAAEAV123@AEAVerror_code@3@@Z DD imagerel $LN9
	DD	imagerel $LN9+59
	DD	imagerel $unwind$?increment@directory_iterator@filesystem@std@@QEAAAEAV123@AEAVerror_code@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z DD imagerel $LN14
	DD	imagerel $LN14+73
	DD	imagerel $unwind$??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Refresh@directory_entry@filesystem@std@@CA?AW4__std_win_error@@AEAU__std_fs_stats@@AEBVpath@23@@Z DD imagerel $LN26
	DD	imagerel $LN26+104
	DD	imagerel $unwind$?_Refresh@directory_entry@filesystem@std@@CA?AW4__std_win_error@@AEAU__std_fs_stats@@AEBVpath@23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?is_directory@directory_entry@filesystem@std@@QEBA_NXZ DD imagerel $LN21
	DD	imagerel $LN21+80
	DD	imagerel $unwind$?is_directory@directory_entry@filesystem@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?refresh@directory_entry@filesystem@std@@QEAAXAEAVerror_code@3@@Z DD imagerel $LN50
	DD	imagerel $LN50+175
	DD	imagerel $unwind$?refresh@directory_entry@filesystem@std@@QEAAXAEAVerror_code@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0directory_entry@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z DD imagerel $LN72
	DD	imagerel $LN72+224
	DD	imagerel $unwind$??0directory_entry@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z DD imagerel $LN13
	DD	imagerel $LN13+104
	DD	imagerel $unwind$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z DD imagerel $LN13
	DD	imagerel $LN13+85
	DD	imagerel $unwind$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z DD imagerel $LN13
	DD	imagerel $LN13+114
	DD	imagerel $unwind$?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z DD imagerel $LN21
	DD	imagerel $LN21+193
	DD	imagerel $unwind$??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z DD imagerel $LN7
	DD	imagerel $LN7+68
	DD	imagerel $unwind$??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z@4HA DD imagerel ?dtor$0@?0???Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z@4HA
	DD	imagerel ?dtor$0@?0???Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Fs_file@std@@QEAA@QEB_WW4__std_access_rights@@W4__std_fs_file_flags@@QEAW4__std_win_error@@@Z DD imagerel $LN4
	DD	imagerel $LN4+30
	DD	imagerel $unwind$??0_Fs_file@std@@QEAA@QEB_WW4__std_access_rights@@W4__std_fs_file_flags@@QEAW4__std_win_error@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z DD imagerel $LN95
	DD	imagerel $LN95+420
	DD	imagerel $unwind$?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD imagerel $LN80
	DD	imagerel $LN80+728
	DD	imagerel $unwind$?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA DD imagerel ?dtor$2@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA
	DD	imagerel ?dtor$2@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD imagerel $LN46
	DD	imagerel $LN46+134
	DD	imagerel $unwind$?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN27
	DD	imagerel $LN27+88
	DD	imagerel $unwind$?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DD imagerel $LN95
	DD	imagerel $LN95+206
	DD	imagerel $unwind$?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN72
	DD	imagerel $LN72+27
	DD	imagerel $unwind$?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN72+27
	DD	imagerel $LN72+100
	DD	imagerel $chain$0$?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN72+100
	DD	imagerel $LN72+140
	DD	imagerel $chain$1$?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD imagerel $LN761
	DD	imagerel $LN761+2465
	DD	imagerel $unwind$?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$26@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD imagerel ?dtor$26@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DD	imagerel ?dtor$26@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA+38
	DD	imagerel $unwind$?dtor$26@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$35@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD imagerel ?dtor$35@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DD	imagerel ?dtor$35@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA+46
	DD	imagerel $unwind$?dtor$35@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN20
	DD	imagerel $LN20+237
	DD	imagerel $unwind$??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN20
	DD	imagerel $LN20+235
	DD	imagerel $unwind$??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN20
	DD	imagerel $LN20+237
	DD	imagerel $unwind$??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN20
	DD	imagerel $LN20+235
	DD	imagerel $unwind$??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN20
	DD	imagerel $LN20+242
	DD	imagerel $unwind$??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReplaceString@Util@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@1@Z DD imagerel $LN34
	DD	imagerel $LN34+175
	DD	imagerel $unwind$?ReplaceString@Util@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FileExists@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN18
	DD	imagerel $LN18+89
	DD	imagerel $unwind$?FileExists@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN28
	DD	imagerel $LN28+145
	DD	imagerel $unwind$?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 08H
	DB	'J'
	DB	02H
	DB	'F'
	DB	04H
	DB	'N'
	DB	00H
	DB	'8'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
	DB	032H
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 021519H
	DD	03002b206H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	05aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FileExists@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 041919H
	DD	0f340aH
	DD	07006b20aH
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReplaceString@Util@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@1@Z DD 0a1a01H
	DD	0b741aH
	DD	0a641aH
	DD	09541aH
	DD	08341aH
	DD	0e016521aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	08aH
	DB	02H
	DB	' '
	DB	04H
	DB	01dH, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
	DB	032H
	DD	imagerel ??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 052319H
	DD	0136811H
	DD	0280109H
	DD	03002H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	0122H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	082H
	DB	02H
	DB	' '
	DB	04H
	DB	011H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
	DB	032H
	DD	imagerel ??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 051f19H
	DD	029340dH
	DD	026010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	0122H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	082H
	DB	02H
	DB	' '
	DB	04H
	DB	019H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
	DB	032H
	DD	imagerel ??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 051f19H
	DD	029340dH
	DD	026010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	0122H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	082H
	DB	02H
	DB	' '
	DB	04H
	DB	011H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
	DB	032H
	DD	imagerel ??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 051f19H
	DD	029340dH
	DD	026010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	0122H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	082H
	DB	02H
	DB	' '
	DB	04H
	DB	019H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
	DB	032H
	DD	imagerel ??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 051f19H
	DD	029340dH
	DD	026010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	0122H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	08eH
	DW	0b2H
	DW	0d9H
	DW	0f4H
	DW	0230H
	DW	024bH
	DW	0868H
	DW	0883H
	DW	08a9H
	DW	08c2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$35@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$26@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DB '('
	DB	08cH
	DB	00H
	DB	'8'
	DB	04H
	DB	'I', 06H
	DB	0eH
	DB	095H, 05H
	DB	0cH
	DB	08dH, 04H
	DB	012H
	DB	'-', 02H
	DB	014H
	DB	'.'
	DB	016H
	DB	'M', 02H
	DB	01aH
	DB	0f8H
	DB	01cH
	DB	085H, 03H
	DB	01eH
	DB	095H, 04H
	DB	0cH
	DB	0c1H, 02H
	DB	00H
	DB	'b'
	DB	0cH
	DB	'*'
	DB	04H
	DB	'&'
	DB	0cH
	DB	'"'
	DB	012H
	DB	'4'
	DB	01aH
	DB	'4'
	DB	01cH
	DB	'('
	DB	014H
	DB	0cH
	DB	0cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DB 01eH
	DB	0aH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	0a1H
	DB	04H
	DB	03aH
	DD	imagerel ??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ
	DB	081H
	DB	06H
	DB	072H
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	081H
	DB	06H
	DB	0b2H
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	081H
	DB	06H
	DB	03aH
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	01H
	DB	07H
	DB	03aH
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	081H
	DB	08H
	DB	03aH
	DD	imagerel ??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ
	DB	0c1H
	DB	06H
	DB	072H
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	0f0H
	DB	036H
	DD	imagerel ?dtor$26@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DB	05aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	05H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e1H
	DB	02H
	DB	03eH
	DD	imagerel ?dtor$35@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA
	DB	062H
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	061H
	DB	02H
	DB	03aH
	DD	imagerel ??1directory_entry@filesystem@std@@QEAA@XZ
	DB	081H
	DB	07H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	imagerel $ip2state$?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0b3019H
	DD	056341fH
	DD	04c011fH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	0252H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 021H
	DD	imagerel $LN72
	DD	imagerel $LN72+27
	DD	imagerel $unwind$?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 020521H
	DD	076405H
	DD	imagerel $LN72
	DD	imagerel $LN72+27
	DD	imagerel $unwind$?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DB 04H
	DB	0c6H
	DB	02H
	DB	0a4H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DB 028H
	DD	imagerel $stateUnwindMap$?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
	DD	imagerel $ip2state$?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DD 081f19H
	DD	0103410H
	DD	0f00c7210H
	DD	07008e00aH
	DD	050066007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
	DD	032H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	018H
	DB	00H
	DB	08cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 02H
	DB	0aH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 010411H
	DD	08204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DB 06H
	DB	01cH
	DB	00H
	DB	01cH
	DB	02H
	DB	0c8H
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DB 04H
	DB	0aH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	080H
	DB	032H
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	imagerel $ip2state$?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 020611H
	DD	03002b206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DB 010H
	DB	0d0H
	DB	04H
	DB	0deH
	DB	06H
	DB	'Y', 02H
	DB	04H
	DB	081H, 02H
	DB	06H
	DB	082H
	DB	08H
	DB	'$'
	DB	06H
	DB	0b2H
	DB	02H
	DB	'2'
	DB	06H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$2@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA
	DB	02cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	01H
	DB	02H
	DB	03aH
	DD	imagerel ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DB	041H
	DB	02H
	DB	03cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
	DD	imagerel $ip2state$?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD 072919H
	DD	0403418H
	DD	03a0118H
	DD	07007e009H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
	DD	01c2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z DB 08H
	DB	0c2H
	DB	04H
	DB	08eH
	DB	06H
	DB	'v'
	DB	04H
	DB	'u', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z DB 06H
	DB	0cH
	DD	imagerel ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
	DB	070H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
	DB	032H
	DD	imagerel ??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z DB 028H
	DD	imagerel $stateUnwindMap$?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z
	DD	imagerel $ip2state$?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z DD 092719H
	DD	0335415H
	DD	0323415H
	DD	02c0115H
	DD	0700ce00eH
	DD	0600bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z
	DD	0152H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Fs_file@std@@QEAA@QEB_WW4__std_access_rights@@W4__std_fs_file_flags@@QEAW4__std_win_error@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z DB 02H
	DB	':'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z DB 028H
	DD	imagerel $stateUnwindMap$??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z
	DD	imagerel $ip2state$??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z DD 040f11H
	DD	09340fH
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z DB 08H
	DB	'f'
	DB	00H
	DB	'.'
	DB	02H
	DB	01aH
	DB	04H
	DB	0a2H
	DB	06H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z DB 06H
	DB	0cH
	DD	imagerel ??1system_error@std@@UEAA@XZ
	DB	080H
	DB	036H
	DD	imagerel ?dtor$1@?0???0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z
	DD	imagerel $ip2state$??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z DD 061411H
	DD	0a6414H
	DD	093414H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z DB 04H
	DB	'b'
	DB	00H
	DB	'T'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z
	DD	imagerel $ip2state$?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z DD 050d11H
	DD	022340dH
	DD	020010dH
	DD	07006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z DB 04H
	DB	'8'
	DB	00H
	DB	'D'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z
	DD	imagerel $ip2state$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z DD 030911H
	DD	01c0109H
	DD	03002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z DB 04H
	DB	'N'
	DB	00H
	DB	'T'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z
	DD	imagerel $ip2state$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z DD 050d11H
	DD	020340dH
	DD	01e010dH
	DD	07006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0directory_entry@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z DD 0a1801H
	DD	0c6418H
	DD	0b5418H
	DD	0a3418H
	DD	0f0145218H
	DD	07010e012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?refresh@directory_entry@filesystem@std@@QEAAXAEAVerror_code@3@@Z DD 081501H
	DD	0a7415H
	DD	095415H
	DD	083415H
	DD	0e0115215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?is_directory@directory_entry@filesystem@std@@QEBA_NXZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Refresh@directory_entry@filesystem@std@@CA?AW4__std_win_error@@AEAU__std_fs_stats@@AEBVpath@23@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z DB 02H
	DB	'<'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z
	DD	imagerel $ip2state$??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z DD 040f11H
	DD	09340fH
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?increment@directory_iterator@filesystem@std@@QEAAAEAV123@AEAVerror_code@3@@Z DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_cleaned_symlink_target@filesystem@std@@YA?AV?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@2@AEBVpath@12@@Z DD 060f01H
	DD	0b640fH
	DD	0a340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?create_hard_link@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?create_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z DD 060b01H
	DD	0e007720bH
	DD	060047005H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Read_reparse_data@filesystem@std@@YA?AW4__std_win_error@@AEBU_Fs_file@2@AEAV?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@2@@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD 021H
	DD	imagerel $LN131
	DD	imagerel $LN131+90
	DD	imagerel $unwind$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD 021H
	DD	imagerel $LN131+90
	DD	imagerel $LN131+250
	DD	imagerel $chain$0$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD 020821H
	DD	0105408H
	DD	imagerel $LN131+90
	DD	imagerel $LN131+250
	DD	imagerel $chain$0$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD 020521H
	DD	0a6405H
	DD	imagerel $LN131
	DD	imagerel $LN131+90
	DD	imagerel $unwind$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD 031619H
	DD	07003a207H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD 021H
	DD	imagerel $LN154
	DD	imagerel $LN154+90
	DD	imagerel $unwind$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD 021H
	DD	imagerel $LN154+90
	DD	imagerel $LN154+318
	DD	imagerel $chain$0$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD 020521H
	DD	0e5405H
	DD	imagerel $LN154+90
	DD	imagerel $LN154+318
	DD	imagerel $chain$0$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD 020521H
	DD	086405H
	DD	imagerel $LN154
	DD	imagerel $LN154+90
	DD	imagerel $unwind$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z DD 031619H
	DD	070038207H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy_file@filesystem@std@@YA_NAEBVpath@12@0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Equivalent@filesystem@std@@YA?AU?$pair@W4__std_win_error@@_N@2@QEB_W0@Z DD 041919H
	DD	011340aH
	DD	07006b20aH
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equivalent@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z DD 041919H
	DD	011340aH
	DD	07006b20aH
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	0ccH
	DB	0e3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z DB 04H
	DB	'A', 02H
	DB	02H
	DB	0e8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z
	DD	imagerel $ip2state$?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z DD 062119H
	DD	0156412H
	DD	0143412H
	DD	0700bf212H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z
	DD	07aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	0dbH
	DB	0f2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z DB 04H
	DB	'u', 02H
	DB	02H
	DB	01H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ
	DB	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z DB 028H
	DD	imagerel $stateUnwindMap$?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z
	DD	imagerel $ip2state$?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z DD 092919H
	DD	0196417H
	DD	0185417H
	DD	0173417H
	DD	0140117H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z
	DD	092H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?remove@filesystem@std@@YA_NAEBVpath@12@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_any_status@filesystem@std@@YA?AU_File_status_and_error@12@AEBVpath@12@W4__std_fs_stats_flags@@@Z DD 041919H
	DD	0c340aH
	DD	07006920aH
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?create_directory@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z DB 06H
	DB	0c5H, 02H
	DB	02H
	DB	'-', 08H
	DB	00H
	DB	0daH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DB	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z
	DD	imagerel $ip2state$?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z DD 0a2819H
	DD	01a341aH
	DD	0f010f21aH
	DD	0d00ce00eH
	DD	07008c00aH
	DD	050066007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z
	DD	072H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?create_directories@filesystem@std@@YA_NAEBVpath@12@@Z DD 021519H
	DD	030027206H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	079aH
	DW	07b0H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$15@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$20@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z DB 014H
	DB	0b1H, 012H
	DB	00H
	DB	' '
	DB	04H
	DB	'\'
	DB	02H
	DB	011H, 02H
	DB	06H
	DB	'A', 05H
	DB	08H
	DB	08eH
	DB	0cH
	DB	'r'
	DB	0aH
	DB	'D'
	DB	08H
	DB	01dH, 02H
	DB	00H
	DB	'2'
	DB	08H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z DB 0cH
	DB	0aH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	01H
	DB	05H
	DB	03eH
	DD	imagerel ?dtor$20@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA
	DB	06aH
	DD	imagerel ??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ
	DB	01H
	DB	04H
	DB	0a2H
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	01H
	DB	04H
	DB	03aH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	0a0H
	DB	036H
	DD	imagerel ?dtor$15@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z
	DD	imagerel $ip2state$?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z DD 0a2719H
	DD	02f0119H
	DD	0e00bf00dH
	DD	0c007d009H
	DD	060047005H
	DD	050023003H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z
	DD	0162H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z DB 06H
	DB	'z'
	DB	00H
	DB	0ddH, 02H
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z DB 02H
	DB	0aH
	DD	imagerel ??1directory_entry@filesystem@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z
	DD	imagerel $ip2state$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z DD 081f19H
	DD	0110110H
	DD	0e007f009H
	DD	060047005H
	DD	030025003H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z
	DD	072H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z DB 06H
	DB	08aH
	DB	00H
	DB	0b5H, 02H
	DB	02H
	DB	'8'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z DB 02H
	DB	0aH
	DD	imagerel ??1directory_entry@filesystem@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z DB 028H
	DD	imagerel $stateUnwindMap$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z
	DD	imagerel $ip2state$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z DD 082319H
	DD	0f00bf215H
	DD	0c007e009H
	DD	060047005H
	DD	050023003H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z
	DD	072H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@QEBA@E@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DB 0aH
	DB	'd'
	DB	00H
	DB	'>'
	DB	02H
	DB	'f'
	DB	04H
	DB	'Z'
	DB	06H
	DB	0a2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA
	DB	02cH
	DD	imagerel __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DB	0b0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	DD	imagerel $ip2state$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD 061511H
	DD	0f0113215H
	DD	0700de00fH
	DD	0300b600cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD 040021H
	DD	04e400H
	DD	057400H
	DD	imagerel $LN80
	DD	imagerel $LN80+28
	DD	imagerel $unwind$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD 021H
	DD	imagerel $LN80
	DD	imagerel $LN80+28
	DD	imagerel $unwind$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD 063621H
	DD	0c5436H
	DD	04e414H
	DD	057405H
	DD	imagerel $LN80
	DD	imagerel $LN80+28
	DD	imagerel $unwind$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD 040901H
	DD	0f0055209H
	DD	030026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DB 06H
	DB	'@'
	DB	00H
	DB	'Z'
	DB	02H
	DB	0aaH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DB 02H
	DB	0cH
	DD	imagerel __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	DD	imagerel $ip2state$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD 081a11H
	DD	09741aH
	DD	08641aH
	DD	07341aH
	DD	0e016321aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z DD 021H
	DD	imagerel $LN214
	DD	imagerel $LN214+103
	DD	imagerel $unwind$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z DD 021H
	DD	imagerel $LN214+103
	DD	imagerel $LN214+198
	DD	imagerel $chain$1$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z DD 020521H
	DD	0bd405H
	DD	imagerel $LN214+103
	DD	imagerel $LN214+198
	DD	imagerel $chain$1$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z DD 040a21H
	DD	0cc40aH
	DD	0d3405H
	DD	imagerel $LN214
	DD	imagerel $LN214+103
	DD	imagerel $unwind$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z DD 060c01H
	DD	0f008d20cH
	DD	07004e006H
	DD	050026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_K_KQEBD0@Z@QEBA@QEAD200020@Z DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z DD 021H
	DD	imagerel $LN42
	DD	imagerel $LN42+77
	DD	imagerel $unwind$?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z DD 020521H
	DD	066405H
	DD	imagerel $LN42
	DD	imagerel $LN42+77
	DD	imagerel $unwind$?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z DD 081501H
	DD	097415H
	DD	085415H
	DD	073415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$transform@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@P6AHH@Z@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0V10@P6AHH@Z@Z DD 081201H
	DD	0a5412H
	DD	093412H
	DD	0e00e3212H
	DD	0600b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@V10@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@@Z DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z DD 021H
	DD	imagerel $LN74
	DD	imagerel $LN74+41
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z DD 021H
	DD	imagerel $LN74+41
	DD	imagerel $LN74+55
	DD	imagerel $chain$1$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z DD 020521H
	DD	04f405H
	DD	imagerel $LN74+41
	DD	imagerel $LN74+55
	DD	imagerel $chain$1$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z DD 040e21H
	DD	05640eH
	DD	0c5405H
	DD	imagerel $LN74
	DD	imagerel $LN74+41
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z DD 040901H
	DD	0e0055209H
	DD	030027003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z DD 021H
	DD	imagerel $LN153
	DD	imagerel $LN153+58
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z DD 080021H
	DD	06f400H
	DD	07e400H
	DD	08d400H
	DD	0107400H
	DD	imagerel $LN153
	DD	imagerel $LN153+58
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z DD 085121H
	DD	08d451H
	DD	0107448H
	DD	06f40eH
	DD	07e405H
	DD	imagerel $LN153
	DD	imagerel $LN153+58
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z DD 050a01H
	DD	0c006820aH
	DD	050036004H
	DD	03002H
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T1 = 32
Path$GSCopy$ = 64
_Ec$2 = 72
__$ArrayPad$ = 88
Path$ = 112
?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Util::CreateDir, COMDAT

; 32   : {

$LN28:
	push	rbx
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx

; 31   : void Util::CreateDir(std::string Path)

	mov	QWORD PTR Path$GSCopy$[rsp], rcx

; 33   : 	std::filesystem::create_directories(Path);

	mov	rdx, rcx
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@path@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@W4format@012@@Z ; std::filesystem::path::path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>
	npad	1
	xor	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 166  :     error_code() noexcept : _Myval(0), _Mycat(&_STD system_category()) {} // construct non-error

	mov	QWORD PTR _Ec$2[rsp], rax
	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR _Ec$2[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3833 :         const bool _Result = _STD filesystem::create_directories(_Path, _Ec);

	lea	rdx, QWORD PTR _Ec$2[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z ; std::filesystem::create_directories

; 3834 :         if (_Ec) {

	cmp	DWORD PTR _Ec$2[rsp], 0
	jne	SHORT $LN26@CreateDir
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T1[rsp]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
	npad	1
	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 34   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 96					; 00000060H
	pop	rbx
	ret	0
$LN26@CreateDir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3835 :             _Throw_fs_error("create_directories", _Ec, _Path);

	lea	r8, QWORD PTR $T1[rsp]
	lea	rdx, QWORD PTR _Ec$2[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0BD@EPABGGCG@create_directories@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	int	3
$LN24@CreateDir:
?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Util::CreateDir
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
Path$GSCopy$ = 64
_Ec$2 = 72
__$ArrayPad$ = 88
Path$ = 112
?dtor$0@?0??CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::CreateDir'::`1'::dtor$0
	mov	rcx, QWORD PTR Path$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::CreateDir'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
Path$GSCopy$ = 64
_Ec$2 = 72
__$ArrayPad$ = 88
Path$ = 112
?dtor$1@?0??CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::CreateDir'::`1'::dtor$1
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$1@?0??CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::CreateDir'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?FileExists@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
buffer$ = 32
__$ArrayPad$ = 80
File$ = 112
?FileExists@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Util::FileExists, COMDAT

; 21   : {

$LN18:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 21   : {

	mov	rdi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN6@FileExists

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN6@FileExists:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h

; 241  :             return _stat64i32(_FileName, (struct _stat64i32*)_Stat);

	lea	rdx, QWORD PTR buffer$[rsp]
	call	QWORD PTR __imp__stat64i32
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 23   : 	return (stat(File.c_str(), &buffer) == 0);

	test	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 23   : 	return (stat(File.c_str(), &buffer) == 0);

	sete	bl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 23   : 	return (stat(File.c_str(), &buffer) == 0);

	movzx	eax, bl

; 24   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+120]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?FileExists@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Util::FileExists
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?ReplaceString@Util@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@1@Z
_TEXT	SEGMENT
str$ = 64
from$ = 72
to$ = 80
?ReplaceString@Util@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@1@Z PROC ; Util::ReplaceString, COMDAT

; 106  : {

$LN34:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 48					; 00000030H
	mov	rsi, r8
	mov	rdi, rdx
	mov	rbx, rcx

; 107  : 	size_t startPos = 0;

	xor	ebp, ebp
	npad	11
$LL2@ReplaceStr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdi+24], 16

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	r9, rdi

; 4343 :         return static_cast<size_type>(_Traits_find<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off,

	mov	r14, QWORD PTR [rdi+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN8@ReplaceStr

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r9, QWORD PTR [rdi]
$LN8@ReplaceStr:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rbx+24], 16

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rbx

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN13@ReplaceStr

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx]
$LN13@ReplaceStr:

; 4343 :         return static_cast<size_type>(_Traits_find<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off,

	mov	rdx, QWORD PTR [rbx+16]
	mov	r8, rbp
	mov	QWORD PTR [rsp+32], r14
	call	??$_Traits_find@U?$char_traits@D@std@@@std@@YA_KQEBD_K101@Z ; std::_Traits_find<std::char_traits<char> >
	mov	rbp, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 108  : 	while ((startPos = str.find(from, startPos)) != std::string::npos)

	cmp	rax, -1
	je	SHORT $LN27@ReplaceStr
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rsi+24], 16

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	r9, rsi

; 3678 :         return replace(_Off, _Nx, _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rax, QWORD PTR [rsi+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN20@ReplaceStr

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r9, QWORD PTR [rsi]
$LN20@ReplaceStr:

; 3678 :         return replace(_Off, _Nx, _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, r14
	mov	QWORD PTR [rsp+32], rax
	mov	rdx, rbp
	mov	rcx, rbx
	call	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 111  : 		startPos += to.length(); // In case the replacement string contains the target substring

	add	rbp, QWORD PTR [rsi+16]

; 112  : 	}

	jmp	SHORT $LL2@ReplaceStr
$LN27@ReplaceStr:

; 113  : 	return true;
; 114  : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	al, 1
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	r14
	ret	0
?ReplaceString@Util@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@1@Z ENDP ; Util::ReplaceString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\func_trigonometric.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?DegreesToRadians@Util@@YAMM@Z
_TEXT	SEGMENT
Degrees$ = 8
?DegreesToRadians@Util@@YAMM@Z PROC			; Util::DegreesToRadians, COMDAT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\func_trigonometric.inl

; 13   : 		return degrees * static_cast<genType>(0.01745329251994329576923690768489);

	mulss	xmm0, DWORD PTR __real@3c8efa35
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 18   : }

	ret	0
?DegreesToRadians@Util@@YAMM@Z ENDP			; Util::DegreesToRadians
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?CompareFloatsWithTolerance@Util@@YA_NMMM@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
Tolerance$ = 24
?CompareFloatsWithTolerance@Util@@YA_NMMM@Z PROC	; Util::CompareFloatsWithTolerance, COMDAT

; 157  : 	return std::fabs(a - b) <= Tolerance;

	subss	xmm0, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 680  :             return (float)fabs(_X);

	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 157  : 	return std::fabs(a - b) <= Tolerance;

	comiss	xmm2, xmm0
	setae	al

; 158  : }

	ret	0
?CompareFloatsWithTolerance@Util@@YA_NMMM@Z ENDP	; Util::CompareFloatsWithTolerance
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 336
??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Util::StringToNumber<float>, COMDAT

; 81   : {

$LN20:
	push	rbx
	sub	rsp, 320				; 00000140H
	movaps	XMMWORD PTR [rsp+304], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx

; 80   : template<> float Util::StringToNumber(std::string Value)

	mov	QWORD PTR Value$GSCopy$[rsp], rcx
	xor	edx, edx
	mov	r8d, 240				; 000000f0H
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	memset

; 82   : 	float Number;
; 83   : 	std::istringstream StringStream(Value);

	mov	rdx, rbx
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 84   : 	StringStream >> Number;

	lea	rdx, QWORD PTR Number$[rsp]
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	QWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@AEAM@Z

; 85   : 	return Number;

	movss	xmm6, DWORD PTR Number$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 613  :     ~basic_istringstream() noexcept override {}

	mov	rax, QWORD PTR StringStream$[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR StringStream$[rsp+rcx], rax
	mov	rax, QWORD PTR StringStream$[rsp]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	r8d, DWORD PTR [rdx-144]
	mov	DWORD PTR StringStream$[rsp+rdx-4], r8d

; 109  :     ~basic_stringbuf() noexcept override {

	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR StringStream$[rsp+16], rax

; 110  :         _Tidy();

	lea	rcx, QWORD PTR StringStream$[rsp+16]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 111  :     }

	lea	rcx, QWORD PTR StringStream$[rsp+16]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ

; 613  :     ~basic_istringstream() noexcept override {}

	lea	rcx, QWORD PTR StringStream$[rsp+24]
	call	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR StringStream$[rsp+144]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 85   : 	return Number;

	movaps	xmm0, xmm6

; 86   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	movaps	xmm6, XMMWORD PTR [rsp+304]
	add	rsp, 320				; 00000140H
	pop	rbx
	ret	0
??$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Util::StringToNumber<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 336
?dtor$0@?0???$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::StringToNumber<float>'::`1'::dtor$0
	mov	rcx, QWORD PTR Value$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::StringToNumber<float>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 336
?dtor$1@?0???$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::StringToNumber<float>'::`1'::dtor$1
	lea	rcx, QWORD PTR StringStream$[rdx]
	jmp	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
?dtor$1@?0???$StringToNumber@M@Util@@YAMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::StringToNumber<float>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 320
??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Util::StringToNumber<int>, COMDAT

; 65   : {

$LN20:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 304				; 00000130H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rcx

; 64   : template<> int32_t Util::StringToNumber(std::string Value)

	mov	QWORD PTR Value$GSCopy$[rsp], rcx
	xor	edx, edx
	mov	r8d, 240				; 000000f0H
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	memset

; 66   : 	int32_t Number;
; 67   : 	std::istringstream StringStream(Value);

	mov	rdx, rdi
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 68   : 	StringStream >> Number;

	lea	rdx, QWORD PTR Number$[rsp]
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	QWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@AEAH@Z

; 69   : 	return Number;

	mov	ebx, DWORD PTR Number$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 613  :     ~basic_istringstream() noexcept override {}

	mov	rax, QWORD PTR StringStream$[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR StringStream$[rsp+rcx], rax
	mov	rax, QWORD PTR StringStream$[rsp]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	r8d, DWORD PTR [rdx-144]
	mov	DWORD PTR StringStream$[rsp+rdx-4], r8d

; 109  :     ~basic_stringbuf() noexcept override {

	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR StringStream$[rsp+16], rax

; 110  :         _Tidy();

	lea	rcx, QWORD PTR StringStream$[rsp+16]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 111  :     }

	lea	rcx, QWORD PTR StringStream$[rsp+16]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ

; 613  :     ~basic_istringstream() noexcept override {}

	lea	rcx, QWORD PTR StringStream$[rsp+24]
	call	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR StringStream$[rsp+144]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 69   : 	return Number;

	mov	eax, ebx

; 70   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+328]
	add	rsp, 304				; 00000130H
	pop	rdi
	ret	0
??$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Util::StringToNumber<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 320
?dtor$0@?0???$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::StringToNumber<int>'::`1'::dtor$0
	mov	rcx, QWORD PTR Value$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::StringToNumber<int>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 320
?dtor$1@?0???$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::StringToNumber<int>'::`1'::dtor$1
	lea	rcx, QWORD PTR StringStream$[rdx]
	jmp	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
?dtor$1@?0???$StringToNumber@H@Util@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::StringToNumber<int>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 320
??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Util::StringToNumber<__int64>, COMDAT

; 73   : {

$LN20:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 304				; 00000130H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rcx

; 72   : template<> int64_t Util::StringToNumber(std::string Value)

	mov	QWORD PTR Value$GSCopy$[rsp], rcx
	xor	edx, edx
	mov	r8d, 240				; 000000f0H
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	memset

; 74   : 	int64_t Number;
; 75   : 	std::istringstream StringStream(Value);

	mov	rdx, rdi
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 76   : 	StringStream >> Number;

	lea	rdx, QWORD PTR Number$[rsp]
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	QWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@AEA_J@Z

; 77   : 	return Number;

	mov	rbx, QWORD PTR Number$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 613  :     ~basic_istringstream() noexcept override {}

	mov	rax, QWORD PTR StringStream$[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR StringStream$[rsp+rcx], rax
	mov	rax, QWORD PTR StringStream$[rsp]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	r8d, DWORD PTR [rdx-144]
	mov	DWORD PTR StringStream$[rsp+rdx-4], r8d

; 109  :     ~basic_stringbuf() noexcept override {

	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR StringStream$[rsp+16], rax

; 110  :         _Tidy();

	lea	rcx, QWORD PTR StringStream$[rsp+16]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 111  :     }

	lea	rcx, QWORD PTR StringStream$[rsp+16]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ

; 613  :     ~basic_istringstream() noexcept override {}

	lea	rcx, QWORD PTR StringStream$[rsp+24]
	call	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR StringStream$[rsp+144]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 77   : 	return Number;

	mov	rax, rbx

; 78   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+328]
	add	rsp, 304				; 00000130H
	pop	rdi
	ret	0
??$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Util::StringToNumber<__int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 320
?dtor$0@?0???$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::StringToNumber<__int64>'::`1'::dtor$0
	mov	rcx, QWORD PTR Value$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::StringToNumber<__int64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 320
?dtor$1@?0???$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::StringToNumber<__int64>'::`1'::dtor$1
	lea	rcx, QWORD PTR StringStream$[rdx]
	jmp	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
?dtor$1@?0???$StringToNumber@_J@Util@@YA_JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::StringToNumber<__int64>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 320
??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Util::StringToNumber<unsigned int>, COMDAT

; 49   : {

$LN20:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 304				; 00000130H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rcx

; 48   : template<> uint32_t Util::StringToNumber(std::string Value)

	mov	QWORD PTR Value$GSCopy$[rsp], rcx
	xor	edx, edx
	mov	r8d, 240				; 000000f0H
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	memset

; 50   : 	uint32_t Number;
; 51   : 	std::istringstream StringStream(Value);

	mov	rdx, rdi
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 52   : 	StringStream >> Number;

	lea	rdx, QWORD PTR Number$[rsp]
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	QWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@AEAI@Z

; 53   : 	return Number;

	mov	ebx, DWORD PTR Number$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 613  :     ~basic_istringstream() noexcept override {}

	mov	rax, QWORD PTR StringStream$[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR StringStream$[rsp+rcx], rax
	mov	rax, QWORD PTR StringStream$[rsp]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	r8d, DWORD PTR [rdx-144]
	mov	DWORD PTR StringStream$[rsp+rdx-4], r8d

; 109  :     ~basic_stringbuf() noexcept override {

	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR StringStream$[rsp+16], rax

; 110  :         _Tidy();

	lea	rcx, QWORD PTR StringStream$[rsp+16]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 111  :     }

	lea	rcx, QWORD PTR StringStream$[rsp+16]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ

; 613  :     ~basic_istringstream() noexcept override {}

	lea	rcx, QWORD PTR StringStream$[rsp+24]
	call	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR StringStream$[rsp+144]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 53   : 	return Number;

	mov	eax, ebx

; 54   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+328]
	add	rsp, 304				; 00000130H
	pop	rdi
	ret	0
??$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Util::StringToNumber<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 320
?dtor$0@?0???$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::StringToNumber<unsigned int>'::`1'::dtor$0
	mov	rcx, QWORD PTR Value$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::StringToNumber<unsigned int>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 320
?dtor$1@?0???$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::StringToNumber<unsigned int>'::`1'::dtor$1
	lea	rcx, QWORD PTR StringStream$[rdx]
	jmp	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
?dtor$1@?0???$StringToNumber@I@Util@@YAIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::StringToNumber<unsigned int>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 320
??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Util::StringToNumber<unsigned __int64>, COMDAT

; 57   : {

$LN20:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 304				; 00000130H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rcx

; 56   : template<> uint64_t Util::StringToNumber(std::string Value)

	mov	QWORD PTR Value$GSCopy$[rsp], rcx
	xor	edx, edx
	mov	r8d, 240				; 000000f0H
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	memset

; 58   : 	uint64_t Number;
; 59   : 	std::istringstream StringStream(Value);

	mov	rdx, rdi
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 60   : 	StringStream >> Number;

	lea	rdx, QWORD PTR Number$[rsp]
	lea	rcx, QWORD PTR StringStream$[rsp]
	call	QWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@AEA_K@Z

; 61   : 	return Number;

	mov	rbx, QWORD PTR Number$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 613  :     ~basic_istringstream() noexcept override {}

	mov	rax, QWORD PTR StringStream$[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR StringStream$[rsp+rcx], rax
	mov	rax, QWORD PTR StringStream$[rsp]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	r8d, DWORD PTR [rdx-144]
	mov	DWORD PTR StringStream$[rsp+rdx-4], r8d

; 109  :     ~basic_stringbuf() noexcept override {

	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR StringStream$[rsp+16], rax

; 110  :         _Tidy();

	lea	rcx, QWORD PTR StringStream$[rsp+16]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 111  :     }

	lea	rcx, QWORD PTR StringStream$[rsp+16]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ

; 613  :     ~basic_istringstream() noexcept override {}

	lea	rcx, QWORD PTR StringStream$[rsp+24]
	call	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR StringStream$[rsp+144]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 61   : 	return Number;

	mov	rax, rbx

; 62   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+328]
	add	rsp, 304				; 00000130H
	pop	rdi
	ret	0
??$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Util::StringToNumber<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 320
?dtor$0@?0???$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::StringToNumber<unsigned __int64>'::`1'::dtor$0
	mov	rcx, QWORD PTR Value$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::StringToNumber<unsigned __int64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Value$GSCopy$ = 32
Number$ = 40
StringStream$ = 48
__$ArrayPad$ = 288
Value$ = 320
?dtor$1@?0???$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::StringToNumber<unsigned __int64>'::`1'::dtor$1
	lea	rcx, QWORD PTR StringStream$[rdx]
	jmp	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
?dtor$1@?0???$StringToNumber@_K@Util@@YA_KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::StringToNumber<unsigned __int64>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\func_trigonometric.inl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?RadiansToDegrees@Util@@YAMM@Z
_TEXT	SEGMENT
Radians$ = 8
?RadiansToDegrees@Util@@YAMM@Z PROC			; Util::RadiansToDegrees, COMDAT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\func_trigonometric.inl

; 28   : 		return radians * static_cast<genType>(57.295779513082320876798154814105);

	mulss	xmm0, DWORD PTR __real@42652ee1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 13   : }

	ret	0
?RadiansToDegrees@Util@@YAMM@Z ENDP			; Util::RadiansToDegrees
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; Util::CopyDirectoryRecursively, COMDAT

; 89   : {

$LN761:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-352]
	sub	rsp, 608				; 00000260H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	QWORD PTR DestinationPath$GSCopy$1$[rbp-256], rdx
	xor	r15d, r15d
	mov	r13d, r15d
	mov	DWORD PTR $T3[rsp], r15d

; 90   : 	for (const auto& Entry : std::filesystem::directory_iterator(SourcePath))

	mov	rdx, rcx
	lea	rcx, QWORD PTR $T13[rbp-256]
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@path@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@W4format@012@@Z ; std::filesystem::path::path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>
	npad	1
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1470 :     element_type* _Ptr{nullptr};

	movdqa	XMMWORD PTR $S8$16[rbp-256], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2619 :             const auto _Error = _Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path);

	lea	rdx, QWORD PTR $T13[rbp-256]
	lea	rcx, QWORD PTR $S8$16[rbp-256]
	call	??$_Initialize_dir_enum@U_Dir_enum_impl@filesystem@std@@@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@2@AEBVpath@12@W4directory_options@12@@Z ; std::filesystem::_Dir_enum_impl::_Initialize_dir_enum<std::filesystem::_Dir_enum_impl>

; 2620 :             if (_Error != __std_win_error::_Success) {

	test	eax, eax
	jne	$LN759@CopyDirect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T13[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
	xorps	xmm0, xmm0
	movups	XMMWORD PTR <begin>$L0$18[rbp-256], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1396 :         if (_Rep) {

	mov	rcx, QWORD PTR $S8$16[rbp-248]
	test	rcx, rcx
	je	SHORT $LN732@CopyDirect

; 1169 :         _MT_INCR(_Uses);

	lock inc DWORD PTR [rcx+8]
	mov	rcx, QWORD PTR $S8$16[rbp-248]
	mov	r13d, DWORD PTR $T3[rsp]
$LN732@CopyDirect:

; 1345 :         _Ptr = _Right._Ptr;

	movaps	xmm0, XMMWORD PTR $S8$16[rbp-256]
	movdqa	XMMWORD PTR <begin>$L0$18[rbp-256], xmm0

; 1396 :         if (_Rep) {

	test	rcx, rcx
	je	SHORT $LN670@CopyDirect

; 1169 :         _MT_INCR(_Uses);

	lock inc DWORD PTR [rcx+8]
	mov	rcx, QWORD PTR $S8$16[rbp-248]
	mov	r13d, DWORD PTR $T3[rsp]
$LN670@CopyDirect:
	xorps	xmm1, xmm1

; 1470 :     element_type* _Ptr{nullptr};

	movdqu	XMMWORD PTR <end>$L0$21[rbp-256], xmm1

; 1402 :         if (_Rep) {

	mov	esi, -1
	test	rcx, rcx
	je	SHORT $LN693@CopyDirect

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN750@CopyDirect

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR $S8$16[rbp-248]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rbx+12], eax
	cmp	eax, 1
	jne	SHORT $LN750@CopyDirect

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR $S8$16[rbp-248]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN750@CopyDirect:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 90   : 	for (const auto& Entry : std::filesystem::directory_iterator(SourcePath))

	mov	r13d, DWORD PTR $T3[rsp]
$LN693@CopyDirect:
	lea	rdi, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	r12, 9223372036854775806		; 7ffffffffffffffeH
	npad	15
$LL23@CopyDirect:
	mov	rbx, QWORD PTR <begin>$L0$18[rbp-256]
	test	rbx, rbx
	je	$LN3@CopyDirect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2381 :             const auto _Result = _Get_any_status(_Status_stats_flags);

	mov	r8d, 3
	lea	rdx, QWORD PTR _Result$9[rbp-256]
	mov	rcx, rbx
	call	?_Get_any_status@directory_entry@filesystem@std@@AEBA?AU_File_status_and_error@23@W4__std_fs_stats_flags@@@Z ; std::filesystem::directory_entry::_Get_any_status

; 2065 :             return _Error != __std_win_error::_Success && _Status.type() != file_type::not_found

	mov	rax, QWORD PTR _Result$9[rbp-256]
	mov	edx, DWORD PTR _Result$9[rbp-248]
	test	edx, edx
	je	SHORT $LN33@CopyDirect
	lea	ecx, DWORD PTR [rax-1]
	test	ecx, -9					; fffffff7H
	jne	$LN743@CopyDirect
$LN33@CopyDirect:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 92   : 		if (Entry.is_directory() && !std::filesystem::is_empty(Entry))

	cmp	eax, 3
	jne	$LN2@CopyDirect
	add	rbx, 32					; 00000020H
	mov	QWORD PTR $T5[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 8
	jb	SHORT $LN744@CopyDirect

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx]
$LN744@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3543 :         const auto _Error = __std_fs_get_stats(_Path.c_str(), &_Stats, _Flags);

	mov	r9d, -1					; ffffffffH
	mov	r8d, 11
	lea	rdx, QWORD PTR _Stats$22[rbp-256]
	call	__std_fs_get_stats
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T10[rbp-256], eax
	mov	QWORD PTR $T10[rbp-248], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3544 :         _Ec               = _Make_ec(_Error);

	movaps	xmm0, XMMWORD PTR $T10[rbp-256]
	movdqa	XMMWORD PTR _Ec$19[rbp-256], xmm0

; 3545 :         if (_Error != __std_win_error::_Success) {

	test	eax, eax
	je	SHORT $LN88@CopyDirect

; 3546 :             return false;

	xor	dil, dil
	jmp	$LN90@CopyDirect
$LN88@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	test	DWORD PTR _Stats$22[rbp-240], 16
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3549 :         if ((_Stats._Attributes & __std_fs_file_attr::_Directory) == __std_fs_file_attr{}) {

	jne	SHORT $LN89@CopyDirect

; 3550 :             return _Stats._File_size == 0;

	cmp	QWORD PTR _Stats$22[rbp-248], 0
	sete	dil
	jmp	$LN90@CopyDirect
$LN89@CopyDirect:
	xorps	xmm1, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1470 :     element_type* _Ptr{nullptr};

	movdqu	XMMWORD PTR _Iter$17[rbp-256], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2633 :             _Ec = _Make_ec(_Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path));

	mov	rdx, rbx
	lea	rcx, QWORD PTR _Iter$17[rbp-256]
	call	??$_Initialize_dir_enum@U_Dir_enum_impl@filesystem@std@@@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@2@AEBVpath@12@W4directory_options@12@@Z ; std::filesystem::_Dir_enum_impl::_Initialize_dir_enum<std::filesystem::_Dir_enum_impl>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T11[rbp-256], eax
	mov	QWORD PTR $T11[rbp-248], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2633 :             _Ec = _Make_ec(_Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path));

	movaps	xmm0, XMMWORD PTR $T11[rbp-256]
	movdqa	XMMWORD PTR _Ec$19[rbp-256], xmm0

; 2634 :         }

	test	eax, eax

; 3553 :             return !_Ec && _Iter._At_end();

	jne	SHORT $LN92@CopyDirect
	cmp	QWORD PTR _Iter$17[rbp-256], 0
	jne	SHORT $LN92@CopyDirect
	mov	dil, 1
	jmp	SHORT $LN93@CopyDirect
$LN92@CopyDirect:
	xor	dil, dil
$LN93@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1402 :         if (_Rep) {

	mov	rcx, QWORD PTR _Iter$17[rbp-248]
	test	rcx, rcx
	je	SHORT $LN141@CopyDirect

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN751@CopyDirect

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR _Iter$17[rbp-248]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rbx+12], eax
	cmp	eax, 1
	jne	SHORT $LN751@CopyDirect

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR _Iter$17[rbp-248]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN751@CopyDirect:

; 1179 :             _Decwref();
; 1180 :         }
; 1181 :     }
; 1182 : 
; 1183 :     void _Decwref() noexcept { // decrement weak reference count
; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	mov	r13d, DWORD PTR $T3[rsp]
$LN141@CopyDirect:
	mov	rbx, QWORD PTR $T5[rsp]
$LN90@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3561 :         if (_Ec) {

	cmp	DWORD PTR _Ec$19[rbp-256], 0
	jne	$LN705@CopyDirect
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 92   : 		if (Entry.is_directory() && !std::filesystem::is_empty(Entry))

	test	dil, dil
	jne	$LN754@CopyDirect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 8
	jb	SHORT $LN154@CopyDirect

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx]
$LN154@CopyDirect:

; 4041 :         return basic_string_view<_Elem, _Traits>{_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize};

	mov	rax, QWORD PTR [rbx+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 497  :         const auto _Last     = _First + _Str.size();

	lea	rbx, QWORD PTR [rcx+rax*2]

; 498  :         const auto _Filename = _Find_filename(_First, _Last);

	mov	rsi, rbx

; 435  :         return _STD find_if_not(_Find_root_name_end(_First, _Last), _Last, _Is_slash);

	mov	rdx, rbx
	call	?_Find_root_name_end@filesystem@std@@YAPEB_WQEB_W0@Z ; std::filesystem::_Find_root_name_end
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rax, rbx
	je	SHORT $LN164@CopyDirect
$LL171@CopyDirect:

; 371  :         if (!_Pred(*_UFirst)) {

	movzx	ecx, WORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, 92					; 0000005cH
	je	SHORT $LN747@CopyDirect
	cmp	cx, 47					; 0000002fH
	jne	SHORT $LN748@CopyDirect
$LN747@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	add	rax, 2
	cmp	rax, rbx
	jne	SHORT $LL171@CopyDirect
$LN748@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 487  :         while (_Relative_path != _Last && !_Is_slash(_Last[-1])) {

	cmp	rax, rbx
	je	SHORT $LN164@CopyDirect
	npad	12
$LL163@CopyDirect:
	lea	rdx, QWORD PTR [rsi-2]
	movzx	ecx, WORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, 92					; 0000005cH
	je	SHORT $LN164@CopyDirect
	cmp	cx, 47					; 0000002fH
	je	SHORT $LN164@CopyDirect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 488  :             --_Last;

	mov	rsi, rdx

; 487  :         while (_Relative_path != _Last && !_Is_slash(_Last[-1])) {

	cmp	rax, rdx
	jne	SHORT $LL163@CopyDirect
$LN164@CopyDirect:

; 499  :         return wstring_view(_Filename, static_cast<size_t>(_Last - _Filename));

	sub	rbx, rsi
	sar	rbx, 1
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T6[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T6[rbp-240], r15

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T6[rbp-232], r15
	cmp	rbx, r12

; 2620 :         if (_Count > max_size()) {

	ja	$LN706@CopyDirect

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T6[rbp-232], 7
	cmp	rbx, 8
	jae	SHORT $LN213@CopyDirect

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T6[rbp-240], rbx

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	add	rbx, rbx
	mov	r8, rbx
	mov	rdx, rsi
	lea	rcx, QWORD PTR $T6[rsp]
	call	memcpy

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	WORD PTR $T6[rsp+rbx], r15w

; 2638 :             } else { // _Strat == _Construct_strategy::_From_string
; 2639 : #ifdef _INSERT_STRING_ANNOTATION
; 2640 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2641 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2642 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2643 : #endif // !_INSERT_STRING_ANNOTATION
; 2644 :             }
; 2645 : 
; 2646 :             _Proxy._Release();
; 2647 :             return;

	jmp	SHORT $LN211@CopyDirect
$LN213@CopyDirect:

; 2648 :         }
; 2649 : 
; 2650 :         _My_data._Myres               = _BUF_SIZE - 1;

	mov	r14, rbx
	or	r14, 7

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	cmp	r14, r12

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN224@CopyDirect

; 4716 :             return _Max;

	mov	r14, r12
	jmp	SHORT $LN223@CopyDirect
$LN224@CopyDirect:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	r14, 10
	mov	eax, 10
	cmovb	r14, rax
$LN223@CopyDirect:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	lea	rdx, QWORD PTR [r14+1]
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
	mov	rdi, rax

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T6[rsp], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T6[rbp-240], rbx

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T6[rbp-232], r14

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	add	rbx, rbx
	mov	r8, rbx
	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy

; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

	mov	WORD PTR [rdi+rbx], r15w
$LN211@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1109 :             return _Parse_filename(_Text);

	or	r13d, 7
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r15, QWORD PTR $T6[rsp]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T6[rbp-232], 8
	cmovae	r15, QWORD PTR $T6[rsp]

; 1209 :         : _Mydata(_Cts), _Mysize(_Count) {

	mov	r14, QWORD PTR $T6[rbp-240]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	call	__std_fs_code_page
	mov	r12d, eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T4[rsp], xmm0

; 4821 :         _My_data._Mysize = 0;

	xor	eax, eax
	mov	QWORD PTR $T4[rsp+16], rax

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T4[rsp+24], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T4[rsp], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 80   :     return _Output;

	or	r13d, 64				; 00000040H
	mov	DWORD PTR $T3[rsp], r13d
	test	r14, r14

; 54   :     }
; 55   : 
; 56   :     return _Result._Len;
; 57   : }
; 58   : 
; 59   : template <class _Traits, class _Alloc>
; 60   : _NODISCARD basic_string<typename _Traits::char_type, _Traits, _Alloc> _Convert_wide_to_narrow(
; 61   :     const __std_code_page _Code_page, const wstring_view _Input, const _Alloc& _Al) {
; 62   :     basic_string<typename _Traits::char_type, _Traits, _Alloc> _Output(_Al);
; 63   : 
; 64   :     if (!_Input.empty()) {

	je	$LN328@CopyDirect

; 65   :         if (_Input.size() > static_cast<size_t>(INT_MAX)) {

	cmp	r14, 2147483647				; 7fffffffH
	ja	$LN707@CopyDirect

; 67   :         }
; 68   : 
; 69   :         const int _Len = _Check_convert_result(

	mov	DWORD PTR [rsp+32], eax
	xor	r9d, r9d
	mov	r8d, r14d
	mov	rdx, r15
	mov	ecx, r12d
	call	__std_fs_convert_wide_to_narrow
	mov	rbx, rax
	mov	QWORD PTR tv937[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN708@CopyDirect

; 72   :         _Output.resize(static_cast<size_t>(_Len));

	movsxd	rcx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4140 :         if (_New_size <= _Old_size) {

	mov	rdx, QWORD PTR $T4[rsp+16]
	cmp	rcx, rdx
	ja	SHORT $LN287@CopyDirect

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T4[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T4[rsp+24], 16
	cmovae	rax, QWORD PTR $T4[rsp]

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR $T4[rsp+16], rcx
	mov	BYTE PTR [rax+rcx], 0

; 4142 :         } else {

	jmp	SHORT $LN297@CopyDirect
$LN287@CopyDirect:

; 4143 :             append(_New_size - _Old_size, _Ch);

	mov	rsi, rcx
	sub	rsi, rdx
	mov	r8, QWORD PTR $T4[rsp+24]
	mov	rax, r8
	sub	rax, rdx

; 3298 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rsi, rax
	ja	SHORT $LN298@CopyDirect

; 3299 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3300 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	mov	QWORD PTR $T4[rsp+16], rcx

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rdi, QWORD PTR $T4[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	r8, 16
	cmovae	rdi, QWORD PTR $T4[rsp]

; 3302 :             _Traits::assign(_Old_ptr + _Old_size, _Count, _Ch);

	add	rdi, rdx

; 437  :         return static_cast<_Elem*>(_CSTD memset(_First, _Ch, _Count));

	mov	r8, rsi
	xor	edx, edx
	mov	rcx, rdi
	call	memset

; 3303 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rdi+rsi], 0

; 3304 :             return *this;

	jmp	SHORT $LN297@CopyDirect
$LN298@CopyDirect:

; 3305 :         }
; 3306 : 
; 3307 :         return _Reallocate_grow_by(

	mov	r9, rsi
	mov	rdx, rsi
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,unsigned __int64,char>
$LN297@CopyDirect:

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	r9, QWORD PTR $T4[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T4[rsp+24], 16
	cmovae	r9, QWORD PTR $T4[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 76   :         (void) _Check_convert_result(__std_fs_convert_wide_to_narrow(

	mov	DWORD PTR [rsp+32], ebx
	mov	r8d, r14d
	mov	rdx, r15
	mov	ecx, r12d
	call	__std_fs_convert_wide_to_narrow
	mov	QWORD PTR tv992[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN709@CopyDirect
$LN328@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	and	r13d, -65				; ffffffffffffffbfH

; 934  :             return string<char>();

	or	r13d, 56				; 00000038H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4938 :     const auto _Left_size  = _Left.size();

	mov	r15, QWORD PTR DestinationPath$GSCopy$1$[rbp-256]
	mov	rcx, QWORD PTR [r15+16]

; 4939 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 4940 :     if (_Left.max_size() - _Left_size < _Right_size) {

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	sub	rax, rcx
	cmp	rax, 1
	jb	$LN710@CopyDirect

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	r9, r15

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r15+24], 16
	jb	SHORT $LN343@CopyDirect

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r9, QWORD PTR [r15]
$LN343@CopyDirect:

; 4944 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right, _Right_size};

	mov	QWORD PTR [rsp+48], 1
	lea	rax, OFFSET FLAT:??_C@_01KMDKNFGN@?1@
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], rcx
	lea	rcx, QWORD PTR $T14[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	bts	r13d, 7

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	lea	r9, QWORD PTR $T4[rsp]
	lea	r8, QWORD PTR $T14[rbp-256]
	lea	rcx, QWORD PTR $T8[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	bts	r13d, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 649  :         path(const _Src& _Source, format = auto_format) : _Text(_Convert_Source_to_wide(_Source)) {

	lea	rax, QWORD PTR $T7[rbp-256]
	mov	QWORD PTR __$ReturnUdt$[rbp-256], rax

; 243  :         return basic_string_view<_EcharT>(_Source.data(), _Source.size()); // erase mismatching _Traits

	mov	rdi, QWORD PTR $T8[rbp-240]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rsi, QWORD PTR $T8[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T8[rbp-232], 16
	cmovae	rsi, QWORD PTR $T8[rbp-256]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 199  :             return _Convert_narrow_to_wide(__std_fs_code_page(), _Input);

	call	__std_fs_code_page
	mov	r14d, eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T7[rbp-256], xmm0

; 4821 :         _My_data._Mysize = 0;

	xor	r15d, r15d
	mov	QWORD PTR $T7[rbp-240], r15

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T7[rbp-232], 7

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	WORD PTR $T7[rbp-256], r15w
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 58   :         return _Output;

	bts	r13d, 11
	mov	DWORD PTR $T3[rsp], r13d

; 44   :         if (!_Input.empty()) {

	test	rdi, rdi
	je	SHORT $LN406@CopyDirect

; 45   :             if (_Input.size() > static_cast<size_t>(INT_MAX)) {

	cmp	rdi, 2147483647				; 7fffffffH
	ja	$LN711@CopyDirect

; 47   :             }
; 48   : 
; 49   :             const int _Len = _Check_convert_result(__std_fs_convert_narrow_to_wide(

	mov	DWORD PTR [rsp+32], r15d
	xor	r9d, r9d
	mov	r8d, edi
	mov	rdx, rsi
	mov	ecx, eax
	call	__std_fs_convert_narrow_to_wide
	mov	rbx, rax
	mov	QWORD PTR tv1311[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN712@CopyDirect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 52   :             _Output.resize(static_cast<size_t>(_Len));

	movsxd	rdx, ebx
	lea	rcx, QWORD PTR $T7[rbp-256]
	call	?resize@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::resize
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	r9, QWORD PTR $T7[rbp-256]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T7[rbp-232], 8
	cmovae	r9, QWORD PTR $T7[rbp-256]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 54   :             (void) _Check_convert_result(__std_fs_convert_narrow_to_wide(

	mov	DWORD PTR [rsp+32], ebx
	mov	r8d, edi
	mov	rdx, rsi
	mov	ecx, r14d
	call	__std_fs_convert_narrow_to_wide
	mov	QWORD PTR tv1364[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN713@CopyDirect
$LN406@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 199  :             return _Convert_narrow_to_wide(__std_fs_code_page(), _Input);

	btr	r13d, 11

; 283  :         return _Convert_stringoid_to_wide(_Stringoid_from_Source(_Source), _Tag);

	or	r13d, 1536				; 00000600H
	mov	DWORD PTR $T3[rsp], r13d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 166  :     error_code() noexcept : _Myval(0), _Mycat(&_STD system_category()) {} // construct non-error

	mov	QWORD PTR _Ec$15[rbp-256], r15
	lea	rdi, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR _Ec$15[rbp-248], rdi
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2096 :         directory_entry(const filesystem::path& _Path_arg, error_code& _Ec) : _Cached_data{}, _Path(_Path_arg) {

	movups	XMMWORD PTR _From_dir$20[rbp-256], xmm0
	movups	XMMWORD PTR _From_dir$20[rbp-240], xmm0
	mov	rbx, QWORD PTR $T5[rsp]
	mov	rdx, rbx
	lea	rcx, QWORD PTR _From_dir$20[rbp-224]
	call	??0path@filesystem@std@@QEAA@AEBV012@@Z	; std::filesystem::path::path
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 189  :         _Myval = 0;

	mov	DWORD PTR _Ec$15[rbp-256], r15d

; 190  :         _Mycat = &_STD system_category();

	mov	QWORD PTR _Ec$15[rbp-248], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR _From_dir$20[rbp-224]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR _From_dir$20[rbp-200], 8
	cmovae	rcx, QWORD PTR _From_dir$20[rbp-224]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2463 :             const auto _Error = __std_fs_get_stats(_Path.c_str(), &_Stats, __std_fs_stats_flags::_All_data);

	mov	r9d, -1					; ffffffffH
	mov	r8d, 62					; 0000003eH
	lea	rdx, QWORD PTR _From_dir$20[rbp-256]
	call	__std_fs_get_stats
	mov	ecx, eax

; 2464 :             if (_Error == __std_win_error::_Success) {

	test	eax, eax
	jne	SHORT $LN432@CopyDirect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	test	DWORD PTR _From_dir$20[rbp-240], 1024	; 00000400H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2465 :                 if (_Bitmask_includes_any(_Stats._Attributes, __std_fs_file_attr::_Reparse_point)) {

	mov	eax, 62					; 0000003eH
	mov	ecx, 6
	cmovne	eax, ecx
	mov	DWORD PTR _From_dir$20[rbp-228], eax

; 2466 :                     _Stats._Available = __std_fs_stats_flags::_Attributes | __std_fs_stats_flags::_Reparse_tag;
; 2467 :                 } else {
; 2468 :                     _Stats._Available = __std_fs_stats_flags::_All_data;
; 2469 :                 }
; 2470 :             } else {

	jmp	SHORT $LN427@CopyDirect
$LN432@CopyDirect:

; 2471 :                 _Stats._Available = __std_fs_stats_flags::_None;

	mov	DWORD PTR _From_dir$20[rbp-228], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 52   :     switch (_Error) {

	sub	eax, 2
	je	SHORT $LN427@CopyDirect
	sub	eax, 1
	je	SHORT $LN427@CopyDirect
	sub	eax, 50					; 00000032H
	je	SHORT $LN427@CopyDirect
	cmp	eax, 70					; 00000046H
	je	SHORT $LN427@CopyDirect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T12[rbp-256], ecx
	mov	QWORD PTR $T12[rbp-248], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2143 :                 _Ec = _Make_ec(_Error);

	movaps	xmm0, XMMWORD PTR $T12[rbp-256]
	movdqa	XMMWORD PTR _Ec$15[rbp-256], xmm0
$LN427@CopyDirect:

; 2098 :             if (_Ec) {

	mov	eax, DWORD PTR _Ec$15[rbp-256]
	test	eax, eax
	je	SHORT $LN470@CopyDirect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR _From_dir$20[rbp-224]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR _From_dir$20[rbp-200], 8
	cmovae	rax, QWORD PTR _From_dir$20[rbp-224]

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR _From_dir$20[rbp-208], r15
	mov	WORD PTR [rax], r15w
	mov	eax, DWORD PTR _Ec$15[rbp-256]
$LN470@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4377 :         if (_Ec) { // report an error if exists(f) is false

	test	eax, eax
	jne	SHORT $LN757@CopyDirect

; 4378 :             return;
; 4379 :         }
; 4380 : 
; 4381 :         _Copy_impl(_From_dir, _To, _Options, _Ec);

	lea	r9, QWORD PTR _Ec$15[rbp-256]
	lea	r8d, QWORD PTR [rax+18]
	lea	rdx, QWORD PTR $T7[rbp-256]
	lea	rcx, QWORD PTR _From_dir$20[rbp-256]
	call	?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z ; std::filesystem::_Copy_impl
	npad	1
$LN757@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 208  :         return value() != 0;

	lea	rcx, QWORD PTR _From_dir$20[rbp-224]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4387 :         if (_Ec) {

	cmp	DWORD PTR _Ec$15[rbp-256], 0
	jne	$LN714@CopyDirect
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T7[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
	npad	1

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T8[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN518@CopyDirect

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T8[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN530@CopyDirect

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN527@CopyDirect
$LN530@CopyDirect:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN518@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T8[rbp-240], r15

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T8[rbp-232], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T8[rbp-256], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T14[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN547@CopyDirect

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T14[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN559@CopyDirect

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN556@CopyDirect
$LN559@CopyDirect:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN547@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T4[rsp+24]
	cmp	rdx, 16
	jb	SHORT $LN576@CopyDirect

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T4[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN588@CopyDirect

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN585@CopyDirect
$LN588@CopyDirect:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN576@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T4[rsp+16], r15

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T4[rsp+24], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T4[rsp], 0

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T6[rsp]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
	mov	esi, -1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 92   : 		if (Entry.is_directory() && !std::filesystem::is_empty(Entry))

	mov	r12, 9223372036854775806		; 7ffffffffffffffeH
	jmp	SHORT $LN2@CopyDirect
$LN754@CopyDirect:
	lea	rdi, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
$LN2@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2656 :             const auto _Error = _Dir_enum_impl::_Advance_and_reset_if_no_more_files(_Impl);

	lea	rcx, QWORD PTR <begin>$L0$18[rbp-256]
	call	?_Advance_and_reset_if_no_more_files@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@3@@Z ; std::filesystem::_Dir_enum_impl::_Advance_and_reset_if_no_more_files

; 2657 :             if (_Error != __std_win_error::_Success) {

	test	eax, eax
	jne	$LN704@CopyDirect
	jmp	$LL23@CopyDirect
$LN527@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN556@CopyDirect:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN585@CopyDirect:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN3@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1402 :         if (_Rep) {

	mov	rcx, QWORD PTR <begin>$L0$18[rbp-248]
	test	rcx, rcx
	je	SHORT $LN64@CopyDirect

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN64@CopyDirect

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR <begin>$L0$18[rbp-248]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rbx+12], eax
	cmp	eax, 1
	jne	SHORT $LN64@CopyDirect

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR <begin>$L0$18[rbp-248]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN64@CopyDirect:

; 1402 :         if (_Rep) {

	mov	rcx, QWORD PTR $S8$16[rbp-248]
	test	rcx, rcx
	je	SHORT $LN78@CopyDirect

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN78@CopyDirect

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR $S8$16[rbp-248]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	lock xadd DWORD PTR [rbx+12], esi
	cmp	esi, 1
	jne	SHORT $LN78@CopyDirect

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR $S8$16[rbp-248]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN78@CopyDirect:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 97   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+688]
	add	rsp, 608				; 00000260H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN705@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3562 :             _Throw_fs_error("is_empty", _Ec, _Path);

	mov	r8, rbx
	lea	rdx, QWORD PTR _Ec$19[rbp-256]
	lea	rcx, OFFSET FLAT:??_C@_08OBNFFMDJ@is_empty@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	int	3
$LN704@CopyDirect:

; 2658 :                 _Throw_fs_error("directory_iterator::operator++", _Error);

	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0BP@DPMCMHCK@directory_iterator?3?3operator?$CL?$CL@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@@Z ; std::filesystem::_Throw_fs_error
	npad	1
$LN759@CopyDirect:

; 2621 :                 _Throw_fs_error("directory_iterator::directory_iterator", _Error, _Path);

	lea	r8, QWORD PTR $T13[rbp-256]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0CH@GANCNKKD@directory_iterator?3?3directory_i@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	npad	1
$LN743@CopyDirect:

; 2383 :                 _Throw_fs_error("directory_entry::status", _Result._Error, _Path);

	lea	r8, QWORD PTR [rbx+32]
	lea	rcx, OFFSET FLAT:??_C@_0BI@LBKDNGFK@directory_entry?3?3status@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	npad	1
$LN709@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 53   :         _Throw_system_error_from_std_win_error(_Result._Err);

	mov	ecx, DWORD PTR tv992[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN708@CopyDirect:
	mov	ecx, DWORD PTR tv937[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN707@CopyDirect:

; 66   :             _Throw_system_error(errc::invalid_argument);

	call	?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
	npad	1
$LN713@CopyDirect:

; 53   :         _Throw_system_error_from_std_win_error(_Result._Err);

	mov	ecx, DWORD PTR tv1364[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN712@CopyDirect:
	mov	ecx, DWORD PTR tv1311[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN711@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 46   :                 _Throw_system_error(errc::invalid_argument);

	call	?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
	npad	1
$LN714@CopyDirect:

; 4388 :             _Throw_fs_error("copy", _Ec, _From, _To);

	lea	r9, QWORD PTR $T7[rbp-256]
	mov	r8, rbx
	lea	rdx, QWORD PTR _Ec$15[rbp-256]
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z ; std::filesystem::_Throw_fs_error
	npad	1
$LN710@CopyDirect:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4941 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN706@CopyDirect:

; 2621 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN755@CopyDirect:
?CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; Util::CopyDirectoryRecursively
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$0@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$0
	lea	rcx, QWORD PTR $T13[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$0@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$54@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$54
	lea	rcx, QWORD PTR $S8$16[rdx]
	jmp	??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ ; std::shared_ptr<std::filesystem::_Dir_enum_impl>::~shared_ptr<std::filesystem::_Dir_enum_impl>
?dtor$54@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$54
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$1@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$1
	lea	rcx, QWORD PTR $S8$16[rdx]
	jmp	??1directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::directory_iterator::~directory_iterator
?dtor$1@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$3@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$3
	lea	rcx, QWORD PTR <begin>$L0$18[rdx]
	jmp	??1directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::directory_iterator::~directory_iterator
?dtor$3@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$5@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$5
	lea	rcx, QWORD PTR <end>$L0$21[rdx]
	jmp	??1directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::directory_iterator::~directory_iterator
?dtor$5@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$15@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$15
	lea	rcx, QWORD PTR _Iter$17[rdx]
	jmp	??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ ; std::shared_ptr<std::filesystem::_Dir_enum_impl>::~shared_ptr<std::filesystem::_Dir_enum_impl>
?dtor$15@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$6@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$6
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$6@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$26@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$26
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T3[rbp]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN266@dtor$26
	and	DWORD PTR $T3[rbp], -65			; ffffffffffffffbfH
	lea	rcx, QWORD PTR $T4[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN266@dtor$26:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$26@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$26
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$7@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$7
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$7@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$8@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$8
	lea	rcx, QWORD PTR $T14[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$8@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$9@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$9
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$9@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$35@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$35
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T3[rbp]
	and	eax, 2048				; 00000800H
	test	eax, eax
	je	SHORT $LN378@dtor$35
	and	DWORD PTR $T3[rbp], -2049		; fffffffffffff7ffH
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN378@dtor$35:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$35@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$35
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$10@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$10
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$10@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 64
tv1364 = 72
tv1311 = 72
tv992 = 72
tv937 = 72
$T4 = 80
$T5 = 112
$T6 = 120
$T7 = 152
$T8 = 184
DestinationPath$GSCopy$1$ = 216
_Result$9 = 224
$T10 = 240
$T11 = 256
$T12 = 272
__$ReturnUdt$ = 288
$T13 = 296
$T14 = 328
_Ec$15 = 400
$S8$16 = 416
_Iter$17 = 432
<begin>$L0$18 = 448
_Ec$19 = 464
_From_dir$20 = 480
<end>$L0$21 = 544
_Stats$22 = 560
__$ArrayPad$ = 592
SourcePath$ = 672
DestinationPath$ = 680
?dtor$39@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyDirectoryRecursively'::`1'::dtor$39
	lea	rcx, QWORD PTR _From_dir$20[rdx]
	jmp	??1directory_entry@filesystem@std@@QEAA@XZ ; std::filesystem::directory_entry::~directory_entry
?dtor$39@?0??CopyDirectoryRecursively@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyDirectoryRecursively'::`1'::dtor$39
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
Number$ = 48
?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Util::IsNumber, COMDAT

; 161  : {

$LN72:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4228 :         return _Mypair._Myval2._Mysize == 0;

	mov	rcx, QWORD PTR [rcx+16]
	test	rcx, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 162  : 	return !Number.empty() && std::find_if(Number.begin(),

	je	SHORT $LN3@IsNumber
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdi+24], 16
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 162  : 	return !Number.empty() && std::find_if(Number.begin(),

	mov	QWORD PTR [rsp+56], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN60@IsNumber

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rsi, QWORD PTR [rdi]
	mov	rbx, rsi
	add	rsi, rcx
	jmp	SHORT $LN58@IsNumber
$LN60@IsNumber:
	mov	rbx, rdi
	lea	rsi, QWORD PTR [rcx+rdi]
$LN58@IsNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 6315 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rbx, rsi
	je	SHORT $LN63@IsNumber
	npad	7
$LL32@IsNumber:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 163  : 		Number.end(), [](unsigned char c) { return !std::isdigit(c); }) == Number.end();

	movzx	ecx, BYTE PTR [rbx]
	call	QWORD PTR __imp_isdigit
	test	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 6316 :         if (_Pred(*_UFirst)) {

	je	SHORT $LN63@IsNumber

; 6315 :     for (; _UFirst != _ULast; ++_UFirst) {

	inc	rbx
	cmp	rbx, rsi
	jne	SHORT $LL32@IsNumber
$LN63@IsNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdi+24], 16

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rcx, rdi
	mov	rsi, QWORD PTR [rsp+56]

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN40@IsNumber

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rdi]
$LN40@IsNumber:

; 3925 :         return iterator(

	add	rcx, QWORD PTR [rdi+16]

; 1982 :         return _Ptr == _Right._Ptr;

	cmp	rbx, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 162  : 	return !Number.empty() && std::find_if(Number.begin(),

	jne	SHORT $LN3@IsNumber
	mov	bl, 1
	jmp	SHORT $LN4@IsNumber
$LN3@IsNumber:
	xor	bl, bl
$LN4@IsNumber:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 162  : 	return !Number.empty() && std::find_if(Number.begin(),

	movzx	eax, bl

; 164  : }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Util::IsNumber
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
_TEXT	SEGMENT
__$ReturnUdt$GSCopy$ = 40
Text$GSCopy$ = 40
__$ArrayPad$ = 48
__$ReturnUdt$ = 112
Text$ = 120
?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z PROC ; Util::StringToLowerCase, COMDAT

; 100  : {

$LN95:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rdx
	mov	r14, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	mov	QWORD PTR Text$GSCopy$[rsp], rdx
	xor	r15d, r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdx+24], 16
	jb	SHORT $LN89@StringToLo

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rsi, QWORD PTR [rdx]
	mov	rbp, rsi
	add	rbp, QWORD PTR [rdx+16]
	mov	rbx, rsi
	jmp	SHORT $LN31@StringToLo
$LN89@StringToLo:
	mov	rbp, QWORD PTR [rdx+16]
	add	rbp, rdi
	mov	rbx, rdi
	mov	rsi, rdi
$LN31@StringToLo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3445 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

	cmp	rbx, rbp
	je	SHORT $LN41@StringToLo
	sub	rsi, rbx
	npad	3
$LL42@StringToLo:

; 3446 :         *_UDest = _Func(*_UFirst);

	movsx	ecx, BYTE PTR [rbx]
	call	QWORD PTR __imp_tolower
	mov	BYTE PTR [rsi+rbx], al

; 3445 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

	inc	rbx
	cmp	rbx, rbp
	jne	SHORT $LL42@StringToLo
$LN41@StringToLo:
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [r14], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR [r14+16], r15

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [r14+24], r15

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rdi]
	movups	XMMWORD PTR [r14], xmm0
	movups	xmm1, XMMWORD PTR [rdi+16]
	movups	XMMWORD PTR [r14+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 102  : 	return Text;

	mov	QWORD PTR [rdi+16], r15
	mov	QWORD PTR [rdi+24], 15
	mov	BYTE PTR [rdi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 102  : 	return Text;

	mov	rax, r14

; 103  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+128]
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ENDP ; Util::StringToLowerCase
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
__$ReturnUdt$GSCopy$ = 40
Text$GSCopy$ = 40
__$ArrayPad$ = 48
__$ReturnUdt$ = 112
Text$ = 120
?dtor$0@?0??StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z@4HA PROC ; `Util::StringToLowerCase'::`1'::dtor$0
	mov	rcx, QWORD PTR Text$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z@4HA ENDP ; `Util::StringToLowerCase'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T1 = 32
Path$ = 80
?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Util::RemoveFile, COMDAT

; 27   : {

$LN27:
	sub	rsp, 72					; 00000048H

; 28   : 	std::filesystem::remove(Path);

	mov	rdx, rcx
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@path@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@W4format@012@@Z ; std::filesystem::path::path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T1[rsp]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T1[rsp+24], 8
	cmovae	rcx, QWORD PTR $T1[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3623 :         const auto _Result = __std_fs_remove(_Target.c_str());

	call	__std_fs_remove
	mov	rdx, rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 3624 :         if (_Result._Error != __std_win_error::_Success) {

	jne	SHORT $LN25@RemoveFile
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T1[rsp]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 29   : }

	add	rsp, 72					; 00000048H
	ret	0
$LN25@RemoveFile:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3625 :             _Throw_fs_error("remove", _Result._Error, _Target);

	shr	rdx, 32					; 00000020H
	lea	r8, QWORD PTR $T1[rsp]
	lea	rcx, OFFSET FLAT:??_C@_06LEMKAMD@remove@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	int	3
$LN23@RemoveFile:
?RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Util::RemoveFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
Path$ = 80
?dtor$0@?0??RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Util::RemoveFile'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$0@?0??RemoveFile@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Util::RemoveFile'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
Source$ = 112
Dest$ = 120
?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; Util::CopyFileToDest, COMDAT

; 37   : {

$LN46:
	push	rbx
	sub	rsp, 96					; 00000060H
	mov	rbx, rcx

; 38   : 	std::filesystem::copy_file(Source, Dest);

	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@path@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@W4format@012@@Z ; std::filesystem::path::path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>
	npad	1
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@path@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@W4format@012@@Z ; std::filesystem::path::path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR $T2[rsp]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T2[rsp+24], 8
	cmovae	rdx, QWORD PTR $T2[rsp]

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T1[rsp]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T1[rsp+24], 8
	cmovae	rcx, QWORD PTR $T1[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3369 :             __std_fs_copy_file(_From.c_str(), _To.c_str(), static_cast<__std_fs_copy_options>(_Options));

	xor	r8d, r8d
	call	__std_fs_copy_file
	mov	rdx, rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 3370 :         if (_Result._Error != __std_win_error::_Success) {

	jne	SHORT $LN44@CopyFileTo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T1[rsp]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T2[rsp]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 39   : }

	add	rsp, 96					; 00000060H
	pop	rbx
	ret	0
$LN44@CopyFileTo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3371 :             _Throw_fs_error("copy_file", _Result._Error, _From, _To);

	shr	rdx, 32					; 00000020H
	lea	r9, QWORD PTR $T2[rsp]
	lea	r8, QWORD PTR $T1[rsp]
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z ; std::filesystem::_Throw_fs_error
	int	3
$LN42@CopyFileTo:
?CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; Util::CopyFileToDest
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
Source$ = 112
Dest$ = 120
?dtor$0@?0??CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyFileToDest'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$0@?0??CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyFileToDest'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
Source$ = 112
Dest$ = 120
?dtor$1@?0??CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA PROC ; `Util::CopyFileToDest'::`1'::dtor$1
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$1@?0??CopyFileToDest@Util@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA ENDP ; `Util::CopyFileToDest'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\iosfwd
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\iosfwd
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
_TEXT	SEGMENT
$T1 = 64
__$ReturnUdt$GSCopy$ = 72
$T2 = 80
$T3 = 96
Path$GSCopy$ = 128
File$ = 144
$T4 = 416
FileSize$5 = 416
__$ArrayPad$ = 448
__$ReturnUdt$ = 496
Path$ = 504
?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; Util::ReadFile, COMDAT

; 124  : {

$LN80:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rdi
	push	r14
	lea	rbp, QWORD PTR [rsp-208]
	sub	rsp, 464				; 000001d0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	rbx, rdx
	mov	rdi, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	mov	QWORD PTR Path$GSCopy$[rbp-256], rdx
	mov	DWORD PTR $T1[rsp], 0
	xor	edx, edx
	mov	r8d, 272				; 00000110H
	lea	rcx, QWORD PTR File$[rbp-256]
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN75@ReadFile

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rbx]
$LN75@ReadFile:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream

; 43   :         : basic_ifstream(_Str.c_str(), _Mode, _Prot) {} // _Prot is an extension

	mov	r8d, 32					; 00000020H
	lea	rcx, QWORD PTR File$[rbp-256]
	call	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	r14, OFFSET FLAT:??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR File$[rbp+rcx-256], r14
	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-176]
	mov	DWORD PTR File$[rbp+rcx-260], edx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 127  : 	if (!File.eof() && !File.fail())

	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, QWORD PTR File$[rbp-256]
	add	rcx, rax
	call	QWORD PTR __imp_?eof@ios_base@std@@QEBA_NXZ
	test	al, al
	jne	$LN2@ReadFile
	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, QWORD PTR File$[rbp-256]
	add	rcx, rax
	call	QWORD PTR __imp_?fail@ios_base@std@@QEBA_NXZ
	test	al, al
	jne	$LN2@ReadFile

; 128  : 	{
; 129  : 		File.seekg(0, std::ios_base::end);

	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+2]
	lea	rcx, QWORD PTR File$[rbp-256]
	call	QWORD PTR __imp_?seekg@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@_JH@Z

; 130  : 		std::streampos FileSize = File.tellg();

	lea	rdx, QWORD PTR FileSize$5[rbp-256]
	lea	rcx, QWORD PTR File$[rbp-256]
	call	QWORD PTR __imp_?tellg@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA?AV?$fpos@U_Mbstatet@@@2@XZ
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rdi], xmm0
	mov	QWORD PTR [rdi+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\iosfwd

; 68   :         return _Myoff + _Fpos;

	mov	rdx, QWORD PTR FileSize$5[rbp-248]
	add	rdx, QWORD PTR FileSize$5[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 132  : 		std::vector<unsigned char> Bytes(FileSize);

	mov	rcx, rdi
	call	??0?$vector@EV?$allocator@E@std@@@std@@QEAA@_KAEBV?$allocator@E@1@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >

; 139  : 		return Bytes;

	mov	DWORD PTR $T1[rsp], 1

; 133  : 
; 134  : 		File.seekg(0, std::ios_base::beg);

	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR File$[rbp-256]
	call	QWORD PTR __imp_?seekg@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@_JH@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\iosfwd

; 68   :         return _Myoff + _Fpos;

	mov	r8, QWORD PTR FileSize$5[rbp-248]
	add	r8, QWORD PTR FileSize$5[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 135  : 		File.read(reinterpret_cast<char*>(Bytes.data()), FileSize);

	mov	rdx, QWORD PTR [rdi]
	lea	rcx, QWORD PTR File$[rbp-256]
	call	QWORD PTR __imp_?read@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@PEAD_J@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream

; 193  :         if (!_Filebuffer.close()) {

	lea	rcx, QWORD PTR File$[rbp-240]
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	test	rax, rax
	jne	SHORT $LN65@ReadFile

; 194  :             _Myios::setstate(ios_base::failbit);

	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, QWORD PTR File$[rbp-256]
	add	rcx, rax
	xor	r8d, r8d
	lea	edx, QWORD PTR [r8+2]
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
$LN65@ReadFile:

; 161  :     __CLR_OR_THIS_CALL ~basic_ifstream() noexcept override {}

	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rdx, DWORD PTR [rax+4]
	mov	QWORD PTR File$[rbp+rdx-256], r14
	mov	rdx, QWORD PTR File$[rbp-256]
	movsxd	r8, DWORD PTR [rdx+4]
	lea	r9d, DWORD PTR [r8-176]
	mov	DWORD PTR File$[rbp+r8-260], r9d
	lea	rcx, QWORD PTR File$[rbp-240]
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	lea	rcx, QWORD PTR File$[rbp-232]
	call	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR File$[rbp-80]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 139  : 		return Bytes;

	mov	rax, rdi
	jmp	$LN56@ReadFile
$LN2@ReadFile:

; 143  : 		Logger::Error("Util", "Could not open file " + Path);

	lea	rax, QWORD PTR $T3[rsp]
	mov	QWORD PTR $T2[rsp], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	sub	rax, rcx
	cmp	rax, 20
	jb	$LN78@ReadFile

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rax, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN33@ReadFile

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rbx]
$LN33@ReadFile:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 20
	lea	r9, OFFSET FLAT:??_C@_0BF@BGOJHMKC@Could?5not?5open?5file?5@
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR $T1[rsp], 2
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T4[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T4[rbp-240], 0

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T4[rbp-232], 0

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 4
	lea	rdx, OFFSET FLAT:??_C@_04KDDNKLJG@Util@
	lea	rcx, QWORD PTR $T4[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 143  : 		Logger::Error("Util", "Could not open file " + Path);

	lea	rdx, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR $T4[rbp-256]
	call	?Error@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Error
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream

; 161  :     __CLR_OR_THIS_CALL ~basic_ifstream() noexcept override {}

	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	QWORD PTR File$[rbp+rcx-256], r14
	mov	rax, QWORD PTR File$[rbp-256]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-176]
	mov	rax, rcx
	mov	DWORD PTR File$[rbp+rcx-260], edx
	lea	rcx, QWORD PTR File$[rbp-240]
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	lea	rcx, QWORD PTR File$[rbp-232]
	call	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR File$[rbp-80]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
$LN56@ReadFile:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 145  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+512]
	add	rsp, 464				; 000001d0H
	pop	r14
	pop	rdi
	pop	rbp
	ret	0
$LN78@ReadFile:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4917 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN76@ReadFile:
?ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; Util::ReadFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
__$ReturnUdt$GSCopy$ = 72
$T2 = 80
$T3 = 96
Path$GSCopy$ = 128
File$ = 144
$T4 = 416
FileSize$5 = 416
__$ArrayPad$ = 448
__$ReturnUdt$ = 496
Path$ = 504
?dtor$0@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA PROC ; `Util::ReadFile'::`1'::dtor$0
	mov	rcx, QWORD PTR Path$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA ENDP ; `Util::ReadFile'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
__$ReturnUdt$GSCopy$ = 72
$T2 = 80
$T3 = 96
Path$GSCopy$ = 128
File$ = 144
$T4 = 416
FileSize$5 = 416
__$ArrayPad$ = 448
__$ReturnUdt$ = 496
Path$ = 504
?dtor$1@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA PROC ; `Util::ReadFile'::`1'::dtor$1
	lea	rcx, QWORD PTR File$[rdx]
	jmp	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
?dtor$1@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA ENDP ; `Util::ReadFile'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
__$ReturnUdt$GSCopy$ = 72
$T2 = 80
$T3 = 96
Path$GSCopy$ = 128
File$ = 144
$T4 = 416
FileSize$5 = 416
__$ArrayPad$ = 448
__$ReturnUdt$ = 496
Path$ = 504
?dtor$2@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA PROC ; `Util::ReadFile'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN8@dtor$2
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
	call	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
$LN8@dtor$2:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA ENDP ; `Util::ReadFile'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
__$ReturnUdt$GSCopy$ = 72
$T2 = 80
$T3 = 96
Path$GSCopy$ = 128
File$ = 144
$T4 = 416
FileSize$5 = 416
__$ArrayPad$ = 448
__$ReturnUdt$ = 496
Path$ = 504
?dtor$3@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA PROC ; `Util::ReadFile'::`1'::dtor$3
	mov	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??ReadFile@Util@@YA?AV?$vector@EV?$allocator@E@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z@4HA ENDP ; `Util::ReadFile'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ostream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z
_TEXT	SEGMENT
Path$GSCopy$ = 48
Data$GSCopy$ = 56
File$ = 64
__$ArrayPad$ = 336
Path$ = 384
Data$ = 392
?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z PROC ; Util::WriteFile, COMDAT

; 148  : {

$LN95:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 352				; 00000160H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rdx
	mov	rsi, rcx

; 147  : void Util::WriteFile(std::string Path, std::vector<unsigned char> Data)

	mov	QWORD PTR Path$GSCopy$[rsp], rcx
	mov	QWORD PTR Data$GSCopy$[rsp], rdx
	xor	edx, edx
	mov	r8d, 264				; 00000108H
	lea	rcx, QWORD PTR File$[rsp]
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, rsi

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rsi+24], 16
	jb	SHORT $LN14@WriteFile

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rsi]
$LN14@WriteFile:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream

; 226  :         : basic_ofstream(_Str.c_str(), _Mode, _Prot) {} // _Prot is an extension

	mov	r8d, 32					; 00000020H
	lea	rcx, QWORD PTR File$[rsp]
	call	??0?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z ; std::basic_ofstream<char,std::char_traits<char> >::basic_ofstream<char,std::char_traits<char> >
	mov	rax, QWORD PTR File$[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	r14, OFFSET FLAT:??_7?$basic_ofstream@DU?$char_traits@D@std@@@std@@6B@
	mov	QWORD PTR File$[rsp+rcx], r14
	mov	rax, QWORD PTR File$[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-168]
	mov	DWORD PTR File$[rsp+rcx-4], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4624 :     _Seek_wrapped(_Dest, _STD _Copy_unchecked(_UFirst, _ULast, _UDest));

	mov	rbp, QWORD PTR [rdi+8]
	mov	rbx, QWORD PTR [rdi]

; 4611 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	cmp	rbx, rbp
	je	SHORT $LN40@WriteFile
	npad	6
$LL41@WriteFile:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ostream

; 948  :     return _Ostr << static_cast<char>(_Ch);

	movzx	edx, BYTE PTR [rbx]
	lea	rcx, QWORD PTR File$[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4611 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	inc	rbx
	cmp	rbx, rbp
	jne	SHORT $LL41@WriteFile
$LN40@WriteFile:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\fstream

; 376  :         if (!_Filebuffer.close()) {

	lea	rcx, QWORD PTR File$[rsp+8]
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
	test	rax, rax
	jne	SHORT $LN51@WriteFile

; 377  :             _Myios::setstate(ios_base::failbit);

	mov	rax, QWORD PTR File$[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, QWORD PTR File$[rsp]
	add	rcx, rax
	xor	r8d, r8d
	lea	edx, QWORD PTR [r8+2]
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
$LN51@WriteFile:

; 344  :     __CLR_OR_THIS_CALL ~basic_ofstream() noexcept override {}

	mov	rax, QWORD PTR File$[rsp]
	movsxd	rdx, DWORD PTR [rax+4]
	mov	QWORD PTR File$[rsp+rdx], r14
	mov	rax, QWORD PTR File$[rsp]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	r8d, DWORD PTR [rdx-168]
	mov	DWORD PTR File$[rsp+rdx-4], r8d
	lea	rcx, QWORD PTR File$[rsp+8]
	call	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
	lea	rcx, QWORD PTR File$[rsp+16]
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR File$[rsp+168]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rsi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdi]
	test	rcx, rcx
	je	SHORT $LN64@WriteFile

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rdi+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN82@WriteFile

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN79@WriteFile

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN82@WriteFile:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rdi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rdi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rdi+16], rax
$LN64@WriteFile:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 153  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+352]
	mov	rbx, QWORD PTR [r11+48]
	mov	rbp, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
$LN79@WriteFile:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN92@WriteFile:
?WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z ENDP ; Util::WriteFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Path$GSCopy$ = 48
Data$GSCopy$ = 56
File$ = 64
__$ArrayPad$ = 336
Path$ = 384
Data$ = 392
?dtor$0@?0??WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z@4HA PROC ; `Util::WriteFile'::`1'::dtor$0
	mov	rcx, QWORD PTR Data$GSCopy$[rdx]
	jmp	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
?dtor$0@?0??WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z@4HA ENDP ; `Util::WriteFile'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Path$GSCopy$ = 48
Data$GSCopy$ = 56
File$ = 64
__$ArrayPad$ = 336
Path$ = 384
Data$ = 392
?dtor$1@?0??WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z@4HA PROC ; `Util::WriteFile'::`1'::dtor$1
	mov	rcx, QWORD PTR Path$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z@4HA ENDP ; `Util::WriteFile'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Path$GSCopy$ = 48
Data$GSCopy$ = 56
File$ = 64
__$ArrayPad$ = 336
Path$ = 384
Data$ = 392
?dtor$2@?0??WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z@4HA PROC ; `Util::WriteFile'::`1'::dtor$2
	lea	rcx, QWORD PTR File$[rdx]
	jmp	??_D?$basic_ofstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
?dtor$2@?0??WriteFile@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@3@@Z@4HA ENDP ; `Util::WriteFile'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h
;	COMDAT stat
_TEXT	SEGMENT
_FileName$ = 8
_Stat$ = 16
stat	PROC						; COMDAT

; 240  :             _STATIC_ASSERT(sizeof(struct stat) == sizeof(struct _stat64i32));
; 241  :             return _stat64i32(_FileName, (struct _stat64i32*)_Stat);

	rex_jmp	QWORD PTR __imp__stat64i32
stat	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cmath
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cmath
;	COMDAT ?fabs@@YAMM@Z
_TEXT	SEGMENT
_Xx$ = 8
?fabs@@YAMM@Z PROC					; fabs, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 680  :             return (float)fabs(_X);

	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\cmath

; 119  : }

	ret	0
?fabs@@YAMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
;	COMDAT ??0error_code@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0error_code@std@@QEAA@XZ PROC				; std::error_code::error_code, COMDAT

; 166  :     error_code() noexcept : _Myval(0), _Mycat(&_STD system_category()) {} // construct non-error

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	DWORD PTR [rcx], 0
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0error_code@std@@QEAA@XZ ENDP				; std::error_code::error_code
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
;	COMDAT ?clear@error_code@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@error_code@std@@QEAAXXZ PROC			; std::error_code::clear, COMDAT

; 189  :         _Myval = 0;
; 190  :         _Mycat = &_STD system_category();

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	DWORD PTR [rcx], 0
	mov	QWORD PTR [rcx+8], rax

; 191  :     }

	ret	0
?clear@error_code@std@@QEAAXXZ ENDP			; std::error_code::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
;	COMDAT ??Berror_code@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??Berror_code@std@@QEBA_NXZ PROC			; std::error_code::operator bool, COMDAT

; 208  :         return value() != 0;

	cmp	DWORD PTR [rcx], 0
	setne	al

; 209  :     }

	ret	0
??Berror_code@std@@QEBA_NXZ ENDP			; std::error_code::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
;	COMDAT ??U@YA?AW4__std_fs_file_flags@@W40@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??U@YA?AW4__std_fs_file_flags@@W40@0@Z PROC		; operator|, COMDAT

; 213  : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_flags)

	or	ecx, edx
	mov	eax, ecx
	ret	0
??U@YA?AW4__std_fs_file_flags@@W40@0@Z ENDP		; operator|
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
;	COMDAT ??0_Fs_file@std@@QEAA@QEB_WW4__std_access_rights@@W4__std_fs_file_flags@@QEAW4__std_win_error@@@Z
_TEXT	SEGMENT
this$ = 48
_File_name$ = 56
_Desired_access$ = 64
_Flags$ = 72
_Err$ = 80
??0_Fs_file@std@@QEAA@QEB_WW4__std_access_rights@@W4__std_fs_file_flags@@QEAW4__std_win_error@@@Z PROC ; std::_Fs_file::_Fs_file, COMDAT

; 364  :     _Fs_file(const wchar_t* const _File_name, const __std_access_rights _Desired_access,

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 365  :         const __std_fs_file_flags _Flags, __std_win_error* const _Err) {
; 366  :         *_Err = __std_fs_open_handle(&_Raw, _File_name, _Desired_access, _Flags);

	call	__std_fs_open_handle
	mov	rdx, QWORD PTR _Err$[rsp]
	mov	DWORD PTR [rdx], eax

; 367  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0_Fs_file@std@@QEAA@QEB_WW4__std_access_rights@@W4__std_fs_file_flags@@QEAW4__std_win_error@@@Z ENDP ; std::_Fs_file::_Fs_file
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
;	COMDAT ??1_Fs_file@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Fs_file@std@@QEAA@XZ PROC				; std::_Fs_file::~_Fs_file, COMDAT

; 373  :         __std_fs_close_handle(_Raw);

	mov	rcx, QWORD PTR [rcx]
	jmp	__std_fs_close_handle
??1_Fs_file@std@@QEAA@XZ ENDP				; std::_Fs_file::~_Fs_file
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?clear@path@filesystem@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@path@filesystem@std@@QEAAXXZ PROC		; std::filesystem::path::clear, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 8

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rcx

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN8@clear

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rcx]
$LN8@clear:

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	xor	edx, edx
	mov	QWORD PTR [rcx+16], rdx
	mov	WORD PTR [rax], dx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 840  :         }

	ret	0
?clear@path@filesystem@std@@QEAAXXZ ENDP		; std::filesystem::path::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?empty@path@filesystem@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@path@filesystem@std@@QEBA_NXZ PROC		; std::filesystem::path::empty, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4228 :         return _Mypair._Myval2._Mysize == 0;

	cmp	QWORD PTR [rcx+16], 0
	sete	al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1124 :         }

	ret	0
?empty@path@filesystem@std@@QEBA_NXZ ENDP		; std::filesystem::path::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z PROC	; std::filesystem::operator/, COMDAT

; 1364 :         _NODISCARD_FRIEND path operator/(const path& _Left, const path& _Right) { // append a pair of paths together

$LN7:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r8
	mov	rdi, rcx
	mov	DWORD PTR $T1[rsp], 0

; 1365 :             path _Tmp = _Left;

	call	??0path@filesystem@std@@QEAA@AEBV012@@Z	; std::filesystem::path::path

; 1367 :             return _Tmp;

	mov	DWORD PTR $T1[rsp], 1

; 1366 :             _Tmp /= _Right;

	mov	rdx, rbx
	mov	rcx, rdi
	call	??_0path@filesystem@std@@QEAAAEAV012@AEBV012@@Z ; std::filesystem::path::operator/=

; 1367 :             return _Tmp;

	mov	rax, rdi

; 1368 :         }

	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
	int	3
??Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z ENDP	; std::filesystem::operator/
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z@4HA PROC ; `std::filesystem::operator/'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN4@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
$LN4@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???Kfilesystem@std@@YA?AVpath@01@AEBV201@0@Z@4HA ENDP ; `std::filesystem::operator/'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
this$ = 64
_Message$ = 72
_Path1_arg$ = 80
_Path2_arg$ = 88
_Errcode$ = 96
??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z PROC ; std::filesystem::filesystem_error::filesystem_error, COMDAT

; 1761 :               _What(_Pretty_message(runtime_error::what(), _Path1_arg, _Path2_arg)) {}

$LN21:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, r9
	mov	rsi, r8
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 491  :     system_error(error_code _Errcode, const string& _Message) : _Mybase(_Errcode, _Message) {}

	mov	rax, QWORD PTR _Errcode$[rsp]
	movaps	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T1[rsp], xmm0
	mov	r8, rdx
	lea	rdx, QWORD PTR $T1[rsp]
	call	??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1761 :               _What(_Pretty_message(runtime_error::what(), _Path1_arg, _Path2_arg)) {}

	lea	rax, OFFSET FLAT:??_7filesystem_error@filesystem@std@@6B@
	mov	QWORD PTR [rbx], rax

; 1760 :             : system_error(_Errcode, _Message), _Path1(_Path1_arg), _Path2(_Path2_arg),

	lea	rcx, QWORD PTR [rbx+40]
	mov	rdx, rsi
	call	??0path@filesystem@std@@QEAA@AEBV012@@Z	; std::filesystem::path::path
	npad	1
	lea	rcx, QWORD PTR [rbx+72]
	mov	rdx, rdi
	call	??0path@filesystem@std@@QEAA@AEBV012@@Z	; std::filesystem::path::path
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_exception.h

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	rax, QWORD PTR [rbx+8]
	lea	rcx, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	test	rax, rax
	cmovne	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 1201 :         : _Mydata(_Ntcts), _Mysize(_Traits::length(_Ntcts)) {}

	mov	QWORD PTR $T3[rsp], rcx

; 400  :             return __builtin_strlen(_First);

	mov	rax, -1
	npad	5
$LL18@filesystem:
	inc	rax
	cmp	BYTE PTR [rcx+rax], 0
	jne	SHORT $LL18@filesystem
	mov	QWORD PTR $T3[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1761 :               _What(_Pretty_message(runtime_error::what(), _Path1_arg, _Path2_arg)) {}

	movaps	xmm0, XMMWORD PTR $T3[rsp]
	movdqa	XMMWORD PTR $T2[rsp], xmm0
	lea	rcx, QWORD PTR [rbx+104]
	mov	r9, rdi
	mov	r8, rsi
	lea	rdx, QWORD PTR $T2[rsp]
	call	?_Pretty_message@filesystem_error@filesystem@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@V?$basic_string_view@DU?$char_traits@D@std@@@3@AEBVpath@23@1@Z ; std::filesystem::filesystem_error::_Pretty_message
	npad	1
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z ENDP ; std::filesystem::filesystem_error::filesystem_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
this$ = 64
_Message$ = 72
_Path1_arg$ = 80
_Path2_arg$ = 88
_Errcode$ = 96
?dtor$0@?0???0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z@4HA PROC ; `std::filesystem::filesystem_error::filesystem_error'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1system_error@std@@UEAA@XZ
?dtor$0@?0???0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z@4HA ENDP ; `std::filesystem::filesystem_error::filesystem_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
this$ = 64
_Message$ = 72
_Path1_arg$ = 80
_Path2_arg$ = 88
_Errcode$ = 96
?dtor$1@?0???0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z@4HA PROC ; `std::filesystem::filesystem_error::filesystem_error'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 40					; 00000028H
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$1@?0???0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z@4HA ENDP ; `std::filesystem::filesystem_error::filesystem_error'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
this$ = 64
_Message$ = 72
_Path1_arg$ = 80
_Path2_arg$ = 88
_Errcode$ = 96
?dtor$2@?0???0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z@4HA PROC ; `std::filesystem::filesystem_error::filesystem_error'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 72					; 00000048H
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$2@?0???0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z@4HA ENDP ; `std::filesystem::filesystem_error::filesystem_error'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 64
$T4 = 80
$T5 = 112
_Op$dead$ = 272
_Error$ = 280
_Path1$ = 288
_Path2$ = 296
?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z PROC ; std::filesystem::_Throw_fs_error, COMDAT

; 1817 :         const char* _Op, __std_win_error _Error, const path& _Path1, const path& _Path2) {

$LN13:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 256				; 00000100H
	mov	rbx, r9
	mov	rdi, r8

; 1818 :         _THROW(filesystem_error(_Op, _Path1, _Path2, _Make_ec(_Error)));

	lea	rcx, QWORD PTR $T3[rsp]
	call	?_Make_ec@std@@YA?AVerror_code@1@W4__std_win_error@@@Z ; std::_Make_ec
	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T1[rsp], xmm0
	lea	rdx, OFFSET FLAT:??_C@_09IEBMEPAH@copy_file@
	lea	rcx, QWORD PTR $T4[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	movups	xmm0, XMMWORD PTR $T1[rsp]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rbx
	mov	r8, rdi
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR $T5[rsp]
	call	??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z ; std::filesystem::filesystem_error::filesystem_error
	lea	rdx, OFFSET FLAT:_TI5?AVfilesystem_error@filesystem@std@@
	lea	rcx, QWORD PTR $T5[rsp]
	call	_CxxThrowException
	int	3
$LN12@Throw_fs_e:
?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z ENDP ; std::filesystem::_Throw_fs_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 64
$T4 = 80
$T5 = 112
_Op$dead$ = 272
_Error$ = 280
_Path1$ = 288
_Path2$ = 296
?dtor$0@?0??_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z@4HA PROC ; `std::filesystem::_Throw_fs_error'::`1'::dtor$0
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z@4HA ENDP ; `std::filesystem::_Throw_fs_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
$T4 = 80
_Op$ = 240
_Error$ = 248
_Path1$ = 256
?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z PROC ; std::filesystem::_Throw_fs_error, COMDAT

; 1821 :     [[noreturn]] inline void _Throw_fs_error(const char* _Op, const error_code& _Error, const path& _Path1) {

$LN13:
	push	rbx
	sub	rsp, 224				; 000000e0H
	mov	rbx, r8

; 1822 :         _THROW(filesystem_error(_Op, _Path1, _Error));

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR $T1[rsp], xmm0
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	movups	xmm0, XMMWORD PTR $T1[rsp]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	lea	r9, QWORD PTR $T2[rsp]
	mov	r8, rbx
	lea	rdx, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@Verror_code@2@@Z ; std::filesystem::filesystem_error::filesystem_error
	lea	rdx, OFFSET FLAT:_TI5?AVfilesystem_error@filesystem@std@@
	lea	rcx, QWORD PTR $T4[rsp]
	call	_CxxThrowException
	int	3
$LN12@Throw_fs_e:
?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z ENDP ; std::filesystem::_Throw_fs_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
$T4 = 80
_Op$ = 240
_Error$ = 248
_Path1$ = 256
?dtor$0@?0??_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z@4HA PROC ; `std::filesystem::_Throw_fs_error'::`1'::dtor$0
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z@4HA ENDP ; `std::filesystem::_Throw_fs_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 64
$T4 = 96
_Op$dead$ = 256
_Error$ = 264
_Path1$ = 272
_Path2$ = 280
?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z PROC ; std::filesystem::_Throw_fs_error, COMDAT

; 1826 :         const char* _Op, const error_code& _Error, const path& _Path1, const path& _Path2) {

$LN13:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 240				; 000000f0H
	mov	rbx, r9
	mov	rdi, r8

; 1827 :         _THROW(filesystem_error(_Op, _Path1, _Path2, _Error));

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR $T1[rsp], xmm0
	lea	rdx, OFFSET FLAT:??_C@_04COAGEIMF@copy@
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	movups	xmm0, XMMWORD PTR $T1[rsp]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rbx
	mov	r8, rdi
	lea	rdx, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	??0filesystem_error@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBVpath@12@1Verror_code@2@@Z ; std::filesystem::filesystem_error::filesystem_error
	lea	rdx, OFFSET FLAT:_TI5?AVfilesystem_error@filesystem@std@@
	lea	rcx, QWORD PTR $T4[rsp]
	call	_CxxThrowException
	int	3
$LN12@Throw_fs_e:
?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z ENDP ; std::filesystem::_Throw_fs_error
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 48
$T3 = 64
$T4 = 96
_Op$dead$ = 256
_Error$ = 264
_Path1$ = 272
_Path2$ = 280
?dtor$0@?0??_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z@4HA PROC ; `std::filesystem::_Throw_fs_error'::`1'::dtor$0
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z@4HA ENDP ; `std::filesystem::_Throw_fs_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ??Ifilesystem@std@@YA?AW4copy_options@01@W4201@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??Ifilesystem@std@@YA?AW4copy_options@01@W4201@0@Z PROC	; std::filesystem::operator&, COMDAT

; 1902 :     _BITMASK_OPS(_EXPORT_STD, copy_options)

	and	ecx, edx
	mov	eax, ecx
	ret	0
??Ifilesystem@std@@YA?AW4copy_options@01@W4201@0@Z ENDP	; std::filesystem::operator&
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ??Ufilesystem@std@@YA?AW4copy_options@01@W4201@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??Ufilesystem@std@@YA?AW4copy_options@01@W4201@0@Z PROC	; std::filesystem::operator|, COMDAT

; 1902 :     _BITMASK_OPS(_EXPORT_STD, copy_options)

	or	ecx, edx
	mov	eax, ecx
	ret	0
??Ufilesystem@std@@YA?AW4copy_options@01@W4201@0@Z ENDP	; std::filesystem::operator|
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?exists@filesystem@std@@YA_NVfile_status@12@@Z
_TEXT	SEGMENT
_Status$ = 8
?exists@filesystem@std@@YA_NVfile_status@12@@Z PROC	; std::filesystem::exists, COMDAT

; 1984 :         // tests whether _Status indicates an existing file
; 1985 :         switch (_Status.type()) {

	cmp	ecx, 10
	ja	SHORT $LN6@exists
	movsxd	rax, ecx
	lea	rdx, OFFSET FLAT:__ImageBase
	mov	ecx, DWORD PTR $LN17@exists[rdx+rax*4]
	add	rcx, rdx
	jmp	rcx
$LN4@exists:

; 1986 :         case file_type::none:
; 1987 :         case file_type::not_found:
; 1988 :             return false;

	xor	al, al

; 2000 :         }
; 2001 :     }

	ret	0
$LN6@exists:

; 1989 :         case file_type::regular:
; 1990 :         case file_type::directory:
; 1991 :         case file_type::symlink:
; 1992 :         case file_type::block:
; 1993 :         case file_type::character:
; 1994 :         case file_type::fifo:
; 1995 :         case file_type::socket:
; 1996 :         case file_type::unknown:
; 1997 :         case file_type::junction:
; 1998 :         default:
; 1999 :             return true;

	mov	al, 1

; 2000 :         }
; 2001 :     }

	ret	0
	npad	3
$LN17@exists:
	DD	$LN4@exists
	DD	$LN4@exists
	DD	$LN6@exists
	DD	$LN6@exists
	DD	$LN6@exists
	DD	$LN6@exists
	DD	$LN6@exists
	DD	$LN6@exists
	DD	$LN6@exists
	DD	$LN6@exists
	DD	$LN6@exists
?exists@filesystem@std@@YA_NVfile_status@12@@Z ENDP	; std::filesystem::exists
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?is_directory@filesystem@std@@YA_NVfile_status@12@@Z
_TEXT	SEGMENT
_Status$ = 8
?is_directory@filesystem@std@@YA_NVfile_status@12@@Z PROC ; std::filesystem::is_directory, COMDAT

; 2014 :         // tests whether _Status indicates a directory
; 2015 :         return _Status.type() == file_type::directory;

	cmp	ecx, 3
	sete	al

; 2016 :     }

	ret	0
?is_directory@filesystem@std@@YA_NVfile_status@12@@Z ENDP ; std::filesystem::is_directory
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?is_other@filesystem@std@@YA_NVfile_status@12@@Z
_TEXT	SEGMENT
_Status$ = 8
?is_other@filesystem@std@@YA_NVfile_status@12@@Z PROC	; std::filesystem::is_other, COMDAT

; 2024 :         // tests whether _Status indicates other file types
; 2025 :         switch (_Status.type()) {

	cmp	ecx, 10
	ja	SHORT $LN9@is_other
	movsxd	rax, ecx
	lea	rdx, OFFSET FLAT:__ImageBase
	mov	ecx, DWORD PTR $LN17@is_other[rdx+rax*4]
	add	rcx, rdx
	jmp	rcx
$LN4@is_other:

; 2026 :         case file_type::none:
; 2027 :         case file_type::not_found:
; 2028 :         case file_type::regular:
; 2029 :         case file_type::directory:
; 2030 :         case file_type::symlink:
; 2031 :             return false;

	xor	al, al

; 2040 :         }
; 2041 :     }

	ret	0
$LN9@is_other:

; 2032 :         case file_type::block:
; 2033 :         case file_type::character:
; 2034 :         case file_type::fifo:
; 2035 :         case file_type::socket:
; 2036 :         case file_type::unknown:
; 2037 :         case file_type::junction:
; 2038 :         default:
; 2039 :             return true;

	mov	al, 1

; 2040 :         }
; 2041 :     }

	ret	0
	npad	3
$LN17@is_other:
	DD	$LN4@is_other
	DD	$LN4@is_other
	DD	$LN4@is_other
	DD	$LN4@is_other
	DD	$LN4@is_other
	DD	$LN9@is_other
	DD	$LN9@is_other
	DD	$LN9@is_other
	DD	$LN9@is_other
	DD	$LN9@is_other
	DD	$LN9@is_other
?is_other@filesystem@std@@YA_NVfile_status@12@@Z ENDP	; std::filesystem::is_other
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?is_symlink@filesystem@std@@YA_NVfile_status@12@@Z
_TEXT	SEGMENT
_Status$ = 8
?is_symlink@filesystem@std@@YA_NVfile_status@12@@Z PROC	; std::filesystem::is_symlink, COMDAT

; 2054 :         // tests whether _Status indicates a symlink
; 2055 :         return _Status.type() == file_type::symlink;

	cmp	ecx, 4
	sete	al

; 2056 :     }

	ret	0
?is_symlink@filesystem@std@@YA_NVfile_status@12@@Z ENDP	; std::filesystem::is_symlink
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ??0directory_entry@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 80
_Path_arg$ = 88
_Ec$ = 96
??0directory_entry@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z PROC ; std::filesystem::directory_entry::directory_entry, COMDAT

; 2096 :         directory_entry(const filesystem::path& _Path_arg, error_code& _Ec) : _Cached_data{}, _Path(_Path_arg) {

$LN72:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
	xorps	xmm0, xmm0
	mov	rbx, rcx
	movups	XMMWORD PTR [rcx], xmm0
	mov	rsi, r8
	movups	XMMWORD PTR [rcx+16], xmm0
	add	rcx, 32					; 00000020H
	call	??0path@filesystem@std@@QEAA@AEBV012@@Z	; std::filesystem::path::path
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 189  :         _Myval = 0;

	xor	ebp, ebp

; 190  :         _Mycat = &_STD system_category();

	lea	r15, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	DWORD PTR [rsi], ebp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 190  :         _Mycat = &_STD system_category();

	mov	QWORD PTR [rsi+8], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rbx+56], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN59@directory_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx+32]
$LN59@directory_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2463 :             const auto _Error = __std_fs_get_stats(_Path.c_str(), &_Stats, __std_fs_stats_flags::_All_data);

	mov	r14d, 62				; 0000003eH
	mov	r9d, -1					; ffffffffH
	mov	r8d, r14d
	mov	rdx, rbx
	call	__std_fs_get_stats
	mov	ecx, eax

; 2464 :             if (_Error == __std_win_error::_Success) {

	test	eax, eax
	jne	SHORT $LN11@directory_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	mov	eax, DWORD PTR [rbx+16]
	shr	eax, 10
	test	al, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2470 :             } else {

	mov	eax, 6
	cmove	eax, r14d
	mov	DWORD PTR [rbx+28], eax
	jmp	SHORT $LN6@directory_
$LN11@directory_:

; 2471 :                 _Stats._Available = __std_fs_stats_flags::_None;

	mov	DWORD PTR [rbx+28], ebp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 52   :     switch (_Error) {

	sub	eax, 2
	je	SHORT $LN6@directory_
	sub	eax, 1
	je	SHORT $LN6@directory_
	sub	eax, 50					; 00000032H
	je	SHORT $LN6@directory_
	cmp	eax, 70					; 00000046H
	je	SHORT $LN6@directory_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T1[rsp], ecx
	mov	QWORD PTR $T1[rsp+8], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2143 :                 _Ec = _Make_ec(_Error);

	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rsi], xmm0
$LN6@directory_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 208  :         return value() != 0;

	cmp	DWORD PTR [rsi], ebp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2098 :             if (_Ec) {

	je	SHORT $LN61@directory_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rbx+56], 8

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR [rbx+32]

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN53@directory_

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rbx+32]
$LN53@directory_:

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR [rbx+48], rbp
	mov	WORD PTR [rax], bp
$LN61@directory_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2101 :         }

	mov	rbp, QWORD PTR [rsp+88]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+96]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	rdi
	ret	0
??0directory_entry@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z ENDP ; std::filesystem::directory_entry::directory_entry
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?refresh@directory_entry@filesystem@std@@QEAAXAEAVerror_code@3@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ec$ = 72
?refresh@directory_entry@filesystem@std@@QEAAXAEAVerror_code@3@@Z PROC ; std::filesystem::directory_entry::refresh, COMDAT

; 2139 :         void refresh(error_code& _Ec) noexcept {

$LN50:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rdi
	push	r14
	sub	rsp, 48					; 00000030H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 189  :         _Myval = 0;

	mov	DWORD PTR [rdx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4107 :         return _Mypair._Myval2._Myptr();

	add	rcx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 190  :         _Mycat = &_STD system_category();

	lea	rbp, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR [rdx+8], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2139 :         void refresh(error_code& _Ec) noexcept {

	mov	rdi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN17@refresh

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN17@refresh:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2463 :             const auto _Error = __std_fs_get_stats(_Path.c_str(), &_Stats, __std_fs_stats_flags::_All_data);

	mov	r14d, 62				; 0000003eH
	mov	r9d, -1					; ffffffffH
	mov	r8d, r14d
	mov	rdx, rbx
	call	__std_fs_get_stats
	mov	ecx, eax

; 2464 :             if (_Error == __std_win_error::_Success) {

	test	eax, eax
	jne	SHORT $LN7@refresh
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	mov	eax, DWORD PTR [rbx+16]
	shr	eax, 10
	test	al, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2470 :             } else {

	mov	eax, 6
	cmove	eax, r14d
	mov	DWORD PTR [rbx+28], eax
	jmp	SHORT $LN2@refresh
$LN7@refresh:

; 2471 :                 _Stats._Available = __std_fs_stats_flags::_None;

	mov	DWORD PTR [rbx+28], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 52   :     switch (_Error) {

	sub	eax, 2
	je	SHORT $LN2@refresh
	sub	eax, 1
	je	SHORT $LN2@refresh
	sub	eax, 50					; 00000032H
	je	SHORT $LN2@refresh
	cmp	eax, 70					; 00000046H
	je	SHORT $LN2@refresh
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T1[rsp], ecx
	mov	QWORD PTR $T1[rsp+8], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2143 :                 _Ec = _Make_ec(_Error);

	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rdi], xmm0
$LN2@refresh:

; 2144 :             }
; 2145 :         }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rdi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	r14
	ret	0
?refresh@directory_entry@filesystem@std@@QEAAXAEAVerror_code@3@@Z ENDP ; std::filesystem::directory_entry::refresh
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ??Bdirectory_entry@filesystem@std@@QEBAAEBVpath@12@XZ
_TEXT	SEGMENT
this$ = 8
??Bdirectory_entry@filesystem@std@@QEBAAEBVpath@12@XZ PROC ; std::filesystem::directory_entry::operator std::filesystem::path const &, COMDAT

; 2159 :             return _Path;

	lea	rax, QWORD PTR [rcx+32]

; 2160 :         }

	ret	0
??Bdirectory_entry@filesystem@std@@QEBAAEBVpath@12@XZ ENDP ; std::filesystem::directory_entry::operator std::filesystem::path const &
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?is_directory@directory_entry@filesystem@std@@QEBA_NXZ
_TEXT	SEGMENT
_Result$1 = 32
this$ = 64
?is_directory@directory_entry@filesystem@std@@QEBA_NXZ PROC ; std::filesystem::directory_entry::is_directory, COMDAT

; 2190 :         _NODISCARD bool is_directory() const {

$LN21:
	push	rbx
	sub	rsp, 48					; 00000030H

; 2381 :             const auto _Result = _Get_any_status(_Status_stats_flags);

	mov	r8d, 3
	lea	rdx, QWORD PTR _Result$1[rsp]

; 2190 :         _NODISCARD bool is_directory() const {

	mov	rbx, rcx

; 2381 :             const auto _Result = _Get_any_status(_Status_stats_flags);

	call	?_Get_any_status@directory_entry@filesystem@std@@AEBA?AU_File_status_and_error@23@W4__std_fs_stats_flags@@@Z ; std::filesystem::directory_entry::_Get_any_status

; 2065 :             return _Error != __std_win_error::_Success && _Status.type() != file_type::not_found

	mov	edx, DWORD PTR _Result$1[rsp+8]
	mov	rax, QWORD PTR _Result$1[rsp]
	test	edx, edx
	je	SHORT $LN4@is_directo
	lea	r8d, DWORD PTR [rax-1]
	test	r8d, -9					; fffffff7H
	jne	SHORT $LN19@is_directo
$LN4@is_directo:

; 2386 :             return _Result._Status;

	cmp	eax, 3

; 2015 :         return _Status.type() == file_type::directory;

	sete	al

; 2191 :             return _STD filesystem::is_directory(this->status());
; 2192 :         }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
$LN19@is_directo:

; 2383 :                 _Throw_fs_error("directory_entry::status", _Result._Error, _Path);

	lea	r8, QWORD PTR [rbx+32]
	lea	rcx, OFFSET FLAT:??_C@_0BI@LBKDNGFK@directory_entry?3?3status@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	int	3
$LN17@is_directo:
?is_directory@directory_entry@filesystem@std@@QEBA_NXZ ENDP ; std::filesystem::directory_entry::is_directory
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_Refresh@directory_entry@filesystem@std@@CA?AW4__std_win_error@@AEAU__std_fs_stats@@AEBVpath@23@@Z
_TEXT	SEGMENT
_Stats$ = 48
_Path$ = 56
?_Refresh@directory_entry@filesystem@std@@CA?AW4__std_win_error@@AEAU__std_fs_stats@@AEBVpath@23@@Z PROC ; std::filesystem::directory_entry::_Refresh, COMDAT

; 2462 :         _NODISCARD static __std_win_error _Refresh(__std_fs_stats& _Stats, const filesystem::path& _Path) noexcept {

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdx+24], 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2462 :         _NODISCARD static __std_win_error _Refresh(__std_fs_stats& _Stats, const filesystem::path& _Path) noexcept {

	mov	rax, rdx
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN12@Refresh

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rdx]
$LN12@Refresh:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2463 :             const auto _Error = __std_fs_get_stats(_Path.c_str(), &_Stats, __std_fs_stats_flags::_All_data);

	mov	edi, 62					; 0000003eH
	mov	r9d, -1					; ffffffffH
	mov	r8d, edi
	mov	rdx, rbx
	mov	rcx, rax
	call	__std_fs_get_stats

; 2464 :             if (_Error == __std_win_error::_Success) {

	test	eax, eax
	jne	SHORT $LN2@Refresh
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	mov	ecx, DWORD PTR [rbx+16]
	shr	ecx, 10
	test	cl, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2470 :             } else {

	mov	ecx, 6
	cmove	ecx, edi

; 2471 :                 _Stats._Available = __std_fs_stats_flags::_None;
; 2472 :             }
; 2473 : 
; 2474 :             return _Error;

	mov	DWORD PTR [rbx+28], ecx

; 2475 :         }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Refresh:

; 2471 :                 _Stats._Available = __std_fs_stats_flags::_None;
; 2472 :             }
; 2473 : 
; 2474 :             return _Error;

	mov	DWORD PTR [rbx+28], 0

; 2475 :         }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Refresh@directory_entry@filesystem@std@@CA?AW4__std_win_error@@AEAU__std_fs_stats@@AEBVpath@23@@Z ENDP ; std::filesystem::directory_entry::_Refresh
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Path$ = 72
_Ec$ = 80
??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z PROC ; std::filesystem::directory_iterator::directory_iterator, COMDAT

; 2632 :         directory_iterator(const path& _Path, error_code& _Ec) {

$LN14:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r8
	mov	rdi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1470 :     element_type* _Ptr{nullptr};

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 1471 :     _Ref_count_base* _Rep{nullptr};

	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2633 :             _Ec = _Make_ec(_Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path));

	call	??$_Initialize_dir_enum@U_Dir_enum_impl@filesystem@std@@@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@2@AEBVpath@12@W4directory_options@12@@Z ; std::filesystem::_Dir_enum_impl::_Initialize_dir_enum<std::filesystem::_Dir_enum_impl>
	mov	DWORD PTR $T1[rsp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T1[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2633 :             _Ec = _Make_ec(_Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path));

	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rbx], xmm0

; 2634 :         }

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z ENDP ; std::filesystem::directory_iterator::directory_iterator
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Path$ = 72
_Ec$ = 80
?dtor$0@?0???0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z@4HA PROC ; `std::filesystem::directory_iterator::directory_iterator'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ ; std::shared_ptr<std::filesystem::_Dir_enum_impl>::~shared_ptr<std::filesystem::_Dir_enum_impl>
?dtor$0@?0???0directory_iterator@filesystem@std@@QEAA@AEBVpath@12@AEAVerror_code@2@@Z@4HA ENDP ; `std::filesystem::directory_iterator::directory_iterator'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ??Cdirectory_iterator@filesystem@std@@QEBAPEBVdirectory_entry@12@XZ
_TEXT	SEGMENT
this$ = 8
??Cdirectory_iterator@filesystem@std@@QEBAPEBVdirectory_entry@12@XZ PROC ; std::filesystem::directory_iterator::operator->, COMDAT

; 2652 :             return &**this;

	mov	rax, QWORD PTR [rcx]

; 2653 :         }

	ret	0
??Cdirectory_iterator@filesystem@std@@QEBAPEBVdirectory_entry@12@XZ ENDP ; std::filesystem::directory_iterator::operator->
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?increment@directory_iterator@filesystem@std@@QEAAAEAV123@AEAVerror_code@3@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ec$ = 72
?increment@directory_iterator@filesystem@std@@QEAAAEAV123@AEAVerror_code@3@@Z PROC ; std::filesystem::directory_iterator::increment, COMDAT

; 2664 :         directory_iterator& increment(error_code& _Ec) {

$LN9:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, rdx
	mov	rdi, rcx

; 2665 :             _Ec = _Make_ec(_Dir_enum_impl::_Advance_and_reset_if_no_more_files(_Impl));

	call	?_Advance_and_reset_if_no_more_files@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@3@@Z ; std::filesystem::_Dir_enum_impl::_Advance_and_reset_if_no_more_files
	mov	DWORD PTR $T1[rsp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T1[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2666 :             return *this;

	mov	rax, rdi
	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rbx], xmm0

; 2667 :         }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?increment@directory_iterator@filesystem@std@@QEAAAEAV123@AEAVerror_code@3@@Z ENDP ; std::filesystem::directory_iterator::increment
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_At_end@directory_iterator@filesystem@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?_At_end@directory_iterator@filesystem@std@@QEBA_NXZ PROC ; std::filesystem::directory_iterator::_At_end, COMDAT

; 2693 :             return !_Impl;

	cmp	QWORD PTR [rcx], 0
	sete	al

; 2694 :         }

	ret	0
?_At_end@directory_iterator@filesystem@std@@QEBA_NXZ ENDP ; std::filesystem::directory_iterator::_At_end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_Get_cleaned_symlink_target@filesystem@std@@YA?AV?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@2@AEBVpath@12@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
_To$ = 72
?_Get_cleaned_symlink_target@filesystem@std@@YA?AV?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@2@AEBVpath@12@@Z PROC ; std::filesystem::_Get_cleaned_symlink_target, COMDAT

; 3076 :     _NODISCARD inline unique_ptr<wchar_t[]> _Get_cleaned_symlink_target(const path& _To) noexcept {

$LN103:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	xor	eax, eax

; 3082 :         unique_ptr<wchar_t[]> _Cleaned_link(::new (nothrow) wchar_t[_To_str.size() + 1]);

	lea	rdi, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx], rax
	mov	rsi, rcx
	mov	rcx, QWORD PTR [rdi]
	mov	rbx, rdx
	inc	rcx
	mov	eax, 2
	mul	rcx
	mov	rcx, -1
	lea	rdx, OFFSET FLAT:?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
	cmovo	rax, rcx
	mov	rcx, rax
	call	??_U@YAPEAX_KAEBUnothrow_t@std@@@Z	; operator new[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	QWORD PTR [rsi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3082 :         unique_ptr<wchar_t[]> _Cleaned_link(::new (nothrow) wchar_t[_To_str.size() + 1]);

	mov	r10, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3450 :         return static_cast<bool>(_Mypair._Myval2);

	test	rax, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3083 :         if (!_Cleaned_link) {

	je	$LN90@Get_cleane
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rbx+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN33@Get_cleane

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rbx]
$LN33@Get_cleane:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3088 :         const auto _Last  = _First + _To_str.size();

	mov	rax, QWORD PTR [rdi]

; 3089 :         auto _Next        = _Find_root_name_end(_First, _Last);

	mov	rcx, rbx
	lea	rdx, QWORD PTR [rbx+rax*2]
	call	?_Find_root_name_end@filesystem@std@@YAPEB_WQEB_W0@Z ; std::filesystem::_Find_root_name_end
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3841 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

	mov	edx, 92					; 0000005cH
	cmp	rbx, rax
	je	SHORT $LL2@Get_cleane
$LL71@Get_cleane:

; 3842 :         if (_Pred(*_UFirst)) {

	movzx	ecx, WORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, dx
	je	SHORT $LN85@Get_cleane
	cmp	cx, 47					; 0000002fH
	jne	SHORT $LN75@Get_cleane
$LN85@Get_cleane:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3843 :             *_UDest = _Val;

	mov	ecx, edx
$LN75@Get_cleane:

; 3841 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

	mov	WORD PTR [r10], cx
	add	rbx, 2
	add	r10, 2
	cmp	rbx, rax
	jne	SHORT $LL71@Get_cleane
	npad	7
$LL2@Get_cleane:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3092 :             const wchar_t _Ch = *_Next;

	movzx	ecx, WORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, dx
	je	SHORT $LN84@Get_cleane
	cmp	cx, 47					; 0000002fH
	je	SHORT $LN84@Get_cleane
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3100 :                 if (_Ch == L'\0') {

	mov	WORD PTR [r10], cx
	test	cx, cx
	je	SHORT $LN90@Get_cleane

; 3101 :                     break;
; 3102 :                 }
; 3103 : 
; 3104 :                 ++_Next;

	add	rax, 2

; 3107 :             ++_Dest;

	add	r10, 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3845 :             *_UDest = *_UFirst;

	jmp	SHORT $LL2@Get_cleane
$LN84@Get_cleane:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3094 :                 *_Dest = L'\\';

	mov	WORD PTR [r10], dx
	npad	11
$LL7@Get_cleane:

; 3095 :                 do {
; 3096 :                     ++_Next;
; 3097 :                 } while (_Is_slash(*_Next));

	movzx	ecx, WORD PTR [rax+2]
	add	rax, 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, dx
	je	SHORT $LL7@Get_cleane
	cmp	cx, 47					; 0000002fH
	je	SHORT $LL7@Get_cleane
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3107 :             ++_Dest;

	add	r10, 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3845 :             *_UDest = *_UFirst;

	jmp	SHORT $LL2@Get_cleane
$LN90@Get_cleane:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3111 :     }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?_Get_cleaned_symlink_target@filesystem@std@@YA?AV?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@2@AEBVpath@12@@Z ENDP ; std::filesystem::_Get_cleaned_symlink_target
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAAX_K@Z PROC ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAAX_K@Z ENDP ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?create_hard_link@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
_To$ = 64
_New_hard_link$ = 72
_Ec$ = 80
?create_hard_link@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z PROC ; std::filesystem::create_hard_link, COMDAT

; 3148 :     _EXPORT_STD inline void create_hard_link(const path& _To, const path& _New_hard_link, error_code& _Ec) noexcept {

$LN29:
	push	rbx
	sub	rsp, 48					; 00000030H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3148 :     _EXPORT_STD inline void create_hard_link(const path& _To, const path& _New_hard_link, error_code& _Ec) noexcept {

	mov	rbx, r8
	mov	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN8@create_har

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN8@create_har:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdx+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN17@create_har

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rdx]
$LN17@create_har:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3151 :         _Ec = _Make_ec(__std_fs_create_hard_link(_New_hard_link.c_str(), _To.c_str()));

	mov	rdx, rcx
	mov	rcx, rax
	call	__std_fs_create_hard_link
	mov	DWORD PTR $T1[rsp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T1[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3151 :         _Ec = _Make_ec(__std_fs_create_hard_link(_New_hard_link.c_str(), _To.c_str()));

	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rbx], xmm0

; 3152 :     }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?create_hard_link@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z ENDP ; std::filesystem::create_hard_link
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?create_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
_To$ = 112
_New_symlink$ = 120
_Ec$ = 128
?create_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z PROC ; std::filesystem::create_symlink, COMDAT

; 3168 :     _EXPORT_STD inline void create_symlink(const path& _To, const path& _New_symlink, error_code& _Ec) noexcept {

$LN136:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 64					; 00000040H

; 3082 :         unique_ptr<wchar_t[]> _Cleaned_link(::new (nothrow) wchar_t[_To_str.size() + 1]);

	lea	rsi, QWORD PTR [rcx+16]

; 3168 :     _EXPORT_STD inline void create_symlink(const path& _To, const path& _New_symlink, error_code& _Ec) noexcept {

	mov	rdi, rcx

; 3082 :         unique_ptr<wchar_t[]> _Cleaned_link(::new (nothrow) wchar_t[_To_str.size() + 1]);

	mov	rcx, QWORD PTR [rsi]

; 3168 :     _EXPORT_STD inline void create_symlink(const path& _To, const path& _New_symlink, error_code& _Ec) noexcept {

	mov	r14, rdx

; 3082 :         unique_ptr<wchar_t[]> _Cleaned_link(::new (nothrow) wchar_t[_To_str.size() + 1]);

	inc	rcx
	mov	eax, 2
	mul	rcx
	mov	rcx, -1
	lea	rdx, OFFSET FLAT:?nothrow@std@@3Unothrow_t@1@B ; std::nothrow

; 3168 :     _EXPORT_STD inline void create_symlink(const path& _To, const path& _New_symlink, error_code& _Ec) noexcept {

	mov	rbp, r8

; 3082 :         unique_ptr<wchar_t[]> _Cleaned_link(::new (nothrow) wchar_t[_To_str.size() + 1]);

	cmovo	rax, rcx
	mov	rcx, rax
	call	??_U@YAPEAX_KAEBUnothrow_t@std@@@Z	; operator new[]
	mov	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	test	rax, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3083 :         if (!_Cleaned_link) {

	je	$LN2@create_sym
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdi+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN40@create_sym

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdi, QWORD PTR [rdi]
$LN40@create_sym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3088 :         const auto _Last  = _First + _To_str.size();

	mov	rax, QWORD PTR [rsi]

; 3089 :         auto _Next        = _Find_root_name_end(_First, _Last);

	mov	rcx, rdi
	lea	rdx, QWORD PTR [rdi+rax*2]
	call	?_Find_root_name_end@filesystem@std@@YAPEB_WQEB_W0@Z ; std::filesystem::_Find_root_name_end
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4107 :         return _Mypair._Myval2._Myptr();

	mov	rdx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3841 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

	mov	r8d, 92					; 0000005cH
	cmp	rdi, rax
	je	SHORT $LL8@create_sym
$LL104@create_sym:

; 3842 :         if (_Pred(*_UFirst)) {

	movzx	ecx, WORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, r8w
	je	SHORT $LN120@create_sym
	cmp	cx, 47					; 0000002fH
	jne	SHORT $LN108@create_sym
$LN120@create_sym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3843 :             *_UDest = _Val;

	mov	ecx, r8d
$LN108@create_sym:

; 3841 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

	mov	WORD PTR [rdx], cx
	add	rdi, 2
	add	rdx, 2
	cmp	rdi, rax
	jne	SHORT $LL104@create_sym
$LL8@create_sym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3092 :             const wchar_t _Ch = *_Next;

	movzx	ecx, WORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, r8w
	je	SHORT $LN119@create_sym
	cmp	cx, 47					; 0000002fH
	je	SHORT $LN119@create_sym
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3100 :                 if (_Ch == L'\0') {

	mov	WORD PTR [rdx], cx
	test	cx, cx
	je	SHORT $LN117@create_sym

; 3101 :                     break;
; 3102 :                 }
; 3103 : 
; 3104 :                 ++_Next;

	add	rax, 2

; 3107 :             ++_Dest;

	add	rdx, 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3845 :             *_UDest = *_UFirst;

	jmp	SHORT $LL8@create_sym
$LN119@create_sym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3094 :                 *_Dest = L'\\';

	mov	WORD PTR [rdx], r8w
	npad	6
$LL13@create_sym:

; 3095 :                 do {
; 3096 :                     ++_Next;
; 3097 :                 } while (_Is_slash(*_Next));

	movzx	ecx, WORD PTR [rax+2]
	add	rax, 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, r8w
	je	SHORT $LL13@create_sym
	cmp	cx, 47					; 0000002fH
	je	SHORT $LL13@create_sym
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3107 :             ++_Dest;

	add	rdx, 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3845 :             *_UDest = *_UFirst;

	jmp	SHORT $LL8@create_sym
$LN117@create_sym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [r14+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN79@create_sym

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r14, QWORD PTR [r14]
$LN79@create_sym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3173 :             _Ec = _Make_ec(__std_fs_create_symbolic_link(_New_symlink.c_str(), _Cleaned.get()));

	mov	rdx, rbx
	mov	rcx, r14
	call	__std_fs_create_symbolic_link
	mov	DWORD PTR $T2[rsp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3194 :         delete[] _Ptr;

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T2[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3173 :             _Ec = _Make_ec(__std_fs_create_symbolic_link(_New_symlink.c_str(), _Cleaned.get()));

	movups	xmm0, XMMWORD PTR $T2[rsp]
	movups	XMMWORD PTR [rbp], xmm0

; 3176 :         }
; 3177 :     }

	add	rsp, 64					; 00000040H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3194 :         delete[] _Ptr;

	jmp	??_V@YAXPEAX@Z				; operator delete[]
$LN2@create_sym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAAEBV_Generic_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_Generic_error_category>'::`2'::_Static
	mov	DWORD PTR $T1[rsp], 12
	mov	QWORD PTR $T1[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3175 :             _Ec = _STD make_error_code(errc::not_enough_memory);

	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rbp], xmm0

; 3176 :         }
; 3177 :     }

	add	rsp, 64					; 00000040H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
?create_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z ENDP ; std::filesystem::create_symlink
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_Read_reparse_data@filesystem@std@@YA?AW4__std_win_error@@AEBU_Fs_file@2@AEAV?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@2@@Z
_TEXT	SEGMENT
_Handle$ = 48
_Buffer_unique_ptr$ = 56
?_Read_reparse_data@filesystem@std@@YA?AW4__std_win_error@@AEBU_Fs_file@2@AEAV?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@2@@Z PROC ; std::filesystem::_Read_reparse_data, COMDAT

; 3180 :         const _Fs_file& _Handle, unique_ptr<char[]>& _Buffer_unique_ptr) noexcept {

$LN20:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 3181 :         constexpr auto _Buffer_size = 16 * 1024 + sizeof(wchar_t); // MAXIMUM_REPARSE_DATA_BUFFER_SIZE + sizeof(wchar_t)
; 3182 : 
; 3183 :         _Buffer_unique_ptr.reset(::new (nothrow) char[_Buffer_size]);

	lea	rdx, OFFSET FLAT:?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
	mov	ecx, 16386				; 00004002H
	call	??_U@YAPEAX_KAEBUnothrow_t@std@@@Z	; operator new[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rcx, QWORD PTR [rbx]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3460 :         if (_Old) {

	test	rcx, rcx
	je	SHORT $LN12@Read_repar

; 3194 :         delete[] _Ptr;

	call	??_V@YAXPEAX@Z				; operator delete[]
$LN12@Read_repar:

; 3450 :         return static_cast<bool>(_Mypair._Myval2);

	mov	rdx, QWORD PTR [rbx]
	test	rdx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3184 :         if (!_Buffer_unique_ptr) {

	jne	SHORT $LN2@Read_repar

; 3185 :             return __std_win_error::_Not_enough_memory;

	lea	eax, QWORD PTR [rdx+8]

; 3190 :         if (_Err != __std_win_error::_Success) {
; 3191 :             return _Err;
; 3192 :         }
; 3193 : 
; 3194 :         return __std_win_error::_Success;
; 3195 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Read_repar:

; 3186 :         }
; 3187 : 
; 3188 :         const auto _Buffer         = reinterpret_cast<__std_fs_reparse_data_buffer*>(_Buffer_unique_ptr.get());
; 3189 :         const __std_win_error _Err = __std_fs_read_reparse_data_buffer(_Handle._Raw, _Buffer, _Buffer_size);

	mov	rcx, QWORD PTR [rdi]
	mov	r8d, 16386				; 00004002H

; 3190 :         if (_Err != __std_win_error::_Success) {
; 3191 :             return _Err;
; 3192 :         }
; 3193 : 
; 3194 :         return __std_win_error::_Success;
; 3195 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi

; 3186 :         }
; 3187 : 
; 3188 :         const auto _Buffer         = reinterpret_cast<__std_fs_reparse_data_buffer*>(_Buffer_unique_ptr.get());
; 3189 :         const __std_win_error _Err = __std_fs_read_reparse_data_buffer(_Handle._Raw, _Buffer, _Buffer_size);

	jmp	__std_fs_read_reparse_data_buffer
?_Read_reparse_data@filesystem@std@@YA?AW4__std_win_error@@AEBU_Fs_file@2@AEAV?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@2@@Z ENDP ; std::filesystem::_Read_reparse_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAAX_K@Z PROC ; std::unique_ptr<char [0],std::default_delete<char [0]> >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAAX_K@Z ENDP ; std::unique_ptr<char [0],std::default_delete<char [0]> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
_TEXT	SEGMENT
_Length$ = 32
_Offset$ = 40
_Handle$1 = 48
_File_attributes$2 = 56
__$ArrayPad$ = 64
_Symlink$ = 112
_New_symlink$ = 120
?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z PROC ; std::filesystem::_Copy_symlink, COMDAT

; 3243 :     _NODISCARD inline __std_win_error _Copy_symlink(const path& _Symlink, const path& _New_symlink) noexcept {

$LN131:
	push	rbx
	push	rdi
	sub	rsp, 88					; 00000058H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3243 :     _NODISCARD inline __std_win_error _Copy_symlink(const path& _Symlink, const path& _New_symlink) noexcept {

	mov	rdi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN23@Copy_symli

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN23@Copy_symli:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 366  :         *_Err = __std_fs_open_handle(&_Raw, _File_name, _Desired_access, _Flags);

	mov	rdx, rcx
	mov	r9d, 35651584				; 02200000H
	lea	rcx, QWORD PTR _Handle$1[rsp]
	mov	r8d, 128				; 00000080H
	call	__std_fs_open_handle
	mov	ebx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3250 :             if (_Err != __std_win_error::_Success) {

	test	eax, eax
	je	SHORT $LN2@Copy_symli
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 373  :         __std_fs_close_handle(_Raw);

	mov	rcx, QWORD PTR _Handle$1[rsp]
	call	__std_fs_close_handle
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3251 :                 return _Err;

	mov	eax, ebx
	jmp	$LN1@Copy_symli
$LN2@Copy_symli:

; 3183 :         _Buffer_unique_ptr.reset(::new (nothrow) char[_Buffer_size]);

	lea	rdx, OFFSET FLAT:?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
	mov	QWORD PTR [rsp+80], rsi
	mov	ecx, 16386				; 00004002H
	call	??_U@YAPEAX_KAEBUnothrow_t@std@@@Z	; operator new[]

; 3184 :         if (!_Buffer_unique_ptr) {

	mov	rcx, QWORD PTR _Handle$1[rsp]
	mov	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3450 :         return static_cast<bool>(_Mypair._Myval2);

	test	rax, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3184 :         if (!_Buffer_unique_ptr) {

	jne	SHORT $LN39@Copy_symli

; 3185 :             return __std_win_error::_Not_enough_memory;

	lea	esi, QWORD PTR [rax+8]
	call	__std_fs_close_handle

; 3262 :                 return _Err;

	mov	eax, esi
	jmp	$LN125@Copy_symli
$LN39@Copy_symli:

; 3189 :         const __std_win_error _Err = __std_fs_read_reparse_data_buffer(_Handle._Raw, _Buffer, _Buffer_size);

	mov	r8d, 16386				; 00004002H
	mov	rdx, rbx
	call	__std_fs_read_reparse_data_buffer

; 3190 :         if (_Err != __std_win_error::_Success) {

	mov	rcx, QWORD PTR _Handle$1[rsp]
	mov	esi, eax
	test	eax, eax
	jne	SHORT $LN128@Copy_symli

; 3252 :             }
; 3253 : 
; 3254 :             _Err = _Read_reparse_data(_Handle, _Buffer_unique_ptr);
; 3255 :             if (_Err != __std_win_error::_Success) {
; 3256 :                 return _Err;
; 3257 :             }
; 3258 : 
; 3259 :             unsigned long _File_attributes;
; 3260 :             _Err = __std_fs_get_file_attributes_by_handle(_Handle._Raw, &_File_attributes);

	lea	rdx, QWORD PTR _File_attributes$2[rsp]
	call	__std_fs_get_file_attributes_by_handle

; 3261 :             if (_Err != __std_win_error::_Success) {

	mov	rcx, QWORD PTR _Handle$1[rsp]
	mov	esi, eax
	test	eax, eax
	je	SHORT $LN4@Copy_symli
$LN128@Copy_symli:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 373  :         __std_fs_close_handle(_Raw);

	call	__std_fs_close_handle
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3194 :         delete[] _Ptr;

	mov	rcx, rbx
	call	??_V@YAXPEAX@Z				; operator delete[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3262 :                 return _Err;

	mov	eax, esi
	jmp	$LN125@Copy_symli
$LN4@Copy_symli:

; 3263 :             }
; 3264 : 
; 3265 :             _Is_directory = (_File_attributes & static_cast<unsigned long>(__std_fs_file_attr::_Directory)) != 0;

	mov	esi, DWORD PTR _File_attributes$2[rsp]
	shr	esi, 4
	and	sil, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 373  :         __std_fs_close_handle(_Raw);

	call	__std_fs_close_handle
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3272 :         if (__std_fs_is_junction_from_reparse_data_buffer(_Buffer)) {

	mov	rcx, rbx
	call	__std_fs_is_junction_from_reparse_data_buffer
	mov	rcx, rbx
	test	al, al
	je	SHORT $LN5@Copy_symli
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3194 :         delete[] _Ptr;

	call	??_V@YAXPEAX@Z				; operator delete[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3274 :             return _Err;

	mov	eax, 4393				; 00001129H
	jmp	$LN125@Copy_symli
$LN5@Copy_symli:

; 3275 :         }
; 3276 : 
; 3277 :         unsigned short _Length;
; 3278 :         wchar_t* _Offset;
; 3279 :         _Err = __std_fs_read_name_from_reparse_data_buffer(_Buffer, &_Offset, &_Length);

	lea	r8, QWORD PTR _Length$[rsp]
	mov	QWORD PTR [rsp+128], rbp
	lea	rdx, QWORD PTR _Offset$[rsp]
	call	__std_fs_read_name_from_reparse_data_buffer
	mov	ebp, eax

; 3280 :         if (_Err != __std_win_error::_Success) {

	test	eax, eax
	je	SHORT $LN6@Copy_symli
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3194 :         delete[] _Ptr;

	mov	rcx, rbx
	call	??_V@YAXPEAX@Z				; operator delete[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3281 :             return _Err;

	mov	eax, ebp
	jmp	SHORT $LN126@Copy_symli
$LN6@Copy_symli:

; 3282 :         }
; 3283 : 
; 3284 :         _Offset[_Length] = L'\0';

	mov	rax, QWORD PTR _Offset$[rsp]
	xor	edx, edx
	movzx	ecx, WORD PTR _Length$[rsp]
	mov	WORD PTR [rax+rcx*2], dx
	mov	rax, QWORD PTR [rdi+24]

; 3285 : 
; 3286 :         if (_Is_directory) {

	test	sil, sil
	je	SHORT $LN7@Copy_symli
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rax, 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN99@Copy_symli

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdi, QWORD PTR [rdi]
$LN99@Copy_symli:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3287 :             _Err = __std_fs_create_directory_symbolic_link(_New_symlink.c_str(), _Offset);

	mov	rdx, QWORD PTR _Offset$[rsp]
	mov	rcx, rdi
	call	__std_fs_create_directory_symbolic_link

; 3288 :         } else {

	jmp	SHORT $LN127@Copy_symli
$LN7@Copy_symli:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rax, 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN108@Copy_symli

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdi, QWORD PTR [rdi]
$LN108@Copy_symli:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3289 :             _Err = __std_fs_create_symbolic_link(_New_symlink.c_str(), _Offset);

	mov	rdx, QWORD PTR _Offset$[rsp]
	mov	rcx, rdi
	call	__std_fs_create_symbolic_link
$LN127@Copy_symli:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3194 :         delete[] _Ptr;

	mov	rcx, rbx
	mov	edi, eax
	call	??_V@YAXPEAX@Z				; operator delete[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3292 :         return _Err;

	mov	eax, edi
$LN126@Copy_symli:
	mov	rbp, QWORD PTR [rsp+128]
$LN125@Copy_symli:
	mov	rsi, QWORD PTR [rsp+80]
$LN1@Copy_symli:

; 3293 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 88					; 00000058H
	pop	rdi
	pop	rbx
	ret	0
?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z ENDP ; std::filesystem::_Copy_symlink
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z
_TEXT	SEGMENT
_Handle$1 = 32
_To_handle$ = 40
__$ArrayPad$ = 48
_Junction$ = 96
_New_junction$ = 104
?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z PROC ; std::filesystem::_Copy_junction, COMDAT

; 3295 :     _NODISCARD inline __std_win_error _Copy_junction(const path& _Junction, const path& _New_junction) noexcept {

$LN154:
	push	rbx
	push	rdi
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3295 :     _NODISCARD inline __std_win_error _Copy_junction(const path& _Junction, const path& _New_junction) noexcept {

	mov	rdi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN23@Copy_junct

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN23@Copy_junct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 366  :         *_Err = __std_fs_open_handle(&_Raw, _File_name, _Desired_access, _Flags);

	mov	rdx, rcx
	mov	r9d, 35651584				; 02200000H
	lea	rcx, QWORD PTR _Handle$1[rsp]
	mov	r8d, 128				; 00000080H
	call	__std_fs_open_handle
	mov	ebx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3301 :             if (_Err != __std_win_error::_Success) {

	test	eax, eax
	je	SHORT $LN2@Copy_junct
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 373  :         __std_fs_close_handle(_Raw);

	mov	rcx, QWORD PTR _Handle$1[rsp]
	call	__std_fs_close_handle
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3302 :                 return _Err;

	mov	eax, ebx
	jmp	$LN1@Copy_junct
$LN2@Copy_junct:

; 3183 :         _Buffer_unique_ptr.reset(::new (nothrow) char[_Buffer_size]);

	lea	rdx, OFFSET FLAT:?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
	mov	QWORD PTR [rsp+64], rsi
	mov	ecx, 16386				; 00004002H
	call	??_U@YAPEAX_KAEBUnothrow_t@std@@@Z	; operator new[]

; 3184 :         if (!_Buffer_unique_ptr) {

	mov	rcx, QWORD PTR _Handle$1[rsp]
	mov	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3450 :         return static_cast<bool>(_Mypair._Myval2);

	test	rax, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3184 :         if (!_Buffer_unique_ptr) {

	jne	SHORT $LN39@Copy_junct

; 3185 :             return __std_win_error::_Not_enough_memory;

	lea	esi, QWORD PTR [rax+8]
	call	__std_fs_close_handle

; 3307 :                 return _Err;

	mov	eax, esi
	jmp	$LN151@Copy_junct
$LN39@Copy_junct:

; 3189 :         const __std_win_error _Err = __std_fs_read_reparse_data_buffer(_Handle._Raw, _Buffer, _Buffer_size);

	mov	r8d, 16386				; 00004002H
	mov	rdx, rbx
	call	__std_fs_read_reparse_data_buffer

; 3190 :         if (_Err != __std_win_error::_Success) {

	mov	rcx, QWORD PTR _Handle$1[rsp]
	mov	esi, eax
	test	eax, eax
	je	SHORT $LN3@Copy_junct

; 3191 :             return _Err;

	call	__std_fs_close_handle
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3194 :         delete[] _Ptr;

	mov	rcx, rbx
	call	??_V@YAXPEAX@Z				; operator delete[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3307 :                 return _Err;

	mov	eax, esi
	jmp	$LN151@Copy_junct
$LN3@Copy_junct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 373  :         __std_fs_close_handle(_Raw);

	call	__std_fs_close_handle
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdi+24], 8

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rdi

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN133@Copy_junct

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rdi]
$LN133@Copy_junct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3313 :         const auto _Create_dir_res = __std_fs_create_directory(_New_junction.c_str());

	call	__std_fs_create_directory
	mov	rsi, rax
	shr	rsi, 32					; 00000020H
	test	esi, esi

; 3314 : 
; 3315 :         if (_Create_dir_res._Error != __std_win_error::_Success) {

	jne	SHORT $LN138@Copy_junct

; 3316 :             return _Create_dir_res._Error;
; 3317 :         } else if (!_Create_dir_res._Created) {

	test	al, al
	jne	SHORT $LN6@Copy_junct
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3194 :         delete[] _Ptr;

	mov	rcx, rbx
	call	??_V@YAXPEAX@Z				; operator delete[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3318 :             return __std_win_error::_Already_exists;

	mov	eax, 183				; 000000b7H
	jmp	$LN151@Copy_junct
$LN6@Copy_junct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdi+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN134@Copy_junct

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdi]
	mov	rdi, rdx
	jmp	SHORT $LN101@Copy_junct
$LN134@Copy_junct:
	mov	rdx, rdi
$LN101@Copy_junct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 366  :         *_Err = __std_fs_open_handle(&_Raw, _File_name, _Desired_access, _Flags);

	mov	r9d, 33554432				; 02000000H
	lea	rcx, QWORD PTR _To_handle$[rsp]
	mov	r8d, 256				; 00000100H
	call	__std_fs_open_handle
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3333 :         if (_Err != __std_win_error::_Success) {

	mov	rcx, QWORD PTR _To_handle$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 366  :         *_Err = __std_fs_open_handle(&_Raw, _File_name, _Desired_access, _Flags);

	mov	esi, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3333 :         if (_Err != __std_win_error::_Success) {

	test	eax, eax
	je	SHORT $LN7@Copy_junct
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 373  :         __std_fs_close_handle(_Raw);

	call	__std_fs_close_handle
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3324 :                 if (_Path) {

	test	rdi, rdi
	je	SHORT $LN138@Copy_junct

; 3325 :                     (void) __std_fs_remove(_Path);

	mov	rcx, rdi
	call	__std_fs_remove
$LN138@Copy_junct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3194 :         delete[] _Ptr;

	mov	rcx, rbx
	call	??_V@YAXPEAX@Z				; operator delete[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3334 :             return _Err;

	mov	eax, esi
	jmp	SHORT $LN151@Copy_junct
$LN7@Copy_junct:

; 3335 :         }
; 3336 :         _Err = __std_fs_write_reparse_data_buffer(_To_handle._Raw, _Buffer);

	mov	rdx, rbx
	mov	QWORD PTR [rsp+112], rbp
	call	__std_fs_write_reparse_data_buffer
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 373  :         __std_fs_close_handle(_Raw);

	mov	rcx, QWORD PTR _To_handle$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3342 :         return _Err;

	xor	esi, esi
	test	eax, eax
	mov	ebp, eax
	cmovne	rsi, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 373  :         __std_fs_close_handle(_Raw);

	call	__std_fs_close_handle
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3324 :                 if (_Path) {

	test	rsi, rsi
	je	SHORT $LN137@Copy_junct

; 3325 :                     (void) __std_fs_remove(_Path);

	mov	rcx, rsi
	call	__std_fs_remove
$LN137@Copy_junct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3194 :         delete[] _Ptr;

	mov	rcx, rbx
	call	??_V@YAXPEAX@Z				; operator delete[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3342 :         return _Err;

	mov	eax, ebp
	mov	rbp, QWORD PTR [rsp+112]
$LN151@Copy_junct:
	mov	rsi, QWORD PTR [rsp+64]
$LN1@Copy_junct:

; 3343 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rbx
	ret	0
?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z ENDP ; std::filesystem::_Copy_junction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ??1_Delete_directory_scope_guard@?1??_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@23@0@Z@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Delete_directory_scope_guard@?1??_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@23@0@Z@QEAA@XZ PROC ; `std::filesystem::_Copy_junction'::`2'::_Delete_directory_scope_guard::~_Delete_directory_scope_guard, COMDAT

; 3324 :                 if (_Path) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	jne	__std_fs_remove

; 3325 :                     (void) __std_fs_remove(_Path);
; 3326 :                 }
; 3327 :             }

	ret	0
??1_Delete_directory_scope_guard@?1??_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@23@0@Z@QEAA@XZ ENDP ; `std::filesystem::_Copy_junction'::`2'::_Delete_directory_scope_guard::~_Delete_directory_scope_guard
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?copy_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
_Symlink$ = 64
_New_symlink$ = 72
_Ec$ = 80
?copy_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z PROC ; std::filesystem::copy_symlink, COMDAT

; 3345 :     _EXPORT_STD inline void copy_symlink(const path& _Symlink, const path& _New_symlink, error_code& _Ec) {

$LN9:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	rbx, r8

; 3346 :         _Ec = _Make_ec(_Copy_symlink(_Symlink, _New_symlink));

	call	?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z ; std::filesystem::_Copy_symlink
	mov	DWORD PTR $T1[rsp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T1[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3346 :         _Ec = _Make_ec(_Copy_symlink(_Symlink, _New_symlink));

	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rbx], xmm0

; 3347 :     }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?copy_symlink@filesystem@std@@YAXAEBVpath@12@0AEAVerror_code@2@@Z ENDP ; std::filesystem::copy_symlink
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
_From$ = 64
_To$ = 72
_Options$ = 80
_Ec$ = 88
?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z PROC ; std::filesystem::copy_file, COMDAT

; 3358 :     /* strengthened */ {

$LN29:
	push	rbx
	sub	rsp, 48					; 00000030H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdx+24], 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3358 :     /* strengthened */ {

	mov	rbx, r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN8@copy_file

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN8@copy_file:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN17@copy_file

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN17@copy_file:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3361 :             __std_fs_copy_file(_From.c_str(), _To.c_str(), static_cast<__std_fs_copy_options>(_Options));

	call	__std_fs_copy_file
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	rcx, rax
	shr	rcx, 32					; 00000020H
	mov	DWORD PTR $T1[rsp], ecx
	lea	rcx, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T1[rsp+8], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3362 :         _Ec = _Make_ec(_Result._Error);

	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rbx], xmm0

; 3363 :         return _Result._Copied;
; 3364 :     }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z ENDP ; std::filesystem::copy_file
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@@Z
_TEXT	SEGMENT
_From$ = 48
_To$ = 56
_Options$dead$ = 64
?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@@Z PROC ; std::filesystem::copy_file, COMDAT

; 3366 :     _EXPORT_STD inline bool copy_file(const path& _From, const path& _To, const copy_options _Options) {

$LN29:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdx+24], 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3366 :     _EXPORT_STD inline bool copy_file(const path& _From, const path& _To, const copy_options _Options) {

	mov	rdi, rdx
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN9@copy_file

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN9@copy_file:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN18@copy_file

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN18@copy_file:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3369 :             __std_fs_copy_file(_From.c_str(), _To.c_str(), static_cast<__std_fs_copy_options>(_Options));

	xor	r8d, r8d
	call	__std_fs_copy_file
	mov	rcx, rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 3370 :         if (_Result._Error != __std_win_error::_Success) {

	jne	SHORT $LN27@copy_file

; 3372 :         }
; 3373 : 
; 3374 :         return _Result._Copied;
; 3375 :     }

	mov	rbx, QWORD PTR [rsp+48]
	movzx	eax, cl
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN27@copy_file:

; 3371 :             _Throw_fs_error("copy_file", _Result._Error, _From, _To);

	shr	rcx, 32					; 00000020H
	mov	r9, rdi
	mov	edx, ecx
	mov	r8, rbx
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z ; std::filesystem::_Throw_fs_error
	int	3
$LN25@copy_file:
?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@@Z ENDP ; std::filesystem::copy_file
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?copy_file@filesystem@std@@YA_NAEBVpath@12@0@Z
_TEXT	SEGMENT
_From$ = 48
_To$ = 56
?copy_file@filesystem@std@@YA_NAEBVpath@12@0@Z PROC	; std::filesystem::copy_file, COMDAT

; 3382 :     _EXPORT_STD inline bool copy_file(const path& _From, const path& _To) {

$LN32:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdx+24], 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3382 :     _EXPORT_STD inline bool copy_file(const path& _From, const path& _To) {

	mov	rdi, rdx
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN11@copy_file

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN11@copy_file:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN20@copy_file

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN20@copy_file:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3369 :             __std_fs_copy_file(_From.c_str(), _To.c_str(), static_cast<__std_fs_copy_options>(_Options));

	xor	r8d, r8d
	call	__std_fs_copy_file
	mov	rcx, rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 3370 :         if (_Result._Error != __std_win_error::_Success) {

	jne	SHORT $LN30@copy_file

; 3383 :         // copy a file _From -> _To, failing if the destination exists
; 3384 :         return _STD filesystem::copy_file(_From, _To, copy_options::none);

	mov	rbx, QWORD PTR [rsp+48]
	movzx	eax, cl

; 3385 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN30@copy_file:

; 3371 :             _Throw_fs_error("copy_file", _Result._Error, _From, _To);

	shr	rcx, 32					; 00000020H
	mov	r9, rdi
	mov	edx, ecx
	mov	r8, rbx
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@2@Z ; std::filesystem::_Throw_fs_error
	int	3
$LN28@copy_file:
?copy_file@filesystem@std@@YA_NAEBVpath@12@0@Z ENDP	; std::filesystem::copy_file
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_Equivalent@filesystem@std@@YA?AU?$pair@W4__std_win_error@@_N@2@QEB_W0@Z
_TEXT	SEGMENT
_Left_id$ = 32
_Right_id$ = 56
__$ArrayPad$ = 80
__$ReturnUdt$ = 112
_Lhs$ = 120
_Rhs$ = 128
?_Equivalent@filesystem@std@@YA?AU?$pair@W4__std_win_error@@_N@2@QEB_W0@Z PROC ; std::filesystem::_Equivalent, COMDAT

; 3388 :         const wchar_t* const _Lhs, const wchar_t* const _Rhs) noexcept {

$LN20:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
	mov	rdi, r8

; 3389 :         __std_fs_file_id _Left_id;
; 3390 :         __std_fs_file_id _Right_id;
; 3391 :         auto _Last_error = __std_fs_get_file_id(&_Left_id, _Lhs);

	lea	rcx, QWORD PTR _Left_id$[rsp]
	call	__std_fs_get_file_id

; 3392 :         if (_Last_error != __std_win_error::_Success) {

	test	eax, eax
	je	SHORT $LN2@Equivalent
$LN17@Equivalent:

; 3402 :     }

	mov	DWORD PTR [rbx], eax
	mov	BYTE PTR [rbx+4], 0
	jmp	SHORT $LN16@Equivalent
$LN2@Equivalent:

; 3393 :             return {_Last_error, false};
; 3394 :         }
; 3395 : 
; 3396 :         _Last_error = __std_fs_get_file_id(&_Right_id, _Rhs);

	mov	rdx, rdi
	lea	rcx, QWORD PTR _Right_id$[rsp]
	call	__std_fs_get_file_id

; 3397 :         if (_Last_error != __std_win_error::_Success) {

	test	eax, eax
	jne	SHORT $LN17@Equivalent
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	DWORD PTR [rbx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3401 :         return {__std_win_error::_Success, _CSTD memcmp(&_Left_id, &_Right_id, sizeof(__std_fs_file_id)) == 0};

	mov	rax, QWORD PTR _Left_id$[rsp]
	sub	rax, QWORD PTR _Right_id$[rsp]
	jne	SHORT $LN11@Equivalent
	mov	rax, QWORD PTR _Left_id$[rsp+8]
	sub	rax, QWORD PTR _Right_id$[rsp+8]
	jne	SHORT $LN11@Equivalent
	mov	rax, QWORD PTR _Left_id$[rsp+16]
	sub	rax, QWORD PTR _Right_id$[rsp+16]
$LN11@Equivalent:
	test	rax, rax
	sete	al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	BYTE PTR [rbx+4], al
$LN16@Equivalent:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3402 :     }

	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+136]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?_Equivalent@filesystem@std@@YA?AU?$pair@W4__std_win_error@@_N@2@QEB_W0@Z ENDP ; std::filesystem::_Equivalent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?equivalent@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z
_TEXT	SEGMENT
_Left_id$1 = 32
$T2 = 32
_Right_id$3 = 56
__$ArrayPad$ = 80
_Lhs$ = 112
_Rhs$ = 120
_Ec$ = 128
?equivalent@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z PROC ; std::filesystem::equivalent, COMDAT

; 3414 :     _EXPORT_STD _NODISCARD inline bool equivalent(const path& _Lhs, const path& _Rhs, error_code& _Ec) noexcept {

$LN45:
	mov	QWORD PTR [rsp+32], rbx
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdx+24], 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3414 :     _EXPORT_STD _NODISCARD inline bool equivalent(const path& _Lhs, const path& _Rhs, error_code& _Ec) noexcept {

	mov	rdi, r8
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN8@equivalent

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rdx]
$LN8@equivalent:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN17@equivalent

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN17@equivalent:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3391 :         auto _Last_error = __std_fs_get_file_id(&_Left_id, _Lhs);

	mov	rdx, rcx
	lea	rcx, QWORD PTR _Left_id$1[rsp]
	call	__std_fs_get_file_id
	mov	ecx, eax

; 3392 :         if (_Last_error != __std_win_error::_Success) {

	test	eax, eax
	je	SHORT $LN22@equivalent
$LN42@equivalent:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	xor	al, al
	jmp	SHORT $LN30@equivalent
$LN22@equivalent:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3396 :         _Last_error = __std_fs_get_file_id(&_Right_id, _Rhs);

	mov	rdx, rbx
	lea	rcx, QWORD PTR _Right_id$3[rsp]
	call	__std_fs_get_file_id
	mov	ecx, eax

; 3397 :         if (_Last_error != __std_win_error::_Success) {

	test	eax, eax
	jne	SHORT $LN42@equivalent

; 3398 :             return {_Last_error, false};
; 3399 :         }
; 3400 : 
; 3401 :         return {__std_win_error::_Success, _CSTD memcmp(&_Left_id, &_Right_id, sizeof(__std_fs_file_id)) == 0};

	mov	rax, QWORD PTR _Left_id$1[rsp]
	sub	rax, QWORD PTR _Right_id$3[rsp]
	jne	SHORT $LN35@equivalent
	mov	rax, QWORD PTR _Left_id$1[rsp+8]
	sub	rax, QWORD PTR _Right_id$3[rsp+8]
	jne	SHORT $LN35@equivalent
	mov	rax, QWORD PTR _Left_id$1[rsp+16]
	sub	rax, QWORD PTR _Right_id$3[rsp+16]
$LN35@equivalent:
	test	rax, rax
	sete	al
$LN30@equivalent:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T2[rsp], ecx
	lea	rcx, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T2[rsp+8], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3417 :         _Ec                = _Make_ec(_Result.first);

	movups	xmm0, XMMWORD PTR $T2[rsp]
	movups	XMMWORD PTR [rdi], xmm0

; 3418 :         return _Result.second;
; 3419 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+136]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
?equivalent@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z ENDP ; std::filesystem::equivalent
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@error_code@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@error_code@std@@QEAAX_K@Z PROC	; std::error_code::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rcx], xmm0
	ret	0
?__autoclassinit2@error_code@std@@QEAAX_K@Z ENDP	; std::error_code::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 40
$T2 = 56
_Iter$3 = 72
_Stats$ = 88
__$ArrayPad$ = 120
_Path$ = 144
_Ec$ = 152
?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z PROC ; std::filesystem::is_empty, COMDAT

; 3538 :     _EXPORT_STD _NODISCARD inline bool is_empty(const path& _Path, error_code& _Ec) {

$LN59:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rdx
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rcx+24], 8
	jb	SHORT $LN14@is_empty

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN14@is_empty:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3543 :         const auto _Error = __std_fs_get_stats(_Path.c_str(), &_Stats, _Flags);

	mov	r9d, -1					; ffffffffH
	mov	r8d, 11
	lea	rdx, QWORD PTR _Stats$[rsp]
	call	__std_fs_get_stats
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T1[rsp], eax
	lea	rsi, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T1[rsp+8], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3544 :         _Ec               = _Make_ec(_Error);

	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rdi], xmm0

; 3545 :         if (_Error != __std_win_error::_Success) {

	test	eax, eax
	je	SHORT $LN2@is_empty

; 3546 :             return false;

	xor	al, al
	jmp	$LN4@is_empty
$LN2@is_empty:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	test	DWORD PTR _Stats$[rsp+16], 16
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3549 :         if ((_Stats._Attributes & __std_fs_file_attr::_Directory) == __std_fs_file_attr{}) {

	jne	SHORT $LN3@is_empty

; 3550 :             return _Stats._File_size == 0;

	cmp	QWORD PTR _Stats$[rsp+8], 0
	sete	al
	jmp	SHORT $LN4@is_empty
$LN3@is_empty:
	xorps	xmm1, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1470 :     element_type* _Ptr{nullptr};

	movdqu	XMMWORD PTR _Iter$3[rsp], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2633 :             _Ec = _Make_ec(_Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path));

	mov	rdx, rbx
	lea	rcx, QWORD PTR _Iter$3[rsp]
	call	??$_Initialize_dir_enum@U_Dir_enum_impl@filesystem@std@@@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@2@AEBVpath@12@W4directory_options@12@@Z ; std::filesystem::_Dir_enum_impl::_Initialize_dir_enum<std::filesystem::_Dir_enum_impl>
	mov	DWORD PTR $T2[rsp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	QWORD PTR $T2[rsp+8], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2633 :             _Ec = _Make_ec(_Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path));

	movups	xmm0, XMMWORD PTR $T2[rsp]
	movups	XMMWORD PTR [rdi], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 208  :         return value() != 0;

	cmp	DWORD PTR [rdi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3553 :             return !_Ec && _Iter._At_end();

	jne	SHORT $LN6@is_empty
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1786 :         return get() != nullptr;

	cmp	QWORD PTR _Iter$3[rsp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3553 :             return !_Ec && _Iter._At_end();

	jne	SHORT $LN6@is_empty
	mov	sil, 1
	jmp	SHORT $LN7@is_empty
$LN6@is_empty:
	xor	sil, sil
$LN7@is_empty:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1402 :         if (_Rep) {

	mov	rcx, QWORD PTR _Iter$3[rsp+8]
	test	rcx, rcx
	je	SHORT $LN55@is_empty

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	edi, -1
	mov	eax, edi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN55@is_empty

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR _Iter$3[rsp+8]
	mov	rdx, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rdx]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	lock xadd DWORD PTR [rbx+12], edi
	cmp	edi, 1
	jne	SHORT $LN55@is_empty

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR _Iter$3[rsp+8]
	mov	rdx, QWORD PTR [rcx]
	call	QWORD PTR [rdx+8]
$LN55@is_empty:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3553 :             return !_Ec && _Iter._At_end();

	movzx	eax, sil
$LN4@is_empty:

; 3554 :         }
; 3555 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+32]
	mov	rsi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	rdi
	ret	0
?is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z ENDP ; std::filesystem::is_empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 40
$T2 = 56
_Iter$3 = 72
_Stats$ = 88
__$ArrayPad$ = 120
_Path$ = 144
_Ec$ = 152
?dtor$1@?0??is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z@4HA PROC ; `std::filesystem::is_empty'::`1'::dtor$1
	lea	rcx, QWORD PTR _Iter$3[rdx]
	jmp	??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ ; std::shared_ptr<std::filesystem::_Dir_enum_impl>::~shared_ptr<std::filesystem::_Dir_enum_impl>
?dtor$1@?0??is_empty@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z@4HA ENDP ; `std::filesystem::is_empty'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 64
_Iter$3 = 80
_Ec$ = 96
_Stats$4 = 112
__$ArrayPad$ = 144
_Path$ = 176
?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z PROC	; std::filesystem::is_empty, COMDAT

; 3557 :     _EXPORT_STD _NODISCARD inline bool is_empty(const path& _Path) {

$LN70:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 160				; 000000a0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rsi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rcx+24], 8
	jb	SHORT $LN21@is_empty

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN21@is_empty:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3543 :         const auto _Error = __std_fs_get_stats(_Path.c_str(), &_Stats, _Flags);

	mov	r9d, -1					; ffffffffH
	mov	r8d, 11
	lea	rdx, QWORD PTR _Stats$4[rsp]
	call	__std_fs_get_stats
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T1[rsp], eax
	lea	rbx, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T1[rsp+8], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3544 :         _Ec               = _Make_ec(_Error);

	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movdqa	XMMWORD PTR _Ec$[rsp], xmm0

; 3545 :         if (_Error != __std_win_error::_Success) {

	test	eax, eax
	je	SHORT $LN9@is_empty

; 3546 :             return false;

	xor	dil, dil
	jmp	$LN11@is_empty
$LN9@is_empty:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	test	DWORD PTR _Stats$4[rsp+16], 16
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3549 :         if ((_Stats._Attributes & __std_fs_file_attr::_Directory) == __std_fs_file_attr{}) {

	jne	SHORT $LN10@is_empty

; 3550 :             return _Stats._File_size == 0;

	cmp	QWORD PTR _Stats$4[rsp+8], 0
	sete	dil
	jmp	SHORT $LN11@is_empty
$LN10@is_empty:
	xorps	xmm1, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1470 :     element_type* _Ptr{nullptr};

	movdqu	XMMWORD PTR _Iter$3[rsp], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2633 :             _Ec = _Make_ec(_Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path));

	mov	rdx, rsi
	lea	rcx, QWORD PTR _Iter$3[rsp]
	call	??$_Initialize_dir_enum@U_Dir_enum_impl@filesystem@std@@@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@2@AEBVpath@12@W4directory_options@12@@Z ; std::filesystem::_Dir_enum_impl::_Initialize_dir_enum<std::filesystem::_Dir_enum_impl>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T2[rsp], eax
	mov	QWORD PTR $T2[rsp+8], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2633 :             _Ec = _Make_ec(_Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path));

	movaps	xmm0, XMMWORD PTR $T2[rsp]
	movdqa	XMMWORD PTR _Ec$[rsp], xmm0

; 2634 :         }

	test	eax, eax

; 3553 :             return !_Ec && _Iter._At_end();

	jne	SHORT $LN13@is_empty
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1786 :         return get() != nullptr;

	cmp	QWORD PTR _Iter$3[rsp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3553 :             return !_Ec && _Iter._At_end();

	jne	SHORT $LN13@is_empty
	mov	dil, 1
	jmp	SHORT $LN14@is_empty
$LN13@is_empty:
	xor	dil, dil
$LN14@is_empty:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1402 :         if (_Rep) {

	mov	rcx, QWORD PTR _Iter$3[rsp+8]
	test	rcx, rcx
	je	SHORT $LN11@is_empty

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	ebp, -1
	mov	eax, ebp
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN11@is_empty

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR _Iter$3[rsp+8]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	lock xadd DWORD PTR [rbx+12], ebp
	cmp	ebp, 1
	jne	SHORT $LN11@is_empty

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR _Iter$3[rsp+8]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN11@is_empty:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 208  :         return value() != 0;

	cmp	DWORD PTR _Ec$[rsp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3561 :         if (_Ec) {

	jne	SHORT $LN68@is_empty

; 3563 :         }
; 3564 : 
; 3565 :         return _Result;

	movzx	eax, dil

; 3566 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+160]
	mov	rbx, QWORD PTR [r11+24]
	mov	rbp, QWORD PTR [r11+32]
	mov	rsi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	rdi
	ret	0
$LN68@is_empty:

; 3562 :             _Throw_fs_error("is_empty", _Ec, _Path);

	mov	r8, rsi
	lea	rdx, QWORD PTR _Ec$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_08OBNFFMDJ@is_empty@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	int	3
$LN66@is_empty:
?is_empty@filesystem@std@@YA_NAEBVpath@12@@Z ENDP	; std::filesystem::is_empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 64
_Iter$3 = 80
_Ec$ = 96
_Stats$4 = 112
__$ArrayPad$ = 144
_Path$ = 176
?dtor$1@?0??is_empty@filesystem@std@@YA_NAEBVpath@12@@Z@4HA PROC ; `std::filesystem::is_empty'::`1'::dtor$1
	lea	rcx, QWORD PTR _Iter$3[rdx]
	jmp	??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ ; std::shared_ptr<std::filesystem::_Dir_enum_impl>::~shared_ptr<std::filesystem::_Dir_enum_impl>
?dtor$1@?0??is_empty@filesystem@std@@YA_NAEBVpath@12@@Z@4HA ENDP ; `std::filesystem::is_empty'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?remove@filesystem@std@@YA_NAEBVpath@12@@Z
_TEXT	SEGMENT
_Target$ = 48
?remove@filesystem@std@@YA_NAEBVpath@12@@Z PROC		; std::filesystem::remove, COMDAT

; 3620 :     _EXPORT_STD inline bool remove(const path& _Target) {

$LN19:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3620 :     _EXPORT_STD inline bool remove(const path& _Target) {

	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN9@remove

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN9@remove:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3623 :         const auto _Result = __std_fs_remove(_Target.c_str());

	call	__std_fs_remove
	mov	rcx, rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 3624 :         if (_Result._Error != __std_win_error::_Success) {

	jne	SHORT $LN17@remove

; 3626 :         }
; 3627 : 
; 3628 :         return _Result._Removed;

	movzx	eax, cl

; 3629 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@remove:

; 3625 :             _Throw_fs_error("remove", _Result._Error, _Target);

	shr	rcx, 32					; 00000020H
	mov	r8, rbx
	mov	edx, ecx
	lea	rcx, OFFSET FLAT:??_C@_06LEMKAMD@remove@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	int	3
$LN15@remove:
?remove@filesystem@std@@YA_NAEBVpath@12@@Z ENDP		; std::filesystem::remove
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_Get_any_status@filesystem@std@@YA?AU_File_status_and_error@12@AEBVpath@12@W4__std_fs_stats_flags@@@Z
_TEXT	SEGMENT
_Stats$ = 32
__$ArrayPad$ = 64
__$ReturnAddress$ = 96
_Path$ = 104
_Flags$ = 112
?_Get_any_status@filesystem@std@@YA?AU_File_status_and_error@12@AEBVpath@12@W4__std_fs_stats_flags@@@Z PROC ; std::filesystem::_Get_any_status, COMDAT

; 3702 :         const path& _Path, const __std_fs_stats_flags _Flags) noexcept {

$LN57:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 1979 :         file_type _Myftype = file_type::none;

	xor	edi, edi

; 1980 :         perms _Myperms     = perms::unknown;

	mov	DWORD PTR [rcx+4], 65535		; 0000ffffH
	mov	DWORD PTR [rcx], edi

; 3702 :         const path& _Path, const __std_fs_stats_flags _Flags) noexcept {

	mov	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdx+24], 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3702 :         const path& _Path, const __std_fs_stats_flags _Flags) noexcept {

	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN12@Get_any_st

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rdx]
$LN12@Get_any_st:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3706 :         const auto _Error = __std_fs_get_stats(_Path.c_str(), &_Stats, _Flags);

	mov	r9d, -1					; ffffffffH
	lea	rdx, QWORD PTR _Stats$[rsp]
	mov	rcx, rax
	call	__std_fs_get_stats

; 3707 :         _Result._Error    = _Error;

	mov	DWORD PTR [rbx+8], eax

; 1942 :             if (_Error == __std_win_error::_Success) {

	test	eax, eax
	jne	SHORT $LN17@Get_any_st
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	mov	edi, DWORD PTR _Stats$[rsp+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1945 :                 if (_Bitmask_includes_any(_Attrs, __std_fs_file_attr::_Readonly)) {

	mov	eax, 511				; 000001ffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	test	dil, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1945 :                 if (_Bitmask_includes_any(_Attrs, __std_fs_file_attr::_Readonly)) {

	mov	ecx, 365				; 0000016dH
	cmovne	eax, ecx
	mov	DWORD PTR [rbx+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	mov	eax, edi
	shr	eax, 10
	test	al, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1951 :                 if (_Bitmask_includes_any(_Attrs, __std_fs_file_attr::_Reparse_point)) {

	je	SHORT $LN22@Get_any_st

; 1952 :                     if (_Stats._Reparse_point_tag == __std_fs_reparse_tag::_Symlink) {

	mov	eax, DWORD PTR _Stats$[rsp+20]
	cmp	eax, -1610612724			; a000000cH
	jne	SHORT $LN21@Get_any_st

; 1953 :                         this->type(file_type::symlink);

	mov	edi, 4

; 1954 :                         return;

	jmp	SHORT $LN38@Get_any_st
$LN21@Get_any_st:

; 1955 :                     }
; 1956 : 
; 1957 :                     if (_Stats._Reparse_point_tag == __std_fs_reparse_tag::_Mount_point) {

	cmp	eax, -1610612733			; a0000003H
	jne	SHORT $LN22@Get_any_st

; 1958 :                         this->type(file_type::junction);

	mov	edi, 10

; 1959 :                         return;

	jmp	SHORT $LN38@Get_any_st
$LN22@Get_any_st:

; 1960 :                     }
; 1961 : 
; 1962 :                     // All other reparse points considered ordinary files or directories
; 1963 :                 }
; 1964 : 
; 1965 :                 if (_Bitmask_includes_any(_Attrs, __std_fs_file_attr::_Directory)) {
; 1966 :                     this->type(file_type::directory);
; 1967 :                 } else {
; 1968 :                     this->type(file_type::regular);
; 1969 :                 }
; 1970 : 
; 1971 :                 return;

	shr	edi, 4
	and	edi, 1
	add	edi, 2
	jmp	SHORT $LN38@Get_any_st
$LN17@Get_any_st:

; 1972 :             }
; 1973 : 
; 1974 :             this->permissions(perms::unknown);

	mov	DWORD PTR [rbx+4], 65535		; 0000ffffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 52   :     switch (_Error) {

	sub	eax, 2
	je	SHORT $LN41@Get_any_st
	sub	eax, 1
	je	SHORT $LN41@Get_any_st
	sub	eax, 50					; 00000032H
	je	SHORT $LN41@Get_any_st
	cmp	eax, 70					; 00000046H
	jne	SHORT $LN38@Get_any_st
$LN41@Get_any_st:

; 53   :     case __std_win_error::_File_not_found:
; 54   :     case __std_win_error::_Path_not_found:
; 55   :     case __std_win_error::_Error_bad_netpath:
; 56   :     case __std_win_error::_Invalid_name:
; 57   :         return true;

	mov	edi, 1
$LN38@Get_any_st:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3710 :         return _Result;

	mov	rax, rbx
	mov	DWORD PTR [rbx], edi

; 3711 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?_Get_any_status@filesystem@std@@YA?AU_File_status_and_error@12@AEBVpath@12@W4__std_fs_stats_flags@@@Z ENDP ; std::filesystem::_Get_any_status
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?create_directory@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
_Path$ = 64
__formal$dead$ = 72
_Ec$ = 80
?create_directory@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z PROC ; std::filesystem::create_directory, COMDAT

; 3766 :     _EXPORT_STD inline bool create_directory(const path& _Path, const path&, error_code& _Ec) noexcept {

$LN19:
	push	rbx
	sub	rsp, 48					; 00000030H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3766 :     _EXPORT_STD inline bool create_directory(const path& _Path, const path&, error_code& _Ec) noexcept {

	mov	rbx, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN8@create_dir

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN8@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3767 :         const auto _Result = __std_fs_create_directory(_Path.c_str());

	call	__std_fs_create_directory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	rcx, rax
	shr	rcx, 32					; 00000020H
	mov	DWORD PTR $T1[rsp], ecx
	lea	rcx, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T1[rsp+8], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3768 :         _Ec                = _Make_ec(_Result._Error);

	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rbx], xmm0

; 3769 :         return _Result._Created;
; 3770 :     }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?create_directory@filesystem@std@@YA_NAEBVpath@12@0AEAVerror_code@2@@Z ENDP ; std::filesystem::create_directory
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z
_TEXT	SEGMENT
_Most_recent_not_file_not_found$1$ = 48
$T1 = 48
_Ec$GSCopy$1$ = 64
$T2 = 64
_Tmp$ = 80
__$ArrayPad$ = 112
_Path$ = 192
_Ec$ = 200
?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z PROC ; std::filesystem::create_directories, COMDAT

; 3772 :     _EXPORT_STD inline bool create_directories(const path& _Path, error_code& _Ec) {

$LN322:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	mov	rbp, rsp
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-128], rax
	mov	QWORD PTR _Ec$GSCopy$1$[rbp-128], rdx
	mov	rbx, rcx

; 3773 :         if (_Path.empty()) {

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	cmp	QWORD PTR [rcx+16], 0
	jne	SHORT $LN4@create_dir
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T2[rbp-128], 3
	mov	QWORD PTR $T2[rbp-120], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3774 :             _Ec = _Make_ec(__std_win_error::_Path_not_found);

	movups	xmm0, XMMWORD PTR $T2[rbp-128]
	movups	XMMWORD PTR [rdx], xmm0

; 3775 :             return false;

	xor	al, al
	jmp	$LN1@create_dir
$LN4@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 189  :         _Myval = 0;

	xor	r13d, r13d
	mov	DWORD PTR [rdx], r13d

; 190  :         _Mycat = &_STD system_category();

	mov	QWORD PTR [rdx+8], rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR _Tmp$[rbp-128], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR _Tmp$[rbp-112], r13

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	r11d, 7
	mov	QWORD PTR _Tmp$[rbp-104], r11

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	WORD PTR _Tmp$[rbp-128], r13w
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3781 :         _Tmp.reserve(_Text.size());

	mov	rax, QWORD PTR [rcx+16]
	cmp	rax, r11
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4178 :         if (_Mypair._Myval2._Myres >= _Newcap) { // requested capacity is not larger than current capacity, ignore

	jbe	SHORT $LN309@create_dir

; 4766 :         if (max_size() - _Old_size < _Size_increase) {

	mov	rdi, 9223372036854775806		; 7ffffffffffffffeH
	cmp	rax, rdi
	ja	$LN320@create_dir

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	or	rax, r11
	cmp	rax, rdi

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	ja	SHORT $LN104@create_dir

; 4716 :             return _Max;
; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	mov	rdi, rax
	mov	ecx, 10
	cmp	rax, rcx
	cmovb	rdi, rcx
$LN104@create_dir:

; 4774 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	lea	rdx, QWORD PTR [rdi+1]
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
	mov	r15, rax

; 4775 : 
; 4776 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 4777 :         _My_data._Orphan_all();
; 4778 :         _ASAN_STRING_REMOVE(*this);
; 4779 :         _My_data._Mysize      = _New_size;
; 4780 :         _My_data._Myres       = _New_capacity;

	mov	QWORD PTR _Tmp$[rbp-104], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movzx	ecx, WORD PTR _Tmp$[rbp-128]
	mov	WORD PTR [rax], cx

; 4789 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR _Tmp$[rbp-128], rax

; 4188 :         _Mypair._Myval2._Mysize = _Old_size;

	mov	QWORD PTR _Tmp$[rbp-112], r13
	mov	rax, QWORD PTR [rbx+16]

; 4178 :         if (_Mypair._Myval2._Myres >= _Newcap) { // requested capacity is not larger than current capacity, ignore

	mov	r11, QWORD PTR _Tmp$[rbp-104]
	jmp	SHORT $LN94@create_dir
$LN309@create_dir:
	mov	r15, QWORD PTR _Tmp$[rbp-128]
$LN94@create_dir:

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	r10, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 8
	jb	SHORT $LN158@create_dir

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r10, QWORD PTR [rbx]
	mov	rbx, r10
$LN158@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3783 :         const auto _End     = _Text.data() + _Text.size();

	lea	rsi, QWORD PTR [rbx+rax*2]

; 435  :         return _STD find_if_not(_Find_root_name_end(_First, _Last), _Last, _Is_slash);

	mov	rdx, rsi
	mov	rcx, r10
	call	?_Find_root_name_end@filesystem@std@@YAPEB_WQEB_W0@Z ; std::filesystem::_Find_root_name_end
	mov	r14, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rax, rsi
	je	SHORT $LN307@create_dir
$LL167@create_dir:

; 371  :         if (!_Pred(*_UFirst)) {

	movzx	eax, WORD PTR [r14]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	ax, 92					; 0000005cH
	je	SHORT $LN305@create_dir
	cmp	ax, 47					; 0000002fH
	jne	SHORT $LN307@create_dir
$LN305@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	add	r14, 2
	cmp	r14, rsi
	jne	SHORT $LL167@create_dir
$LN307@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3786 :             && _Is_slash(_Root_path_end[2])) {

	cmp	r14, r10
	je	SHORT $LN5@create_dir
	mov	rax, rsi
	sub	rax, r14
	and	rax, -2
	cmp	rax, 6
	jl	SHORT $LN5@create_dir

; 362  :         _Value &= 0xFFFF'FFDFu; // transform lowercase drive letters into uppercase ones

	mov	eax, DWORD PTR [r14]
	and	eax, -33				; ffffffdfH

; 363  :         _Value -= (static_cast<unsigned int>(L':') << (sizeof(wchar_t) * CHAR_BIT)) | L'A';

	sub	eax, 3801153				; 003a0041H

; 364  :         return _Value < 26;

	cmp	eax, 26

; 3786 :             && _Is_slash(_Root_path_end[2])) {

	jae	SHORT $LN5@create_dir
	movzx	eax, WORD PTR [r14+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	ax, 92					; 0000005cH
	je	SHORT $LN304@create_dir
	cmp	ax, 47					; 0000002fH
	jne	SHORT $LN5@create_dir
$LN304@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3788 :             _Root_path_end += 2;

	add	r14, 4
$LN5@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3325 :             return append(_UFirst, _Convert_size<size_type>(static_cast<size_t>(_ULast - _UFirst)));

	mov	rdx, r14
	sub	rdx, r10
	sar	rdx, 1

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rdx, r11
	ja	SHORT $LN177@create_dir

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	mov	QWORD PTR _Tmp$[rbp-112], rdx

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rdi, QWORD PTR _Tmp$[rbp-128]

; 2227 :         if (_Large_string_engaged()) {

	cmp	r11, 8
	cmovae	rdi, r15

; 3275 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

	lea	rbx, QWORD PTR [rdx+rdx]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rbx
	mov	rdx, r10
	mov	rcx, rdi
	call	memmove

; 3276 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	WORD PTR [rbx+rdi], r13w

; 3277 :             return *this;

	jmp	SHORT $LN176@create_dir
$LN177@create_dir:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], rdx
	mov	r9, r10
	lea	rcx, QWORD PTR _Tmp$[rbp-128]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV34@QEB_W_K@Z@PEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEB_W0@Z@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<`std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append'::`2'::<lambda_1>,wchar_t const *,unsigned __int64>
$LN176@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3807 :         bool _Created_last                              = false;

	xor	bl, bl

; 3808 :         __std_win_error _Error                          = __std_win_error::_Success;
; 3809 :         __std_win_error _Most_recent_not_file_not_found = __std_win_error::_Success;

	mov	DWORD PTR _Most_recent_not_file_not_found$1$[rbp-128], r13d

; 3810 :         while (_Cursor != _End) {

	cmp	r14, rsi
	je	$LN7@create_dir
	npad	5
$LL2@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 368  :     auto _UFirst      = _Get_unwrapped(_First);

	mov	rdi, r14
$LL13@create_dir:

; 371  :         if (!_Pred(*_UFirst)) {

	movzx	eax, WORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	ax, 92					; 0000005cH
	je	SHORT $LN303@create_dir
	cmp	ax, 47					; 0000002fH
	jne	SHORT $LN308@create_dir
$LN303@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	add	rdi, 2
	cmp	rdi, rsi
	jne	SHORT $LL13@create_dir
$LN308@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 6315 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rdi, rsi
	je	SHORT $LN253@create_dir
$LL23@create_dir:

; 6316 :         if (_Pred(*_UFirst)) {

	movzx	eax, WORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	ax, 92					; 0000005cH
	je	SHORT $LN253@create_dir
	cmp	ax, 47					; 0000002fH
	je	SHORT $LN253@create_dir
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 6315 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	rdi, 2
	cmp	rdi, rsi
	jne	SHORT $LL23@create_dir
$LN253@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3325 :             return append(_UFirst, _Convert_size<size_type>(static_cast<size_t>(_ULast - _UFirst)));

	mov	r15, rdi
	sub	r15, r14
	sar	r15, 1

; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	r12, QWORD PTR _Tmp$[rbp-112]
	mov	rcx, QWORD PTR _Tmp$[rbp-104]
	mov	rax, rcx
	sub	rax, r12

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	r15, rax
	ja	SHORT $LN33@create_dir

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [r15+r12]
	mov	QWORD PTR _Tmp$[rbp-112], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rbx, QWORD PTR _Tmp$[rbp-128]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rcx, 8
	cmovae	rbx, QWORD PTR _Tmp$[rbp-128]

; 3275 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

	lea	rcx, QWORD PTR [rbx+r12*2]
	lea	r8, QWORD PTR [r15+r15]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, r14
	call	memmove

; 3276 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	lea	rax, QWORD PTR [r12+r15]
	mov	WORD PTR [rbx+rax*2], r13w

; 3277 :             return *this;

	jmp	SHORT $LN32@create_dir
$LN33@create_dir:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], r15
	mov	r9, r14
	mov	rdx, r15
	lea	rcx, QWORD PTR _Tmp$[rbp-128]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV34@QEB_W_K@Z@PEB_W_K@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEB_W0@Z@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<`std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append'::`2'::<lambda_1>,wchar_t const *,unsigned __int64>
$LN32@create_dir:

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR _Tmp$[rbp-128]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR _Tmp$[rbp-104], 8
	cmovae	rcx, QWORD PTR _Tmp$[rbp-128]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3813 :             const auto _Create_result = __std_fs_create_directory(_Tmp.c_str());

	call	__std_fs_create_directory
	mov	rbx, rax
	mov	rcx, rax
	shr	rcx, 32					; 00000020H

; 3814 :             _Error                    = _Create_result._Error;
; 3815 :             _Created_last             = _Create_result._Created;
; 3816 :             if (_Error != __std_win_error::_Success && !__std_is_file_not_found(_Error)) {

	test	ecx, ecx
	je	SHORT $LN316@create_dir
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 52   :     switch (_Error) {

	mov	eax, ecx
	sub	eax, 2
	je	SHORT $LN316@create_dir
	sub	eax, 1
	je	SHORT $LN316@create_dir
	sub	eax, 50					; 00000032H
	je	SHORT $LN316@create_dir
	cmp	eax, 70					; 00000046H
	je	SHORT $LN316@create_dir
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3817 :                 _Most_recent_not_file_not_found = _Error;

	mov	eax, ecx
	mov	DWORD PTR _Most_recent_not_file_not_found$1$[rbp-128], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 52   :     switch (_Error) {

	jmp	SHORT $LN6@create_dir
$LN316@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3820 :             _Cursor = _Added_end;

	mov	eax, DWORD PTR _Most_recent_not_file_not_found$1$[rbp-128]
$LN6@create_dir:
	mov	r14, rdi

; 3810 :         while (_Cursor != _End) {

	cmp	rdi, rsi
	jne	$LL2@create_dir
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r13d, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3823 :         if (_Error != __std_win_error::_Success && _Most_recent_not_file_not_found != __std_win_error::_Success) {

	test	ecx, ecx
	je	SHORT $LN7@create_dir
	test	eax, eax
	cmovne	r13d, eax
$LN7@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T1[rbp-128], r13d
	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T1[rbp-120], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3827 :         _Ec = _Make_ec(_Error);

	movups	xmm0, XMMWORD PTR $T1[rbp-128]
	mov	rax, QWORD PTR _Ec$GSCopy$1$[rbp-128]
	movups	XMMWORD PTR [rax], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR _Tmp$[rbp-104]
	cmp	rdx, 8

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN215@create_dir
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rdx*2+2]
	mov	rcx, QWORD PTR _Tmp$[rbp-128]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN227@create_dir

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN227@create_dir
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN227@create_dir:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN215@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3828 :         return _Created_last;

	movzx	eax, bl
$LN1@create_dir:

; 3829 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-128]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+208]
	add	rsp, 128				; 00000080H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN320@create_dir:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4767 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN317@create_dir:
?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z ENDP ; std::filesystem::create_directories
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Most_recent_not_file_not_found$1$ = 48
$T1 = 48
_Ec$GSCopy$1$ = 64
$T2 = 64
_Tmp$ = 80
__$ArrayPad$ = 112
_Path$ = 192
_Ec$ = 200
?dtor$0@?0??create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z@4HA PROC ; `std::filesystem::create_directories'::`1'::dtor$0
	lea	rcx, QWORD PTR _Tmp$[rdx]
	jmp	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
?dtor$0@?0??create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z@4HA ENDP ; `std::filesystem::create_directories'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?create_directories@filesystem@std@@YA_NAEBVpath@12@@Z
_TEXT	SEGMENT
_Ec$ = 32
__$ArrayPad$ = 48
_Path$ = 80
?create_directories@filesystem@std@@YA_NAEBVpath@12@@Z PROC ; std::filesystem::create_directories, COMDAT

; 3831 :     _EXPORT_STD inline bool create_directories(const path& _Path) {

$LN15:
	push	rbx
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	xor	eax, eax

; 3833 :         const bool _Result = _STD filesystem::create_directories(_Path, _Ec);

	lea	rdx, QWORD PTR _Ec$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 166  :     error_code() noexcept : _Myval(0), _Mycat(&_STD system_category()) {} // construct non-error

	mov	QWORD PTR _Ec$[rsp], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3831 :     _EXPORT_STD inline bool create_directories(const path& _Path) {

	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 166  :     error_code() noexcept : _Myval(0), _Mycat(&_STD system_category()) {} // construct non-error

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR _Ec$[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3833 :         const bool _Result = _STD filesystem::create_directories(_Path, _Ec);

	call	?create_directories@filesystem@std@@YA_NAEBVpath@12@AEAVerror_code@2@@Z ; std::filesystem::create_directories
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 208  :         return value() != 0;

	cmp	DWORD PTR _Ec$[rsp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3834 :         if (_Ec) {

	jne	SHORT $LN13@create_dir

; 3836 :         }
; 3837 : 
; 3838 :         return _Result;
; 3839 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
$LN13@create_dir:

; 3835 :             _Throw_fs_error("create_directories", _Ec, _Path);

	mov	r8, rbx
	lea	rdx, QWORD PTR _Ec$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0BD@EPABGGCG@create_directories@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	int	3
$LN11@create_dir:
?create_directories@filesystem@std@@YA_NAEBVpath@12@@Z ENDP ; std::filesystem::create_directories
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z
_TEXT	SEGMENT
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
$T10 = 48
$T11 = 56
$T12 = 64
$T13 = 80
$T14 = 80
tv2472 = 112
_Options$GSCopy$1$ = 116
tv2474 = 120
$T15 = 128
$T16 = 128
_Fstat$ = 144
_Child_status_result$17 = 160
$T18 = 176
$T19 = 192
$T20 = 208
$T21 = 224
_It$22 = 256
$T23 = 256
$T24 = 256
$T25 = 256
_Left_id$26 = 272
_Right_id$27 = 296
_Stats$28 = 320
$T29 = 320
__$ArrayPad$ = 352
_From$ = 448
_To$ = 456
_Options$ = 464
_Ec$ = 472
?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z PROC ; std::filesystem::_Copy_impl, COMDAT

; 4219 :         const directory_entry& _From, const path& _To, const copy_options _Options, error_code& _Ec) {

$LN717:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-120]
	sub	rsp, 376				; 00000178H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	r15, r9
	mov	r13d, r8d
	mov	DWORD PTR _Options$GSCopy$1$[rsp], r8d
	mov	r12, rdx
	mov	rsi, rcx
	xor	r14d, r14d
	mov	eax, r14d
	mov	DWORD PTR $T10[rsp], eax
	mov	DWORD PTR $T11[rsp], eax

; 1902 :     _BITMASK_OPS(_EXPORT_STD, copy_options)

	test	r8d, 768				; 00000300H

; 4220 :         // implement copy, does not clear _Ec for callers
; 4221 :         // Standard quotes herein are relative to N4950
; 4222 :         // The following parts of LWG-3057 are implemented:
; 4223 :         // * guarding equivalent() from nonexistent to
; 4224 :         // * replacing unspecified recursion prevention tag with copy_options::directories_only
; 4225 :         // Other parts of LWG-3057 remain under discussion in the committee and are not yet implemented.
; 4226 :         //  (In particular, changes to existing destination flags, and error handling).
; 4227 :         const bool _Flink = (_Options & (copy_options::skip_symlinks | copy_options::copy_symlinks))
; 4228 :                          != copy_options::none; // create_symlinks intentionally removed by LWG-3057
; 4229 :         const auto _Fstat = _From._Get_any_status(_Flink ? _Symlink_status_stats_flags : _Status_stats_flags);

	mov	ebx, 3
	mov	eax, ebx
	mov	edi, 6
	cmovne	eax, edi
	mov	DWORD PTR tv2472[rsp], eax
	mov	r8d, eax
	lea	rdx, QWORD PTR _Fstat$[rbp-256]
	call	?_Get_any_status@directory_entry@filesystem@std@@AEBA?AU_File_status_and_error@23@W4__std_fs_stats_flags@@@Z ; std::filesystem::directory_entry::_Get_any_status

; 4230 :         if (_Fstat._Error != __std_win_error::_Success) { // report an error if exists(f) is false

	mov	eax, DWORD PTR _Fstat$[rbp-248]
	test	eax, eax
	je	SHORT $LN5@Copy_impl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T25[rbp-256], eax
$LN710@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4373 :     }

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T25[rbp-248], rax
	movups	xmm0, XMMWORD PTR $T25[rbp-256]
	jmp	$LN701@Copy_impl
$LN5@Copy_impl:

; 1902 :     _BITMASK_OPS(_EXPORT_STD, copy_options)

	mov	eax, r13d
	and	eax, 8704				; 00002200H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, r12

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r12+24], 8
	jb	SHORT $LN70@Copy_impl

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r12]
$LN70@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4237 :         const auto _Tstat = _Get_any_status(_To, _Tlink ? _Symlink_status_stats_flags : _Status_stats_flags);

	test	eax, eax
	cmovne	ebx, edi

; 3706 :         const auto _Error = __std_fs_get_stats(_Path.c_str(), &_Stats, _Flags);

	mov	r9d, -1					; ffffffffH
	mov	r8d, ebx
	lea	rdx, QWORD PTR _Stats$28[rbp-256]
	call	__std_fs_get_stats
	mov	edx, eax

; 1942 :             if (_Error == __std_win_error::_Success) {

	mov	eax, 10
	test	edx, edx
	jne	SHORT $LN75@Copy_impl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	mov	ebx, DWORD PTR _Stats$28[rbp-240]
	bt	ebx, 10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1951 :                 if (_Bitmask_includes_any(_Attrs, __std_fs_file_attr::_Reparse_point)) {

	jae	SHORT $LN80@Copy_impl

; 1952 :                     if (_Stats._Reparse_point_tag == __std_fs_reparse_tag::_Symlink) {

	mov	ecx, DWORD PTR _Stats$28[rbp-236]
	cmp	ecx, -1610612724			; a000000cH
	jne	SHORT $LN79@Copy_impl

; 1953 :                         this->type(file_type::symlink);

	lea	ebx, QWORD PTR [rax-6]

; 1954 :                         return;

	jmp	SHORT $LN74@Copy_impl
$LN79@Copy_impl:

; 1955 :                     }
; 1956 : 
; 1957 :                     if (_Stats._Reparse_point_tag == __std_fs_reparse_tag::_Mount_point) {

	cmp	ecx, -1610612733			; a0000003H
	jne	SHORT $LN80@Copy_impl

; 1958 :                         this->type(file_type::junction);

	mov	ebx, eax

; 1959 :                         return;

	jmp	SHORT $LN74@Copy_impl
$LN80@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	and	ebx, 16
	or	ebx, 32					; 00000020H
	shr	ebx, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1971 :                 return;

	jmp	SHORT $LN74@Copy_impl
$LN75@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 52   :     switch (_Error) {

	mov	eax, edx
	sub	eax, 2
	je	SHORT $LN99@Copy_impl
	sub	eax, 1
	je	SHORT $LN99@Copy_impl
	sub	eax, 50					; 00000032H
	je	SHORT $LN99@Copy_impl
	cmp	eax, 70					; 00000046H

; 58   :     default:
; 59   :         return false;

	mov	ebx, r14d

; 52   :     switch (_Error) {

	jne	SHORT $LN74@Copy_impl
$LN99@Copy_impl:

; 53   :     case __std_win_error::_File_not_found:
; 54   :     case __std_win_error::_Path_not_found:
; 55   :     case __std_win_error::_Error_bad_netpath:
; 56   :     case __std_win_error::_Invalid_name:
; 57   :         return true;

	mov	ebx, 1
$LN74@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2065 :             return _Error != __std_win_error::_Success && _Status.type() != file_type::not_found

	test	edx, edx
	je	SHORT $LN6@Copy_impl
	lea	eax, DWORD PTR [rbx-1]
	test	eax, -9					; fffffff7H
	je	SHORT $LN6@Copy_impl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T24[rbp-256], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4240 :             return;

	jmp	$LN710@Copy_impl
$LN6@Copy_impl:

; 1985 :         switch (_Status.type()) {

	lea	r14, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	lea	r9, OFFSET FLAT:__ImageBase
	cmp	ebx, 10
	ja	SHORT $LN118@Copy_impl
	movsxd	rax, ebx
	mov	ecx, DWORD PTR $LN697@Copy_impl[r9+rax*4]
	add	rcx, r9
	jmp	rcx
$LN118@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdi, r12

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r12+24], 8
	jb	SHORT $LN168@Copy_impl

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdi, QWORD PTR [r12]
$LN168@Copy_impl:

; 4107 :         return _Mypair._Myval2._Myptr();

	lea	rdx, QWORD PTR [rsi+32]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdx+24], 8
	jb	SHORT $LN177@Copy_impl

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN177@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3391 :         auto _Last_error = __std_fs_get_file_id(&_Left_id, _Lhs);

	lea	rcx, QWORD PTR _Left_id$26[rbp-256]
	call	__std_fs_get_file_id

; 3392 :         if (_Last_error != __std_win_error::_Success) {

	test	eax, eax
	je	SHORT $LN182@Copy_impl
$LN702@Copy_impl:

; 4245 :                 _Ec = _STD make_error_code(errc::file_exists);
; 4246 :                 return;
; 4247 :             }
; 4248 : 
; 4249 :             if (_Ec) {

	mov	DWORD PTR $T12[rsp], eax
	mov	QWORD PTR $T12[rsp+8], r14
	movups	xmm0, XMMWORD PTR $T12[rsp]
	movups	XMMWORD PTR [r15], xmm0
	jmp	SHORT $LN8@Copy_impl
$LN182@Copy_impl:

; 3396 :         _Last_error = __std_fs_get_file_id(&_Right_id, _Rhs);

	mov	rdx, rdi
	lea	rcx, QWORD PTR _Right_id$27[rbp-256]
	call	__std_fs_get_file_id

; 3397 :         if (_Last_error != __std_win_error::_Success) {

	test	eax, eax
	jne	SHORT $LN702@Copy_impl

; 3398 :             return {_Last_error, false};
; 3399 :         }
; 3400 : 
; 3401 :         return {__std_win_error::_Success, _CSTD memcmp(&_Left_id, &_Right_id, sizeof(__std_fs_file_id)) == 0};

	mov	rax, QWORD PTR _Left_id$26[rbp-256]
	sub	rax, QWORD PTR _Right_id$27[rbp-256]
	jne	SHORT $LN696@Copy_impl
	mov	rax, QWORD PTR _Left_id$26[rbp-248]
	sub	rax, QWORD PTR _Right_id$27[rbp-248]
	jne	SHORT $LN696@Copy_impl
	mov	rax, QWORD PTR _Left_id$26[rbp-240]
	sub	rax, QWORD PTR _Right_id$27[rbp-240]
$LN696@Copy_impl:
	test	rax, rax
	sete	al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	xor	ecx, ecx
	mov	DWORD PTR $T12[rsp], ecx
	mov	QWORD PTR $T12[rsp+8], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3417 :         _Ec                = _Make_ec(_Result.first);

	movups	xmm0, XMMWORD PTR $T12[rsp]
	movups	XMMWORD PTR [r15], xmm0

; 4241 :         }
; 4242 : 
; 4243 :         if (_STD filesystem::exists(_Tstat._Status)) {
; 4244 :             if (_STD filesystem::equivalent(_From, _To, _Ec)) { // report an error if equivalent(from, to) is true

	test	al, al
	jne	SHORT $LN714@Copy_impl
$LN8@Copy_impl:

; 4245 :                 _Ec = _STD make_error_code(errc::file_exists);
; 4246 :                 return;
; 4247 :             }
; 4248 : 
; 4249 :             if (_Ec) {

	cmp	DWORD PTR [r15], 0
	jne	$LN623@Copy_impl
	lea	r9, OFFSET FLAT:__ImageBase
$LN9@Copy_impl:

; 2025 :         switch (_Status.type()) {

	mov	rax, QWORD PTR _Fstat$[rbp-256]
	cmp	eax, 10
	ja	SHORT $LN704@Copy_impl
	movsxd	rcx, eax
	mov	edx, DWORD PTR $LN695@Copy_impl[r9+rcx*4]
	add	rdx, r9
	jmp	rdx
$LN137@Copy_impl:

; 4250 :                 return;
; 4251 :             }
; 4252 :         }
; 4253 : 
; 4254 :         const bool _Fstat_is_other =

	cmp	eax, 10
	je	SHORT $LN36@Copy_impl
$LN704@Copy_impl:
	mov	r8b, 1
	jmp	SHORT $LN37@Copy_impl
$LN36@Copy_impl:
	xor	r8b, r8b
$LN37@Copy_impl:

; 2025 :         switch (_Status.type()) {

	cmp	ebx, 10
	ja	SHORT $LN706@Copy_impl
	movsxd	rcx, ebx
	mov	edx, DWORD PTR $LN694@Copy_impl[r9+rcx*4]
	add	rdx, r9
	jmp	rdx
$LN153@Copy_impl:

; 4255 :             _STD filesystem::is_other(_Fstat._Status) && _Fstat._Status.type() != file_type::junction;
; 4256 :         const bool _Tstat_is_other =

	cmp	ebx, 10
	je	SHORT $LN38@Copy_impl
$LN706@Copy_impl:
	mov	cl, 1
	jmp	SHORT $LN39@Copy_impl
$LN38@Copy_impl:
	xor	cl, cl
$LN39@Copy_impl:

; 4257 :             _STD filesystem::is_other(_Tstat._Status) && _Tstat._Status.type() != file_type::junction;
; 4258 :         if (_Fstat_is_other || _Tstat_is_other) {

	test	r8b, r8b
	jne	$LN11@Copy_impl
	test	cl, cl
	jne	$LN11@Copy_impl

; 2015 :         return _Status.type() == file_type::directory;

	cmp	eax, 3
	sete	dil

; 4261 :             return;
; 4262 :         }
; 4263 : 
; 4264 :         if (_STD filesystem::is_directory(_Fstat._Status) && _STD filesystem::is_regular_file(_Tstat._Status)) {

	jne	SHORT $LN12@Copy_impl
	cmp	ebx, 2
	jne	SHORT $LN19@Copy_impl
$LN714@Copy_impl:

; 4373 :     }

	mov	DWORD PTR $T23[rbp-256], 17
	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAAEBV_Generic_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_Generic_error_category>'::`2'::_Static
	mov	QWORD PTR $T25[rbp-248], rax
	movups	xmm0, XMMWORD PTR $T25[rbp-256]
	jmp	$LN701@Copy_impl
$LN12@Copy_impl:

; 4265 :             // report an error if is_directory(f) && is_regular_file(t) is true
; 4266 :             _Ec = _STD make_error_code(errc::file_exists);
; 4267 :             return;
; 4268 :         }
; 4269 : 
; 4270 :         if (_Fstat._Status.type() == file_type::junction) {

	cmp	eax, 10
	jne	SHORT $LN15@Copy_impl

; 1902 :     _BITMASK_OPS(_EXPORT_STD, copy_options)

	bt	r13d, 9

; 4271 :             if ((_Options & copy_options::skip_symlinks) != copy_options::none) {

	jb	$LN623@Copy_impl

; 1985 :         switch (_Status.type()) {

	cmp	ebx, eax
	ja	SHORT $LN19@Copy_impl
	movsxd	rax, ebx
	mov	ecx, DWORD PTR $LN693@Copy_impl[r9+rax*4]
	add	rcx, r9
	jmp	rcx
$LN677@Copy_impl:

; 4278 :                 _Ec = _Make_ec(_Copy_junction(_From, _To));

	lea	rcx, QWORD PTR [rsi+32]
	mov	rdx, r12
	call	?_Copy_junction@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z ; std::filesystem::_Copy_junction
	mov	DWORD PTR $T9[rsp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	QWORD PTR $T9[rsp+8], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4278 :                 _Ec = _Make_ec(_Copy_junction(_From, _To));

	movups	xmm0, XMMWORD PTR $T9[rsp]
	movups	XMMWORD PTR [r15], xmm0
$LN19@Copy_impl:

; 4325 :         }
; 4326 : 
; 4327 :         // The following condition modified by LWG-3057:
; 4328 :         if (_STD filesystem::is_directory(_Fstat._Status)) {

	test	dil, dil
	je	$LN623@Copy_impl

; 1902 :     _BITMASK_OPS(_EXPORT_STD, copy_options)

	bt	r13d, 13

; 4329 :             if ((_Options & copy_options::create_symlinks) != copy_options::none) {

	jae	$LN25@Copy_impl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T7[rsp], 21
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4331 :                 return;

	jmp	SHORT $LN712@Copy_impl
$LN15@Copy_impl:

; 4279 :             }
; 4280 :         }
; 4281 : 
; 4282 :         if (_STD filesystem::is_symlink(_Fstat._Status)) {

	cmp	eax, 4
	jne	SHORT $LN16@Copy_impl

; 1902 :     _BITMASK_OPS(_EXPORT_STD, copy_options)

	bt	r13d, 9

; 4283 :             if ((_Options & copy_options::skip_symlinks) != copy_options::none) {

	jb	$LN623@Copy_impl

; 1985 :         switch (_Status.type()) {

	cmp	ebx, 10
	ja	SHORT $LN18@Copy_impl
	movsxd	rax, ebx
	mov	ecx, DWORD PTR $LN692@Copy_impl[r9+rax*4]
	add	rcx, r9
	jmp	rcx
$LN678@Copy_impl:

; 4284 :                 return;
; 4285 :             }
; 4286 : 
; 4287 :             // _Options includes copy_options::copy_symlinks,
; 4288 :             // since _Fstat is only allowed to be a symbolic link when either skip_symlinks or copy_symlinks
; 4289 :             if (!_STD filesystem::exists(_Tstat._Status)) {
; 4290 :                 _STD filesystem::copy_symlink(_From, _To, _Ec);

	lea	rcx, QWORD PTR [rsi+32]

; 3346 :         _Ec = _Make_ec(_Copy_symlink(_Symlink, _New_symlink));

	mov	rdx, r12
	call	?_Copy_symlink@filesystem@std@@YA?AW4__std_win_error@@AEBVpath@12@0@Z ; std::filesystem::_Copy_symlink
	mov	DWORD PTR $T6[rsp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	QWORD PTR $T6[rsp+8], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3346 :         _Ec = _Make_ec(_Copy_symlink(_Symlink, _New_symlink));

	movups	xmm0, XMMWORD PTR $T6[rsp]

; 4291 :                 return;

	jmp	$LN701@Copy_impl
$LN18@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T8[rsp], 130			; 00000082H
$LN712@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4373 :     }

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAAEBV_Generic_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_Generic_error_category>'::`2'::_Static
	mov	QWORD PTR $T8[rsp+8], rax
	movups	xmm0, XMMWORD PTR $T8[rsp]
	jmp	$LN701@Copy_impl
$LN16@Copy_impl:

; 4292 :             }
; 4293 : 
; 4294 :             // otherwise report an error
; 4295 :             _Ec = _STD make_error_code(errc::operation_not_supported);
; 4296 :             return;
; 4297 :         }
; 4298 : 
; 4299 :         if (_STD filesystem::is_regular_file(_Fstat._Status)) {

	cmp	eax, 2
	jne	$LN19@Copy_impl

; 1902 :     _BITMASK_OPS(_EXPORT_STD, copy_options)

	bt	r13d, 12

; 4300 :             if ((_Options & copy_options::directories_only) != copy_options::none) {

	jb	$LN623@Copy_impl

; 1902 :     _BITMASK_OPS(_EXPORT_STD, copy_options)

	lea	rdi, QWORD PTR [rsi+32]
	bt	r13d, 13

; 4301 :                 return;
; 4302 :             }
; 4303 : 
; 4304 :             if ((_Options & copy_options::create_symlinks) != copy_options::none) {

	jae	$LN21@Copy_impl

; 3082 :         unique_ptr<wchar_t[]> _Cleaned_link(::new (nothrow) wchar_t[_To_str.size() + 1]);

	lea	r14, QWORD PTR [rdi+16]
	mov	rcx, QWORD PTR [r14]
	inc	rcx
	mov	eax, 2
	mul	rcx
	mov	rsi, -1
	cmovo	rax, rsi
	lea	rdx, OFFSET FLAT:?nothrow@std@@3Unothrow_t@1@B ; std::nothrow
	mov	rcx, rax
	call	??_U@YAPEAX_KAEBUnothrow_t@std@@@Z	; operator new[]
	mov	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	test	rax, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3083 :         if (!_Cleaned_link) {

	jne	SHORT $LN313@Copy_impl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T4[rsp], 12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4364 :                         if (_Ec) {

	jmp	SHORT $LN712@Copy_impl
$LN313@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdi+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN339@Copy_impl

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdi, QWORD PTR [rdi]
$LN339@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3088 :         const auto _Last  = _First + _To_str.size();

	mov	rax, QWORD PTR [r14]
	lea	rdx, QWORD PTR [rdi+rax*2]

; 3089 :         auto _Next        = _Find_root_name_end(_First, _Last);

	mov	rcx, rdi
	call	?_Find_root_name_end@filesystem@std@@YAPEB_WQEB_W0@Z ; std::filesystem::_Find_root_name_end
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4107 :         return _Mypair._Myval2._Myptr();

	mov	rdx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3841 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

	mov	r8d, 92					; 0000005cH
	cmp	rdi, rax
	je	SHORT $LL307@Copy_impl
	npad	3
$LL645@Copy_impl:

; 3842 :         if (_Pred(*_UFirst)) {

	movzx	ecx, WORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, r8w
	je	SHORT $LN686@Copy_impl
	cmp	cx, 47					; 0000002fH
	jne	SHORT $LN649@Copy_impl
$LN686@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3843 :             *_UDest = _Val;

	mov	ecx, r8d
$LN649@Copy_impl:

; 3841 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

	mov	WORD PTR [rdx], cx
	add	rdx, 2
	add	rdi, 2
	cmp	rdi, rax
	jne	SHORT $LL645@Copy_impl
$LL307@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3092 :             const wchar_t _Ch = *_Next;

	movzx	ecx, WORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, r8w
	je	SHORT $LN685@Copy_impl
	cmp	cx, 47					; 0000002fH
	je	SHORT $LN685@Copy_impl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3099 :                 *_Dest = _Ch;

	mov	WORD PTR [rdx], cx

; 3100 :                 if (_Ch == L'\0') {

	test	cx, cx
	je	SHORT $LN633@Copy_impl

; 3101 :                     break;
; 3102 :                 }
; 3103 : 
; 3104 :                 ++_Next;

	add	rax, 2

; 3107 :             ++_Dest;

	add	rdx, 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3845 :             *_UDest = *_UFirst;

	jmp	SHORT $LL307@Copy_impl
$LN685@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3094 :                 *_Dest = L'\\';

	mov	WORD PTR [rdx], r8w
	npad	9
$LL312@Copy_impl:

; 3095 :                 do {
; 3096 :                     ++_Next;

	add	rax, 2

; 3097 :                 } while (_Is_slash(*_Next));

	movzx	ecx, WORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, r8w
	je	SHORT $LL312@Copy_impl
	cmp	cx, 47					; 0000002fH
	je	SHORT $LL312@Copy_impl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3107 :             ++_Dest;

	add	rdx, 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3845 :             *_UDest = *_UFirst;

	jmp	SHORT $LL307@Copy_impl
$LN633@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3110 :         return _Cleaned_link;

	test	BYTE PTR $T10[rsp], 1
	je	SHORT $LN683@Copy_impl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3194 :         delete[] _Ptr;

	mov	rcx, rbx
	call	??_V@YAXPEAX@Z				; operator delete[]
$LN683@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [r12+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN378@Copy_impl

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r12, QWORD PTR [r12]
$LN378@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3173 :             _Ec = _Make_ec(__std_fs_create_symbolic_link(_New_symlink.c_str(), _Cleaned.get()));

	mov	rdx, rbx
	mov	rcx, r12
	call	__std_fs_create_symbolic_link
	mov	DWORD PTR $T5[rsp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR $T5[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3173 :             _Ec = _Make_ec(__std_fs_create_symbolic_link(_New_symlink.c_str(), _Cleaned.get()));

	movups	xmm0, XMMWORD PTR $T5[rsp]
	movups	XMMWORD PTR [r15], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3194 :         delete[] _Ptr;

	mov	rcx, rbx
	call	??_V@YAXPEAX@Z				; operator delete[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4307 :                 return;

	jmp	$LN623@Copy_impl
$LN21@Copy_impl:

; 1902 :     _BITMASK_OPS(_EXPORT_STD, copy_options)

	bt	r13d, 14

; 4308 :             }
; 4309 : 
; 4310 :             if ((_Options & copy_options::create_hard_links) != copy_options::none) {

	jae	SHORT $LN22@Copy_impl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdi+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN431@Copy_impl

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdi, QWORD PTR [rdi]
$LN431@Copy_impl:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [r12+24], 8

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN440@Copy_impl

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r12, QWORD PTR [r12]
$LN440@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3151 :         _Ec = _Make_ec(__std_fs_create_hard_link(_New_hard_link.c_str(), _To.c_str()));

	mov	rdx, rdi
	mov	rcx, r12
	call	__std_fs_create_hard_link
	mov	DWORD PTR $T3[rsp], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	QWORD PTR $T3[rsp+8], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4373 :     }

	movups	xmm0, XMMWORD PTR $T8[rsp]
	jmp	$LN701@Copy_impl
$LN22@Copy_impl:

; 4311 :                 // Otherwise, if (condition) then create a hard link to the source file
; 4312 :                 _STD filesystem::create_hard_link(_From, _To, _Ec);
; 4313 :                 return;
; 4314 :             }
; 4315 : 
; 4316 :             if (_STD filesystem::is_directory(_Tstat._Status)) {

	mov	rcx, rdi
	cmp	ebx, 3
	jne	SHORT $LN23@Copy_impl

; 4317 :                 // Otherwise, if is_directory(t), then copy_file(from, to / from.filename(), options)
; 4318 :                 _STD filesystem::copy_file(_From, _To / _From.path().filename(), _Options, _Ec);

	lea	rdx, QWORD PTR $T29[rbp-256]
	call	?filename@path@filesystem@std@@QEBA?AV123@XZ ; std::filesystem::path::filename
	mov	rbx, rax

; 1365 :             path _Tmp = _Left;

	mov	rdx, r12
	lea	rcx, QWORD PTR $T14[rsp]
	call	??0path@filesystem@std@@QEAA@AEBV012@@Z	; std::filesystem::path::path

; 1367 :             return _Tmp;

	mov	DWORD PTR $T11[rsp], 32			; 00000020H

; 1366 :             _Tmp /= _Right;

	mov	rdx, rbx
	lea	rcx, QWORD PTR $T14[rsp]
	call	??_0path@filesystem@std@@QEAAAEAV012@AEBV012@@Z ; std::filesystem::path::operator/=

; 4317 :                 // Otherwise, if is_directory(t), then copy_file(from, to / from.filename(), options)
; 4318 :                 _STD filesystem::copy_file(_From, _To / _From.path().filename(), _Options, _Ec);

	mov	r9, r15
	mov	r8d, r13d
	lea	rdx, QWORD PTR $T14[rsp]
	mov	rcx, rdi
	call	?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z ; std::filesystem::copy_file
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T14[rsp]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T29[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4319 :                 return;

	jmp	$LN623@Copy_impl
$LN23@Copy_impl:

; 4320 :             }
; 4321 : 
; 4322 :             // Otherwise, copy_file(_From, _To, _Options)
; 4323 :             _STD filesystem::copy_file(_From, _To, _Options, _Ec);

	mov	r9, r15
	mov	r8d, r13d
	mov	rdx, r12
	call	?copy_file@filesystem@std@@YA_NAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z ; std::filesystem::copy_file

; 4324 :             return;

	jmp	$LN623@Copy_impl
$LN25@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, r12

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r12+24], 8
	jb	SHORT $LN406@Copy_impl

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r12]
$LN406@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3767 :         const auto _Result = __std_fs_create_directory(_Path.c_str());

	call	__std_fs_create_directory
	shr	rax, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T18[rbp-256], eax
	mov	QWORD PTR $T18[rbp-248], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 3768 :         _Ec                = _Make_ec(_Result._Error);

	movups	xmm0, XMMWORD PTR $T18[rbp-256]
	movups	XMMWORD PTR [r15], xmm0

; 4332 :             }
; 4333 : 
; 4334 :             _STD filesystem::create_directory(_To, _From, _Ec);
; 4335 :             if (_Ec) {

	cmp	DWORD PTR [r15], 0
	jne	$LN623@Copy_impl

; 1902 :     _BITMASK_OPS(_EXPORT_STD, copy_options)

	mov	ebx, r13d
	and	ebx, 16
	mov	DWORD PTR tv2474[rsp], ebx

; 4336 :                 return;
; 4337 :             }
; 4338 : 
; 4339 :             // Note LWG-3057 uses directories_only as the flag, instead of an unspecified copy_options value:
; 4340 :             if ((_Options & copy_options::recursive) != copy_options::none
; 4341 :                 || (_Options & copy_options::directories_only) == copy_options::none) {

	jne	SHORT $LN28@Copy_impl

; 1902 :     _BITMASK_OPS(_EXPORT_STD, copy_options)

	bt	r13d, 12

; 4336 :                 return;
; 4337 :             }
; 4338 : 
; 4339 :             // Note LWG-3057 uses directories_only as the flag, instead of an unspecified copy_options value:
; 4340 :             if ((_Options & copy_options::recursive) != copy_options::none
; 4341 :                 || (_Options & copy_options::directories_only) == copy_options::none) {

	jb	$LN623@Copy_impl
$LN28@Copy_impl:
	xorps	xmm1, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1470 :     element_type* _Ptr{nullptr};

	movdqu	XMMWORD PTR _It$22[rbp-256], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4342 :                 for (directory_iterator _It(_From, _Ec);; _It.increment(_Ec)) {

	lea	rdx, QWORD PTR [rsi+32]

; 2633 :             _Ec = _Make_ec(_Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path));

	lea	rcx, QWORD PTR _It$22[rbp-256]
	call	??$_Initialize_dir_enum@U_Dir_enum_impl@filesystem@std@@@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@2@AEBVpath@12@W4directory_options@12@@Z ; std::filesystem::_Dir_enum_impl::_Initialize_dir_enum<std::filesystem::_Dir_enum_impl>
	mov	DWORD PTR $T19[rbp-256], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	QWORD PTR $T19[rbp-248], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2633 :             _Ec = _Make_ec(_Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path));

	movups	xmm0, XMMWORD PTR $T19[rbp-256]
	movups	XMMWORD PTR [r15], xmm0
$LN709@Copy_impl:

; 4343 :                     if (_Ec || _It._At_end()) {

	cmp	DWORD PTR [r15], 0
	jne	$LN690@Copy_impl
	mov	r10, 9223372036854775806		; 7ffffffffffffffeH
	mov	r13, QWORD PTR _It$22[rbp-256]
	test	r13, r13
	je	$LN690@Copy_impl

; 4344 :                         return;
; 4345 :                     }
; 4346 : 
; 4347 :                     // if ((options & copy_options::recursive) != copy_options::none ||
; 4348 :                     //      !is_directory(linkf ? symlink_status(x.path()) : status(x.path())))
; 4349 :                     //        copy(x.path(), to/x.path().filename(), options);
; 4350 :                     bool _Recurse = (_Options & copy_options::recursive) != copy_options::none;

	test	ebx, ebx
	setne	al

; 4351 :                     if (!_Recurse) {

	test	ebx, ebx
	jne	SHORT $LN31@Copy_impl

; 4352 :                         const auto _Child_status_result =
; 4353 :                             _It->_Get_any_status(_Flink ? _Symlink_status_stats_flags : _Status_stats_flags);

	mov	r8d, DWORD PTR tv2472[rsp]
	lea	rdx, QWORD PTR _Child_status_result$17[rbp-256]
	mov	rcx, r13
	call	?_Get_any_status@directory_entry@filesystem@std@@AEBA?AU_File_status_and_error@23@W4__std_fs_stats_flags@@@Z ; std::filesystem::directory_entry::_Get_any_status

; 4354 :                         if (_Child_status_result._Error != __std_win_error::_Success) {

	mov	eax, DWORD PTR _Child_status_result$17[rbp-248]
	test	eax, eax
	jne	$LN636@Copy_impl

; 4356 :                             return;
; 4357 :                         }
; 4358 : 
; 4359 :                         _Recurse = !_STD filesystem::is_directory(_Child_status_result._Status);

	cmp	DWORD PTR _Child_status_result$17[rbp-256], 3
	setne	al
	mov	r10, 9223372036854775806		; 7ffffffffffffffeH
$LN31@Copy_impl:

; 4360 :                     }
; 4361 : 
; 4362 :                     if (_Recurse) {

	test	al, al
	je	$LN2@Copy_impl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR [r13+32]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r13+56], 8
	jb	SHORT $LN472@Copy_impl

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r13+32]
$LN472@Copy_impl:

; 4041 :         return basic_string_view<_Elem, _Traits>{_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize};

	mov	rax, QWORD PTR [r13+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 497  :         const auto _Last     = _First + _Str.size();

	lea	rbx, QWORD PTR [rcx+rax*2]

; 498  :         const auto _Filename = _Find_filename(_First, _Last);

	mov	rsi, rbx

; 435  :         return _STD find_if_not(_Find_root_name_end(_First, _Last), _Last, _Is_slash);

	mov	rdx, rbx
	call	?_Find_root_name_end@filesystem@std@@YAPEB_WQEB_W0@Z ; std::filesystem::_Find_root_name_end
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rax, rbx
	je	SHORT $LN482@Copy_impl
	npad	8
$LL489@Copy_impl:

; 371  :         if (!_Pred(*_UFirst)) {

	movzx	ecx, WORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, 92					; 0000005cH
	je	SHORT $LN681@Copy_impl
	cmp	cx, 47					; 0000002fH
	jne	SHORT $LN689@Copy_impl
$LN681@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	add	rax, 2
	cmp	rax, rbx
	jne	SHORT $LL489@Copy_impl
$LN689@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 487  :         while (_Relative_path != _Last && !_Is_slash(_Last[-1])) {

	cmp	rax, rbx
	je	SHORT $LN482@Copy_impl
	npad	3
$LL481@Copy_impl:
	lea	rdx, QWORD PTR [rsi-2]
	movzx	ecx, WORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, 92					; 0000005cH
	je	SHORT $LN482@Copy_impl
	cmp	cx, 47					; 0000002fH
	je	SHORT $LN482@Copy_impl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 488  :             --_Last;

	mov	rsi, rdx

; 487  :         while (_Relative_path != _Last && !_Is_slash(_Last[-1])) {

	cmp	rax, rdx
	jne	SHORT $LL481@Copy_impl
$LN482@Copy_impl:

; 499  :         return wstring_view(_Filename, static_cast<size_t>(_Last - _Filename));

	sub	rbx, rsi
	sar	rbx, 1
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T13[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	edi, edi
	mov	QWORD PTR $T13[rsp+16], rdi

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T13[rsp+24], rdi

; 2620 :         if (_Count > max_size()) {

	cmp	rbx, r10
	ja	$LN637@Copy_impl

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T13[rsp+24], 7
	cmp	rbx, 8
	jae	SHORT $LN531@Copy_impl

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T13[rsp+16], rbx

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	add	rbx, rbx
	mov	r8, rbx
	mov	rdx, rsi
	lea	rcx, QWORD PTR $T13[rsp]
	call	memcpy

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	WORD PTR $T13[rsp+rbx], di

; 2638 :             } else { // _Strat == _Construct_strategy::_From_string
; 2639 : #ifdef _INSERT_STRING_ANNOTATION
; 2640 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2641 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2642 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2643 : #endif // !_INSERT_STRING_ANNOTATION
; 2644 :             }
; 2645 : 
; 2646 :             _Proxy._Release();
; 2647 :             return;

	jmp	SHORT $LN529@Copy_impl
$LN531@Copy_impl:

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	r14, rbx
	or	r14, 7
	cmp	r14, r10

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN542@Copy_impl

; 4716 :             return _Max;

	mov	r14, r10
	jmp	SHORT $LN541@Copy_impl
$LN542@Copy_impl:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	r14, 10
	mov	eax, 10
	cmovb	r14, rax
$LN541@Copy_impl:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	lea	rdx, QWORD PTR [r14+1]
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
	mov	rdi, rax

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T13[rsp], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T13[rsp+16], rbx

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T13[rsp+24], r14

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	add	rbx, rbx
	mov	r8, rbx
	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy

; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

	xor	ecx, ecx
	mov	WORD PTR [rbx+rdi], cx
	lea	r14, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
$LN529@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1109 :             return _Parse_filename(_Text);

	mov	ebx, DWORD PTR $T10[rsp]
	or	ebx, 14
	mov	DWORD PTR $T11[rsp], ebx

; 1365 :             path _Tmp = _Left;

	mov	rdx, r12
	lea	rcx, QWORD PTR $T21[rbp-256]
	call	??0path@filesystem@std@@QEAA@AEBV012@@Z	; std::filesystem::path::path

; 1367 :             return _Tmp;

	or	ebx, 16
	mov	DWORD PTR $T11[rsp], ebx

; 1366 :             _Tmp /= _Right;

	lea	rdx, QWORD PTR $T13[rsp]
	lea	rcx, QWORD PTR $T21[rbp-256]
	call	??_0path@filesystem@std@@QEAAAEAV012@AEBV012@@Z ; std::filesystem::path::operator/=

; 4363 :                         _Copy_impl(*_It, _To / _It->path().filename(), _Options, _Ec);

	mov	r9, r15
	mov	r8d, DWORD PTR _Options$GSCopy$1$[rsp]
	lea	rdx, QWORD PTR $T21[rbp-256]
	mov	rcx, r13
	call	?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z ; std::filesystem::_Copy_impl
	and	ebx, -17
	mov	DWORD PTR $T10[rsp], ebx
	mov	DWORD PTR $T11[rsp], ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T21[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T13[rsp]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4364 :                         if (_Ec) {

	cmp	DWORD PTR [r15], 0
	jne	SHORT $LN690@Copy_impl
	mov	ebx, DWORD PTR tv2474[rsp]
$LN2@Copy_impl:

; 2665 :             _Ec = _Make_ec(_Dir_enum_impl::_Advance_and_reset_if_no_more_files(_Impl));

	lea	rcx, QWORD PTR _It$22[rbp-256]
	call	?_Advance_and_reset_if_no_more_files@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@3@@Z ; std::filesystem::_Dir_enum_impl::_Advance_and_reset_if_no_more_files
	mov	DWORD PTR $T20[rbp-256], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	QWORD PTR $T20[rbp-248], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2665 :             _Ec = _Make_ec(_Dir_enum_impl::_Advance_and_reset_if_no_more_files(_Impl));

	movups	xmm0, XMMWORD PTR $T20[rbp-256]
	movups	XMMWORD PTR [r15], xmm0

; 4343 :                     if (_Ec || _It._At_end()) {

	jmp	$LN709@Copy_impl
$LN636@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T15[rbp-256], eax
	mov	QWORD PTR $T15[rbp-248], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4355 :                             _Ec = _Make_ec(_Child_status_result._Error);

	movups	xmm0, XMMWORD PTR $T15[rbp-256]
	movups	XMMWORD PTR [r15], xmm0
$LN690@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1402 :         if (_Rep) {

	mov	rcx, QWORD PTR _It$22[rbp-248]
	test	rcx, rcx
	je	SHORT $LN623@Copy_impl

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	rsi, -1
	mov	eax, esi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN623@Copy_impl

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR _It$22[rbp-248]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	lock xadd DWORD PTR [rbx+12], esi
	cmp	esi, 1
	jne	SHORT $LN623@Copy_impl

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR _It$22[rbp-248]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4365 :                             return;

	jmp	SHORT $LN623@Copy_impl
$LN11@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T16[rbp-256], 130		; 00000082H
	lea	rax, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_Generic_error_category@std@@@std@@YAAEBV_Generic_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_Generic_error_category>'::`2'::_Static
	mov	QWORD PTR $T16[rbp-248], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4260 :             _Ec = _STD make_error_code(errc::operation_not_supported);

	movups	xmm0, XMMWORD PTR $T16[rbp-256]
$LN701@Copy_impl:

; 4373 :     }

	movups	XMMWORD PTR [r15], xmm0
$LN623@Copy_impl:
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 376				; 00000178H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
$LN637@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2621 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN700@Copy_impl:
	npad	2
$LN697@Copy_impl:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4373 :     }

	DD	$LN9@Copy_impl
	DD	$LN9@Copy_impl
	DD	$LN118@Copy_impl
	DD	$LN118@Copy_impl
	DD	$LN118@Copy_impl
	DD	$LN118@Copy_impl
	DD	$LN118@Copy_impl
	DD	$LN118@Copy_impl
	DD	$LN118@Copy_impl
	DD	$LN118@Copy_impl
	DD	$LN118@Copy_impl
$LN695@Copy_impl:
	DD	$LN36@Copy_impl
	DD	$LN36@Copy_impl
	DD	$LN36@Copy_impl
	DD	$LN36@Copy_impl
	DD	$LN36@Copy_impl
	DD	$LN137@Copy_impl
	DD	$LN137@Copy_impl
	DD	$LN137@Copy_impl
	DD	$LN137@Copy_impl
	DD	$LN137@Copy_impl
	DD	$LN137@Copy_impl
$LN694@Copy_impl:
	DD	$LN38@Copy_impl
	DD	$LN38@Copy_impl
	DD	$LN38@Copy_impl
	DD	$LN38@Copy_impl
	DD	$LN38@Copy_impl
	DD	$LN153@Copy_impl
	DD	$LN153@Copy_impl
	DD	$LN153@Copy_impl
	DD	$LN153@Copy_impl
	DD	$LN153@Copy_impl
	DD	$LN153@Copy_impl
$LN693@Copy_impl:
	DD	$LN677@Copy_impl
	DD	$LN677@Copy_impl
	DD	$LN19@Copy_impl
	DD	$LN19@Copy_impl
	DD	$LN19@Copy_impl
	DD	$LN19@Copy_impl
	DD	$LN19@Copy_impl
	DD	$LN19@Copy_impl
	DD	$LN19@Copy_impl
	DD	$LN19@Copy_impl
	DD	$LN19@Copy_impl
$LN692@Copy_impl:
	DD	$LN678@Copy_impl
	DD	$LN678@Copy_impl
	DD	$LN18@Copy_impl
	DD	$LN18@Copy_impl
	DD	$LN18@Copy_impl
	DD	$LN18@Copy_impl
	DD	$LN18@Copy_impl
	DD	$LN18@Copy_impl
	DD	$LN18@Copy_impl
	DD	$LN18@Copy_impl
	DD	$LN18@Copy_impl
?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z ENDP ; std::filesystem::_Copy_impl
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
$T10 = 48
$T11 = 56
$T12 = 64
$T13 = 80
$T14 = 80
tv2472 = 112
_Options$GSCopy$1$ = 116
tv2474 = 120
$T15 = 128
$T16 = 128
_Fstat$ = 144
_Child_status_result$17 = 160
$T18 = 176
$T19 = 192
$T20 = 208
$T21 = 224
_It$22 = 256
$T23 = 256
$T24 = 256
$T25 = 256
_Left_id$26 = 272
_Right_id$27 = 296
_Stats$28 = 320
$T29 = 320
__$ArrayPad$ = 352
_From$ = 448
_To$ = 456
_Options$ = 464
_Ec$ = 472
?dtor$0@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA PROC ; `std::filesystem::_Copy_impl'::`1'::dtor$0
	lea	rcx, QWORD PTR $T29[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$0@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA ENDP ; `std::filesystem::_Copy_impl'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
$T10 = 48
$T11 = 56
$T12 = 64
$T13 = 80
$T14 = 80
tv2472 = 112
_Options$GSCopy$1$ = 116
tv2474 = 120
$T15 = 128
$T16 = 128
_Fstat$ = 144
_Child_status_result$17 = 160
$T18 = 176
$T19 = 192
$T20 = 208
$T21 = 224
_It$22 = 256
$T23 = 256
$T24 = 256
$T25 = 256
_Left_id$26 = 272
_Right_id$27 = 296
_Stats$28 = 320
$T29 = 320
__$ArrayPad$ = 352
_From$ = 448
_To$ = 456
_Options$ = 464
_Ec$ = 472
?dtor$20@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA PROC ; `std::filesystem::_Copy_impl'::`1'::dtor$20
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T11[rbp]
	and	eax, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN580@dtor$20
	and	DWORD PTR $T11[rbp], -33		; ffffffffffffffdfH
	lea	rcx, QWORD PTR $T14[rbp]
	call	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
$LN580@dtor$20:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$20@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA ENDP ; `std::filesystem::_Copy_impl'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
$T10 = 48
$T11 = 56
$T12 = 64
$T13 = 80
$T14 = 80
tv2472 = 112
_Options$GSCopy$1$ = 116
tv2474 = 120
$T15 = 128
$T16 = 128
_Fstat$ = 144
_Child_status_result$17 = 160
$T18 = 176
$T19 = 192
$T20 = 208
$T21 = 224
_It$22 = 256
$T23 = 256
$T24 = 256
$T25 = 256
_Left_id$26 = 272
_Right_id$27 = 296
_Stats$28 = 320
$T29 = 320
__$ArrayPad$ = 352
_From$ = 448
_To$ = 456
_Options$ = 464
_Ec$ = 472
?dtor$8@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA PROC ; `std::filesystem::_Copy_impl'::`1'::dtor$8
	lea	rcx, QWORD PTR _It$22[rdx]
	jmp	??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ ; std::shared_ptr<std::filesystem::_Dir_enum_impl>::~shared_ptr<std::filesystem::_Dir_enum_impl>
?dtor$8@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA ENDP ; `std::filesystem::_Copy_impl'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
$T10 = 48
$T11 = 56
$T12 = 64
$T13 = 80
$T14 = 80
tv2472 = 112
_Options$GSCopy$1$ = 116
tv2474 = 120
$T15 = 128
$T16 = 128
_Fstat$ = 144
_Child_status_result$17 = 160
$T18 = 176
$T19 = 192
$T20 = 208
$T21 = 224
_It$22 = 256
$T23 = 256
$T24 = 256
$T25 = 256
_Left_id$26 = 272
_Right_id$27 = 296
_Stats$28 = 320
$T29 = 320
__$ArrayPad$ = 352
_From$ = 448
_To$ = 456
_Options$ = 464
_Ec$ = 472
?dtor$2@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA PROC ; `std::filesystem::_Copy_impl'::`1'::dtor$2
	lea	rcx, QWORD PTR _It$22[rdx]
	jmp	??1directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::directory_iterator::~directory_iterator
?dtor$2@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA ENDP ; `std::filesystem::_Copy_impl'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
$T10 = 48
$T11 = 56
$T12 = 64
$T13 = 80
$T14 = 80
tv2472 = 112
_Options$GSCopy$1$ = 116
tv2474 = 120
$T15 = 128
$T16 = 128
_Fstat$ = 144
_Child_status_result$17 = 160
$T18 = 176
$T19 = 192
$T20 = 208
$T21 = 224
_It$22 = 256
$T23 = 256
$T24 = 256
$T25 = 256
_Left_id$26 = 272
_Right_id$27 = 296
_Stats$28 = 320
$T29 = 320
__$ArrayPad$ = 352
_From$ = 448
_To$ = 456
_Options$ = 464
_Ec$ = 472
?dtor$3@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA PROC ; `std::filesystem::_Copy_impl'::`1'::dtor$3
	lea	rcx, QWORD PTR $T13[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$3@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA ENDP ; `std::filesystem::_Copy_impl'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
$T5 = 32
$T6 = 32
$T7 = 32
$T8 = 32
$T9 = 32
$T10 = 48
$T11 = 56
$T12 = 64
$T13 = 80
$T14 = 80
tv2472 = 112
_Options$GSCopy$1$ = 116
tv2474 = 120
$T15 = 128
$T16 = 128
_Fstat$ = 144
_Child_status_result$17 = 160
$T18 = 176
$T19 = 192
$T20 = 208
$T21 = 224
_It$22 = 256
$T23 = 256
$T24 = 256
$T25 = 256
_Left_id$26 = 272
_Right_id$27 = 296
_Stats$28 = 320
$T29 = 320
__$ArrayPad$ = 352
_From$ = 448
_To$ = 456
_Options$ = 464
_Ec$ = 472
?dtor$15@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA PROC ; `std::filesystem::_Copy_impl'::`1'::dtor$15
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T11[rbp]
	and	eax, 16
	test	eax, eax
	je	SHORT $LN562@dtor$15
	and	DWORD PTR $T11[rbp], -17
	lea	rcx, QWORD PTR $T21[rbp]
	call	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
$LN562@dtor$15:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$15@?0??_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z@4HA ENDP ; `std::filesystem::_Copy_impl'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z
_TEXT	SEGMENT
$T1 = 32
_From_dir$ = 48
__$ArrayPad$ = 112
_From$ = 192
_To$ = 200
_Options$ = 208
_Ec$ = 216
?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z PROC ; std::filesystem::copy, COMDAT

; 4375 :     _EXPORT_STD inline void copy(const path& _From, const path& _To, const copy_options _Options, error_code& _Ec) {

$LN86:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 136				; 00000088H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, r9
	mov	ebp, r8d
	mov	rsi, rdx
	xorps	xmm0, xmm0

; 2096 :         directory_entry(const filesystem::path& _Path_arg, error_code& _Ec) : _Cached_data{}, _Path(_Path_arg) {

	movups	XMMWORD PTR _From_dir$[rsp], xmm0
	movups	XMMWORD PTR _From_dir$[rsp+16], xmm0
	mov	rdx, rcx
	lea	rcx, QWORD PTR _From_dir$[rsp+32]
	call	??0path@filesystem@std@@QEAA@AEBV012@@Z	; std::filesystem::path::path
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 189  :         _Myval = 0;

	xor	r14d, r14d
	mov	DWORD PTR [rbx], r14d

; 190  :         _Mycat = &_STD system_category();

	lea	r15, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR [rbx+8], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR _From_dir$[rsp+32]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR _From_dir$[rsp+56], 8
	cmovae	rcx, QWORD PTR _From_dir$[rsp+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2463 :             const auto _Error = __std_fs_get_stats(_Path.c_str(), &_Stats, __std_fs_stats_flags::_All_data);

	mov	edi, 62					; 0000003eH
	mov	r9d, -1					; ffffffffH
	mov	r8d, edi
	lea	rdx, QWORD PTR _From_dir$[rsp]
	call	__std_fs_get_stats
	mov	ecx, eax

; 2464 :             if (_Error == __std_win_error::_Success) {

	test	eax, eax
	jne	SHORT $LN16@copy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	test	DWORD PTR _From_dir$[rsp+16], 1024	; 00000400H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2465 :                 if (_Bitmask_includes_any(_Stats._Attributes, __std_fs_file_attr::_Reparse_point)) {

	mov	eax, 6
	cmovne	edi, eax
	mov	DWORD PTR _From_dir$[rsp+28], edi

; 2466 :                     _Stats._Available = __std_fs_stats_flags::_Attributes | __std_fs_stats_flags::_Reparse_tag;
; 2467 :                 } else {
; 2468 :                     _Stats._Available = __std_fs_stats_flags::_All_data;
; 2469 :                 }
; 2470 :             } else {

	jmp	SHORT $LN11@copy
$LN16@copy:

; 2471 :                 _Stats._Available = __std_fs_stats_flags::_None;

	mov	DWORD PTR _From_dir$[rsp+28], r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 52   :     switch (_Error) {

	sub	eax, 2
	je	SHORT $LN11@copy
	sub	eax, 1
	je	SHORT $LN11@copy
	sub	eax, 50					; 00000032H
	je	SHORT $LN11@copy
	cmp	eax, 70					; 00000046H
	je	SHORT $LN11@copy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T1[rsp], ecx
	mov	QWORD PTR $T1[rsp+8], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2143 :                 _Ec = _Make_ec(_Error);

	movups	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rbx], xmm0
$LN11@copy:

; 2098 :             if (_Ec) {

	cmp	DWORD PTR [rbx], r14d
	je	SHORT $LN54@copy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR _From_dir$[rsp+32]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR _From_dir$[rsp+56], 8
	cmovae	rax, QWORD PTR _From_dir$[rsp+32]

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR _From_dir$[rsp+48], r14
	mov	WORD PTR [rax], r14w
$LN54@copy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4377 :         if (_Ec) { // report an error if exists(f) is false

	cmp	DWORD PTR [rbx], 0
	jne	SHORT $LN5@copy

; 4378 :             return;
; 4379 :         }
; 4380 : 
; 4381 :         _Copy_impl(_From_dir, _To, _Options, _Ec);

	mov	r9, rbx
	mov	r8d, ebp
	mov	rdx, rsi
	lea	rcx, QWORD PTR _From_dir$[rsp]
	call	?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z ; std::filesystem::_Copy_impl
	npad	1
$LN5@copy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _From_dir$[rsp+32]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4382 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 136				; 00000088H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z ENDP ; std::filesystem::copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_From_dir$ = 48
__$ArrayPad$ = 112
_From$ = 192
_To$ = 200
_Options$ = 208
_Ec$ = 216
?dtor$0@?0??copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z@4HA PROC ; `std::filesystem::copy'::`1'::dtor$0
	lea	rcx, QWORD PTR _From_dir$[rdx]
	jmp	??1directory_entry@filesystem@std@@QEAA@XZ ; std::filesystem::directory_entry::~directory_entry
?dtor$0@?0??copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@AEAVerror_code@2@@Z@4HA ENDP ; `std::filesystem::copy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z
_TEXT	SEGMENT
$T1 = 32
_Ec$ = 32
_From_dir$2 = 48
__$ArrayPad$ = 112
_From$ = 192
_To$ = 200
_Options$ = 208
?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z PROC ; std::filesystem::copy, COMDAT

; 4384 :     _EXPORT_STD inline void copy(const path& _From, const path& _To, const copy_options _Options) {

$LN97:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	mov	rbp, rsp
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-128], rax
	mov	r14d, r8d
	mov	rdi, rdx
	mov	rsi, rcx
	xor	r15d, r15d
	mov	DWORD PTR _Ec$[rbp-124], r15d
	xorps	xmm0, xmm0

; 2096 :         directory_entry(const filesystem::path& _Path_arg, error_code& _Ec) : _Cached_data{}, _Path(_Path_arg) {

	movups	XMMWORD PTR _From_dir$2[rbp-128], xmm0
	movups	XMMWORD PTR _From_dir$2[rbp-112], xmm0
	mov	rdx, rcx
	lea	rcx, QWORD PTR _From_dir$2[rbp-96]
	call	??0path@filesystem@std@@QEAA@AEBV012@@Z	; std::filesystem::path::path
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 189  :         _Myval = 0;

	mov	DWORD PTR _Ec$[rbp-128], r15d

; 190  :         _Mycat = &_STD system_category();

	lea	r12, OFFSET FLAT:?_Static@?1???$_Immortalize_memcpy_image@V_System_error_category@std@@@std@@YAAEBV_System_error_category@1@XZ@4V21@B ; `std::_Immortalize_memcpy_image<std::_System_error_category>'::`2'::_Static
	mov	QWORD PTR _Ec$[rbp-120], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR _From_dir$2[rbp-96]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR _From_dir$2[rbp-72], 8
	cmovae	rcx, QWORD PTR _From_dir$2[rbp-96]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2463 :             const auto _Error = __std_fs_get_stats(_Path.c_str(), &_Stats, __std_fs_stats_flags::_All_data);

	mov	ebx, 62					; 0000003eH
	mov	r9d, -1					; ffffffffH
	mov	r8d, ebx
	lea	rdx, QWORD PTR _From_dir$2[rbp-128]
	call	__std_fs_get_stats
	mov	ecx, eax

; 2464 :             if (_Error == __std_win_error::_Success) {

	test	eax, eax
	jne	SHORT $LN22@copy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 82   : _BITMASK_OPS(_EMPTY_ARGUMENT, __std_fs_file_attr)

	test	DWORD PTR _From_dir$2[rbp-112], 1024	; 00000400H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2465 :                 if (_Bitmask_includes_any(_Stats._Attributes, __std_fs_file_attr::_Reparse_point)) {

	mov	eax, 6
	cmovne	ebx, eax
	mov	DWORD PTR _From_dir$2[rbp-100], ebx

; 2466 :                     _Stats._Available = __std_fs_stats_flags::_Attributes | __std_fs_stats_flags::_Reparse_tag;
; 2467 :                 } else {
; 2468 :                     _Stats._Available = __std_fs_stats_flags::_All_data;
; 2469 :                 }
; 2470 :             } else {

	jmp	SHORT $LN17@copy
$LN22@copy:

; 2471 :                 _Stats._Available = __std_fs_stats_flags::_None;

	mov	DWORD PTR _From_dir$2[rbp-100], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 52   :     switch (_Error) {

	sub	eax, 2
	je	SHORT $LN17@copy
	sub	eax, 1
	je	SHORT $LN17@copy
	sub	eax, 50					; 00000032H
	je	SHORT $LN17@copy
	cmp	eax, 70					; 00000046H
	je	SHORT $LN17@copy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 168  :     error_code(int _Val, const error_category& _Cat) noexcept : _Myval(_Val), _Mycat(&_Cat) {}

	mov	DWORD PTR $T1[rbp-128], ecx
	mov	QWORD PTR $T1[rbp-120], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2143 :                 _Ec = _Make_ec(_Error);

	movaps	xmm0, XMMWORD PTR $T1[rbp-128]
	movdqa	XMMWORD PTR _Ec$[rbp-128], xmm0
$LN17@copy:

; 2098 :             if (_Ec) {

	mov	eax, DWORD PTR _Ec$[rbp-128]
	test	eax, eax
	je	SHORT $LN60@copy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR _From_dir$2[rbp-96]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR _From_dir$2[rbp-72], 8
	cmovae	rax, QWORD PTR _From_dir$2[rbp-96]

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR _From_dir$2[rbp-80], r15
	mov	WORD PTR [rax], r15w
	mov	eax, DWORD PTR _Ec$[rbp-128]
$LN60@copy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4377 :         if (_Ec) { // report an error if exists(f) is false

	test	eax, eax
	jne	SHORT $LN93@copy

; 4378 :             return;
; 4379 :         }
; 4380 : 
; 4381 :         _Copy_impl(_From_dir, _To, _Options, _Ec);

	lea	r9, QWORD PTR _Ec$[rbp-128]
	mov	r8d, r14d
	mov	rdx, rdi
	lea	rcx, QWORD PTR _From_dir$2[rbp-128]
	call	?_Copy_impl@filesystem@std@@YAXAEBVdirectory_entry@12@AEBVpath@12@W4copy_options@12@AEAVerror_code@2@@Z ; std::filesystem::_Copy_impl
	npad	1
$LN93@copy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\system_error

; 208  :         return value() != 0;

	lea	rcx, QWORD PTR _From_dir$2[rbp-96]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
	cmp	DWORD PTR _Ec$[rbp-128], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4387 :         if (_Ec) {

	jne	SHORT $LN95@copy

; 4389 :         }
; 4390 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-128]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 128				; 00000080H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
$LN95@copy:

; 4388 :             _Throw_fs_error("copy", _Ec, _From, _To);

	mov	r9, rdi
	mov	r8, rsi
	lea	rdx, QWORD PTR _Ec$[rbp-128]
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDAEBVerror_code@2@AEBVpath@12@2@Z ; std::filesystem::_Throw_fs_error
	int	3
$LN92@copy:
?copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z ENDP ; std::filesystem::copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Ec$ = 32
_From_dir$2 = 48
__$ArrayPad$ = 112
_From$ = 192
_To$ = 200
_Options$ = 208
?dtor$0@?0??copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z@4HA PROC ; `std::filesystem::copy'::`1'::dtor$0
	lea	rcx, QWORD PTR _From_dir$2[rdx]
	jmp	??1directory_entry@filesystem@std@@QEAA@XZ ; std::filesystem::directory_entry::~directory_entry
?dtor$0@?0??copy@filesystem@std@@YAXAEBVpath@12@0W4copy_options@12@@Z@4HA ENDP ; `std::filesystem::copy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
;	COMDAT ??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 613  :     ~basic_istringstream() noexcept override {}

	mov	rax, QWORD PTR [rcx]
	lea	rdi, QWORD PTR [rcx+144]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rdx+rdi-144], rax
	mov	rax, QWORD PTR [rcx]

; 110  :         _Tidy();

	lea	rcx, QWORD PTR [rdi-128]

; 613  :     ~basic_istringstream() noexcept override {}

	movsxd	rdx, DWORD PTR [rax+4]

; 109  :     ~basic_stringbuf() noexcept override {

	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@

; 613  :     ~basic_istringstream() noexcept override {}

	lea	r8d, DWORD PTR [rdx-144]
	mov	DWORD PTR [rdx+rdi-148], r8d

; 109  :     ~basic_stringbuf() noexcept override {

	mov	QWORD PTR [rdi-128], rax

; 110  :         _Tidy();

	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 111  :     }

	lea	rcx, QWORD PTR [rdi-128]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ

; 613  :     ~basic_istringstream() noexcept override {}

	lea	rcx, QWORD PTR [rdi-120]
	call	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	mov	rcx, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2, COMDAT
	xor	edx, edx
	mov	r8d, 240				; 000000f0H
	jmp	memset
?__autoclassinit2@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
;	COMDAT ??R<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@QEBA@E@Z
_TEXT	SEGMENT
this$dead$ = 48
c$ = 56
??R<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@QEBA@E@Z PROC ; `Util::IsNumber'::`2'::<lambda_1>::operator(), COMDAT

; 163  : 		Number.end(), [](unsigned char c) { return !std::isdigit(c); }) == Number.end();

	sub	rsp, 40					; 00000028H
	movzx	ecx, dl
	call	QWORD PTR __imp_isdigit
	test	eax, eax
	sete	al
	add	rsp, 40					; 00000028H
	ret	0
??R<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@QEBA@E@Z ENDP ; `Util::IsNumber'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator==, COMDAT

; 1981 :         _Compat(_Right);
; 1982 :         return _Ptr == _Right._Ptr;

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	sete	al

; 1983 :     }

	ret	0
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
;	COMDAT ??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_istringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 613  :     ~basic_istringstream() noexcept override {}

$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR [rcx-144]
	mov	rdi, rcx
	movsxd	rdx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rdx+rcx-144], rax
	mov	rax, QWORD PTR [rcx-144]
	movsxd	rdx, DWORD PTR [rax+4]

; 109  :     ~basic_stringbuf() noexcept override {

	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@

; 613  :     ~basic_istringstream() noexcept override {}

	lea	r8d, DWORD PTR [rdx-144]
	mov	DWORD PTR [rdx+rcx-148], r8d

; 109  :     ~basic_stringbuf() noexcept override {

	mov	QWORD PTR [rcx-128], rax

; 110  :         _Tidy();

	add	rcx, -128				; ffffffffffffff80H
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 111  :     }

	lea	rcx, QWORD PTR [rdi-128]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ

; 613  :     ~basic_istringstream() noexcept override {}

	lea	rcx, QWORD PTR [rdi-120]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
;	COMDAT ??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
_TEXT	SEGMENT
this$ = 80
$T1 = 88
_Str$ = 88
_Mode$dead$ = 96
$initVBases$dead$ = 104
$T2 = 104
??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 564  :         : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(_Str, _Mode | ios_base::in) {}

$LN60:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
	mov	r14, rdx
	mov	r15, rcx
	xor	ebx, ebx
	mov	DWORD PTR $T2[rsp], ebx
	lea	rax, OFFSET FLAT:??_8?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
	mov	QWORD PTR [rcx], rax
	add	rcx, 144				; 00000090H
	call	QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	mov	DWORD PTR $T2[rsp], 1
	lea	rdi, QWORD PTR [r15+16]
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, rdi
	mov	rcx, r15
	call	QWORD PTR __imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	npad	1
	mov	rax, QWORD PTR [r15]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rcx+r15], rax
	mov	rax, QWORD PTR [r15]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-144]
	mov	DWORD PTR [rcx+r15-4], edx
	mov	QWORD PTR $T1[rsp], rdi

; 40   :         : _Al(_Str.get_allocator()) {

	mov	rcx, rdi
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rdi], rax

; 41   :         _Init(_Str.c_str(), _Str.size(), _Getstate(_Mode));

	mov	rsi, QWORD PTR [r14+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r14+24], 16
	jb	SHORT $LN20@basic_istr

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r14, QWORD PTR [r14]
$LN20@basic_istr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 435  :         _State &= ~_From_rvalue;

	mov	eax, 2

; 436  : 
; 437  :         if (_Count > INT_MAX) { // TRANSITION, VSO-485517

	cmp	rsi, 2147483647				; 7fffffffH
	jbe	SHORT $LN25@basic_istr

; 438  :             _Xbad_alloc();

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN25@basic_istr:

; 439  :         }
; 440  : 
; 441  :         if (_Count != 0 && (_State & (_Noread | _Constant)) != (_Noread | _Constant)) {

	test	rsi, rsi
	je	SHORT $LN26@basic_istr

; 442  :             // finite buffer that can be read or written, set it up
; 443  :             const auto _Pnew = _Unfancy(_Al.allocate(_Count));

	mov	rdx, rsi
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rsi
	mov	rdx, r14
	mov	rcx, rax
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 445  :             _Seekhigh = _Pnew + _Count;

	lea	rdx, QWORD PTR [rsi+rbx]
	mov	QWORD PTR [rdi+104], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\streambuf

; 208  :         *_IGfirst = _First;

	mov	rcx, QWORD PTR [rdi+24]
	mov	QWORD PTR [rcx], rbx

; 209  :         *_IGnext  = _Next;

	mov	rcx, QWORD PTR [rdi+56]
	mov	QWORD PTR [rcx], rbx

; 210  :         *_IGcount = static_cast<int>(_Last - _Next);

	sub	edx, ebx
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 459  :             _State |= _Allocated;

	mov	eax, 3

; 460  :         } else {

	jmp	SHORT $LN27@basic_istr
$LN26@basic_istr:

; 461  :             _Seekhigh = nullptr;

	mov	QWORD PTR [rdi+104], rbx
$LN27@basic_istr:

; 462  :         }
; 463  : 
; 464  :         _Mystate = _State;

	mov	DWORD PTR [rdi+112], eax

; 564  :         : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(_Str, _Mode | ios_base::in) {}

	mov	rax, r15
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
$LN57@basic_istr:
??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
$T1 = 88
_Str$ = 88
_Mode$dead$ = 96
$initVBases$dead$ = 104
$T2 = 104
?dtor$0@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA PROC ; `std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T2[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T2[rbp], -2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 144				; 00000090H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA ENDP ; `std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
$T1 = 88
_Str$ = 88
_Mode$dead$ = 96
$initVBases$dead$ = 104
$T2 = 104
?dtor$1@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA PROC ; `std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 24
	rex_jmp	QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$1@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA ENDP ; `std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
$T1 = 88
_Str$ = 88
_Mode$dead$ = 96
$initVBases$dead$ = 104
$T2 = 104
?dtor$3@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA PROC ; `std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$3
	mov	rcx, QWORD PTR $T1[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$3@?0???0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA ENDP ; `std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ??B?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??B?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEBA_NXZ PROC ; std::unique_ptr<char [0],std::default_delete<char [0]> >::operator bool, COMDAT

; 3450 :         return static_cast<bool>(_Mypair._Myval2);

	cmp	QWORD PTR [rcx], 0
	setne	al

; 3451 :     }

	ret	0
??B?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEBA_NXZ ENDP ; std::unique_ptr<char [0],std::default_delete<char [0]> >::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ?get@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEBAPEADXZ
_TEXT	SEGMENT
this$ = 8
?get@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEBAPEADXZ PROC ; std::unique_ptr<char [0],std::default_delete<char [0]> >::get, COMDAT

; 3446 :         return _Mypair._Myval2;

	mov	rax, QWORD PTR [rcx]

; 3447 :     }

	ret	0
?get@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEBAPEADXZ ENDP ; std::unique_ptr<char [0],std::default_delete<char [0]> >::get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ??1?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<char [0],std::default_delete<char [0]> >::~unique_ptr<char [0],std::default_delete<char [0]> >, COMDAT

; 3428 :         if (_Mypair._Myval2) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	jne	??_V@YAXPEAX@Z				; operator delete[]

; 3429 :             _Mypair._Get_first()(_Mypair._Myval2);
; 3430 :         }
; 3431 :     }

	ret	0
??1?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<char [0],std::default_delete<char [0]> >::~unique_ptr<char [0],std::default_delete<char [0]> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ??B?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??B?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEBA_NXZ PROC ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::operator bool, COMDAT

; 3450 :         return static_cast<bool>(_Mypair._Myval2);

	cmp	QWORD PTR [rcx], 0
	setne	al

; 3451 :     }

	ret	0
??B?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEBA_NXZ ENDP ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ?get@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEBAPEA_WXZ
_TEXT	SEGMENT
this$ = 8
?get@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEBAPEA_WXZ PROC ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::get, COMDAT

; 3446 :         return _Mypair._Myval2;

	mov	rax, QWORD PTR [rcx]

; 3447 :     }

	ret	0
?get@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEBAPEA_WXZ ENDP ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ??1?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::~unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >, COMDAT

; 3428 :         if (_Mypair._Myval2) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	jne	??_V@YAXPEAX@Z				; operator delete[]

; 3429 :             _Mypair._Get_first()(_Mypair._Myval2);
; 3430 :         }
; 3431 :     }

	ret	0
??1?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::~unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ??B?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??B?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEBA_NXZ PROC ; std::shared_ptr<std::filesystem::_Dir_enum_impl>::operator bool, COMDAT

; 1786 :         return get() != nullptr;

	cmp	QWORD PTR [rcx], 0
	setne	al

; 1787 :     }

	ret	0
??B?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEBA_NXZ ENDP ; std::shared_ptr<std::filesystem::_Dir_enum_impl>::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?empty@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_NXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::empty, COMDAT

; 4228 :         return _Mypair._Myval2._Mysize == 0;

	cmp	QWORD PTR [rcx+16], 0
	sete	al

; 4229 :     }

	ret	0
?empty@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_NXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 80
_Newcap$ = 88
?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve, COMDAT

; 4176 :     constexpr void reserve(_CRT_GUARDOVERFLOW const size_type _Newcap) {

$LN80:
	push	rbx
	push	rsi
	push	r15
	sub	rsp, 48					; 00000030H

; 4177 :         // determine new minimum length of allocated storage
; 4178 :         if (_Mypair._Myval2._Myres >= _Newcap) { // requested capacity is not larger than current capacity, ignore

	mov	rsi, QWORD PTR [rcx+24]
	mov	r15, rdx
	mov	rbx, rcx
	cmp	rsi, rdx
	jae	$LN1@reserve
	mov	QWORD PTR [rsp+40], rdi

; 4766 :         if (max_size() - _Old_size < _Size_increase) {

	mov	rdi, 9223372036854775806		; 7ffffffffffffffeH

; 4177 :         // determine new minimum length of allocated storage
; 4178 :         if (_Mypair._Myval2._Myres >= _Newcap) { // requested capacity is not larger than current capacity, ignore

	mov	QWORD PTR [rsp+32], r14

; 4766 :         if (max_size() - _Old_size < _Size_increase) {

	mov	rax, rdi

; 4179 :             return; // nothing to do
; 4180 :         }
; 4181 : 
; 4182 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	r14, QWORD PTR [rcx+16]

; 4183 :         _Reallocate_grow_by(

	mov	rcx, rdx
	sub	rcx, r14

; 4766 :         if (max_size() - _Old_size < _Size_increase) {

	sub	rax, r14
	cmp	rax, rcx
	jb	$LN78@reserve

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	or	rdx, 7
	mov	QWORD PTR [rsp+96], rbp
	cmp	rdx, rdi

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	ja	SHORT $LN11@reserve

; 4716 :             return _Max;
; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

	mov	rcx, rsi
	mov	rax, rdi
	shr	rcx, 1
	sub	rax, rcx
	cmp	rsi, rax
	ja	SHORT $LN11@reserve

; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	lea	rax, QWORD PTR [rcx+rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 47   :     return _Left < _Right ? _Right : _Left;

	mov	rdi, rdx
	cmp	rdx, rax
	cmovb	rdi, rax
$LN11@reserve:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4774 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	lea	rdx, QWORD PTR [rdi+1]
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate

; 4775 : 
; 4776 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 4777 :         _My_data._Orphan_all();
; 4778 :         _ASAN_STRING_REMOVE(*this);
; 4779 :         _My_data._Mysize      = _New_size;

	mov	QWORD PTR [rbx+16], r15
	mov	rbp, rax

; 4780 :         _My_data._Myres       = _New_capacity;

	mov	QWORD PTR [rbx+24], rdi

; 4781 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4782 :         if (_BUF_SIZE <= _Old_capacity) {

	lea	r8, QWORD PTR [r14*2+2]
	mov	rcx, rax
	cmp	rsi, 8
	jb	SHORT $LN6@reserve

; 4783 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

	mov	rdi, QWORD PTR [rbx]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rdi
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rsi*2+2]

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN41@reserve

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rdi-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rdi, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rdi-8]
	cmp	rax, 31
	ja	SHORT $LN38@reserve

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rdi, rcx
$LN41@reserve:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4787 :         } else {

	jmp	SHORT $LN7@reserve
$LN38@reserve:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN6@reserve:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rbx
	call	memcpy
$LN7@reserve:

; 4184 :             _Newcap - _Old_size, [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size) {
; 4185 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size + 1);
; 4186 :             });
; 4187 : 
; 4188 :         _Mypair._Myval2._Mysize = _Old_size;

	mov	QWORD PTR [rbx], rbp
	mov	rbp, QWORD PTR [rsp+96]
	mov	rdi, QWORD PTR [rsp+40]
	mov	QWORD PTR [rbx+16], r14
	mov	r14, QWORD PTR [rsp+32]
$LN1@reserve:

; 4189 :     }

	add	rsp, 48					; 00000030H
	pop	r15
	pop	rsi
	pop	rbx
	ret	0
$LN78@reserve:

; 4767 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN76@reserve:
?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??R<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@QEBA@QEA_WQEB_W0@Z
_TEXT	SEGMENT
this$dead$ = 8
_New_ptr$ = 16
_Old_ptr$ = 24
_Old_size$ = 32
??R<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@QEBA@QEA_WQEB_W0@Z PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve'::`2'::<lambda_1>::operator(), COMDAT

; 4184 :             _Newcap - _Old_size, [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size) {

	mov	rax, r8
	mov	rcx, rdx

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rax
	lea	r8, QWORD PTR [r9*2+2]
	jmp	memcpy
??R<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@QEBA@QEA_WQEB_W0@Z ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::clear, COMDAT

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 8

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rcx

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN6@clear

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rcx]
$LN6@clear:

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	xor	edx, edx
	mov	QWORD PTR [rcx+16], rdx
	mov	WORD PTR [rax], dx

; 3673 :         _Eos(0);
; 3674 :     }

	ret	0
?clear@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z
_TEXT	SEGMENT
this$ = 64
_Off$ = 72
_Nx$ = 80
_Right$ = 88
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace, COMDAT

; 3676 :     _CONSTEXPR20 basic_string& replace(const size_type _Off, const size_type _Nx, const basic_string& _Right) {

$LN10:
	sub	rsp, 56					; 00000038H

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [r9+24], 16

; 3677 :         // replace [_Off, _Off + _Nx) with _Right
; 3678 :         return replace(_Off, _Nx, _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rax, QWORD PTR [r9+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN4@replace

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r9, QWORD PTR [r9]
$LN4@replace:

; 3677 :         // replace [_Off, _Off + _Nx) with _Right
; 3678 :         return replace(_Off, _Nx, _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	QWORD PTR [rsp+32], rax
	call	?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace

; 3679 :     }

	add	rsp, 56					; 00000038H
	ret	0
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rdi, QWORD PTR [rcx-144]
	mov	ebx, edx
	mov	rcx, rdi
	call	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	test	bl, 1
	je	SHORT $LN4@scalar
	mov	edx, 240				; 000000f0H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Right$dead$ = 16
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat, COMDAT

; 2014 :         // test for compatible iterator pair
; 2015 : #if _ITERATOR_DEBUG_LEVEL >= 1
; 2016 :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "string iterators incompatible (e.g."
; 2017 :                                                            " point to different string instances)");
; 2018 : #else // ^^^ _ITERATOR_DEBUG_LEVEL >= 1 / _ITERATOR_DEBUG_LEVEL == 0 vvv
; 2019 :         (void) _Right;
; 2020 : #endif // _ITERATOR_DEBUG_LEVEL
; 2021 :     }

	ret	0
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@$$BY0A@D@std@@PEAD$00@std@@QEAAAEAU?$default_delete@$$BY0A@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$default_delete@$$BY0A@D@std@@PEAD$00@std@@QEAAAEAU?$default_delete@$$BY0A@D@2@XZ PROC ; std::_Compressed_pair<std::default_delete<char [0]>,char *,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@U?$default_delete@$$BY0A@D@std@@PEAD$00@std@@QEAAAEAU?$default_delete@$$BY0A@D@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<char [0]>,char *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@$$BY0A@_W@std@@PEA_W$00@std@@QEAAAEAU?$default_delete@$$BY0A@_W@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$default_delete@$$BY0A@_W@std@@PEA_W$00@std@@QEAAAEAU?$default_delete@$$BY0A@_W@2@XZ PROC ; std::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@U?$default_delete@$$BY0A@_W@std@@PEA_W$00@std@@QEAAAEAU?$default_delete@$$BY0A@_W@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
_TEXT	SEGMENT
this$ = 48
_Str$ = 56
_Mode$dead$ = 64
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 39   :     explicit basic_stringbuf(const _Mystr& _Str, ios_base::openmode _Mode = ios_base::in | ios_base::out)

$LN52:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	mov	QWORD PTR [rsp+8], rcx
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx
	mov	rdi, rcx

; 40   :         : _Al(_Str.get_allocator()) {

	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rdi], rax

; 41   :         _Init(_Str.c_str(), _Str.size(), _Getstate(_Mode));

	mov	r14, QWORD PTR [rsi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rsi+24], 16
	jb	SHORT $LN13@basic_stri

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rsi, QWORD PTR [rsi]
$LN13@basic_stri:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 435  :         _State &= ~_From_rvalue;

	mov	eax, 2

; 436  : 
; 437  :         if (_Count > INT_MAX) { // TRANSITION, VSO-485517

	cmp	r14, 2147483647				; 7fffffffH
	jbe	SHORT $LN18@basic_stri

; 438  :             _Xbad_alloc();

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN18@basic_stri:

; 439  :         }
; 440  : 
; 441  :         if (_Count != 0 && (_State & (_Noread | _Constant)) != (_Noread | _Constant)) {

	test	r14, r14
	je	SHORT $LN19@basic_stri

; 442  :             // finite buffer that can be read or written, set it up
; 443  :             const auto _Pnew = _Unfancy(_Al.allocate(_Count));

	mov	rdx, r14
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, r14
	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 445  :             _Seekhigh = _Pnew + _Count;

	lea	rdx, QWORD PTR [r14+rbx]
	mov	QWORD PTR [rdi+104], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\streambuf

; 208  :         *_IGfirst = _First;

	mov	rcx, QWORD PTR [rdi+24]
	mov	QWORD PTR [rcx], rbx

; 209  :         *_IGnext  = _Next;

	mov	rcx, QWORD PTR [rdi+56]
	mov	QWORD PTR [rcx], rbx

; 210  :         *_IGcount = static_cast<int>(_Last - _Next);

	sub	edx, ebx
	mov	rax, QWORD PTR [rdi+80]
	mov	DWORD PTR [rax], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 459  :             _State |= _Allocated;

	mov	eax, 3

; 460  :         } else {

	jmp	SHORT $LN20@basic_stri
$LN19@basic_stri:

; 461  :             _Seekhigh = nullptr;

	mov	QWORD PTR [rdi+104], 0
$LN20@basic_stri:

; 462  :         }
; 463  : 
; 464  :         _Mystate = _State;

	mov	DWORD PTR [rdi+112], eax

; 42   :     }

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN49@basic_stri:
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Str$ = 56
_Mode$dead$ = 64
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z
_TEXT	SEGMENT
_Insert_at$1$ = 64
this$ = 160
_Off$ = 168
_Nx$ = 176
_Ptr$ = 184
_Count$ = 192
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace, COMDAT

; 3707 :         const size_type _Off, size_type _Nx, _In_reads_(_Count) const _Elem* const _Ptr, const size_type _Count) {

$LN214:
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 112				; 00000070H

; 2260 :         if (_Mysize < _Off) {

	mov	rbp, QWORD PTR [rcx+16]

; 3707 :         const size_type _Off, size_type _Nx, _In_reads_(_Count) const _Elem* const _Ptr, const size_type _Count) {

	mov	r15, r9
	mov	rsi, QWORD PTR _Count$[rsp]
	mov	r14, r8
	mov	rdi, rcx

; 2260 :         if (_Mysize < _Off) {

	cmp	rbp, rdx
	jb	$LN212@replace

; 2278 :         return (_STD min)(_Size, _Mysize - _Off);

	mov	rax, rbp
	sub	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	rax, r8
	cmovb	r14, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3711 :         if (_Nx == _Count) { // size doesn't change, so a single move does the trick

	cmp	r14, rsi
	jne	SHORT $LN2@replace

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rcx

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN21@replace

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rcx]
$LN21@replace:

; 3712 :             _Traits::move(_Mypair._Myval2._Myptr() + _Off, _Ptr, _Count);

	lea	rcx, QWORD PTR [rdx+rax]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rsi
	mov	rdx, r15
	call	memmove

; 3713 :             return *this;

	mov	rax, rdi

; 3768 :             _Growth,
; 3769 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const size_type _Off,
; 3770 :                 const size_type _Nx, const _Elem* const _Ptr, const size_type _Count) {
; 3771 :                 _Traits::copy(_New_ptr, _Old_ptr, _Off);
; 3772 :                 _Traits::copy(_New_ptr + _Off, _Ptr, _Count);
; 3773 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off + _Nx, _Old_size - _Nx - _Off + 1);
; 3774 :             },
; 3775 :             _Off, _Nx, _Ptr, _Count);
; 3776 :     }

	add	rsp, 112				; 00000070H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN2@replace:
	mov	QWORD PTR [rsp+104], rbx
	mov	QWORD PTR [rsp+96], r12

; 3714 :         }
; 3715 : 
; 3716 :         const size_type _Old_size    = _Mypair._Myval2._Mysize;
; 3717 :         const size_type _Suffix_size = _Old_size - _Nx - _Off + 1;

	mov	r12, rbp
	sub	r12, r14
	sub	r12, rdx

; 3718 :         if (_Count < _Nx) { // suffix shifts backwards; we don't have to move anything out of the way

	cmp	rsi, r14
	jae	SHORT $LN3@replace

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rdi

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN41@replace

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rcx]
$LN41@replace:

; 3719 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3720 :             _Elem* const _Insert_at = _Old_ptr + _Off;

	lea	rbx, QWORD PTR [rdx+rax]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rsi
	mov	rcx, rbx
	mov	rdx, r15
	call	memmove

; 3721 :             _Traits::move(_Insert_at, _Ptr, _Count);
; 3722 :             _Traits::move(_Insert_at + _Count, _Insert_at + _Nx, _Suffix_size);

	lea	rdx, QWORD PTR [r14+rbx]
	lea	rcx, QWORD PTR [rsi+rbx]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	lea	r8, QWORD PTR [r12+1]
	call	memmove

; 3723 : 
; 3724 :             const auto _New_size = _Old_size - (_Nx - _Count);
; 3725 :             _ASAN_STRING_MODIFY(*this, _Old_size, _New_size);
; 3726 :             _Mypair._Myval2._Mysize = _New_size;

	sub	rsi, r14

; 3727 :             return *this;

	mov	rax, rdi
	add	rsi, rbp
	mov	QWORD PTR [rdi+16], rsi
	jmp	$LN208@replace
$LN3@replace:

; 3728 :         }
; 3729 : 
; 3730 :         const size_type _Growth = static_cast<size_type>(_Count - _Nx);
; 3731 : 
; 3732 :         // checking for overlapping ranges is technically UB (considering string literals), so just always reallocate
; 3733 :         // and copy to the new buffer if constant evaluated
; 3734 : #if _HAS_CXX20
; 3735 :         if (!_STD is_constant_evaluated())
; 3736 : #endif // _HAS_CXX20
; 3737 :         {
; 3738 :             if (_Growth <= _Mypair._Myval2._Myres - _Old_size) { // growth fits

	mov	r8, QWORD PTR [rcx+24]
	mov	QWORD PTR [rsp+88], r13
	mov	rax, r8
	mov	r13, rsi
	sub	rax, rbp
	sub	r13, r14
	cmp	r13, rax
	ja	$LN5@replace

; 3739 :                 _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Growth);
; 3740 :                 _Mypair._Myval2._Mysize = _Old_size + _Growth;

	mov	rax, rbp
	add	rax, r13
	mov	QWORD PTR [rcx+16], rax

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r8, 16

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN76@replace

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN76@replace:

; 3741 :                 _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3742 :                 _Elem* const _Insert_at = _Old_ptr + _Off;

	lea	r8, QWORD PTR [rdx+rcx]

; 3743 :                 _Elem* const _Suffix_at = _Insert_at + _Nx;
; 3744 : 
; 3745 :                 size_type _Ptr_shifted_after; // see rationale in insert
; 3746 :                 if (_Ptr + _Count <= _Insert_at || _Ptr > _Old_ptr + _Old_size) {

	lea	rax, QWORD PTR [rsi+r9]
	mov	QWORD PTR _Insert_at$1$[rsp], r8
	lea	rdx, QWORD PTR [r14+r8]
	cmp	rax, r8
	jbe	SHORT $LN8@replace
	lea	rax, QWORD PTR [rcx+rbp]
	cmp	r15, rax
	ja	SHORT $LN8@replace

; 3748 :                 } else if (_Suffix_at <= _Ptr) {

	cmp	rdx, r15
	ja	SHORT $LN9@replace

; 3749 :                     _Ptr_shifted_after = 0;

	xor	ebx, ebx

; 3750 :                 } else {

	jmp	SHORT $LN10@replace
$LN9@replace:

; 3751 :                     _Ptr_shifted_after = static_cast<size_type>(_Suffix_at - _Ptr);

	mov	rbx, rdx
	sub	rbx, r15
	jmp	SHORT $LN10@replace
$LN8@replace:

; 3747 :                     _Ptr_shifted_after = _Count;

	mov	rbx, rsi
$LN10@replace:

; 3752 :                 }
; 3753 : 
; 3754 :                 _Traits::move(_Suffix_at + _Growth, _Suffix_at, _Suffix_size);

	lea	rcx, QWORD PTR [rdx+r13]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	lea	r8, QWORD PTR [r12+1]
	call	memmove
	mov	rbp, QWORD PTR _Insert_at$1$[rsp]
	mov	r8, rbx
	mov	rcx, rbp
	mov	rdx, r15
	call	memmove

; 3755 :                 // next case must be move, in case _Ptr begins before _Insert_at and contains part of the hole;
; 3756 :                 // this case doesn't occur in insert because the new content must come from outside the removed
; 3757 :                 // content there (because in insert there is no removed content)
; 3758 :                 _Traits::move(_Insert_at, _Ptr, _Ptr_shifted_after);
; 3759 :                 // the next case can be copy, because it comes from the chunk moved out of the way in the
; 3760 :                 // first move, and the hole we're filling can't alias the chunk we moved out of the way
; 3761 :                 _Traits::copy(

	sub	rsi, rbx
	lea	rdx, QWORD PTR [r15+rbx]
	add	rdx, r13
	lea	rcx, QWORD PTR [rbx+rbp]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rsi
	call	memcpy

; 3762 :                     _Insert_at + _Ptr_shifted_after, _Ptr + _Growth + _Ptr_shifted_after, _Count - _Ptr_shifted_after);
; 3763 :                 return *this;

	mov	rax, rdi
	jmp	SHORT $LN209@replace
$LN5@replace:

; 3764 :             }
; 3765 :         }
; 3766 : 
; 3767 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+48], rsi
	mov	r9, rdx
	mov	QWORD PTR [rsp+40], r15
	mov	rdx, r13
	mov	QWORD PTR [rsp+32], r14
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace'::`2'::<lambda_1>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>
$LN209@replace:
	mov	r13, QWORD PTR [rsp+88]
$LN208@replace:
	mov	rbx, QWORD PTR [rsp+104]
	mov	r12, QWORD PTR [rsp+96]

; 3768 :             _Growth,
; 3769 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const size_type _Off,
; 3770 :                 const size_type _Nx, const _Elem* const _Ptr, const size_type _Count) {
; 3771 :                 _Traits::copy(_New_ptr, _Old_ptr, _Off);
; 3772 :                 _Traits::copy(_New_ptr + _Off, _Ptr, _Count);
; 3773 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off + _Nx, _Old_size - _Nx - _Off + 1);
; 3774 :             },
; 3775 :             _Off, _Nx, _Ptr, _Count);
; 3776 :     }

	add	rsp, 112				; 00000070H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN212@replace:

; 2261 :             _Xran();

	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
	int	3
$LN210@replace:
?replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_KQEBD0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??R<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_K_KQEBD0@Z@QEBA@QEAD200020@Z
_TEXT	SEGMENT
this$dead$ = 48
_New_ptr$ = 56
_Old_ptr$ = 64
_Old_size$ = 72
_Off$ = 80
_Nx$ = 88
_Ptr$ = 96
_Count$ = 104
??R<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_K_KQEBD0@Z@QEBA@QEAD200020@Z PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace'::`2'::<lambda_1>::operator(), COMDAT

; 3770 :                 const size_type _Nx, const _Elem* const _Ptr, const size_type _Count) {

$LN41:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rsi, QWORD PTR _Off$[rsp]

; 3770 :                 const size_type _Nx, const _Elem* const _Ptr, const size_type _Count) {

	mov	r14, r8
	mov	rbx, rdx

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rsi
	mov	rdx, r14
	mov	rcx, rbx

; 3770 :                 const size_type _Nx, const _Elem* const _Ptr, const size_type _Count) {

	mov	rbp, r9

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	call	memcpy
	mov	rdx, QWORD PTR _Ptr$[rsp]

; 3771 :                 _Traits::copy(_New_ptr, _Old_ptr, _Off);
; 3772 :                 _Traits::copy(_New_ptr + _Off, _Ptr, _Count);

	lea	rdi, QWORD PTR [rbx+rsi]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rbx, QWORD PTR _Count$[rsp]
	mov	rcx, rdi
	mov	r8, rbx
	call	memcpy

; 3773 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off + _Nx, _Old_size - _Nx - _Off + 1);

	sub	rbp, rsi
	lea	rdx, QWORD PTR [r14+rsi]
	sub	rbp, QWORD PTR _Nx$[rsp]
	lea	rcx, QWORD PTR [rdi+rbx]
	add	rdx, QWORD PTR _Nx$[rsp]
	lea	r8, QWORD PTR [rbp+1]

; 3774 :             },

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	jmp	memcpy
??R<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@_K_KQEBD0@Z@QEBA@QEAD200020@Z ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\streambuf
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
;	COMDAT ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
_State$ = 72
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init, COMDAT

; 433  :     void _Init(const _Elem* _Ptr, _Mysize_type _Count, int _State) {

$LN42:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
	mov	edi, r9d
	mov	rbp, r8

; 434  :         // initialize buffer to [_Ptr, _Ptr + _Count), set state
; 435  :         _State &= ~_From_rvalue;

	and	edi, -33				; ffffffffffffffdfH
	mov	r14, rdx
	mov	rbx, rcx

; 436  : 
; 437  :         if (_Count > INT_MAX) { // TRANSITION, VSO-485517

	cmp	r8, 2147483647				; 7fffffffH
	jbe	SHORT $LN2@Init

; 438  :             _Xbad_alloc();

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	int	3
$LN2@Init:

; 439  :         }
; 440  : 
; 441  :         if (_Count != 0 && (_State & (_Noread | _Constant)) != (_Noread | _Constant)) {

	test	rbp, rbp
	je	$LN3@Init
	mov	eax, edi
	and	eax, 6
	cmp	al, 6
	je	$LN3@Init

; 443  :             const auto _Pnew = _Unfancy(_Al.allocate(_Count));

	mov	rdx, rbp
	mov	QWORD PTR [rsp+48], rsi
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rbp
	mov	rdx, r14
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 443  :             const auto _Pnew = _Unfancy(_Al.allocate(_Count));

	mov	rsi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 447  :             if (!(_State & _Noread)) {

	mov	r8d, edi
	lea	rcx, QWORD PTR [rsi+rbp]
	mov	QWORD PTR [rbx+104], rcx
	and	r8d, 4
	jne	SHORT $LN32@Init
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\streambuf

; 208  :         *_IGfirst = _First;

	mov	rax, QWORD PTR [rbx+24]

; 210  :         *_IGcount = static_cast<int>(_Last - _Next);

	sub	ecx, esi
	mov	QWORD PTR [rax], rsi
	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], rsi
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], ecx
$LN32@Init:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 451  :             if (!(_State & _Constant)) { // setup write buffer, and maybe read buffer

	test	dil, 2
	jne	SHORT $LN24@Init

; 452  :                 _Mysb::setp(_Pnew, (_State & (_Atend | _Append)) ? _Seekhigh : _Pnew, _Seekhigh);

	mov	rdx, QWORD PTR [rbx+104]
	test	dil, 24
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\streambuf

; 251  :         *_IPfirst = _First;

	mov	rax, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 452  :                 _Mysb::setp(_Pnew, (_State & (_Atend | _Append)) ? _Seekhigh : _Pnew, _Seekhigh);

	mov	rcx, rsi
	cmovne	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\streambuf

; 253  :         *_IPcount = static_cast<int>(_Last - _Next);

	sub	edx, ecx
	mov	QWORD PTR [rax], rsi
	mov	rax, QWORD PTR [rbx+64]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR [rbx+88]
	mov	DWORD PTR [rax], edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 454  :                 if (_State & _Noread) { // maintain "_Allocated == eback() points to buffer base" invariant

	test	r8d, r8d
	je	SHORT $LN24@Init
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\streambuf

; 208  :         *_IGfirst = _First;

	mov	rax, QWORD PTR [rbx+24]
	mov	QWORD PTR [rax], rsi

; 209  :         *_IGnext  = _Next;

	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], rsi

; 210  :         *_IGcount = static_cast<int>(_Last - _Next);

	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], 0
$LN24@Init:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 459  :             _State |= _Allocated;

	mov	rsi, QWORD PTR [rsp+48]
	or	edi, 1

; 460  :         } else {

	jmp	SHORT $LN4@Init
$LN3@Init:

; 461  :             _Seekhigh = nullptr;

	mov	QWORD PTR [rcx+104], 0
$LN4@Init:

; 462  :         }
; 463  : 
; 464  :         _Mystate = _State;
; 465  :     }

	mov	rbp, QWORD PTR [rsp+64]
	mov	DWORD PTR [rbx+112], edi
	mov	rbx, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
$LN39@Init:
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXPEBD_KH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ??$?0PEA_WU?$default_delete@$$BY0A@_W@std@@$0A@$0A@@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAA@PEA_W@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$?0PEA_WU?$default_delete@$$BY0A@_W@std@@$0A@$0A@@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAA@PEA_W@Z PROC ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> ><wchar_t *,std::default_delete<wchar_t [0]>,0,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	QWORD PTR [rcx], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3359 :     _CONSTEXPR23 explicit unique_ptr(_Uty _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t{}, _Ptr) {}

	mov	rax, rcx
	ret	0
??$?0PEA_WU?$default_delete@$$BY0A@_W@std@@$0A@$0A@@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAA@PEA_W@Z ENDP ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> ><wchar_t *,std::default_delete<wchar_t [0]>,0,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$replace_copy_if@PEB_WPEA_WU_Is_slash_oper@std@@_W@std@@YAPEA_WPEB_W0PEA_WU_Is_slash_oper@0@AEB_W@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
_Dest$ = 24
_Pred$dead$ = 32
_Val$ = 40
??$replace_copy_if@PEB_WPEA_WU_Is_slash_oper@std@@_W@std@@YAPEA_WPEB_W0PEA_WU_Is_slash_oper@0@AEB_W@Z PROC ; std::replace_copy_if<wchar_t const *,wchar_t *,std::_Is_slash_oper,wchar_t>, COMDAT

; 3836 :     // copy replacing each satisfying _Pred with _Val
; 3837 :     _Adl_verify_range(_First, _Last);
; 3838 :     auto _UFirst      = _Get_unwrapped(_First);
; 3839 :     const auto _ULast = _Get_unwrapped(_Last);
; 3840 :     auto _UDest       = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));
; 3841 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

	cmp	rcx, rdx
	je	SHORT $LN19@replace_co

; 3835 : _CONSTEXPR20 _OutIt replace_copy_if(_InIt _First, _InIt _Last, _OutIt _Dest, _Pr _Pred, const _Ty& _Val) {

	mov	r9, QWORD PTR _Val$[rsp]
	npad	6
$LL4@replace_co:

; 3842 :         if (_Pred(*_UFirst)) {

	movzx	eax, WORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	ax, 92					; 0000005cH
	je	SHORT $LN18@replace_co
	cmp	ax, 47					; 0000002fH
	jne	SHORT $LN2@replace_co
$LN18@replace_co:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 3843 :             *_UDest = _Val;

	movzx	eax, WORD PTR [r9]
$LN2@replace_co:

; 3836 :     // copy replacing each satisfying _Pred with _Val
; 3837 :     _Adl_verify_range(_First, _Last);
; 3838 :     auto _UFirst      = _Get_unwrapped(_First);
; 3839 :     const auto _ULast = _Get_unwrapped(_Last);
; 3840 :     auto _UDest       = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));
; 3841 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

	mov	WORD PTR [r8], ax
	add	rcx, 2
	add	r8, 2
	cmp	rcx, rdx
	jne	SHORT $LL4@replace_co
$LN19@replace_co:

; 3844 :         } else {
; 3845 :             *_UDest = *_UFirst;
; 3846 :         }
; 3847 :     }
; 3848 : 
; 3849 :     _Seek_wrapped(_Dest, _UDest);
; 3850 :     return _Dest;
; 3851 : }

	mov	rax, r8
	ret	0
??$replace_copy_if@PEB_WPEA_WU_Is_slash_oper@std@@_W@std@@YAPEA_WPEB_W0PEA_WU_Is_slash_oper@0@AEB_W@Z ENDP ; std::replace_copy_if<wchar_t const *,wchar_t *,std::_Is_slash_oper,wchar_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Idl_distance@PEB_WPEB_W@std@@YA?A_PAEBQEB_W0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$_Idl_distance@PEB_WPEB_W@std@@YA?A_PAEBQEB_W0@Z PROC	; std::_Idl_distance<wchar_t const *,wchar_t const *>, COMDAT

; 1317 :     // tries to get the distance between _First and _Last if they are random-access iterators
; 1318 :     if constexpr (_Is_ranges_random_iter_v<_Iter>) {
; 1319 :         return static_cast<_Iter_diff_t<_Checked>>(_Last - _First);

	mov	rax, QWORD PTR [rdx]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 1

; 1320 :     } else {
; 1321 :         return _Distance_unknown{};
; 1322 :     }
; 1323 : }

	ret	0
??$_Idl_distance@PEB_WPEB_W@std@@YA?A_PAEBQEB_W0@Z ENDP	; std::_Idl_distance<wchar_t const *,wchar_t const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped_n@AEAPEA_W_J@std@@YA?A_TAEAPEA_W_J@Z
_TEXT	SEGMENT
_It$ = 8
_Off$dead$ = 16
??$_Get_unwrapped_n@AEAPEA_W_J@std@@YA?A_TAEAPEA_W_J@Z PROC ; std::_Get_unwrapped_n<wchar_t * &,__int64>, COMDAT

; 1222 :     if constexpr (is_pointer_v<decay_t<_Iter>>) {
; 1223 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1224 :     } else if constexpr (_Unwrappable_for_offset_v<_Iter> && is_integral_v<_Diff>) {
; 1225 :         // ask an iterator to assert that the iterator moved _Off positions is valid, and unwrap
; 1226 :         using _IDiff     = _Iter_diff_t<_Remove_cvref_t<_Iter>>;
; 1227 :         using _CDiff     = common_type_t<_Diff, _IDiff>;
; 1228 :         const auto _COff = static_cast<_CDiff>(_Off);
; 1229 : 
; 1230 :         _STL_ASSERT(_COff <= static_cast<_CDiff>(_Max_possible_v<_IDiff>)
; 1231 :                         && (is_unsigned_v<_Diff> || static_cast<_CDiff>(_Min_possible_v<_IDiff>) <= _COff),
; 1232 :             "integer overflow");
; 1233 :         (void) _COff;
; 1234 : 
; 1235 :         _It._Verify_offset(static_cast<_IDiff>(_Off));
; 1236 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1237 :     } else if constexpr (_Unwrappable_for_unverified_v<_Iter>) {
; 1238 :         // iterator doesn't support offset-based asserts, or offset unknown; defer to unverified unwrap
; 1239 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1240 :     } else {
; 1241 :         // pass through iterator that doesn't participate in checking
; 1242 :         return static_cast<_Iter&&>(_It);
; 1243 :     }
; 1244 : }

	ret	0
??$_Get_unwrapped_n@AEAPEA_W_J@std@@YA?A_TAEAPEA_W_J@Z ENDP ; std::_Get_unwrapped_n<wchar_t * &,__int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ??$?0U?$default_delete@$$BY0A@_W@std@@$0A@@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??$?0U?$default_delete@$$BY0A@_W@std@@$0A@@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> ><std::default_delete<wchar_t [0]>,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rdx]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	QWORD PTR [rcx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3377 :         : _Mypair(_One_then_variadic_args_t{}, _STD forward<_Dx>(_Right.get_deleter()), _Right.release()) {}

	mov	rax, rcx
	ret	0
??$?0U?$default_delete@$$BY0A@_W@std@@$0A@@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> ><std::default_delete<wchar_t [0]>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ??$reset@PEAD$0A@@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAAXPEAD@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$reset@PEAD$0A@@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAAXPEAD@Z PROC ; std::unique_ptr<char [0],std::default_delete<char [0]> >::reset<char *,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rcx]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rcx], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3460 :         if (_Old) {

	test	rax, rax
	je	SHORT $LN8@reset

; 3194 :         delete[] _Ptr;

	mov	rcx, rax
	jmp	??_V@YAXPEAX@Z				; operator delete[]
$LN8@reset:

; 3461 :             _Mypair._Get_first()(_Old);
; 3462 :         }
; 3463 :     }

	ret	0
??$reset@PEAD$0A@@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAAXPEAD@Z ENDP ; std::unique_ptr<char [0],std::default_delete<char [0]> >::reset<char *,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ??$?0U?$default_delete@$$BY0A@D@std@@$0A@@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??$?0U?$default_delete@$$BY0A@D@std@@$0A@@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<char [0],std::default_delete<char [0]> >::unique_ptr<char [0],std::default_delete<char [0]> ><std::default_delete<char [0]>,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	QWORD PTR [rcx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3347 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t{}) {}

	mov	rax, rcx
	ret	0
??$?0U?$default_delete@$$BY0A@D@std@@$0A@@?$unique_ptr@$$BY0A@DU?$default_delete@$$BY0A@D@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<char [0],std::default_delete<char [0]> >::unique_ptr<char [0],std::default_delete<char [0]> ><std::default_delete<char [0]>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEAW4__std_win_error@@_N$0A@@?$pair@W4__std_win_error@@_N@std@@QEAA@AEAW4__std_win_error@@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0AEAW4__std_win_error@@_N$0A@@?$pair@W4__std_win_error@@_N@std@@QEAA@AEAW4__std_win_error@@$$QEA_N@Z PROC ; std::pair<enum __std_win_error,bool>::pair<enum __std_win_error,bool><enum __std_win_error &,bool,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+4], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0AEAW4__std_win_error@@_N$0A@@?$pair@W4__std_win_error@@_N@std@@QEAA@AEAW4__std_win_error@@$$QEA_N@Z ENDP ; std::pair<enum __std_win_error,bool>::pair<enum __std_win_error,bool><enum __std_win_error &,bool,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0W4__std_win_error@@_N$0A@@?$pair@W4__std_win_error@@_N@std@@QEAA@$$QEAW4__std_win_error@@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0W4__std_win_error@@_N$0A@@?$pair@W4__std_win_error@@_N@std@@QEAA@$$QEAW4__std_win_error@@$$QEA_N@Z PROC ; std::pair<enum __std_win_error,bool>::pair<enum __std_win_error,bool><enum __std_win_error,bool,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+4], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0W4__std_win_error@@_N$0A@@?$pair@W4__std_win_error@@_N@std@@QEAA@$$QEAW4__std_win_error@@$$QEA_N@Z ENDP ; std::pair<enum __std_win_error,bool>::pair<enum __std_win_error,bool><enum __std_win_error,bool,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??$append@PEB_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W0@Z
_TEXT	SEGMENT
this$ = 8
_First$ = 16
_Last$ = 24
??$append@PEB_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append<wchar_t const *,0>, COMDAT

; 3320 :         // append [_First, _Last), input iterators
; 3321 :         _Adl_verify_range(_First, _Last);
; 3322 :         const auto _UFirst = _Get_unwrapped(_First);
; 3323 :         const auto _ULast  = _Get_unwrapped(_Last);
; 3324 :         if constexpr (_Is_elem_cptr<decltype(_UFirst)>::value) {
; 3325 :             return append(_UFirst, _Convert_size<size_type>(static_cast<size_t>(_ULast - _UFirst)));

	sub	r8, rdx
	sar	r8, 1
	jmp	?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@QEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append
??$append@PEB_W$0A@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV01@QEB_W0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append<wchar_t const *,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Libraries\include\glm\detail\func_trigonometric.inl
;	COMDAT ??$degrees@M@glm@@YAMM@Z
_TEXT	SEGMENT
radians$ = 8
??$degrees@M@glm@@YAMM@Z PROC				; glm::degrees<float>, COMDAT

; 26   : 		GLM_STATIC_ASSERT(std::numeric_limits<genType>::is_iec559, "'degrees' only accept floating-point input");
; 27   : 
; 28   : 		return radians * static_cast<genType>(57.295779513082320876798154814105);

	mulss	xmm0, DWORD PTR __real@42652ee1

; 29   : 	}

	ret	0
??$degrees@M@glm@@YAMM@Z ENDP				; glm::degrees<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$transform@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@P6AHH@Z@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0V10@P6AHH@Z@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 64
_First$ = 72
_Last$ = 80
_Dest$ = 88
_Func$ = 96
??$transform@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@P6AHH@Z@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0V10@P6AHH@Z@Z PROC ; std::transform<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,int (__cdecl*)(int)>, COMDAT

; 3439 : _CONSTEXPR20 _OutIt transform(const _InIt _First, const _InIt _Last, _OutIt _Dest, _Fn _Func) {

$LN17:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rbp, QWORD PTR _Func$[rsp]
	mov	rsi, r9
	mov	rdi, r8
	mov	rbx, rdx
	mov	r14, rcx

; 3440 :     // transform [_First, _Last) with _Func
; 3441 :     _Adl_verify_range(_First, _Last);
; 3442 :     auto _UFirst      = _Get_unwrapped(_First);
; 3443 :     const auto _ULast = _Get_unwrapped(_Last);
; 3444 :     auto _UDest       = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));
; 3445 :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_UDest) {

	cmp	rdx, r8
	je	SHORT $LN12@transform
$LL4@transform:

; 3446 :         *_UDest = _Func(*_UFirst);

	movsx	ecx, BYTE PTR [rbx]
	call	rbp
	mov	BYTE PTR [rsi], al
	inc	rbx
	inc	rsi
	cmp	rbx, rdi
	jne	SHORT $LL4@transform

; 3447 :     }
; 3448 : 
; 3449 :     _Seek_wrapped(_Dest, _UDest);
; 3450 :     return _Dest;

	mov	QWORD PTR [r14], rsi
	jmp	SHORT $LN15@transform
$LN12@transform:
	mov	QWORD PTR [rcx], r9
$LN15@transform:

; 3451 : }

	mov	rbx, QWORD PTR [rsp+72]
	mov	rax, r14
	mov	rbp, QWORD PTR [rsp+80]
	add	rsp, 32					; 00000020H
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
??$transform@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V12@P6AHH@Z@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@0V10@P6AHH@Z@Z ENDP ; std::transform<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,int (__cdecl*)(int)>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Idl_distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@PEAD@std@@YA?A_PAEBQEAD0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$_Idl_distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@PEAD@std@@YA?A_PAEBQEAD0@Z PROC ; std::_Idl_distance<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,char *>, COMDAT

; 1317 :     // tries to get the distance between _First and _Last if they are random-access iterators
; 1318 :     if constexpr (_Is_ranges_random_iter_v<_Iter>) {
; 1319 :         return static_cast<_Iter_diff_t<_Checked>>(_Last - _First);

	mov	rax, QWORD PTR [rdx]
	sub	rax, QWORD PTR [rcx]

; 1320 :     } else {
; 1321 :         return _Distance_unknown{};
; 1322 :     }
; 1323 : }

	ret	0
??$_Idl_distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@PEAD@std@@YA?A_PAEBQEAD0@Z ENDP ; std::_Idl_distance<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,char *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped_n@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@_J@Z
_TEXT	SEGMENT
_It$ = 8
_Off$dead$ = 16
??$_Get_unwrapped_n@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@_J@Z PROC ; std::_Get_unwrapped_n<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &,__int64>, COMDAT

; 1222 :     if constexpr (is_pointer_v<decay_t<_Iter>>) {
; 1223 :         return _It + 0;
; 1224 :     } else if constexpr (_Unwrappable_for_offset_v<_Iter> && is_integral_v<_Diff>) {
; 1225 :         // ask an iterator to assert that the iterator moved _Off positions is valid, and unwrap
; 1226 :         using _IDiff     = _Iter_diff_t<_Remove_cvref_t<_Iter>>;
; 1227 :         using _CDiff     = common_type_t<_Diff, _IDiff>;
; 1228 :         const auto _COff = static_cast<_CDiff>(_Off);
; 1229 : 
; 1230 :         _STL_ASSERT(_COff <= static_cast<_CDiff>(_Max_possible_v<_IDiff>)
; 1231 :                         && (is_unsigned_v<_Diff> || static_cast<_CDiff>(_Min_possible_v<_IDiff>) <= _COff),
; 1232 :             "integer overflow");
; 1233 :         (void) _COff;
; 1234 : 
; 1235 :         _It._Verify_offset(static_cast<_IDiff>(_Off));
; 1236 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rax, QWORD PTR [rcx]

; 1237 :     } else if constexpr (_Unwrappable_for_unverified_v<_Iter>) {
; 1238 :         // iterator doesn't support offset-based asserts, or offset unknown; defer to unverified unwrap
; 1239 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1240 :     } else {
; 1241 :         // pass through iterator that doesn't participate in checking
; 1242 :         return static_cast<_Iter&&>(_It);
; 1243 :     }
; 1244 : }

	ret	0
??$_Get_unwrapped_n@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@_J@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@_J@Z ENDP ; std::_Get_unwrapped_n<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &,__int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$find_if@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@V10@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_First$ = 56
_Last$ = 64
_Pred$dead$ = 72
??$find_if@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@V10@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@@Z PROC ; std::find_if<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,`Util::IsNumber'::`2'::<lambda_1> >, COMDAT

; 6311 : _NODISCARD _CONSTEXPR20 _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	rdi, rdx
	mov	rsi, rcx

; 6312 :     _Adl_verify_range(_First, _Last);
; 6313 :     auto _UFirst      = _Get_unwrapped(_First);
; 6314 :     const auto _ULast = _Get_unwrapped(_Last);
; 6315 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rdx, r8
	je	SHORT $LN15@find_if
	npad	3
$LL4@find_if:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Util.cpp

; 163  : 		Number.end(), [](unsigned char c) { return !std::isdigit(c); }) == Number.end();

	movzx	ecx, BYTE PTR [rdi]
	call	QWORD PTR __imp_isdigit
	test	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 6316 :         if (_Pred(*_UFirst)) {

	je	SHORT $LN14@find_if

; 6312 :     _Adl_verify_range(_First, _Last);
; 6313 :     auto _UFirst      = _Get_unwrapped(_First);
; 6314 :     const auto _ULast = _Get_unwrapped(_Last);
; 6315 :     for (; _UFirst != _ULast; ++_UFirst) {

	inc	rdi
	cmp	rdi, rbx
	jne	SHORT $LL4@find_if
$LN14@find_if:

; 6317 :             break;
; 6318 :         }
; 6319 :     }
; 6320 : 
; 6321 :     _Seek_wrapped(_First, _UFirst);
; 6322 :     return _First;
; 6323 : }

	mov	QWORD PTR [rsi], rdi
	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN15@find_if:
	mov	rbx, QWORD PTR [rsp+56]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+64]
	mov	QWORD PTR [rcx], rdx
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$find_if@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@@std@@YA?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@V10@V10@V<lambda_1>@?1??IsNumber@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z@@Z ENDP ; std::find_if<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,`Util::IsNumber'::`2'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;
; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rax, QWORD PTR [rcx]

; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?A_TAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ??$?RD$0A@@?$default_delete@$$BY0A@D@std@@QEBAXPEAD@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
??$?RD$0A@@?$default_delete@$$BY0A@D@std@@QEBAXPEAD@Z PROC ; std::default_delete<char [0]>::operator()<char,0>, COMDAT

; 3193 :         static_assert(0 < sizeof(_Uty), "can't delete an incomplete type");
; 3194 :         delete[] _Ptr;

	mov	rcx, rdx
	jmp	??_V@YAXPEAX@Z				; operator delete[]
??$?RD$0A@@?$default_delete@$$BY0A@D@std@@QEBAXPEAD@Z ENDP ; std::default_delete<char [0]>::operator()<char,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ??$?R_W$0A@@?$default_delete@$$BY0A@_W@std@@QEBAXPEA_W@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
??$?R_W$0A@@?$default_delete@$$BY0A@_W@std@@QEBAXPEA_W@Z PROC ; std::default_delete<wchar_t [0]>::operator()<wchar_t,0>, COMDAT

; 3193 :         static_assert(0 < sizeof(_Uty), "can't delete an incomplete type");
; 3194 :         delete[] _Ptr;

	mov	rcx, rdx
	jmp	??_V@YAXPEAX@Z				; operator delete[]
??$?R_W$0A@@?$default_delete@$$BY0A@_W@std@@QEBAXPEA_W@Z ENDP ; std::default_delete<wchar_t [0]>::operator()<wchar_t,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z
_TEXT	SEGMENT
this$ = 80
_Size_increase$ = 88
_Fn$dead$ = 96
??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<`std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve'::`2'::<lambda_1> >, COMDAT

; 4761 :     _CONSTEXPR20 basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN74:
	push	rbx
	push	rdi
	push	r14
	sub	rsp, 48					; 00000030H

; 4762 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4763 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4764 :         auto& _My_data            = _Mypair._Myval2;
; 4765 :         const size_type _Old_size = _My_data._Mysize;

	mov	r14, QWORD PTR [rcx+16]

; 4766 :         if (max_size() - _Old_size < _Size_increase) {

	mov	rbx, 9223372036854775806		; 7ffffffffffffffeH
	mov	rax, rbx
	mov	rdi, rcx
	sub	rax, r14
	cmp	rax, rdx
	jb	$LN72@Reallocate

; 4768 :         }
; 4769 : 
; 4770 :         const size_type _New_size     = _Old_size + _Size_increase;
; 4771 :         const size_type _Old_capacity = _My_data._Myres;

	mov	QWORD PTR [rsp+96], rbp
	mov	rbp, QWORD PTR [rcx+24]
	mov	QWORD PTR [rsp+40], rsi
	mov	QWORD PTR [rsp+32], r15
	lea	r15, QWORD PTR [rdx+r14]

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rdx, r15
	or	rdx, 7
	cmp	rdx, rbx

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	ja	SHORT $LN8@Reallocate

; 4716 :             return _Max;
; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

	mov	rcx, rbp
	mov	rax, rbx
	shr	rcx, 1
	sub	rax, rcx
	cmp	rbp, rax
	ja	SHORT $LN8@Reallocate

; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	lea	rax, QWORD PTR [rcx+rbp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 47   :     return _Left < _Right ? _Right : _Left;

	mov	rbx, rdx
	cmp	rdx, rax
	cmovb	rbx, rax
$LN8@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4774 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	lea	rdx, QWORD PTR [rbx+1]
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate

; 4775 : 
; 4776 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 4777 :         _My_data._Orphan_all();
; 4778 :         _ASAN_STRING_REMOVE(*this);
; 4779 :         _My_data._Mysize      = _New_size;

	mov	QWORD PTR [rdi+16], r15
	mov	rsi, rax

; 4780 :         _My_data._Myres       = _New_capacity;

	mov	r15, QWORD PTR [rsp+32]

; 4781 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4782 :         if (_BUF_SIZE <= _Old_capacity) {

	lea	r8, QWORD PTR [r14*2+2]
	mov	QWORD PTR [rdi+24], rbx
	mov	rcx, rax
	cmp	rbp, 8
	jb	SHORT $LN3@Reallocate

; 4783 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

	mov	rbx, QWORD PTR [rdi]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rbx
	call	memcpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rbp*2+2]

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN38@Reallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rbx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rbx, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rbx-8]
	cmp	rax, 31
	ja	SHORT $LN35@Reallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rbx, rcx
$LN38@Reallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4787 :         } else {

	jmp	SHORT $LN4@Reallocate
$LN35@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN3@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rdi
	call	memcpy
$LN4@Reallocate:

; 4788 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);
; 4789 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);
; 4790 :         }
; 4791 : 
; 4792 :         _ASAN_STRING_CREATE(*this);
; 4793 :         return *this;

	mov	QWORD PTR [rdi], rsi
	mov	rax, rdi
	mov	rbp, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+40]

; 4794 :     }

	add	rsp, 48					; 00000030H
	pop	r14
	pop	rdi
	pop	rbx
	ret	0
$LN72@Reallocate:

; 4767 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN70@Reallocate:
??$_Reallocate_grow_by@V<lambda_1>@?1??reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z@$$V@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??reserve@01@QEAAX0@Z@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<`std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::reserve'::`2'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z
_TEXT	SEGMENT
<_Args_2>$GSCopy$1$ = 32
this$ = 112
_Size_increase$ = 120
_Fn$dead$ = 128
<_Args_0>$ = 136
<_Args_1>$ = 144
<_Args_2>$ = 152
<_Args_3>$ = 160
??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace'::`2'::<lambda_1>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>, COMDAT

; 4761 :     _CONSTEXPR20 basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN153:
	push	rbx
	push	rbp
	push	rsi
	push	r12
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR <_Args_2>$[rsp]

; 4762 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4763 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4764 :         auto& _My_data            = _Mypair._Myval2;
; 4765 :         const size_type _Old_size = _My_data._Mysize;
; 4766 :         if (max_size() - _Old_size < _Size_increase) {

	mov	rbx, 9223372036854775807		; 7fffffffffffffffH
	mov	rbp, QWORD PTR [rcx+16]
	mov	r12, r9
	mov	QWORD PTR <_Args_2>$GSCopy$1$[rsp], rax
	mov	rsi, rcx
	mov	rax, rbx
	sub	rax, rbp
	cmp	rax, rdx
	jb	$LN150@Reallocate

; 4768 :         }
; 4769 : 
; 4770 :         const size_type _New_size     = _Old_size + _Size_increase;
; 4771 :         const size_type _Old_capacity = _My_data._Myres;

	mov	QWORD PTR [rsp+56], r14
	mov	r14, QWORD PTR [rcx+24]
	mov	QWORD PTR [rsp+48], r15
	lea	r15, QWORD PTR [rdx+rbp]

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rdx, r15
	or	rdx, 15
	cmp	rdx, rbx

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	ja	SHORT $LN8@Reallocate

; 4716 :             return _Max;
; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

	mov	rcx, r14
	mov	rax, rbx
	shr	rcx, 1
	sub	rax, rcx
	cmp	r14, rax
	ja	SHORT $LN8@Reallocate

; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	lea	rax, QWORD PTR [rcx+r14]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 47   :     return _Left < _Right ? _Right : _Left;

	mov	rbx, rdx
	cmp	rdx, rax
	cmovb	rbx, rax
$LN8@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4774 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rcx, rbx
	mov	QWORD PTR [rsp+128], rdi
	add	rcx, 1
	mov	QWORD PTR [rsp+64], r13
	mov	rax, -1
	cmovb	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN18@Reallocate

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	$LN151@Reallocate

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN72@Reallocate

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rdi, QWORD PTR [rax+39]
	and	rdi, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rdi-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN16@Reallocate
$LN18@Reallocate:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rcx, rcx
	je	SHORT $LN19@Reallocate

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN16@Reallocate
$LN19@Reallocate:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	xor	edi, edi
$LN16@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4780 :         _My_data._Myres       = _New_capacity;

	sub	rbp, QWORD PTR <_Args_1>$[rsp]

; 4781 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4782 :         if (_BUF_SIZE <= _Old_capacity) {

	mov	r8, r12
	mov	QWORD PTR [rsi+24], rbx
	sub	rbp, r12
	mov	rbx, QWORD PTR <_Args_3>$[rsp]
	mov	rcx, rdi
	mov	QWORD PTR [rsi+16], r15
	lea	r15, QWORD PTR [r12+rdi]
	lea	r13, QWORD PTR [rbx+r15]
	cmp	r14, 16
	jb	SHORT $LN3@Reallocate

; 4783 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

	mov	rbx, QWORD PTR [rsi]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rbx
	call	memcpy
	mov	r8, QWORD PTR <_Args_3>$[rsp]
	mov	rcx, r15
	mov	rdx, QWORD PTR <_Args_2>$GSCopy$1$[rsp]
	call	memcpy

; 3773 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off + _Nx, _Old_size - _Nx - _Off + 1);

	lea	rdx, QWORD PTR [r12+rbx]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rcx, r13

; 3773 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off + _Nx, _Old_size - _Nx - _Off + 1);

	add	rdx, QWORD PTR <_Args_1>$[rsp]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	lea	r8, QWORD PTR [rbp+1]
	call	memcpy

; 4784 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);
; 4785 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

	lea	rdx, QWORD PTR [r14+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN75@Reallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rbx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rbx, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rbx-8]
	cmp	rax, 31
	ja	SHORT $LN72@Reallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rbx, rcx
$LN75@Reallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4787 :         } else {

	jmp	SHORT $LN4@Reallocate
$LN72@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN3@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rsi
	call	memcpy
	mov	rdx, QWORD PTR <_Args_2>$GSCopy$1$[rsp]
	mov	r8, rbx
	mov	rcx, r15
	call	memcpy

; 3773 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off + _Nx, _Old_size - _Nx - _Off + 1);

	lea	rdx, QWORD PTR [r12+rsi]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rcx, r13

; 3773 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off + _Nx, _Old_size - _Nx - _Off + 1);

	add	rdx, QWORD PTR <_Args_1>$[rsp]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	lea	r8, QWORD PTR [rbp+1]
	call	memcpy
$LN4@Reallocate:

; 4788 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);
; 4789 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);
; 4790 :         }
; 4791 : 
; 4792 :         _ASAN_STRING_CREATE(*this);
; 4793 :         return *this;

	mov	QWORD PTR [rsi], rdi
	mov	rax, rsi
	mov	r13, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+128]
	mov	r14, QWORD PTR [rsp+56]
	mov	r15, QWORD PTR [rsp+48]

; 4794 :     }

	add	rsp, 72					; 00000048H
	pop	r12
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN151@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN150@Reallocate:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4767 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN148@Reallocate:
??$_Reallocate_grow_by@V<lambda_1>@?1??replace@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K_KQEBD0@Z@_K_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??replace@01@QEAAAEAV01@0_KQEBD0@Z@11PEBD1@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::replace'::`2'::<lambda_1>,unsigned __int64,unsigned __int64,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?_Verify_offset@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAX_J@Z
_TEXT	SEGMENT
this$dead$ = 8
_Off$dead$ = 16
?_Verify_offset@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAX_J@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Verify_offset, COMDAT

; 1915 : #if _ITERATOR_DEBUG_LEVEL >= 1
; 1916 :         if (_Off == 0) {
; 1917 :             return;
; 1918 :         }
; 1919 : 
; 1920 :         _STL_ASSERT(_Ptr, "cannot seek value-initialized string iterator");
; 1921 :         const auto _Mycont = static_cast<const _Mystr*>(this->_Getcont());
; 1922 :         _STL_ASSERT(_Mycont, "cannot seek string iterator because the iterator was"
; 1923 :                              " invalidated (e.g. reallocation occurred, or the string was destroyed)");
; 1924 :         const auto _Contptr = _Mycont->_Myptr();
; 1925 :         const auto _Rawptr  = _Unfancy(_Ptr);
; 1926 : 
; 1927 :         if (_Off < 0) {
; 1928 :             _STL_VERIFY(_Contptr - _Rawptr <= _Off, "cannot seek string iterator before begin");
; 1929 :         }
; 1930 : 
; 1931 :         if (_Off > 0) {
; 1932 :             using _Size_type = typename _Mystr::size_type;
; 1933 :             const auto _Left = _Mycont->_Mysize - static_cast<_Size_type>(_Rawptr - _Contptr);
; 1934 :             _STL_VERIFY(static_cast<_Size_type>(_Off) <= _Left, "cannot seek string iterator after end");
; 1935 :         }
; 1936 : #else // ^^^ _ITERATOR_DEBUG_LEVEL >= 1 / _ITERATOR_DEBUG_LEVEL == 0 vvv
; 1937 :         (void) _Off;
; 1938 : #endif // _ITERATOR_DEBUG_LEVEL >= 1
; 1939 :     }

	ret	0
?_Verify_offset@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEBAX_J@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Verify_offset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ?release@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 8
?release@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAAPEA_WXZ PROC ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rcx]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rcx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 3455 :     }

	ret	0
?release@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAAPEA_WXZ ENDP ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
;	COMDAT ?get_deleter@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAAAEAU?$default_delete@$$BY0A@_W@2@XZ
_TEXT	SEGMENT
this$ = 8
?get_deleter@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAAAEAU?$default_delete@$$BY0A@_W@2@XZ PROC ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::get_deleter, COMDAT

; 3434 :         return _Mypair._Get_first();

	mov	rax, rcx

; 3435 :     }

	ret	0
?get_deleter@?$unique_ptr@$$BY0A@_WU?$default_delete@$$BY0A@_W@std@@@std@@QEAAAEAU?$default_delete@$$BY0A@_W@2@XZ ENDP ; std::unique_ptr<wchar_t [0],std::default_delete<wchar_t [0]> >::get_deleter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0AEAPEA_W@?$_Compressed_pair@U?$default_delete@$$BY0A@_W@std@@PEA_W$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEA_W@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
<_Val2_0>$ = 24
??$?0AEAPEA_W@?$_Compressed_pair@U?$default_delete@$$BY0A@_W@std@@PEA_W$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEA_W@Z PROC ; std::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1>::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1><wchar_t * &>, COMDAT

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??$?0AEAPEA_W@?$_Compressed_pair@U?$default_delete@$$BY0A@_W@std@@PEA_W$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEA_W@Z ENDP ; std::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1>::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1><wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Seek_wrapped@PEA_WAEAPEA_W@std@@YAXAEAPEA_W0@Z
_TEXT	SEGMENT
_It$ = 8
_UIt$ = 16
??$_Seek_wrapped@PEA_WAEAPEA_W@std@@YAXAEAPEA_W0@Z PROC	; std::_Seek_wrapped<wchar_t *,wchar_t * &>, COMDAT

; 1256 :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 1257 :         _It._Seek_to(_STD forward<_UIter>(_UIt));
; 1258 :     } else {
; 1259 :         _It = _STD forward<_UIter>(_UIt);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax

; 1260 :     }
; 1261 : }

	ret	0
??$_Seek_wrapped@PEA_WAEAPEA_W@std@@YAXAEAPEA_W0@Z ENDP	; std::_Seek_wrapped<wchar_t *,wchar_t * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@U?$default_delete@$$BY0A@_W@std@@@std@@YA$$QEAU?$default_delete@$$BY0A@_W@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$default_delete@$$BY0A@_W@std@@@std@@YA$$QEAU?$default_delete@$$BY0A@_W@0@AEAU10@@Z PROC ; std::forward<std::default_delete<wchar_t [0]> >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@U?$default_delete@$$BY0A@_W@std@@@std@@YA$$QEAU?$default_delete@$$BY0A@_W@0@AEAU10@@Z ENDP ; std::forward<std::default_delete<wchar_t [0]> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0U?$default_delete@$$BY0A@_W@std@@PEA_W@?$_Compressed_pair@U?$default_delete@$$BY0A@_W@std@@PEA_W$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@$$BY0A@_W@1@$$QEAPEA_W@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
<_Val2_0>$ = 32
??$?0U?$default_delete@$$BY0A@_W@std@@PEA_W@?$_Compressed_pair@U?$default_delete@$$BY0A@_W@std@@PEA_W$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@$$BY0A@_W@1@$$QEAPEA_W@Z PROC ; std::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1>::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1><std::default_delete<wchar_t [0]>,wchar_t *>, COMDAT

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, QWORD PTR [r9]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??$?0U?$default_delete@$$BY0A@_W@std@@PEA_W@?$_Compressed_pair@U?$default_delete@$$BY0A@_W@std@@PEA_W$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@$$BY0A@_W@1@$$QEAPEA_W@Z ENDP ; std::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1>::_Compressed_pair<std::default_delete<wchar_t [0]>,wchar_t *,1><std::default_delete<wchar_t [0]>,wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEADAEAPEAD@std@@YAPEADAEAPEAD0@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEADAEAPEAD@std@@YAPEADAEAPEAD0@Z PROC	; std::exchange<char *,char * &>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEADAEAPEAD@std@@YAPEADAEAPEAD0@Z ENDP	; std::exchange<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$default_delete@$$BY0A@D@std@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@U?$default_delete@$$BY0A@D@std@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::default_delete<char [0]>,char *,1>::_Compressed_pair<std::default_delete<char [0]>,char *,1><>, COMDAT

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	QWORD PTR [rcx], 0
	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@U?$default_delete@$$BY0A@D@std@@PEAD$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<char [0]>,char *,1>::_Compressed_pair<std::default_delete<char [0]>,char *,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEAW4__std_win_error@@@std@@YAAEAW4__std_win_error@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAW4__std_win_error@@@std@@YAAEAW4__std_win_error@@AEAW41@@Z PROC ; std::forward<enum __std_win_error &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEAW4__std_win_error@@@std@@YAAEAW4__std_win_error@@AEAW41@@Z ENDP ; std::forward<enum __std_win_error &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@W4__std_win_error@@@std@@YA$$QEAW4__std_win_error@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@W4__std_win_error@@@std@@YA$$QEAW4__std_win_error@@AEAW41@@Z PROC ; std::forward<enum __std_win_error>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@W4__std_win_error@@@std@@YA$$QEAW4__std_win_error@@AEAW41@@Z ENDP ; std::forward<enum __std_win_error>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@AEAPEAD@std@@YAXAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@AEAPEAD@Z
_TEXT	SEGMENT
_It$ = 8
_UIt$ = 16
??$_Seek_wrapped@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@AEAPEAD@std@@YAXAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@AEAPEAD@Z PROC ; std::_Seek_wrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,char * &>, COMDAT

; 1256 :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 1257 :         _It._Seek_to(_STD forward<_UIter>(_UIt));

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax

; 1258 :     } else {
; 1259 :         _It = _STD forward<_UIter>(_UIt);
; 1260 :     }
; 1261 : }

	ret	0
??$_Seek_wrapped@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@AEAPEAD@std@@YAXAEAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@AEAPEAD@Z ENDP ; std::_Seek_wrapped<std::_String_iterator<std::_String_val<std::_Simple_types<char> > >,char * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEA_W$$T@std@@YAPEA_WAEAPEA_W$$QEA$$T@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEA_W$$T@std@@YAPEA_WAEAPEA_W$$QEA$$T@Z PROC ; std::exchange<wchar_t *,std::nullptr_t>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEA_W$$T@std@@YAPEA_WAEAPEA_W$$QEA$$T@Z ENDP ; std::exchange<wchar_t *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?_Seek_to@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAXPEBD@Z
_TEXT	SEGMENT
this$ = 8
_It$ = 16
?_Seek_to@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAXPEBD@Z PROC ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Seek_to, COMDAT

; 2038 :         _Ptr = _Refancy<pointer>(const_cast<value_type*>(_It));

	mov	QWORD PTR [rcx], rdx

; 2039 :     }

	ret	0
?_Seek_to@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QEAAXPEBD@Z ENDP ; std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >::_Seek_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@PEA_W@std@@YA$$QEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@PEA_W@std@@YA$$QEAPEA_WAEAPEA_W@Z PROC	; std::forward<wchar_t *>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@PEA_W@std@@YA$$QEAPEA_WAEAPEA_W@Z ENDP	; std::forward<wchar_t *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Refancy@PEBD$0A@@std@@YAPEBDPEBD@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Refancy@PEBD$0A@@std@@YAPEBDPEBD@Z PROC		; std::_Refancy<char const *,0>, COMDAT

; 297  :     return _Ptr;

	mov	rax, rcx

; 298  : }

	ret	0
??$_Refancy@PEBD$0A@@std@@YAPEBDPEBD@Z ENDP		; std::_Refancy<char const *,0>
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
	movsxd	rax, DWORD PTR [rcx-4]
	sub	rcx, rax
	jmp	??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@GHIGLIIA@current_path?$CI?$CJ@		; `string'
PUBLIC	??_C@_0M@IFIJFFAN@?1WorkingDir@			; `string'
PUBLIC	??_C@_0BA@LJMNEACM@System?1Resource@		; `string'
PUBLIC	??_C@_0BL@LIPGCHMK@ResourceSizeTable?4Product?4@ ; `string'
PUBLIC	??_C@_02CFKBDFGI@?1?2@				; `string'
PUBLIC	??_C@_05HCCBLEBO@Save?1@			; `string'
PUBLIC	??_C@_0P@EBEHGJBJ@?4rsizetable?4zs@		; `string'
PUBLIC	??_C@_0BD@NNDIHOB@RomFS?5path?5invalid@		; `string'
PUBLIC	??_C@_0O@BICHJELE@EditorModels?1@		; `string'
PUBLIC	??_C@_0BD@IKBLPJFL@Pack?1ZsDic?4pack?4zs@	; `string'
PUBLIC	??_C@_06MJDIICIN@Editor@			; `string'
PUBLIC	??_C@_0M@OJIBHFOA@Initialized@			; `string'
EXTRN	__std_fs_get_current_path:PROC
;	COMDAT ??_C@_0M@OJIBHFOA@Initialized@
CONST	SEGMENT
??_C@_0M@OJIBHFOA@Initialized@ DB 'Initialized', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06MJDIICIN@Editor@
CONST	SEGMENT
??_C@_06MJDIICIN@Editor@ DB 'Editor', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IKBLPJFL@Pack?1ZsDic?4pack?4zs@
CONST	SEGMENT
??_C@_0BD@IKBLPJFL@Pack?1ZsDic?4pack?4zs@ DB 'Pack/ZsDic.pack.zs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BICHJELE@EditorModels?1@
CONST	SEGMENT
??_C@_0O@BICHJELE@EditorModels?1@ DB 'EditorModels/', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NNDIHOB@RomFS?5path?5invalid@
CONST	SEGMENT
??_C@_0BD@NNDIHOB@RomFS?5path?5invalid@ DB 'RomFS path invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EBEHGJBJ@?4rsizetable?4zs@
CONST	SEGMENT
??_C@_0P@EBEHGJBJ@?4rsizetable?4zs@ DB '.rsizetable.zs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05HCCBLEBO@Save?1@
CONST	SEGMENT
??_C@_05HCCBLEBO@Save?1@ DB 'Save/', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02CFKBDFGI@?1?2@
CONST	SEGMENT
??_C@_02CFKBDFGI@?1?2@ DB '/\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LIPGCHMK@ResourceSizeTable?4Product?4@
CONST	SEGMENT
??_C@_0BL@LIPGCHMK@ResourceSizeTable?4Product?4@ DB 'ResourceSizeTable.Pr'
	DB	'oduct.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LJMNEACM@System?1Resource@
CONST	SEGMENT
??_C@_0BA@LJMNEACM@System?1Resource@ DB 'System/Resource', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IFIJFFAN@?1WorkingDir@
CONST	SEGMENT
??_C@_0M@IFIJFFAN@?1WorkingDir@ DB '/WorkingDir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GHIGLIIA@current_path?$CI?$CJ@
CONST	SEGMENT
??_C@_0P@GHIGLIIA@current_path?$CI?$CJ@ DB 'current_path()', 00H ; `string'
PUBLIC	??$_Traits_find_last_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z ; std::_Traits_find_last_of<std::char_traits<char>,0>
PUBLIC	??$_Traits_find_last_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z ; std::_Traits_find_last_of<std::char_traits<char>,1>
PUBLIC	?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_of
PUBLIC	?InitializeWithEdtc@Editor@@YAXXZ		; Editor::InitializeWithEdtc
PUBLIC	?DetectInternalGameVersion@Editor@@YAXXZ	; Editor::DetectInternalGameVersion
PUBLIC	?current_path@filesystem@std@@YA?AVpath@12@XZ	; std::filesystem::current_path
PUBLIC	?_Current_path@filesystem@std@@YA?AW4__std_win_error@@AEAVpath@12@@Z ; std::filesystem::_Current_path
PUBLIC	??0path@filesystem@std@@QEAA@$$QEAV012@@Z	; std::filesystem::path::path
PUBLIC	?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Editor::GetBfresFile
PUBLIC	?GetInternalGameVersion@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; Editor::GetInternalGameVersion
PUBLIC	?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Editor::GetWorkingDirFile
PUBLIC	?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z ; Editor::GetRomFSFile
PUBLIC	?BancDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::BancDir
PUBLIC	?Identifier@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::Identifier
PUBLIC	?StaticCompoundDirectory@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::StaticCompoundDirectory
PUBLIC	?StaticCompoundPrefix@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::StaticCompoundPrefix
PUBLIC	?BancPrefix@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::BancPrefix
PUBLIC	?RomFSDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::RomFSDir
PUBLIC	?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::WorkingDir
PUBLIC	?StaticActorsByml@Editor@@3VBymlFile@@A		; Editor::StaticActorsByml
PUBLIC	?DynamicActorsByml@Editor@@3VBymlFile@@A	; Editor::DynamicActorsByml
PUBLIC	?ExportDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::ExportDir
PUBLIC	?InternalGameVersion@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::InternalGameVersion
PUBLIC	?BfresDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::BfresDir
?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 020H DUP (?) ; Editor::WorkingDir
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_last_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z DD imagerel $LN25
	DD	imagerel $LN25+144
	DD	imagerel $unwind$??$_Traits_find_last_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_last_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z DD imagerel $LN56
	DD	imagerel $LN56+216
	DD	imagerel $unwind$??$_Traits_find_last_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DD imagerel $LN68
	DD	imagerel $LN68+248
	DD	imagerel $unwind$?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InitializeWithEdtc@Editor@@YAXXZ DD imagerel $LN74
	DD	imagerel $LN74+315
	DD	imagerel $unwind$?InitializeWithEdtc@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DetectInternalGameVersion@Editor@@YAXXZ DD imagerel $LN909
	DD	imagerel $LN909+3064
	DD	imagerel $unwind$?DetectInternalGameVersion@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$22@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA DD imagerel ?dtor$22@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA
	DD	imagerel ?dtor$22@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA+43
	DD	imagerel $unwind$?dtor$22@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$15@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA DD imagerel ?dtor$15@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA
	DD	imagerel ?dtor$15@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA+38
	DD	imagerel $unwind$?dtor$15@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FStaticCompoundPrefix@Editor@@YAXXZ DD imagerel ??__FStaticCompoundPrefix@Editor@@YAXXZ
	DD	imagerel ??__FStaticCompoundPrefix@Editor@@YAXXZ+100
	DD	imagerel $unwind$??__FStaticCompoundPrefix@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FStaticCompoundDirectory@Editor@@YAXXZ DD imagerel ??__FStaticCompoundDirectory@Editor@@YAXXZ
	DD	imagerel ??__FStaticCompoundDirectory@Editor@@YAXXZ+100
	DD	imagerel $unwind$??__FStaticCompoundDirectory@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FInternalGameVersion@Editor@@YAXXZ DD imagerel ??__FInternalGameVersion@Editor@@YAXXZ
	DD	imagerel ??__FInternalGameVersion@Editor@@YAXXZ+100
	DD	imagerel $unwind$??__FInternalGameVersion@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FIdentifier@Editor@@YAXXZ DD imagerel ??__FIdentifier@Editor@@YAXXZ
	DD	imagerel ??__FIdentifier@Editor@@YAXXZ+100
	DD	imagerel $unwind$??__FIdentifier@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FBancPrefix@Editor@@YAXXZ DD imagerel ??__FBancPrefix@Editor@@YAXXZ
	DD	imagerel ??__FBancPrefix@Editor@@YAXXZ+100
	DD	imagerel $unwind$??__FBancPrefix@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FBancDir@Editor@@YAXXZ DD imagerel ??__FBancDir@Editor@@YAXXZ
	DD	imagerel ??__FBancDir@Editor@@YAXXZ+100
	DD	imagerel $unwind$??__FBancDir@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FDynamicActorsByml@Editor@@YAXXZ DD imagerel ??__FDynamicActorsByml@Editor@@YAXXZ
	DD	imagerel ??__FDynamicActorsByml@Editor@@YAXXZ+68
	DD	imagerel $unwind$??__FDynamicActorsByml@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EDynamicActorsByml@Editor@@YAXXZ DD imagerel ??__EDynamicActorsByml@Editor@@YAXXZ
	DD	imagerel ??__EDynamicActorsByml@Editor@@YAXXZ+52
	DD	imagerel $unwind$??__EDynamicActorsByml@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FStaticActorsByml@Editor@@YAXXZ DD imagerel ??__FStaticActorsByml@Editor@@YAXXZ
	DD	imagerel ??__FStaticActorsByml@Editor@@YAXXZ+68
	DD	imagerel $unwind$??__FStaticActorsByml@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EStaticActorsByml@Editor@@YAXXZ DD imagerel ??__EStaticActorsByml@Editor@@YAXXZ
	DD	imagerel ??__EStaticActorsByml@Editor@@YAXXZ+52
	DD	imagerel $unwind$??__EStaticActorsByml@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FExportDir@Editor@@YAXXZ DD imagerel ??__FExportDir@Editor@@YAXXZ
	DD	imagerel ??__FExportDir@Editor@@YAXXZ+100
	DD	imagerel $unwind$??__FExportDir@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FBfresDir@Editor@@YAXXZ DD imagerel ??__FBfresDir@Editor@@YAXXZ
	DD	imagerel ??__FBfresDir@Editor@@YAXXZ+100
	DD	imagerel $unwind$??__FBfresDir@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FRomFSDir@Editor@@YAXXZ DD imagerel ??__FRomFSDir@Editor@@YAXXZ
	DD	imagerel ??__FRomFSDir@Editor@@YAXXZ+100
	DD	imagerel $unwind$??__FRomFSDir@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FWorkingDir@Editor@@YAXXZ DD imagerel ??__FWorkingDir@Editor@@YAXXZ
	DD	imagerel ??__FWorkingDir@Editor@@YAXXZ+100
	DD	imagerel $unwind$??__FWorkingDir@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EWorkingDir@Editor@@YAXXZ DD imagerel ??__EWorkingDir@Editor@@YAXXZ
	DD	imagerel ??__EWorkingDir@Editor@@YAXXZ+319
	DD	imagerel $unwind$??__EWorkingDir@Editor@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?current_path@filesystem@std@@YA?AVpath@12@XZ DD imagerel $LN99
	DD	imagerel $LN99+274
	DD	imagerel $unwind$?current_path@filesystem@std@@YA?AVpath@12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??current_path@filesystem@std@@YA?AVpath@12@XZ@4HA DD imagerel ?dtor$0@?0??current_path@filesystem@std@@YA?AVpath@12@XZ@4HA
	DD	imagerel ?dtor$0@?0??current_path@filesystem@std@@YA?AVpath@12@XZ@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??current_path@filesystem@std@@YA?AVpath@12@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Current_path@filesystem@std@@YA?AW4__std_win_error@@AEAVpath@12@@Z DD imagerel $LN78
	DD	imagerel $LN78+205
	DD	imagerel $unwind$?_Current_path@filesystem@std@@YA?AW4__std_win_error@@AEAVpath@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DD imagerel $LN177
	DD	imagerel $LN177+701
	DD	imagerel $unwind$?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInternalGameVersion@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD imagerel $LN7
	DD	imagerel $LN7+30
	DD	imagerel $unwind$?GetInternalGameVersion@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DD imagerel $LN124
	DD	imagerel $LN124+462
	DD	imagerel $unwind$?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z DD imagerel $LN177
	DD	imagerel $LN177+710
	DD	imagerel $unwind$?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z
?BancDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; Editor::BancDir
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DQ	0000000000000000H
	DQ	000000000000000fH
?Identifier@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; Editor::Identifier
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DQ	0000000000000000H
	DQ	000000000000000fH
?StaticCompoundDirectory@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; Editor::StaticCompoundDirectory
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DQ	0000000000000000H
	DQ	000000000000000fH
?StaticCompoundPrefix@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; Editor::StaticCompoundPrefix
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DQ	0000000000000000H
	DQ	000000000000000fH
?BancPrefix@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; Editor::BancPrefix
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DQ	0000000000000000H
	DQ	000000000000000fH
?RomFSDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; Editor::RomFSDir
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DQ	0000000000000000H
	DQ	000000000000000fH
?StaticActorsByml@Editor@@3VBymlFile@@A DB 048H DUP (?)
	DB	0ffH					; Editor::StaticActorsByml
	DB	3 DUP(00H)
	DD	00H
	DD	00H
	ORG $+140
?DynamicActorsByml@Editor@@3VBymlFile@@A DB 048H DUP (?)
	DB	0ffH					; Editor::DynamicActorsByml
	DB	3 DUP(00H)
	DD	00H
	DD	00H
	ORG $+140
?ExportDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; Editor::ExportDir
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DQ	0000000000000000H
	DQ	000000000000000fH
?InternalGameVersion@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 031H ; Editor::InternalGameVersion
	DB	030H
	DB	030H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DQ	0000000000000003H
	DQ	000000000000000fH
?BfresDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; Editor::BfresDir
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DQ	0000000000000000H
	DQ	000000000000000fH
_DATA	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z DB 0aH
	DB	'5', 02H
	DB	02H
	DB	01dH, 06H
	DB	04H
	DB	'"'
	DB	02H
	DB	0d2H
	DB	00H
	DB	'@'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	041H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z DB 028H
	DD	imagerel $stateUnwindMap$?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z
	DD	imagerel $ip2state$?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z DD 0b2919H
	DD	0243417H
	DD	01a0117H
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z
	DD	0caH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DB 0aH
	DB	'e', 03H
	DB	02H
	DB	0a8H
	DB	04H
	DB	'"'
	DB	02H
	DB	0ccH
	DB	00H
	DB	'<'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DB 028H
	DD	imagerel $stateUnwindMap$?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
	DD	imagerel $ip2state$?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DD 0a2519H
	DD	0155416H
	DD	0143416H
	DD	0f012b216H
	DD	0c00ee010H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
	DD	052H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInternalGameVersion@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DB 0aH
	DB	'%', 02H
	DB	02H
	DB	09H, 06H
	DB	04H
	DB	'"'
	DB	02H
	DB	0d2H
	DB	00H
	DB	'@'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	041H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DB 028H
	DD	imagerel $stateUnwindMap$?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
	DD	imagerel $ip2state$?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z DD 0b2919H
	DD	0243417H
	DD	01a0117H
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
	DD	0caH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Current_path@filesystem@std@@YA?AW4__std_win_error@@AEAVpath@12@@Z DB 02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Current_path@filesystem@std@@YA?AW4__std_win_error@@AEAVpath@12@@Z DB 060H
	DD	imagerel $ip2state$?_Current_path@filesystem@std@@YA?AW4__std_win_error@@AEAVpath@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Current_path@filesystem@std@@YA?AW4__std_win_error@@AEAVpath@12@@Z DD 081219H
	DD	0e5412H
	DD	0d3412H
	DD	0e00e7212H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Current_path@filesystem@std@@YA?AW4__std_win_error@@AEAVpath@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??current_path@filesystem@std@@YA?AVpath@12@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?current_path@filesystem@std@@YA?AVpath@12@XZ DB 04H
	DB	08aH
	DB	04H
	DB	'}', 02H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?current_path@filesystem@std@@YA?AVpath@12@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??current_path@filesystem@std@@YA?AVpath@12@XZ@4HA
	DB	02eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?current_path@filesystem@std@@YA?AVpath@12@XZ DB 028H
	DD	imagerel $stateUnwindMap$?current_path@filesystem@std@@YA?AVpath@12@XZ
	DD	imagerel $ip2state$?current_path@filesystem@std@@YA?AVpath@12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?current_path@filesystem@std@@YA?AVpath@12@XZ DD 081211H
	DD	0105412H
	DD	0f3412H
	DD	0e00e9212H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?current_path@filesystem@std@@YA?AVpath@12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??__EWorkingDir@Editor@@YAXXZ DB 06H
	DB	01eH
	DB	00H
	DB	01cH
	DB	02H
	DB	0ceH
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??__EWorkingDir@Editor@@YAXXZ DB 04H
	DB	0aH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	0a0H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??__EWorkingDir@Editor@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$??__EWorkingDir@Editor@@YAXXZ
	DD	imagerel $ip2state$??__EWorkingDir@Editor@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EWorkingDir@Editor@@YAXXZ DD 040a11H
	DD	011340aH
	DD	07006d20aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??__EWorkingDir@Editor@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FWorkingDir@Editor@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FRomFSDir@Editor@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FBfresDir@Editor@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FExportDir@Editor@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??__EStaticActorsByml@Editor@@YAXXZ DB 04H
	DB	016H
	DB	06H
	DB	01aH
	DB	08H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??__EStaticActorsByml@Editor@@YAXXZ DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???__EStaticActorsByml@Editor@@YAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???__EStaticActorsByml@Editor@@YAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???__EStaticActorsByml@Editor@@YAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???__EStaticActorsByml@Editor@@YAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??__EStaticActorsByml@Editor@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$??__EStaticActorsByml@Editor@@YAXXZ
	DD	imagerel $ip2state$??__EStaticActorsByml@Editor@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EStaticActorsByml@Editor@@YAXXZ DD 010411H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??__EStaticActorsByml@Editor@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FStaticActorsByml@Editor@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??__EDynamicActorsByml@Editor@@YAXXZ DB 04H
	DB	016H
	DB	06H
	DB	01aH
	DB	08H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??__EDynamicActorsByml@Editor@@YAXXZ DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???__EDynamicActorsByml@Editor@@YAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???__EDynamicActorsByml@Editor@@YAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???__EDynamicActorsByml@Editor@@YAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???__EDynamicActorsByml@Editor@@YAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??__EDynamicActorsByml@Editor@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$??__EDynamicActorsByml@Editor@@YAXXZ
	DD	imagerel $ip2state$??__EDynamicActorsByml@Editor@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EDynamicActorsByml@Editor@@YAXXZ DD 010411H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??__EDynamicActorsByml@Editor@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FDynamicActorsByml@Editor@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FBancDir@Editor@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FBancPrefix@Editor@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FIdentifier@Editor@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FInternalGameVersion@Editor@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FStaticCompoundDirectory@Editor@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FStaticCompoundPrefix@Editor@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	0eaH
	DW	0105H
	DW	012bH
	DW	013fH
	DW	0b10H
	DW	0b28H
	DW	0b48H
	DW	0b5aH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$15@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$22@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DetectInternalGameVersion@Editor@@YAXXZ DB '$'
	DB	0c2H
	DB	00H
	DB	','
	DB	02H
	DB	01aH
	DB	04H
	DB	01cH
	DB	08H
	DB	091H, 07H
	DB	010H
	DB	0edH, 04H
	DB	014H
	DB	'y', 06H
	DB	016H
	DB	0a9H, 06H
	DB	0eH
	DB	'!', 09H
	DB	01cH
	DB	'q', 03H
	DB	01eH
	DB	'i', 03H
	DB	0eH
	DB	01H, 02H
	DB	00H
	DB	'L'
	DB	016H
	DB	01eH
	DB	0eH
	DB	014H
	DB	010H
	DB	','
	DB	014H
	DB	'4'
	DB	01cH
	DB	018H
	DB	016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DetectInternalGameVersion@Editor@@YAXXZ DB 01eH
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	03H
	DB	03aH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	0a1H
	DB	02H
	DB	03aH
	DD	imagerel ??1recursive_directory_iterator@filesystem@std@@QEAA@XZ
	DB	0c1H
	DB	05H
	DB	0aaH
	DD	imagerel ??1recursive_directory_iterator@filesystem@std@@QEAA@XZ
	DB	0c1H
	DB	05H
	DB	0eaH
	DD	imagerel ??1recursive_directory_iterator@filesystem@std@@QEAA@XZ
	DB	0c1H
	DB	05H
	DB	03aH
	DD	imagerel ??1recursive_directory_iterator@filesystem@std@@QEAA@XZ
	DB	081H
	DB	05H
	DB	03aH
	DD	imagerel ??1recursive_directory_iterator@filesystem@std@@QEAA@XZ
	DB	01H
	DB	06H
	DB	03eH
	DD	imagerel ?dtor$22@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA
	DB	062H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c0H
	DB	036H
	DD	imagerel ?dtor$15@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA
	DB	05aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e1H
	DB	04H
	DB	0c2H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e1H
	DB	04H
	DB	0b5H
	DB	02H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e1H
	DB	04H
	DB	042H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	061H
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?DetectInternalGameVersion@Editor@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?DetectInternalGameVersion@Editor@@YAXXZ
	DD	imagerel $ip2state$?DetectInternalGameVersion@Editor@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DetectInternalGameVersion@Editor@@YAXXZ DD 0d3819H
	DD	05c7427H
	DD	05b6427H
	DD	05a3427H
	DD	0540127H
	DD	0e016f018H
	DD	0c012d014H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?DetectInternalGameVersion@Editor@@YAXXZ
	DD	0292H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?InitializeWithEdtc@Editor@@YAXXZ DB 0aH
	DB	01aH
	DB	00H
	DB	'z'
	DB	02H
	DB	'H'
	DB	00H
	DB	'9', 02H
	DB	02H
	DB	'H'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?InitializeWithEdtc@Editor@@YAXXZ DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?InitializeWithEdtc@Editor@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?InitializeWithEdtc@Editor@@YAXXZ
	DD	imagerel $ip2state$?InitializeWithEdtc@Editor@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InitializeWithEdtc@Editor@@YAXXZ DD 040d11H
	DD	010340dH
	DD	05006b20dH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?InitializeWithEdtc@Editor@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DD 092919H
	DD	02b6417H
	DD	02a5417H
	DD	0283417H
	DD	0260117H
	DD	07010H
	DD	imagerel __GSHandlerCheck
	DD	0120H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_last_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z DD 092919H
	DD	02a6417H
	DD	0295417H
	DD	0283417H
	DD	0260117H
	DD	07010H
	DD	imagerel __GSHandlerCheck
	DD	0120H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_last_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
?WorkingDir$initializer$@Editor@@3P6AXXZEA DQ FLAT:??__EWorkingDir@Editor@@YAXXZ ; Editor::WorkingDir$initializer$
?RomFSDir$initializer$@Editor@@3P6AXXZEA DQ FLAT:??__FRomFSDir@Editor@@YAXXZ ; Editor::RomFSDir$initializer$
?BfresDir$initializer$@Editor@@3P6AXXZEA DQ FLAT:??__FBfresDir@Editor@@YAXXZ ; Editor::BfresDir$initializer$
?ExportDir$initializer$@Editor@@3P6AXXZEA DQ FLAT:??__FExportDir@Editor@@YAXXZ ; Editor::ExportDir$initializer$
?StaticActorsByml$initializer$@Editor@@3P6AXXZEA DQ FLAT:??__EStaticActorsByml@Editor@@YAXXZ ; Editor::StaticActorsByml$initializer$
?DynamicActorsByml$initializer$@Editor@@3P6AXXZEA DQ FLAT:??__EDynamicActorsByml@Editor@@YAXXZ ; Editor::DynamicActorsByml$initializer$
?BancDir$initializer$@Editor@@3P6AXXZEA DQ FLAT:??__FBancDir@Editor@@YAXXZ ; Editor::BancDir$initializer$
?BancPrefix$initializer$@Editor@@3P6AXXZEA DQ FLAT:??__FBancPrefix@Editor@@YAXXZ ; Editor::BancPrefix$initializer$
?Identifier$initializer$@Editor@@3P6AXXZEA DQ FLAT:??__FIdentifier@Editor@@YAXXZ ; Editor::Identifier$initializer$
?InternalGameVersion$initializer$@Editor@@3P6AXXZEA DQ FLAT:??__FInternalGameVersion@Editor@@YAXXZ ; Editor::InternalGameVersion$initializer$
?StaticCompoundDirectory$initializer$@Editor@@3P6AXXZEA DQ FLAT:??__FStaticCompoundDirectory@Editor@@YAXXZ ; Editor::StaticCompoundDirectory$initializer$
?StaticCompoundPrefix$initializer$@Editor@@3P6AXXZEA DQ FLAT:??__FStaticCompoundPrefix@Editor@@YAXXZ ; Editor::StaticCompoundPrefix$initializer$
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 112
LocalPath$GSCopy$ = 144
__$ReturnUdt$GSCopy$ = 144
buffer$5 = 152
__$ArrayPad$ = 200
__$ReturnUdt$ = 272
LocalPath$ = 280
Replaceable$ = 288
?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z PROC ; Editor::GetRomFSFile, COMDAT

; 45   : {

$LN177:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 208				; 000000d0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	movzx	r14d, r8b
	mov	rdi, rdx
	mov	r15, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	mov	QWORD PTR LocalPath$GSCopy$[rsp], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rdx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	mov	rbp, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rbp
	sub	rax, rcx
	cmp	rax, 5
	jb	$LN172@GetRomFSFi

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rax, rdx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdx+24], 16
	jb	SHORT $LN168@GetRomFSFi

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rdx]
$LN168@GetRomFSFi:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 5
	lea	r9, OFFSET FLAT:??_C@_05HCCBLEBO@Save?1@
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 46   : 	if (Util::FileExists(Editor::GetWorkingDirFile("Save/" + LocalPath)) && Replaceable)

	lea	rdx, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Editor::GetWorkingDirFile
	mov	rsi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rax

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rax+24], 16
	jb	SHORT $LN31@GetRomFSFi

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rax]
$LN31@GetRomFSFi:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h

; 241  :             return _stat64i32(_FileName, (struct _stat64i32*)_Stat);

	lea	rdx, QWORD PTR buffer$5[rsp]
	call	QWORD PTR __imp__stat64i32
	mov	ebx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rsi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 46   : 	if (Util::FileExists(Editor::GetWorkingDirFile("Save/" + LocalPath)) && Replaceable)

	test	ebx, ebx
	jne	SHORT $LN2@GetRomFSFi
	test	r14b, r14b
	je	SHORT $LN2@GetRomFSFi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rdi+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	sub	rbp, rcx
	cmp	rbp, 5
	jb	$LN173@GetRomFSFi

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rax, rdi

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdi+24], 16
	jb	SHORT $LN50@GetRomFSFi

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rdi]
$LN50@GetRomFSFi:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 5
	lea	r9, OFFSET FLAT:??_C@_05HCCBLEBO@Save?1@
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 48   : 		return Editor::GetWorkingDirFile("Save/" + LocalPath);

	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, r15
	call	?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Editor::GetWorkingDirFile
	jmp	$LN170@GetRomFSFi
$LN2@GetRomFSFi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4938 :     const auto _Left_size  = _Left.size();

	mov	r14, QWORD PTR ?RomFSDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16

; 4939 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 4940 :     if (_Left.max_size() - _Left_size < _Right_size) {

	mov	rax, rbp
	sub	rax, r14
	cmp	rax, 1
	jb	$LN174@GetRomFSFi

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r13, OFFSET FLAT:?RomFSDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::RomFSDir

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR ?RomFSDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24, 16
	cmovae	r13, QWORD PTR ?RomFSDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T1[rsp], xmm0
	xorps	xmm1, xmm1

; 2293 :     size_type _Mysize = 0; // current length of string

	movdqu	XMMWORD PTR $T1[rsp+16], xmm1

; 2787 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

	lea	r12, QWORD PTR [r14+1]

; 2788 :         size_type _New_capacity = _BUF_SIZE - 1;

	mov	esi, 15

; 2789 :         auto& _My_data          = _Mypair._Myval2;
; 2790 :         _Elem* _Ptr             = _My_data._Bx._Buf;

	lea	rbx, QWORD PTR $T1[rsp]

; 2791 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2792 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws
; 2793 : 
; 2794 :         if (_New_capacity < _New_size) {

	cmp	r12, rsi
	jbe	SHORT $LN72@GetRomFSFi

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rsi, r12
	or	rsi, 15
	cmp	rsi, rbp

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN95@GetRomFSFi

; 4716 :             return _Max;

	mov	rsi, rbp
	jmp	SHORT $LN94@GetRomFSFi
$LN95@GetRomFSFi:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	mov	eax, 22
	cmp	rsi, rax
	cmovb	rsi, rax
$LN94@GetRomFSFi:

; 2796 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

	mov	rcx, rsi
	add	rcx, 1
	mov	rax, -1
	cmovb	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN104@GetRomFSFi

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	$LN175@GetRomFSFi

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN147@GetRomFSFi

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rbx, QWORD PTR [rax+39]
	and	rbx, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rbx-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN102@GetRomFSFi
$LN104@GetRomFSFi:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rcx, rcx
	je	SHORT $LN105@GetRomFSFi

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN102@GetRomFSFi
$LN105@GetRomFSFi:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	xor	ebx, ebx
$LN102@GetRomFSFi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2798 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

	mov	QWORD PTR $T1[rsp], rbx
$LN72@GetRomFSFi:

; 2799 : 
; 2800 :             _Start_element_lifetimes(_Ptr, _New_capacity + 1);
; 2801 :         }
; 2802 : 
; 2803 :         _My_data._Mysize = _New_size;

	mov	QWORD PTR $T1[rsp+16], r12

; 2804 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T1[rsp+24], rsi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, r14
	mov	rdx, r13
	mov	rcx, rbx
	call	memcpy
	mov	BYTE PTR [rbx+r14], 47			; 0000002fH

; 2807 :         _Traits::assign(_Ptr[_New_size], _Elem());

	mov	BYTE PTR [rbx+r12], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 51   : 	return Editor::RomFSDir + "/" + LocalPath;

	mov	r8, rdi
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r15
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T1[rsp+24]
	cmp	rdx, 16
	jb	SHORT $LN138@GetRomFSFi

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN150@GetRomFSFi

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN150@GetRomFSFi
$LN147@GetRomFSFi:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN150@GetRomFSFi:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN138@GetRomFSFi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T1[rsp+16], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T1[rsp], 0
$LN170@GetRomFSFi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 52   : }

	mov	rcx, rdi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, r15
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+288]
	add	rsp, 208				; 000000d0H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN175@GetRomFSFi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	npad	1
$LN172@GetRomFSFi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4917 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN173@GetRomFSFi:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN174@GetRomFSFi:

; 4941 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN169@GetRomFSFi:
?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z ENDP ; Editor::GetRomFSFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 112
LocalPath$GSCopy$ = 144
__$ReturnUdt$GSCopy$ = 144
buffer$5 = 152
__$ArrayPad$ = 200
__$ReturnUdt$ = 272
LocalPath$ = 280
Replaceable$ = 288
?dtor$0@?0??GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z@4HA PROC ; `Editor::GetRomFSFile'::`1'::dtor$0
	mov	rcx, QWORD PTR LocalPath$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z@4HA ENDP ; `Editor::GetRomFSFile'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 112
LocalPath$GSCopy$ = 144
__$ReturnUdt$GSCopy$ = 144
buffer$5 = 152
__$ArrayPad$ = 200
__$ReturnUdt$ = 272
LocalPath$ = 280
Replaceable$ = 288
?dtor$5@?0??GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z@4HA PROC ; `Editor::GetRomFSFile'::`1'::dtor$5
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z@4HA ENDP ; `Editor::GetRomFSFile'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
_TEXT	SEGMENT
$T1 = 32
File$GSCopy$ = 72
__$ReturnUdt$GSCopy$ = 72
__$ArrayPad$ = 80
__$ReturnUdt$ = 144
File$ = 152
?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z PROC ; Editor::GetWorkingDirFile, COMDAT

; 60   : {

$LN124:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbp, rdx
	mov	rsi, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	mov	QWORD PTR File$GSCopy$[rsp], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4938 :     const auto _Left_size  = _Left.size();

	mov	r14, QWORD PTR ?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16

; 4939 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 4940 :     if (_Left.max_size() - _Left_size < _Right_size) {

	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rcx
	sub	rax, r14
	cmp	rax, 1
	jb	$LN121@GetWorking

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r12, OFFSET FLAT:?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::WorkingDir

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR ?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24, 16
	cmovae	r12, QWORD PTR ?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T1[rsp], xmm0
	xorps	xmm1, xmm1

; 2293 :     size_type _Mysize = 0; // current length of string

	movdqu	XMMWORD PTR $T1[rsp+16], xmm1

; 2787 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

	lea	r15, QWORD PTR [r14+1]

; 2788 :         size_type _New_capacity = _BUF_SIZE - 1;

	mov	edi, 15

; 2789 :         auto& _My_data          = _Mypair._Myval2;
; 2790 :         _Elem* _Ptr             = _My_data._Bx._Buf;

	lea	rbx, QWORD PTR $T1[rsp]

; 2791 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2792 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws
; 2793 : 
; 2794 :         if (_New_capacity < _New_size) {

	cmp	r15, rdi
	jbe	SHORT $LN22@GetWorking

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rdi, r15
	or	rdi, 15
	cmp	rdi, rcx

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN45@GetWorking

; 4716 :             return _Max;

	mov	rdi, rcx
	jmp	SHORT $LN44@GetWorking
$LN45@GetWorking:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	mov	eax, 22
	cmp	rdi, rax
	cmovb	rdi, rax
$LN44@GetWorking:

; 2796 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

	mov	rcx, rdi
	add	rcx, 1
	mov	rax, -1
	cmovb	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN54@GetWorking

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	$LN122@GetWorking

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN98@GetWorking

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rbx, QWORD PTR [rax+39]
	and	rbx, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rbx-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN52@GetWorking
$LN54@GetWorking:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rcx, rcx
	je	SHORT $LN55@GetWorking

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN52@GetWorking
$LN55@GetWorking:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	xor	ebx, ebx
$LN52@GetWorking:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2798 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

	mov	QWORD PTR $T1[rsp], rbx
$LN22@GetWorking:

; 2799 : 
; 2800 :             _Start_element_lifetimes(_Ptr, _New_capacity + 1);
; 2801 :         }
; 2802 : 
; 2803 :         _My_data._Mysize = _New_size;

	mov	QWORD PTR $T1[rsp+16], r15

; 2804 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T1[rsp+24], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, r14
	mov	rdx, r12
	mov	rcx, rbx
	call	memcpy
	mov	BYTE PTR [rbx+r14], 47			; 0000002fH

; 2807 :         _Traits::assign(_Ptr[_New_size], _Elem());

	mov	BYTE PTR [rbx+r15], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 61   : 	return WorkingDir + "/" + File;

	mov	r8, rbp
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rsi
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T1[rsp+24]
	cmp	rdx, 16
	jb	SHORT $LN89@GetWorking

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN101@GetWorking

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN101@GetWorking
$LN98@GetWorking:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN101@GetWorking:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN89@GetWorking:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T1[rsp+16], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T1[rsp], 0

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbp
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 61   : 	return WorkingDir + "/" + File;

	mov	rax, rsi

; 62   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+96]
	mov	rbx, QWORD PTR [r11+64]
	mov	rbp, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
$LN122@GetWorking:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	npad	1
$LN121@GetWorking:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4941 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN119@GetWorking:
?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ENDP ; Editor::GetWorkingDirFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
File$GSCopy$ = 72
__$ReturnUdt$GSCopy$ = 72
__$ArrayPad$ = 80
__$ReturnUdt$ = 144
File$ = 152
?dtor$0@?0??GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z@4HA PROC ; `Editor::GetWorkingDirFile'::`1'::dtor$0
	mov	rcx, QWORD PTR File$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z@4HA ENDP ; `Editor::GetWorkingDirFile'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
File$GSCopy$ = 72
__$ReturnUdt$GSCopy$ = 72
__$ArrayPad$ = 80
__$ReturnUdt$ = 144
File$ = 152
?dtor$1@?0??GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z@4HA PROC ; `Editor::GetWorkingDirFile'::`1'::dtor$1
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z@4HA ENDP ; `Editor::GetWorkingDirFile'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ?GetInternalGameVersion@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 64
?GetInternalGameVersion@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; Editor::GetInternalGameVersion, COMDAT

; 74   : {

$LN7:
	push	rbx
	sub	rsp, 48					; 00000030H

; 75   : 	return Editor::InternalGameVersion;

	lea	rdx, OFFSET FLAT:?InternalGameVersion@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::InternalGameVersion
	mov	rbx, rcx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, rbx

; 76   : }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?GetInternalGameVersion@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; Editor::GetInternalGameVersion
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 112
Name$GSCopy$ = 144
__$ReturnUdt$GSCopy$ = 144
buffer$5 = 152
__$ArrayPad$ = 200
__$ReturnUdt$ = 272
Name$ = 280
?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z PROC ; Editor::GetBfresFile, COMDAT

; 65   : {

$LN177:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 208				; 000000d0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rdx
	mov	r15, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	mov	QWORD PTR Name$GSCopy$[rsp], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rdx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	mov	rbp, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rbp
	sub	rax, rcx
	cmp	rax, 13
	jb	$LN172@GetBfresFi

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rax, rdx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdx+24], 16
	jb	SHORT $LN168@GetBfresFi

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rdx]
$LN168@GetBfresFi:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 13
	lea	r9, OFFSET FLAT:??_C@_0O@BICHJELE@EditorModels?1@
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 66   : 	if (Util::FileExists(Editor::GetWorkingDirFile("EditorModels/" + Name)))

	lea	rdx, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Editor::GetWorkingDirFile
	mov	rsi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rax

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rax+24], 16
	jb	SHORT $LN31@GetBfresFi

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rax]
$LN31@GetBfresFi:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h

; 241  :             return _stat64i32(_FileName, (struct _stat64i32*)_Stat);

	lea	rdx, QWORD PTR buffer$5[rsp]
	call	QWORD PTR __imp__stat64i32
	mov	ebx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rsi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 66   : 	if (Util::FileExists(Editor::GetWorkingDirFile("EditorModels/" + Name)))

	test	ebx, ebx
	jne	SHORT $LN2@GetBfresFi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rdi+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	sub	rbp, rcx
	cmp	rbp, 13
	jb	$LN173@GetBfresFi

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rax, rdi

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdi+24], 16
	jb	SHORT $LN50@GetBfresFi

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rdi]
$LN50@GetBfresFi:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 13
	lea	r9, OFFSET FLAT:??_C@_0O@BICHJELE@EditorModels?1@
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 68   : 		return Editor::GetWorkingDirFile("EditorModels/" + Name);

	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, r15
	call	?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Editor::GetWorkingDirFile
	jmp	$LN170@GetBfresFi
$LN2@GetBfresFi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4938 :     const auto _Left_size  = _Left.size();

	mov	r14, QWORD PTR ?BfresDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16

; 4939 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 4940 :     if (_Left.max_size() - _Left_size < _Right_size) {

	mov	rax, rbp
	sub	rax, r14
	cmp	rax, 1
	jb	$LN174@GetBfresFi

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r13, OFFSET FLAT:?BfresDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::BfresDir

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR ?BfresDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24, 16
	cmovae	r13, QWORD PTR ?BfresDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T1[rsp], xmm0
	xorps	xmm1, xmm1

; 2293 :     size_type _Mysize = 0; // current length of string

	movdqu	XMMWORD PTR $T1[rsp+16], xmm1

; 2787 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

	lea	r12, QWORD PTR [r14+1]

; 2788 :         size_type _New_capacity = _BUF_SIZE - 1;

	mov	esi, 15

; 2789 :         auto& _My_data          = _Mypair._Myval2;
; 2790 :         _Elem* _Ptr             = _My_data._Bx._Buf;

	lea	rbx, QWORD PTR $T1[rsp]

; 2791 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2792 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws
; 2793 : 
; 2794 :         if (_New_capacity < _New_size) {

	cmp	r12, rsi
	jbe	SHORT $LN72@GetBfresFi

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rsi, r12
	or	rsi, 15
	cmp	rsi, rbp

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN95@GetBfresFi

; 4716 :             return _Max;

	mov	rsi, rbp
	jmp	SHORT $LN94@GetBfresFi
$LN95@GetBfresFi:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	mov	eax, 22
	cmp	rsi, rax
	cmovb	rsi, rax
$LN94@GetBfresFi:

; 2796 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

	mov	rcx, rsi
	add	rcx, 1
	mov	rax, -1
	cmovb	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN104@GetBfresFi

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	$LN175@GetBfresFi

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN147@GetBfresFi

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rbx, QWORD PTR [rax+39]
	and	rbx, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rbx-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN102@GetBfresFi
$LN104@GetBfresFi:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rcx, rcx
	je	SHORT $LN105@GetBfresFi

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN102@GetBfresFi
$LN105@GetBfresFi:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	xor	ebx, ebx
$LN102@GetBfresFi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2798 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

	mov	QWORD PTR $T1[rsp], rbx
$LN72@GetBfresFi:

; 2799 : 
; 2800 :             _Start_element_lifetimes(_Ptr, _New_capacity + 1);
; 2801 :         }
; 2802 : 
; 2803 :         _My_data._Mysize = _New_size;

	mov	QWORD PTR $T1[rsp+16], r12

; 2804 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T1[rsp+24], rsi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, r14
	mov	rdx, r13
	mov	rcx, rbx
	call	memcpy
	mov	BYTE PTR [rbx+r14], 47			; 0000002fH

; 2807 :         _Traits::assign(_Ptr[_New_size], _Elem());

	mov	BYTE PTR [rbx+r12], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 70   : 	return Editor::BfresDir + "/" + Name;

	mov	r8, rdi
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r15
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T1[rsp+24]
	cmp	rdx, 16
	jb	SHORT $LN138@GetBfresFi

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN150@GetBfresFi

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN150@GetBfresFi
$LN147@GetBfresFi:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN150@GetBfresFi:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN138@GetBfresFi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T1[rsp+16], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T1[rsp], 0
$LN170@GetBfresFi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 71   : }

	mov	rcx, rdi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, r15
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+288]
	add	rsp, 208				; 000000d0H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN175@GetBfresFi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	npad	1
$LN172@GetBfresFi:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4917 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN173@GetBfresFi:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN174@GetBfresFi:

; 4941 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN169@GetBfresFi:
?GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ENDP ; Editor::GetBfresFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 112
Name$GSCopy$ = 144
__$ReturnUdt$GSCopy$ = 144
buffer$5 = 152
__$ArrayPad$ = 200
__$ReturnUdt$ = 272
Name$ = 280
?dtor$0@?0??GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z@4HA PROC ; `Editor::GetBfresFile'::`1'::dtor$0
	mov	rcx, QWORD PTR Name$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z@4HA ENDP ; `Editor::GetBfresFile'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 112
Name$GSCopy$ = 144
__$ReturnUdt$GSCopy$ = 144
buffer$5 = 152
__$ArrayPad$ = 200
__$ReturnUdt$ = 272
Name$ = 280
?dtor$5@?0??GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z@4HA PROC ; `Editor::GetBfresFile'::`1'::dtor$5
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??GetBfresFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z@4HA ENDP ; `Editor::GetBfresFile'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ??0path@filesystem@std@@QEAA@$$QEAV012@@Z
_TEXT	SEGMENT
this$ = 8
__that$ = 16
??0path@filesystem@std@@QEAA@$$QEAV012@@Z PROC		; std::filesystem::path::path, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	eax, eax
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR [rcx+16], rax

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rcx+24], rax

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rcx+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 637  :         path(path&&)                     = default;

	mov	QWORD PTR [rdx+16], rax
	mov	QWORD PTR [rdx+24], 7
	mov	WORD PTR [rdx], ax
	mov	rax, rcx
	ret	0
??0path@filesystem@std@@QEAA@$$QEAV012@@Z ENDP		; std::filesystem::path::path
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\wchar.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?_Current_path@filesystem@std@@YA?AW4__std_win_error@@AEAVpath@12@@Z
_TEXT	SEGMENT
_Temp_result$1 = 48
_Result$ = 96
?_Current_path@filesystem@std@@YA?AW4__std_win_error@@AEAVpath@12@@Z PROC ; std::filesystem::_Current_path, COMDAT

; 4045 :     _NODISCARD inline __std_win_error _Current_path(path& _Result) noexcept {

$LN78:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 64					; 00000040H
	mov	rsi, rcx

; 4046 :         _Result._Text.resize(__std_fs_max_path);

	mov	edx, 260				; 00000104H
	call	?resize@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::resize
	xor	r14d, r14d
$LL2@Current_pa:

; 4047 :         for (;;) {
; 4048 :             const auto _Requested_size = static_cast<unsigned long>(_Result._Text.size());

	mov	ebp, DWORD PTR [rsi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rdx, rsi

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rsi+24], 8

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN75@Current_pa

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rsi]
$LN75@Current_pa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4049 :             const auto _Temp_result    = __std_fs_get_current_path(_Requested_size, _Result._Text.data());

	mov	ecx, ebp
	call	__std_fs_get_current_path
	mov	rbx, rax
	mov	QWORD PTR _Temp_result$1[rsp], rax
	mov	r8d, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4139 :         const size_type _Old_size = size();

	mov	rdi, QWORD PTR [rsi+16]
	mov	rcx, QWORD PTR [rsi+24]

; 4140 :         if (_New_size <= _Old_size) {

	cmp	r8, rdi
	ja	SHORT $LN15@Current_pa

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rsi

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rcx, 8

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN74@Current_pa

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rsi]
$LN74@Current_pa:

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR [rsi+16], r8
	mov	WORD PTR [rax+r8*2], r14w

; 4142 :         } else {

	jmp	SHORT $LN25@Current_pa
$LN15@Current_pa:

; 4143 :             append(_New_size - _Old_size, _Ch);

	mov	rdx, r8
	sub	rdx, rdi

; 3298 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	mov	rax, rcx
	sub	rax, rdi
	cmp	rdx, rax
	ja	SHORT $LN26@Current_pa

; 3299 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3300 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	mov	QWORD PTR [rsi+16], r8

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	r9, rsi

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rcx, 8

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN73@Current_pa

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r9, QWORD PTR [rsi]
$LN73@Current_pa:

; 3302 :             _Traits::assign(_Old_ptr + _Old_size, _Count, _Ch);

	lea	rdi, QWORD PTR [r9+rdi*2]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\wchar.h

; 259  :         for (; 0 < _N; ++_Su, --_N)

	test	rdx, rdx
	je	SHORT $LN51@Current_pa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3302 :             _Traits::assign(_Old_ptr + _Old_size, _Count, _Ch);

	movzx	eax, r14w
	mov	rcx, rdx
	rep stosw
$LN51@Current_pa:

; 3303 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	WORD PTR [r9+r8*2], r14w

; 3304 :             return *this;

	jmp	SHORT $LN25@Current_pa
$LN26@Current_pa:

; 3305 :         }
; 3306 : 
; 3307 :         return _Reallocate_grow_by(

	mov	r9, rdx
	mov	rcx, rsi
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV34@_K_W@Z@_K_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0_W@Z@_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<`std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append'::`2'::<lambda_1>,unsigned __int64,wchar_t>
$LN25@Current_pa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4051 :             if (_Temp_result._Size < _Requested_size) {

	cmp	ebx, ebp
	jae	$LL2@Current_pa

; 4052 :                 return _Temp_result._Error;

	mov	eax, DWORD PTR _Temp_result$1[rsp+4]

; 4053 :             }
; 4054 :         }
; 4055 :     }

	mov	rbx, QWORD PTR [rsp+104]
	mov	rbp, QWORD PTR [rsp+112]
	add	rsp, 64					; 00000040H
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
?_Current_path@filesystem@std@@YA?AW4__std_win_error@@AEAVpath@12@@Z ENDP ; std::filesystem::_Current_path
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\wchar.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
;	COMDAT ?current_path@filesystem@std@@YA?AVpath@12@XZ
_TEXT	SEGMENT
$T1 = 48
_Temp_result$2 = 56
__$ReturnUdt$GSCopy$ = 64
__$ReturnUdt$ = 112
?current_path@filesystem@std@@YA?AVpath@12@XZ PROC	; std::filesystem::current_path, COMDAT

; 4064 :     _EXPORT_STD _NODISCARD inline path current_path() {

$LN99:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 80					; 00000050H
	mov	rsi, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	xor	r14d, r14d
	mov	DWORD PTR $T1[rsp], r14d
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR [rcx+16], r14

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR [rcx+24], 7

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	WORD PTR [rcx], r14w
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4070 :         return _Result;

	mov	DWORD PTR $T1[rsp], 1

; 4046 :         _Result._Text.resize(__std_fs_max_path);

	mov	edx, 260				; 00000104H
	call	?resize@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::resize
	npad	6
$LL23@current_pa:

; 4047 :         for (;;) {
; 4048 :             const auto _Requested_size = static_cast<unsigned long>(_Result._Text.size());

	mov	ebp, DWORD PTR [rsi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rdx, rsi

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rsi+24], 8
	jb	SHORT $LN94@current_pa

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rsi]
$LN94@current_pa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4049 :             const auto _Temp_result    = __std_fs_get_current_path(_Requested_size, _Result._Text.data());

	mov	ecx, ebp
	call	__std_fs_get_current_path
	mov	rbx, rax
	mov	QWORD PTR _Temp_result$2[rsp], rax
	mov	r8d, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4139 :         const size_type _Old_size = size();

	mov	rdi, QWORD PTR [rsi+16]
	mov	rcx, QWORD PTR [rsi+24]

; 4140 :         if (_New_size <= _Old_size) {

	cmp	r8, rdi
	ja	SHORT $LN37@current_pa

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rsi

; 2227 :         if (_Large_string_engaged()) {

	cmp	rcx, 8
	jb	SHORT $LN93@current_pa

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rsi]
$LN93@current_pa:

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR [rsi+16], r8
	mov	WORD PTR [rax+r8*2], r14w

; 4142 :         } else {

	jmp	SHORT $LN47@current_pa
$LN37@current_pa:

; 4143 :             append(_New_size - _Old_size, _Ch);

	mov	rdx, r8
	sub	rdx, rdi

; 3298 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	mov	rax, rcx
	sub	rax, rdi
	cmp	rdx, rax
	ja	SHORT $LN48@current_pa

; 3299 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3300 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	mov	QWORD PTR [rsi+16], r8

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	r9, rsi

; 2227 :         if (_Large_string_engaged()) {

	cmp	rcx, 8
	jb	SHORT $LN92@current_pa

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r9, QWORD PTR [rsi]
$LN92@current_pa:

; 3302 :             _Traits::assign(_Old_ptr + _Old_size, _Count, _Ch);

	lea	rdi, QWORD PTR [r9+rdi*2]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\wchar.h

; 259  :         for (; 0 < _N; ++_Su, --_N)

	test	rdx, rdx
	je	SHORT $LN73@current_pa
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3302 :             _Traits::assign(_Old_ptr + _Old_size, _Count, _Ch);

	movzx	eax, r14w
	mov	rcx, rdx
	rep stosw
$LN73@current_pa:

; 3303 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	WORD PTR [r9+r8*2], r14w

; 3304 :             return *this;

	jmp	SHORT $LN47@current_pa
$LN48@current_pa:

; 3305 :         }
; 3306 : 
; 3307 :         return _Reallocate_grow_by(

	mov	r9, rdx
	mov	rcx, rsi
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV34@_K_W@Z@_K_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0_W@Z@_K_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Reallocate_grow_by<`std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::append'::`2'::<lambda_1>,unsigned __int64,wchar_t>
$LN47@current_pa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 4051 :             if (_Temp_result._Size < _Requested_size) {

	cmp	ebx, ebp
	jae	$LL23@current_pa

; 4065 :         path _Result;
; 4066 :         const auto _Err = _Current_path(_Result);
; 4067 :         if (_Err != __std_win_error::_Success) {

	mov	edx, DWORD PTR _Temp_result$2[rsp+4]
	test	edx, edx
	jne	SHORT $LN97@current_pa

; 4070 :         return _Result;

	mov	rax, rsi

; 4071 :     }

	mov	rbx, QWORD PTR [rsp+120]
	mov	rbp, QWORD PTR [rsp+128]
	add	rsp, 80					; 00000050H
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
$LN97@current_pa:

; 4068 :             _Throw_fs_error("current_path()", _Err);

	lea	rcx, OFFSET FLAT:??_C@_0P@GHIGLIIA@current_path?$CI?$CJ@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@@Z ; std::filesystem::_Throw_fs_error
	int	3
$LN95@current_pa:
?current_path@filesystem@std@@YA?AVpath@12@XZ ENDP	; std::filesystem::current_path
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
_Temp_result$2 = 56
__$ReturnUdt$GSCopy$ = 64
__$ReturnUdt$ = 112
?dtor$0@?0??current_path@filesystem@std@@YA?AVpath@12@XZ@4HA PROC ; `std::filesystem::current_path'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
	call	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??current_path@filesystem@std@@YA?AVpath@12@XZ@4HA ENDP ; `std::filesystem::current_path'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ??__EWorkingDir@Editor@@YAXXZ
text$di	SEGMENT
$T1 = 48
$T2 = 80
??__EWorkingDir@Editor@@YAXXZ PROC			; Editor::`dynamic initializer for 'WorkingDir'', COMDAT

; 11   : std::string Editor::WorkingDir = std::filesystem::current_path().string() + "/WorkingDir";

	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 112				; 00000070H
	lea	rcx, QWORD PTR $T2[rsp]
	call	?current_path@filesystem@std@@YA?AVpath@12@XZ ; std::filesystem::current_path
	npad	1
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rax
	call	?string@path@filesystem@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@XZ ; std::filesystem::path::string
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR [rax+16]

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	mov	rdx, QWORD PTR [rax+24]
	mov	rax, rdx
	sub	rax, rcx
	cmp	rax, 11
	jb	SHORT $LN14@dynamic

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rcx+11]
	mov	QWORD PTR [rdi+16], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rdi

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	jb	SHORT $LN17@dynamic

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rdi]
$LN17@dynamic:

; 3275 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

	lea	rbx, QWORD PTR [rax+rcx]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8d, 11
	lea	rdx, OFFSET FLAT:??_C@_0M@IFIJFFAN@?1WorkingDir@
	mov	rcx, rbx
	call	memmove

; 3276 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rbx+11], 0

; 3277 :             return *this;

	jmp	SHORT $LN13@dynamic
$LN14@dynamic:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], 11
	lea	r9, OFFSET FLAT:??_C@_0M@IFIJFFAN@?1WorkingDir@
	mov	edx, 11
	mov	rcx, rdi
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
	mov	rdi, rax
$LN13@dynamic:
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR ?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, xmm0
	xorps	xmm1, xmm1

; 2293 :     size_type _Mysize = 0; // current length of string

	movdqa	XMMWORD PTR ?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm1

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rdi]
	movaps	XMMWORD PTR ?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, xmm0
	movups	xmm1, XMMWORD PTR [rdi+16]
	movaps	XMMWORD PTR ?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 11   : std::string Editor::WorkingDir = std::filesystem::current_path().string() + "/WorkingDir";

	mov	QWORD PTR [rdi+16], 0
	mov	QWORD PTR [rdi+24], 15
	mov	BYTE PTR [rdi], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T1[rsp+24]
	cmp	rdx, 16
	jb	SHORT $LN78@dynamic

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN90@dynamic

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN90@dynamic
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN90@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN78@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T1[rsp+16], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T1[rsp], 0

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T2[rsp]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 11   : std::string Editor::WorkingDir = std::filesystem::current_path().string() + "/WorkingDir";

	lea	rcx, OFFSET FLAT:??__FWorkingDir@Editor@@YAXXZ ; Editor::`dynamic atexit destructor for 'WorkingDir''
	mov	rbx, QWORD PTR [rsp+136]
	add	rsp, 112				; 00000070H
	pop	rdi
	jmp	atexit
$LN141@dynamic:
??__EWorkingDir@Editor@@YAXXZ ENDP			; Editor::`dynamic initializer for 'WorkingDir''
text$di	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 80
?dtor$0@?0???__EWorkingDir@Editor@@YAXXZ@4HA PROC	; `Editor::`dynamic initializer for 'WorkingDir'''::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$0@?0???__EWorkingDir@Editor@@YAXXZ@4HA ENDP	; `Editor::`dynamic initializer for 'WorkingDir'''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 80
?dtor$1@?0???__EWorkingDir@Editor@@YAXXZ@4HA PROC	; `Editor::`dynamic initializer for 'WorkingDir'''::`1'::dtor$1
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???__EWorkingDir@Editor@@YAXXZ@4HA ENDP	; `Editor::`dynamic initializer for 'WorkingDir'''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FWorkingDir@Editor@@YAXXZ
text$yd	SEGMENT
??__FWorkingDir@Editor@@YAXXZ PROC			; Editor::`dynamic atexit destructor for 'WorkingDir'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqa	XMMWORD PTR ?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?WorkingDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FWorkingDir@Editor@@YAXXZ ENDP			; Editor::`dynamic atexit destructor for 'WorkingDir''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ??__FRomFSDir@Editor@@YAXXZ
text$di	SEGMENT
??__FRomFSDir@Editor@@YAXXZ PROC			; Editor::`dynamic atexit destructor for 'RomFSDir'', COMDAT

; 12   : std::string Editor::RomFSDir = "";

	lea	rcx, OFFSET FLAT:??__FRomFSDir@Editor@@YAXXZ ; Editor::`dynamic atexit destructor for 'RomFSDir''
	jmp	atexit
??__FRomFSDir@Editor@@YAXXZ ENDP			; Editor::`dynamic atexit destructor for 'RomFSDir''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FRomFSDir@Editor@@YAXXZ
text$yd	SEGMENT
??__FRomFSDir@Editor@@YAXXZ PROC			; Editor::`dynamic atexit destructor for 'RomFSDir'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?RomFSDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?RomFSDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqa	XMMWORD PTR ?RomFSDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?RomFSDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FRomFSDir@Editor@@YAXXZ ENDP			; Editor::`dynamic atexit destructor for 'RomFSDir''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ??__FBfresDir@Editor@@YAXXZ
text$di	SEGMENT
??__FBfresDir@Editor@@YAXXZ PROC			; Editor::`dynamic atexit destructor for 'BfresDir'', COMDAT

; 13   : std::string Editor::BfresDir = "";

	lea	rcx, OFFSET FLAT:??__FBfresDir@Editor@@YAXXZ ; Editor::`dynamic atexit destructor for 'BfresDir''
	jmp	atexit
??__FBfresDir@Editor@@YAXXZ ENDP			; Editor::`dynamic atexit destructor for 'BfresDir''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FBfresDir@Editor@@YAXXZ
text$yd	SEGMENT
??__FBfresDir@Editor@@YAXXZ PROC			; Editor::`dynamic atexit destructor for 'BfresDir'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?BfresDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?BfresDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqa	XMMWORD PTR ?BfresDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?BfresDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FBfresDir@Editor@@YAXXZ ENDP			; Editor::`dynamic atexit destructor for 'BfresDir''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ??__FExportDir@Editor@@YAXXZ
text$di	SEGMENT
??__FExportDir@Editor@@YAXXZ PROC			; Editor::`dynamic atexit destructor for 'ExportDir'', COMDAT

; 14   : std::string Editor::ExportDir = "";

	lea	rcx, OFFSET FLAT:??__FExportDir@Editor@@YAXXZ ; Editor::`dynamic atexit destructor for 'ExportDir''
	jmp	atexit
??__FExportDir@Editor@@YAXXZ ENDP			; Editor::`dynamic atexit destructor for 'ExportDir''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FExportDir@Editor@@YAXXZ
text$yd	SEGMENT
??__FExportDir@Editor@@YAXXZ PROC			; Editor::`dynamic atexit destructor for 'ExportDir'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?ExportDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?ExportDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqa	XMMWORD PTR ?ExportDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?ExportDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FExportDir@Editor@@YAXXZ ENDP			; Editor::`dynamic atexit destructor for 'ExportDir''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Byml.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ??__EStaticActorsByml@Editor@@YAXXZ
text$di	SEGMENT
??__EStaticActorsByml@Editor@@YAXXZ PROC		; Editor::`dynamic initializer for 'StaticActorsByml'', COMDAT

; 15   : BymlFile Editor::StaticActorsByml;

	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Byml.h

; 122  :     BymlFile() {}

	lea	rcx, OFFSET FLAT:?StaticActorsByml@Editor@@3VBymlFile@@A+88
	call	??0?$unordered_map@V?$vector@EV?$allocator@E@std@@@std@@IUVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ ; std::unordered_map<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::unordered_map<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >
	npad	1
	lea	rcx, OFFSET FLAT:?StaticActorsByml@Editor@@3VBymlFile@@A+152
	call	??0?$unordered_map@VNode@BymlFile@@IUNodeHasher@2@UNodeEqual@2@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@QEAA@XZ ; std::unordered_map<BymlFile::Node,unsigned int,BymlFile::NodeHasher,BymlFile::NodeEqual,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::unordered_map<BymlFile::Node,unsigned int,BymlFile::NodeHasher,BymlFile::NodeEqual,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >

; 123  : 
; 124  :     std::vector<BymlFile::Node>& GetNodes();
; 125  :     BymlFile::Type& GetType();
; 126  :     BymlFile::Node* GetNode(std::string Key);
; 127  :     bool HasChild(std::string Key);
; 128  : 
; 129  :     void AddHashKeyTableEntry(std::string Key);
; 130  :     void AddStringTableEntry(std::string String);
; 131  : 
; 132  :     void GenerateHashKeyTable(BymlFile::Node* Node);
; 133  :     void GenerateStringTable(BymlFile::Node* Node);
; 134  : 
; 135  :     std::vector<unsigned char> ToBinary(BymlFile::TableGeneration TableGeneration);
; 136  :     void WriteToFile(std::string Path, BymlFile::TableGeneration TableGeneration);
; 137  : 
; 138  :     struct NodeHasher {
; 139  :         static std::string GenerateNodeHash(const BymlFile::Node& Node)
; 140  :         {
; 141  :             std::string Result = (char)Node.m_Type + Node.m_Key + std::string(Node.m_Value.begin(), Node.m_Value.end());
; 142  :             for (const BymlFile::Node& Child : Node.m_Children)
; 143  :             {
; 144  :                 Result += GenerateNodeHash(Child);
; 145  :             }
; 146  :             return Result;
; 147  :         }
; 148  : 
; 149  :         int operator()(const BymlFile::Node& Node) const
; 150  :         {
; 151  :             std::string StrHash = GenerateNodeHash(Node);
; 152  :             int Hash = StrHash.size();
; 153  :             for (int i = 0; i < StrHash.length(); i++) {
; 154  :                 Hash ^= StrHash[i] + 0x9e3779b9 + (Hash << 6) + (Hash >> 2);
; 155  :             }
; 156  :             return Hash;
; 157  :         }
; 158  :     };
; 159  : private:
; 160  :     struct VectorHasher {
; 161  :         int operator()(const std::vector<unsigned char>& V) const 
; 162  :         {
; 163  :             int Hash = V.size();
; 164  :             for (auto& i : V) {
; 165  :                 Hash ^= i + 0x9e3779b9 + (Hash << 6) + (Hash >> 2);
; 166  :             }
; 167  :             return Hash;
; 168  :         }
; 169  :     };
; 170  : 
; 171  :     struct NodeEqual
; 172  :     {
; 173  :         bool operator()(const BymlFile::Node& Node1, const BymlFile::Node& Node2) const
; 174  :         {
; 175  :             return Node1 == Node2;
; 176  :         }
; 177  :     };
; 178  : 
; 179  :     std::vector<BymlFile::Node> m_Nodes;
; 180  :     std::vector<std::string> m_HashKeyTable;
; 181  :     std::vector<std::string> m_StringTable;
; 182  :     BymlFile::Type m_Type = BymlFile::Type::Null;
; 183  :     uint32_t m_WriterLastOffset = 0;
; 184  :     uint32_t m_WriterReservedDataOffset = 0;
; 185  :     std::unordered_map<std::vector<unsigned char>, uint32_t, VectorHasher> m_CachedValues; //Value in bytes -> Offset
; 186  :     std::unordered_map<BymlFile::Node, uint32_t, NodeHasher, NodeEqual> m_CachedNodes; //Node -> Offset (only containers)
; 187  :     bool mBigEndian = false;

	mov	BYTE PTR ?StaticActorsByml@Editor@@3VBymlFile@@A+216, 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 15   : BymlFile Editor::StaticActorsByml;

	lea	rcx, OFFSET FLAT:??__FStaticActorsByml@Editor@@YAXXZ ; Editor::`dynamic atexit destructor for 'StaticActorsByml''
	add	rsp, 40					; 00000028H
	jmp	atexit
??__EStaticActorsByml@Editor@@YAXXZ ENDP		; Editor::`dynamic initializer for 'StaticActorsByml''
text$di	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
?dtor$0@?0???__EStaticActorsByml@Editor@@YAXXZ@4HA PROC	; `Editor::`dynamic initializer for 'StaticActorsByml'''::`1'::dtor$0
	lea	rcx, OFFSET FLAT:?StaticActorsByml@Editor@@3VBymlFile@@A ; Editor::StaticActorsByml
	jmp	??1?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@QEAA@XZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::~vector<BymlFile::Node,std::allocator<BymlFile::Node> >
?dtor$0@?0???__EStaticActorsByml@Editor@@YAXXZ@4HA ENDP	; `Editor::`dynamic initializer for 'StaticActorsByml'''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
?dtor$1@?0???__EStaticActorsByml@Editor@@YAXXZ@4HA PROC	; `Editor::`dynamic initializer for 'StaticActorsByml'''::`1'::dtor$1
	lea	rcx, OFFSET FLAT:?StaticActorsByml@Editor@@3VBymlFile@@A ; Editor::StaticActorsByml
	add	rcx, 24
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
?dtor$1@?0???__EStaticActorsByml@Editor@@YAXXZ@4HA ENDP	; `Editor::`dynamic initializer for 'StaticActorsByml'''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
?dtor$2@?0???__EStaticActorsByml@Editor@@YAXXZ@4HA PROC	; `Editor::`dynamic initializer for 'StaticActorsByml'''::`1'::dtor$2
	lea	rcx, OFFSET FLAT:?StaticActorsByml@Editor@@3VBymlFile@@A ; Editor::StaticActorsByml
	add	rcx, 48					; 00000030H
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
?dtor$2@?0???__EStaticActorsByml@Editor@@YAXXZ@4HA ENDP	; `Editor::`dynamic initializer for 'StaticActorsByml'''::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
?dtor$3@?0???__EStaticActorsByml@Editor@@YAXXZ@4HA PROC	; `Editor::`dynamic initializer for 'StaticActorsByml'''::`1'::dtor$3
	lea	rcx, OFFSET FLAT:?StaticActorsByml@Editor@@3VBymlFile@@A ; Editor::StaticActorsByml
	add	rcx, 88					; 00000058H
	jmp	??1?$unordered_map@V?$vector@EV?$allocator@E@std@@@std@@IUVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ
?dtor$3@?0???__EStaticActorsByml@Editor@@YAXXZ@4HA ENDP	; `Editor::`dynamic initializer for 'StaticActorsByml'''::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??__FStaticActorsByml@Editor@@YAXXZ
text$yd	SEGMENT
??__FStaticActorsByml@Editor@@YAXXZ PROC		; Editor::`dynamic atexit destructor for 'StaticActorsByml'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?StaticActorsByml@Editor@@3VBymlFile@@A+152
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, OFFSET FLAT:?StaticActorsByml@Editor@@3VBymlFile@@A+88
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ

; 767  :         _Tidy();

	lea	rcx, OFFSET FLAT:?StaticActorsByml@Editor@@3VBymlFile@@A+48
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, OFFSET FLAT:?StaticActorsByml@Editor@@3VBymlFile@@A+24
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, OFFSET FLAT:?StaticActorsByml@Editor@@3VBymlFile@@A ; Editor::StaticActorsByml
	add	rsp, 40					; 00000028H
	jmp	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
??__FStaticActorsByml@Editor@@YAXXZ ENDP		; Editor::`dynamic atexit destructor for 'StaticActorsByml''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Byml.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ??__EDynamicActorsByml@Editor@@YAXXZ
text$di	SEGMENT
??__EDynamicActorsByml@Editor@@YAXXZ PROC		; Editor::`dynamic initializer for 'DynamicActorsByml'', COMDAT

; 16   : BymlFile Editor::DynamicActorsByml;

	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Byml.h

; 122  :     BymlFile() {}

	lea	rcx, OFFSET FLAT:?DynamicActorsByml@Editor@@3VBymlFile@@A+88
	call	??0?$unordered_map@V?$vector@EV?$allocator@E@std@@@std@@IUVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ ; std::unordered_map<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::unordered_map<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >
	npad	1
	lea	rcx, OFFSET FLAT:?DynamicActorsByml@Editor@@3VBymlFile@@A+152
	call	??0?$unordered_map@VNode@BymlFile@@IUNodeHasher@2@UNodeEqual@2@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@QEAA@XZ ; std::unordered_map<BymlFile::Node,unsigned int,BymlFile::NodeHasher,BymlFile::NodeEqual,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::unordered_map<BymlFile::Node,unsigned int,BymlFile::NodeHasher,BymlFile::NodeEqual,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >

; 123  : 
; 124  :     std::vector<BymlFile::Node>& GetNodes();
; 125  :     BymlFile::Type& GetType();
; 126  :     BymlFile::Node* GetNode(std::string Key);
; 127  :     bool HasChild(std::string Key);
; 128  : 
; 129  :     void AddHashKeyTableEntry(std::string Key);
; 130  :     void AddStringTableEntry(std::string String);
; 131  : 
; 132  :     void GenerateHashKeyTable(BymlFile::Node* Node);
; 133  :     void GenerateStringTable(BymlFile::Node* Node);
; 134  : 
; 135  :     std::vector<unsigned char> ToBinary(BymlFile::TableGeneration TableGeneration);
; 136  :     void WriteToFile(std::string Path, BymlFile::TableGeneration TableGeneration);
; 137  : 
; 138  :     struct NodeHasher {
; 139  :         static std::string GenerateNodeHash(const BymlFile::Node& Node)
; 140  :         {
; 141  :             std::string Result = (char)Node.m_Type + Node.m_Key + std::string(Node.m_Value.begin(), Node.m_Value.end());
; 142  :             for (const BymlFile::Node& Child : Node.m_Children)
; 143  :             {
; 144  :                 Result += GenerateNodeHash(Child);
; 145  :             }
; 146  :             return Result;
; 147  :         }
; 148  : 
; 149  :         int operator()(const BymlFile::Node& Node) const
; 150  :         {
; 151  :             std::string StrHash = GenerateNodeHash(Node);
; 152  :             int Hash = StrHash.size();
; 153  :             for (int i = 0; i < StrHash.length(); i++) {
; 154  :                 Hash ^= StrHash[i] + 0x9e3779b9 + (Hash << 6) + (Hash >> 2);
; 155  :             }
; 156  :             return Hash;
; 157  :         }
; 158  :     };
; 159  : private:
; 160  :     struct VectorHasher {
; 161  :         int operator()(const std::vector<unsigned char>& V) const 
; 162  :         {
; 163  :             int Hash = V.size();
; 164  :             for (auto& i : V) {
; 165  :                 Hash ^= i + 0x9e3779b9 + (Hash << 6) + (Hash >> 2);
; 166  :             }
; 167  :             return Hash;
; 168  :         }
; 169  :     };
; 170  : 
; 171  :     struct NodeEqual
; 172  :     {
; 173  :         bool operator()(const BymlFile::Node& Node1, const BymlFile::Node& Node2) const
; 174  :         {
; 175  :             return Node1 == Node2;
; 176  :         }
; 177  :     };
; 178  : 
; 179  :     std::vector<BymlFile::Node> m_Nodes;
; 180  :     std::vector<std::string> m_HashKeyTable;
; 181  :     std::vector<std::string> m_StringTable;
; 182  :     BymlFile::Type m_Type = BymlFile::Type::Null;
; 183  :     uint32_t m_WriterLastOffset = 0;
; 184  :     uint32_t m_WriterReservedDataOffset = 0;
; 185  :     std::unordered_map<std::vector<unsigned char>, uint32_t, VectorHasher> m_CachedValues; //Value in bytes -> Offset
; 186  :     std::unordered_map<BymlFile::Node, uint32_t, NodeHasher, NodeEqual> m_CachedNodes; //Node -> Offset (only containers)
; 187  :     bool mBigEndian = false;

	mov	BYTE PTR ?DynamicActorsByml@Editor@@3VBymlFile@@A+216, 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 16   : BymlFile Editor::DynamicActorsByml;

	lea	rcx, OFFSET FLAT:??__FDynamicActorsByml@Editor@@YAXXZ ; Editor::`dynamic atexit destructor for 'DynamicActorsByml''
	add	rsp, 40					; 00000028H
	jmp	atexit
??__EDynamicActorsByml@Editor@@YAXXZ ENDP		; Editor::`dynamic initializer for 'DynamicActorsByml''
text$di	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
?dtor$0@?0???__EDynamicActorsByml@Editor@@YAXXZ@4HA PROC ; `Editor::`dynamic initializer for 'DynamicActorsByml'''::`1'::dtor$0
	lea	rcx, OFFSET FLAT:?DynamicActorsByml@Editor@@3VBymlFile@@A ; Editor::DynamicActorsByml
	jmp	??1?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@QEAA@XZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::~vector<BymlFile::Node,std::allocator<BymlFile::Node> >
?dtor$0@?0???__EDynamicActorsByml@Editor@@YAXXZ@4HA ENDP ; `Editor::`dynamic initializer for 'DynamicActorsByml'''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
?dtor$1@?0???__EDynamicActorsByml@Editor@@YAXXZ@4HA PROC ; `Editor::`dynamic initializer for 'DynamicActorsByml'''::`1'::dtor$1
	lea	rcx, OFFSET FLAT:?DynamicActorsByml@Editor@@3VBymlFile@@A ; Editor::DynamicActorsByml
	add	rcx, 24
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
?dtor$1@?0???__EDynamicActorsByml@Editor@@YAXXZ@4HA ENDP ; `Editor::`dynamic initializer for 'DynamicActorsByml'''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
?dtor$2@?0???__EDynamicActorsByml@Editor@@YAXXZ@4HA PROC ; `Editor::`dynamic initializer for 'DynamicActorsByml'''::`1'::dtor$2
	lea	rcx, OFFSET FLAT:?DynamicActorsByml@Editor@@3VBymlFile@@A ; Editor::DynamicActorsByml
	add	rcx, 48					; 00000030H
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
?dtor$2@?0???__EDynamicActorsByml@Editor@@YAXXZ@4HA ENDP ; `Editor::`dynamic initializer for 'DynamicActorsByml'''::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
?dtor$3@?0???__EDynamicActorsByml@Editor@@YAXXZ@4HA PROC ; `Editor::`dynamic initializer for 'DynamicActorsByml'''::`1'::dtor$3
	lea	rcx, OFFSET FLAT:?DynamicActorsByml@Editor@@3VBymlFile@@A ; Editor::DynamicActorsByml
	add	rcx, 88					; 00000058H
	jmp	??1?$unordered_map@V?$vector@EV?$allocator@E@std@@@std@@IUVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ
?dtor$3@?0???__EDynamicActorsByml@Editor@@YAXXZ@4HA ENDP ; `Editor::`dynamic initializer for 'DynamicActorsByml'''::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??__FDynamicActorsByml@Editor@@YAXXZ
text$yd	SEGMENT
??__FDynamicActorsByml@Editor@@YAXXZ PROC		; Editor::`dynamic atexit destructor for 'DynamicActorsByml'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?DynamicActorsByml@Editor@@3VBymlFile@@A+152
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, OFFSET FLAT:?DynamicActorsByml@Editor@@3VBymlFile@@A+88
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ

; 767  :         _Tidy();

	lea	rcx, OFFSET FLAT:?DynamicActorsByml@Editor@@3VBymlFile@@A+48
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, OFFSET FLAT:?DynamicActorsByml@Editor@@3VBymlFile@@A+24
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, OFFSET FLAT:?DynamicActorsByml@Editor@@3VBymlFile@@A ; Editor::DynamicActorsByml
	add	rsp, 40					; 00000028H
	jmp	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
??__FDynamicActorsByml@Editor@@YAXXZ ENDP		; Editor::`dynamic atexit destructor for 'DynamicActorsByml''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ??__FBancDir@Editor@@YAXXZ
text$di	SEGMENT
??__FBancDir@Editor@@YAXXZ PROC				; Editor::`dynamic atexit destructor for 'BancDir'', COMDAT

; 17   : std::string Editor::BancDir = "";

	lea	rcx, OFFSET FLAT:??__FBancDir@Editor@@YAXXZ ; Editor::`dynamic atexit destructor for 'BancDir''
	jmp	atexit
??__FBancDir@Editor@@YAXXZ ENDP				; Editor::`dynamic atexit destructor for 'BancDir''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FBancDir@Editor@@YAXXZ
text$yd	SEGMENT
??__FBancDir@Editor@@YAXXZ PROC				; Editor::`dynamic atexit destructor for 'BancDir'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?BancDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?BancDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqa	XMMWORD PTR ?BancDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?BancDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FBancDir@Editor@@YAXXZ ENDP				; Editor::`dynamic atexit destructor for 'BancDir''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ??__FBancPrefix@Editor@@YAXXZ
text$di	SEGMENT
??__FBancPrefix@Editor@@YAXXZ PROC			; Editor::`dynamic atexit destructor for 'BancPrefix'', COMDAT

; 18   : std::string Editor::BancPrefix = "";

	lea	rcx, OFFSET FLAT:??__FBancPrefix@Editor@@YAXXZ ; Editor::`dynamic atexit destructor for 'BancPrefix''
	jmp	atexit
??__FBancPrefix@Editor@@YAXXZ ENDP			; Editor::`dynamic atexit destructor for 'BancPrefix''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FBancPrefix@Editor@@YAXXZ
text$yd	SEGMENT
??__FBancPrefix@Editor@@YAXXZ PROC			; Editor::`dynamic atexit destructor for 'BancPrefix'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?BancPrefix@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?BancPrefix@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqa	XMMWORD PTR ?BancPrefix@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?BancPrefix@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FBancPrefix@Editor@@YAXXZ ENDP			; Editor::`dynamic atexit destructor for 'BancPrefix''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ??__FIdentifier@Editor@@YAXXZ
text$di	SEGMENT
??__FIdentifier@Editor@@YAXXZ PROC			; Editor::`dynamic atexit destructor for 'Identifier'', COMDAT

; 19   : std::string Editor::Identifier = "";

	lea	rcx, OFFSET FLAT:??__FIdentifier@Editor@@YAXXZ ; Editor::`dynamic atexit destructor for 'Identifier''
	jmp	atexit
??__FIdentifier@Editor@@YAXXZ ENDP			; Editor::`dynamic atexit destructor for 'Identifier''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FIdentifier@Editor@@YAXXZ
text$yd	SEGMENT
??__FIdentifier@Editor@@YAXXZ PROC			; Editor::`dynamic atexit destructor for 'Identifier'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?Identifier@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?Identifier@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqa	XMMWORD PTR ?Identifier@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?Identifier@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FIdentifier@Editor@@YAXXZ ENDP			; Editor::`dynamic atexit destructor for 'Identifier''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ??__FInternalGameVersion@Editor@@YAXXZ
text$di	SEGMENT
??__FInternalGameVersion@Editor@@YAXXZ PROC		; Editor::`dynamic atexit destructor for 'InternalGameVersion'', COMDAT

; 20   : std::string Editor::InternalGameVersion = "100";

	lea	rcx, OFFSET FLAT:??__FInternalGameVersion@Editor@@YAXXZ ; Editor::`dynamic atexit destructor for 'InternalGameVersion''
	jmp	atexit
??__FInternalGameVersion@Editor@@YAXXZ ENDP		; Editor::`dynamic atexit destructor for 'InternalGameVersion''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FInternalGameVersion@Editor@@YAXXZ
text$yd	SEGMENT
??__FInternalGameVersion@Editor@@YAXXZ PROC		; Editor::`dynamic atexit destructor for 'InternalGameVersion'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?InternalGameVersion@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?InternalGameVersion@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR ?InternalGameVersion@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?InternalGameVersion@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FInternalGameVersion@Editor@@YAXXZ ENDP		; Editor::`dynamic atexit destructor for 'InternalGameVersion''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ??__FStaticCompoundDirectory@Editor@@YAXXZ
text$di	SEGMENT
??__FStaticCompoundDirectory@Editor@@YAXXZ PROC		; Editor::`dynamic atexit destructor for 'StaticCompoundDirectory'', COMDAT

; 21   : std::string Editor::StaticCompoundDirectory = "";

	lea	rcx, OFFSET FLAT:??__FStaticCompoundDirectory@Editor@@YAXXZ ; Editor::`dynamic atexit destructor for 'StaticCompoundDirectory''
	jmp	atexit
??__FStaticCompoundDirectory@Editor@@YAXXZ ENDP		; Editor::`dynamic atexit destructor for 'StaticCompoundDirectory''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FStaticCompoundDirectory@Editor@@YAXXZ
text$yd	SEGMENT
??__FStaticCompoundDirectory@Editor@@YAXXZ PROC		; Editor::`dynamic atexit destructor for 'StaticCompoundDirectory'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?StaticCompoundDirectory@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?StaticCompoundDirectory@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqa	XMMWORD PTR ?StaticCompoundDirectory@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?StaticCompoundDirectory@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FStaticCompoundDirectory@Editor@@YAXXZ ENDP		; Editor::`dynamic atexit destructor for 'StaticCompoundDirectory''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ??__FStaticCompoundPrefix@Editor@@YAXXZ
text$di	SEGMENT
??__FStaticCompoundPrefix@Editor@@YAXXZ PROC		; Editor::`dynamic atexit destructor for 'StaticCompoundPrefix'', COMDAT

; 22   : std::string Editor::StaticCompoundPrefix = "";

	lea	rcx, OFFSET FLAT:??__FStaticCompoundPrefix@Editor@@YAXXZ ; Editor::`dynamic atexit destructor for 'StaticCompoundPrefix''
	jmp	atexit
??__FStaticCompoundPrefix@Editor@@YAXXZ ENDP		; Editor::`dynamic atexit destructor for 'StaticCompoundPrefix''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FStaticCompoundPrefix@Editor@@YAXXZ
text$yd	SEGMENT
??__FStaticCompoundPrefix@Editor@@YAXXZ PROC		; Editor::`dynamic atexit destructor for 'StaticCompoundPrefix'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?StaticCompoundPrefix@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?StaticCompoundPrefix@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqa	XMMWORD PTR ?StaticCompoundPrefix@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?StaticCompoundPrefix@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FStaticCompoundPrefix@Editor@@YAXXZ ENDP		; Editor::`dynamic atexit destructor for 'StaticCompoundPrefix''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ?DetectInternalGameVersion@Editor@@YAXXZ
_TEXT	SEGMENT
$T1 = 48
$T2 = 52
tv3881 = 56
tv726 = 56
tv671 = 56
tv395 = 56
tv372 = 56
$T3 = 64
$T4 = 96
tv3814 = 128
$T5 = 136
$T6 = 168
$T7 = 200
_Eptr$8 = 264
_Eptr$9 = 272
Version$10 = 280
FileName$11 = 312
<begin>$L0$12 = 352
$S8$13 = 368
<end>$L0$14 = 384
_Matches$15 = 400
__$ArrayPad$ = 656
?DetectInternalGameVersion@Editor@@YAXXZ PROC		; Editor::DetectInternalGameVersion, COMDAT

; 25   : {

$LN909:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-416]
	sub	rsp, 672				; 000002a0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	xor	r15d, r15d
	mov	r14d, r15d
	mov	DWORD PTR $T1[rsp], r15d
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T5[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T5[rbp-240], r15

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T5[rbp-232], r15

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	r8d, QWORD PTR [r15+15]
	lea	rdx, OFFSET FLAT:??_C@_0BA@LJMNEACM@System?1Resource@
	lea	rcx, QWORD PTR $T5[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 27   : 	for (const auto& dirEntry : recursive_directory_iterator(Editor::GetRomFSFile("System/Resource"))) {

	mov	r8b, 1
	lea	rdx, QWORD PTR $T5[rbp-256]
	lea	rcx, QWORD PTR $T7[rbp-256]
	call	?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z ; Editor::GetRomFSFile
	npad	1
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rbp-256]
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@path@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@W4format@012@@Z ; std::filesystem::path::path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>
	npad	1
	lea	rdx, QWORD PTR $T6[rbp-256]
	lea	rcx, QWORD PTR $S8$13[rbp-256]
	call	??0recursive_directory_iterator@filesystem@std@@QEAA@AEBVpath@12@@Z ; std::filesystem::recursive_directory_iterator::recursive_directory_iterator
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T6[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
	npad	1

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T7[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN681@DetectInte

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T7[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN693@DetectInte

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN693@DetectInte
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN693@DetectInte:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN681@DetectInte:
	xorps	xmm0, xmm0
	movups	XMMWORD PTR <begin>$L0$12[rbp-256], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1396 :         if (_Rep) {

	mov	rbx, QWORD PTR $S8$13[rbp-248]
	test	rbx, rbx
	je	SHORT $LN713@DetectInte

; 1169 :         _MT_INCR(_Uses);

	lock inc DWORD PTR [rbx+8]
	mov	rbx, QWORD PTR $S8$13[rbp-248]
	mov	r14d, DWORD PTR $T1[rsp]
$LN713@DetectInte:

; 1345 :         _Ptr = _Right._Ptr;

	movaps	xmm0, XMMWORD PTR $S8$13[rbp-256]
	movdqa	XMMWORD PTR <begin>$L0$12[rbp-256], xmm0

; 1396 :         if (_Rep) {

	test	rbx, rbx
	je	SHORT $LN755@DetectInte

; 1169 :         _MT_INCR(_Uses);

	lock inc DWORD PTR [rbx+8]
	mov	rbx, QWORD PTR $S8$13[rbp-248]
	mov	r14d, DWORD PTR $T1[rsp]
$LN755@DetectInte:
	xorps	xmm1, xmm1

; 1470 :     element_type* _Ptr{nullptr};

	movdqu	XMMWORD PTR <end>$L0$14[rbp-256], xmm1

; 1402 :         if (_Rep) {

	mov	rdi, -1
	test	rbx, rbx
	je	SHORT $LN778@DetectInte

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, edi
	lock xadd DWORD PTR [rbx+8], eax
	cmp	eax, 1
	jne	SHORT $LN902@DetectInte

; 1178 :             _Destroy();

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	mov	eax, edi
	lock xadd DWORD PTR [rbx+12], eax
	cmp	eax, 1
	jne	SHORT $LN902@DetectInte

; 1185 :             _Delete_this();

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+8]
$LN902@DetectInte:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 27   : 	for (const auto& dirEntry : recursive_directory_iterator(Editor::GetRomFSFile("System/Resource"))) {

	mov	r14d, DWORD PTR $T1[rsp]
$LN778@DetectInte:
	npad	9
$LL429@DetectInte:
	mov	rsi, QWORD PTR <begin>$L0$12[rbp-256]
	test	rsi, rsi
	je	$LN3@DetectInte

; 28   : 		std::string FileName = dirEntry.path().string().substr(dirEntry.path().string().find_last_of("/\\") + 1);

	add	rsi, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	r12, rsi

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rsi+24], 8
	jb	SHORT $LN899@DetectInte

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r12, QWORD PTR [rsi]
$LN899@DetectInte:

; 4041 :         return basic_string_view<_Elem, _Traits>{_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize};

	lea	rbx, QWORD PTR [rsi+16]
	mov	QWORD PTR tv3814[rbp-256], rbx
	mov	r15, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	call	__std_fs_code_page
	mov	r13d, eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T4[rsp], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T4[rsp+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T4[rsp+24], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T4[rsp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 80   :     return _Output;

	bts	r14d, 7
	mov	DWORD PTR $T2[rsp], r14d
	mov	DWORD PTR $T1[rsp], r14d
	test	r15, r15

; 54   :     }
; 55   : 
; 56   :     return _Result._Len;
; 57   : }
; 58   : 
; 59   : template <class _Traits, class _Alloc>
; 60   : _NODISCARD basic_string<typename _Traits::char_type, _Traits, _Alloc> _Convert_wide_to_narrow(
; 61   :     const __std_code_page _Code_page, const wstring_view _Input, const _Alloc& _Al) {
; 62   :     basic_string<typename _Traits::char_type, _Traits, _Alloc> _Output(_Al);
; 63   : 
; 64   :     if (!_Input.empty()) {

	je	$LN207@DetectInte

; 65   :         if (_Input.size() > static_cast<size_t>(INT_MAX)) {

	cmp	r15, 2147483647				; 7fffffffH
	ja	$LN828@DetectInte

; 67   :         }
; 68   : 
; 69   :         const int _Len = _Check_convert_result(

	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, r15d
	mov	rdx, r12
	mov	ecx, eax
	call	__std_fs_convert_wide_to_narrow
	mov	rbx, rax
	mov	QWORD PTR tv671[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN830@DetectInte

; 72   :         _Output.resize(static_cast<size_t>(_Len));

	movsxd	rcx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4140 :         if (_New_size <= _Old_size) {

	mov	rdx, QWORD PTR $T4[rsp+16]
	cmp	rcx, rdx
	ja	SHORT $LN166@DetectInte

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T4[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T4[rsp+24], 16
	cmovae	rax, QWORD PTR $T4[rsp]

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR $T4[rsp+16], rcx
	mov	BYTE PTR [rax+rcx], 0

; 4142 :         } else {

	jmp	SHORT $LN176@DetectInte
$LN166@DetectInte:

; 4143 :             append(_New_size - _Old_size, _Ch);

	mov	r14, rcx
	sub	r14, rdx
	mov	r8, QWORD PTR $T4[rsp+24]
	mov	rax, r8
	sub	rax, rdx

; 3298 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	r14, rax
	ja	SHORT $LN177@DetectInte

; 3299 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3300 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	mov	QWORD PTR $T4[rsp+16], rcx

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rdi, QWORD PTR $T4[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	r8, 16
	cmovae	rdi, QWORD PTR $T4[rsp]

; 3302 :             _Traits::assign(_Old_ptr + _Old_size, _Count, _Ch);

	add	rdi, rdx

; 437  :         return static_cast<_Elem*>(_CSTD memset(_First, _Ch, _Count));

	mov	r8, r14
	xor	edx, edx
	mov	rcx, rdi
	call	memset

; 3303 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rdi+r14], 0

; 3304 :             return *this;

	jmp	SHORT $LN176@DetectInte
$LN177@DetectInte:

; 3305 :         }
; 3306 : 
; 3307 :         return _Reallocate_grow_by(

	mov	r9, r14
	mov	rdx, r14
	lea	rcx, QWORD PTR $T4[rsp]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,unsigned __int64,char>
$LN176@DetectInte:

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	r9, QWORD PTR $T4[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T4[rsp+24], 16
	cmovae	r9, QWORD PTR $T4[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 76   :         (void) _Check_convert_result(__std_fs_convert_wide_to_narrow(

	mov	DWORD PTR [rsp+32], ebx
	mov	r8d, r15d
	mov	rdx, r12
	mov	ecx, r13d
	call	__std_fs_convert_wide_to_narrow
	mov	QWORD PTR tv726[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN831@DetectInte
	mov	rbx, QWORD PTR tv3814[rbp-256]
$LN207@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	mov	r13d, DWORD PTR $T2[rsp]
	btr	r13d, 7

; 934  :             return string<char>();

	or	r13d, 112				; 00000070H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rsi+24], 8
	jb	SHORT $LN36@DetectInte

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rsi, QWORD PTR [rsi]
$LN36@DetectInte:

; 4041 :         return basic_string_view<_Elem, _Traits>{_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize};

	mov	r15, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	call	__std_fs_code_page
	mov	r12d, eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T3[rsp], xmm0

; 4821 :         _My_data._Mysize = 0;

	xor	edi, edi
	mov	QWORD PTR $T3[rsp+16], rdi

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	r14d, 15
	mov	QWORD PTR $T3[rsp+24], r14

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T3[rsp], dil
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 80   :     return _Output;

	or	r13d, 8
	mov	DWORD PTR $T1[rsp], r13d
	test	r15, r15

; 54   :     }
; 55   : 
; 56   :     return _Result._Len;
; 57   : }
; 58   : 
; 59   : template <class _Traits, class _Alloc>
; 60   : _NODISCARD basic_string<typename _Traits::char_type, _Traits, _Alloc> _Convert_wide_to_narrow(
; 61   :     const __std_code_page _Code_page, const wstring_view _Input, const _Alloc& _Al) {
; 62   :     basic_string<typename _Traits::char_type, _Traits, _Alloc> _Output(_Al);
; 63   : 
; 64   :     if (!_Input.empty()) {

	je	$LN113@DetectInte

; 65   :         if (_Input.size() > static_cast<size_t>(INT_MAX)) {

	cmp	r15, 2147483647				; 7fffffffH
	ja	$LN832@DetectInte

; 67   :         }
; 68   : 
; 69   :         const int _Len = _Check_convert_result(

	mov	DWORD PTR [rsp+32], edi
	xor	r9d, r9d
	mov	r8d, r15d
	mov	rdx, rsi
	mov	ecx, eax
	call	__std_fs_convert_wide_to_narrow
	mov	rbx, rax
	mov	QWORD PTR tv372[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN833@DetectInte

; 72   :         _Output.resize(static_cast<size_t>(_Len));

	movsxd	rcx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4140 :         if (_New_size <= _Old_size) {

	mov	rdx, QWORD PTR $T3[rsp+16]
	cmp	rcx, rdx
	ja	SHORT $LN72@DetectInte

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T3[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T3[rsp+24], 16
	cmovae	rax, QWORD PTR $T3[rsp]

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR $T3[rsp+16], rcx
	mov	BYTE PTR [rax+rcx], dil

; 4142 :         } else {

	jmp	SHORT $LN82@DetectInte
$LN72@DetectInte:

; 4143 :             append(_New_size - _Old_size, _Ch);

	mov	r14, rcx
	sub	r14, rdx
	mov	r8, QWORD PTR $T3[rsp+24]
	mov	rax, r8
	sub	rax, rdx

; 3298 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	r14, rax
	ja	SHORT $LN83@DetectInte

; 3299 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3300 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	mov	QWORD PTR $T3[rsp+16], rcx

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rdi, QWORD PTR $T3[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	r8, 16
	cmovae	rdi, QWORD PTR $T3[rsp]

; 3302 :             _Traits::assign(_Old_ptr + _Old_size, _Count, _Ch);

	add	rdi, rdx

; 437  :         return static_cast<_Elem*>(_CSTD memset(_First, _Ch, _Count));

	mov	r8, r14
	xor	edx, edx
	mov	rcx, rdi
	call	memset

; 3303 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rdi+r14], 0

; 3304 :             return *this;

	jmp	SHORT $LN82@DetectInte
$LN83@DetectInte:

; 3305 :         }
; 3306 : 
; 3307 :         return _Reallocate_grow_by(

	mov	r9, r14
	mov	rdx, r14
	lea	rcx, QWORD PTR $T3[rsp]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,unsigned __int64,char>
$LN82@DetectInte:

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	r9, QWORD PTR $T3[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T3[rsp+24], 16
	cmovae	r9, QWORD PTR $T3[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 76   :         (void) _Check_convert_result(__std_fs_convert_wide_to_narrow(

	mov	DWORD PTR [rsp+32], ebx
	mov	r8d, r15d
	mov	rdx, rsi
	mov	ecx, r12d
	call	__std_fs_convert_wide_to_narrow
	mov	QWORD PTR tv395[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN834@DetectInte
	mov	r14, QWORD PTR $T3[rsp+24]
	mov	rdi, QWORD PTR $T3[rsp+16]
$LN113@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	and	r13d, -9

; 934  :             return string<char>();

	or	r13d, 7
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rbx, QWORD PTR $T3[rsp]

; 2236 :         if (_Large_string_engaged()) {

	mov	r15, QWORD PTR $T3[rsp]
	cmp	r14, 16
	cmovae	rbx, r15

; 751  :     if (_Needle_size != 0 && _Hay_size != 0) { // worth searching, do it

	test	rdi, rdi
	je	$LN904@DetectInte
	xor	edx, edx
	mov	r8d, 256				; 00000100H
	lea	rcx, QWORD PTR _Matches$15[rbp-256]
	call	memset

; 752  :         if constexpr (_Special) {
; 753  :             _String_bitmap<typename _Traits::char_type> _Matches;
; 754  :             if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the

	lea	rcx, OFFSET FLAT:??_C@_02CFKBDFGI@?1?2@
	lea	r14, OFFSET FLAT:??_C@_02CFKBDFGI@?1?2@+2
	npad	7
$LL249@DetectInte:

; 670  :             _Matches[static_cast<unsigned char>(*_First)] = true;

	movzx	eax, BYTE PTR [rcx]
	mov	BYTE PTR _Matches$15[rbp+rax-256], 1

; 602  :         }
; 603  :     }
; 604  : }
; 605  : 
; 606  : template <class _Traits>
; 607  : constexpr size_t _Traits_find_ch(_In_reads_(_Hay_size) const _Traits_ptr_t<_Traits> _Haystack, const size_t _Hay_size,
; 608  :     const size_t _Start_at, const _Traits_ch_t<_Traits> _Ch) noexcept {
; 609  :     // search [_Haystack, _Haystack + _Hay_size) for _Ch, at/after _Start_at
; 610  :     if (_Start_at < _Hay_size) {
; 611  :         const auto _Found_at = _Traits::find(_Haystack + _Start_at, _Hay_size - _Start_at, _Ch);
; 612  :         if (_Found_at) {
; 613  :             return static_cast<size_t>(_Found_at - _Haystack);
; 614  :         }
; 615  :     }
; 616  : 
; 617  :     return static_cast<size_t>(-1); // (npos) no match
; 618  : }
; 619  : 
; 620  : template <class _Traits>
; 621  : constexpr size_t _Traits_rfind(_In_reads_(_Hay_size) const _Traits_ptr_t<_Traits> _Haystack, const size_t _Hay_size,
; 622  :     const size_t _Start_at, _In_reads_(_Needle_size) const _Traits_ptr_t<_Traits> _Needle,
; 623  :     const size_t _Needle_size) noexcept {
; 624  :     // search [_Haystack, _Haystack + _Hay_size) for [_Needle, _Needle + _Needle_size) beginning before _Start_at
; 625  :     if (_Needle_size == 0) {
; 626  :         return (_STD min)(_Start_at, _Hay_size); // empty string always matches
; 627  :     }
; 628  : 
; 629  :     if (_Needle_size <= _Hay_size) { // room for match, look for it
; 630  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - _Needle_size);; --_Match_try) {
; 631  :             if (_Traits::eq(*_Match_try, *_Needle) && _Traits::compare(_Match_try, _Needle, _Needle_size) == 0) {
; 632  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match
; 633  :             }
; 634  : 
; 635  :             if (_Match_try == _Haystack) {
; 636  :                 break; // at beginning, no more chance for match
; 637  :             }
; 638  :         }
; 639  :     }
; 640  : 
; 641  :     return static_cast<size_t>(-1); // no match
; 642  : }
; 643  : 
; 644  : template <class _Traits>
; 645  : constexpr size_t _Traits_rfind_ch(_In_reads_(_Hay_size) const _Traits_ptr_t<_Traits> _Haystack, const size_t _Hay_size,
; 646  :     const size_t _Start_at, const _Traits_ch_t<_Traits> _Ch) noexcept {
; 647  :     // search [_Haystack, _Haystack + _Hay_size) for _Ch before _Start_at
; 648  :     if (_Hay_size != 0) { // room for match, look for it
; 649  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {
; 650  :             if (_Traits::eq(*_Match_try, _Ch)) {
; 651  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match
; 652  :             }
; 653  : 
; 654  :             if (_Match_try == _Haystack) {
; 655  :                 break; // at beginning, no more chance for match
; 656  :             }
; 657  :         }
; 658  :     }
; 659  : 
; 660  :     return static_cast<size_t>(-1); // no match
; 661  : }
; 662  : 
; 663  : template <class _Elem, bool = _Is_character<_Elem>::value>
; 664  : class _String_bitmap { // _String_bitmap for character types
; 665  : public:
; 666  :     constexpr bool _Mark(const _Elem* _First, const _Elem* const _Last) noexcept {
; 667  :         // mark this bitmap such that the characters in [_First, _Last) are intended to match
; 668  :         // returns whether all inputs can be placed in the bitmap
; 669  :         for (; _First != _Last; ++_First) {

	inc	rcx
	cmp	rcx, r14
	jne	SHORT $LL249@DetectInte
	mov	r14, QWORD PTR $T3[rsp+24]

; 759  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	lea	rax, QWORD PTR [rdi-1]
	mov	r8, -1
	mov	rcx, r8
	cmp	rax, r8
	cmovb	rcx, rax
	add	rcx, rbx

; 677  :         return _Matches[static_cast<unsigned char>(_Ch)];

	movzx	eax, BYTE PTR [rcx]

; 760  :                 if (_Matches._Match(*_Match_try)) {

	cmp	BYTE PTR _Matches$15[rbp+rax-256], 0
	jne	SHORT $LN818@DetectInte
	npad	3
$LL238@DetectInte:

; 762  :                 }
; 763  : 
; 764  :                 if (_Match_try == _Haystack) {

	cmp	rcx, rbx
	je	SHORT $LN819@DetectInte

; 755  :                                                                     // bitmap, fall back to the serial algorithm
; 756  :                 return _Traits_find_last_of<_Traits, false>(_Haystack, _Hay_size, _Start_at, _Needle, _Needle_size);
; 757  :             }
; 758  : 
; 759  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	dec	rcx

; 677  :         return _Matches[static_cast<unsigned char>(_Ch)];

	movzx	eax, BYTE PTR [rcx]

; 760  :                 if (_Matches._Match(*_Match_try)) {

	cmp	BYTE PTR _Matches$15[rbp+rax-256], 0
	je	SHORT $LL238@DetectInte
$LN818@DetectInte:

; 761  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match

	sub	rcx, rbx
	jmp	SHORT $LN235@DetectInte
$LN904@DetectInte:

; 678  :     }
; 679  : 
; 680  : private:
; 681  :     bool _Matches[256] = {};
; 682  : };
; 683  : 
; 684  : template <class _Elem>
; 685  : class _String_bitmap<_Elem, false> { // _String_bitmap for wchar_t/unsigned short/char16_t/char32_t/etc. types
; 686  : public:
; 687  :     static_assert(is_unsigned_v<_Elem>,
; 688  :         "Standard char_traits is only provided for char, wchar_t, char16_t, and char32_t. See N5687 [char.traits]. "
; 689  :         "Visual C++ accepts other unsigned integral types as an extension.");
; 690  : 
; 691  :     constexpr bool _Mark(const _Elem* _First, const _Elem* const _Last) noexcept {
; 692  :         // mark this bitmap such that the characters in [_First, _Last) are intended to match
; 693  :         // returns whether all inputs can be placed in the bitmap
; 694  :         for (; _First != _Last; ++_First) {
; 695  :             const auto _Ch = *_First;
; 696  :             if (_Ch >= 256U) {
; 697  :                 return false;
; 698  :             }
; 699  : 
; 700  :             _Matches[static_cast<unsigned char>(_Ch)] = true;
; 701  :         }
; 702  : 
; 703  :         return true;
; 704  :     }
; 705  : 
; 706  :     constexpr bool _Match(const _Elem _Ch) const noexcept { // test if _Ch is in the bitmap
; 707  :         return _Ch < 256U && _Matches[_Ch];
; 708  :     }
; 709  : 
; 710  : private:
; 711  :     bool _Matches[256] = {};
; 712  : };
; 713  : 
; 714  : template <class _Traits, bool _Special = _Is_specialization_v<_Traits, char_traits>>
; 715  : constexpr size_t _Traits_find_first_of(_In_reads_(_Hay_size) const _Traits_ptr_t<_Traits> _Haystack,
; 716  :     const size_t _Hay_size, const size_t _Start_at, _In_reads_(_Needle_size) const _Traits_ptr_t<_Traits> _Needle,
; 717  :     const size_t _Needle_size) noexcept {
; 718  :     // in [_Haystack, _Haystack + _Hay_size), look for one of [_Needle, _Needle + _Needle_size), at/after _Start_at
; 719  :     if (_Needle_size != 0 && _Start_at < _Hay_size) { // room for match, look for it
; 720  :         if constexpr (_Special) {
; 721  :             _String_bitmap<typename _Traits::char_type> _Matches;
; 722  :             if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the
; 723  :                                                                     // bitmap, fall back to the serial algorithm
; 724  :                 return _Traits_find_first_of<_Traits, false>(_Haystack, _Hay_size, _Start_at, _Needle, _Needle_size);
; 725  :             }
; 726  : 
; 727  :             const auto _End = _Haystack + _Hay_size;
; 728  :             for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {
; 729  :                 if (_Matches._Match(*_Match_try)) {
; 730  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match
; 731  :                 }
; 732  :             }
; 733  :         } else {
; 734  :             const auto _End = _Haystack + _Hay_size;
; 735  :             for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {
; 736  :                 if (_Traits::find(_Needle, _Needle_size, *_Match_try)) {
; 737  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match
; 738  :                 }
; 739  :             }
; 740  :         }
; 741  :     }
; 742  : 
; 743  :     return static_cast<size_t>(-1); // no match
; 744  : }
; 745  : 
; 746  : template <class _Traits, bool _Special = _Is_specialization_v<_Traits, char_traits>>
; 747  : constexpr size_t _Traits_find_last_of(_In_reads_(_Hay_size) const _Traits_ptr_t<_Traits> _Haystack,
; 748  :     const size_t _Hay_size, const size_t _Start_at, _In_reads_(_Needle_size) const _Traits_ptr_t<_Traits> _Needle,
; 749  :     const size_t _Needle_size) noexcept {
; 750  :     // in [_Haystack, _Haystack + _Hay_size), look for last of [_Needle, _Needle + _Needle_size), before _Start_at
; 751  :     if (_Needle_size != 0 && _Hay_size != 0) { // worth searching, do it

	mov	r8, -1
$LN819@DetectInte:

; 765  :                     break; // at beginning, no more chance for match
; 766  :                 }
; 767  :             }
; 768  :         } else {
; 769  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {
; 770  :                 if (_Traits::find(_Needle, _Needle_size, *_Match_try)) {
; 771  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match
; 772  :                 }
; 773  : 
; 774  :                 if (_Match_try == _Haystack) {
; 775  :                     break; // at beginning, no more chance for match
; 776  :                 }
; 777  :             }
; 778  :         }
; 779  :     }
; 780  : 
; 781  :     return static_cast<size_t>(-1); // no match

	mov	rcx, r8
$LN235@DetectInte:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 28   : 		std::string FileName = dirEntry.path().string().substr(dirEntry.path().string().find_last_of("/\\") + 1);

	inc	rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR FileName$11[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	edi, edi
	mov	QWORD PTR FileName$11[rbp-240], rdi

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR FileName$11[rbp-232], rdi

; 2260 :         if (_Mysize < _Off) {

	mov	rax, QWORD PTR $T4[rsp+16]
	cmp	rax, rcx
	jb	$LN835@DetectInte

; 2278 :         return (_STD min)(_Size, _Mysize - _Off);

	sub	rax, rcx
	mov	rsi, r8
	cmp	rax, -1
	cmovb	rsi, rax

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r12, QWORD PTR $T4[rsp]

; 2236 :         if (_Large_string_engaged()) {

	mov	rbx, QWORD PTR $T4[rsp+24]
	cmp	rbx, 16
	cmovae	r12, QWORD PTR $T4[rsp]

; 2511 :         _Construct<_Construct_strategy::_From_ptr>(

	add	r12, rcx

; 2620 :         if (_Count > max_size()) {

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	rsi, rax
	ja	$LN836@DetectInte

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR FileName$11[rbp-232], 15
	cmp	rsi, 16
	jae	SHORT $LN296@DetectInte

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR FileName$11[rbp-240], rsi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rsi
	mov	rdx, r12
	lea	rcx, QWORD PTR FileName$11[rbp-256]
	call	memcpy

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	BYTE PTR FileName$11[rbp+rsi-256], dil

; 2638 :             } else { // _Strat == _Construct_strategy::_From_string
; 2639 : #ifdef _INSERT_STRING_ANNOTATION
; 2640 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2641 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2642 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2643 : #endif // !_INSERT_STRING_ANNOTATION
; 2644 :             }
; 2645 : 
; 2646 :             _Proxy._Release();
; 2647 :             return;

	jmp	SHORT $LN294@DetectInte
$LN296@DetectInte:

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rdi, rsi
	or	rdi, 15
	cmp	rdi, rax

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN307@DetectInte

; 4716 :             return _Max;

	mov	rdi, rax
	jmp	SHORT $LN306@DetectInte
$LN307@DetectInte:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	rdi, 22
	mov	eax, 22
	cmovb	rdi, rax
$LN306@DetectInte:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rdi
	add	rdx, 1
	cmovb	rdx, r8
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	rbx, rax

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR FileName$11[rbp-256], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR FileName$11[rbp-240], rsi

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR FileName$11[rbp-232], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rsi
	mov	rdx, r12
	mov	rcx, rax
	call	memcpy

; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

	mov	BYTE PTR [rbx+rsi], 0
	mov	rbx, QWORD PTR $T4[rsp+24]
	mov	r14, QWORD PTR $T3[rsp+24]
	mov	r15, QWORD PTR $T3[rsp]
	xor	edi, edi
$LN294@DetectInte:

; 4572 :         return basic_string{*this, _Off, _Count};

	bts	r13d, 8
	mov	DWORD PTR $T2[rsp], r13d
	mov	DWORD PTR $T1[rsp], r13d

; 4832 :         if (_My_data._Large_string_engaged()) {

	cmp	r14, 16
	jb	SHORT $LN331@DetectInte

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	lea	rdx, QWORD PTR [r14+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, r15

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN343@DetectInte

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r15, QWORD PTR [r15-8]
	sub	rax, r15

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN340@DetectInte
$LN343@DetectInte:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, r15
	call	??3@YAXPEAX_K@Z				; operator delete
	mov	rbx, QWORD PTR $T4[rsp+24]
$LN331@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T3[rsp+16], rdi

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T3[rsp+24], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T3[rsp], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	cmp	rbx, 16
	jb	SHORT $LN360@DetectInte

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	lea	rdx, QWORD PTR [rbx+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T4[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN372@DetectInte

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN369@DetectInte
$LN372@DetectInte:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN360@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T4[rsp+16], rdi

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T4[rsp+24], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T4[rsp], 0

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdi, QWORD PTR FileName$11[rbp-256]

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	r14, QWORD PTR FileName$11[rbp-232]
	cmp	r14, 16
	setae	r13b

; 2236 :         if (_Large_string_engaged()) {

	mov	r12, QWORD PTR FileName$11[rbp-256]
	cmovae	rdi, r12

; 577  :     if (_Needle_size > _Hay_size || _Start_at > _Hay_size - _Needle_size) {

	mov	r15, QWORD PTR FileName$11[rbp-240]
	cmp	r15, 26
	jb	SHORT $LN6@DetectInte

; 578  :         // xpos cannot exist, report failure
; 579  :         // N4950 [string.view.find]/3 says:
; 580  :         // 1. _Start_at <= xpos
; 581  :         // 2. xpos + _Needle_size <= _Hay_size;
; 582  :         // therefore:
; 583  :         // 3. _Needle_size <= _Hay_size (by 2) (checked above)
; 584  :         // 4. _Start_at + _Needle_size <= _Hay_size (substitute 1 into 2)
; 585  :         // 5. _Start_at <= _Hay_size - _Needle_size (4, move _Needle_size to other side) (also checked above)
; 586  :         return static_cast<size_t>(-1);
; 587  :     }
; 588  : 
; 589  :     if (_Needle_size == 0) { // empty string always matches if xpos is possible
; 590  :         return _Start_at;
; 591  :     }
; 592  : 
; 593  :     const auto _Possible_matches_end = _Haystack + (_Hay_size - _Needle_size) + 1;

	lea	rsi, QWORD PTR [r15+rdi]

; 595  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

	lea	r8, QWORD PTR [rsi-25]
	sub	r8, rdi

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	mov	edx, 82					; 00000052H
	mov	rcx, rdi
	call	memchr
	mov	rbx, rax

; 596  :         if (!_Match_try) { // didn't find first character; report failure

	test	rax, rax
	je	SHORT $LN6@DetectInte
	npad	14
$LL389@DetectInte:

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	mov	r8d, 26
	lea	rdx, OFFSET FLAT:??_C@_0BL@LIPGCHMK@ResourceSizeTable?4Product?4@
	mov	rcx, rbx
	call	memcmp

; 600  :         if (_Traits::compare(_Match_try, _Needle, _Needle_size) == 0) { // found match

	test	eax, eax
	je	SHORT $LN821@DetectInte

; 594  :     for (auto _Match_try = _Haystack + _Start_at;; ++_Match_try) {

	inc	rbx

; 595  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

	lea	r8, QWORD PTR [rsi-25]
	sub	r8, rbx

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	mov	edx, 82					; 00000052H
	mov	rcx, rbx
	call	memchr
	mov	rbx, rax

; 596  :         if (!_Match_try) { // didn't find first character; report failure

	test	rax, rax
	jne	SHORT $LL389@DetectInte
$LN6@DetectInte:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r14, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN903@DetectInte

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	lea	rdx, QWORD PTR [r14+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, r12

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN455@DetectInte

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r12, QWORD PTR [r12-8]
	sub	rax, r12

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN452@DetectInte
$LN455@DetectInte:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, r12
	call	??3@YAXPEAX_K@Z				; operator delete
$LN903@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2898 :             const auto _Error = _Recursive_dir_enum_impl::_Advance_and_reset_if_no_more_files(_Impl);

	mov	r14d, DWORD PTR $T2[rsp]
$LN2@DetectInte:
	lea	rcx, QWORD PTR <begin>$L0$12[rbp-256]
	call	?_Advance_and_reset_if_no_more_files@_Recursive_dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Recursive_dir_enum_impl@filesystem@std@@@3@@Z ; std::filesystem::_Recursive_dir_enum_impl::_Advance_and_reset_if_no_more_files

; 2899 :             if (_Error != __std_win_error::_Success) {

	test	eax, eax
	jne	$LN829@DetectInte
	jmp	$LL429@DetectInte
$LN821@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 601  :             return static_cast<size_t>(_Match_try - _Haystack);

	sub	rbx, rdi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 29   : 		if (FileName.find("ResourceSizeTable.Product.") != 0 ||

	jne	SHORT $LN6@DetectInte
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdi, QWORD PTR FileName$11[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	test	r13b, r13b
	cmovne	rdi, r12

; 577  :     if (_Needle_size > _Hay_size || _Start_at > _Hay_size - _Needle_size) {

	cmp	r15, 14
	jb	SHORT $LN6@DetectInte

; 578  :         // xpos cannot exist, report failure
; 579  :         // N4950 [string.view.find]/3 says:
; 580  :         // 1. _Start_at <= xpos
; 581  :         // 2. xpos + _Needle_size <= _Hay_size;
; 582  :         // therefore:
; 583  :         // 3. _Needle_size <= _Hay_size (by 2) (checked above)
; 584  :         // 4. _Start_at + _Needle_size <= _Hay_size (substitute 1 into 2)
; 585  :         // 5. _Start_at <= _Hay_size - _Needle_size (4, move _Needle_size to other side) (also checked above)
; 586  :         return static_cast<size_t>(-1);
; 587  :     }
; 588  : 
; 589  :     if (_Needle_size == 0) { // empty string always matches if xpos is possible
; 590  :         return _Start_at;
; 591  :     }
; 592  : 
; 593  :     const auto _Possible_matches_end = _Haystack + (_Hay_size - _Needle_size) + 1;

	lea	rsi, QWORD PTR [rdi+r15]

; 595  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

	lea	r8, QWORD PTR [rsi-13]
	sub	r8, rdi

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	lea	edx, QWORD PTR [rbx+46]
	mov	rcx, rdi
	call	memchr
	mov	rbx, rax

; 596  :         if (!_Match_try) { // didn't find first character; report failure

	test	rax, rax
	je	$LN6@DetectInte
	npad	13
$LL472@DetectInte:

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	mov	r8d, 14
	lea	rdx, OFFSET FLAT:??_C@_0P@EBEHGJBJ@?4rsizetable?4zs@
	mov	rcx, rbx
	call	memcmp

; 600  :         if (_Traits::compare(_Match_try, _Needle, _Needle_size) == 0) { // found match

	test	eax, eax
	je	SHORT $LN823@DetectInte

; 594  :     for (auto _Match_try = _Haystack + _Start_at;; ++_Match_try) {

	inc	rbx

; 595  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

	lea	r8, QWORD PTR [rsi-13]
	sub	r8, rbx

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	mov	edx, 46					; 0000002eH
	mov	rcx, rbx
	call	memchr
	mov	rbx, rax

; 596  :         if (!_Match_try) { // didn't find first character; report failure

	test	rax, rax
	jne	SHORT $LL472@DetectInte

; 597  :             return static_cast<size_t>(-1);

	jmp	$LN6@DetectInte
$LN823@DetectInte:

; 601  :             return static_cast<size_t>(_Match_try - _Haystack);

	sub	rbx, rdi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 29   : 		if (FileName.find("ResourceSizeTable.Product.") != 0 ||

	cmp	rbx, -1
	je	$LN6@DetectInte
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rsi, QWORD PTR FileName$11[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	test	r13b, r13b
	cmovne	rsi, r12

; 593  :     const auto _Possible_matches_end = _Haystack + (_Hay_size - _Needle_size) + 1;

	lea	rdi, QWORD PTR [rsi+r15]

; 595  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

	lea	r8, QWORD PTR [rdi-25]
	sub	r8, rsi

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	mov	edx, 82					; 00000052H
	mov	rcx, rsi
	call	memchr
	mov	rbx, rax

; 596  :         if (!_Match_try) { // didn't find first character; report failure

	test	rax, rax
	je	SHORT $LN824@DetectInte
	npad	11
$LL495@DetectInte:

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	mov	r8d, 26
	lea	rdx, OFFSET FLAT:??_C@_0BL@LIPGCHMK@ResourceSizeTable?4Product?4@
	mov	rcx, rbx
	call	memcmp

; 600  :         if (_Traits::compare(_Match_try, _Needle, _Needle_size) == 0) { // found match

	test	eax, eax
	je	SHORT $LN825@DetectInte

; 594  :     for (auto _Match_try = _Haystack + _Start_at;; ++_Match_try) {

	inc	rbx

; 595  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

	lea	r8, QWORD PTR [rdi-25]
	sub	r8, rbx

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	mov	edx, 82					; 00000052H
	mov	rcx, rbx
	call	memchr
	mov	rbx, rax

; 596  :         if (!_Match_try) { // didn't find first character; report failure

	test	rax, rax
	jne	SHORT $LL495@DetectInte
$LN824@DetectInte:

; 597  :             return static_cast<size_t>(-1);

	mov	rcx, -1
	mov	rbx, rcx
$LN494@DetectInte:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 34   : 		size_t start = FileName.find("ResourceSizeTable.Product.") + strlen("ResourceSizeTable.Product.");

	lea	r14, QWORD PTR [rbx+26]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rsi, QWORD PTR FileName$11[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	test	r13b, r13b
	cmovne	rsi, r12

; 577  :     if (_Needle_size > _Hay_size || _Start_at > _Hay_size - _Needle_size) {

	cmp	r15, 1
	jb	SHORT $LN520@DetectInte
	lea	rax, QWORD PTR [r15-1]
	cmp	r14, rax
	ja	SHORT $LN520@DetectInte

; 578  :         // xpos cannot exist, report failure
; 579  :         // N4950 [string.view.find]/3 says:
; 580  :         // 1. _Start_at <= xpos
; 581  :         // 2. xpos + _Needle_size <= _Hay_size;
; 582  :         // therefore:
; 583  :         // 3. _Needle_size <= _Hay_size (by 2) (checked above)
; 584  :         // 4. _Start_at + _Needle_size <= _Hay_size (substitute 1 into 2)
; 585  :         // 5. _Start_at <= _Hay_size - _Needle_size (4, move _Needle_size to other side) (also checked above)
; 586  :         return static_cast<size_t>(-1);
; 587  :     }
; 588  : 
; 589  :     if (_Needle_size == 0) { // empty string always matches if xpos is possible
; 590  :         return _Start_at;
; 591  :     }
; 592  : 
; 593  :     const auto _Possible_matches_end = _Haystack + (_Hay_size - _Needle_size) + 1;

	lea	rbx, QWORD PTR [rax+rsi]

; 594  :     for (auto _Match_try = _Haystack + _Start_at;; ++_Match_try) {

	lea	rcx, QWORD PTR [rsi+r14]

; 595  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

	lea	r8, QWORD PTR [rbx+1]
	sub	r8, rcx

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	mov	edx, 46					; 0000002eH
	call	memchr
	mov	rdi, rax

; 596  :         if (!_Match_try) { // didn't find first character; report failure

	test	rax, rax
	je	SHORT $LN826@DetectInte
$LL518@DetectInte:

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	cmp	BYTE PTR [rdi], 46			; 0000002eH
	jne	SHORT $LN900@DetectInte
	xor	eax, eax
	jmp	SHORT $LN901@DetectInte
$LN825@DetectInte:

; 601  :             return static_cast<size_t>(_Match_try - _Haystack);

	sub	rbx, rsi
	mov	rcx, -1
	jmp	SHORT $LN494@DetectInte
$LN900@DetectInte:

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	sbb	eax, eax
	or	eax, 1
$LN901@DetectInte:

; 600  :         if (_Traits::compare(_Match_try, _Needle, _Needle_size) == 0) { // found match

	test	eax, eax
	je	$LN827@DetectInte

; 594  :     for (auto _Match_try = _Haystack + _Start_at;; ++_Match_try) {

	inc	rdi

; 595  :         _Match_try = _Traits::find(_Match_try, static_cast<size_t>(_Possible_matches_end - _Match_try), *_Needle);

	lea	r8, QWORD PTR [rbx+1]
	sub	r8, rdi

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	mov	edx, 46					; 0000002eH
	mov	rcx, rdi
	call	memchr
	mov	rdi, rax

; 596  :         if (!_Match_try) { // didn't find first character; report failure

	test	rax, rax
	jne	SHORT $LL518@DetectInte
$LN826@DetectInte:

; 597  :             return static_cast<size_t>(-1);

	mov	rcx, -1
$LN520@DetectInte:

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	mov	rdi, rcx
$LN517@DetectInte:
	xorps	xmm0, xmm0
	movups	XMMWORD PTR Version$10[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	eax, eax
	mov	QWORD PTR Version$10[rbp-240], rax

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR Version$10[rbp-232], rax

; 2260 :         if (_Mysize < _Off) {

	cmp	r15, r14
	jb	$LN837@DetectInte
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 37   : 		std::string Version = FileName.substr(start, end - start);

	sub	rdi, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2278 :         return (_STD min)(_Size, _Mysize - _Off);

	sub	r15, r14
	cmp	r15, rdi
	cmovb	rdi, r15

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR FileName$11[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	test	r13b, r13b
	cmovne	rax, r12

; 2511 :         _Construct<_Construct_strategy::_From_ptr>(

	add	r14, rax

; 2620 :         if (_Count > max_size()) {

	mov	r12, 9223372036854775807		; 7fffffffffffffffH
	cmp	rdi, r12
	ja	$LN838@DetectInte

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR Version$10[rbp-232], 15
	cmp	rdi, 16
	jae	SHORT $LN558@DetectInte

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR Version$10[rbp-240], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rdi
	mov	rdx, r14
	lea	rcx, QWORD PTR Version$10[rbp-256]
	call	memcpy

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	BYTE PTR Version$10[rbp+rdi-256], 0

; 2638 :             } else { // _Strat == _Construct_strategy::_From_string
; 2639 : #ifdef _INSERT_STRING_ANNOTATION
; 2640 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2641 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2642 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2643 : #endif // !_INSERT_STRING_ANNOTATION
; 2644 :             }
; 2645 : 
; 2646 :             _Proxy._Release();
; 2647 :             return;

	jmp	SHORT $LN556@DetectInte
$LN827@DetectInte:

; 601  :             return static_cast<size_t>(_Match_try - _Haystack);

	sub	rdi, rsi
	mov	rcx, -1
	jmp	SHORT $LN517@DetectInte
$LN558@DetectInte:

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rsi, rdi
	or	rsi, 15
	cmp	rsi, r12

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN569@DetectInte

; 4716 :             return _Max;

	mov	rsi, r12
	jmp	SHORT $LN568@DetectInte
$LN569@DetectInte:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	rsi, 22
	mov	eax, 22
	cmovb	rsi, rax
$LN568@DetectInte:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rsi
	add	rdx, 1
	cmovb	rdx, rcx
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	rbx, rax

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR Version$10[rbp-256], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR Version$10[rbp-240], rdi

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR Version$10[rbp-232], rsi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rdi
	mov	rdx, r14
	mov	rcx, rax
	call	memcpy

; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

	mov	BYTE PTR [rdi+rbx], 0
$LN556@DetectInte:

; 4572 :         return basic_string{*this, _Off, _Count};

	mov	r14d, DWORD PTR $T2[rsp]
	bts	r14d, 9
	mov	DWORD PTR $T1[rsp], r14d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string

; 90   :     int& _Errno_ref  = errno; // Nonzero cost, pay it once

	call	QWORD PTR __imp__errno
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	lea	rbx, OFFSET FLAT:?InternalGameVersion@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::InternalGameVersion
	cmp	QWORD PTR ?InternalGameVersion@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24, 16
	cmovae	rbx, QWORD PTR ?InternalGameVersion@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string

; 93   :     _Errno_ref      = 0;

	xor	r15d, r15d
	mov	DWORD PTR [rax], r15d

; 94   :     const long _Ans = _CSTD strtol(_Ptr, &_Eptr, _Base);

	lea	r8d, QWORD PTR [r15+10]
	lea	rdx, QWORD PTR _Eptr$8[rbp-256]
	mov	rcx, rbx
	call	QWORD PTR __imp_strtol
	mov	esi, eax

; 95   : 
; 96   :     if (_Ptr == _Eptr) {

	cmp	rbx, QWORD PTR _Eptr$8[rbp-256]
	je	$LN839@DetectInte

; 98   :     }
; 99   : 
; 100  :     if (_Errno_ref == ERANGE) {

	cmp	DWORD PTR [rdi], 34			; 00000022H
	je	$LN840@DetectInte

; 90   :     int& _Errno_ref  = errno; // Nonzero cost, pay it once

	call	QWORD PTR __imp__errno
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rbx, QWORD PTR Version$10[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR Version$10[rbp-232], 16
	cmovae	rbx, QWORD PTR Version$10[rbp-256]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string

; 93   :     _Errno_ref      = 0;

	mov	DWORD PTR [rax], r15d

; 94   :     const long _Ans = _CSTD strtol(_Ptr, &_Eptr, _Base);

	lea	r8d, QWORD PTR [r15+10]
	lea	rdx, QWORD PTR _Eptr$9[rbp-256]
	mov	rcx, rbx
	call	QWORD PTR __imp_strtol

; 95   : 
; 96   :     if (_Ptr == _Eptr) {

	cmp	rbx, QWORD PTR _Eptr$9[rbp-256]
	je	$LN841@DetectInte

; 98   :     }
; 99   : 
; 100  :     if (_Errno_ref == ERANGE) {

	cmp	DWORD PTR [rdi], 34			; 00000022H
	je	$LN842@DetectInte
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 38   : 		if (stoi(Editor::InternalGameVersion) <= stoi(Version)) {

	cmp	esi, eax
	jg	SHORT $LN792@DetectInte
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR Version$10[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR Version$10[rbp-232], 16
	cmovae	rdx, QWORD PTR Version$10[rbp-256]

; 3192 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, QWORD PTR Version$10[rbp-240]
	lea	rcx, OFFSET FLAT:?InternalGameVersion@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; Editor::InternalGameVersion
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	npad	1
$LN792@DetectInte:

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR Version$10[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN617@DetectInte

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR Version$10[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN629@DetectInte

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN626@DetectInte
$LN629@DetectInte:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN617@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	mov	QWORD PTR Version$10[rbp-240], r15

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR Version$10[rbp-232], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR Version$10[rbp-256], 0

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR FileName$11[rbp-232]
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	$LN2@DetectInte

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR FileName$11[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN658@DetectInte

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN452@DetectInte
$LN658@DetectInte:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3126 :     }

	jmp	$LN2@DetectInte
$LN340@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN369@DetectInte:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN626@DetectInte:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN842@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string

; 101  :         _Xout_of_range("stoi argument out of range");

	lea	rcx, OFFSET FLAT:??_C@_0BL@MFFNMGGC@stoi?5argument?5out?5of?5range@
	call	QWORD PTR __imp_?_Xout_of_range@std@@YAXPEBD@Z
	int	3
$LN841@DetectInte:

; 97   :         _Xinvalid_argument("invalid stoi argument");

	lea	rcx, OFFSET FLAT:??_C@_0BG@HGEDEDEC@invalid?5stoi?5argument@
	call	QWORD PTR __imp_?_Xinvalid_argument@std@@YAXPEBD@Z
	int	3
$LN840@DetectInte:

; 101  :         _Xout_of_range("stoi argument out of range");

	lea	rcx, OFFSET FLAT:??_C@_0BL@MFFNMGGC@stoi?5argument?5out?5of?5range@
	call	QWORD PTR __imp_?_Xout_of_range@std@@YAXPEBD@Z
	int	3
$LN839@DetectInte:

; 97   :         _Xinvalid_argument("invalid stoi argument");

	lea	rcx, OFFSET FLAT:??_C@_0BG@HGEDEDEC@invalid?5stoi?5argument@
	call	QWORD PTR __imp_?_Xinvalid_argument@std@@YAXPEBD@Z
	npad	1
$LN452@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN3@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1402 :         if (_Rep) {

	mov	rcx, QWORD PTR <begin>$L0$12[rbp-248]
	mov	rdi, -1
	test	rcx, rcx
	je	SHORT $LN426@DetectInte

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, edi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN426@DetectInte

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR <begin>$L0$12[rbp-248]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	mov	eax, edi
	lock xadd DWORD PTR [rbx+12], eax
	cmp	eax, 1
	jne	SHORT $LN426@DetectInte

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR <begin>$L0$12[rbp-248]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN426@DetectInte:

; 1402 :         if (_Rep) {

	mov	rbx, QWORD PTR $S8$13[rbp-248]
	test	rbx, rbx
	je	SHORT $LN224@DetectInte

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, edi
	lock xadd DWORD PTR [rbx+8], eax
	cmp	eax, 1
	jne	SHORT $LN224@DetectInte

; 1178 :             _Destroy();

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	lock xadd DWORD PTR [rbx+12], edi
	cmp	edi, 1
	jne	SHORT $LN224@DetectInte

; 1185 :             _Delete_this();

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+8]
$LN224@DetectInte:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 42   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+672]
	mov	rbx, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rdi, QWORD PTR [r11+64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
$LN835@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2261 :             _Xran();

	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
	npad	1
$LN829@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2900 :                 _Throw_fs_error("recursive_directory_iterator::operator++", _Error);

	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0CJ@OMKENMFB@recursive_directory_iterator?3?3o@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@@Z ; std::filesystem::_Throw_fs_error
	npad	1
$LN831@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 53   :         _Throw_system_error_from_std_win_error(_Result._Err);

	mov	ecx, DWORD PTR tv726[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN830@DetectInte:
	mov	ecx, DWORD PTR tv671[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN828@DetectInte:

; 66   :             _Throw_system_error(errc::invalid_argument);

	call	?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
	npad	1
$LN834@DetectInte:

; 53   :         _Throw_system_error_from_std_win_error(_Result._Err);

	mov	ecx, DWORD PTR tv395[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN833@DetectInte:
	mov	ecx, DWORD PTR tv372[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN832@DetectInte:

; 66   :             _Throw_system_error(errc::invalid_argument);

	call	?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
	npad	1
$LN838@DetectInte:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2621 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN837@DetectInte:

; 2261 :             _Xran();

	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
	npad	1
$LN836@DetectInte:

; 2621 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN906@DetectInte:
?DetectInternalGameVersion@Editor@@YAXXZ ENDP		; Editor::DetectInternalGameVersion
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
tv3881 = 56
tv726 = 56
tv671 = 56
tv395 = 56
tv372 = 56
$T3 = 64
$T4 = 96
tv3814 = 128
$T5 = 136
$T6 = 168
$T7 = 200
_Eptr$8 = 264
_Eptr$9 = 272
Version$10 = 280
FileName$11 = 312
<begin>$L0$12 = 352
$S8$13 = 368
<end>$L0$14 = 384
_Matches$15 = 400
__$ArrayPad$ = 656
?dtor$1@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA PROC ; `Editor::DetectInternalGameVersion'::`1'::dtor$1
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA ENDP ; `Editor::DetectInternalGameVersion'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
tv3881 = 56
tv726 = 56
tv671 = 56
tv395 = 56
tv372 = 56
$T3 = 64
$T4 = 96
tv3814 = 128
$T5 = 136
$T6 = 168
$T7 = 200
_Eptr$8 = 264
_Eptr$9 = 272
Version$10 = 280
FileName$11 = 312
<begin>$L0$12 = 352
$S8$13 = 368
<end>$L0$14 = 384
_Matches$15 = 400
__$ArrayPad$ = 656
?dtor$2@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA PROC ; `Editor::DetectInternalGameVersion'::`1'::dtor$2
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$2@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA ENDP ; `Editor::DetectInternalGameVersion'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
tv3881 = 56
tv726 = 56
tv671 = 56
tv395 = 56
tv372 = 56
$T3 = 64
$T4 = 96
tv3814 = 128
$T5 = 136
$T6 = 168
$T7 = 200
_Eptr$8 = 264
_Eptr$9 = 272
Version$10 = 280
FileName$11 = 312
<begin>$L0$12 = 352
$S8$13 = 368
<end>$L0$14 = 384
_Matches$15 = 400
__$ArrayPad$ = 656
?dtor$3@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA PROC ; `Editor::DetectInternalGameVersion'::`1'::dtor$3
	lea	rcx, QWORD PTR $S8$13[rdx]
	jmp	??1recursive_directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::recursive_directory_iterator::~recursive_directory_iterator
?dtor$3@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA ENDP ; `Editor::DetectInternalGameVersion'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
tv3881 = 56
tv726 = 56
tv671 = 56
tv395 = 56
tv372 = 56
$T3 = 64
$T4 = 96
tv3814 = 128
$T5 = 136
$T6 = 168
$T7 = 200
_Eptr$8 = 264
_Eptr$9 = 272
Version$10 = 280
FileName$11 = 312
<begin>$L0$12 = 352
$S8$13 = 368
<end>$L0$14 = 384
_Matches$15 = 400
__$ArrayPad$ = 656
?dtor$5@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA PROC ; `Editor::DetectInternalGameVersion'::`1'::dtor$5
	lea	rcx, QWORD PTR <begin>$L0$12[rdx]
	jmp	??1recursive_directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::recursive_directory_iterator::~recursive_directory_iterator
?dtor$5@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA ENDP ; `Editor::DetectInternalGameVersion'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
tv3881 = 56
tv726 = 56
tv671 = 56
tv395 = 56
tv372 = 56
$T3 = 64
$T4 = 96
tv3814 = 128
$T5 = 136
$T6 = 168
$T7 = 200
_Eptr$8 = 264
_Eptr$9 = 272
Version$10 = 280
FileName$11 = 312
<begin>$L0$12 = 352
$S8$13 = 368
<end>$L0$14 = 384
_Matches$15 = 400
__$ArrayPad$ = 656
?dtor$7@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA PROC ; `Editor::DetectInternalGameVersion'::`1'::dtor$7
	lea	rcx, QWORD PTR <end>$L0$14[rdx]
	jmp	??1recursive_directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::recursive_directory_iterator::~recursive_directory_iterator
?dtor$7@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA ENDP ; `Editor::DetectInternalGameVersion'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
tv3881 = 56
tv726 = 56
tv671 = 56
tv395 = 56
tv372 = 56
$T3 = 64
$T4 = 96
tv3814 = 128
$T5 = 136
$T6 = 168
$T7 = 200
_Eptr$8 = 264
_Eptr$9 = 272
Version$10 = 280
FileName$11 = 312
<begin>$L0$12 = 352
$S8$13 = 368
<end>$L0$14 = 384
_Matches$15 = 400
__$ArrayPad$ = 656
?dtor$22@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA PROC ; `Editor::DetectInternalGameVersion'::`1'::dtor$22
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN145@dtor$22
	and	DWORD PTR $T1[rbp], -129		; ffffffffffffff7fH
	lea	rcx, QWORD PTR $T4[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN145@dtor$22:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$22@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA ENDP ; `Editor::DetectInternalGameVersion'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
tv3881 = 56
tv726 = 56
tv671 = 56
tv395 = 56
tv372 = 56
$T3 = 64
$T4 = 96
tv3814 = 128
$T5 = 136
$T6 = 168
$T7 = 200
_Eptr$8 = 264
_Eptr$9 = 272
Version$10 = 280
FileName$11 = 312
<begin>$L0$12 = 352
$S8$13 = 368
<end>$L0$14 = 384
_Matches$15 = 400
__$ArrayPad$ = 656
?dtor$8@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA PROC ; `Editor::DetectInternalGameVersion'::`1'::dtor$8
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$8@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA ENDP ; `Editor::DetectInternalGameVersion'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
tv3881 = 56
tv726 = 56
tv671 = 56
tv395 = 56
tv372 = 56
$T3 = 64
$T4 = 96
tv3814 = 128
$T5 = 136
$T6 = 168
$T7 = 200
_Eptr$8 = 264
_Eptr$9 = 272
Version$10 = 280
FileName$11 = 312
<begin>$L0$12 = 352
$S8$13 = 368
<end>$L0$14 = 384
_Matches$15 = 400
__$ArrayPad$ = 656
?dtor$15@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA PROC ; `Editor::DetectInternalGameVersion'::`1'::dtor$15
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN51@dtor$15
	and	DWORD PTR $T1[rbp], -9
	lea	rcx, QWORD PTR $T3[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN51@dtor$15:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$15@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA ENDP ; `Editor::DetectInternalGameVersion'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
tv3881 = 56
tv726 = 56
tv671 = 56
tv395 = 56
tv372 = 56
$T3 = 64
$T4 = 96
tv3814 = 128
$T5 = 136
$T6 = 168
$T7 = 200
_Eptr$8 = 264
_Eptr$9 = 272
Version$10 = 280
FileName$11 = 312
<begin>$L0$12 = 352
$S8$13 = 368
<end>$L0$14 = 384
_Matches$15 = 400
__$ArrayPad$ = 656
?dtor$9@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA PROC ; `Editor::DetectInternalGameVersion'::`1'::dtor$9
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$9@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA ENDP ; `Editor::DetectInternalGameVersion'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
tv3881 = 56
tv726 = 56
tv671 = 56
tv395 = 56
tv372 = 56
$T3 = 64
$T4 = 96
tv3814 = 128
$T5 = 136
$T6 = 168
$T7 = 200
_Eptr$8 = 264
_Eptr$9 = 272
Version$10 = 280
FileName$11 = 312
<begin>$L0$12 = 352
$S8$13 = 368
<end>$L0$14 = 384
_Matches$15 = 400
__$ArrayPad$ = 656
?dtor$10@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA PROC ; `Editor::DetectInternalGameVersion'::`1'::dtor$10
	lea	rcx, QWORD PTR FileName$11[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$10@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA ENDP ; `Editor::DetectInternalGameVersion'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
tv3881 = 56
tv726 = 56
tv671 = 56
tv395 = 56
tv372 = 56
$T3 = 64
$T4 = 96
tv3814 = 128
$T5 = 136
$T6 = 168
$T7 = 200
_Eptr$8 = 264
_Eptr$9 = 272
Version$10 = 280
FileName$11 = 312
<begin>$L0$12 = 352
$S8$13 = 368
<end>$L0$14 = 384
_Matches$15 = 400
__$ArrayPad$ = 656
?dtor$11@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA PROC ; `Editor::DetectInternalGameVersion'::`1'::dtor$11
	lea	rcx, QWORD PTR Version$10[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$11@?0??DetectInternalGameVersion@Editor@@YAXXZ@4HA ENDP ; `Editor::DetectInternalGameVersion'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp
;	COMDAT ?InitializeWithEdtc@Editor@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 112
$T8 = 112
?InitializeWithEdtc@Editor@@YAXXZ PROC			; Editor::InitializeWithEdtc, COMDAT

; 79   : {

$LN74:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96					; 00000060H

; 80   : 	EditorConfig::Load();

	call	?Load@EditorConfig@@YAXXZ		; EditorConfig::Load

; 81   : 
; 82   : 	if (Editor::RomFSDir.empty())

	cmp	QWORD PTR ?RomFSDir@Editor@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, 0
	jne	SHORT $LN2@Initialize

; 84   : 		Logger::Error("Editor", "RomFS path invalid");

	lea	rax, QWORD PTR $T3[rbp-96]
	mov	QWORD PTR $T8[rbp-96], rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T3[rbp-96], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	ebx, ebx
	mov	QWORD PTR $T3[rbp-80], rbx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T3[rbp-72], rbx

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	r8d, QWORD PTR [rbx+18]
	lea	rdx, OFFSET FLAT:??_C@_0BD@NNDIHOB@RomFS?5path?5invalid@
	lea	rcx, QWORD PTR $T3[rbp-96]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T6[rbp-96], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T6[rbp-80], rbx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T6[rbp-72], rbx

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	r8d, QWORD PTR [rbx+6]
	lea	rdx, OFFSET FLAT:??_C@_06MJDIICIN@Editor@
	lea	rcx, QWORD PTR $T6[rbp-96]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 84   : 		Logger::Error("Editor", "RomFS path invalid");

	lea	rdx, QWORD PTR $T3[rbp-96]
	lea	rcx, QWORD PTR $T6[rbp-96]
	call	?Error@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Error

; 93   : }

	mov	rbx, QWORD PTR [rsp+128]
	add	rsp, 96					; 00000060H
	pop	rbp
	ret	0
$LN2@Initialize:

; 85   : 		return;
; 86   : 	}
; 87   : 
; 88   : 	Editor::DetectInternalGameVersion();

	call	?DetectInternalGameVersion@Editor@@YAXXZ ; Editor::DetectInternalGameVersion
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T5[rbp-96], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	ebx, ebx
	mov	QWORD PTR $T5[rbp-80], rbx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T5[rbp-72], rbx

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	r8d, QWORD PTR [rbx+18]
	lea	rdx, OFFSET FLAT:??_C@_0BD@IKBLPJFL@Pack?1ZsDic?4pack?4zs@
	lea	rcx, QWORD PTR $T5[rbp-96]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 89   : 	ZStdFile::Initialize(Editor::GetRomFSFile("Pack/ZsDic.pack.zs"));

	mov	r8b, 1
	lea	rdx, QWORD PTR $T5[rbp-96]
	lea	rcx, QWORD PTR $T2[rbp-96]
	call	?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z ; Editor::GetRomFSFile
	mov	rcx, rax
	call	?Initialize@ZStdFile@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; ZStdFile::Initialize

; 90   : 	UIActorTool::UpdateActorList();

	call	?UpdateActorList@UIActorTool@@YAXXZ	; UIActorTool::UpdateActorList

; 92   : 	Logger::Info("Editor", "Initialized");

	lea	rax, QWORD PTR $T4[rbp-96]
	mov	QWORD PTR $T7[rbp-96], rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T4[rbp-96], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T4[rbp-80], rbx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T4[rbp-72], rbx

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	r8d, QWORD PTR [rbx+11]
	lea	rdx, OFFSET FLAT:??_C@_0M@OJIBHFOA@Initialized@
	lea	rcx, QWORD PTR $T4[rbp-96]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T1[rbp-96], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T1[rbp-80], rbx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T1[rbp-72], rbx

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	r8d, QWORD PTR [rbx+6]
	lea	rdx, OFFSET FLAT:??_C@_06MJDIICIN@Editor@
	lea	rcx, QWORD PTR $T1[rbp-96]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Editor.cpp

; 92   : 	Logger::Info("Editor", "Initialized");

	lea	rdx, QWORD PTR $T4[rbp-96]
	lea	rcx, QWORD PTR $T1[rbp-96]
	call	?Info@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Info

; 93   : }

	mov	rbx, QWORD PTR [rsp+128]
	add	rsp, 96					; 00000060H
	pop	rbp
	ret	0
?InitializeWithEdtc@Editor@@YAXXZ ENDP			; Editor::InitializeWithEdtc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 112
$T8 = 112
?dtor$0@?0??InitializeWithEdtc@Editor@@YAXXZ@4HA PROC	; `Editor::InitializeWithEdtc'::`1'::dtor$0
	mov	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??InitializeWithEdtc@Editor@@YAXXZ@4HA ENDP	; `Editor::InitializeWithEdtc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 112
$T8 = 112
?dtor$4@?0??InitializeWithEdtc@Editor@@YAXXZ@4HA PROC	; `Editor::InitializeWithEdtc'::`1'::dtor$4
	mov	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??InitializeWithEdtc@Editor@@YAXXZ@4HA ENDP	; `Editor::InitializeWithEdtc'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
_TEXT	SEGMENT
_Matches$1 = 32
__$ArrayPad$ = 288
this$ = 320
_Ptr$ = 328
_Off$dead$ = 336
?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_of, COMDAT

; 4468 :         _In_z_ const _Elem* const _Ptr, const size_type _Off = npos) const noexcept /* strengthened */ {

$LN68:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rdx
	mov	rsi, rcx

; 400  :             return __builtin_strlen(_First);

	mov	rdi, -1
$LL58@find_last_:
	inc	rdi
	cmp	BYTE PTR [rdx+rdi], 0
	jne	SHORT $LL58@find_last_

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16

; 4469 :         // look for one of [_Ptr, <null>) before _Off
; 4470 :         return static_cast<size_type>(_Traits_find_last_of<_Traits>(

	mov	rbp, QWORD PTR [rcx+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN6@find_last_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rsi, QWORD PTR [rcx]
$LN6@find_last_:

; 751  :     if (_Needle_size != 0 && _Hay_size != 0) { // worth searching, do it

	test	rdi, rdi
	je	SHORT $LN48@find_last_
	test	rbp, rbp
	je	SHORT $LN48@find_last_
	xor	edx, edx
	lea	rcx, QWORD PTR _Matches$1[rsp]
	mov	r8d, 256				; 00000100H
	call	memset

; 752  :         if constexpr (_Special) {
; 753  :             _String_bitmap<typename _Traits::char_type> _Matches;
; 754  :             if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the

	lea	rcx, QWORD PTR [rdi+rbx]

; 669  :         for (; _First != _Last; ++_First) {

	cmp	rbx, rcx
	je	SHORT $LN23@find_last_
	npad	14
$LL24@find_last_:

; 670  :             _Matches[static_cast<unsigned char>(*_First)] = true;

	movzx	eax, BYTE PTR [rbx]
	inc	rbx
	mov	BYTE PTR _Matches$1[rsp+rax], 1
	cmp	rbx, rcx
	jne	SHORT $LL24@find_last_
$LN23@find_last_:

; 759  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	lea	rcx, QWORD PTR [rbp-1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	mov	rax, -1
	cmp	rcx, rax
	cmovb	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 759  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	add	rax, rsi

; 677  :         return _Matches[static_cast<unsigned char>(_Ch)];

	movzx	ecx, BYTE PTR [rax]

; 760  :                 if (_Matches._Match(*_Match_try)) {

	cmp	BYTE PTR _Matches$1[rsp+rcx], 0
	jne	SHORT $LN47@find_last_
	npad	1
$LL13@find_last_:

; 762  :                 }
; 763  : 
; 764  :                 if (_Match_try == _Haystack) {

	cmp	rax, rsi
	je	SHORT $LN48@find_last_

; 677  :         return _Matches[static_cast<unsigned char>(_Ch)];

	movzx	ecx, BYTE PTR [rax-1]

; 759  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	dec	rax

; 760  :                 if (_Matches._Match(*_Match_try)) {

	cmp	BYTE PTR _Matches$1[rsp+rcx], 0
	je	SHORT $LL13@find_last_
$LN47@find_last_:

; 761  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match

	sub	rax, rsi
	jmp	SHORT $LN10@find_last_
$LN48@find_last_:

; 4469 :         // look for one of [_Ptr, <null>) before _Off
; 4470 :         return static_cast<size_type>(_Traits_find_last_of<_Traits>(

	mov	rax, -1
$LN10@find_last_:

; 4471 :             _Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off, _Ptr, _Traits::length(_Ptr)));
; 4472 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+304]
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+32]
	mov	rsi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	rdi
	ret	0
?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_of
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??$_Traits_find_last_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z
_TEXT	SEGMENT
_Matches$1 = 32
__$ArrayPad$ = 288
_Haystack$ = 320
_Hay_size$ = 328
_Start_at$dead$ = 336
_Needle$ = 344
_Needle_size$ = 352
??$_Traits_find_last_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z PROC ; std::_Traits_find_last_of<std::char_traits<char>,1>, COMDAT

; 749  :     const size_t _Needle_size) noexcept {

$LN56:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 750  :     // in [_Haystack, _Haystack + _Hay_size), look for last of [_Needle, _Needle + _Needle_size), before _Start_at
; 751  :     if (_Needle_size != 0 && _Hay_size != 0) { // worth searching, do it

	mov	rbp, QWORD PTR _Needle_size$[rsp]
	mov	rbx, r9
	mov	rsi, rdx
	mov	rdi, rcx
	test	rbp, rbp
	je	SHORT $LN39@Traits_fin
	test	rdx, rdx
	je	SHORT $LN39@Traits_fin

; 752  :         if constexpr (_Special) {
; 753  :             _String_bitmap<typename _Traits::char_type> _Matches;
; 754  :             if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the

	xor	edx, edx
	lea	rcx, QWORD PTR _Matches$1[rsp]
	mov	r8d, 256				; 00000100H
	call	memset
	lea	rcx, QWORD PTR [rbx+rbp]

; 669  :         for (; _First != _Last; ++_First) {

	cmp	rbx, rcx
	je	SHORT $LN14@Traits_fin
	npad	1
$LL15@Traits_fin:

; 670  :             _Matches[static_cast<unsigned char>(*_First)] = true;

	movzx	eax, BYTE PTR [rbx]
	inc	rbx
	mov	BYTE PTR _Matches$1[rsp+rax], 1
	cmp	rbx, rcx
	jne	SHORT $LL15@Traits_fin
$LN14@Traits_fin:

; 759  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	lea	rcx, QWORD PTR [rsi-1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	mov	rax, -1
	cmp	rcx, rax
	cmovb	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 759  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	add	rax, rdi

; 677  :         return _Matches[static_cast<unsigned char>(_Ch)];

	movzx	ecx, BYTE PTR [rax]

; 760  :                 if (_Matches._Match(*_Match_try)) {

	cmp	BYTE PTR _Matches$1[rsp+rcx], 0
	jne	SHORT $LN38@Traits_fin
	npad	1
$LL4@Traits_fin:

; 762  :                 }
; 763  : 
; 764  :                 if (_Match_try == _Haystack) {

	cmp	rax, rdi
	je	SHORT $LN39@Traits_fin

; 677  :         return _Matches[static_cast<unsigned char>(_Ch)];

	movzx	ecx, BYTE PTR [rax-1]

; 759  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	dec	rax

; 760  :                 if (_Matches._Match(*_Match_try)) {

	cmp	BYTE PTR _Matches$1[rsp+rcx], 0
	je	SHORT $LL4@Traits_fin
$LN38@Traits_fin:

; 761  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match

	sub	rax, rdi
	jmp	SHORT $LN1@Traits_fin
$LN39@Traits_fin:

; 765  :                     break; // at beginning, no more chance for match
; 766  :                 }
; 767  :             }
; 768  :         } else {
; 769  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {
; 770  :                 if (_Traits::find(_Needle, _Needle_size, *_Match_try)) {
; 771  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match
; 772  :                 }
; 773  : 
; 774  :                 if (_Match_try == _Haystack) {
; 775  :                     break; // at beginning, no more chance for match
; 776  :                 }
; 777  :             }
; 778  :         }
; 779  :     }
; 780  : 
; 781  :     return static_cast<size_t>(-1); // no match

	mov	rax, -1
$LN1@Traits_fin:

; 782  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+304]
	mov	rbx, QWORD PTR [r11+16]
	mov	rbp, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rdi
	ret	0
??$_Traits_find_last_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z ENDP ; std::_Traits_find_last_of<std::char_traits<char>,1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??$_Traits_find_last_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z
_TEXT	SEGMENT
_Haystack$ = 48
_Hay_size$ = 56
_Start_at$ = 64
_Needle$ = 72
_Needle_size$ = 80
??$_Traits_find_last_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z PROC ; std::_Traits_find_last_of<std::char_traits<char>,0>, COMDAT

; 749  :     const size_t _Needle_size) noexcept {

$LN25:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 750  :     // in [_Haystack, _Haystack + _Hay_size), look for last of [_Needle, _Needle + _Needle_size), before _Start_at
; 751  :     if (_Needle_size != 0 && _Hay_size != 0) { // worth searching, do it

	mov	rsi, QWORD PTR _Needle_size$[rsp]
	mov	rbp, r9
	mov	rbx, r8
	mov	rdi, rcx
	test	rsi, rsi
	je	SHORT $LN15@Traits_fin
	test	rdx, rdx
	je	SHORT $LN15@Traits_fin

; 769  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	lea	rax, QWORD PTR [rdx-1]

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	mov	r8, rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	rax, rbx
	cmovb	rbx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 769  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	add	rbx, rcx

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	mov	rcx, r9
	movsx	edx, BYTE PTR [rbx]
	call	memchr

; 770  :                 if (_Traits::find(_Needle, _Needle_size, *_Match_try)) {

	test	rax, rax
	jne	SHORT $LN14@Traits_fin
	npad	3
$LL4@Traits_fin:

; 772  :                 }
; 773  : 
; 774  :                 if (_Match_try == _Haystack) {

	cmp	rbx, rdi
	je	SHORT $LN15@Traits_fin

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	movsx	edx, BYTE PTR [rbx-1]

; 769  :             for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	dec	rbx

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	mov	r8, rsi
	mov	rcx, rbp
	call	memchr

; 770  :                 if (_Traits::find(_Needle, _Needle_size, *_Match_try)) {

	test	rax, rax
	je	SHORT $LL4@Traits_fin
$LN14@Traits_fin:

; 771  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match

	sub	rbx, rdi
	mov	rax, rbx
	jmp	SHORT $LN1@Traits_fin
$LN15@Traits_fin:

; 775  :                     break; // at beginning, no more chance for match
; 776  :                 }
; 777  :             }
; 778  :         }
; 779  :     }
; 780  : 
; 781  :     return static_cast<size_t>(-1); // no match

	mov	rax, -1
$LN1@Traits_fin:

; 782  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Traits_find_last_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z ENDP ; std::_Traits_find_last_of<std::char_traits<char>,0>
_TEXT	ENDS
END

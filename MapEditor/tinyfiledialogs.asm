; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_07JPHDIPNG@DISPLAY@			; `string'
PUBLIC	??_C@_01KICIPPFI@?2@				; `string'
PUBLIC	??_C@_0BB@JINAAHFC@?$CD?$CF02hx?$CF02hx?$CF02hx@ ; `string'
PUBLIC	??_C@_09MEHKOFDP@?2?1?3?$CK?$DP?$CC?$DM?$DO?$HM@ ; `string'
PUBLIC	??_C@_0P@DNCGPFOP@tinyfd_verbose@		; `string'
PUBLIC	??_C@_0O@OKMGKPME@tinyfd_silent@		; `string'
PUBLIC	??_C@_0BK@JAPMBPGL@tinyfd_allowCursesDialogs@	; `string'
PUBLIC	??_C@_0BE@POPLNJJJ@tinyfd_forceConsole@		; `string'
PUBLIC	??_C@_01NOFIACDB@w@				; `string'
PUBLIC	??_C@_0P@LDAFJHNO@tinyfd_version@		; `string'
PUBLIC	??_C@_0N@LNJOPNEE@tinyfd_needs@			; `string'
PUBLIC	??_C@_0BA@CHFPOPFG@tinyfd_response@		; `string'
PUBLIC	??_C@_0BF@CIGCMJGH@where?5powershell?4exe@	; `string'
PUBLIC	??_C@_1BE@GJOFHIHD@?$AAn?$AAt?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl@ ; `string'
PUBLIC	??_C@_0O@JGECDCHJ@RtlGetVersion@		; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_0BM@OGADKCEF@tinyfd_assumeGraphicDisplay@	; `string'
PUBLIC	??_C@_0P@MDNJKLGP@tinyfd_winUtf8@		; `string'
PUBLIC	??_C@_0P@EEIOPNIL@powershell?4exe@		; `string'
PUBLIC	??_C@_01KDCPPGHE@r@				; `string'
PUBLIC	??_C@_1DE@PEGLJLHK@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAT?$AAI?$AAT?$AAL?$AAE?$AA?5?$AAW@ ; `string'
PUBLIC	??_C@_1DI@LBIIBMBN@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAM?$AAE?$AAS?$AAS?$AAA?$AAG?$AAE@ ; `string'
PUBLIC	??_C@_1BA@HMPNKADB@?$AAw?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg@ ; `string'
PUBLIC	??_C@_1M@BAIGDEFI@?$AAe?$AAr?$AAr?$AAo?$AAr@	; `string'
PUBLIC	??_C@_13CIFDLIMG@?$AAw@				; `string'
PUBLIC	??_C@_1CC@EPKPDBBM@?$AA?$CD?$AA?$CF?$AA0?$AA2?$AAh?$AAx?$AA?$CF?$AA0?$AA2?$AAh?$AAx?$AA?$CF?$AA0?$AA2?$AAh@ ; `string'
PUBLIC	??_C@_1BK@LMOENJBN@?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA_?$AAq?$AAu?$AAe?$AAr?$AAy@ ; `string'
PUBLIC	??_C@_0O@CILJLOAA@windows_wchar@		; `string'
PUBLIC	??_C@_1DKC@BDNFEEIM@?$AAp?$AAo?$AAw?$AAe?$AAr?$AAs?$AAh?$AAe?$AAl?$AAl?$AA?4?$AAe?$AAx?$AAe?$AA?5@ ; `string'
PUBLIC	??_C@_1BOK@LPJBJB@?$AA$?$AAb?$AAa?$AAl?$AAl?$AAo?$AAo?$AAn?$AA?4?$AAI?$AAc?$AAo?$AAn?$AA?5?$AA?$DN@ ; `string'
PUBLIC	??_C@_1BE@DEANNFDD@?$AA?5?$AA?9?$AAT?$AAi?$AAt?$AAl?$AAe?$AA?5?$AA?8@ ; `string'
PUBLIC	??_C@_13ODFOLHGE@?$AA?8@			; `string'
PUBLIC	??_C@_1BC@FCBGGNJJ@?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1BC@BBACDFOM@?$AAo?$AAk?$AAc?$AAa?$AAn?$AAc?$AAe?$AAl@ ; `string'
PUBLIC	??_C@_1M@HJGDFCMN@?$AAy?$AAe?$AAs?$AAn?$AAo@	; `string'
PUBLIC	??_C@_1BI@HDMBLILK@?$AAy?$AAe?$AAs?$AAn?$AAo?$AAc?$AAa?$AAn?$AAc?$AAe?$AAl@ ; `string'
PUBLIC	??_C@_19LFDMGLCC@?$AAT?$AAE?$AAM?$AAP@		; `string'
PUBLIC	??_C@_1BO@LGFMODGM@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAv?$AAb?$AAs@ ; `string'
PUBLIC	??_C@_1BO@PAPCLOOH@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAh?$AAt?$AAa@ ; `string'
PUBLIC	??_C@_1DK@JMHKFOGA@?$AAD?$AAi?$AAm?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?3?$AAr?$AAe?$AAs?$AAu@ ; `string'
PUBLIC	??_C@_1BI@BKALBFNP@?$AA?5?$AA?9?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AA?8@ ; `string'
PUBLIC	??_C@_1BK@CEIOEFBB@?$AA?5?$AA?9?$AAI?$AAc?$AAo?$AAn?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?8@ ; `string'
PUBLIC	??_C@_13NEIAEHFG@?$AA?$CC@			; `string'
PUBLIC	??_C@_1IM@DFLOMCNH@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT@ ; `string'
PUBLIC	??_C@_1DHM@DMPHJKKO@?$AA?$DM?$AA?1?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$DO?$AA?6?$AA?$DM?$AAH?$AAT?$AAA?$AA?3?$AAA@ ; `string'
PUBLIC	??_C@_1DIM@CBMOIOEB@?$AAS?$AAu?$AAb?$AA?5?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA_?$AAo?$AAn?$AAU?$AAn@ ; `string'
PUBLIC	??_C@_1DBM@GIKGBNMM@?$AAS?$AAu?$AAb?$AA?5?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA_?$AAB?$AAu?$AAt@ ; `string'
PUBLIC	??_C@_1DJM@FCHDKLBP@?$AA?6?$AA?$DM?$AA?1?$AAt?$AAd?$AA?$DO?$AA?6?$AA?$DM?$AAt?$AAd?$AA?5?$AAa?$AAl?$AAi?$AAg@ ; `string'
PUBLIC	??_C@_17FLNLOHEF@?$AA?$CC?$AA?0?$AA?$CC@	; `string'
PUBLIC	??_C@_1FE@NOHEIFFG@?$AA?$CC?$AA?$CJ?$AA?3?$AAI?$AAf?$AA?5?$AAI?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AAr@ ; `string'
PUBLIC	??_C@_1FE@EJMANDNJ@?$AA?3?$AAE?$AAl?$AAs?$AAe?$AA?3?$AA?5?$AAW?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?4@ ; `string'
PUBLIC	??_C@_1CO@HEGJNJHP@?$AA?6?$AA?$DM?$AAh?$AAt?$AAm?$AAl?$AA?$DO?$AA?6?$AA?$DM?$AAh?$AAe?$AAa?$AAd?$AA?$DO?$AA?6@ ; `string'
PUBLIC	??_C@_1CO@KJMPLJOJ@?$AA?$DO?$AA?$DO?$AA?5?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy@ ; `string'
PUBLIC	??_C@_1FC@HFELHDAE@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAm?$AAs?$AAh?$AAt@ ; `string'
PUBLIC	??_C@_13BPINEIPE@?$AAr@				; `string'
PUBLIC	??_C@_13JGCMLPCH@?$AA1@				; `string'
PUBLIC	??_C@_1CAC@GLDHPEPH@?$AA?$DM?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_1BO@MLODPNFF@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAt?$AAx?$AAt@ ; `string'
PUBLIC	??_C@_1EK@KPCGEDK@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAc?$AAs?$AAc?$AAr@ ; `string'
PUBLIC	??_C@_1CK@OOFEGHLB@?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4@ ; `string'
PUBLIC	??_C@_13PJJBFPED@?$AA?$DL@			; `string'
PUBLIC	??_C@_1BO@JHJLGACO@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?6?$AA?$CK?$AA?4?$AA?$CK?$AA?6@ ; `string'
PUBLIC	??_C@_1BM@POPPCGII@?$AAS?$AAy?$AAs?$AAT?$AAr?$AAe?$AAe?$AAV?$AAi?$AAe?$AAw?$AA3?$AA2@ ; `string'
PUBLIC	??_C@_1JA@CIAKNIFH@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT@ ; `string'
PUBLIC	??_C@_1IK@HPEHGDLB@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT@ ; `string'
PUBLIC	??_C@_1JG@DGHEIOAJ@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAF?$AAI?$AAL?$AAT?$AAE?$AAR?$AA_@ ; `string'
PUBLIC	??_C@_1IO@LEBEAFKG@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAF?$AAI?$AAL?$AAT?$AAE?$AAR?$AA_@ ; `string'
PUBLIC	??_C@_13LBAGMAIH@?$AA?6@			; `string'
PUBLIC	??_C@_02KOPDJAMB@?$CC?5@			; `string'
PUBLIC	??_C@_08OGJOCPOP@okcancel@			; `string'
PUBLIC	??_C@_05OKGEGEFI@yesno@				; `string'
PUBLIC	??_C@_0M@GNGNFIBD@yesnocancel@			; `string'
PUBLIC	??_C@_0L@MNLFJHLA@dialog?4exe@			; `string'
PUBLIC	??_C@_0BB@BAPMEJCE@where?5dialog?4exe@		; `string'
PUBLIC	??_C@_07PEGBNPAA@dialog?5@			; `string'
PUBLIC	??_C@_09LMCKDOCL@?9?9title?5?$CC@		; `string'
PUBLIC	??_C@_08JKHGEAKD@?9?9yesno?5@			; `string'
PUBLIC	??_C@_07KPDLOFNN@?9?9menu?5@			; `string'
PUBLIC	??_C@_09BJCGOEBB@?9?9msgbox?5@			; `string'
PUBLIC	??_C@_0BE@KCOAKPDH@0?560?50?5Yes?5?$CC?$CC?5No?5?$CC?$CC@ ; `string'
PUBLIC	??_C@_0O@HIBPPKGD@?9?9backtitle?5?$CC@		; `string'
PUBLIC	??_C@_0BA@HOKFLDCM@tab?3?5move?5focus@		; `string'
PUBLIC	??_C@_0N@KGHOGEEI@?9?9defaultno?5@		; `string'
PUBLIC	??_C@_0CO@IBBNOIOE@?9?9yes?9label?5?$CCOk?$CC?5?9?9no?9label?5?$CCCa@ ; `string'
PUBLIC	??_C@_0M@JPCOHHM@?2tinyfd?4txt@			; `string'
PUBLIC	??_C@_0BA@OKBGGIDD@echo?$HMset?5?1p?$DN1?5?$DO@	; `string'
PUBLIC	??_C@_03NHMNJBCN@?5?$CG?5@			; `string'
PUBLIC	??_C@_0EA@LHJOGAKC@?5?$CIsometimes?5nothing?0?5no?5blink?5n@ ; `string'
PUBLIC	??_C@_03OLKJMDCO@2?$DO?$DO@			; `string'
PUBLIC	??_C@_05HPKIDCDN@10?560@			; `string'
PUBLIC	??_C@_0O@CNFFLJFG@?5?$CG?$CG?5echo?51?5?$DO?5@	; `string'
PUBLIC	??_C@_04JKHNIKCB@TEMP@				; `string'
PUBLIC	??_C@_0O@PFKMHDNM@?5?$HM?$HM?5echo?50?5?$DO?5@	; `string'
PUBLIC	??_C@_0EL@PNIMLOJG@tab?3?5focus?5?$HM?5?1?3?5populate?5?$HM?5spac@ ; `string'
PUBLIC	??_C@_0M@HDHPIGEA@?9?9fselect?5?$CC@		; `string'
PUBLIC	??_C@_02CAHBHFGK@?4?1@				; `string'
PUBLIC	??_C@_0BJ@OHOAAMAP@?9?9insecure?5?9?9passwordbox@ ; `string'
PUBLIC	??_C@_0L@NIOFMLOI@?9?9inputbox@			; `string'
PUBLIC	??_C@_02JPEBCGCN@?5?$CC@			; `string'
PUBLIC	??_C@_08ODIHMDCC@?$CC?510?560?5@		; `string'
PUBLIC	??_C@_0L@JOMIIHFG@SSH_CLIENT@			; `string'
PUBLIC	??_C@_0N@MNLKONMA@tinyfd_query@			; `string'
PUBLIC	??_C@_07EKMDLNDL@windows@			; `string'
PUBLIC	??_C@_06IOAEHBNO@dialog@			; `string'
PUBLIC	??_C@_09CKEGHFKN@?$CC?50?560?52?$DO@		; `string'
PUBLIC	??_C@_0M@HHIKFGHN@?9?9dselect?5?$CC@		; `string'
PUBLIC	??_C@_0BK@LOHMADNE@INVALID?5TITLE?5WITH?5QUOTES@ ; `string'
PUBLIC	??_C@_0BM@NGNLCBDA@INVALID?5MESSAGE?5WITH?5QUOTES@ ; `string'
PUBLIC	??_C@_0BC@JOLFCPG@?$FLO?$FNkay?1?$FLC?$FNancel?3?5@ ; `string'
PUBLIC	??_C@_0BG@FCPPAFCN@?$FLY?$FNes?1?$FLN?$FNo?1?$FLC?$FNancel?3?5@ ; `string'
PUBLIC	??_C@_0BJ@OMCOEEOE@press?5enter?5to?5continue?5@ ; `string'
PUBLIC	??_C@_02MFDMBIJM@ok@				; `string'
PUBLIC	??_C@_0L@GFJODNDH@basicinput@			; `string'
PUBLIC	??_C@_05JOKCAEBE@?6?6?$CFs?6@			; `string'
PUBLIC	??_C@_04LOAOMKLI@?$CFs?6?6@			; `string'
PUBLIC	??_C@_05EGAAHOFE@y?1n?3?5@			; `string'
PUBLIC	??_C@_0EH@EMIKPBLA@INVALID?5FILTER_PATTERN?5WITH?5QUO@ ; `string'
PUBLIC	??_C@_0O@KHDCNINI@Save?5file?5in?5@		; `string'
PUBLIC	??_C@_0BA@MCNFEBMK@Open?5file?5from?5@		; `string'
PUBLIC	??_C@_0BE@FIFADIEO@Select?5folder?5from?5@	; `string'
PUBLIC	??_C@_0EG@KIAFJPFE@INVALID?5DEFAULT_INPUT?5WITH?5QUOT@ ; `string'
PUBLIC	??_C@_0BN@PLNPMPIF@?$CIctrl?9Z?5?$CL?5enter?5to?5cancel?$CJ?3?5@ ; `string'
PUBLIC	??_C@_0EF@BGLKEBPM@INVALID?5DEFAULT_PATH?5WITH?5QUOTE@ ; `string'
PUBLIC	??_C@_0EL@PNAFDOFE@INVALID?5FILTER_DESCRIPTION?5WITH@ ; `string'
PUBLIC	??_C@_0EI@KNJMCKFM@INVALID?5DEFAULT_HEX_RGB?5WITH?5QU@ ; `string'
PUBLIC	??_C@_0CD@ODHOFAHP@Enter?5hex?5rgb?5color?5?$CIi?4e?4?5?$CDf5ca@ ; `string'
PUBLIC	tinyfd_winUtf8
PUBLIC	tinyfd_needs
PUBLIC	tinyfd_version
PUBLIC	tinyfd_assumeGraphicDisplay
PUBLIC	tinyfd_allowCursesDialogs
PUBLIC	tinyfd_forceConsole
EXTRN	__imp_GetOpenFileNameW:PROC
EXTRN	__imp_wcsncmp:PROC
EXTRN	__imp_getenv:PROC
EXTRN	__imp_strrchr:PROC
EXTRN	__imp_wcsrchr:PROC
EXTRN	__imp__stat64:PROC
EXTRN	__imp_MessageBoxW:PROC
EXTRN	__imp_CoInitializeEx:PROC
EXTRN	__imp_strncat:PROC
EXTRN	__imp_SetWindowPos:PROC
EXTRN	__imp_SetConsoleOutputCP:PROC
EXTRN	__imp_GetModuleHandleW:PROC
EXTRN	__imp_CreateProcessW:PROC
EXTRN	__imp_SHGetPathFromIDListW:PROC
EXTRN	__imp_GetConsoleWindow:PROC
EXTRN	__imp_GetSaveFileNameW:PROC
EXTRN	__imp_EnumChildWindows:PROC
EXTRN	__imp_Beep:PROC
EXTRN	__imp_MessageBeep:PROC
EXTRN	__imp_SetConsoleCP:PROC
EXTRN	__imp__popen:PROC
EXTRN	__imp_SendMessageW:PROC
EXTRN	__imp_WaitForInputIdle:PROC
EXTRN	__imp_WriteConsoleW:PROC
EXTRN	__imp_wcschr:PROC
EXTRN	__imp_CloseHandle:PROC
EXTRN	__imp___stdio_common_vswprintf:PROC
EXTRN	__imp__wgetenv:PROC
EXTRN	__imp_getcwd:PROC
EXTRN	__imp_ReadConsoleW:PROC
EXTRN	__imp_fgets:PROC
EXTRN	__imp_isxdigit:PROC
EXTRN	__imp__stat64i32:PROC
EXTRN	__imp_system:PROC
EXTRN	__imp_GetConsoleMode:PROC
EXTRN	__imp_wcsncpy:PROC
EXTRN	__imp_SHBrowseForFolderW:PROC
EXTRN	__imp_GetForegroundWindow:PROC
EXTRN	__imp_strtoul:PROC
EXTRN	__imp__pclose:PROC
EXTRN	__imp_wcstoul:PROC
EXTRN	__imp_isalpha:PROC
EXTRN	__imp_GetACP:PROC
EXTRN	__imp_tolower:PROC
EXTRN	__imp_ChooseColorW:PROC
EXTRN	__imp__getch:PROC
EXTRN	__imp_EnumWindows:PROC
EXTRN	__imp_WaitForSingleObject:PROC
EXTRN	__imp_fputws:PROC
EXTRN	__imp_remove:PROC
EXTRN	__imp_GetClassNameW:PROC
EXTRN	__imp_GetConsoleCP:PROC
EXTRN	__imp_fopen:PROC
EXTRN	__imp_CoUninitialize:PROC
EXTRN	__imp__wremove:PROC
EXTRN	__imp_GetConsoleOutputCP:PROC
EXTRN	__imp_strpbrk:PROC
EXTRN	__imp_SetConsoleMode:PROC
EXTRN	__imp__wstat64:PROC
EXTRN	__imp_GetWindowTextW:PROC
COMM	tinyfd_response:BYTE:0400H
tinyfd_assumeGraphicDisplay DD 01H DUP (?)
tinyfd_allowCursesDialogs DD 01H DUP (?)
tinyfd_forceConsole DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0CD@ODHOFAHP@Enter?5hex?5rgb?5color?5?$CIi?4e?4?5?$CDf5ca@
CONST	SEGMENT
??_C@_0CD@ODHOFAHP@Enter?5hex?5rgb?5color?5?$CIi?4e?4?5?$CDf5ca@ DB 'Ente'
	DB	'r hex rgb color (i.e. #f5ca20)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@KNJMCKFM@INVALID?5DEFAULT_HEX_RGB?5WITH?5QU@
CONST	SEGMENT
??_C@_0EI@KNJMCKFM@INVALID?5DEFAULT_HEX_RGB?5WITH?5QU@ DB 'INVALID DEFAUL'
	DB	'T_HEX_RGB WITH QUOTES: use the GRAVE ACCENT \x60 instead.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@PNAFDOFE@INVALID?5FILTER_DESCRIPTION?5WITH@
CONST	SEGMENT
??_C@_0EL@PNAFDOFE@INVALID?5FILTER_DESCRIPTION?5WITH@ DB 'INVALID FILTER_'
	DB	'DESCRIPTION WITH QUOTES: use the GRAVE ACCENT \x60 instead.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@BGLKEBPM@INVALID?5DEFAULT_PATH?5WITH?5QUOTE@
CONST	SEGMENT
??_C@_0EF@BGLKEBPM@INVALID?5DEFAULT_PATH?5WITH?5QUOTE@ DB 'INVALID DEFAUL'
	DB	'T_PATH WITH QUOTES: use the GRAVE ACCENT \x60 instead.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PLNPMPIF@?$CIctrl?9Z?5?$CL?5enter?5to?5cancel?$CJ?3?5@
CONST	SEGMENT
??_C@_0BN@PLNPMPIF@?$CIctrl?9Z?5?$CL?5enter?5to?5cancel?$CJ?3?5@ DB '(ctr'
	DB	'l-Z + enter to cancel): ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@KIAFJPFE@INVALID?5DEFAULT_INPUT?5WITH?5QUOT@
CONST	SEGMENT
??_C@_0EG@KIAFJPFE@INVALID?5DEFAULT_INPUT?5WITH?5QUOT@ DB 'INVALID DEFAUL'
	DB	'T_INPUT WITH QUOTES: use the GRAVE ACCENT \x60 instead.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FIFADIEO@Select?5folder?5from?5@
CONST	SEGMENT
??_C@_0BE@FIFADIEO@Select?5folder?5from?5@ DB 'Select folder from ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MCNFEBMK@Open?5file?5from?5@
CONST	SEGMENT
??_C@_0BA@MCNFEBMK@Open?5file?5from?5@ DB 'Open file from ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KHDCNINI@Save?5file?5in?5@
CONST	SEGMENT
??_C@_0O@KHDCNINI@Save?5file?5in?5@ DB 'Save file in ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@EMIKPBLA@INVALID?5FILTER_PATTERN?5WITH?5QUO@
CONST	SEGMENT
??_C@_0EH@EMIKPBLA@INVALID?5FILTER_PATTERN?5WITH?5QUO@ DB 'INVALID FILTER'
	DB	'_PATTERN WITH QUOTES: use the GRAVE ACCENT \x60 instead.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05EGAAHOFE@y?1n?3?5@
CONST	SEGMENT
??_C@_05EGAAHOFE@y?1n?3?5@ DB 'y/n: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LOAOMKLI@?$CFs?6?6@
CONST	SEGMENT
??_C@_04LOAOMKLI@?$CFs?6?6@ DB '%s', 0aH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05JOKCAEBE@?6?6?$CFs?6@
CONST	SEGMENT
??_C@_05JOKCAEBE@?6?6?$CFs?6@ DB 0aH, 0aH, '%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GFJODNDH@basicinput@
CONST	SEGMENT
??_C@_0L@GFJODNDH@basicinput@ DB 'basicinput', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02MFDMBIJM@ok@
CONST	SEGMENT
??_C@_02MFDMBIJM@ok@ DB 'ok', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OMCOEEOE@press?5enter?5to?5continue?5@
CONST	SEGMENT
??_C@_0BJ@OMCOEEOE@press?5enter?5to?5continue?5@ DB 'press enter to conti'
	DB	'nue ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FCPPAFCN@?$FLY?$FNes?1?$FLN?$FNo?1?$FLC?$FNancel?3?5@
CONST	SEGMENT
??_C@_0BG@FCPPAFCN@?$FLY?$FNes?1?$FLN?$FNo?1?$FLC?$FNancel?3?5@ DB '[Y]es'
	DB	'/[N]o/[C]ancel: ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JOLFCPG@?$FLO?$FNkay?1?$FLC?$FNancel?3?5@
CONST	SEGMENT
??_C@_0BC@JOLFCPG@?$FLO?$FNkay?1?$FLC?$FNancel?3?5@ DB '[O]kay/[C]ancel: '
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NGNLCBDA@INVALID?5MESSAGE?5WITH?5QUOTES@
CONST	SEGMENT
??_C@_0BM@NGNLCBDA@INVALID?5MESSAGE?5WITH?5QUOTES@ DB 'INVALID MESSAGE WI'
	DB	'TH QUOTES', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LOHMADNE@INVALID?5TITLE?5WITH?5QUOTES@
CONST	SEGMENT
??_C@_0BK@LOHMADNE@INVALID?5TITLE?5WITH?5QUOTES@ DB 'INVALID TITLE WITH Q'
	DB	'UOTES', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HHIKFGHN@?9?9dselect?5?$CC@
CONST	SEGMENT
??_C@_0M@HHIKFGHN@?9?9dselect?5?$CC@ DB '--dselect "', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09CKEGHFKN@?$CC?50?560?52?$DO@
CONST	SEGMENT
??_C@_09CKEGHFKN@?$CC?50?560?52?$DO@ DB '" 0 60 2>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06IOAEHBNO@dialog@
CONST	SEGMENT
??_C@_06IOAEHBNO@dialog@ DB 'dialog', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EKMDLNDL@windows@
CONST	SEGMENT
??_C@_07EKMDLNDL@windows@ DB 'windows', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MNLKONMA@tinyfd_query@
CONST	SEGMENT
??_C@_0N@MNLKONMA@tinyfd_query@ DB 'tinyfd_query', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JOMIIHFG@SSH_CLIENT@
CONST	SEGMENT
??_C@_0L@JOMIIHFG@SSH_CLIENT@ DB 'SSH_CLIENT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ODIHMDCC@?$CC?510?560?5@
CONST	SEGMENT
??_C@_08ODIHMDCC@?$CC?510?560?5@ DB '" 10 60 ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JPEBCGCN@?5?$CC@
CONST	SEGMENT
??_C@_02JPEBCGCN@?5?$CC@ DB ' "', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NIOFMLOI@?9?9inputbox@
CONST	SEGMENT
??_C@_0L@NIOFMLOI@?9?9inputbox@ DB '--inputbox', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OHOAAMAP@?9?9insecure?5?9?9passwordbox@
CONST	SEGMENT
??_C@_0BJ@OHOAAMAP@?9?9insecure?5?9?9passwordbox@ DB '--insecure --passwo'
	DB	'rdbox', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_02CAHBHFGK@?4?1@
CONST	SEGMENT
??_C@_02CAHBHFGK@?4?1@ DB './', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HDHPIGEA@?9?9fselect?5?$CC@
CONST	SEGMENT
??_C@_0M@HDHPIGEA@?9?9fselect?5?$CC@ DB '--fselect "', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@PNIMLOJG@tab?3?5focus?5?$HM?5?1?3?5populate?5?$HM?5spac@
CONST	SEGMENT
??_C@_0EL@PNIMLOJG@tab?3?5focus?5?$HM?5?1?3?5populate?5?$HM?5spac@ DB 'ta'
	DB	'b: focus | /: populate | spacebar: fill text field | ok: TEXT'
	DB	' FIELD ONLY', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PFKMHDNM@?5?$HM?$HM?5echo?50?5?$DO?5@
CONST	SEGMENT
??_C@_0O@PFKMHDNM@?5?$HM?$HM?5echo?50?5?$DO?5@ DB ' || echo 0 > ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JKHNIKCB@TEMP@
CONST	SEGMENT
??_C@_04JKHNIKCB@TEMP@ DB 'TEMP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CNFFLJFG@?5?$CG?$CG?5echo?51?5?$DO?5@
CONST	SEGMENT
??_C@_0O@CNFFLJFG@?5?$CG?$CG?5echo?51?5?$DO?5@ DB ' && echo 1 > ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05HPKIDCDN@10?560@
CONST	SEGMENT
??_C@_05HPKIDCDN@10?560@ DB '10 60', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OLKJMDCO@2?$DO?$DO@
CONST	SEGMENT
??_C@_03OLKJMDCO@2?$DO?$DO@ DB '2>>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@LHJOGAKC@?5?$CIsometimes?5nothing?0?5no?5blink?5n@
CONST	SEGMENT
??_C@_0EA@LHJOGAKC@?5?$CIsometimes?5nothing?0?5no?5blink?5n@ DB ' (someti'
	DB	'mes nothing, no blink nor star, is shown in text field)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03NHMNJBCN@?5?$CG?5@
CONST	SEGMENT
??_C@_03NHMNJBCN@?5?$CG?5@ DB ' & ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OKBGGIDD@echo?$HMset?5?1p?$DN1?5?$DO@
CONST	SEGMENT
??_C@_0BA@OKBGGIDD@echo?$HMset?5?1p?$DN1?5?$DO@ DB 'echo|set /p=1 >', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JPCOHHM@?2tinyfd?4txt@
CONST	SEGMENT
??_C@_0M@JPCOHHM@?2tinyfd?4txt@ DB '\tinyfd.txt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@IBBNOIOE@?9?9yes?9label?5?$CCOk?$CC?5?9?9no?9label?5?$CCCa@
CONST	SEGMENT
??_C@_0CO@IBBNOIOE@?9?9yes?9label?5?$CCOk?$CC?5?9?9no?9label?5?$CCCa@ DB '-'
	DB	'-yes-label "Ok" --no-label "Cancel" --yesno ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KGHOGEEI@?9?9defaultno?5@
CONST	SEGMENT
??_C@_0N@KGHOGEEI@?9?9defaultno?5@ DB '--defaultno ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HOKFLDCM@tab?3?5move?5focus@
CONST	SEGMENT
??_C@_0BA@HOKFLDCM@tab?3?5move?5focus@ DB 'tab: move focus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HIBPPKGD@?9?9backtitle?5?$CC@
CONST	SEGMENT
??_C@_0O@HIBPPKGD@?9?9backtitle?5?$CC@ DB '--backtitle "', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KCOAKPDH@0?560?50?5Yes?5?$CC?$CC?5No?5?$CC?$CC@
CONST	SEGMENT
??_C@_0BE@KCOAKPDH@0?560?50?5Yes?5?$CC?$CC?5No?5?$CC?$CC@ DB '0 60 0 Yes '
	DB	'"" No ""', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09BJCGOEBB@?9?9msgbox?5@
CONST	SEGMENT
??_C@_09BJCGOEBB@?9?9msgbox?5@ DB '--msgbox ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KPDLOFNN@?9?9menu?5@
CONST	SEGMENT
??_C@_07KPDLOFNN@?9?9menu?5@ DB '--menu ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JKHGEAKD@?9?9yesno?5@
CONST	SEGMENT
??_C@_08JKHGEAKD@?9?9yesno?5@ DB '--yesno ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LMCKDOCL@?9?9title?5?$CC@
CONST	SEGMENT
??_C@_09LMCKDOCL@?9?9title?5?$CC@ DB '--title "', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07PEGBNPAA@dialog?5@
CONST	SEGMENT
??_C@_07PEGBNPAA@dialog?5@ DB 'dialog ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BAPMEJCE@where?5dialog?4exe@
CONST	SEGMENT
??_C@_0BB@BAPMEJCE@where?5dialog?4exe@ DB 'where dialog.exe', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MNLFJHLA@dialog?4exe@
CONST	SEGMENT
??_C@_0L@MNLFJHLA@dialog?4exe@ DB 'dialog.exe', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GNGNFIBD@yesnocancel@
CONST	SEGMENT
??_C@_0M@GNGNFIBD@yesnocancel@ DB 'yesnocancel', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05OKGEGEFI@yesno@
CONST	SEGMENT
??_C@_05OKGEGEFI@yesno@ DB 'yesno', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08OGJOCPOP@okcancel@
CONST	SEGMENT
??_C@_08OGJOCPOP@okcancel@ DB 'okcancel', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02KOPDJAMB@?$CC?5@
CONST	SEGMENT
??_C@_02KOPDJAMB@?$CC?5@ DB '" ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_13LBAGMAIH@?$AA?6@
CONST	SEGMENT
??_C@_13LBAGMAIH@?$AA?6@ DB 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@LEBEAFKG@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAF?$AAI?$AAL?$AAT?$AAE?$AAR?$AA_@
CONST	SEGMENT
??_C@_1IO@LEBEAFKG@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAF?$AAI?$AAL?$AAT?$AAE?$AAR?$AA_@ DB 'I'
	DB	00H, 'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I', 00H, 'D', 00H
	DB	' ', 00H, 'F', 00H, 'I', 00H, 'L', 00H, 'T', 00H, 'E', 00H, 'R'
	DB	00H, '_', 00H, 'P', 00H, 'A', 00H, 'T', 00H, 'T', 00H, 'E', 00H
	DB	'R', 00H, 'N', 00H, ' ', 00H, 'W', 00H, 'I', 00H, 'T', 00H, 'H'
	DB	00H, ' ', 00H, 'Q', 00H, 'U', 00H, 'O', 00H, 'T', 00H, 'E', 00H
	DB	'S', 00H, ':', 00H, ' ', 00H, 'u', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'G', 00H, 'R', 00H
	DB	'A', 00H, 'V', 00H, 'E', 00H, ' ', 00H, 'A', 00H, 'C', 00H, 'C'
	DB	00H, 'E', 00H, 'N', 00H, 'T', 00H, ' ', 00H, '\', 00H, 'x', 00H
	DB	'6', 00H, '0', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 's', 00H, 't'
	DB	00H, 'e', 00H, 'a', 00H, 'd', 00H, '.', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JG@DGHEIOAJ@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAF?$AAI?$AAL?$AAT?$AAE?$AAR?$AA_@
CONST	SEGMENT
??_C@_1JG@DGHEIOAJ@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAF?$AAI?$AAL?$AAT?$AAE?$AAR?$AA_@ DB 'I'
	DB	00H, 'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I', 00H, 'D', 00H
	DB	' ', 00H, 'F', 00H, 'I', 00H, 'L', 00H, 'T', 00H, 'E', 00H, 'R'
	DB	00H, '_', 00H, 'D', 00H, 'E', 00H, 'S', 00H, 'C', 00H, 'R', 00H
	DB	'I', 00H, 'P', 00H, 'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, ' '
	DB	00H, 'W', 00H, 'I', 00H, 'T', 00H, 'H', 00H, ' ', 00H, 'Q', 00H
	DB	'U', 00H, 'O', 00H, 'T', 00H, 'E', 00H, 'S', 00H, ':', 00H, ' '
	DB	00H, 'u', 00H, 's', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'h', 00H
	DB	'e', 00H, ' ', 00H, 'G', 00H, 'R', 00H, 'A', 00H, 'V', 00H, 'E'
	DB	00H, ' ', 00H, 'A', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'N', 00H
	DB	'T', 00H, ' ', 00H, '\', 00H, 'x', 00H, '6', 00H, '0', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, 's', 00H, 't', 00H, 'e', 00H, 'a', 00H
	DB	'd', 00H, '.', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@HPEHGDLB@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT@
CONST	SEGMENT
??_C@_1IK@HPEHGDLB@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT@ DB 'I'
	DB	00H, 'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I', 00H, 'D', 00H
	DB	' ', 00H, 'D', 00H, 'E', 00H, 'F', 00H, 'A', 00H, 'U', 00H, 'L'
	DB	00H, 'T', 00H, '_', 00H, 'P', 00H, 'A', 00H, 'T', 00H, 'H', 00H
	DB	' ', 00H, 'W', 00H, 'I', 00H, 'T', 00H, 'H', 00H, ' ', 00H, 'Q'
	DB	00H, 'U', 00H, 'O', 00H, 'T', 00H, 'E', 00H, 'S', 00H, ':', 00H
	DB	' ', 00H, 'u', 00H, 's', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'h'
	DB	00H, 'e', 00H, ' ', 00H, 'G', 00H, 'R', 00H, 'A', 00H, 'V', 00H
	DB	'E', 00H, ' ', 00H, 'A', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'N'
	DB	00H, 'T', 00H, ' ', 00H, '\', 00H, 'x', 00H, '6', 00H, '0', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 's', 00H, 't', 00H, 'e', 00H, 'a'
	DB	00H, 'd', 00H, '.', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@CIAKNIFH@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT@
CONST	SEGMENT
??_C@_1JA@CIAKNIFH@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT@ DB 'I'
	DB	00H, 'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I', 00H, 'D', 00H
	DB	' ', 00H, 'D', 00H, 'E', 00H, 'F', 00H, 'A', 00H, 'U', 00H, 'L'
	DB	00H, 'T', 00H, '_', 00H, 'H', 00H, 'E', 00H, 'X', 00H, '_', 00H
	DB	'R', 00H, 'G', 00H, 'B', 00H, ' ', 00H, 'W', 00H, 'I', 00H, 'T'
	DB	00H, 'H', 00H, ' ', 00H, 'Q', 00H, 'U', 00H, 'O', 00H, 'T', 00H
	DB	'E', 00H, 'S', 00H, ':', 00H, ' ', 00H, 'u', 00H, 's', 00H, 'e'
	DB	00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H, 'G', 00H
	DB	'R', 00H, 'A', 00H, 'V', 00H, 'E', 00H, ' ', 00H, 'A', 00H, 'C'
	DB	00H, 'C', 00H, 'E', 00H, 'N', 00H, 'T', 00H, ' ', 00H, '\', 00H
	DB	'x', 00H, '6', 00H, '0', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'a', 00H, 'd', 00H, '.', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@POPPCGII@?$AAS?$AAy?$AAs?$AAT?$AAr?$AAe?$AAe?$AAV?$AAi?$AAe?$AAw?$AA3?$AA2@
CONST	SEGMENT
??_C@_1BM@POPPCGII@?$AAS?$AAy?$AAs?$AAT?$AAr?$AAe?$AAe?$AAV?$AAi?$AAe?$AAw?$AA3?$AA2@ DB 'S'
	DB	00H, 'y', 00H, 's', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H
	DB	'V', 00H, 'i', 00H, 'e', 00H, 'w', 00H, '3', 00H, '2', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@JHJLGACO@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?6?$AA?$CK?$AA?4?$AA?$CK?$AA?6@
CONST	SEGMENT
??_C@_1BO@JHJLGACO@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?6?$AA?$CK?$AA?4?$AA?$CK?$AA?6@ DB 'A'
	DB	00H, 'l', 00H, 'l', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 's', 00H, 0aH, 00H, '*', 00H, '.', 00H, '*', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_13PJJBFPED@?$AA?$DL@
CONST	SEGMENT
??_C@_13PJJBFPED@?$AA?$DL@ DB ';', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@OOFEGHLB@?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4@
CONST	SEGMENT
??_C@_1CK@OOFEGHLB@?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4@ DB '"'
	DB	00H, '%', 00H, 'T', 00H, 'E', 00H, 'M', 00H, 'P', 00H, '%', 00H
	DB	'\', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'y', 00H, 'f', 00H, 'd'
	DB	00H, '.', 00H, 'v', 00H, 'b', 00H, 's', 00H, '"', 00H, ' ', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@KPCGEDK@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAc?$AAs?$AAc?$AAr@
CONST	SEGMENT
??_C@_1EK@KPCGEDK@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAc?$AAs?$AAc?$AAr@ DB 'c'
	DB	00H, 'm', 00H, 'd', 00H, '.', 00H, 'e', 00H, 'x', 00H, 'e', 00H
	DB	' ', 00H, '/', 00H, 'c', 00H, ' ', 00H, 'c', 00H, 's', 00H, 'c'
	DB	00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, '.', 00H, 'e', 00H
	DB	'x', 00H, 'e', 00H, ' ', 00H, '/', 00H, '/', 00H, 'U', 00H, ' '
	DB	00H, '/', 00H, '/', 00H, 'N', 00H, 'o', 00H, 'l', 00H, 'o', 00H
	DB	'g', 00H, 'o', 00H, ' ', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MLODPNFF@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAt?$AAx?$AAt@
CONST	SEGMENT
??_C@_1BO@MLODPNFF@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAt?$AAx?$AAt@ DB '%'
	DB	00H, 'l', 00H, 's', 00H, '\', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'y', 00H, 'f', 00H, 'd', 00H, '.', 00H, 't', 00H, 'x', 00H, 't'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CAC@GLDHPEPH@?$AA?$DM?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1CAC@GLDHPEPH@?$AA?$DM?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5@ DB '<'
	DB	00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H
	DB	'w', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '''', 00H, '1', 00H, '0', 00H, '0', 00H, '%', 00H
	DB	'''', 00H, ' ', 00H, 'h', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h'
	DB	00H, 't', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H, '1', 00H
	DB	'0', 00H, '0', 00H, '%', 00H, '''', 00H, ' ', 00H, 'a', 00H, 'l'
	DB	00H, 'i', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'''', 00H, 'c', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, '''', 00H, ' ', 00H, 'b', 00H, 'o', 00H, 'r', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H, '0'
	DB	00H, '''', 00H, '>', 00H, 0aH, 00H, '<', 00H, 't', 00H, 'r', 00H
	DB	'>', 00H, 0aH, 00H, '<', 00H, 't', 00H, 'd', 00H, ' ', 00H, 'a'
	DB	00H, 'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '''', 00H, 'l', 00H, 'e', 00H, 'f', 00H, 't', 00H, ''''
	DB	00H, ' ', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H, 't', 00H, 'o'
	DB	00H, 'p', 00H, '''', 00H, '>', 00H, 0aH, 00H, '<', 00H, 'i', 00H
	DB	'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H
	DB	'p', 00H, 'a', 00H, 's', 00H, 's', 00H, 'w', 00H, 'o', 00H, 'r'
	DB	00H, 'd', 00H, '''', 00H, ' ', 00H, 'i', 00H, 'd', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, '''', 00H, 't', 00H, 'x', 00H, 't', 00H, '_'
	DB	00H, 'i', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, '''', 00H
	DB	0aH, 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '''', 00H, 't', 00H, 'x', 00H, 't', 00H, '_', 00H
	DB	'i', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, '''', 00H, ' '
	DB	00H, 'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, '''', 00H, '''', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'y', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'''', 00H, 'f', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 't', 00H, ':'
	DB	00H, 'l', 00H, 'e', 00H, 'f', 00H, 't', 00H, ';', 00H, 'w', 00H
	DB	'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, ':', 00H, '1', 00H, '0'
	DB	00H, '0', 00H, '%', 00H, '''', 00H, ' ', 00H, '>', 00H, '<', 00H
	DB	'B', 00H, 'R', 00H, '>', 00H, 0aH, 00H, '<', 00H, '/', 00H, 't'
	DB	00H, 'd', 00H, '>', 00H, 0aH, 00H, '<', 00H, '/', 00H, 't', 00H
	DB	'r', 00H, '>', 00H, 0aH, 00H, '<', 00H, '/', 00H, 't', 00H, 'a'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, '>', 00H, 0aH, 00H, '<', 00H
	DB	'/', 00H, 'b', 00H, 'o', 00H, 'd', 00H, 'y', 00H, '>', 00H, 0aH
	DB	00H, '<', 00H, '/', 00H, 'h', 00H, 't', 00H, 'm', 00H, 'l', 00H
	DB	'>', 00H, 0aH, 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_13JGCMLPCH@?$AA1@
CONST	SEGMENT
??_C@_13JGCMLPCH@?$AA1@ DB '1', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13BPINEIPE@?$AAr@
CONST	SEGMENT
??_C@_13BPINEIPE@?$AAr@ DB 'r', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@HFELHDAE@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAm?$AAs?$AAh?$AAt@
CONST	SEGMENT
??_C@_1FC@HFELHDAE@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAm?$AAs?$AAh?$AAt@ DB 'c'
	DB	00H, 'm', 00H, 'd', 00H, '.', 00H, 'e', 00H, 'x', 00H, 'e', 00H
	DB	' ', 00H, '/', 00H, 'c', 00H, ' ', 00H, 'm', 00H, 's', 00H, 'h'
	DB	00H, 't', 00H, 'a', 00H, '.', 00H, 'e', 00H, 'x', 00H, 'e', 00H
	DB	' ', 00H, '"', 00H, '%', 00H, 'T', 00H, 'E', 00H, 'M', 00H, 'P'
	DB	00H, '%', 00H, '\', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'y', 00H
	DB	'f', 00H, 'd', 00H, '.', 00H, 'h', 00H, 't', 00H, 'a', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@KJMPLJOJ@?$AA?$DO?$AA?$DO?$AA?5?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy@
CONST	SEGMENT
??_C@_1CO@KJMPLJOJ@?$AA?$DO?$AA?$DO?$AA?5?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy@ DB '>'
	DB	00H, '>', 00H, ' ', 00H, '"', 00H, '%', 00H, 'T', 00H, 'E', 00H
	DB	'M', 00H, 'P', 00H, '%', 00H, '\', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'y', 00H, 'f', 00H, 'd', 00H, '.', 00H, 't', 00H, 'x', 00H
	DB	't', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@HEGJNJHP@?$AA?6?$AA?$DM?$AAh?$AAt?$AAm?$AAl?$AA?$DO?$AA?6?$AA?$DM?$AAh?$AAe?$AAa?$AAd?$AA?$DO?$AA?6@
CONST	SEGMENT
??_C@_1CO@HEGJNJHP@?$AA?6?$AA?$DM?$AAh?$AAt?$AAm?$AAl?$AA?$DO?$AA?6?$AA?$DM?$AAh?$AAe?$AAa?$AAd?$AA?$DO?$AA?6@ DB 0aH
	DB	00H, '<', 00H, 'h', 00H, 't', 00H, 'm', 00H, 'l', 00H, '>', 00H
	DB	0aH, 00H, '<', 00H, 'h', 00H, 'e', 00H, 'a', 00H, 'd', 00H, '>'
	DB	00H, 0aH, 00H, '<', 00H, 't', 00H, 'i', 00H, 't', 00H, 'l', 00H
	DB	'e', 00H, '>', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@EJMANDNJ@?$AA?3?$AAE?$AAl?$AAs?$AAe?$AA?3?$AA?5?$AAW?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?4@
CONST	SEGMENT
??_C@_1FE@EJMANDNJ@?$AA?3?$AAE?$AAl?$AAs?$AAe?$AA?3?$AA?5?$AAW?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?4@ DB ':'
	DB	00H, 'E', 00H, 'l', 00H, 's', 00H, 'e', 00H, ':', 00H, ' ', 00H
	DB	'W', 00H, 'S', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't'
	DB	00H, '.', 00H, 'E', 00H, 'c', 00H, 'h', 00H, 'o', 00H, ' ', 00H
	DB	'"', 00H, '1', 00H, '"', 00H, ' ', 00H, '&', 00H, ' ', 00H, 'r'
	DB	00H, 'e', 00H, 's', 00H, 'u', 00H, 'l', 00H, 't', 00H, ' ', 00H
	DB	':', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'I'
	DB	00H, 'f', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@NOHEIFFG@?$AA?$CC?$AA?$CJ?$AA?3?$AAI?$AAf?$AA?5?$AAI?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AAr@
CONST	SEGMENT
??_C@_1FE@NOHEIFFG@?$AA?$CC?$AA?$CJ?$AA?3?$AAI?$AAf?$AA?5?$AAI?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AAr@ DB '"'
	DB	00H, ')', 00H, ':', 00H, 'I', 00H, 'f', 00H, ' ', 00H, 'I', 00H
	DB	's', 00H, 'E', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, '('
	DB	00H, 'r', 00H, 'e', 00H, 's', 00H, 'u', 00H, 'l', 00H, 't', 00H
	DB	')', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, 'n', 00H, ':'
	DB	00H, 'W', 00H, 'S', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H
	DB	't', 00H, '.', 00H, 'E', 00H, 'c', 00H, 'h', 00H, 'o', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_17FLNLOHEF@?$AA?$CC?$AA?0?$AA?$CC@
CONST	SEGMENT
??_C@_17FLNLOHEF@?$AA?$CC?$AA?0?$AA?$CC@ DB '"', 00H, ',', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DJM@FCHDKLBP@?$AA?6?$AA?$DM?$AA?1?$AAt?$AAd?$AA?$DO?$AA?6?$AA?$DM?$AAt?$AAd?$AA?5?$AAa?$AAl?$AAi?$AAg@
CONST	SEGMENT
??_C@_1DJM@FCHDKLBP@?$AA?6?$AA?$DM?$AA?1?$AAt?$AAd?$AA?$DO?$AA?6?$AA?$DM?$AAt?$AAd?$AA?5?$AAa?$AAl?$AAi?$AAg@ DB 0aH
	DB	00H, '<', 00H, '/', 00H, 't', 00H, 'd', 00H, '>', 00H, 0aH, 00H
	DB	'<', 00H, 't', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'l', 00H, 'i'
	DB	00H, 'g', 00H, 'n', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H
	DB	'r', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, '''', 00H, ' '
	DB	00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, '''', 00H, 'm', 00H, 'i', 00H, 'd'
	DB	00H, 'd', 00H, 'l', 00H, 'e', 00H, '''', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, '''', 00H, 'm', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'i', 00H
	DB	'n', 00H, '-', 00H, 't', 00H, 'o', 00H, 'p', 00H, ':', 00H, ' '
	DB	00H, '0', 00H, 'e', 00H, 'm', 00H, '''', 00H, '>', 00H, 0aH, 00H
	DB	'<', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, ' '
	DB	00H, ' ', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, '''', 00H, 'r', 00H, 'i', 00H, 'g'
	DB	00H, 'h', 00H, 't', 00H, '''', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'y', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H, ''''
	DB	00H, 'm', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	'-', 00H, 'r', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, ':'
	DB	00H, ' ', 00H, '0', 00H, 'e', 00H, 'm', 00H, ';', 00H, '''', 00H
	DB	'>', 00H, 0aH, 00H, '<', 00H, 't', 00H, 'r', 00H, ' ', 00H, 'a'
	DB	00H, 'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '''', 00H, 'r', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't'
	DB	00H, '''', 00H, ' ', 00H, 's', 00H, 't', 00H, 'y', 00H, 'l', 00H
	DB	'e', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H, 'm', 00H, 'a'
	DB	00H, 'r', 00H, 'g', 00H, 'i', 00H, 'n', 00H, '-', 00H, 't', 00H
	DB	'o', 00H, 'p', 00H, ':', 00H, ' ', 00H, '5', 00H, 'e', 00H, 'm'
	DB	00H, ';', 00H, '''', 00H, '>', 00H, 0aH, 00H, '<', 00H, 'i', 00H
	DB	'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H, 't', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H
	DB	'b', 00H, 'u', 00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H, ''''
	DB	00H, ' ', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, '''', 00H, 'O', 00H, 'K', 00H, ''''
	DB	00H, ' ', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, '''', 00H, 'b', 00H, 't', 00H, 'n', 00H, '_'
	DB	00H, 'O', 00H, 'K', 00H, '''', 00H, ' ', 00H, 'o', 00H, 'n', 00H
	DB	'C', 00H, 'l', 00H, 'i', 00H, 'c', 00H, 'k', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '''', 00H, 'v', 00H, 'b', 00H, 's', 00H, ':', 00H
	DB	'R', 00H, 'u', 00H, 'n', 00H, '_', 00H, 'P', 00H, 'r', 00H, 'o'
	DB	00H, 'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'O', 00H, 'K', 00H
	DB	'''', 00H, ' ', 00H, 's', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e'
	DB	00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H, 'w', 00H, 'i', 00H
	DB	'd', 00H, 't', 00H, 'h', 00H, ':', 00H, ' ', 00H, '5', 00H, 'e'
	DB	00H, 'm', 00H, ';', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'r', 00H
	DB	'g', 00H, 'i', 00H, 'n', 00H, '-', 00H, 't', 00H, 'o', 00H, 'p'
	DB	00H, ':', 00H, ' ', 00H, '2', 00H, 'e', 00H, 'm', 00H, ';', 00H
	DB	'''', 00H, '>', 00H, '<', 00H, 'b', 00H, 'r', 00H, '>', 00H, 0aH
	DB	00H, '<', 00H, 'i', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '''', 00H, 'b', 00H, 'u', 00H, 't', 00H, 't', 00H
	DB	'o', 00H, 'n', 00H, '''', 00H, ' ', 00H, 'v', 00H, 'a', 00H, 'l'
	DB	00H, 'u', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H
	DB	'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H, ''''
	DB	00H, ' ', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, '''', 00H, 'b', 00H, 't', 00H, 'n', 00H, '_'
	DB	00H, 'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H
	DB	'''', 00H, ' ', 00H, 'o', 00H, 'n', 00H, 'C', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, 'k', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H
	DB	'v', 00H, 'b', 00H, 's', 00H, ':', 00H, 'R', 00H, 'u', 00H, 'n'
	DB	00H, '_', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'r', 00H
	DB	'a', 00H, 'm', 00H, 'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e'
	DB	00H, 'l', 00H, '''', 00H, ' ', 00H, 's', 00H, 't', 00H, 'y', 00H
	DB	'l', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H, 'w'
	DB	00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, ':', 00H, ' ', 00H
	DB	'5', 00H, 'e', 00H, 'm', 00H, ';', 00H, '''', 00H, '>', 00H, '<'
	DB	00H, 'b', 00H, 'r', 00H, '>', 00H, '<', 00H, 'b', 00H, 'r', 00H
	DB	'>', 00H, 0aH, 00H, '<', 00H, '/', 00H, 't', 00H, 'r', 00H, '>'
	DB	00H, 0aH, 00H, '<', 00H, '/', 00H, 't', 00H, 'a', 00H, 'b', 00H
	DB	'l', 00H, 'e', 00H, '>', 00H, 0aH, 00H, '<', 00H, '/', 00H, 't'
	DB	00H, 'd', 00H, '>', 00H, 0aH, 00H, '<', 00H, '/', 00H, 't', 00H
	DB	'r', 00H, '>', 00H, 0aH, 00H, '<', 00H, '/', 00H, 't', 00H, 'a'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, '>', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DBM@GIKGBNMM@?$AAS?$AAu?$AAb?$AA?5?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA_?$AAB?$AAu?$AAt@
CONST	SEGMENT
??_C@_1DBM@GIKGBNMM@?$AAS?$AAu?$AAb?$AA?5?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA_?$AAB?$AAu?$AAt@ DB 'S'
	DB	00H, 'u', 00H, 'b', 00H, ' ', 00H, 'D', 00H, 'e', 00H, 'f', 00H
	DB	'a', 00H, 'u', 00H, 'l', 00H, 't', 00H, '_', 00H, 'B', 00H, 'u'
	DB	00H, 't', 00H, 't', 00H, 'o', 00H, 'n', 00H, 's', 00H, 0aH, 00H
	DB	'I', 00H, 'f', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, '.', 00H, 'E', 00H, 'v', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, '.', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 'C'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'1', 00H, '3', 00H, ' ', 00H, 'T', 00H, 'h', 00H, 'e', 00H, 'n'
	DB	00H, 0aH, 00H, 'b', 00H, 't', 00H, 'n', 00H, '_', 00H, 'O', 00H
	DB	'K', 00H, '.', 00H, 'C', 00H, 'l', 00H, 'i', 00H, 'c', 00H, 'k'
	DB	00H, 0aH, 00H, 'E', 00H, 'l', 00H, 's', 00H, 'e', 00H, 'I', 00H
	DB	'f', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, '.', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '.', 00H, 'K', 00H, 'e', 00H, 'y', 00H, 'C', 00H, 'o'
	DB	00H, 'd', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H, '2', 00H
	DB	'7', 00H, ' ', 00H, 'T', 00H, 'h', 00H, 'e', 00H, 'n', 00H, 0aH
	DB	00H, 'b', 00H, 't', 00H, 'n', 00H, '_', 00H, 'C', 00H, 'a', 00H
	DB	'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H, '.', 00H, 'C', 00H, 'l'
	DB	00H, 'i', 00H, 'c', 00H, 'k', 00H, 0aH, 00H, 'E', 00H, 'n', 00H
	DB	'd', 00H, ' ', 00H, 'I', 00H, 'f', 00H, 0aH, 00H, 'E', 00H, 'n'
	DB	00H, 'd', 00H, ' ', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 0aH, 00H
	DB	0aH, 00H, '<', 00H, '/', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, '>', 00H, 0aH, 00H, '<', 00H, '/', 00H
	DB	'h', 00H, 'e', 00H, 'a', 00H, 'd', 00H, '>', 00H, 0aH, 00H, '<'
	DB	00H, 'b', 00H, 'o', 00H, 'd', 00H, 'y', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, '''', 00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'g', 00H
	DB	'r', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, '-', 00H, 'c'
	DB	00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, ':', 00H, '#', 00H
	DB	'E', 00H, 'E', 00H, 'E', 00H, 'E', 00H, 'E', 00H, 'E', 00H, ''''
	DB	00H, ' ', 00H, 'o', 00H, 'n', 00H, 'k', 00H, 'e', 00H, 'y', 00H
	DB	'p', 00H, 'r', 00H, 'e', 00H, 's', 00H, 's', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '''', 00H, 'v', 00H, 'b', 00H, 's', 00H, ':', 00H
	DB	'D', 00H, 'e', 00H, 'f', 00H, 'a', 00H, 'u', 00H, 'l', 00H, 't'
	DB	00H, '_', 00H, 'B', 00H, 'u', 00H, 't', 00H, 't', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, '''', 00H, ' ', 00H, 'a', 00H, 'l', 00H, 'i'
	DB	00H, 'g', 00H, 'n', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H
	DB	't', 00H, 'o', 00H, 'p', 00H, '''', 00H, '>', 00H, 0aH, 00H, '<'
	DB	00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H
	DB	'w', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '''', 00H, '1', 00H, '0', 00H, '0', 00H, '%', 00H
	DB	'''', 00H, ' ', 00H, 'h', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h'
	DB	00H, 't', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H, '8', 00H
	DB	'0', 00H, '%', 00H, '''', 00H, ' ', 00H, 'a', 00H, 'l', 00H, 'i'
	DB	00H, 'g', 00H, 'n', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H
	DB	'c', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ''''
	DB	00H, ' ', 00H, 'b', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H, '0', 00H, ''''
	DB	00H, '>', 00H, 0aH, 00H, '<', 00H, 't', 00H, 'r', 00H, ' ', 00H
	DB	'b', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, '=', 00H, ' ', 00H, '''', 00H, '0', 00H, '''', 00H, '>', 00H
	DB	0aH, 00H, '<', 00H, 't', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'l'
	DB	00H, 'i', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'''', 00H, 'l', 00H, 'e', 00H, 'f', 00H, 't', 00H, '''', 00H, ' '
	DB	00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, '''', 00H, 'm', 00H, 'i', 00H, 'd'
	DB	00H, 'd', 00H, 'l', 00H, 'e', 00H, '''', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, '=', 00H, '''', 00H, 'F'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, '-', 00H, 'F', 00H, 'a', 00H
	DB	'm', 00H, 'i', 00H, 'l', 00H, 'y', 00H, ':', 00H, 'A', 00H, 'r'
	DB	00H, 'i', 00H, 'a', 00H, 'l', 00H, '''', 00H, '>', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DIM@CBMOIOEB@?$AAS?$AAu?$AAb?$AA?5?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA_?$AAo?$AAn?$AAU?$AAn@
CONST	SEGMENT
??_C@_1DIM@CBMOIOEB@?$AAS?$AAu?$AAb?$AA?5?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA_?$AAo?$AAn?$AAU?$AAn@ DB 'S'
	DB	00H, 'u', 00H, 'b', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'o', 00H, 'w', 00H, '_', 00H, 'o', 00H, 'n', 00H, 'U'
	DB	00H, 'n', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 0aH, 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'b', 00H, 'j'
	DB	00H, 'F', 00H, 'S', 00H, 'O', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'O'
	DB	00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, '(', 00H
	DB	'"', 00H, 'S', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'F', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e'
	DB	00H, 'm', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, '"', 00H, ')', 00H, 0aH, 00H, 'S', 00H, 'e', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'S', 00H, 'h', 00H, 'e', 00H, 'l', 00H
	DB	'l', 00H, ' ', 00H, '=', 00H, ' ', 00H, 'C', 00H, 'r', 00H, 'e'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, '(', 00H, '"', 00H, 'W', 00H, 'S'
	DB	00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, '.', 00H
	DB	'S', 00H, 'h', 00H, 'e', 00H, 'l', 00H, 'l', 00H, '"', 00H, ')'
	DB	00H, 0aH, 00H, 's', 00H, 't', 00H, 'r', 00H, 'T', 00H, 'e', 00H
	DB	'm', 00H, 'p', 00H, 'F', 00H, 'o', 00H, 'l', 00H, 'd', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '=', 00H, ' ', 00H, 'o', 00H, 'S', 00H
	DB	'h', 00H, 'e', 00H, 'l', 00H, 'l', 00H, '.', 00H, 'E', 00H, 'x'
	DB	00H, 'p', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'E', 00H, 'n', 00H
	DB	'v', 00H, 'i', 00H, 'r', 00H, 'o', 00H, 'n', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 's', 00H, '(', 00H, '"', 00H, '%', 00H, 'T'
	DB	00H, 'E', 00H, 'M', 00H, 'P', 00H, '%', 00H, '"', 00H, ')', 00H
	DB	0aH, 00H, 'S', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'b'
	DB	00H, 'j', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, 'o', 00H, 'b', 00H, 'j', 00H, 'F', 00H, 'S'
	DB	00H, 'O', 00H, '.', 00H, 'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, '(', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'T', 00H, 'e', 00H, 'm', 00H, 'p', 00H, 'F', 00H, 'o'
	DB	00H, 'l', 00H, 'd', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '&', 00H
	DB	' ', 00H, '"', 00H, '\', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'y'
	DB	00H, 'f', 00H, 'd', 00H, '.', 00H, 't', 00H, 'x', 00H, 't', 00H
	DB	'"', 00H, ',', 00H, 'T', 00H, 'r', 00H, 'u', 00H, 'e', 00H, ','
	DB	00H, 'T', 00H, 'r', 00H, 'u', 00H, 'e', 00H, ')', 00H, 0aH, 00H
	DB	'I', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'u'
	DB	00H, 'l', 00H, 't', 00H, ' ', 00H, '=', 00H, ' ', 00H, '1', 00H
	DB	' ', 00H, 'T', 00H, 'h', 00H, 'e', 00H, 'n', 00H, 0aH, 00H, 'o'
	DB	00H, 'b', 00H, 'j', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'.', 00H, 'W', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'e', 00H, ' '
	DB	00H, '1', 00H, ' ', 00H, '&', 00H, ' ', 00H, 't', 00H, 'x', 00H
	DB	't', 00H, '_', 00H, 'i', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't'
	DB	00H, '.', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H
	DB	0aH, 00H, 'E', 00H, 'l', 00H, 's', 00H, 'e', 00H, 0aH, 00H, 'o'
	DB	00H, 'b', 00H, 'j', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'.', 00H, 'W', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'e', 00H, ' '
	DB	00H, '0', 00H, 0aH, 00H, 'E', 00H, 'n', 00H, 'd', 00H, ' ', 00H
	DB	'I', 00H, 'f', 00H, 0aH, 00H, 'o', 00H, 'b', 00H, 'j', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'C', 00H, 'l', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 0aH, 00H, 'E', 00H, 'n', 00H, 'd'
	DB	00H, ' ', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 0aH, 00H, 0aH, 00H
	DB	'S', 00H, 'u', 00H, 'b', 00H, ' ', 00H, 'R', 00H, 'u', 00H, 'n'
	DB	00H, '_', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'r', 00H
	DB	'a', 00H, 'm', 00H, 'O', 00H, 'K', 00H, 0aH, 00H, 'r', 00H, 'e'
	DB	00H, 's', 00H, 'u', 00H, 'l', 00H, 't', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '1', 00H, 0aH, 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, '.', 00H, 'C', 00H, 'l', 00H, 'o', 00H
	DB	's', 00H, 'e', 00H, 0aH, 00H, 'E', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, 'S', 00H, 'u', 00H, 'b', 00H, 0aH, 00H, 0aH, 00H, 'S', 00H
	DB	'u', 00H, 'b', 00H, ' ', 00H, 'R', 00H, 'u', 00H, 'n', 00H, '_'
	DB	00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, 'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l'
	DB	00H, 0aH, 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o', 00H
	DB	'w', 00H, '.', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e'
	DB	00H, 0aH, 00H, 'E', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'S', 00H
	DB	'u', 00H, 'b', 00H, 0aH, 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DHM@DMPHJKKO@?$AA?$DM?$AA?1?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$DO?$AA?6?$AA?$DM?$AAH?$AAT?$AAA?$AA?3?$AAA@
CONST	SEGMENT
??_C@_1DHM@DMPHJKKO@?$AA?$DM?$AA?1?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$DO?$AA?6?$AA?$DM?$AAH?$AAT?$AAA?$AA?3?$AAA@ DB '<'
	DB	00H, '/', 00H, 't', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H
	DB	'>', 00H, 0aH, 00H, '<', 00H, 'H', 00H, 'T', 00H, 'A', 00H, ':'
	DB	00H, 'A', 00H, 'P', 00H, 'P', 00H, 'L', 00H, 'I', 00H, 'C', 00H
	DB	'A', 00H, 'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, 0aH, 00H, 'I'
	DB	00H, 'D', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H, 't', 00H
	DB	'i', 00H, 'n', 00H, 'y', 00H, 'f', 00H, 'd', 00H, 'H', 00H, 'T'
	DB	00H, 'A', 00H, '''', 00H, 0aH, 00H, 'A', 00H, 'P', 00H, 'P', 00H
	DB	'L', 00H, 'I', 00H, 'C', 00H, 'A', 00H, 'T', 00H, 'I', 00H, 'O'
	DB	00H, 'N', 00H, 'N', 00H, 'A', 00H, 'M', 00H, 'E', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, '''', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'y'
	DB	00H, 'f', 00H, 'd', 00H, '_', 00H, 'i', 00H, 'n', 00H, 'p', 00H
	DB	'u', 00H, 't', 00H, 'B', 00H, 'o', 00H, 'x', 00H, '''', 00H, 0aH
	DB	00H, 'M', 00H, 'I', 00H, 'N', 00H, 'I', 00H, 'M', 00H, 'I', 00H
	DB	'Z', 00H, 'E', 00H, 'B', 00H, 'U', 00H, 'T', 00H, 'T', 00H, 'O'
	DB	00H, 'N', 00H, ' ', 00H, '=', 00H, ' ', 00H, '''', 00H, 'n', 00H
	DB	'o', 00H, '''', 00H, 0aH, 00H, 'M', 00H, 'A', 00H, 'X', 00H, 'I'
	DB	00H, 'M', 00H, 'I', 00H, 'Z', 00H, 'E', 00H, 'B', 00H, 'U', 00H
	DB	'T', 00H, 'T', 00H, 'O', 00H, 'N', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, '''', 00H, 'n', 00H, 'o', 00H, '''', 00H, 0aH, 00H, 'B', 00H
	DB	'O', 00H, 'R', 00H, 'D', 00H, 'E', 00H, 'R', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '''', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'o', 00H, 'g', 00H, '''', 00H, 0aH, 00H, 'S', 00H, 'C', 00H, 'R'
	DB	00H, 'O', 00H, 'L', 00H, 'L', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'''', 00H, 'n', 00H, 'o', 00H, '''', 00H, 0aH, 00H, 'S', 00H, 'I'
	DB	00H, 'N', 00H, 'G', 00H, 'L', 00H, 'E', 00H, 'I', 00H, 'N', 00H
	DB	'S', 00H, 'T', 00H, 'A', 00H, 'N', 00H, 'C', 00H, 'E', 00H, ' '
	DB	00H, '=', 00H, ' ', 00H, '''', 00H, 'y', 00H, 'e', 00H, 's', 00H
	DB	'''', 00H, 0aH, 00H, 'W', 00H, 'I', 00H, 'N', 00H, 'D', 00H, 'O'
	DB	00H, 'W', 00H, 'S', 00H, 'T', 00H, 'A', 00H, 'T', 00H, 'E', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, '''', 00H, 'h', 00H, 'i', 00H, 'd'
	DB	00H, 'd', 00H, 'e', 00H, 'n', 00H, '''', 00H, '>', 00H, 0aH, 00H
	DB	0aH, 00H, '<', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i', 00H, 'p'
	DB	00H, 't', 00H, ' ', 00H, 'l', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'u', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, '''', 00H, 'V', 00H, 'B', 00H, 'S', 00H, 'c', 00H, 'r', 00H
	DB	'i', 00H, 'p', 00H, 't', 00H, '''', 00H, '>', 00H, 0aH, 00H, 0aH
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'W', 00H, 'i', 00H, 'd', 00H
	DB	't', 00H, 'h', 00H, ' ', 00H, '=', 00H, ' ', 00H, 'S', 00H, 'c'
	DB	00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H, '.', 00H, 'W', 00H
	DB	'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, '/', 00H, '4', 00H, 0aH
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'H', 00H, 'e', 00H, 'i', 00H
	DB	'g', 00H, 'h', 00H, 't', 00H, ' ', 00H, '=', 00H, ' ', 00H, 'S'
	DB	00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H, '.', 00H
	DB	'H', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, '/'
	DB	00H, '6', 00H, 0aH, 00H, 'R', 00H, 'e', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'T', 00H, 'o', 00H, ' ', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'W', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H
	DB	',', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'H', 00H, 'e'
	DB	00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 0aH, 00H, 'M', 00H
	DB	'o', 00H, 'v', 00H, 'e', 00H, 'T', 00H, 'o', 00H, '(', 00H, '('
	DB	00H, 'S', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H
	DB	'.', 00H, 'W', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, '/'
	DB	00H, '2', 00H, ')', 00H, '-', 00H, '(', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'W', 00H, 'i', 00H, 'd', 00H, 't', 00H, 'h', 00H, '/'
	DB	00H, '2', 00H, ')', 00H, ')', 00H, ',', 00H, '(', 00H, '(', 00H
	DB	'S', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'e', 00H, 'n', 00H, '.'
	DB	00H, 'H', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H
	DB	'/', 00H, '2', 00H, ')', 00H, '-', 00H, '(', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, 'H', 00H, 'e', 00H, 'i', 00H, 'g', 00H, 'h', 00H
	DB	't', 00H, '/', 00H, '2', 00H, ')', 00H, ')', 00H, 0aH, 00H, 'r'
	DB	00H, 'e', 00H, 's', 00H, 'u', 00H, 'l', 00H, 't', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 0aH, 00H, 0aH, 00H, 'S', 00H, 'u'
	DB	00H, 'b', 00H, ' ', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H
	DB	'o', 00H, 'w', 00H, '_', 00H, 'o', 00H, 'n', 00H, 'L', 00H, 'o'
	DB	00H, 'a', 00H, 'd', 00H, 0aH, 00H, 't', 00H, 'x', 00H, 't', 00H
	DB	'_', 00H, 'i', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, '.'
	DB	00H, 'F', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 's', 00H, 0aH, 00H
	DB	'E', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'S', 00H, 'u', 00H, 'b'
	DB	00H, 0aH, 00H, 0aH, 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@DFLOMCNH@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT@
CONST	SEGMENT
??_C@_1IM@DFLOMCNH@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT@ DB 'I'
	DB	00H, 'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I', 00H, 'D', 00H
	DB	' ', 00H, 'D', 00H, 'E', 00H, 'F', 00H, 'A', 00H, 'U', 00H, 'L'
	DB	00H, 'T', 00H, '_', 00H, 'I', 00H, 'N', 00H, 'P', 00H, 'U', 00H
	DB	'T', 00H, ' ', 00H, 'W', 00H, 'I', 00H, 'T', 00H, 'H', 00H, ' '
	DB	00H, 'Q', 00H, 'U', 00H, 'O', 00H, 'T', 00H, 'E', 00H, 'S', 00H
	DB	':', 00H, ' ', 00H, 'u', 00H, 's', 00H, 'e', 00H, ' ', 00H, 't'
	DB	00H, 'h', 00H, 'e', 00H, ' ', 00H, 'G', 00H, 'R', 00H, 'A', 00H
	DB	'V', 00H, 'E', 00H, ' ', 00H, 'A', 00H, 'C', 00H, 'C', 00H, 'E'
	DB	00H, 'N', 00H, 'T', 00H, ' ', 00H, '\', 00H, 'x', 00H, '6', 00H
	DB	'0', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 's', 00H, 't', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, '.', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_13NEIAEHFG@?$AA?$CC@
CONST	SEGMENT
??_C@_13NEIAEHFG@?$AA?$CC@ DB '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@CEIOEFBB@?$AA?5?$AA?9?$AAI?$AAc?$AAo?$AAn?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?8@
CONST	SEGMENT
??_C@_1BK@CEIOEFBB@?$AA?5?$AA?9?$AAI?$AAc?$AAo?$AAn?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?8@ DB ' '
	DB	00H, '-', 00H, 'I', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'T', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '''', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@BKALBFNP@?$AA?5?$AA?9?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AA?8@
CONST	SEGMENT
??_C@_1BI@BKALBFNP@?$AA?5?$AA?9?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AA?8@ DB ' '
	DB	00H, '-', 00H, 'M', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, '''', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@JMHKFOGA@?$AAD?$AAi?$AAm?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?3?$AAr?$AAe?$AAs?$AAu@
CONST	SEGMENT
??_C@_1DK@JMHKFOGA@?$AAD?$AAi?$AAm?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?3?$AAr?$AAe?$AAs?$AAu@ DB 'D'
	DB	00H, 'i', 00H, 'm', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 's', 00H
	DB	'u', 00H, 'l', 00H, 't', 00H, ':', 00H, 'r', 00H, 'e', 00H, 's'
	DB	00H, 'u', 00H, 'l', 00H, 't', 00H, '=', 00H, 'I', 00H, 'n', 00H
	DB	'p', 00H, 'u', 00H, 't', 00H, 'B', 00H, 'o', 00H, 'x', 00H, '('
	DB	00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@PAPCLOOH@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAh?$AAt?$AAa@
CONST	SEGMENT
??_C@_1BO@PAPCLOOH@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAh?$AAt?$AAa@ DB '%'
	DB	00H, 'l', 00H, 's', 00H, '\', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'y', 00H, 'f', 00H, 'd', 00H, '.', 00H, 'h', 00H, 't', 00H, 'a'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@LGFMODGM@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAv?$AAb?$AAs@
CONST	SEGMENT
??_C@_1BO@LGFMODGM@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAv?$AAb?$AAs@ DB '%'
	DB	00H, 'l', 00H, 's', 00H, '\', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'y', 00H, 'f', 00H, 'd', 00H, '.', 00H, 'v', 00H, 'b', 00H, 's'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19LFDMGLCC@?$AAT?$AAE?$AAM?$AAP@
CONST	SEGMENT
??_C@_19LFDMGLCC@?$AAT?$AAE?$AAM?$AAP@ DB 'T', 00H, 'E', 00H, 'M', 00H, 'P'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@HDMBLILK@?$AAy?$AAe?$AAs?$AAn?$AAo?$AAc?$AAa?$AAn?$AAc?$AAe?$AAl@
CONST	SEGMENT
??_C@_1BI@HDMBLILK@?$AAy?$AAe?$AAs?$AAn?$AAo?$AAc?$AAa?$AAn?$AAc?$AAe?$AAl@ DB 'y'
	DB	00H, 'e', 00H, 's', 00H, 'n', 00H, 'o', 00H, 'c', 00H, 'a', 00H
	DB	'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HJGDFCMN@?$AAy?$AAe?$AAs?$AAn?$AAo@
CONST	SEGMENT
??_C@_1M@HJGDFCMN@?$AAy?$AAe?$AAs?$AAn?$AAo@ DB 'y', 00H, 'e', 00H, 's', 00H
	DB	'n', 00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BBACDFOM@?$AAo?$AAk?$AAc?$AAa?$AAn?$AAc?$AAe?$AAl@
CONST	SEGMENT
??_C@_1BC@BBACDFOM@?$AAo?$AAk?$AAc?$AAa?$AAn?$AAc?$AAe?$AAl@ DB 'o', 00H, 'k'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@FCBGGNJJ@?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAo?$AAn@
CONST	SEGMENT
??_C@_1BC@FCBGGNJJ@?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAo?$AAn@ DB 'q', 00H, 'u'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13ODFOLHGE@?$AA?8@
CONST	SEGMENT
??_C@_13ODFOLHGE@?$AA?8@ DB '''', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@DEANNFDD@?$AA?5?$AA?9?$AAT?$AAi?$AAt?$AAl?$AAe?$AA?5?$AA?8@
CONST	SEGMENT
??_C@_1BE@DEANNFDD@?$AA?5?$AA?9?$AAT?$AAi?$AAt?$AAl?$AAe?$AA?5?$AA?8@ DB ' '
	DB	00H, '-', 00H, 'T', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, '''', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BOK@LPJBJB@?$AA$?$AAb?$AAa?$AAl?$AAl?$AAo?$AAo?$AAn?$AA?4?$AAI?$AAc?$AAo?$AAn?$AA?5?$AA?$DN@
CONST	SEGMENT
??_C@_1BOK@LPJBJB@?$AA$?$AAb?$AAa?$AAl?$AAl?$AAo?$AAo?$AAn?$AA?4?$AAI?$AAc?$AAo?$AAn?$AA?5?$AA?$DN@ DB '$'
	DB	00H, 'b', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'o', 00H
	DB	'n', 00H, '.', 00H, 'I', 00H, 'c', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, '=', 00H, ' ', 00H, '$', 00H, 'i', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, ';', 00H, ' ', 00H, '$', 00H, 'b', 00H, 'a'
	DB	00H, 'l', 00H, 'l', 00H, 'o', 00H, 'o', 00H, 'n', 00H, '.', 00H
	DB	'B', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'o', 00H, 'n'
	DB	00H, 'T', 00H, 'i', 00H, 'p', 00H, 'I', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, ' ', 00H, '$', 00H, 'I', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	' ', 00H, ';', 00H, ' ', 00H, '$', 00H, 'b', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'o', 00H, 'n', 00H, '.', 00H, 'B', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'o', 00H, 'n', 00H, 'T'
	DB	00H, 'i', 00H, 'p', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, '$', 00H, 'M', 00H, 'e', 00H, 's'
	DB	00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ' ', 00H, ';', 00H
	DB	' ', 00H, '$', 00H, 'b', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'o', 00H, 'n', 00H, '.', 00H, 'B', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'o', 00H, 'n', 00H, 'T', 00H, 'i', 00H, 'p'
	DB	00H, 'T', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, '$', 00H, 'T', 00H, 'i', 00H, 't', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, ';', 00H, ' ', 00H, '$', 00H, 'b', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'o', 00H, 'n', 00H, '.'
	DB	00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '''', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'y', 00H, 'f'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H
	DB	'l', 00H, 'o', 00H, 'g', 00H, 's', 00H, '''', 00H, ' ', 00H, ';'
	DB	00H, ' ', 00H, '$', 00H, 'b', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'o', 00H, 'n', 00H, '.', 00H, 'V', 00H, 'i', 00H, 's'
	DB	00H, 'i', 00H, 'b', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '$', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'e', 00H, ' '
	DB	00H, ';', 00H, ' ', 00H, '$', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'o', 00H, 'n', 00H, '.', 00H, 'S', 00H, 'h'
	DB	00H, 'o', 00H, 'w', 00H, 'B', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'o', 00H, 'n', 00H, 'T', 00H, 'i', 00H, 'p', 00H, '('
	DB	00H, '5', 00H, '0', 00H, '0', 00H, '0', 00H, ')', 00H, '}', 00H
	DB	';', 00H, 'S', 00H, 'h', 00H, 'o', 00H, 'w', 00H, '-', 00H, 'B'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'o', 00H, 'n', 00H
	DB	'T', 00H, 'i', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DKC@BDNFEEIM@?$AAp?$AAo?$AAw?$AAe?$AAr?$AAs?$AAh?$AAe?$AAl?$AAl?$AA?4?$AAe?$AAx?$AAe?$AA?5@
CONST	SEGMENT
??_C@_1DKC@BDNFEEIM@?$AAp?$AAo?$AAw?$AAe?$AAr?$AAs?$AAh?$AAe?$AAl?$AAl?$AA?4?$AAe?$AAx?$AAe?$AA?5@ DB 'p'
	DB	00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'h', 00H
	DB	'e', 00H, 'l', 00H, 'l', 00H, '.', 00H, 'e', 00H, 'x', 00H, 'e'
	DB	00H, ' ', 00H, '-', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'm', 00H
	DB	'a', 00H, 'n', 00H, 'd', 00H, ' ', 00H, '"', 00H, 'f', 00H, 'u'
	DB	00H, 'n', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, 'S', 00H, 'h', 00H, 'o', 00H, 'w', 00H, '-', 00H, 'B'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'o', 00H, 'n', 00H
	DB	'T', 00H, 'i', 00H, 'p', 00H, ' ', 00H, '{', 00H, '[', 00H, 'c'
	DB	00H, 'm', 00H, 'd', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'b', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '('
	DB	00H, ')', 00H, ']', 00H, ' ', 00H, 'p', 00H, 'a', 00H, 'r', 00H
	DB	'a', 00H, 'm', 00H, '(', 00H, ' ', 00H, '[', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ']', 00H, '$', 00H
	DB	'T', 00H, 'i', 00H, 't', 00H, 'l', 00H, 'e', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '''', 00H, ' ', 00H, '''', 00H, ',', 00H, ' ', 00H
	DB	'[', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ']', 00H, '$', 00H, 'M', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H, ''''
	DB	00H, ' ', 00H, '''', 00H, ',', 00H, ' ', 00H, '[', 00H, 'V', 00H
	DB	'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'S', 00H, 'e', 00H, 't', 00H, '(', 00H, '''', 00H, 'i', 00H
	DB	'n', 00H, 'f', 00H, 'o', 00H, '''', 00H, ',', 00H, ' ', 00H, ''''
	DB	00H, 'w', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, '''', 00H, ',', 00H, ' ', 00H, '''', 00H, 'e', 00H, 'r'
	DB	00H, 'r', 00H, 'o', 00H, 'r', 00H, '''', 00H, ')', 00H, ']', 00H
	DB	' ', 00H, '[', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, ']', 00H, '$', 00H, 'I', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '''', 00H, 'i', 00H, 'n', 00H, 'f', 00H, 'o', 00H
	DB	'''', 00H, ')', 00H, ';', 00H, '[', 00H, 's', 00H, 'y', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, '.', 00H, 'R', 00H, 'e', 00H
	DB	'f', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, '.', 00H, 'A', 00H, 's', 00H, 's', 00H, 'e', 00H
	DB	'm', 00H, 'b', 00H, 'l', 00H, 'y', 00H, ']', 00H, ':', 00H, ':'
	DB	00H, 'L', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 'W', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, 'P', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'i'
	DB	00H, 'a', 00H, 'l', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	'(', 00H, '''', 00H, 'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e'
	DB	00H, 'm', 00H, '.', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H
	DB	'o', 00H, 'w', 00H, 's', 00H, '.', 00H, 'F', 00H, 'o', 00H, 'r'
	DB	00H, 'm', 00H, 's', 00H, '''', 00H, ')', 00H, ' ', 00H, '|', 00H
	DB	' ', 00H, 'O', 00H, 'u', 00H, 't', 00H, '-', 00H, 'N', 00H, 'u'
	DB	00H, 'l', 00H, 'l', 00H, ' ', 00H, ';', 00H, ' ', 00H, '$', 00H
	DB	'b', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'o', 00H, 'n'
	DB	00H, ' ', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'e', 00H, 'w', 00H
	DB	'-', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H
	DB	'm', 00H, '.', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 's', 00H, '.', 00H, 'F', 00H, 'o', 00H, 'r', 00H
	DB	'm', 00H, 's', 00H, '.', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'i'
	DB	00H, 'f', 00H, 'y', 00H, 'I', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, ';', 00H, ' ', 00H, '$', 00H, 'p', 00H, 'a', 00H, 't'
	DB	00H, 'h', 00H, ' ', 00H, '=', 00H, ' ', 00H, 'G', 00H, 'e', 00H
	DB	't', 00H, '-', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, '-', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, '$', 00H, 'p', 00H, 'i', 00H, 'd', 00H, ' ', 00H, '|'
	DB	00H, ' ', 00H, 'S', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, '-', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, '-', 00H, 'E', 00H, 'x', 00H, 'p', 00H
	DB	'a', 00H, 'n', 00H, 'd', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, 'y', 00H, ' ', 00H, 'P', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, ' ', 00H, ';', 00H, ' ', 00H, '$'
	DB	00H, 'i', 00H, 'c', 00H, 'o', 00H, 'n', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '[', 00H, 'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e'
	DB	00H, 'm', 00H, '.', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'I', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, ']', 00H, ':', 00H, ':', 00H, 'E', 00H, 'x', 00H
	DB	't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'A', 00H, 's'
	DB	00H, 's', 00H, 'o', 00H, 'c', 00H, 'i', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, 'I', 00H, 'c', 00H, 'o', 00H, 'n', 00H, '('
	DB	00H, '$', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'h', 00H, ')', 00H
	DB	' ', 00H, ';', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CILJLOAA@windows_wchar@
CONST	SEGMENT
??_C@_0O@CILJLOAA@windows_wchar@ DB 'windows_wchar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@LMOENJBN@?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA_?$AAq?$AAu?$AAe?$AAr?$AAy@
CONST	SEGMENT
??_C@_1BK@LMOENJBN@?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA_?$AAq?$AAu?$AAe?$AAr?$AAy@ DB 't'
	DB	00H, 'i', 00H, 'n', 00H, 'y', 00H, 'f', 00H, 'd', 00H, '_', 00H
	DB	'q', 00H, 'u', 00H, 'e', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@EPKPDBBM@?$AA?$CD?$AA?$CF?$AA0?$AA2?$AAh?$AAx?$AA?$CF?$AA0?$AA2?$AAh?$AAx?$AA?$CF?$AA0?$AA2?$AAh@
CONST	SEGMENT
??_C@_1CC@EPKPDBBM@?$AA?$CD?$AA?$CF?$AA0?$AA2?$AAh?$AAx?$AA?$CF?$AA0?$AA2?$AAh?$AAx?$AA?$CF?$AA0?$AA2?$AAh@ DB '#'
	DB	00H, '%', 00H, '0', 00H, '2', 00H, 'h', 00H, 'x', 00H, '%', 00H
	DB	'0', 00H, '2', 00H, 'h', 00H, 'x', 00H, '%', 00H, '0', 00H, '2'
	DB	00H, 'h', 00H, 'x', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_13CIFDLIMG@?$AAw@
CONST	SEGMENT
??_C@_13CIFDLIMG@?$AAw@ DB 'w', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@BAIGDEFI@?$AAe?$AAr?$AAr?$AAo?$AAr@
CONST	SEGMENT
??_C@_1M@BAIGDEFI@?$AAe?$AAr?$AAr?$AAo?$AAr@ DB 'e', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@HMPNKADB@?$AAw?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg@
CONST	SEGMENT
??_C@_1BA@HMPNKADB@?$AAw?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg@ DB 'w', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@LBIIBMBN@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAM?$AAE?$AAS?$AAS?$AAA?$AAG?$AAE@
CONST	SEGMENT
??_C@_1DI@LBIIBMBN@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAM?$AAE?$AAS?$AAS?$AAA?$AAG?$AAE@ DB 'I'
	DB	00H, 'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I', 00H, 'D', 00H
	DB	' ', 00H, 'M', 00H, 'E', 00H, 'S', 00H, 'S', 00H, 'A', 00H, 'G'
	DB	00H, 'E', 00H, ' ', 00H, 'W', 00H, 'I', 00H, 'T', 00H, 'H', 00H
	DB	' ', 00H, 'Q', 00H, 'U', 00H, 'O', 00H, 'T', 00H, 'E', 00H, 'S'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@PEGLJLHK@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAT?$AAI?$AAT?$AAL?$AAE?$AA?5?$AAW@
CONST	SEGMENT
??_C@_1DE@PEGLJLHK@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAT?$AAI?$AAT?$AAL?$AAE?$AA?5?$AAW@ DB 'I'
	DB	00H, 'N', 00H, 'V', 00H, 'A', 00H, 'L', 00H, 'I', 00H, 'D', 00H
	DB	' ', 00H, 'T', 00H, 'I', 00H, 'T', 00H, 'L', 00H, 'E', 00H, ' '
	DB	00H, 'W', 00H, 'I', 00H, 'T', 00H, 'H', 00H, ' ', 00H, 'Q', 00H
	DB	'U', 00H, 'O', 00H, 'T', 00H, 'E', 00H, 'S', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r@
CONST	SEGMENT
??_C@_01KDCPPGHE@r@ DB 'r', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EEIOPNIL@powershell?4exe@
CONST	SEGMENT
??_C@_0P@EEIOPNIL@powershell?4exe@ DB 'powershell.exe', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MDNJKLGP@tinyfd_winUtf8@
CONST	SEGMENT
??_C@_0P@MDNJKLGP@tinyfd_winUtf8@ DB 'tinyfd_winUtf8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OGADKCEF@tinyfd_assumeGraphicDisplay@
CONST	SEGMENT
??_C@_0BM@OGADKCEF@tinyfd_assumeGraphicDisplay@ DB 'tinyfd_assumeGraphicD'
	DB	'isplay', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JGECDCHJ@RtlGetVersion@
CONST	SEGMENT
??_C@_0O@JGECDCHJ@RtlGetVersion@ DB 'RtlGetVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@GJOFHIHD@?$AAn?$AAt?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl@
CONST	SEGMENT
??_C@_1BE@GJOFHIHD@?$AAn?$AAt?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl@ DB 'n', 00H
	DB	't', 00H, 'd', 00H, 'l', 00H, 'l', 00H, '.', 00H, 'd', 00H, 'l'
	DB	00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CIGCMJGH@where?5powershell?4exe@
CONST	SEGMENT
??_C@_0BF@CIGCMJGH@where?5powershell?4exe@ DB 'where powershell.exe', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CHFPOPFG@tinyfd_response@
CONST	SEGMENT
??_C@_0BA@CHFPOPFG@tinyfd_response@ DB 'tinyfd_response', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LNJOPNEE@tinyfd_needs@
CONST	SEGMENT
??_C@_0N@LNJOPNEE@tinyfd_needs@ DB 'tinyfd_needs', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LDAFJHNO@tinyfd_version@
CONST	SEGMENT
??_C@_0P@LDAFJHNO@tinyfd_version@ DB 'tinyfd_version', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w@
CONST	SEGMENT
??_C@_01NOFIACDB@w@ DB 'w', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@POPLNJJJ@tinyfd_forceConsole@
CONST	SEGMENT
??_C@_0BE@POPLNJJJ@tinyfd_forceConsole@ DB 'tinyfd_forceConsole', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JAPMBPGL@tinyfd_allowCursesDialogs@
CONST	SEGMENT
??_C@_0BK@JAPMBPGL@tinyfd_allowCursesDialogs@ DB 'tinyfd_allowCursesDialo'
	DB	'gs', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OKMGKPME@tinyfd_silent@
CONST	SEGMENT
??_C@_0O@OKMGKPME@tinyfd_silent@ DB 'tinyfd_silent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DNCGPFOP@tinyfd_verbose@
CONST	SEGMENT
??_C@_0P@DNCGPFOP@tinyfd_verbose@ DB 'tinyfd_verbose', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09MEHKOFDP@?2?1?3?$CK?$DP?$CC?$DM?$DO?$HM@
CONST	SEGMENT
??_C@_09MEHKOFDP@?2?1?3?$CK?$DP?$CC?$DM?$DO?$HM@ DB '\/:*?"<>|', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JINAAHFC@?$CD?$CF02hx?$CF02hx?$CF02hx@
CONST	SEGMENT
??_C@_0BB@JINAAHFC@?$CD?$CF02hx?$CF02hx?$CF02hx@ DB '#%02hx%02hx%02hx', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2@
CONST	SEGMENT
??_C@_01KICIPPFI@?2@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07JPHDIPNG@DISPLAY@
CONST	SEGMENT
??_C@_07JPHDIPNG@DISPLAY@ DB 'DISPLAY', 00H		; `string'
tinyfd_needs DB	' ___________', 0aH, '/           \ ', 0aH, '| tiny file '
	DB	'|', 0aH, '|  dialogs  |', 0aH, '\_____  ____/', 0aH, '      \'
	DB	'|', 0aH, 'tiny file dialogs on Windows needs:', 0aH, '   a gr'
	DB	'aphic display', 0aH, 'or dialog.exe (curses console mode  ** '
	DB	'Disabled by default **)', 0aH, 'or a console for basic input', 00H
tinyfd_version DB '3.15.1', 00H
	ORG $+1
?lPowershellPresent@?1??powershellPresent@@9@9 DD 0ffffffffH ; `powershellPresent'::`2'::lPowershellPresent
tinyfd_winUtf8 DD 01H
PUBLIC	tinyfd_openFileDialog
PUBLIC	tinyfd_inputBox
PUBLIC	BrowseCallbackProcW_enum
PUBLIC	tinyfd_openFileDialogW
PUBLIC	tinyfd_inputBoxW
PUBLIC	tinyfd_utf16to8
PUBLIC	tinyfd_utf16toMbcs
PUBLIC	tinyfd_utf8to16
PUBLIC	tinyfd_mbcsTo16
PUBLIC	tfd_quoteDetected
PUBLIC	swprintf
PUBLIC	_vswprintf_c_l
?lCurDir@?1??getCurDir@@9@9 DB 0400H DUP (?)		; `getCurDir'::`2'::lCurDir
gWarningDisplayed DD 01H DUP (?)
?aoBuff@?1??openFileDialogWinConsole@@9@9 DB 0400H DUP (?) ; `openFileDialogWinConsole'::`2'::aoBuff
?lBuff@?1??tinyfd_inputBoxW@@9@9 DW 0400H DUP (?)	; `tinyfd_inputBoxW'::`2'::lBuff
	ALIGN	8

?lUtf16string@?1??tinyfd_utf8to16@@9@9 DQ 01H DUP (?)	; `tinyfd_utf8to16'::`2'::lUtf16string
?lUtf8string@?1??tinyfd_utf16to8@@9@9 DQ 01H DUP (?)	; `tinyfd_utf16to8'::`2'::lUtf8string
?lBuff@?1??tinyfd_openFileDialogW@@9@9 DQ 01H DUP (?)	; `tinyfd_openFileDialogW'::`2'::lBuff
?lMbcsString@?1??tinyfd_utf16toMbcs@@9@9 DQ 01H DUP (?)	; `tinyfd_utf16toMbcs'::`2'::lMbcsString
?lBuff@?1??tinyfd_openFileDialog@@9@9 DB 0400H DUP (?)	; `tinyfd_openFileDialog'::`2'::lBuff
?lMbcsString@?1??tinyfd_mbcsTo16@@9@9 DQ 01H DUP (?)	; `tinyfd_mbcsTo16'::`2'::lMbcsString
?lBuff@?1??tinyfd_inputBox@@9@9 DB 0400H DUP (?)	; `tinyfd_inputBox'::`2'::lBuff
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$tinyfd_openFileDialog DD imagerel $LN102
	DD	imagerel $LN102+826
	DD	imagerel $unwind$tinyfd_openFileDialog
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$tinyfd_inputBox DD imagerel $LN141
	DD	imagerel $LN141+1420
	DD	imagerel $unwind$tinyfd_inputBox
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$writeUtf8 DD imagerel writeUtf8
	DD	imagerel writeUtf8+125
	DD	imagerel $unwind$writeUtf8
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$openFileDialogWinConsole DD imagerel openFileDialogWinConsole
	DD	imagerel openFileDialogWinConsole+1122
	DD	imagerel $unwind$openFileDialogWinConsole
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$inputBoxWinConsole DD imagerel inputBoxWinConsole
	DD	imagerel inputBoxWinConsole+1728
	DD	imagerel $unwind$inputBoxWinConsole
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$dialogPresent DD imagerel dialogPresent
	DD	imagerel dialogPresent+66
	DD	imagerel $unwind$dialogPresent
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$dialogPresent DD imagerel dialogPresent+66
	DD	imagerel dialogPresent+293
	DD	imagerel $chain$0$dialogPresent
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$dialogPresent DD imagerel dialogPresent+293
	DD	imagerel dialogPresent+299
	DD	imagerel $chain$2$dialogPresent
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$openFileDialogWinGui DD imagerel openFileDialogWinGui
	DD	imagerel openFileDialogWinGui+638
	DD	imagerel $unwind$openFileDialogWinGui
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$inputBoxWinGui DD imagerel inputBoxWinGui
	DD	imagerel inputBoxWinGui+417
	DD	imagerel $unwind$inputBoxWinGui
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$BrowseCallbackProcW DD imagerel BrowseCallbackProcW
	DD	imagerel BrowseCallbackProcW+61
	DD	imagerel $unwind$BrowseCallbackProcW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$BrowseCallbackProcW_enum DD imagerel $LN9
	DD	imagerel $LN9+173
	DD	imagerel $unwind$BrowseCallbackProcW_enum
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$tinyfd_openFileDialogW DD imagerel $LN242
	DD	imagerel $LN242+2197
	DD	imagerel $unwind$tinyfd_openFileDialogW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$tinyfd_inputBoxW DD imagerel $LN220
	DD	imagerel $LN220+303
	DD	imagerel $unwind$tinyfd_inputBoxW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$tinyfd_inputBoxW DD imagerel $LN220+303
	DD	imagerel $LN220+2737
	DD	imagerel $chain$2$tinyfd_inputBoxW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$tinyfd_inputBoxW DD imagerel $LN220+2737
	DD	imagerel $LN220+2761
	DD	imagerel $chain$3$tinyfd_inputBoxW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$tinyfd_inputBoxW DD imagerel $LN220+2761
	DD	imagerel $LN220+2767
	DD	imagerel $chain$4$tinyfd_inputBoxW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$hiddenConsoleW DD imagerel hiddenConsoleW
	DD	imagerel hiddenConsoleW+323
	DD	imagerel $unwind$hiddenConsoleW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$EnumThreadWndProc DD imagerel EnumThreadWndProc
	DD	imagerel EnumThreadWndProc+167
	DD	imagerel $unwind$EnumThreadWndProc
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ensureFilesExist DD imagerel ensureFilesExist
	DD	imagerel ensureFilesExist+77
	DD	imagerel $unwind$ensureFilesExist
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$ensureFilesExist DD imagerel ensureFilesExist+77
	DD	imagerel ensureFilesExist+106
	DD	imagerel $chain$0$ensureFilesExist
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$ensureFilesExist DD imagerel ensureFilesExist+106
	DD	imagerel ensureFilesExist+257
	DD	imagerel $chain$2$ensureFilesExist
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$ensureFilesExist DD imagerel ensureFilesExist+257
	DD	imagerel ensureFilesExist+277
	DD	imagerel $chain$3$ensureFilesExist
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$ensureFilesExist DD imagerel ensureFilesExist+277
	DD	imagerel ensureFilesExist+346
	DD	imagerel $chain$4$ensureFilesExist
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$quoteDetectedW DD imagerel quoteDetectedW
	DD	imagerel quoteDetectedW+77
	DD	imagerel $unwind$quoteDetectedW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$replaceWchar DD imagerel replaceWchar
	DD	imagerel replaceWchar+27
	DD	imagerel $unwind$replaceWchar
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$replaceWchar DD imagerel replaceWchar+27
	DD	imagerel replaceWchar+62
	DD	imagerel $chain$0$replaceWchar
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$replaceWchar DD imagerel replaceWchar+62
	DD	imagerel replaceWchar+67
	DD	imagerel $chain$1$replaceWchar
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fileExists DD imagerel fileExists
	DD	imagerel fileExists+124
	DD	imagerel $unwind$fileExists
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$getLastNameW DD imagerel getLastNameW
	DD	imagerel getLastNameW+177
	DD	imagerel $unwind$getLastNameW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$getPathWithoutFinalSlashW DD imagerel getPathWithoutFinalSlashW
	DD	imagerel getPathWithoutFinalSlashW+26
	DD	imagerel $unwind$getPathWithoutFinalSlashW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$getPathWithoutFinalSlashW DD imagerel getPathWithoutFinalSlashW+26
	DD	imagerel getPathWithoutFinalSlashW+90
	DD	imagerel $chain$0$getPathWithoutFinalSlashW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$getPathWithoutFinalSlashW DD imagerel getPathWithoutFinalSlashW+90
	DD	imagerel getPathWithoutFinalSlashW+136
	DD	imagerel $chain$2$getPathWithoutFinalSlashW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$getPathWithoutFinalSlashW DD imagerel getPathWithoutFinalSlashW+136
	DD	imagerel getPathWithoutFinalSlashW+155
	DD	imagerel $chain$3$getPathWithoutFinalSlashW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wipefileW DD imagerel wipefileW
	DD	imagerel wipefileW+46
	DD	imagerel $unwind$wipefileW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$wipefileW DD imagerel wipefileW+46
	DD	imagerel wipefileW+120
	DD	imagerel $chain$0$wipefileW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$wipefileW DD imagerel wipefileW+120
	DD	imagerel wipefileW+139
	DD	imagerel $chain$1$wipefileW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$tinyfd_utf16to8 DD imagerel $LN11
	DD	imagerel $LN11+88
	DD	imagerel $unwind$tinyfd_utf16to8
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$tinyfd_utf16to8 DD imagerel $LN11+88
	DD	imagerel $LN11+186
	DD	imagerel $chain$0$tinyfd_utf16to8
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$tinyfd_utf16to8 DD imagerel $LN11+186
	DD	imagerel $LN11+211
	DD	imagerel $chain$2$tinyfd_utf16to8
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$tinyfd_utf16toMbcs DD imagerel $LN11
	DD	imagerel $LN11+85
	DD	imagerel $unwind$tinyfd_utf16toMbcs
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$tinyfd_utf16toMbcs DD imagerel $LN11+85
	DD	imagerel $LN11+180
	DD	imagerel $chain$0$tinyfd_utf16toMbcs
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$tinyfd_utf16toMbcs DD imagerel $LN11+180
	DD	imagerel $LN11+205
	DD	imagerel $chain$2$tinyfd_utf16toMbcs
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$tinyfd_utf8to16 DD imagerel $LN13
	DD	imagerel $LN13+42
	DD	imagerel $unwind$tinyfd_utf8to16
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$tinyfd_utf8to16 DD imagerel $LN13+42
	DD	imagerel $LN13+183
	DD	imagerel $chain$1$tinyfd_utf8to16
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$tinyfd_utf8to16 DD imagerel $LN13+183
	DD	imagerel $LN13+217
	DD	imagerel $chain$3$tinyfd_utf8to16
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$tinyfd_mbcsTo16 DD imagerel $LN11
	DD	imagerel $LN11+196
	DD	imagerel $unwind$tinyfd_mbcsTo16
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sizeMbcs DD imagerel sizeMbcs
	DD	imagerel sizeMbcs+47
	DD	imagerel $unwind$sizeMbcs
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sizeUtf8 DD imagerel sizeUtf8
	DD	imagerel sizeUtf8+50
	DD	imagerel $unwind$sizeUtf8
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sizeUtf16FromMbcs DD imagerel sizeUtf16FromMbcs
	DD	imagerel sizeUtf16FromMbcs+38
	DD	imagerel $unwind$sizeUtf16FromMbcs
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sizeUtf16From8 DD imagerel sizeUtf16From8
	DD	imagerel sizeUtf16From8+41
	DD	imagerel $unwind$sizeUtf16From8
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$replaceChr DD imagerel replaceChr
	DD	imagerel replaceChr+18
	DD	imagerel $unwind$replaceChr
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$replaceChr DD imagerel replaceChr+18
	DD	imagerel replaceChr+72
	DD	imagerel $chain$0$replaceChr
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$replaceChr DD imagerel replaceChr+72
	DD	imagerel replaceChr+78
	DD	imagerel $chain$1$replaceChr
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$tfd_quoteDetected DD imagerel $LN28
	DD	imagerel $LN28+148
	DD	imagerel $unwind$tfd_quoteDetected
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wipefile DD imagerel wipefile
	DD	imagerel wipefile+46
	DD	imagerel $unwind$wipefile
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$wipefile DD imagerel wipefile+46
	DD	imagerel wipefile+116
	DD	imagerel $chain$0$wipefile
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$wipefile DD imagerel wipefile+116
	DD	imagerel wipefile+135
	DD	imagerel $chain$1$wipefile
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$getenvDISPLAY DD imagerel getenvDISPLAY
	DD	imagerel getenvDISPLAY+46
	DD	imagerel $unwind$getenvDISPLAY
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$swprintf DD imagerel $LN6
	DD	imagerel $LN6+88
	DD	imagerel $unwind$swprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vswprintf_c_l DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$_vswprintf_c_l
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vswprintf_c_l DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$swprintf DD 051201H
	DD	0700e6212H
	DD	0500c600dH
	DD	0300bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$getenvDISPLAY DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$wipefile DD 021H
	DD	imagerel wipefile
	DD	imagerel wipefile+46
	DD	imagerel $unwind$wipefile
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$wipefile DD 020521H
	DD	0f7405H
	DD	imagerel wipefile
	DD	imagerel wipefile+46
	DD	imagerel $unwind$wipefile
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wipefile DD 021519H
	DD	03002b206H
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$tfd_quoteDetected DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$replaceChr DD 021H
	DD	imagerel replaceChr
	DD	imagerel replaceChr+18
	DD	imagerel $unwind$replaceChr
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$replaceChr DD 020521H
	DD	067405H
	DD	imagerel replaceChr
	DD	imagerel replaceChr+18
	DD	imagerel $unwind$replaceChr
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$replaceChr DD 020a01H
	DD	03006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sizeUtf16From8 DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sizeUtf16FromMbcs DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sizeUtf8 DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sizeMbcs DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$tinyfd_mbcsTo16 DD 085001H
	DD	096450H
	DD	08543aH
	DD	0a340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$tinyfd_utf8to16 DD 040021H
	DD	096400H
	DD	085400H
	DD	imagerel $LN13
	DD	imagerel $LN13+42
	DD	imagerel $unwind$tinyfd_utf8to16
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$tinyfd_utf8to16 DD 041f21H
	DD	09641fH
	DD	085405H
	DD	imagerel $LN13
	DD	imagerel $LN13+42
	DD	imagerel $unwind$tinyfd_utf8to16
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$tinyfd_utf8to16 DD 020601H
	DD	070025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$tinyfd_utf16toMbcs DD 020021H
	DD	0a6400H
	DD	imagerel $LN11
	DD	imagerel $LN11+85
	DD	imagerel $unwind$tinyfd_utf16toMbcs
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$tinyfd_utf16toMbcs DD 020521H
	DD	0a6405H
	DD	imagerel $LN11
	DD	imagerel $LN11+85
	DD	imagerel $unwind$tinyfd_utf16toMbcs
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$tinyfd_utf16toMbcs DD 040a01H
	DD	0b340aH
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$tinyfd_utf16to8 DD 020021H
	DD	0a6400H
	DD	imagerel $LN11
	DD	imagerel $LN11+88
	DD	imagerel $unwind$tinyfd_utf16to8
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$tinyfd_utf16to8 DD 020521H
	DD	0a6405H
	DD	imagerel $LN11
	DD	imagerel $LN11+88
	DD	imagerel $unwind$tinyfd_utf16to8
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$tinyfd_utf16to8 DD 040a01H
	DD	0b340aH
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$wipefileW DD 021H
	DD	imagerel wipefileW
	DD	imagerel wipefileW+46
	DD	imagerel $unwind$wipefileW
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$wipefileW DD 020521H
	DD	0f7405H
	DD	imagerel wipefileW
	DD	imagerel wipefileW+46
	DD	imagerel $unwind$wipefileW
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wipefileW DD 021519H
	DD	03002b206H
	DD	imagerel __GSHandlerCheck
	DD	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$getPathWithoutFinalSlashW DD 021H
	DD	imagerel getPathWithoutFinalSlashW
	DD	imagerel getPathWithoutFinalSlashW+26
	DD	imagerel $unwind$getPathWithoutFinalSlashW
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$getPathWithoutFinalSlashW DD 020021H
	DD	067400H
	DD	imagerel getPathWithoutFinalSlashW
	DD	imagerel getPathWithoutFinalSlashW+26
	DD	imagerel $unwind$getPathWithoutFinalSlashW
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$getPathWithoutFinalSlashW DD 020521H
	DD	067405H
	DD	imagerel getPathWithoutFinalSlashW
	DD	imagerel getPathWithoutFinalSlashW+26
	DD	imagerel $unwind$getPathWithoutFinalSlashW
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$getPathWithoutFinalSlashW DD 040a01H
	DD	07340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$getLastNameW DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fileExists DD 011319H
	DD	0c204H
	DD	imagerel __GSHandlerCheck
	DD	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$replaceWchar DD 021H
	DD	imagerel replaceWchar
	DD	imagerel replaceWchar+27
	DD	imagerel $unwind$replaceWchar
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$replaceWchar DD 020521H
	DD	043405H
	DD	imagerel replaceWchar
	DD	imagerel replaceWchar+27
	DD	imagerel $unwind$replaceWchar
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$replaceWchar DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$quoteDetectedW DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$ensureFilesExist DD 021H
	DD	imagerel ensureFilesExist
	DD	imagerel ensureFilesExist+77
	DD	imagerel $unwind$ensureFilesExist
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$ensureFilesExist DD 021H
	DD	imagerel ensureFilesExist+77
	DD	imagerel ensureFilesExist+106
	DD	imagerel $chain$0$ensureFilesExist
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$ensureFilesExist DD 040d21H
	DD	0cc40dH
	DD	0143408H
	DD	imagerel ensureFilesExist+77
	DD	imagerel ensureFilesExist+106
	DD	imagerel $chain$0$ensureFilesExist
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$ensureFilesExist DD 020821H
	DD	0155408H
	DD	imagerel ensureFilesExist
	DD	imagerel ensureFilesExist+77
	DD	imagerel $unwind$ensureFilesExist
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ensureFilesExist DD 051a19H
	DD	0f007c20bH
	DD	07003e005H
	DD	06002H
	DD	imagerel __GSHandlerCheck
	DD	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$EnumThreadWndProc DD 051f19H
	DD	04f340dH
	DD	04c010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0250H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$hiddenConsoleW DD 032319H
	DD	01e0111H
	DD	0300aH
	DD	imagerel __GSHandlerCheck
	DD	0e0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$tinyfd_inputBoxW DD 060021H
	DD	0cf400H
	DD	0dd400H
	DD	017c400H
	DD	imagerel $LN220
	DD	imagerel $LN220+303
	DD	imagerel $unwind$tinyfd_inputBoxW
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$tinyfd_inputBoxW DD 021H
	DD	imagerel $LN220
	DD	imagerel $LN220+303
	DD	imagerel $unwind$tinyfd_inputBoxW
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$tinyfd_inputBoxW DD 061421H
	DD	0cf414H
	DD	0dd40fH
	DD	017c408H
	DD	imagerel $LN220
	DD	imagerel $LN220+303
	DD	imagerel $unwind$tinyfd_inputBoxW
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$tinyfd_inputBoxW DD 061a19H
	DD	0e007d20bH
	DD	060047005H
	DD	030025003H
	DD	imagerel __GSHandlerCheck
	DD	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$tinyfd_openFileDialogW DD 0a3319H
	DD	0b210122H
	DD	0e00bf00dH
	DD	0c007d009H
	DD	060047005H
	DD	050023003H
	DD	imagerel __GSHandlerCheck
	DD	058f0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BrowseCallbackProcW_enum DD 031b19H
	DD	0460109H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0220H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BrowseCallbackProcW DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$inputBoxWinGui DD 072019H
	DD	0126010eH
	DD	07005e007H
	DD	050036004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0920H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$openFileDialogWinGui DD 0a2619H
	DD	014d0114H
	DD	0e00bf00dH
	DD	0c007d009H
	DD	060047005H
	DD	030025003H
	DD	imagerel __GSHandlerCheck
	DD	0a50H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$dialogPresent DD 020021H
	DD	0863400H
	DD	imagerel dialogPresent
	DD	imagerel dialogPresent+66
	DD	imagerel $unwind$dialogPresent
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$dialogPresent DD 020821H
	DD	0863408H
	DD	imagerel dialogPresent
	DD	imagerel dialogPresent+66
	DD	imagerel $unwind$dialogPresent
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$dialogPresent DD 021919H
	DD	0870107H
	DD	imagerel __GSHandlerCheck
	DD	0420H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$inputBoxWinConsole DD 072719H
	DD	010c0116H
	DD	07005e007H
	DD	030036004H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	0850H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$openFileDialogWinConsole DD 072b19H
	DD	010a741aH
	DD	0109341aH
	DD	0106011aH
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0820H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$writeUtf8 DD 041919H
	DD	0b340aH
	DD	07006720aH
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$tinyfd_inputBox DD 093119H
	DD	022a0120H
	DD	0e009f00bH
	DD	07005c007H
	DD	030036004H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	01140H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$tinyfd_openFileDialog DD 092419H
	DD	0880112H
	DD	0e009f00bH
	DD	07005c007H
	DD	050036004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0430H
?lDialogPresent@?1??dialogPresent@@9@9 DD 0ffffffffH	; `dialogPresent'::`2'::lDialogPresent
gTitle	DB	'missing software! (we will try basic console input)', 00H
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_wstdio.h
;	COMDAT _vswprintf_c_l
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_Locale$dead$ = 88
_ArgList$ = 96
_vswprintf_c_l PROC					; COMDAT

; 1155 :     {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r8
	mov	rdi, rdx
	mov	rsi, rcx

; 1156 :         int const _Result = __stdio_common_vswprintf(

	call	__local_stdio_printf_options
	mov	r9, QWORD PTR _ArgList$[rsp]
	mov	r8, rdi
	mov	QWORD PTR [rsp+40], r9
	mov	rdx, rsi
	mov	r9, rbx
	mov	QWORD PTR [rsp+32], 0
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vswprintf

; 1157 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1158 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1159 : 
; 1160 :         return _Result < 0 ? -1 : _Result;
; 1161 :     }

	mov	rbx, QWORD PTR [rsp+64]
	mov	ecx, -1
	mov	rsi, QWORD PTR [rsp+72]
	test	eax, eax
	cmovs	eax, ecx
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vswprintf_c_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_wstdio.h
;	COMDAT swprintf
_TEXT	SEGMENT
_Buffer$ = 96
_BufferCount$ = 104
_Format$ = 112
swprintf PROC						; COMDAT

; 1465 :     {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	rsi, r8

; 1466 :         int _Result;
; 1467 :         va_list _ArgList;
; 1468 :         __crt_va_start(_ArgList, _Format);

	lea	rbp, QWORD PTR _Format$[rsp+8]
	mov	rdi, rdx
	mov	rbx, rcx

; 1156 :         int const _Result = __stdio_common_vswprintf(

	call	__local_stdio_printf_options
	mov	QWORD PTR [rsp+40], rbp
	mov	r9, rsi
	mov	r8, rdi
	mov	QWORD PTR [rsp+32], 0
	mov	rdx, rbx
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vswprintf

; 1157 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1158 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1159 : 
; 1160 :         return _Result < 0 ? -1 : _Result;

	test	eax, eax
	mov	ecx, -1
	cmovs	eax, ecx

; 1469 :         _Result = _vswprintf_c_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1470 :         __crt_va_end(_ArgList);
; 1471 :         return _Result;
; 1472 :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
swprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h
;	COMDAT stat
_TEXT	SEGMENT
_FileName$ = 8
_Stat$ = 16
stat	PROC						; COMDAT

; 240  :             _STATIC_ASSERT(sizeof(struct stat) == sizeof(struct _stat64i32));
; 241  :             return _stat64i32(_FileName, (struct _stat64i32*)_Stat);

	rex_jmp	QWORD PTR __imp__stat64i32
stat	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT getenvDISPLAY
_TEXT	SEGMENT
getenvDISPLAY PROC					; COMDAT

; 192  : {

	sub	rsp, 40					; 00000028H

; 193  : 		return tinyfd_assumeGraphicDisplay || getenv("DISPLAY");

	cmp	DWORD PTR tinyfd_assumeGraphicDisplay, 0
	jne	SHORT $LN3@getenvDISP
	lea	rcx, OFFSET FLAT:??_C@_07JPHDIPNG@DISPLAY@
	call	QWORD PTR __imp_getenv
	test	rax, rax
	jne	SHORT $LN3@getenvDISP

; 194  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@getenvDISP:

; 193  : 		return tinyfd_assumeGraphicDisplay || getenv("DISPLAY");

	mov	eax, 1

; 194  : }

	add	rsp, 40					; 00000028H
	ret	0
getenvDISPLAY ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT getCurDir
_TEXT	SEGMENT
getCurDir PROC						; COMDAT

; 199  : 		static char lCurDir[MAX_PATH_OR_CMD];
; 200  : 		return getcwd(lCurDir, sizeof(lCurDir));

	mov	edx, 1024				; 00000400H
	lea	rcx, OFFSET FLAT:?lCurDir@?1??getCurDir@@9@9
	rex_jmp	QWORD PTR __imp_getcwd
getCurDir ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT wipefile
_TEXT	SEGMENT
st$ = 32
__$ArrayPad$ = 80
aFilename$ = 112
wipefile PROC						; COMDAT

; 391  : {

	push	rbx
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h

; 241  :             return _stat64i32(_FileName, (struct _stat64i32*)_Stat);

	lea	rdx, QWORD PTR st$[rsp]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c

; 391  : {

	mov	rbx, rcx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h

; 241  :             return _stat64i32(_FileName, (struct _stat64i32*)_Stat);

	call	QWORD PTR __imp__stat64i32
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c

; 396  : 		if (stat(aFilename, &st) == 0)

	test	eax, eax
	jne	SHORT $LN6@wipefile

; 397  : 		{
; 398  : 				if ((lIn = fopen(aFilename, "w")))

	lea	rdx, OFFSET FLAT:??_C@_01NOFIACDB@w@
	mov	QWORD PTR [rsp+120], rdi
	mov	rcx, rbx
	call	QWORD PTR __imp_fopen
	mov	rdi, rax
	test	rax, rax
	je	SHORT $LN17@wipefile

; 399  : 				{
; 400  : 						for (i = 0; i < st.st_size; i++)

	xor	ebx, ebx
	cmp	DWORD PTR st$[rsp+20], ebx
	jle	SHORT $LN3@wipefile
	npad	4
$LL4@wipefile:

; 401  : 						{
; 402  : 								fputc('A', lIn);

	mov	rdx, rdi
	mov	ecx, 65					; 00000041H
	call	QWORD PTR __imp_fputc
	inc	ebx
	cmp	ebx, DWORD PTR st$[rsp+20]
	jl	SHORT $LL4@wipefile
$LN3@wipefile:

; 403  : 						}
; 404  : 						fclose(lIn);

	mov	rcx, rdi
	call	QWORD PTR __imp_fclose
$LN17@wipefile:
	mov	rdi, QWORD PTR [rsp+120]
$LN6@wipefile:

; 405  : 				}
; 406  : 		}
; 407  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 96					; 00000060H
	pop	rbx
	ret	0
wipefile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT tfd_quoteDetected
_TEXT	SEGMENT
aString$ = 48
tfd_quoteDetected PROC					; COMDAT

; 411  : {

$LN28:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 412  : 	char const * p;
; 413  : 
; 414  : 	if (!aString) return 0;

	test	rcx, rcx
	je	SHORT $LN3@tfd_quoteD

; 415  : 
; 416  : 	p = aString;
; 417  : 	if ( strchr(p, '\''))

	mov	edx, 39					; 00000027H
	call	QWORD PTR __imp_strchr
	test	rax, rax
	jne	SHORT $LN12@tfd_quoteD

; 418  : 	{
; 419  : 		return 1;
; 420  : 	}
; 421  : 
; 422  : 	if ( strchr(p, '\"'))

	lea	edx, QWORD PTR [rax+34]
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	test	rax, rax
	jne	SHORT $LN12@tfd_quoteD

; 423  : 	{
; 424  : 		return 1;
; 425  : 	}
; 426  : 
; 427  : 	if ( strchr(p, '`'))

	lea	edx, QWORD PTR [rax+96]
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	test	rax, rax
	jne	SHORT $LN12@tfd_quoteD

; 428  : 	{
; 429  : 		return 1;
; 430  : 	}
; 431  : 
; 432  : 	p = aString;
; 433  : 	while ((p = strchr(p, '$')))

	lea	edx, QWORD PTR [rax+36]
	mov	rcx, rbx
	call	QWORD PTR __imp_strchr
	mov	rbx, rax
	test	rax, rax
	je	SHORT $LN3@tfd_quoteD
$LL2@tfd_quoteD:

; 434  : 	{
; 435  : 		p ++ ;
; 436  : 		if ( ( * p == '(' ) || ( * p == '_' ) || isalpha( * p) ) return 1 ;

	movsx	eax, BYTE PTR [rbx+1]
	cmp	al, 40					; 00000028H
	je	SHORT $LN12@tfd_quoteD
	cmp	al, 95					; 0000005fH
	je	SHORT $LN12@tfd_quoteD
	mov	ecx, eax
	call	QWORD PTR __imp_isalpha
	test	eax, eax
	jne	SHORT $LN12@tfd_quoteD

; 428  : 	{
; 429  : 		return 1;
; 430  : 	}
; 431  : 
; 432  : 	p = aString;
; 433  : 	while ((p = strchr(p, '$')))

	lea	edx, QWORD PTR [rax+36]
	lea	rcx, QWORD PTR [rbx+1]
	call	QWORD PTR __imp_strchr
	mov	rbx, rax
	test	rax, rax
	jne	SHORT $LL2@tfd_quoteD
$LN3@tfd_quoteD:

; 437  : 	}
; 438  : 
; 439  : 	return 0;

	xor	eax, eax

; 440  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN12@tfd_quoteD:

; 434  : 	{
; 435  : 		p ++ ;
; 436  : 		if ( ( * p == '(' ) || ( * p == '_' ) || isalpha( * p) ) return 1 ;

	mov	eax, 1

; 440  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
tfd_quoteDetected ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT replaceChr
_TEXT	SEGMENT
aString$ = 48
aOldChr$ = 56
aNewChr$ = 64
replaceChr PROC						; COMDAT

; 547  : 		char * p;
; 548  : 
; 549  : 		if (!aString) return;

	test	rcx, rcx
	je	SHORT $LN15@replaceChr
	push	rbx
	sub	rsp, 32					; 00000020H

; 546  : {

	movzx	ebx, r8b

; 550  : 		if (aOldChr == aNewChr) return;

	cmp	dl, bl
	je	SHORT $LN3@replaceChr
	mov	QWORD PTR [rsp+48], rdi

; 551  : 
; 552  : 		p = aString;
; 553  : 		while ((p = strchr(p, aOldChr)))

	movsx	edi, dl
	mov	edx, edi
	call	QWORD PTR __imp_strchr
	test	rax, rax
	je	SHORT $LN14@replaceChr
	npad	9
$LL2@replaceChr:

; 554  : 		{
; 555  : 				*p = aNewChr;
; 556  : 				p++;

	lea	rcx, QWORD PTR [rax+1]
	mov	BYTE PTR [rax], bl
	mov	edx, edi
	call	QWORD PTR __imp_strchr
	test	rax, rax
	jne	SHORT $LL2@replaceChr
$LN14@replaceChr:
	mov	rdi, QWORD PTR [rsp+48]
$LN3@replaceChr:

; 557  : 		}
; 558  : 		return;
; 559  : }

	add	rsp, 32					; 00000020H
	pop	rbx
$LN15@replaceChr:
	ret	0
replaceChr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT sizeUtf16From8
_TEXT	SEGMENT
aUtf8string$ = 64
sizeUtf16From8 PROC					; COMDAT

; 568  : {

	sub	rsp, 56					; 00000038H

; 569  : 		return MultiByteToWideChar(CP_UTF8, MB_ERR_INVALID_CHARS,

	xor	eax, eax
	mov	r8, rcx
	mov	DWORD PTR [rsp+40], eax
	mov	ecx, 65001				; 0000fde9H
	mov	QWORD PTR [rsp+32], rax
	lea	r9d, QWORD PTR [rax-1]
	lea	edx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_MultiByteToWideChar

; 570  : 				aUtf8string, -1, NULL, 0);
; 571  : }

	add	rsp, 56					; 00000038H
	ret	0
sizeUtf16From8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT sizeUtf16FromMbcs
_TEXT	SEGMENT
aMbcsString$ = 64
sizeUtf16FromMbcs PROC					; COMDAT

; 575  : {

	sub	rsp, 56					; 00000038H

; 576  : 		return MultiByteToWideChar(CP_ACP, MB_ERR_INVALID_CHARS,

	xor	eax, eax
	mov	r8, rcx
	mov	DWORD PTR [rsp+40], eax
	xor	ecx, ecx
	mov	QWORD PTR [rsp+32], rax
	lea	r9d, QWORD PTR [rax-1]
	lea	edx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_MultiByteToWideChar

; 577  : 				aMbcsString, -1, NULL, 0);
; 578  : }

	add	rsp, 56					; 00000038H
	ret	0
sizeUtf16FromMbcs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT sizeUtf8
_TEXT	SEGMENT
aUtf16string$ = 80
sizeUtf8 PROC						; COMDAT

; 582  : {

	sub	rsp, 72					; 00000048H

; 583  : 		return WideCharToMultiByte(CP_UTF8, WC_ERR_INVALID_CHARS,

	xor	eax, eax
	mov	r8, rcx
	mov	QWORD PTR [rsp+56], rax
	xor	edx, edx
	mov	QWORD PTR [rsp+48], rax
	mov	ecx, 65001				; 0000fde9H
	mov	DWORD PTR [rsp+40], eax
	lea	r9d, QWORD PTR [rax-1]
	mov	QWORD PTR [rsp+32], rax
	call	QWORD PTR __imp_WideCharToMultiByte

; 584  : 				aUtf16string, -1, NULL, 0, NULL, NULL);
; 585  : }

	add	rsp, 72					; 00000048H
	ret	0
sizeUtf8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT sizeMbcs
_TEXT	SEGMENT
aMbcsString$ = 80
sizeMbcs PROC						; COMDAT

; 589  : {

	sub	rsp, 72					; 00000048H

; 590  : 		int lRes = WideCharToMultiByte(CP_ACP, 0,

	xor	eax, eax
	mov	r8, rcx
	mov	QWORD PTR [rsp+56], rax
	xor	edx, edx
	mov	QWORD PTR [rsp+48], rax
	xor	ecx, ecx
	mov	DWORD PTR [rsp+40], eax
	lea	r9d, QWORD PTR [rax-1]
	mov	QWORD PTR [rsp+32], rax
	call	QWORD PTR __imp_WideCharToMultiByte

; 591  : 				aMbcsString, -1, NULL, 0, NULL, NULL);
; 592  : 		/* DWORD licic = GetLastError(); */
; 593  : 		return lRes;
; 594  : }

	add	rsp, 72					; 00000048H
	ret	0
sizeMbcs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT tinyfd_mbcsTo16
_TEXT	SEGMENT
aMbcsString$ = 64
tinyfd_mbcsTo16 PROC					; COMDAT

; 598  : {

$LN11:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rcx

; 599  : 	static wchar_t* lMbcsString = NULL;
; 600  : 	int lSize;
; 601  : 
; 602  : 	free(lMbcsString);

	mov	rcx, QWORD PTR ?lMbcsString@?1??tinyfd_mbcsTo16@@9@9
	call	QWORD PTR __imp_free

; 603  : 	if (!aMbcsString) { lMbcsString = NULL; return NULL; }

	xor	ebx, ebx
	test	rdi, rdi
	jne	SHORT $LN2@tinyfd_mbc
	mov	QWORD PTR ?lMbcsString@?1??tinyfd_mbcsTo16@@9@9, rbx
	xor	eax, eax

; 612  : }

	mov	rbx, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN2@tinyfd_mbc:
	mov	QWORD PTR [rsp+64], rbp

; 576  : 		return MultiByteToWideChar(CP_ACP, MB_ERR_INVALID_CHARS,

	mov	r8, rdi
	mov	rbp, -1
	mov	DWORD PTR [rsp+40], ebx
	mov	r9d, ebp
	mov	QWORD PTR [rsp+72], rsi
	xor	ecx, ecx
	mov	QWORD PTR [rsp+32], rbx
	lea	edx, QWORD PTR [rbp+9]
	call	QWORD PTR __imp_MultiByteToWideChar
	movsxd	rsi, eax

; 604  : 	lSize = sizeUtf16FromMbcs(aMbcsString);
; 605  : 	if (lSize)

	test	eax, eax
	je	SHORT $LN3@tinyfd_mbc

; 606  : 	{
; 607  : 		lMbcsString = (wchar_t*)malloc(lSize * sizeof(wchar_t));

	mov	eax, 2
	mul	rsi
	cmovo	rax, rbp
	mov	rcx, rax
	call	QWORD PTR __imp_malloc

; 608  : 		lSize = MultiByteToWideChar(CP_ACP, 0, aMbcsString, -1, lMbcsString, lSize);

	mov	r9d, ebp
	mov	DWORD PTR [rsp+40], esi
	mov	r8, rdi
	mov	QWORD PTR ?lMbcsString@?1??tinyfd_mbcsTo16@@9@9, rax
	xor	edx, edx
	mov	QWORD PTR [rsp+32], rax
	xor	ecx, ecx
	call	QWORD PTR __imp_MultiByteToWideChar

; 609  : 	}

	mov	rax, QWORD PTR ?lMbcsString@?1??tinyfd_mbcsTo16@@9@9
	jmp	SHORT $LN4@tinyfd_mbc
$LN3@tinyfd_mbc:

; 610  : 	else wcscpy(lMbcsString, L"");

	mov	rax, QWORD PTR ?lMbcsString@?1??tinyfd_mbcsTo16@@9@9
	mov	WORD PTR [rax], bx
$LN4@tinyfd_mbc:

; 611  : 	return lMbcsString;

	mov	rsi, QWORD PTR [rsp+72]
	mov	rbp, QWORD PTR [rsp+64]

; 612  : }

	mov	rbx, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
tinyfd_mbcsTo16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT tinyfd_utf8to16
_TEXT	SEGMENT
aUtf8string$ = 64
tinyfd_utf8to16 PROC					; COMDAT

; 616  : {

$LN13:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rcx

; 617  : 		static wchar_t * lUtf16string = NULL;
; 618  : 		int lSize;
; 619  : 
; 620  : 		free(lUtf16string);

	mov	rcx, QWORD PTR ?lUtf16string@?1??tinyfd_utf8to16@@9@9
	call	QWORD PTR __imp_free

; 621  : 		if (!aUtf8string) {lUtf16string = NULL; return NULL;}

	test	rdi, rdi
	jne	SHORT $LN2@tinyfd_utf
	mov	QWORD PTR ?lUtf16string@?1??tinyfd_utf8to16@@9@9, rdi
	xor	eax, eax

; 635  : 	}
; 636  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN2@tinyfd_utf:
	mov	QWORD PTR [rsp+64], rbp

; 569  : 		return MultiByteToWideChar(CP_UTF8, MB_ERR_INVALID_CHARS,

	mov	r8, rdi
	mov	rbp, -1
	mov	DWORD PTR [rsp+40], 0
	mov	r9d, ebp
	mov	QWORD PTR [rsp+72], rsi
	mov	ecx, 65001				; 0000fde9H
	mov	QWORD PTR [rsp+32], 0
	lea	edx, QWORD PTR [rbp+9]
	call	QWORD PTR __imp_MultiByteToWideChar
	movsxd	rsi, eax

; 622  : 		lSize = sizeUtf16From8(aUtf8string);
; 623  : 	if (lSize)

	test	eax, eax
	je	SHORT $LN3@tinyfd_utf

; 624  : 	{
; 625  : 		lUtf16string = (wchar_t*)malloc(lSize * sizeof(wchar_t));

	mov	eax, 2
	mul	rsi
	cmovo	rax, rbp
	mov	rcx, rax
	call	QWORD PTR __imp_malloc

; 626  : 		lSize = MultiByteToWideChar(CP_UTF8, MB_ERR_INVALID_CHARS,

	mov	r9d, ebp
	mov	DWORD PTR [rsp+40], esi
	mov	r8, rdi
	mov	QWORD PTR ?lUtf16string@?1??tinyfd_utf8to16@@9@9, rax
	lea	edx, QWORD PTR [rbp+9]
	mov	QWORD PTR [rsp+32], rax
	mov	ecx, 65001				; 0000fde9H
	call	QWORD PTR __imp_MultiByteToWideChar

; 627  : 			aUtf8string, -1, lUtf16string, lSize);
; 628  : 		return lUtf16string;

	mov	rax, QWORD PTR ?lUtf16string@?1??tinyfd_utf8to16@@9@9
	mov	rbp, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]

; 635  : 	}
; 636  : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN3@tinyfd_utf:

; 629  : 	}
; 630  : 	else
; 631  : 	{
; 632  : 		/* let's try mbcs anyway */
; 633  : 		lUtf16string = NULL;
; 634  : 		return tinyfd_mbcsTo16(aUtf8string);

	mov	rcx, rdi
	mov	QWORD PTR ?lUtf16string@?1??tinyfd_utf8to16@@9@9, 0
	mov	rbp, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]

; 635  : 	}
; 636  : }

	add	rsp, 48					; 00000030H
	pop	rdi

; 629  : 	}
; 630  : 	else
; 631  : 	{
; 632  : 		/* let's try mbcs anyway */
; 633  : 		lUtf16string = NULL;
; 634  : 		return tinyfd_mbcsTo16(aUtf8string);

	jmp	tinyfd_mbcsTo16
tinyfd_utf8to16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT tinyfd_utf16toMbcs
_TEXT	SEGMENT
aUtf16string$ = 80
tinyfd_utf16toMbcs PROC					; COMDAT

; 640  : {

$LN11:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rcx

; 641  : 		static char * lMbcsString = NULL;
; 642  : 		int lSize;
; 643  : 
; 644  : 		free(lMbcsString);

	mov	rcx, QWORD PTR ?lMbcsString@?1??tinyfd_utf16toMbcs@@9@9
	call	QWORD PTR __imp_free

; 645  : 		if (!aUtf16string) { lMbcsString = NULL; return NULL; }

	xor	ebx, ebx
	test	rdi, rdi
	jne	SHORT $LN2@tinyfd_utf
	mov	QWORD PTR ?lMbcsString@?1??tinyfd_utf16toMbcs@@9@9, rbx
	xor	eax, eax

; 654  : }

	mov	rbx, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
$LN2@tinyfd_utf:

; 590  : 		int lRes = WideCharToMultiByte(CP_ACP, 0,

	mov	QWORD PTR [rsp+56], rbx
	mov	r9d, -1
	mov	QWORD PTR [rsp+48], rbx
	mov	r8, rdi
	mov	DWORD PTR [rsp+40], ebx
	xor	edx, edx
	xor	ecx, ecx
	mov	QWORD PTR [rsp+32], rbx
	mov	QWORD PTR [rsp+80], rsi
	call	QWORD PTR __imp_WideCharToMultiByte
	movsxd	rsi, eax

; 646  : 		lSize = sizeMbcs(aUtf16string);
; 647  : 	if (lSize)

	test	eax, eax
	je	SHORT $LN3@tinyfd_utf

; 648  : 	{
; 649  : 		lMbcsString = (char*)malloc(lSize);

	mov	rcx, rsi
	call	QWORD PTR __imp_malloc

; 650  : 		lSize = WideCharToMultiByte(CP_ACP, 0, aUtf16string, -1, lMbcsString, lSize, NULL, NULL);

	mov	QWORD PTR [rsp+56], rbx
	mov	r9d, -1
	mov	QWORD PTR [rsp+48], rbx
	mov	r8, rdi
	mov	DWORD PTR [rsp+40], esi
	xor	edx, edx
	xor	ecx, ecx
	mov	QWORD PTR [rsp+32], rax
	mov	QWORD PTR ?lMbcsString@?1??tinyfd_utf16toMbcs@@9@9, rax
	call	QWORD PTR __imp_WideCharToMultiByte

; 651  : 	}

	mov	rax, QWORD PTR ?lMbcsString@?1??tinyfd_utf16toMbcs@@9@9

; 653  : 		return lMbcsString;

	mov	rsi, QWORD PTR [rsp+80]

; 654  : }

	mov	rbx, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
$LN3@tinyfd_utf:

; 652  : 	else strcpy(lMbcsString, "");

	mov	rax, QWORD PTR ?lMbcsString@?1??tinyfd_utf16toMbcs@@9@9

; 653  : 		return lMbcsString;

	mov	rsi, QWORD PTR [rsp+80]
	mov	BYTE PTR [rax], bl

; 654  : }

	mov	rbx, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
tinyfd_utf16toMbcs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT tinyfd_utf16to8
_TEXT	SEGMENT
aUtf16string$ = 80
tinyfd_utf16to8 PROC					; COMDAT

; 666  : {

$LN11:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rcx

; 667  : 		static char * lUtf8string = NULL;
; 668  : 		int lSize;
; 669  : 
; 670  : 		free(lUtf8string);

	mov	rcx, QWORD PTR ?lUtf8string@?1??tinyfd_utf16to8@@9@9
	call	QWORD PTR __imp_free

; 671  : 		if (!aUtf16string) { lUtf8string = NULL; return NULL; }

	xor	ebx, ebx
	test	rdi, rdi
	jne	SHORT $LN2@tinyfd_utf
	mov	QWORD PTR ?lUtf8string@?1??tinyfd_utf16to8@@9@9, rbx
	xor	eax, eax

; 680  : }

	mov	rbx, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
$LN2@tinyfd_utf:

; 583  : 		return WideCharToMultiByte(CP_UTF8, WC_ERR_INVALID_CHARS,

	mov	QWORD PTR [rsp+56], rbx
	mov	r9d, -1
	mov	QWORD PTR [rsp+48], rbx
	mov	r8, rdi
	mov	DWORD PTR [rsp+40], ebx
	xor	edx, edx
	mov	ecx, 65001				; 0000fde9H
	mov	QWORD PTR [rsp+32], rbx
	mov	QWORD PTR [rsp+80], rsi
	call	QWORD PTR __imp_WideCharToMultiByte
	movsxd	rsi, eax

; 672  : 		lSize = sizeUtf8(aUtf16string);
; 673  : 	if (lSize)

	test	eax, eax
	je	SHORT $LN3@tinyfd_utf

; 674  : 	{
; 675  : 		lUtf8string = (char*)malloc(lSize);

	mov	rcx, rsi
	call	QWORD PTR __imp_malloc

; 676  : 		lSize = WideCharToMultiByte(CP_UTF8, WC_ERR_INVALID_CHARS, aUtf16string, -1, lUtf8string, lSize, NULL, NULL);

	mov	QWORD PTR [rsp+56], rbx
	mov	r9d, -1
	mov	QWORD PTR [rsp+48], rbx
	mov	r8, rdi
	mov	DWORD PTR [rsp+40], esi
	xor	edx, edx
	mov	ecx, 65001				; 0000fde9H
	mov	QWORD PTR [rsp+32], rax
	mov	QWORD PTR ?lUtf8string@?1??tinyfd_utf16to8@@9@9, rax
	call	QWORD PTR __imp_WideCharToMultiByte

; 677  : 	}

	mov	rax, QWORD PTR ?lUtf8string@?1??tinyfd_utf16to8@@9@9

; 679  : 		return lUtf8string;

	mov	rsi, QWORD PTR [rsp+80]

; 680  : }

	mov	rbx, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
$LN3@tinyfd_utf:

; 678  : 	else strcpy(lUtf8string, "");

	mov	rax, QWORD PTR ?lUtf8string@?1??tinyfd_utf16to8@@9@9

; 679  : 		return lUtf8string;

	mov	rsi, QWORD PTR [rsp+80]
	mov	BYTE PTR [rax], bl

; 680  : }

	mov	rbx, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
tinyfd_utf16to8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT wipefileW
_TEXT	SEGMENT
st$ = 32
__$ArrayPad$ = 88
aFilename$ = 112
wipefileW PROC						; COMDAT

; 699  : {

	push	rbx
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 700  : 		int i;
; 701  : 		FILE * lIn;
; 702  : #if defined(__MINGW32_MAJOR_VERSION) && !defined(__MINGW64__) && (__MINGW32_MAJOR_VERSION <= 3)
; 703  : 		struct _stat st;
; 704  : 		if (_wstat(aFilename, &st) == 0)
; 705  : #else
; 706  : 		struct __stat64 st;
; 707  : 		if (_wstat64(aFilename, &st) == 0)

	lea	rdx, QWORD PTR st$[rsp]
	mov	rbx, rcx
	call	QWORD PTR __imp__wstat64
	test	eax, eax
	jne	SHORT $LN6@wipefileW

; 708  : #endif
; 709  : 		{
; 710  : 				if ((lIn = _wfopen(aFilename, L"w")))

	lea	rdx, OFFSET FLAT:??_C@_13CIFDLIMG@?$AAw@
	mov	QWORD PTR [rsp+120], rdi
	mov	rcx, rbx
	call	QWORD PTR __imp__wfopen
	mov	rdi, rax
	test	rax, rax
	je	SHORT $LN15@wipefileW

; 711  : 				{
; 712  : 						for (i = 0; i < st.st_size; i++)

	xor	ebx, ebx
	cmp	QWORD PTR st$[rsp+24], rbx
	jle	SHORT $LN3@wipefileW
	npad	3
$LL4@wipefileW:

; 713  : 						{
; 714  : 								fputc('A', lIn);

	mov	rdx, rdi
	mov	ecx, 65					; 00000041H
	call	QWORD PTR __imp_fputc
	inc	ebx
	movsxd	rax, ebx
	cmp	rax, QWORD PTR st$[rsp+24]
	jl	SHORT $LL4@wipefileW
$LN3@wipefileW:

; 715  : 						}
; 716  : 						fclose(lIn);

	mov	rcx, rdi
	call	QWORD PTR __imp_fclose
$LN15@wipefileW:
	mov	rdi, QWORD PTR [rsp+120]
$LN6@wipefileW:

; 717  : 				}
; 718  : 		}
; 719  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 96					; 00000060H
	pop	rbx
	ret	0
wipefileW ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT getPathWithoutFinalSlashW
_TEXT	SEGMENT
aoDestination$ = 48
aSource$ = 56
getPathWithoutFinalSlashW PROC				; COMDAT

; 725  : {

	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx
	mov	rbx, rcx

; 726  : 		wchar_t const * lTmp;
; 727  : 		if (aSource)

	test	rdx, rdx
	je	SHORT $LN2@getPathWit

; 728  : 		{
; 729  : 				lTmp = wcsrchr(aSource, L'/');

	mov	edx, 47					; 0000002fH
	mov	QWORD PTR [rsp+48], rdi
	mov	rcx, rsi
	call	QWORD PTR __imp_wcsrchr
	mov	rdi, rax

; 730  : 				if (!lTmp)

	test	rax, rax
	jne	SHORT $LN8@getPathWit

; 731  : 				{
; 732  : 						lTmp = wcsrchr(aSource, L'\\');

	lea	edx, QWORD PTR [rax+92]
	mov	rcx, rsi
	call	QWORD PTR __imp_wcsrchr
	mov	rdi, rax

; 733  : 				}
; 734  : 				if (lTmp)

	test	rax, rax
	jne	SHORT $LN8@getPathWit

; 738  : 				}
; 739  : 				else
; 740  : 				{
; 741  : 						*aoDestination = L'\0';

	mov	rdi, QWORD PTR [rsp+48]
	mov	WORD PTR [rbx], ax

; 747  : 		}
; 748  : 		return aoDestination;
; 749  : }

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN8@getPathWit:

; 735  : 				{
; 736  : 						wcsncpy(aoDestination, aSource, lTmp - aSource);

	sub	rdi, rsi
	mov	rdx, rsi
	sar	rdi, 1
	mov	rcx, rbx
	mov	r8, rdi
	call	QWORD PTR __imp_wcsncpy

; 737  : 						aoDestination[lTmp - aSource] = L'\0';

	xor	eax, eax
	mov	WORD PTR [rbx+rdi*2], ax

; 747  : 		}
; 748  : 		return aoDestination;
; 749  : }

	mov	rax, rbx
	mov	rdi, QWORD PTR [rsp+48]
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN2@getPathWit:

; 742  : 				}
; 743  : 		}
; 744  : 		else
; 745  : 		{
; 746  : 				*aoDestination = L'\0';

	xor	eax, eax
	mov	WORD PTR [rcx], ax

; 747  : 		}
; 748  : 		return aoDestination;
; 749  : }

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
getPathWithoutFinalSlashW ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT getLastNameW
_TEXT	SEGMENT
aoDestination$dead$ = 48
aSource$ = 56
getLastNameW PROC					; COMDAT

; 755  : {

	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, QWORD PTR ?lBuff@?1??tinyfd_openFileDialogW@@9@9
	mov	rbx, rdx

; 756  : 		/* copy the last name after '/' or '\' */
; 757  : 		wchar_t const * lTmp;
; 758  : 		if (aSource)

	test	rdx, rdx
	je	$LN2@getLastNam

; 759  : 		{
; 760  : 				lTmp = wcsrchr(aSource, L'/');

	mov	edx, 47					; 0000002fH
	mov	rcx, rbx
	call	QWORD PTR __imp_wcsrchr

; 761  : 				if (!lTmp)

	test	rax, rax
	jne	SHORT $LN16@getLastNam

; 762  : 				{
; 763  : 						lTmp = wcsrchr(aSource, L'\\');

	lea	edx, QWORD PTR [rax+92]
	mov	rcx, rbx
	call	QWORD PTR __imp_wcsrchr

; 764  : 				}
; 765  : 				if (lTmp)

	test	rax, rax
	jne	SHORT $LN16@getLastNam

; 768  : 				}
; 769  : 				else
; 770  : 				{
; 771  : 						wcscpy(aoDestination, aSource);

	mov	rdx, rdi
	sub	rdx, rbx
	npad	9
$LL9@getLastNam:
	movzx	ecx, WORD PTR [rbx]
	mov	WORD PTR [rdx+rbx], cx
	lea	rbx, QWORD PTR [rbx+2]
	test	cx, cx
	jne	SHORT $LL9@getLastNam

; 772  : 				}
; 773  : 		}
; 774  : 		else
; 775  : 		{
; 776  : 				*aoDestination = L'\0';
; 777  : 		}
; 778  : 		return aoDestination;
; 779  : }

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN16@getLastNam:

; 766  : 				{
; 767  : 						wcscpy(aoDestination, lTmp + 1);

	lea	rcx, QWORD PTR [rax+2]
	mov	rdx, rdi
	sub	rdx, rcx
	npad	8
$LL8@getLastNam:
	movzx	eax, WORD PTR [rcx]
	mov	WORD PTR [rdx+rcx], ax
	lea	rcx, QWORD PTR [rcx+2]
	test	ax, ax
	jne	SHORT $LL8@getLastNam

; 772  : 				}
; 773  : 		}
; 774  : 		else
; 775  : 		{
; 776  : 				*aoDestination = L'\0';
; 777  : 		}
; 778  : 		return aoDestination;
; 779  : }

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@getLastNam:
	mov	rbx, QWORD PTR [rsp+48]
	xor	eax, eax
	mov	WORD PTR [rdi], ax
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
getLastNameW ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT fileExists
_TEXT	SEGMENT
lInfo$ = 32
__$ArrayPad$ = 88
aFilePathAndName$ = 112
fileExists PROC						; COMDAT

; 885  : {

	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 886  : #if defined(__MINGW32_MAJOR_VERSION) && !defined(__MINGW64__) && (__MINGW32_MAJOR_VERSION <= 3)
; 887  : 	struct _stat lInfo;
; 888  : #else
; 889  : 	struct __stat64 lInfo;
; 890  : #endif
; 891  : 		wchar_t * lTmpWChar;
; 892  : 		int lStatRet;
; 893  : 		FILE * lIn;
; 894  : 
; 895  : 		if (!aFilePathAndName || !strlen(aFilePathAndName))

	test	rcx, rcx
	je	SHORT $LN3@fileExists
	mov	rax, -1
	npad	1
$LL13@fileExists:
	inc	rax
	cmp	BYTE PTR [rcx+rax], 0
	jne	SHORT $LL13@fileExists
	test	rax, rax
	je	SHORT $LN3@fileExists

; 898  : 		}
; 899  : 
; 900  : 		if (tinyfd_winUtf8)
; 901  : 		{
; 902  : 						lTmpWChar = tinyfd_utf8to16(aFilePathAndName);

	call	tinyfd_utf8to16

; 903  : #if defined(__MINGW32_MAJOR_VERSION) && !defined(__MINGW64__) && (__MINGW32_MAJOR_VERSION <= 3)
; 904  : 			lStatRet = _wstat(lTmpWChar, &lInfo);
; 905  : #else
; 906  : 			lStatRet = _wstat64(lTmpWChar, &lInfo);

	lea	rdx, QWORD PTR lInfo$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp__wstat64

; 907  : #endif
; 908  : 
; 909  : 			if (lStatRet != 0)

	test	eax, eax
	jne	SHORT $LN3@fileExists

; 910  : 					return 0;
; 911  : 			else if (lInfo.st_mode & _S_IFREG)

	mov	eax, 32768				; 00008000H
	test	WORD PTR lInfo$[rsp+6], ax
	je	SHORT $LN3@fileExists

; 912  : 					return 1;

	mov	eax, 1

; 913  : 			else
; 914  : 					return 0;
; 915  : 		}
; 916  : 		else
; 917  : 		{
; 918  : 				lIn = fopen(aFilePathAndName, "r");
; 919  : 				if (!lIn)
; 920  : 				{
; 921  : 						return 0;
; 922  : 				}
; 923  : 				fclose(lIn);
; 924  : 				return 1;
; 925  : 		}
; 926  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	ret	0
$LN3@fileExists:

; 896  : 		{
; 897  : 				return 0;

	xor	eax, eax

; 913  : 			else
; 914  : 					return 0;
; 915  : 		}
; 916  : 		else
; 917  : 		{
; 918  : 				lIn = fopen(aFilePathAndName, "r");
; 919  : 				if (!lIn)
; 920  : 				{
; 921  : 						return 0;
; 922  : 				}
; 923  : 				fclose(lIn);
; 924  : 				return 1;
; 925  : 		}
; 926  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	ret	0
fileExists ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT replaceWchar
_TEXT	SEGMENT
aString$dead$ = 48
aOldChr$dead$ = 56
aNewChr$dead$ = 64
replaceWchar PROC					; COMDAT

; 931  : {

	sub	rsp, 40					; 00000028H

; 932  : 		wchar_t * p;
; 933  : 
; 934  : 		if (!aString)
; 935  : 		{
; 936  : 				return ;
; 937  : 		}
; 938  : 
; 939  : 		if (aOldChr == aNewChr)
; 940  : 		{
; 941  : 				return ;
; 942  : 		}
; 943  : 
; 944  : 		p = aString;
; 945  : 		while ((p = wcsrchr(p, aOldChr)))

	mov	edx, 10
	lea	rcx, OFFSET FLAT:?lBuff@?1??tinyfd_inputBoxW@@9@9
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	je	SHORT $LN3@replaceWch
	mov	QWORD PTR [rsp+32], rbx
$LL2@replaceWch:
	mov	edx, 10

; 946  : 		{
; 947  : 				*p = aNewChr;

	mov	WORD PTR [rax], 32			; 00000020H

; 948  : #ifdef TINYFD_NOCCSUNICODE
; 949  : 				p++;
; 950  : #endif
; 951  : 				p++;

	lea	rcx, QWORD PTR [rax+4]
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	jne	SHORT $LL2@replaceWch

; 932  : 		wchar_t * p;
; 933  : 
; 934  : 		if (!aString)
; 935  : 		{
; 936  : 				return ;
; 937  : 		}
; 938  : 
; 939  : 		if (aOldChr == aNewChr)
; 940  : 		{
; 941  : 				return ;
; 942  : 		}
; 943  : 
; 944  : 		p = aString;
; 945  : 		while ((p = wcsrchr(p, aOldChr)))

	mov	rbx, QWORD PTR [rsp+32]
$LN3@replaceWch:

; 952  : 		}
; 953  : 		return ;
; 954  : }

	add	rsp, 40					; 00000028H
	ret	0
replaceWchar ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT quoteDetectedW
_TEXT	SEGMENT
aString$ = 48
quoteDetectedW PROC					; COMDAT

; 958  : {

	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 959  : 		wchar_t const * p;
; 960  : 
; 961  : 		if (!aString) return 0;

	test	rcx, rcx
	je	SHORT $LN5@quoteDetec

; 962  : 
; 963  : 		p = aString;
; 964  : 		while ((p = wcsrchr(p, L'\'')))

	mov	edx, 39					; 00000027H
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	jne	SHORT $LN8@quoteDetec

; 965  : 		{
; 966  : 				return 1;
; 967  : 		}
; 968  : 
; 969  : 		p = aString;
; 970  : 		while ((p = wcsrchr(p, L'\"')))

	lea	edx, QWORD PTR [rax+34]
	mov	rcx, rbx
	call	QWORD PTR __imp_wcsrchr
	xor	ecx, ecx
	test	rax, rax
	setne	cl
	mov	eax, ecx

; 976  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN8@quoteDetec:

; 971  : 		{
; 972  : 				return 1;

	mov	eax, 1

; 976  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN5@quoteDetec:

; 973  : 		}
; 974  : 
; 975  : 		return 0;

	xor	eax, eax

; 976  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
quoteDetectedW ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT ensureFilesExist
_TEXT	SEGMENT
lInfo$1 = 32
__$ArrayPad$ = 88
aDestination$ = 144
aSourcePathsAndNames$ = 152
ensureFilesExist PROC					; COMDAT

; 983  : {

	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rsi, rdx
	mov	r15, rcx

; 984  : 		char * lDestination = aDestination;

	mov	rdi, rcx

; 985  : 		char const * p;
; 986  : 		char const * p2;
; 987  : 		size_t lLen;
; 988  : 
; 989  : 		if (!aSourcePathsAndNames)

	test	rdx, rdx
	je	$LN26@ensureFile

; 990  : 		{
; 991  : 				return NULL;
; 992  : 		}
; 993  : 		lLen = strlen(aSourcePathsAndNames);

	mov	r14, -1
	mov	rax, r14
$LL30@ensureFile:
	inc	rax
	cmp	BYTE PTR [rdx+rax], 0
	jne	SHORT $LL30@ensureFile

; 994  : 		if (!lLen)

	test	rax, rax
	je	$LN26@ensureFile

; 997  : 		}
; 998  : 
; 999  : 		p = aSourcePathsAndNames;
; 1000 : 		while ((p2 = strchr(p, '|')) != NULL)

	mov	edx, 124				; 0000007cH
	mov	QWORD PTR [rsp+168], rbp
	mov	rcx, rsi
	call	QWORD PTR __imp_strchr
	mov	rbp, rax
	test	rax, rax
	je	$LN3@ensureFile
	mov	QWORD PTR [rsp+160], rbx
	mov	QWORD PTR [rsp+96], r12
	mov	r12d, 32768				; 00008000H
	npad	3
$LL2@ensureFile:

; 1001 : 		{
; 1002 : 				lLen = p2 - p;

	mov	rbx, rbp

; 1003 : 				memmove(lDestination, p, lLen);

	mov	rdx, rsi
	sub	rbx, rsi
	mov	rcx, rdi
	mov	r8, rbx
	call	memmove

; 1004 : 				lDestination[lLen] = '\0';

	mov	BYTE PTR [rbx+rdi], 0

; 895  : 		if (!aFilePathAndName || !strlen(aFilePathAndName))

	test	rdi, rdi
	je	SHORT $LN6@ensureFile
	mov	rax, r14
$LL29@ensureFile:
	inc	rax
	cmp	BYTE PTR [rdi+rax], 0
	jne	SHORT $LL29@ensureFile
	test	rax, rax
	je	SHORT $LN6@ensureFile

; 896  : 		{
; 897  : 				return 0;
; 898  : 		}
; 899  : 
; 900  : 		if (tinyfd_winUtf8)
; 901  : 		{
; 902  : 						lTmpWChar = tinyfd_utf8to16(aFilePathAndName);

	mov	rcx, rdi
	call	tinyfd_utf8to16

; 903  : #if defined(__MINGW32_MAJOR_VERSION) && !defined(__MINGW64__) && (__MINGW32_MAJOR_VERSION <= 3)
; 904  : 			lStatRet = _wstat(lTmpWChar, &lInfo);
; 905  : #else
; 906  : 			lStatRet = _wstat64(lTmpWChar, &lInfo);

	lea	rdx, QWORD PTR lInfo$1[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp__wstat64

; 907  : #endif
; 908  : 
; 909  : 			if (lStatRet != 0)

	test	eax, eax
	jne	SHORT $LN6@ensureFile

; 910  : 					return 0;
; 911  : 			else if (lInfo.st_mode & _S_IFREG)

	test	WORD PTR lInfo$1[rsp+6], r12w
	je	SHORT $LN6@ensureFile

; 1005 : 				if (fileExists(lDestination))
; 1006 : 				{
; 1007 : 						lDestination += lLen;
; 1008 : 						*lDestination = '|';
; 1009 : 						lDestination++;

	mov	BYTE PTR [rbx+rdi], 124			; 0000007cH
	inc	rdi
	add	rdi, rbx
$LN6@ensureFile:

; 1010 : 				}
; 1011 : 				p = p2 + 1;

	lea	rsi, QWORD PTR [rbp+1]
	mov	edx, 124				; 0000007cH
	mov	rcx, rsi
	call	QWORD PTR __imp_strchr
	mov	rbp, rax
	test	rax, rax
	jne	SHORT $LL2@ensureFile

; 997  : 		}
; 998  : 
; 999  : 		p = aSourcePathsAndNames;
; 1000 : 		while ((p2 = strchr(p, '|')) != NULL)

	mov	r12, QWORD PTR [rsp+96]
	mov	rbx, QWORD PTR [rsp+160]
$LN3@ensureFile:

; 1012 : 		}
; 1013 : 		if (fileExists(p))

	mov	rcx, rsi
	call	fileExists
	mov	rbp, QWORD PTR [rsp+168]
	test	eax, eax
	je	SHORT $LN7@ensureFile
$LL28@ensureFile:

; 1014 : 		{
; 1015 : 				lLen = strlen(p);

	inc	r14
	cmp	BYTE PTR [rsi+r14], 0
	jne	SHORT $LL28@ensureFile

; 1016 : 				memmove(lDestination, p, lLen);

	mov	r8, r14
	mov	rdx, rsi
	mov	rcx, rdi
	call	memmove

; 1022 : 		}
; 1023 : 		return aDestination;

	mov	rax, r15
	mov	BYTE PTR [r14+rdi], 0
	jmp	SHORT $LN1@ensureFile
$LN7@ensureFile:

; 1017 : 				lDestination[lLen] = '\0';
; 1018 : 		}
; 1019 : 		else
; 1020 : 		{
; 1021 : 				*(lDestination - 1) = '\0';

	mov	BYTE PTR [rdi-1], 0

; 1022 : 		}
; 1023 : 		return aDestination;

	mov	rax, r15
	jmp	SHORT $LN1@ensureFile
$LN26@ensureFile:

; 995  : 		{
; 996  : 				return NULL;

	xor	eax, eax
$LN1@ensureFile:

; 1024 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
ensureFilesExist ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT EnumThreadWndProc
_TEXT	SEGMENT
lTitleName$ = 64
__$ArrayPad$ = 592
hwnd$ = 624
lParam$ = 632
EnumThreadWndProc PROC					; COMDAT

; 1029 : {

	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 608				; 00000260H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rdx

; 1030 : 		wchar_t lTitleName[MAX_PATH];
; 1031 : 		wchar_t const* lDialogTitle = (wchar_t const *) lParam;
; 1032 : 
; 1033 : 		GetWindowTextW(hwnd, lTitleName, MAX_PATH);

	mov	r8d, 260				; 00000104H
	lea	rdx, QWORD PTR lTitleName$[rsp]
	mov	rdi, rcx
	call	QWORD PTR __imp_GetWindowTextW

; 1034 : 		/* wprintf(L"lTitleName %ls \n", lTitleName);  */
; 1035 : 
; 1036 : 		if (wcscmp(lDialogTitle, lTitleName) == 0)

	lea	r8, QWORD PTR lTitleName$[rsp]
	sub	r8, rbx
	npad	2
$LL4@EnumThread:
	movzx	edx, WORD PTR [rbx]
	movzx	eax, WORD PTR [rbx+r8]
	sub	edx, eax
	jne	SHORT $LN5@EnumThread
	add	rbx, 2
	test	eax, eax
	jne	SHORT $LL4@EnumThread
$LN5@EnumThread:
	test	edx, edx
	jne	SHORT $LN2@EnumThread

; 1037 : 		{
; 1038 : 				SetWindowPos(hwnd, HWND_TOPMOST, 0, 0, 0, 0, SWP_NOMOVE | SWP_NOSIZE);

	xor	eax, eax
	mov	DWORD PTR [rsp+48], 3
	mov	DWORD PTR [rsp+40], eax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	DWORD PTR [rsp+32], eax
	mov	rcx, rdi
	lea	rdx, QWORD PTR [rax-1]
	call	QWORD PTR __imp_SetWindowPos

; 1039 : 				return 0;

	xor	eax, eax
	jmp	SHORT $LN1@EnumThread
$LN2@EnumThread:

; 1040 : 		}
; 1041 : 		return 1;

	mov	eax, 1
$LN1@EnumThread:

; 1042 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+632]
	add	rsp, 608				; 00000260H
	pop	rdi
	ret	0
EnumThreadWndProc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT hiddenConsoleW
_TEXT	SEGMENT
ProcessInfo$ = 80
StartupInfo$ = 112
__$ArrayPad$ = 224
aString$ = 256
aDialogTitle$ = 264
aInFront$dead$ = 272
hiddenConsoleW PROC					; COMDAT

; 1047 : 		STARTUPINFOW StartupInfo;
; 1048 : 		PROCESS_INFORMATION ProcessInfo;
; 1049 : 
; 1050 : 		if (!aString || !wcslen(aString) ) return;

	test	rcx, rcx
	je	$LN18@hiddenCons
	push	rbx
	sub	rsp, 240				; 000000f0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 1046 : {

	mov	rbx, rdx

; 1047 : 		STARTUPINFOW StartupInfo;
; 1048 : 		PROCESS_INFORMATION ProcessInfo;
; 1049 : 
; 1050 : 		if (!aString || !wcslen(aString) ) return;

	mov	rax, -1
	npad	3
$LL12@hiddenCons:
	inc	rax
	cmp	WORD PTR [rcx+rax*2], 0
	jne	SHORT $LL12@hiddenCons
	test	rax, rax
	je	$LN5@hiddenCons

; 1051 : 
; 1052 : 		memset(&StartupInfo, 0, sizeof(StartupInfo));
; 1053 : 		StartupInfo.cb = sizeof(STARTUPINFOW);
; 1054 : 		StartupInfo.dwFlags = STARTF_USESHOWWINDOW;
; 1055 : 		StartupInfo.wShowWindow = SW_HIDE;

	xorps	xmm0, xmm0
	xor	edx, edx
	xor	eax, eax

; 1056 : 
; 1057 : 		if (!CreateProcessW(NULL, (LPWSTR)aString, NULL, NULL, FALSE,

	xor	r9d, r9d
	mov	QWORD PTR StartupInfo$[rsp+96], rax
	xor	r8d, r8d
	lea	rax, QWORD PTR ProcessInfo$[rsp]
	mov	QWORD PTR [rsp+72], rax
	lea	rax, QWORD PTR StartupInfo$[rsp]
	mov	QWORD PTR [rsp+64], rax
	mov	QWORD PTR [rsp+56], rdx
	mov	QWORD PTR [rsp+48], rdx
	movups	XMMWORD PTR StartupInfo$[rsp+64], xmm0
	mov	WORD PTR StartupInfo$[rsp+64], dx
	movups	XMMWORD PTR StartupInfo$[rsp], xmm0
	mov	DWORD PTR [rsp+40], 16
	mov	DWORD PTR [rsp+32], edx
	mov	rdx, rcx
	movups	XMMWORD PTR StartupInfo$[rsp+48], xmm0
	xor	ecx, ecx
	mov	DWORD PTR StartupInfo$[rsp], 104	; 00000068H
	movups	XMMWORD PTR StartupInfo$[rsp+16], xmm0
	mov	DWORD PTR StartupInfo$[rsp+60], 1
	movups	XMMWORD PTR StartupInfo$[rsp+32], xmm0
	movups	XMMWORD PTR StartupInfo$[rsp+80], xmm0
	call	QWORD PTR __imp_CreateProcessW
	test	eax, eax
	je	SHORT $LN5@hiddenCons

; 1058 : 								CREATE_NEW_CONSOLE, NULL, NULL,
; 1059 : 								&StartupInfo, &ProcessInfo))
; 1060 : 		{
; 1061 : 				return; /* GetLastError(); */
; 1062 : 		}
; 1063 : 
; 1064 : 		WaitForInputIdle(ProcessInfo.hProcess, INFINITE);

	mov	rcx, QWORD PTR ProcessInfo$[rsp]
	mov	edx, -1					; ffffffffH
	call	QWORD PTR __imp_WaitForInputIdle
	npad	7
$LL2@hiddenCons:

; 1065 : 		if (aInFront)
; 1066 : 		{
; 1067 : 				while (EnumWindows(EnumThreadWndProc, (LPARAM)aDialogTitle)) {}

	mov	rdx, rbx
	lea	rcx, OFFSET FLAT:EnumThreadWndProc
	call	QWORD PTR __imp_EnumWindows
	test	eax, eax
	jne	SHORT $LL2@hiddenCons

; 1068 : 		}
; 1069 : 		WaitForSingleObject(ProcessInfo.hProcess, INFINITE);

	mov	rcx, QWORD PTR ProcessInfo$[rsp]
	mov	edx, -1					; ffffffffH
	call	QWORD PTR __imp_WaitForSingleObject

; 1070 : 		CloseHandle(ProcessInfo.hThread);

	mov	rcx, QWORD PTR ProcessInfo$[rsp+8]
	call	QWORD PTR __imp_CloseHandle

; 1071 : 		CloseHandle(ProcessInfo.hProcess);

	mov	rcx, QWORD PTR ProcessInfo$[rsp]
	call	QWORD PTR __imp_CloseHandle
$LN5@hiddenCons:

; 1072 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 240				; 000000f0H
	pop	rbx
$LN18@hiddenCons:
	ret	0
hiddenConsoleW ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT tinyfd_inputBoxW
_TEXT	SEGMENT
st$1 = 32
__$ArrayPad$ = 88
aTitle$ = 160
aMessage$ = 168
aDefaultInput$ = 176
tinyfd_inputBoxW PROC					; COMDAT

; 1240 : {

$LN220:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 112				; 00000070H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbp, r8
	lea	rsi, OFFSET FLAT:??_C@_1BK@LMOENJBN@?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA_?$AAq?$AAu?$AAe?$AAr?$AAy@
	mov	rbx, rdx
	mov	rdi, rcx
	mov	r14, -1
$LL61@tinyfd_inp:

; 1241 : 		static wchar_t lBuff[MAX_PATH_OR_CMD];
; 1242 : 		wchar_t * lDialogString;
; 1243 : 		FILE * lIn;
; 1244 : 		FILE * lFile;
; 1245 : 		int lResult;
; 1246 : 		size_t lTitleLen;
; 1247 : 		size_t lMessageLen;
; 1248 : 		size_t lDialogStringLen;
; 1249 : 
; 1250 : 		if (aTitle&&!wcscmp(aTitle, L"tinyfd_query")){ strcpy(tinyfd_response, "windows_wchar"); return (wchar_t *)1; }

	test	rdi, rdi
	je	SHORT $LN3@tinyfd_inp
	mov	rax, r14
	npad	7
$LL114@tinyfd_inp:
	movzx	ecx, WORD PTR [rdi+rax*2+2]
	cmp	cx, WORD PTR [rsi+rax*2+2]
	jne	SHORT $LN116@tinyfd_inp
	add	rax, 2
	cmp	rax, 13
	je	$LN117@tinyfd_inp
	movzx	ecx, WORD PTR [rdi+rax*2]
	cmp	cx, WORD PTR [rsi+rax*2]
	je	SHORT $LL114@tinyfd_inp
$LN116@tinyfd_inp:

; 964  : 		while ((p = wcsrchr(p, L'\'')))

	mov	edx, 39					; 00000027H
	mov	rcx, rdi
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	jne	SHORT $LN80@tinyfd_inp

; 965  : 		{
; 966  : 				return 1;
; 967  : 		}
; 968  : 
; 969  : 		p = aString;
; 970  : 		while ((p = wcsrchr(p, L'\"')))

	lea	edx, QWORD PTR [rax+34]
	mov	rcx, rdi
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	je	SHORT $LN3@tinyfd_inp
$LN80@tinyfd_inp:

; 1251 : 
; 1252 : 		if (quoteDetectedW(aTitle)) return tinyfd_inputBoxW(L"INVALID TITLE WITH QUOTES", aMessage, aDefaultInput);

	lea	rdi, OFFSET FLAT:??_C@_1DE@PEGLJLHK@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAT?$AAI?$AAT?$AAL?$AAE?$AA?5?$AAW@
	jmp	SHORT $LL61@tinyfd_inp
$LN3@tinyfd_inp:

; 961  : 		if (!aString) return 0;

	test	rbx, rbx
	je	SHORT $LN4@tinyfd_inp

; 962  : 
; 963  : 		p = aString;
; 964  : 		while ((p = wcsrchr(p, L'\'')))

	mov	edx, 39					; 00000027H
	mov	rcx, rbx
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	jne	SHORT $LN79@tinyfd_inp

; 965  : 		{
; 966  : 				return 1;
; 967  : 		}
; 968  : 
; 969  : 		p = aString;
; 970  : 		while ((p = wcsrchr(p, L'\"')))

	lea	edx, QWORD PTR [rax+34]
	mov	rcx, rbx
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	je	SHORT $LN4@tinyfd_inp
$LN79@tinyfd_inp:

; 1253 : 		if (quoteDetectedW(aMessage)) return tinyfd_inputBoxW(aTitle, L"INVALID MESSAGE WITH QUOTES", aDefaultInput);

	lea	rbx, OFFSET FLAT:??_C@_1DI@LBIIBMBN@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAM?$AAE?$AAS?$AAS?$AAA?$AAG?$AAE@
	jmp	$LL61@tinyfd_inp
$LN4@tinyfd_inp:

; 961  : 		if (!aString) return 0;

	test	rbp, rbp
	je	SHORT $LN81@tinyfd_inp

; 962  : 
; 963  : 		p = aString;
; 964  : 		while ((p = wcsrchr(p, L'\'')))

	mov	edx, 39					; 00000027H
	mov	rcx, rbp
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	jne	SHORT $LN78@tinyfd_inp

; 965  : 		{
; 966  : 				return 1;
; 967  : 		}
; 968  : 
; 969  : 		p = aString;
; 970  : 		while ((p = wcsrchr(p, L'\"')))

	lea	edx, QWORD PTR [rax+34]
	mov	rcx, rbp
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	je	SHORT $LN81@tinyfd_inp
$LN78@tinyfd_inp:

; 1254 : 		if (quoteDetectedW(aDefaultInput)) return tinyfd_inputBoxW(aTitle, aMessage, L"INVALID DEFAULT_INPUT WITH QUOTES: use the GRAVE ACCENT \\x60 instead.");

	lea	rbp, OFFSET FLAT:??_C@_1IM@DFLOMCNH@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT@
	jmp	$LL61@tinyfd_inp
$LN117@tinyfd_inp:

; 1241 : 		static wchar_t lBuff[MAX_PATH_OR_CMD];
; 1242 : 		wchar_t * lDialogString;
; 1243 : 		FILE * lIn;
; 1244 : 		FILE * lFile;
; 1245 : 		int lResult;
; 1246 : 		size_t lTitleLen;
; 1247 : 		size_t lMessageLen;
; 1248 : 		size_t lDialogStringLen;
; 1249 : 
; 1250 : 		if (aTitle&&!wcscmp(aTitle, L"tinyfd_query")){ strcpy(tinyfd_response, "windows_wchar"); return (wchar_t *)1; }

	mov	eax, DWORD PTR ??_C@_0O@CILJLOAA@windows_wchar@+8
	movsd	xmm0, QWORD PTR ??_C@_0O@CILJLOAA@windows_wchar@
	mov	DWORD PTR tinyfd_response+8, eax
	movzx	eax, WORD PTR ??_C@_0O@CILJLOAA@windows_wchar@+12
	mov	WORD PTR tinyfd_response+12, ax
	mov	eax, 1
	movsd	QWORD PTR tinyfd_response, xmm0
	jmp	$LN1@tinyfd_inp
$LN81@tinyfd_inp:
	mov	QWORD PTR [rsp+184], r12

; 1255 : 
; 1256 : 		lTitleLen =  aTitle ? wcslen(aTitle) : 0 ;

	xor	ecx, ecx
	mov	QWORD PTR [rsp+104], r13
	mov	QWORD PTR [rsp+96], r15
	test	rdi, rdi
	je	SHORT $LN23@tinyfd_inp
	mov	rax, r14
	npad	5
$LL112@tinyfd_inp:
	inc	rax
	cmp	WORD PTR [rdi+rax*2], cx
	jne	SHORT $LL112@tinyfd_inp
	jmp	SHORT $LN24@tinyfd_inp
$LN23@tinyfd_inp:
	mov	rax, rcx
$LN24@tinyfd_inp:

; 1257 : 		lMessageLen =  aMessage ? wcslen(aMessage) : 0 ;

	test	rbx, rbx
	je	SHORT $LN25@tinyfd_inp
	mov	rcx, r14
$LL111@tinyfd_inp:
	inc	rcx
	cmp	WORD PTR [rbx+rcx*2], 0
	jne	SHORT $LL111@tinyfd_inp
$LN25@tinyfd_inp:

; 1258 : 		lDialogStringLen = 3 * MAX_PATH_OR_CMD + lTitleLen + lMessageLen;

	lea	r12, QWORD PTR [rcx+3072]
	add	r12, rax

; 1259 : 		lDialogString = (wchar_t *)malloc(2 * lDialogStringLen);

	mov	eax, 2
	mul	r12
	cmovo	rax, r14
	mov	rcx, rax
	call	QWORD PTR __imp_malloc

; 1260 : 
; 1261 : 		if (aDefaultInput)

	lea	r13, OFFSET FLAT:??_C@_1BO@LGFMODGM@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAv?$AAb?$AAs@
	mov	rsi, rax
	lea	rcx, OFFSET FLAT:??_C@_19LFDMGLCC@?$AAT?$AAE?$AAM?$AAP@

; 1262 : 		{
; 1263 : 						swprintf(lDialogString,

	mov	r15, r13
	test	rbp, rbp
	jne	SHORT $LN215@tinyfd_inp

; 1264 : #if !defined(__BORLANDC__) && !defined(__TINYC__) && !(defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR))
; 1265 : 				lDialogStringLen,
; 1266 : #endif
; 1267 : 				L"%ls\\tinyfd.vbs", _wgetenv(L"TEMP"));
; 1268 : 		}
; 1269 : 		else
; 1270 : 		{
; 1271 : 				swprintf(lDialogString,

	lea	r15, OFFSET FLAT:??_C@_1BO@PAPCLOOH@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAh?$AAt?$AAa@
$LN215@tinyfd_inp:

; 1272 : #if !defined(__BORLANDC__) && !defined(__TINYC__) && !(defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR))
; 1273 : 						lDialogStringLen,
; 1274 : #endif
; 1275 : 				L"%ls\\tinyfd.hta", _wgetenv(L"TEMP"));
; 1276 : 		}
; 1277 : 		lIn = _wfopen(lDialogString, L"w");

	call	QWORD PTR __imp__wgetenv
	mov	r8, r15
	mov	rdx, r12
	mov	r9, rax
	mov	rcx, rsi
	call	swprintf
	lea	rdx, OFFSET FLAT:??_C@_13CIFDLIMG@?$AAw@
	mov	rcx, rsi
	call	QWORD PTR __imp__wfopen
	mov	r15, rax

; 1278 : 		if (!lIn)

	test	rax, rax
	je	$LN218@tinyfd_inp

; 1279 : 		{
; 1280 : 				free(lDialogString);
; 1281 : 				return NULL;
; 1282 : 		}
; 1283 : 
; 1284 : 		if ( aDefaultInput )

	test	rbp, rbp
	je	$LN9@tinyfd_inp

; 1285 : 		{
; 1286 : 				wcscpy(lDialogString, L"Dim result:result=InputBox(\"");

	movups	xmm0, XMMWORD PTR ??_C@_1DK@JMHKFOGA@?$AAD?$AAi?$AAm?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?3?$AAr?$AAe?$AAs?$AAu@
	movups	XMMWORD PTR [rsi], xmm0
	movups	xmm1, XMMWORD PTR ??_C@_1DK@JMHKFOGA@?$AAD?$AAi?$AAm?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?3?$AAr?$AAe?$AAs?$AAu@+16
	movups	XMMWORD PTR [rsi+16], xmm1
	movups	xmm0, XMMWORD PTR ??_C@_1DK@JMHKFOGA@?$AAD?$AAi?$AAm?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?3?$AAr?$AAe?$AAs?$AAu@+32
	movups	XMMWORD PTR [rsi+32], xmm0
	movsd	xmm0, QWORD PTR ??_C@_1DK@JMHKFOGA@?$AAD?$AAi?$AAm?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?3?$AAr?$AAe?$AAs?$AAu@+48
	movsd	QWORD PTR [rsi+48], xmm0
	movzx	eax, WORD PTR ??_C@_1DK@JMHKFOGA@?$AAD?$AAi?$AAm?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAl?$AAt?$AA?3?$AAr?$AAe?$AAs?$AAu@+56
	mov	WORD PTR [rsi+56], ax

; 1287 : 				if (aMessage && wcslen(aMessage))

	test	rbx, rbx
	je	SHORT $LN154@tinyfd_inp
	mov	rax, r14
	npad	5
$LL110@tinyfd_inp:
	inc	rax
	cmp	WORD PTR [rbx+rax*2], 0
	jne	SHORT $LL110@tinyfd_inp
	test	rax, rax
	je	SHORT $LN154@tinyfd_inp

; 1288 : 				{
; 1289 : 										wcscpy(lBuff, aMessage);

	lea	rcx, OFFSET FLAT:?lBuff@?1??tinyfd_inputBoxW@@9@9
	sub	rcx, rbx
	npad	7
$LL27@tinyfd_inp:
	movzx	eax, WORD PTR [rbx]
	mov	WORD PTR [rcx+rbx], ax
	lea	rbx, QWORD PTR [rbx+2]
	test	ax, ax
	jne	SHORT $LL27@tinyfd_inp

; 1290 : 										replaceWchar(lBuff, L'\n', L' ');

	call	replaceWchar

; 1291 : 										wcscat(lDialogString, lBuff);

	lea	rcx, QWORD PTR [rsi-2]
	npad	7
$LL108@tinyfd_inp:
	cmp	WORD PTR [rcx+2], 0
	lea	rcx, QWORD PTR [rcx+2]
	jne	SHORT $LL108@tinyfd_inp
	xor	edx, edx
	lea	rbx, OFFSET FLAT:?lBuff@?1??tinyfd_inputBoxW@@9@9
	npad	12
$LL109@tinyfd_inp:
	movzx	eax, WORD PTR [rbx+rdx*2]
	mov	WORD PTR [rcx+rdx*2], ax
	lea	rdx, QWORD PTR [rdx+1]
	test	ax, ax
	jne	SHORT $LL109@tinyfd_inp

; 1287 : 				if (aMessage && wcslen(aMessage))

	jmp	SHORT $LN11@tinyfd_inp
$LN154@tinyfd_inp:

; 1292 : 				}
; 1293 : 				wcscat(lDialogString, L"\",\"");

	lea	rbx, OFFSET FLAT:?lBuff@?1??tinyfd_inputBoxW@@9@9
$LN11@tinyfd_inp:
	lea	rax, QWORD PTR [rsi-2]
	npad	2
$LL107@tinyfd_inp:
	cmp	WORD PTR [rax+2], 0
	lea	rax, QWORD PTR [rax+2]
	jne	SHORT $LL107@tinyfd_inp
	movsd	xmm0, QWORD PTR ??_C@_17FLNLOHEF@?$AA?$CC?$AA?0?$AA?$CC@
	movsd	QWORD PTR [rax], xmm0

; 1294 : 				if (aTitle) wcscat(lDialogString, aTitle);

	test	rdi, rdi
	je	SHORT $LN12@tinyfd_inp
	lea	rcx, QWORD PTR [rsi-2]
$LL105@tinyfd_inp:
	cmp	WORD PTR [rcx+2], 0
	lea	rcx, QWORD PTR [rcx+2]
	jne	SHORT $LL105@tinyfd_inp
	xor	edx, edx
	npad	3
$LL106@tinyfd_inp:
	movzx	eax, WORD PTR [rdi+rdx*2]
	mov	WORD PTR [rcx+rdx*2], ax
	lea	rdx, QWORD PTR [rdx+1]
	test	ax, ax
	jne	SHORT $LL106@tinyfd_inp
$LN12@tinyfd_inp:

; 1295 : 				wcscat(lDialogString, L"\",\"");

	lea	rax, QWORD PTR [rsi-2]
$LL104@tinyfd_inp:
	cmp	WORD PTR [rax+2], 0
	lea	rax, QWORD PTR [rax+2]
	jne	SHORT $LL104@tinyfd_inp
	movsd	xmm0, QWORD PTR ??_C@_17FLNLOHEF@?$AA?$CC?$AA?0?$AA?$CC@
	movsd	QWORD PTR [rax], xmm0

; 1296 : 
; 1297 : 				if (aDefaultInput && wcslen(aDefaultInput))

	mov	rax, r14
	npad	1
$LL103@tinyfd_inp:
	inc	rax
	cmp	WORD PTR [rbp+rax*2], 0
	jne	SHORT $LL103@tinyfd_inp
	test	rax, rax
	je	SHORT $LN13@tinyfd_inp

; 1298 : 				{
; 1299 : 										wcscpy(lBuff, aDefaultInput);

	mov	rdx, rbx
	mov	rcx, rbp
	sub	rdx, rbp
	npad	7
$LL28@tinyfd_inp:
	movzx	eax, WORD PTR [rcx]
	mov	WORD PTR [rdx+rcx], ax
	lea	rcx, QWORD PTR [rcx+2]
	test	ax, ax
	jne	SHORT $LL28@tinyfd_inp

; 1300 : 										replaceWchar(lBuff, L'\n', L' ');

	call	replaceWchar

; 1301 : 										wcscat(lDialogString, lBuff);

	lea	rcx, QWORD PTR [rsi-2]
	npad	7
$LL101@tinyfd_inp:
	cmp	WORD PTR [rcx+2], 0
	lea	rcx, QWORD PTR [rcx+2]
	jne	SHORT $LL101@tinyfd_inp
	xor	edx, edx
	npad	3
$LL102@tinyfd_inp:
	movzx	eax, WORD PTR [rbx+rdx*2]
	mov	WORD PTR [rcx+rdx*2], ax
	lea	rdx, QWORD PTR [rdx+1]
	test	ax, ax
	jne	SHORT $LL102@tinyfd_inp
$LN13@tinyfd_inp:

; 1302 : 				}
; 1303 : 				wcscat(lDialogString, L"\"):If IsEmpty(result) then:WScript.Echo 0");

	lea	rcx, QWORD PTR [rsi-2]
$LL100@tinyfd_inp:
	cmp	WORD PTR [rcx+2], 0
	lea	rcx, QWORD PTR [rcx+2]
	jne	SHORT $LL100@tinyfd_inp
	movaps	xmm0, XMMWORD PTR ??_C@_1FE@NOHEIFFG@?$AA?$CC?$AA?$CJ?$AA?3?$AAI?$AAf?$AA?5?$AAI?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AAr@
	movups	XMMWORD PTR [rcx], xmm0
	movaps	xmm1, XMMWORD PTR ??_C@_1FE@NOHEIFFG@?$AA?$CC?$AA?$CJ?$AA?3?$AAI?$AAf?$AA?5?$AAI?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AAr@+16
	movups	XMMWORD PTR [rcx+16], xmm1
	movaps	xmm0, XMMWORD PTR ??_C@_1FE@NOHEIFFG@?$AA?$CC?$AA?$CJ?$AA?3?$AAI?$AAf?$AA?5?$AAI?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AAr@+32
	movups	XMMWORD PTR [rcx+32], xmm0
	movaps	xmm1, XMMWORD PTR ??_C@_1FE@NOHEIFFG@?$AA?$CC?$AA?$CJ?$AA?3?$AAI?$AAf?$AA?5?$AAI?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AAr@+48
	movups	XMMWORD PTR [rcx+48], xmm1
	movaps	xmm0, XMMWORD PTR ??_C@_1FE@NOHEIFFG@?$AA?$CC?$AA?$CJ?$AA?3?$AAI?$AAf?$AA?5?$AAI?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AAr@+64
	movups	XMMWORD PTR [rcx+64], xmm0
	mov	eax, DWORD PTR ??_C@_1FE@NOHEIFFG@?$AA?$CC?$AA?$CJ?$AA?3?$AAI?$AAf?$AA?5?$AAI?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AAr@+80
	mov	DWORD PTR [rcx+80], eax

; 1304 : 				wcscat(lDialogString, L":Else: WScript.Echo \"1\" & result : End If");

	lea	rcx, QWORD PTR [rsi-2]
$LL99@tinyfd_inp:
	cmp	WORD PTR [rcx+2], 0
	lea	rcx, QWORD PTR [rcx+2]
	jne	SHORT $LL99@tinyfd_inp
	movaps	xmm0, XMMWORD PTR ??_C@_1FE@EJMANDNJ@?$AA?3?$AAE?$AAl?$AAs?$AAe?$AA?3?$AA?5?$AAW?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?4@
	mov	rdx, r15
	movups	XMMWORD PTR [rcx], xmm0
	movaps	xmm1, XMMWORD PTR ??_C@_1FE@EJMANDNJ@?$AA?3?$AAE?$AAl?$AAs?$AAe?$AA?3?$AA?5?$AAW?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?4@+16
	movups	XMMWORD PTR [rcx+16], xmm1
	movaps	xmm0, XMMWORD PTR ??_C@_1FE@EJMANDNJ@?$AA?3?$AAE?$AAl?$AAs?$AAe?$AA?3?$AA?5?$AAW?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?4@+32
	movups	XMMWORD PTR [rcx+32], xmm0
	movaps	xmm1, XMMWORD PTR ??_C@_1FE@EJMANDNJ@?$AA?3?$AAE?$AAl?$AAs?$AAe?$AA?3?$AA?5?$AAW?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?4@+48
	movups	XMMWORD PTR [rcx+48], xmm1
	movaps	xmm0, XMMWORD PTR ??_C@_1FE@EJMANDNJ@?$AA?3?$AAE?$AAl?$AAs?$AAe?$AA?3?$AA?5?$AAW?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?4@+64
	movups	XMMWORD PTR [rcx+64], xmm0
	mov	eax, DWORD PTR ??_C@_1FE@EJMANDNJ@?$AA?3?$AAE?$AAl?$AAs?$AAe?$AA?3?$AA?5?$AAW?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?4@+80
	mov	DWORD PTR [rcx+80], eax
	mov	rcx, rsi
	call	QWORD PTR __imp_fputws
	mov	rcx, r15
	call	QWORD PTR __imp_fclose

; 1392 : <tr>\n\
; 1393 : <td align = 'left' valign = 'top'>\n\
; 1394 : <input type = 'password' id = 'txt_input'\n\
; 1395 : name = 'txt_input' value = '' style = 'float:left;width:100%' ><BR>\n\
; 1396 : </td>\n\
; 1397 : </tr>\n\
; 1398 : </table>\n\
; 1399 : </body>\n\
; 1400 : </html>\n\
; 1401 : "               ) ;
; 1402 : 		}
; 1403 : 		fputws(lDialogString, lIn);
; 1404 : 		fclose(lIn);
; 1405 : 
; 1406 : 		if (aDefaultInput)
; 1407 : 		{
; 1408 : 				swprintf(lDialogString,

	lea	rcx, OFFSET FLAT:??_C@_19LFDMGLCC@?$AAT?$AAE?$AAM?$AAP@
	call	QWORD PTR __imp__wgetenv
	lea	r8, OFFSET FLAT:??_C@_1BO@MLODPNFF@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAt?$AAx?$AAt@
	mov	rdx, r12
	mov	r9, rax
	mov	rcx, rsi
	call	swprintf

; 1409 : #if !defined(__BORLANDC__) && !defined(__TINYC__) && !(defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR))
; 1410 : 						lDialogStringLen,
; 1411 : #endif
; 1412 : 						L"%ls\\tinyfd.txt",_wgetenv(L"TEMP"));
; 1413 : 
; 1414 : #ifdef TINYFD_NOCCSUNICODE
; 1415 : 								lFile = _wfopen(lDialogString, L"w");

	lea	rdx, OFFSET FLAT:??_C@_13CIFDLIMG@?$AAw@
	mov	rcx, rsi
	call	QWORD PTR __imp__wfopen

; 1416 : 								fputc(0xFF, lFile);

	mov	rdx, rax
	mov	ecx, 255				; 000000ffH
	mov	rbx, rax
	call	QWORD PTR __imp_fputc

; 1417 : 								fputc(0xFE, lFile);

	mov	rdx, rbx
	mov	ecx, 254				; 000000feH
	call	QWORD PTR __imp_fputc

; 1418 : #else
; 1419 : 								lFile = _wfopen(lDialogString, L"wt, ccs=UNICODE"); /*or ccs=UTF-16LE*/
; 1420 : #endif
; 1421 : 								fclose(lFile);

	mov	rcx, rbx
	call	QWORD PTR __imp_fclose

; 1422 : 
; 1423 : 				wcscpy(lDialogString, L"cmd.exe /c cscript.exe //U //Nologo ");

	movaps	xmm0, XMMWORD PTR ??_C@_1EK@KPCGEDK@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAc?$AAs?$AAc?$AAr@

; 1424 : 				wcscat(lDialogString, L"\"%TEMP%\\tinyfd.vbs\" ");

	lea	rcx, QWORD PTR [rsi-2]
	movups	XMMWORD PTR [rsi], xmm0
	movaps	xmm1, XMMWORD PTR ??_C@_1EK@KPCGEDK@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAc?$AAs?$AAc?$AAr@+16
	movups	XMMWORD PTR [rsi+16], xmm1
	movaps	xmm0, XMMWORD PTR ??_C@_1EK@KPCGEDK@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAc?$AAs?$AAc?$AAr@+32
	movups	XMMWORD PTR [rsi+32], xmm0
	movaps	xmm1, XMMWORD PTR ??_C@_1EK@KPCGEDK@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAc?$AAs?$AAc?$AAr@+48
	movups	XMMWORD PTR [rsi+48], xmm1
	movsd	xmm0, QWORD PTR ??_C@_1EK@KPCGEDK@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAc?$AAs?$AAc?$AAr@+64
	movsd	QWORD PTR [rsi+64], xmm0
	movzx	eax, WORD PTR ??_C@_1EK@KPCGEDK@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAc?$AAs?$AAc?$AAr@+72
	mov	WORD PTR [rsi+72], ax
$LL98@tinyfd_inp:
	cmp	WORD PTR [rcx+2], 0
	lea	rcx, QWORD PTR [rcx+2]
	jne	SHORT $LL98@tinyfd_inp
	movups	xmm0, XMMWORD PTR ??_C@_1CK@OOFEGHLB@?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4@
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR ??_C@_1CK@OOFEGHLB@?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4@+16
	movups	XMMWORD PTR [rcx+16], xmm1
	movsd	xmm0, QWORD PTR ??_C@_1CK@OOFEGHLB@?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4@+32
	movsd	QWORD PTR [rcx+32], xmm0
	movzx	eax, WORD PTR ??_C@_1CK@OOFEGHLB@?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4@+40
	mov	WORD PTR [rcx+40], ax

; 1425 : 				wcscat(lDialogString, L">> \"%TEMP%\\tinyfd.txt\"");

	lea	rcx, QWORD PTR [rsi-2]
	npad	1
$LL97@tinyfd_inp:
	cmp	WORD PTR [rcx+2], 0
	lea	rcx, QWORD PTR [rcx+2]
	jne	SHORT $LL97@tinyfd_inp
	movups	xmm0, XMMWORD PTR ??_C@_1CO@KJMPLJOJ@?$AA?$DO?$AA?$DO?$AA?5?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy@
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR ??_C@_1CO@KJMPLJOJ@?$AA?$DO?$AA?$DO?$AA?5?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy@+16
	movups	XMMWORD PTR [rcx+16], xmm1
	movsd	xmm0, QWORD PTR ??_C@_1CO@KJMPLJOJ@?$AA?$DO?$AA?$DO?$AA?5?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy@+32
	movsd	QWORD PTR [rcx+32], xmm0
	mov	eax, DWORD PTR ??_C@_1CO@KJMPLJOJ@?$AA?$DO?$AA?$DO?$AA?5?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy@+40
	mov	DWORD PTR [rcx+40], eax
	movzx	eax, WORD PTR ??_C@_1CO@KJMPLJOJ@?$AA?$DO?$AA?$DO?$AA?5?$AA?$CC?$AA?$CF?$AAT?$AAE?$AAM?$AAP?$AA?$CF?$AA?2?$AAt?$AAi?$AAn?$AAy@+44
	mov	WORD PTR [rcx+44], ax

; 1426 : 		}

	jmp	$LN16@tinyfd_inp
$LN9@tinyfd_inp:

; 1305 : 		}
; 1306 : 		else
; 1307 : 		{
; 1308 : 				wcscpy(lDialogString, L"\n\

	movups	xmm0, XMMWORD PTR ??_C@_1CO@HEGJNJHP@?$AA?6?$AA?$DM?$AAh?$AAt?$AAm?$AAl?$AA?$DO?$AA?6?$AA?$DM?$AAh?$AAe?$AAa?$AAd?$AA?$DO?$AA?6@
	movups	XMMWORD PTR [rsi], xmm0
	movups	xmm1, XMMWORD PTR ??_C@_1CO@HEGJNJHP@?$AA?6?$AA?$DM?$AAh?$AAt?$AAm?$AAl?$AA?$DO?$AA?6?$AA?$DM?$AAh?$AAe?$AAa?$AAd?$AA?$DO?$AA?6@+16
	movups	XMMWORD PTR [rsi+16], xmm1
	movsd	xmm0, QWORD PTR ??_C@_1CO@HEGJNJHP@?$AA?6?$AA?$DM?$AAh?$AAt?$AAm?$AAl?$AA?$DO?$AA?6?$AA?$DM?$AAh?$AAe?$AAa?$AAd?$AA?$DO?$AA?6@+32
	movsd	QWORD PTR [rsi+32], xmm0
	mov	eax, DWORD PTR ??_C@_1CO@HEGJNJHP@?$AA?6?$AA?$DM?$AAh?$AAt?$AAm?$AAl?$AA?$DO?$AA?6?$AA?$DM?$AAh?$AAe?$AAa?$AAd?$AA?$DO?$AA?6@+40
	mov	DWORD PTR [rsi+40], eax
	movzx	eax, WORD PTR ??_C@_1CO@HEGJNJHP@?$AA?6?$AA?$DM?$AAh?$AAt?$AAm?$AAl?$AA?$DO?$AA?6?$AA?$DM?$AAh?$AAe?$AAa?$AAd?$AA?$DO?$AA?6@+44
	mov	WORD PTR [rsi+44], ax

; 1309 : <html>\n\
; 1310 : <head>\n\
; 1311 : <title>");
; 1312 : 				if (aTitle) wcscat(lDialogString, aTitle);

	test	rdi, rdi
	je	SHORT $LN14@tinyfd_inp
	lea	rcx, QWORD PTR [rsi-2]
$LL95@tinyfd_inp:
	cmp	WORD PTR [rcx+2], 0
	lea	rcx, QWORD PTR [rcx+2]
	jne	SHORT $LL95@tinyfd_inp
	xor	edx, edx
	npad	14
$LL96@tinyfd_inp:
	movzx	eax, WORD PTR [rdi+rdx*2]
	mov	WORD PTR [rcx+rdx*2], ax
	lea	rdx, QWORD PTR [rdx+1]
	test	ax, ax
	jne	SHORT $LL96@tinyfd_inp
$LN14@tinyfd_inp:

; 1313 : 				wcscat(lDialogString, L"</title>\n\

	lea	rcx, QWORD PTR [rsi-2]
$LL93@tinyfd_inp:
	add	rcx, 2
	cmp	WORD PTR [rcx], 0
	jne	SHORT $LL93@tinyfd_inp
	mov	r8d, 6
	lea	rdx, OFFSET FLAT:??_C@_1DHM@DMPHJKKO@?$AA?$DM?$AA?1?$AAt?$AAi?$AAt?$AAl?$AAe?$AA?$DO?$AA?6?$AA?$DM?$AAH?$AAT?$AAA?$AA?3?$AAA@
	mov	eax, r8d
	npad	1
$LL94@tinyfd_inp:
	lea	rcx, QWORD PTR [rcx+128]
	movups	xmm0, XMMWORD PTR [rdx]
	lea	rdx, QWORD PTR [rdx+128]
	movups	XMMWORD PTR [rcx-128], xmm0
	movups	xmm1, XMMWORD PTR [rdx-112]
	movups	XMMWORD PTR [rcx-112], xmm1
	movups	xmm0, XMMWORD PTR [rdx-96]
	movups	XMMWORD PTR [rcx-96], xmm0
	movups	xmm1, XMMWORD PTR [rdx-80]
	movups	XMMWORD PTR [rcx-80], xmm1
	movups	xmm0, XMMWORD PTR [rdx-64]
	movups	XMMWORD PTR [rcx-64], xmm0
	movups	xmm1, XMMWORD PTR [rdx-48]
	movups	XMMWORD PTR [rcx-48], xmm1
	movups	xmm0, XMMWORD PTR [rdx-32]
	movups	XMMWORD PTR [rcx-32], xmm0
	movups	xmm1, XMMWORD PTR [rdx-16]
	movups	XMMWORD PTR [rcx-16], xmm1
	sub	rax, 1
	jne	SHORT $LL94@tinyfd_inp
	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rcx+16], xmm1
	movups	xmm0, XMMWORD PTR [rdx+32]
	movups	XMMWORD PTR [rcx+32], xmm0
	movups	xmm1, XMMWORD PTR [rdx+48]
	movups	XMMWORD PTR [rcx+48], xmm1
	movups	xmm0, XMMWORD PTR [rdx+64]
	movups	XMMWORD PTR [rcx+64], xmm0
	movups	xmm1, XMMWORD PTR [rdx+80]
	movups	XMMWORD PTR [rcx+80], xmm1
	movups	xmm0, XMMWORD PTR [rdx+96]
	movups	XMMWORD PTR [rcx+96], xmm0
	mov	rax, QWORD PTR [rdx+112]
	mov	QWORD PTR [rcx+112], rax
	mov	eax, DWORD PTR [rdx+120]
	mov	DWORD PTR [rcx+120], eax

; 1314 : <HTA:APPLICATION\n\
; 1315 : ID = 'tinyfdHTA'\n\
; 1316 : APPLICATIONNAME = 'tinyfd_inputBox'\n\
; 1317 : MINIMIZEBUTTON = 'no'\n\
; 1318 : MAXIMIZEBUTTON = 'no'\n\
; 1319 : BORDER = 'dialog'\n\
; 1320 : SCROLL = 'no'\n\
; 1321 : SINGLEINSTANCE = 'yes'\n\
; 1322 : WINDOWSTATE = 'hidden'>\n\
; 1323 : \n\
; 1324 : <script language = 'VBScript'>\n\
; 1325 : \n\
; 1326 : intWidth = Screen.Width/4\n\
; 1327 : intHeight = Screen.Height/6\n\
; 1328 : ResizeTo intWidth, intHeight\n\
; 1329 : MoveTo((Screen.Width/2)-(intWidth/2)),((Screen.Height/2)-(intHeight/2))\n\
; 1330 : result = 0\n\
; 1331 : \n\
; 1332 : Sub Window_onLoad\n\
; 1333 : txt_input.Focus\n\
; 1334 : End Sub\n\
; 1335 : \n");
; 1336 : 
; 1337 : 				wcscat(lDialogString, L"\

	lea	rcx, QWORD PTR [rsi-2]
	npad	5
$LL91@tinyfd_inp:
	add	rcx, 2
	cmp	WORD PTR [rcx], 0
	jne	SHORT $LL91@tinyfd_inp
	mov	r9d, 7
	lea	rdx, OFFSET FLAT:??_C@_1DIM@CBMOIOEB@?$AAS?$AAu?$AAb?$AA?5?$AAW?$AAi?$AAn?$AAd?$AAo?$AAw?$AA_?$AAo?$AAn?$AAU?$AAn@
	mov	eax, r9d
	npad	6
$LL92@tinyfd_inp:
	lea	rcx, QWORD PTR [rcx+128]
	movups	xmm0, XMMWORD PTR [rdx]
	lea	rdx, QWORD PTR [rdx+128]
	movups	XMMWORD PTR [rcx-128], xmm0
	movups	xmm1, XMMWORD PTR [rdx-112]
	movups	XMMWORD PTR [rcx-112], xmm1
	movups	xmm0, XMMWORD PTR [rdx-96]
	movups	XMMWORD PTR [rcx-96], xmm0
	movups	xmm1, XMMWORD PTR [rdx-80]
	movups	XMMWORD PTR [rcx-80], xmm1
	movups	xmm0, XMMWORD PTR [rdx-64]
	movups	XMMWORD PTR [rcx-64], xmm0
	movups	xmm1, XMMWORD PTR [rdx-48]
	movups	XMMWORD PTR [rcx-48], xmm1
	movups	xmm0, XMMWORD PTR [rdx-32]
	movups	XMMWORD PTR [rcx-32], xmm0
	movups	xmm1, XMMWORD PTR [rdx-16]
	movups	XMMWORD PTR [rcx-16], xmm1
	sub	rax, 1
	jne	SHORT $LL92@tinyfd_inp
	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	eax, DWORD PTR [rdx+8]
	mov	DWORD PTR [rcx+8], eax

; 1338 : Sub Window_onUnload\n\
; 1339 : Set objFSO = CreateObject(\"Scripting.FileSystemObject\")\n\
; 1340 : Set oShell = CreateObject(\"WScript.Shell\")\n\
; 1341 : strTempFolder = oShell.ExpandEnvironmentStrings(\"%TEMP%\")\n\
; 1342 : Set objFile = objFSO.CreateTextFile(strTempFolder & \"\\tinyfd.txt\",True,True)\n\
; 1343 : If result = 1 Then\n\
; 1344 : objFile.Write 1 & txt_input.Value\n\
; 1345 : Else\n\
; 1346 : objFile.Write 0\n\
; 1347 : End If\n\
; 1348 : objFile.Close\n\
; 1349 : End Sub\n\
; 1350 : \n\
; 1351 : Sub Run_ProgramOK\n\
; 1352 : result = 1\n\
; 1353 : window.Close\n\
; 1354 : End Sub\n\
; 1355 : \n\
; 1356 : Sub Run_ProgramCancel\n\
; 1357 : window.Close\n\
; 1358 : End Sub\n\
; 1359 : \n");
; 1360 : 
; 1361 : 				wcscat(lDialogString, L"Sub Default_Buttons\n\

	lea	rcx, QWORD PTR [rsi-2]
$LL89@tinyfd_inp:
	add	rcx, 2
	cmp	WORD PTR [rcx], 0
	jne	SHORT $LL89@tinyfd_inp
	lea	rdx, OFFSET FLAT:??_C@_1DBM@GIKGBNMM@?$AAS?$AAu?$AAb?$AA?5?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA_?$AAB?$AAu?$AAt@
$LL90@tinyfd_inp:
	lea	rcx, QWORD PTR [rcx+128]
	movups	xmm0, XMMWORD PTR [rdx]
	lea	rdx, QWORD PTR [rdx+128]
	movups	XMMWORD PTR [rcx-128], xmm0
	movups	xmm1, XMMWORD PTR [rdx-112]
	movups	XMMWORD PTR [rcx-112], xmm1
	movups	xmm0, XMMWORD PTR [rdx-96]
	movups	XMMWORD PTR [rcx-96], xmm0
	movups	xmm1, XMMWORD PTR [rdx-80]
	movups	XMMWORD PTR [rcx-80], xmm1
	movups	xmm0, XMMWORD PTR [rdx-64]
	movups	XMMWORD PTR [rcx-64], xmm0
	movups	xmm1, XMMWORD PTR [rdx-48]
	movups	XMMWORD PTR [rcx-48], xmm1
	movups	xmm0, XMMWORD PTR [rdx-32]
	movups	XMMWORD PTR [rcx-32], xmm0
	movups	xmm1, XMMWORD PTR [rdx-16]
	movups	XMMWORD PTR [rcx-16], xmm1
	sub	r8, 1
	jne	SHORT $LL90@tinyfd_inp
	movups	xmm0, XMMWORD PTR [rdx]

; 1362 : If Window.Event.KeyCode = 13 Then\n\
; 1363 : btn_OK.Click\n\
; 1364 : ElseIf Window.Event.KeyCode = 27 Then\n\
; 1365 : btn_Cancel.Click\n\
; 1366 : End If\n\
; 1367 : End Sub\n\
; 1368 : \n\
; 1369 : </script>\n\
; 1370 : </head>\n\
; 1371 : <body style = 'background-color:#EEEEEE' onkeypress = 'vbs:Default_Buttons' align = 'top'>\n\
; 1372 : <table width = '100%' height = '80%' align = 'center' border = '0'>\n\
; 1373 : <tr border = '0'>\n\
; 1374 : <td align = 'left' valign = 'middle' style='Font-Family:Arial'>\n");
; 1375 : 
; 1376 : 				wcscat(lDialogString, aMessage ? aMessage : L"");

	test	rbx, rbx
	lea	r8, OFFSET FLAT:??_C@_11LOCGONAA@@
	movups	XMMWORD PTR [rcx], xmm0
	mov	rax, QWORD PTR [rdx+16]
	cmovne	r8, rbx
	mov	QWORD PTR [rcx+16], rax
	mov	eax, DWORD PTR [rdx+24]
	mov	DWORD PTR [rcx+24], eax
	lea	rcx, QWORD PTR [rsi-2]
	npad	3
$LL87@tinyfd_inp:
	cmp	WORD PTR [rcx+2], 0
	lea	rcx, QWORD PTR [rcx+2]
	jne	SHORT $LL87@tinyfd_inp
	xor	edx, edx
	npad	3
$LL88@tinyfd_inp:
	movzx	eax, WORD PTR [r8+rdx*2]
	mov	WORD PTR [rcx+rdx*2], ax
	lea	rdx, QWORD PTR [rdx+1]
	test	ax, ax
	jne	SHORT $LL88@tinyfd_inp

; 1377 : 
; 1378 : 				wcscat(lDialogString, L"\n\

	lea	rcx, QWORD PTR [rsi-2]
$LL85@tinyfd_inp:
	add	rcx, 2
	cmp	WORD PTR [rcx], 0
	jne	SHORT $LL85@tinyfd_inp
	lea	rdx, OFFSET FLAT:??_C@_1DJM@FCHDKLBP@?$AA?6?$AA?$DM?$AA?1?$AAt?$AAd?$AA?$DO?$AA?6?$AA?$DM?$AAt?$AAd?$AA?5?$AAa?$AAl?$AAi?$AAg@
	npad	9
$LL86@tinyfd_inp:
	lea	rcx, QWORD PTR [rcx+128]
	movups	xmm0, XMMWORD PTR [rdx]
	lea	rdx, QWORD PTR [rdx+128]
	movups	XMMWORD PTR [rcx-128], xmm0
	movups	xmm1, XMMWORD PTR [rdx-112]
	movups	XMMWORD PTR [rcx-112], xmm1
	movups	xmm0, XMMWORD PTR [rdx-96]
	movups	XMMWORD PTR [rcx-96], xmm0
	movups	xmm1, XMMWORD PTR [rdx-80]
	movups	XMMWORD PTR [rcx-80], xmm1
	movups	xmm0, XMMWORD PTR [rdx-64]
	movups	XMMWORD PTR [rcx-64], xmm0
	movups	xmm1, XMMWORD PTR [rdx-48]
	movups	XMMWORD PTR [rcx-48], xmm1
	movups	xmm0, XMMWORD PTR [rdx-32]
	movups	XMMWORD PTR [rcx-32], xmm0
	movups	xmm1, XMMWORD PTR [rdx-16]
	movups	XMMWORD PTR [rcx-16], xmm1
	sub	r9, 1
	jne	SHORT $LL86@tinyfd_inp
	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
	mov	eax, DWORD PTR [rdx+24]
	mov	DWORD PTR [rcx+24], eax

; 1379 : </td>\n\
; 1380 : <td align = 'right' valign = 'middle' style = 'margin-top: 0em'>\n\
; 1381 : <table  align = 'right' style = 'margin-right: 0em;'>\n\
; 1382 : <tr align = 'right' style = 'margin-top: 5em;'>\n\
; 1383 : <input type = 'button' value = 'OK' name = 'btn_OK' onClick = 'vbs:Run_ProgramOK' style = 'width: 5em; margin-top: 2em;'><br>\n\
; 1384 : <input type = 'button' value = 'Cancel' name = 'btn_Cancel' onClick = 'vbs:Run_ProgramCancel' style = 'width: 5em;'><br><br>\n\
; 1385 : </tr>\n\
; 1386 : </table>\n\
; 1387 : </td>\n\
; 1388 : </tr>\n\
; 1389 : </table>\n");
; 1390 : 
; 1391 : 				wcscat(lDialogString, L"<table width = '100%' height = '100%' align = 'center' border = '0'>\n\

	lea	rcx, QWORD PTR [rsi-2]
	npad	5
$LL83@tinyfd_inp:
	add	rcx, 2
	cmp	WORD PTR [rcx], 0
	jne	SHORT $LL83@tinyfd_inp
	lea	rax, OFFSET FLAT:??_C@_1CAC@GLDHPEPH@?$AA?$DM?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAw?$AAi?$AAd?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5@
	mov	edx, 4
$LL84@tinyfd_inp:
	lea	rcx, QWORD PTR [rcx+128]
	movups	xmm0, XMMWORD PTR [rax]
	lea	rax, QWORD PTR [rax+128]
	movups	XMMWORD PTR [rcx-128], xmm0
	movups	xmm1, XMMWORD PTR [rax-112]
	movups	XMMWORD PTR [rcx-112], xmm1
	movups	xmm0, XMMWORD PTR [rax-96]
	movups	XMMWORD PTR [rcx-96], xmm0
	movups	xmm1, XMMWORD PTR [rax-80]
	movups	XMMWORD PTR [rcx-80], xmm1
	movups	xmm0, XMMWORD PTR [rax-64]
	movups	XMMWORD PTR [rcx-64], xmm0
	movups	xmm1, XMMWORD PTR [rax-48]
	movups	XMMWORD PTR [rcx-48], xmm1
	movups	xmm0, XMMWORD PTR [rax-32]
	movups	XMMWORD PTR [rcx-32], xmm0
	movups	xmm1, XMMWORD PTR [rax-16]
	movups	XMMWORD PTR [rcx-16], xmm1
	sub	rdx, 1
	jne	SHORT $LL84@tinyfd_inp
	movzx	eax, WORD PTR [rax]
	mov	rdx, r15
	mov	WORD PTR [rcx], ax
	mov	rcx, rsi
	call	QWORD PTR __imp_fputws
	mov	rcx, r15
	call	QWORD PTR __imp_fclose

; 1427 : 		else
; 1428 : 		{
; 1429 : 				wcscpy(lDialogString,

	movaps	xmm0, XMMWORD PTR ??_C@_1FC@HFELHDAE@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAm?$AAs?$AAh?$AAt@
	movups	XMMWORD PTR [rsi], xmm0
	movaps	xmm1, XMMWORD PTR ??_C@_1FC@HFELHDAE@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAm?$AAs?$AAh?$AAt@+16
	movups	XMMWORD PTR [rsi+16], xmm1
	movaps	xmm0, XMMWORD PTR ??_C@_1FC@HFELHDAE@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAm?$AAs?$AAh?$AAt@+32
	movups	XMMWORD PTR [rsi+32], xmm0
	movaps	xmm1, XMMWORD PTR ??_C@_1FC@HFELHDAE@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAm?$AAs?$AAh?$AAt@+48
	movups	XMMWORD PTR [rsi+48], xmm1
	movaps	xmm0, XMMWORD PTR ??_C@_1FC@HFELHDAE@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAm?$AAs?$AAh?$AAt@+64
	movups	XMMWORD PTR [rsi+64], xmm0
	movzx	eax, WORD PTR ??_C@_1FC@HFELHDAE@?$AAc?$AAm?$AAd?$AA?4?$AAe?$AAx?$AAe?$AA?5?$AA?1?$AAc?$AA?5?$AAm?$AAs?$AAh?$AAt@+80
	mov	WORD PTR [rsi+80], ax
$LN16@tinyfd_inp:

; 1430 : 						L"cmd.exe /c mshta.exe \"%TEMP%\\tinyfd.hta\"");
; 1431 : 		}
; 1432 : 
; 1433 : 		/* wprintf ( "lDialogString: %ls\n" , lDialogString ) ; */
; 1434 : 
; 1435 : 		hiddenConsoleW(lDialogString, aTitle, 1);

	mov	rdx, rdi
	mov	rcx, rsi
	call	hiddenConsoleW

; 1436 : 
; 1437 : 		swprintf(lDialogString,

	lea	rcx, OFFSET FLAT:??_C@_19LFDMGLCC@?$AAT?$AAE?$AAM?$AAP@
	call	QWORD PTR __imp__wgetenv
	lea	r8, OFFSET FLAT:??_C@_1BO@MLODPNFF@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAt?$AAx?$AAt@
	mov	rdx, r12
	mov	r9, rax
	mov	rcx, rsi
	call	swprintf

; 1438 : #if !defined(__BORLANDC__) && !defined(__TINYC__) && !(defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR))
; 1439 : 				lDialogStringLen,
; 1440 : #endif
; 1441 : 								L"%ls\\tinyfd.txt", _wgetenv(L"TEMP"));
; 1442 : 				/* wprintf(L"lDialogString: %ls\n", lDialogString); */
; 1443 : #ifdef TINYFD_NOCCSUNICODE
; 1444 : 				if (!(lIn = _wfopen(lDialogString, L"r")))

	lea	rdx, OFFSET FLAT:??_C@_13BPINEIPE@?$AAr@
	mov	rcx, rsi
	call	QWORD PTR __imp__wfopen
	mov	rbx, rax
	test	rax, rax
	jne	SHORT $LN17@tinyfd_inp

; 1445 : #else
; 1446 : 				if (!(lIn = _wfopen(lDialogString, L"rt, ccs=UNICODE"))) /*or ccs=UTF-16LE*/
; 1447 : #endif
; 1448 : 				{
; 1449 : 				_wremove(lDialogString);

	mov	rcx, rsi
	call	QWORD PTR __imp__wremove
$LN218@tinyfd_inp:

; 1450 : 				free(lDialogString);

	mov	rcx, rsi
	call	QWORD PTR __imp_free
$LN217@tinyfd_inp:

; 1451 : 				return NULL;

	xor	eax, eax
	jmp	$LN213@tinyfd_inp
$LN17@tinyfd_inp:

; 1452 : 		}
; 1453 : 
; 1454 : 				memset(lBuff, 0, MAX_PATH_OR_CMD * sizeof(wchar_t) );

	lea	rdi, OFFSET FLAT:?lBuff@?1??tinyfd_inputBoxW@@9@9
	xor	edx, edx
	mov	rcx, rdi
	mov	r8d, 2048				; 00000800H
	call	memset

; 1455 : 
; 1456 : #ifdef TINYFD_NOCCSUNICODE
; 1457 : 				fgets((char *)lBuff, 2*MAX_PATH_OR_CMD, lIn);

	mov	r8, rbx
	mov	edx, 2048				; 00000800H
	mov	rcx, rdi
	call	QWORD PTR __imp_fgets

; 1458 : #else
; 1459 : 				fgetws(lBuff, MAX_PATH_OR_CMD, lIn);
; 1460 : #endif
; 1461 : 				fclose(lIn);

	mov	rcx, rbx
	call	QWORD PTR __imp_fclose

; 707  : 		if (_wstat64(aFilename, &st) == 0)

	lea	rdx, QWORD PTR st$1[rsp]
	mov	rcx, rsi
	call	QWORD PTR __imp__wstat64
	test	eax, eax
	jne	SHORT $LN156@tinyfd_inp

; 708  : #endif
; 709  : 		{
; 710  : 				if ((lIn = _wfopen(aFilename, L"w")))

	lea	rdx, OFFSET FLAT:??_C@_13CIFDLIMG@?$AAw@
	mov	rcx, rsi
	call	QWORD PTR __imp__wfopen
	xor	r15d, r15d
	mov	rdi, rax
	test	rax, rax
	je	SHORT $LN155@tinyfd_inp

; 711  : 				{
; 712  : 						for (i = 0; i < st.st_size; i++)

	mov	ebx, r15d
	cmp	QWORD PTR st$1[rsp+24], rbx
	jle	SHORT $LN56@tinyfd_inp
	npad	5
$LL57@tinyfd_inp:

; 713  : 						{
; 714  : 								fputc('A', lIn);

	mov	rdx, rdi
	mov	ecx, 65					; 00000041H
	call	QWORD PTR __imp_fputc
	inc	ebx
	movsxd	rax, ebx
	cmp	rax, QWORD PTR st$1[rsp+24]
	jl	SHORT $LL57@tinyfd_inp
$LN56@tinyfd_inp:

; 715  : 						}
; 716  : 						fclose(lIn);

	mov	rcx, rdi
	call	QWORD PTR __imp_fclose
$LN155@tinyfd_inp:

; 1462 : 				wipefileW(lDialogString);
; 1463 : 				_wremove(lDialogString);

	lea	rdi, OFFSET FLAT:?lBuff@?1??tinyfd_inputBoxW@@9@9
	jmp	SHORT $LN59@tinyfd_inp
$LN156@tinyfd_inp:

; 707  : 		if (_wstat64(aFilename, &st) == 0)

	xor	r15d, r15d
$LN59@tinyfd_inp:

; 1462 : 				wipefileW(lDialogString);
; 1463 : 				_wremove(lDialogString);

	mov	rcx, rsi
	call	QWORD PTR __imp__wremove

; 1464 : 
; 1465 : 				if (aDefaultInput)

	lea	rcx, OFFSET FLAT:??_C@_19LFDMGLCC@?$AAT?$AAE?$AAM?$AAP@
	test	rbp, rbp
	jne	SHORT $LN216@tinyfd_inp

; 1466 : 				{
; 1467 : 						swprintf(lDialogString,
; 1468 : #if !defined(__BORLANDC__) && !defined(__TINYC__) && !(defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR))
; 1469 : 						lDialogStringLen,
; 1470 : #endif
; 1471 : 						L"%ls\\tinyfd.vbs", _wgetenv(L"TEMP"));
; 1472 : 		}
; 1473 : 		else
; 1474 : 		{
; 1475 : 				swprintf(lDialogString,

	lea	r13, OFFSET FLAT:??_C@_1BO@PAPCLOOH@?$AA?$CF?$AAl?$AAs?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA?4?$AAh?$AAt?$AAa@
$LN216@tinyfd_inp:

; 1476 : #if !defined(__BORLANDC__) && !defined(__TINYC__) && !(defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR))
; 1477 : 						lDialogStringLen,
; 1478 : #endif
; 1479 : 						L"%ls\\tinyfd.hta", _wgetenv(L"TEMP"));
; 1480 : 		}
; 1481 : 		_wremove(lDialogString);

	call	QWORD PTR __imp__wgetenv
	mov	r8, r13
	mov	rdx, r12
	mov	r9, rax
	mov	rcx, rsi
	call	swprintf
	mov	rcx, rsi
	call	QWORD PTR __imp__wremove

; 1482 : 		free(lDialogString);

	mov	rcx, rsi
	call	QWORD PTR __imp_free

; 1483 : 		/* wprintf( L"lBuff: %ls\n" , lBuff ) ; */
; 1484 : #ifdef TINYFD_NOCCSUNICODE
; 1485 : 				lResult = !wcsncmp(lBuff+1, L"1", 1);

	mov	r8d, 1
	lea	rdx, OFFSET FLAT:??_C@_13JGCMLPCH@?$AA1@
	lea	rcx, OFFSET FLAT:?lBuff@?1??tinyfd_inputBoxW@@9@9+2
	call	QWORD PTR __imp_wcsncmp
	test	eax, eax

; 1486 : #else
; 1487 : 				lResult = !wcsncmp(lBuff, L"1", 1);
; 1488 : #endif
; 1489 : 
; 1490 : 		/* printf( "lResult: %d \n" , lResult ) ; */
; 1491 : 		if (!lResult)

	jne	$LN217@tinyfd_inp

; 1492 : 		{
; 1493 : 			return NULL ;
; 1494 : 		}
; 1495 : 
; 1496 : 		/* wprintf( "lBuff+1: %ls\n" , lBuff+1 ) ; */
; 1497 : 
; 1498 : #ifdef TINYFD_NOCCSUNICODE
; 1499 : 				if (aDefaultInput)

	test	rbp, rbp
	je	SHORT $LN21@tinyfd_inp
	npad	5
$LL82@tinyfd_inp:

; 1500 : 				{
; 1501 : 						lDialogStringLen = wcslen(lBuff) ;

	cmp	WORD PTR [rdi+r14*2+2], 0
	lea	r14, QWORD PTR [r14+1]
	jne	SHORT $LL82@tinyfd_inp

; 1502 : 						lBuff[lDialogStringLen - 1] = L'\0';

	lea	rax, QWORD PTR [r14*2-2]
	cmp	rax, 2048				; 00000800H
	jae	SHORT $LN29@tinyfd_inp

; 1503 : 						lBuff[lDialogStringLen - 2] = L'\0';

	lea	r14, QWORD PTR [r14*2-4]
	mov	WORD PTR [rax+rdi], r15w
	cmp	r14, 2048				; 00000800H
	jae	SHORT $LN29@tinyfd_inp
	mov	WORD PTR [r14+rdi], r15w
$LN21@tinyfd_inp:

; 1504 : 				}
; 1505 : 				return lBuff + 2;

	lea	rax, OFFSET FLAT:?lBuff@?1??tinyfd_inputBoxW@@9@9+4
$LN213@tinyfd_inp:
	mov	r13, QWORD PTR [rsp+104]
	mov	r12, QWORD PTR [rsp+184]
	mov	r15, QWORD PTR [rsp+96]
$LN1@tinyfd_inp:

; 1506 : #else
; 1507 : 				if (aDefaultInput) lBuff[wcslen(lBuff) - 1] = L'\0';
; 1508 : 				return lBuff + 1;
; 1509 : #endif
; 1510 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 112				; 00000070H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN29@tinyfd_inp:

; 1502 : 						lBuff[lDialogStringLen - 1] = L'\0';

	call	__report_rangecheckfailure
	int	3
$LN214@tinyfd_inp:
tinyfd_inputBoxW ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT tinyfd_openFileDialogW
_TEXT	SEGMENT
aAllowMultipleSelects$GSCopy$1$ = 48
lFullBuffLen$1$ = 52
aFilterPatterns$GSCopy$1$ = 56
lHResult$1$ = 56
lLengths$ = 64
lPointers$ = 8256
ofn$ = 16464
lFilterPatterns$ = 16624
lDirname$ = 18672
lDialogString$ = 20720
__$ArrayPad$ = 22768
aTitle$ = 22864
aDefaultPathAndFile$ = 22872
aNumOfFilterPatterns$ = 22880
aFilterPatterns$ = 22888
aSingleFilterDescription$ = 22896
aAllowMultipleSelects$ = 22904
tinyfd_openFileDialogW PROC				; COMDAT

; 1622 : {

$LN242:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-22536]
	mov	eax, 22792				; 00005908H
	call	__chkstk
	sub	rsp, rax
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	ebx, DWORD PTR aAllowMultipleSelects$[rbp-256]
	mov	rsi, rdx
	mov	r15, QWORD PTR aSingleFilterDescription$[rbp-256]
	mov	r13, rcx
	movsxd	r14, r8d

; 1623 : 		size_t lLengths[MAX_MULTIPLE_FILES];
; 1624 : 		wchar_t lDirname[MAX_PATH_OR_CMD];
; 1625 : 		wchar_t lFilterPatterns[MAX_PATH_OR_CMD] = L"";

	lea	rcx, QWORD PTR lFilterPatterns$[rbp-254]
	xor	r12d, r12d
	mov	QWORD PTR aFilterPatterns$GSCopy$1$[rsp], r9
	xor	edx, edx
	mov	WORD PTR lFilterPatterns$[rbp-256], r12w
	mov	r8d, 2046				; 000007feH
	mov	DWORD PTR aAllowMultipleSelects$GSCopy$1$[rsp], ebx
	mov	rdi, r9
	call	memset

; 1626 : 		wchar_t lDialogString[MAX_PATH_OR_CMD];
; 1627 : 		wchar_t * lPointers[MAX_MULTIPLE_FILES+1];
; 1628 : 		wchar_t * p;
; 1629 : 		int i, j;
; 1630 : 		size_t lBuffLen;
; 1631 : 		DWORD lFullBuffLen;
; 1632 : 		HRESULT lHResult;
; 1633 : 		OPENFILENAMEW ofn = { 0 };
; 1634 : 		static wchar_t * lBuff = NULL;
; 1635 : 
; 1636 : 		free(lBuff);

	mov	rcx, QWORD PTR ?lBuff@?1??tinyfd_openFileDialogW@@9@9
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR ofn$[rbp-256], xmm0
	mov	QWORD PTR ofn$[rbp-112], rax
	movups	XMMWORD PTR ofn$[rbp-240], xmm0
	movups	XMMWORD PTR ofn$[rbp-224], xmm0
	movups	XMMWORD PTR ofn$[rbp-208], xmm0
	movups	XMMWORD PTR ofn$[rbp-192], xmm0
	movups	XMMWORD PTR ofn$[rbp-176], xmm0
	movups	XMMWORD PTR ofn$[rbp-160], xmm0
	movups	XMMWORD PTR ofn$[rbp-144], xmm0
	movups	XMMWORD PTR ofn$[rbp-128], xmm0
	call	QWORD PTR __imp_free

; 1637 : 		lBuff = NULL;

	mov	QWORD PTR ?lBuff@?1??tinyfd_openFileDialogW@@9@9, r12

; 1638 : 		if (aAllowMultipleSelects < 0) return (wchar_t *)0;

	test	ebx, ebx
	js	$LN116@tinyfd_ope

; 1639 : 
; 1640 : 		if (aTitle&&!wcscmp(aTitle, L"tinyfd_query")){ strcpy(tinyfd_response, "windows_wchar"); return (wchar_t *)1; }

	test	r13, r13
	je	$LN18@tinyfd_ope
	lea	rdx, OFFSET FLAT:??_C@_1BK@LMOENJBN@?$AAt?$AAi?$AAn?$AAy?$AAf?$AAd?$AA_?$AAq?$AAu?$AAe?$AAr?$AAy@
	mov	rcx, -1
$LL140@tinyfd_ope:
	movzx	eax, WORD PTR [r13+rcx*2+2]
	cmp	ax, WORD PTR [rdx+rcx*2+2]
	jne	SHORT $LN51@tinyfd_ope
	add	rcx, 2
	cmp	rcx, 13
	je	SHORT $LN170@tinyfd_ope
	movzx	eax, WORD PTR [r13+rcx*2]
	cmp	ax, WORD PTR [rdx+rcx*2]
	je	SHORT $LL140@tinyfd_ope
$LN51@tinyfd_ope:

; 964  : 		while ((p = wcsrchr(p, L'\'')))

	mov	edx, 39					; 00000027H
	mov	rcx, r13
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	jne	SHORT $LN115@tinyfd_ope

; 965  : 		{
; 966  : 				return 1;
; 967  : 		}
; 968  : 
; 969  : 		p = aString;
; 970  : 		while ((p = wcsrchr(p, L'\"')))

	lea	edx, QWORD PTR [rax+34]
	mov	rcx, r13
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	je	SHORT $LN18@tinyfd_ope
$LN115@tinyfd_ope:

; 1641 : 
; 1642 : 		if (quoteDetectedW(aTitle)) return tinyfd_openFileDialogW(L"INVALID TITLE WITH QUOTES", aDefaultPathAndFile, aNumOfFilterPatterns, aFilterPatterns, aSingleFilterDescription, aAllowMultipleSelects);

	mov	DWORD PTR [rsp+40], ebx
	lea	rcx, OFFSET FLAT:??_C@_1DE@PEGLJLHK@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAT?$AAI?$AAT?$AAL?$AAE?$AA?5?$AAW@
	mov	r9, rdi
	mov	QWORD PTR [rsp+32], r15
	mov	r8d, r14d
	mov	rdx, rsi
	call	tinyfd_openFileDialogW
	jmp	$LN1@tinyfd_ope
$LN170@tinyfd_ope:

; 1639 : 
; 1640 : 		if (aTitle&&!wcscmp(aTitle, L"tinyfd_query")){ strcpy(tinyfd_response, "windows_wchar"); return (wchar_t *)1; }

	mov	eax, DWORD PTR ??_C@_0O@CILJLOAA@windows_wchar@+8
	movsd	xmm0, QWORD PTR ??_C@_0O@CILJLOAA@windows_wchar@
	mov	DWORD PTR tinyfd_response+8, eax
	movzx	eax, WORD PTR ??_C@_0O@CILJLOAA@windows_wchar@+12
	mov	WORD PTR tinyfd_response+12, ax
	mov	eax, 1
	movsd	QWORD PTR tinyfd_response, xmm0
	jmp	$LN1@tinyfd_ope
$LN18@tinyfd_ope:

; 961  : 		if (!aString) return 0;

	test	rsi, rsi
	je	SHORT $LN19@tinyfd_ope

; 962  : 
; 963  : 		p = aString;
; 964  : 		while ((p = wcsrchr(p, L'\'')))

	mov	edx, 39					; 00000027H
	mov	rcx, rsi
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	jne	SHORT $LN114@tinyfd_ope

; 965  : 		{
; 966  : 				return 1;
; 967  : 		}
; 968  : 
; 969  : 		p = aString;
; 970  : 		while ((p = wcsrchr(p, L'\"')))

	lea	edx, QWORD PTR [rax+34]
	mov	rcx, rsi
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	je	SHORT $LN19@tinyfd_ope
$LN114@tinyfd_ope:

; 1643 : 		if (quoteDetectedW(aDefaultPathAndFile)) return tinyfd_openFileDialogW(aTitle, L"INVALID DEFAULT_PATH WITH QUOTES: use the GRAVE ACCENT \\x60 instead.", aNumOfFilterPatterns, aFilterPatterns, aSingleFilterDescription, aAllowMultipleSelects);

	mov	DWORD PTR [rsp+40], ebx
	lea	rdx, OFFSET FLAT:??_C@_1IK@HPEHGDLB@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAD?$AAE?$AAF?$AAA?$AAU?$AAL?$AAT@
	mov	r9, rdi
	mov	QWORD PTR [rsp+32], r15
	mov	r8d, r14d
	mov	rcx, r13
	call	tinyfd_openFileDialogW
	jmp	$LN1@tinyfd_ope
$LN19@tinyfd_ope:

; 961  : 		if (!aString) return 0;

	test	r15, r15
	je	SHORT $LN20@tinyfd_ope

; 962  : 
; 963  : 		p = aString;
; 964  : 		while ((p = wcsrchr(p, L'\'')))

	mov	edx, 39					; 00000027H
	mov	rcx, r15
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	jne	SHORT $LN113@tinyfd_ope

; 965  : 		{
; 966  : 				return 1;
; 967  : 		}
; 968  : 
; 969  : 		p = aString;
; 970  : 		while ((p = wcsrchr(p, L'\"')))

	lea	edx, QWORD PTR [rax+34]
	mov	rcx, r15
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	je	SHORT $LN20@tinyfd_ope
$LN113@tinyfd_ope:

; 1644 : 		if (quoteDetectedW(aSingleFilterDescription)) return tinyfd_openFileDialogW(aTitle, aDefaultPathAndFile, aNumOfFilterPatterns, aFilterPatterns, L"INVALID FILTER_DESCRIPTION WITH QUOTES: use the GRAVE ACCENT \\x60 instead.", aAllowMultipleSelects);

	lea	rax, OFFSET FLAT:??_C@_1JG@DGHEIOAJ@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAF?$AAI?$AAL?$AAT?$AAE?$AAR?$AA_@
	mov	DWORD PTR [rsp+40], ebx
	mov	r9, rdi
	mov	QWORD PTR [rsp+32], rax
	mov	r8d, r14d
	mov	rdx, rsi
	mov	rcx, r13
	call	tinyfd_openFileDialogW
	jmp	$LN1@tinyfd_ope
$LN20@tinyfd_ope:

; 1645 : 		for (i = 0; i < aNumOfFilterPatterns; i++)

	test	r14d, r14d
	jle	SHORT $LN119@tinyfd_ope
	xor	ebx, ebx
$LL4@tinyfd_ope:

; 1646 : 		{
; 1647 : 				if (quoteDetectedW(aFilterPatterns[i])) return tinyfd_openFileDialogW(L"INVALID FILTER_PATTERN WITH QUOTES: use the GRAVE ACCENT \\x60 instead.", aDefaultPathAndFile, 0, NULL, NULL, aAllowMultipleSelects);

	mov	rdi, QWORD PTR [rdi+rbx*8]

; 961  : 		if (!aString) return 0;

	test	rdi, rdi
	je	SHORT $LN112@tinyfd_ope

; 962  : 
; 963  : 		p = aString;
; 964  : 		while ((p = wcsrchr(p, L'\'')))

	mov	edx, 39					; 00000027H
	mov	rcx, rdi
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	jne	SHORT $LN118@tinyfd_ope

; 965  : 		{
; 966  : 				return 1;
; 967  : 		}
; 968  : 
; 969  : 		p = aString;
; 970  : 		while ((p = wcsrchr(p, L'\"')))

	lea	edx, QWORD PTR [rax+34]
	mov	rcx, rdi
	call	QWORD PTR __imp_wcsrchr
	test	rax, rax
	jne	SHORT $LN118@tinyfd_ope
$LN112@tinyfd_ope:

; 1645 : 		for (i = 0; i < aNumOfFilterPatterns; i++)

	mov	rdi, QWORD PTR aFilterPatterns$GSCopy$1$[rsp]
	inc	rbx
	cmp	rbx, r14
	jl	SHORT $LL4@tinyfd_ope
	mov	ebx, DWORD PTR aAllowMultipleSelects$GSCopy$1$[rsp]
$LN119@tinyfd_ope:

; 1648 : 		}
; 1649 : 
; 1650 : 		if (aAllowMultipleSelects)

	test	ebx, ebx
	je	SHORT $LN22@tinyfd_ope

; 1651 : 		{
; 1652 : 				lFullBuffLen = MAX_MULTIPLE_FILES * MAX_PATH_OR_CMD + 1;
; 1653 : 				lBuff = (wchar_t*)(malloc(lFullBuffLen * sizeof(wchar_t)));

	mov	ecx, 2097154				; 00200002H
	mov	DWORD PTR lFullBuffLen$1$[rsp], 1048577	; 00100001H
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR ?lBuff@?1??tinyfd_openFileDialogW@@9@9, rax
	test	rax, rax

; 1654 : 				if (!lBuff)

	jne	SHORT $LN238@tinyfd_ope

; 1655 : 				{
; 1656 : 						lFullBuffLen = LOW_MULTIPLE_FILES * MAX_PATH_OR_CMD + 1;

	mov	DWORD PTR lFullBuffLen$1$[rsp], 32769	; 00008001H

; 1657 : 						lBuff = (wchar_t*)( malloc( lFullBuffLen * sizeof(wchar_t)));

	mov	ecx, 65538				; 00010002H

; 1658 : 				}
; 1659 : 		}

	jmp	SHORT $LN239@tinyfd_ope
$LN118@tinyfd_ope:

; 1646 : 		{
; 1647 : 				if (quoteDetectedW(aFilterPatterns[i])) return tinyfd_openFileDialogW(L"INVALID FILTER_PATTERN WITH QUOTES: use the GRAVE ACCENT \\x60 instead.", aDefaultPathAndFile, 0, NULL, NULL, aAllowMultipleSelects);

	mov	eax, DWORD PTR aAllowMultipleSelects$GSCopy$1$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_1IO@LEBEAFKG@?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?5?$AAF?$AAI?$AAL?$AAT?$AAE?$AAR?$AA_@
	mov	DWORD PTR [rsp+40], eax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	QWORD PTR [rsp+32], r12
	mov	rdx, rsi
	call	tinyfd_openFileDialogW
	jmp	$LN1@tinyfd_ope
$LN22@tinyfd_ope:

; 1660 : 		else
; 1661 : 		{
; 1662 : 				lFullBuffLen = MAX_PATH_OR_CMD + 1;

	mov	DWORD PTR lFullBuffLen$1$[rsp], 1025	; 00000401H

; 1663 : 				lBuff = (wchar_t*)(malloc(lFullBuffLen * sizeof(wchar_t)));

	mov	ecx, 2050				; 00000802H
$LN239@tinyfd_ope:

; 1664 : 		}
; 1665 : 		if (!lBuff) return NULL;

	call	QWORD PTR __imp_malloc
	mov	QWORD PTR ?lBuff@?1??tinyfd_openFileDialogW@@9@9, rax
	test	rax, rax
	je	$LN116@tinyfd_ope
$LN238@tinyfd_ope:

; 1666 : 
; 1667 : 		lHResult = CoInitializeEx(NULL, 0);

	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_CoInitializeEx
	mov	DWORD PTR lHResult$1$[rsp], eax

; 727  : 		if (aSource)

	test	rsi, rsi
	je	SHORT $LN68@tinyfd_ope

; 728  : 		{
; 729  : 				lTmp = wcsrchr(aSource, L'/');

	mov	edx, 47					; 0000002fH
	mov	rcx, rsi
	call	QWORD PTR __imp_wcsrchr
	mov	rbx, rax

; 730  : 				if (!lTmp)

	test	rax, rax
	jne	$LN110@tinyfd_ope

; 731  : 				{
; 732  : 						lTmp = wcsrchr(aSource, L'\\');

	lea	edx, QWORD PTR [rax+92]
	mov	rcx, rsi
	call	QWORD PTR __imp_wcsrchr
	mov	rbx, rax

; 733  : 				}
; 734  : 				if (lTmp)

	test	rax, rax
	jne	$LN110@tinyfd_ope

; 739  : 				else
; 740  : 				{
; 741  : 						*aoDestination = L'\0';
; 742  : 				}
; 743  : 		}

	mov	ebx, DWORD PTR aAllowMultipleSelects$GSCopy$1$[rsp]
$LN68@tinyfd_ope:

; 1668 : 
; 1669 : 		getPathWithoutFinalSlashW(lDirname, aDefaultPathAndFile);
; 1670 : 		getLastNameW(lBuff, aDefaultPathAndFile);

	xor	eax, eax
	mov	WORD PTR lDirname$[rbp-256], ax
$LN69@tinyfd_ope:
	mov	rdx, rsi
	call	getLastNameW

; 1671 : 
; 1672 : 		if (aNumOfFilterPatterns > 0)

	test	r14d, r14d
	jle	$LN9@tinyfd_ope

; 1673 : 		{
; 1674 : 			if (aSingleFilterDescription && wcslen(aSingleFilterDescription))

	mov	ecx, DWORD PTR ??_C@_13LBAGMAIH@?$AA?6@
	test	r15, r15
	je	SHORT $LN27@tinyfd_ope
	mov	rax, -1
$LL139@tinyfd_ope:
	inc	rax
	cmp	WORD PTR [r15+rax*2], r12w
	jne	SHORT $LL139@tinyfd_ope
	test	rax, rax
	je	SHORT $LN27@tinyfd_ope

; 1675 : 			{
; 1676 : 				wcscpy(lFilterPatterns, aSingleFilterDescription);

	lea	r8, QWORD PTR lFilterPatterns$[rbp-256]
	mov	rdx, r15
	sub	r8, r15
	npad	3
$LL41@tinyfd_ope:
	movzx	eax, WORD PTR [rdx]
	mov	WORD PTR [rdx+r8], ax
	lea	rdx, QWORD PTR [rdx+2]
	test	ax, ax
	jne	SHORT $LL41@tinyfd_ope

; 1677 : 				wcscat(lFilterPatterns, L"\n");

	lea	rax, QWORD PTR lFilterPatterns$[rbp-256]
	sub	rax, 2
	npad	4
$LL138@tinyfd_ope:
	cmp	WORD PTR [rax+2], r12w
	lea	rax, QWORD PTR [rax+2]
	jne	SHORT $LL138@tinyfd_ope
	mov	DWORD PTR [rax], ecx
$LN27@tinyfd_ope:

; 1678 : 			}
; 1679 : 			wcscat(lFilterPatterns, aFilterPatterns[0]);

	lea	rdx, QWORD PTR lFilterPatterns$[rbp-256]
	sub	rdx, 2
	npad	8
$LL136@tinyfd_ope:
	cmp	WORD PTR [rdx+2], r12w
	lea	rdx, QWORD PTR [rdx+2]
	jne	SHORT $LL136@tinyfd_ope
	mov	r9, QWORD PTR [rdi]
	xor	r8d, r8d
$LL137@tinyfd_ope:
	movzx	eax, WORD PTR [r9+r8*2]
	mov	WORD PTR [rdx+r8*2], ax
	lea	r8, QWORD PTR [r8+1]
	test	ax, ax
	jne	SHORT $LL137@tinyfd_ope

; 1680 : 			for (i = 1; i < aNumOfFilterPatterns; i++)

	cmp	r14, 1
	jle	SHORT $LN6@tinyfd_ope
	mov	eax, DWORD PTR ??_C@_13PJJBFPED@?$AA?$DL@
	mov	r11d, 1
	npad	10
$LL7@tinyfd_ope:

; 1681 : 			{
; 1682 : 				wcscat(lFilterPatterns, L";");

	lea	rdx, QWORD PTR lFilterPatterns$[rbp-256]
	sub	rdx, 2
	npad	5
$LL135@tinyfd_ope:
	cmp	WORD PTR [rdx+2], r12w
	lea	rdx, QWORD PTR [rdx+2]
	jne	SHORT $LL135@tinyfd_ope

; 1683 : 				wcscat(lFilterPatterns, aFilterPatterns[i]);

	lea	r8, QWORD PTR lFilterPatterns$[rbp-256]
	mov	DWORD PTR [rdx], eax
	sub	r8, 2
	npad	8
$LL133@tinyfd_ope:
	cmp	WORD PTR [r8+2], r12w
	lea	r8, QWORD PTR [r8+2]
	jne	SHORT $LL133@tinyfd_ope
	mov	r10, QWORD PTR [rdi+r11*8]
	xor	r9d, r9d
$LL134@tinyfd_ope:
	movzx	edx, WORD PTR [r10+r9*2]
	mov	WORD PTR [r8+r9*2], dx
	lea	r9, QWORD PTR [r9+1]
	test	dx, dx
	jne	SHORT $LL134@tinyfd_ope

; 1680 : 			for (i = 1; i < aNumOfFilterPatterns; i++)

	inc	r11
	cmp	r11, r14
	jl	SHORT $LL7@tinyfd_ope
$LN6@tinyfd_ope:

; 1684 : 			}
; 1685 : 			wcscat(lFilterPatterns, L"\n");

	lea	rax, QWORD PTR lFilterPatterns$[rbp-256]
	sub	rax, 2
	npad	8
$LL132@tinyfd_ope:
	cmp	WORD PTR [rax+2], r12w
	lea	rax, QWORD PTR [rax+2]
	jne	SHORT $LL132@tinyfd_ope
	mov	DWORD PTR [rax], ecx

; 1686 : 			if (!(aSingleFilterDescription && wcslen(aSingleFilterDescription)))

	test	r15, r15
	je	SHORT $LN29@tinyfd_ope
	mov	rax, -1
	npad	7
$LL131@tinyfd_ope:
	inc	rax
	cmp	WORD PTR [r15+rax*2], r12w
	jne	SHORT $LL131@tinyfd_ope
	test	rax, rax
	jne	$LN172@tinyfd_ope
$LN29@tinyfd_ope:

; 1687 : 			{
; 1688 : 				wcscpy(lDialogString, lFilterPatterns);

	xor	edi, edi
	mov	ecx, edi
	npad	9
$LL42@tinyfd_ope:
	movzx	eax, WORD PTR lFilterPatterns$[rbp+rcx-256]
	mov	WORD PTR lDialogString$[rbp+rcx-256], ax
	lea	rcx, QWORD PTR [rcx+2]
	test	ax, ax
	jne	SHORT $LL42@tinyfd_ope

; 1689 : 				wcscat(lFilterPatterns, lDialogString);

	lea	rcx, QWORD PTR lFilterPatterns$[rbp-256]
	sub	rcx, 2
$LL129@tinyfd_ope:
	cmp	WORD PTR [rcx+2], di
	lea	rcx, QWORD PTR [rcx+2]
	jne	SHORT $LL129@tinyfd_ope
	lea	r8, QWORD PTR lDialogString$[rbp-256]
	xor	edx, edx
	npad	9
$LL130@tinyfd_ope:
	movzx	eax, WORD PTR [r8+rdx*2]
	mov	WORD PTR [rcx+rdx*2], ax
	lea	rdx, QWORD PTR [rdx+1]
	test	ax, ax
	jne	SHORT $LL130@tinyfd_ope

; 1686 : 			if (!(aSingleFilterDescription && wcslen(aSingleFilterDescription)))

	jmp	SHORT $LN28@tinyfd_ope
$LN110@tinyfd_ope:

; 736  : 						wcsncpy(aoDestination, aSource, lTmp - aSource);

	sub	rbx, rsi
	lea	rcx, QWORD PTR lDirname$[rbp-256]
	sar	rbx, 1
	mov	rdx, rsi
	mov	r8, rbx
	call	QWORD PTR __imp_wcsncpy

; 737  : 						aoDestination[lTmp - aSource] = L'\0';

	xor	eax, eax
	mov	WORD PTR lDirname$[rbp+rbx*2-256], ax

; 738  : 				}

	mov	ebx, DWORD PTR aAllowMultipleSelects$GSCopy$1$[rsp]
	jmp	$LN69@tinyfd_ope
$LN172@tinyfd_ope:

; 1686 : 			if (!(aSingleFilterDescription && wcslen(aSingleFilterDescription)))

	xor	edi, edi
$LN28@tinyfd_ope:

; 1690 : 			}
; 1691 : 			wcscat(lFilterPatterns, L"All Files\n*.*\n");

	lea	rcx, QWORD PTR lFilterPatterns$[rbp-256]
	sub	rcx, 2
	npad	3
$LL128@tinyfd_ope:
	cmp	WORD PTR [rcx+2], r12w
	lea	rcx, QWORD PTR [rcx+2]
	jne	SHORT $LL128@tinyfd_ope
	movups	xmm0, XMMWORD PTR ??_C@_1BO@JHJLGACO@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?6?$AA?$CK?$AA?4?$AA?$CK?$AA?6@
	mov	eax, DWORD PTR ??_C@_1BO@JHJLGACO@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?6?$AA?$CK?$AA?4?$AA?$CK?$AA?6@+24

; 1692 : 			p = lFilterPatterns;
; 1693 : 			while ((p = wcschr(p, L'\n')) != NULL)

	mov	edx, 10
	movups	XMMWORD PTR [rcx], xmm0
	movsd	xmm0, QWORD PTR ??_C@_1BO@JHJLGACO@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?6?$AA?$CK?$AA?4?$AA?$CK?$AA?6@+16
	movsd	QWORD PTR [rcx+16], xmm0
	mov	DWORD PTR [rcx+24], eax
	movzx	eax, WORD PTR ??_C@_1BO@JHJLGACO@?$AAA?$AAl?$AAl?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?6?$AA?$CK?$AA?4?$AA?$CK?$AA?6@+28
	mov	WORD PTR [rcx+28], ax
	lea	rcx, QWORD PTR lFilterPatterns$[rbp-256]
	call	QWORD PTR __imp_wcschr
	test	rax, rax
	je	SHORT $LN9@tinyfd_ope
	npad	3
$LL8@tinyfd_ope:
	mov	edx, 10

; 1694 : 			{
; 1695 : 				*p = L'\0';

	mov	WORD PTR [rax], di

; 1696 : 				p++;

	lea	rcx, QWORD PTR [rax+2]
	call	QWORD PTR __imp_wcschr
	test	rax, rax
	jne	SHORT $LL8@tinyfd_ope
$LN9@tinyfd_ope:

; 1697 : 			}
; 1698 : 		}
; 1699 : 
; 1700 : 		ofn.lStructSize = sizeof(OPENFILENAME);

	mov	DWORD PTR ofn$[rbp-256], 152		; 00000098H

; 1701 : 		ofn.hwndOwner = GetForegroundWindow();

	call	QWORD PTR __imp_GetForegroundWindow

; 1702 : 		ofn.hInstance = 0;

	mov	QWORD PTR ofn$[rbp-240], r12

; 1703 : 		ofn.lpstrFilter = wcslen(lFilterPatterns) ? lFilterPatterns : NULL;

	mov	rcx, -1
	mov	QWORD PTR ofn$[rbp-248], rax
	lea	rax, QWORD PTR lFilterPatterns$[rbp-256]
$LL127@tinyfd_ope:
	inc	rcx
	cmp	WORD PTR [rax+rcx*2], r12w
	jne	SHORT $LL127@tinyfd_ope

; 1704 : 		ofn.lpstrCustomFilter = NULL;
; 1705 : 		ofn.nMaxCustFilter = 0;
; 1706 : 		ofn.nFilterIndex = 1;
; 1707 : 		ofn.lpstrFile = lBuff;
; 1708 : 		ofn.nMaxFile = lFullBuffLen;

	mov	esi, DWORD PTR lFullBuffLen$1$[rsp]
	lea	rax, QWORD PTR lFilterPatterns$[rbp-256]
	test	rcx, rcx
	mov	QWORD PTR ofn$[rbp-224], r12
	mov	DWORD PTR ofn$[rbp-216], r12d

; 1709 : 		ofn.lpstrFileTitle = NULL;
; 1710 : 		ofn.nMaxFileTitle = MAX_PATH_OR_CMD / 2;
; 1711 : 		ofn.lpstrInitialDir = wcslen(lDirname) ? lDirname : NULL;

	mov	rcx, -1
	cmove	rax, r12
	mov	DWORD PTR ofn$[rbp-212], 1
	mov	QWORD PTR ofn$[rbp-232], rax
	mov	rax, QWORD PTR ?lBuff@?1??tinyfd_openFileDialogW@@9@9
	mov	QWORD PTR ofn$[rbp-208], rax
	lea	rax, QWORD PTR lDirname$[rbp-256]
	mov	DWORD PTR ofn$[rbp-200], esi
	mov	QWORD PTR ofn$[rbp-192], r12
	mov	DWORD PTR ofn$[rbp-184], 512		; 00000200H
$LL126@tinyfd_ope:
	inc	rcx
	cmp	WORD PTR [rax+rcx*2], r12w
	jne	SHORT $LL126@tinyfd_ope
	test	rcx, rcx
	lea	rax, QWORD PTR lDirname$[rbp-256]
	cmove	rax, r12
	mov	QWORD PTR ofn$[rbp-176], rax

; 1712 : 		ofn.lpstrTitle = aTitle && wcslen(aTitle) ? aTitle : NULL;

	test	r13, r13
	je	SHORT $LN43@tinyfd_ope
	mov	rax, -1
	npad	4
$LL125@tinyfd_ope:
	inc	rax
	cmp	WORD PTR [r13+rax*2], r12w
	jne	SHORT $LL125@tinyfd_ope
	mov	QWORD PTR ofn$[rbp-168], r13
	test	rax, rax
	jne	SHORT $LN44@tinyfd_ope
$LN43@tinyfd_ope:
	mov	QWORD PTR ofn$[rbp-168], r12
$LN44@tinyfd_ope:

; 1713 : 		ofn.Flags = OFN_EXPLORER | OFN_NOCHANGEDIR | OFN_PATHMUSTEXIST | OFN_FILEMUSTEXIST;

	mov	eax, 530440				; 00081808H

; 1714 : 		ofn.nFileOffset = 0;

	mov	DWORD PTR ofn$[rbp-156], r12d

; 1715 : 		ofn.nFileExtension = 0;
; 1716 : 		ofn.lpstrDefExt = NULL;
; 1717 : 		ofn.lCustData = 0L;
; 1718 : 		ofn.lpfnHook = NULL;
; 1719 : 		ofn.lpTemplateName = NULL;
; 1720 : 
; 1721 : 		if (aAllowMultipleSelects)

	mov	ecx, 530952				; 00081a08H
	mov	QWORD PTR ofn$[rbp-152], r12
	test	ebx, ebx
	mov	QWORD PTR ofn$[rbp-144], r12
	mov	QWORD PTR ofn$[rbp-136], r12
	cmovne	eax, ecx
	mov	QWORD PTR ofn$[rbp-128], r12

; 1722 : 		{
; 1723 : 			ofn.Flags |= OFN_ALLOWMULTISELECT;
; 1724 : 		}
; 1725 : 
; 1726 : 		if (GetOpenFileNameW(&ofn) == 0)

	lea	rcx, QWORD PTR ofn$[rbp-256]
	mov	DWORD PTR ofn$[rbp-160], eax
	call	QWORD PTR __imp_GetOpenFileNameW
	test	eax, eax
	jne	SHORT $LN31@tinyfd_ope

; 1727 : 		{
; 1728 : 			free(lBuff);

	mov	rcx, QWORD PTR ?lBuff@?1??tinyfd_openFileDialogW@@9@9
$LN240@tinyfd_ope:

; 1772 : 		}
; 1773 : 
; 1774 : 		if (lHResult == S_OK || lHResult == S_FALSE)

	call	QWORD PTR __imp_free
	mov	rdi, r12
	mov	QWORD PTR ?lBuff@?1??tinyfd_openFileDialogW@@9@9, r12
	jmp	$LN37@tinyfd_ope
$LN31@tinyfd_ope:

; 1729 : 			lBuff = NULL;
; 1730 : 		}
; 1731 : 		else
; 1732 : 		{
; 1733 : 			lBuffLen = wcslen(lBuff);

	mov	rdi, QWORD PTR ?lBuff@?1??tinyfd_openFileDialogW@@9@9
	mov	r9, -1
	mov	rcx, r9
$LL124@tinyfd_ope:
	inc	rcx
	cmp	WORD PTR [rdi+rcx*2], r12w
	jne	SHORT $LL124@tinyfd_ope

; 1734 : 			lPointers[0] = lBuff + lBuffLen + 1;

	lea	r15, QWORD PTR [rcx+rcx]
	lea	rax, QWORD PTR [rdi+2]
	add	rax, r15
	mov	QWORD PTR lPointers$[rbp-256], rax

; 1735 : 			if (aAllowMultipleSelects && (lPointers[0][0] != L'\0'))

	test	ebx, ebx
	je	$LN36@tinyfd_ope
	cmp	WORD PTR [rax], r12w
	je	$LN36@tinyfd_ope

; 1736 : 			{
; 1737 : 				i = 0;

	mov	edx, r12d
	mov	r8, r12
	npad	8
$LL12@tinyfd_ope:

; 1738 : 				do
; 1739 : 				{
; 1740 : 					lLengths[i] = wcslen(lPointers[i]);

	mov	rcx, QWORD PTR lPointers$[rbp+r8-256]
	mov	rax, r9
	movsxd	r14, edx
	npad	2
$LL123@tinyfd_ope:
	inc	rax
	cmp	WORD PTR [rcx+rax*2], r12w
	jne	SHORT $LL123@tinyfd_ope
	mov	QWORD PTR lLengths$[rsp+r8], rax

; 1741 : 					lPointers[i + 1] = lPointers[i] + lLengths[i] + 1;
; 1742 : 					i++;

	inc	edx
	inc	rax
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR lPointers$[rbp+r8-248], rax
	add	r8, 8

; 1743 : 				} while (lPointers[i][0] != L'\0' && i < MAX_MULTIPLE_FILES );

	cmp	WORD PTR [rax], r12w
	je	SHORT $LN34@tinyfd_ope
	cmp	edx, 1024				; 00000400H
	jl	SHORT $LL12@tinyfd_ope
$LN34@tinyfd_ope:

; 1744 : 
; 1745 : 				if (i > MAX_MULTIPLE_FILES)

	cmp	edx, 1024				; 00000400H
	jle	SHORT $LN35@tinyfd_ope

; 1746 : 				{
; 1747 : 						free(lBuff);

	mov	rcx, rdi

; 1748 : 						lBuff = NULL;
; 1749 : 				}

	jmp	$LN240@tinyfd_ope
$LN35@tinyfd_ope:

; 1750 : 				else
; 1751 : 				{
; 1752 : 						i--;
; 1753 : 						p = lBuff + lFullBuffLen - 1;

	lea	rbx, QWORD PTR [rsi-1]

; 1754 : 						*p = L'\0';

	mov	WORD PTR [rdi+rbx*2], r12w
	lea	rbx, QWORD PTR [rdi+rbx*2]

; 1755 : 						for (j = i; j >= 0; j--)

	test	r14d, r14d
	js	SHORT $LN14@tinyfd_ope
	lea	rsi, QWORD PTR [r14*8]
	npad	4
$LL15@tinyfd_ope:

; 1756 : 						{
; 1757 : 								p -= lLengths[j];

	mov	r8, QWORD PTR lLengths$[rsp+rsi]

; 1758 : 								memmove(p, lPointers[j], lLengths[j] * sizeof(wchar_t));

	mov	rdx, QWORD PTR lPointers$[rbp+rsi-256]
	add	r8, r8
	sub	rbx, r8
	mov	rcx, rbx
	call	memmove

; 1759 : 								p--;

	sub	rbx, 2

; 1760 : 								*p = L'\\';
; 1761 : 								p -= lBuffLen;
; 1762 : 								memmove(p, lBuff, lBuffLen*sizeof(wchar_t));

	mov	r8, r15
	mov	rdx, rdi
	mov	WORD PTR [rbx], 92			; 0000005cH
	sub	rbx, r15
	mov	rcx, rbx
	call	memmove

; 1763 : 								p--;

	sub	rbx, 2
	lea	rsi, QWORD PTR [rsi-8]
	sub	r14d, 1

; 1764 : 								*p = L'|';

	mov	WORD PTR [rbx], 124			; 0000007cH
	jns	SHORT $LL15@tinyfd_ope
	mov	r9, -1
$LN14@tinyfd_ope:

; 1765 : 						}
; 1766 : 						p++;

	add	rbx, 2

; 1767 : 						wcscpy(lBuff, p);

	mov	rcx, rdi
	sub	rcx, rbx
	npad	7
$LL45@tinyfd_ope:
	movzx	eax, WORD PTR [rbx]
	mov	WORD PTR [rbx+rcx], ax
	lea	rbx, QWORD PTR [rbx+2]
	test	ax, ax
	jne	SHORT $LL45@tinyfd_ope

; 1768 : 						lBuffLen = wcslen(lBuff);

	mov	rcx, r9
$LL122@tinyfd_ope:
	inc	rcx
	cmp	WORD PTR [rdi+rcx*2], r12w
	jne	SHORT $LL122@tinyfd_ope
$LN36@tinyfd_ope:

; 1769 : 				}
; 1770 : 			}
; 1771 : 			if (lBuff) lBuff = (wchar_t*)(realloc(lBuff, (lBuffLen + 1) * sizeof(wchar_t)));

	test	rdi, rdi
	je	SHORT $LN37@tinyfd_ope
	inc	rcx
	mov	eax, 2
	mul	rcx
	mov	rcx, rdi
	cmovo	rax, r9
	mov	rdx, rax
	call	QWORD PTR __imp_realloc
	mov	rdi, rax
	mov	QWORD PTR ?lBuff@?1??tinyfd_openFileDialogW@@9@9, rax
$LN37@tinyfd_ope:

; 1772 : 		}
; 1773 : 
; 1774 : 		if (lHResult == S_OK || lHResult == S_FALSE)

	cmp	DWORD PTR lHResult$1$[rsp], 1
	ja	SHORT $LN38@tinyfd_ope

; 1775 : 		{
; 1776 : 			CoUninitialize();

	call	QWORD PTR __imp_CoUninitialize
	mov	rdi, QWORD PTR ?lBuff@?1??tinyfd_openFileDialogW@@9@9
$LN38@tinyfd_ope:

; 1777 : 		}
; 1778 : 
; 1779 : 		return lBuff;

	mov	rax, rdi
	jmp	SHORT $LN1@tinyfd_ope
$LN116@tinyfd_ope:

; 1664 : 		}
; 1665 : 		if (!lBuff) return NULL;

	xor	eax, eax
$LN1@tinyfd_ope:

; 1780 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 22792				; 00005908H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
tinyfd_openFileDialogW ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT BrowseCallbackProcW_enum
_TEXT	SEGMENT
buf$ = 32
__$ArrayPad$ = 544
hWndChild$ = 576
lParam$ = 584
BrowseCallbackProcW_enum PROC				; COMDAT

; 1784 : {

$LN9:
	push	rbx
	sub	rsp, 560				; 00000230H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 1785 : 	wchar_t buf[255];
; 1786 : 	GetClassNameW(hWndChild, buf, sizeof(buf));

	mov	r8d, 510				; 000001feH
	lea	rdx, QWORD PTR buf$[rsp]
	mov	rbx, rcx
	call	QWORD PTR __imp_GetClassNameW

; 1787 : 	if (wcscmp(buf, L"SysTreeView32") == 0)

	lea	rdx, QWORD PTR buf$[rsp]
	xor	eax, eax
	lea	r8, OFFSET FLAT:??_C@_1BM@POPPCGII@?$AAS?$AAy?$AAs?$AAT?$AAr?$AAe?$AAe?$AAV?$AAi?$AAe?$AAw?$AA3?$AA2@
	npad	3
$LL4@BrowseCall:
	movzx	ecx, WORD PTR [rdx+rax*2]
	cmp	cx, WORD PTR [r8+rax*2]
	jne	SHORT $LN2@BrowseCall
	movzx	ecx, WORD PTR [rdx+rax*2+2]
	cmp	cx, WORD PTR [r8+rax*2+2]
	jne	SHORT $LN2@BrowseCall
	add	rax, 2
	cmp	rax, 14
	jne	SHORT $LL4@BrowseCall

; 1788 : 	{
; 1789 : 		HTREEITEM hNode = TreeView_GetSelection(hWndChild);

	xor	r9d, r9d
	lea	r8d, QWORD PTR [rax-5]
	mov	edx, 4362				; 0000110aH
	mov	rcx, rbx
	call	QWORD PTR __imp_SendMessageW

; 1790 : 		TreeView_EnsureVisible(hWndChild, hNode);

	xor	r8d, r8d
	mov	edx, 4372				; 00001114H
	mov	r9, rax
	mov	rcx, rbx
	call	QWORD PTR __imp_SendMessageW

; 1791 : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@BrowseCall
$LN2@BrowseCall:

; 1792 : 	}
; 1793 : 	return TRUE;

	mov	eax, 1
$LN1@BrowseCall:

; 1794 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 560				; 00000230H
	pop	rbx
	ret	0
BrowseCallbackProcW_enum ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT BrowseCallbackProcW
_TEXT	SEGMENT
hwnd$ = 48
uMsg$ = 56
lp$ = 64
pData$ = 72
BrowseCallbackProcW PROC				; COMDAT

; 1798 : {

	sub	rsp, 40					; 00000028H

; 1799 : 	switch (uMsg)

	sub	edx, 1
	je	SHORT $LN4@BrowseCall
	cmp	edx, 1
	jne	SHORT $LN8@BrowseCall

; 1803 : 			break;
; 1804 : 		case BFFM_SELCHANGED:
; 1805 : 			EnumChildWindows(hwnd, BrowseCallbackProcW_enum, 0);

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:BrowseCallbackProcW_enum
	call	QWORD PTR __imp_EnumChildWindows

; 1806 : 	}
; 1807 : 	return 0;
; 1808 : }

	xor	eax, eax
	add	rsp, 40					; 00000028H
	ret	0
$LN4@BrowseCall:

; 1800 : 	{
; 1801 : 		case BFFM_INITIALIZED:
; 1802 : 			SendMessage(hwnd, BFFM_SETSELECTIONW, TRUE, (LPARAM)pData);

	mov	edx, 1127				; 00000467H
	mov	r8d, 1
	call	QWORD PTR __imp_SendMessageW
$LN8@BrowseCall:

; 1806 : 	}
; 1807 : 	return 0;
; 1808 : }

	xor	eax, eax
	add	rsp, 40					; 00000028H
	ret	0
BrowseCallbackProcW ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT inputBoxWinGui
_TEXT	SEGMENT
lTitle$ = 32
lDefaultInput$ = 288
__$ArrayPad$ = 2336
aoBuff$dead$ = 2400
aTitle$ = 2408
aMessage$ = 2416
aDefaultInput$ = 2424
inputBoxWinGui PROC					; COMDAT

; 2015 : {

	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 2352				; 00000930H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, r8

; 2016 : 		wchar_t lTitle[128] = L"";

	lea	rcx, QWORD PTR lTitle$[rsp+2]
	mov	r14, rdx
	xor	esi, esi
	xor	edx, edx
	mov	WORD PTR lTitle$[rsp], si
	mov	r8d, 254				; 000000feH
	mov	rbp, r9
	call	memset

; 2017 : 		wchar_t * lMessage = NULL;
; 2018 : 		wchar_t lDefaultInput[MAX_PATH_OR_CMD] = L"";

	xor	edx, edx
	mov	WORD PTR lDefaultInput$[rsp], si
	mov	r8d, 2046				; 000007feH
	lea	rcx, QWORD PTR lDefaultInput$[rsp+2]
	mov	edi, esi
	call	memset

; 2019 : 		wchar_t * lTmpWChar;
; 2020 : 		char * lTmpChar;
; 2021 : 
; 2022 : 		if (aTitle)

	test	r14, r14
	je	SHORT $LN2@inputBoxWi

; 2023 : 		{
; 2024 : 				if (tinyfd_winUtf8) lTmpWChar = tinyfd_utf8to16(aTitle);

	mov	rcx, r14
	call	tinyfd_utf8to16

; 2025 : 				else lTmpWChar = tinyfd_mbcsTo16(aTitle);
; 2026 : 				wcscpy(lTitle, lTmpWChar);

	lea	r8, QWORD PTR lTitle$[rsp]
	mov	rdx, rax
	sub	r8, rax
	npad	7
$LL17@inputBoxWi:
	movzx	eax, WORD PTR [rdx]
	mov	WORD PTR [r8+rdx], ax
	lea	rdx, QWORD PTR [rdx+2]
	test	ax, ax
	jne	SHORT $LL17@inputBoxWi
$LN2@inputBoxWi:

; 2027 : 		}
; 2028 : 		if (aMessage)

	test	rbx, rbx
	je	SHORT $LN8@inputBoxWi

; 2029 : 		{
; 2030 : 				if (tinyfd_winUtf8) lTmpWChar = tinyfd_utf8to16(aMessage);

	mov	rcx, rbx
	call	tinyfd_utf8to16

; 2031 : 				else lTmpWChar = tinyfd_mbcsTo16(aMessage);
; 2032 : 				lMessage = (wchar_t *) malloc((wcslen(lTmpWChar) + 1)* sizeof(wchar_t));

	mov	r8, -1
	mov	rbx, rax
	mov	rcx, r8
	npad	5
$LL33@inputBoxWi:
	inc	rcx
	cmp	WORD PTR [rax+rcx*2], si
	jne	SHORT $LL33@inputBoxWi
	inc	rcx
	mov	eax, 2
	mul	rcx
	cmovo	rax, r8
	mov	rcx, rax
	call	QWORD PTR __imp_malloc
	mov	rdi, rax

; 2033 : 	  if (lMessage) wcscpy(lMessage, lTmpWChar);

	test	rax, rax
	je	SHORT $LN8@inputBoxWi
	mov	r8, rax
	sub	r8, rbx
	npad	1
$LL18@inputBoxWi:
	movzx	edx, WORD PTR [rbx]
	mov	WORD PTR [r8+rbx], dx
	lea	rbx, QWORD PTR [rbx+2]
	test	dx, dx
	jne	SHORT $LL18@inputBoxWi
$LN8@inputBoxWi:

; 2034 : 		}
; 2035 : 		if (aDefaultInput)

	test	rbp, rbp
	je	SHORT $LN9@inputBoxWi

; 2036 : 		{
; 2037 : 				if (tinyfd_winUtf8) lTmpWChar = tinyfd_utf8to16(aDefaultInput);

	mov	rcx, rbp
	call	tinyfd_utf8to16

; 2038 : 				else lTmpWChar = tinyfd_mbcsTo16(aDefaultInput);
; 2039 : 				wcscpy(lDefaultInput, lTmpWChar);

	lea	rdx, QWORD PTR lDefaultInput$[rsp]
	sub	rdx, rax
	npad	7
$LL19@inputBoxWi:
	movzx	ecx, WORD PTR [rax]
	mov	WORD PTR [rdx+rax], cx
	lea	rax, QWORD PTR [rax+2]
	test	cx, cx
	jne	SHORT $LL19@inputBoxWi

; 2040 : 		lTmpWChar = tinyfd_inputBoxW(lTitle, lMessage, lDefaultInput);

	lea	rsi, QWORD PTR lDefaultInput$[rsp]
$LN9@inputBoxWi:

; 2041 : 		}
; 2042 : 	else lTmpWChar = tinyfd_inputBoxW(lTitle, lMessage, NULL);
; 2043 : 
; 2044 : 		free(lMessage);

	mov	r8, rsi
	lea	rcx, QWORD PTR lTitle$[rsp]
	mov	rdx, rdi
	call	tinyfd_inputBoxW
	mov	rcx, rdi
	mov	rbx, rax
	call	QWORD PTR __imp_free

; 2045 : 
; 2046 : 		if (!lTmpWChar)

	test	rbx, rbx
	jne	SHORT $LN13@inputBoxWi

; 2047 : 		{
; 2048 : 				aoBuff[0] = '\0';

	mov	BYTE PTR ?lBuff@?1??tinyfd_inputBox@@9@9, bl

; 2049 : 				return 0;

	xor	eax, eax
	jmp	SHORT $LN1@inputBoxWi
$LN13@inputBoxWi:

; 2050 : 		}
; 2051 : 
; 2052 : 		if (tinyfd_winUtf8) lTmpChar = tinyfd_utf16to8(lTmpWChar);

	mov	rcx, rbx
	call	tinyfd_utf16to8

; 2053 : 		else lTmpChar = tinyfd_utf16toMbcs(lTmpWChar);
; 2054 : 
; 2055 : 		strcpy(aoBuff, lTmpChar);

	lea	rdx, OFFSET FLAT:?lBuff@?1??tinyfd_inputBox@@9@9
	sub	rdx, rax
	npad	11
$LL20@inputBoxWi:
	movzx	ecx, BYTE PTR [rax]
	mov	BYTE PTR [rdx+rax], cl
	lea	rax, QWORD PTR [rax+1]
	test	cl, cl
	jne	SHORT $LL20@inputBoxWi

; 2056 : 
; 2057 : 		return 1;

	mov	eax, 1
$LN1@inputBoxWi:

; 2058 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 2352				; 00000930H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
inputBoxWinGui ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT openFileDialogWinGui
_TEXT	SEGMENT
tv476 = 56
aSingleFilterDescription$GSCopy$1$ = 64
lSingleFilterDescription$ = 80
lTitle$ = 336
lDefaultPathAndFile$ = 592
__$ArrayPad$ = 2640
aTitle$ = 2736
aDefaultPathAndFile$ = 2744
aNumOfFilterPatterns$ = 2752
aFilterPatterns$ = 2760
aSingleFilterDescription$ = 2768
aAllowMultipleSelects$dead$ = 2776
openFileDialogWinGui PROC				; COMDAT

; 2140 : {

	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 2664				; 00000a68H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, QWORD PTR aSingleFilterDescription$[rsp]
	mov	r13, rdx
	movsxd	rdi, r8d
	mov	r12, rcx

; 2141 : 		wchar_t lTitle[128] = L"";

	xor	esi, esi
	mov	QWORD PTR aSingleFilterDescription$GSCopy$1$[rsp], rbx
	xor	edx, edx
	mov	WORD PTR lTitle$[rsp], si
	mov	r8d, 254				; 000000feH
	lea	rcx, QWORD PTR lTitle$[rsp+2]
	mov	r15, r9
	call	memset

; 2142 : 		wchar_t lDefaultPathAndFile[MAX_PATH_OR_CMD] = L"";

	xor	edx, edx
	mov	WORD PTR lDefaultPathAndFile$[rsp], si
	mov	r8d, 2046				; 000007feH
	lea	rcx, QWORD PTR lDefaultPathAndFile$[rsp+2]
	call	memset

; 2143 : 		wchar_t lSingleFilterDescription[128] = L"";

	xor	edx, edx
	mov	WORD PTR lSingleFilterDescription$[rsp], si
	mov	r8d, 254				; 000000feH
	lea	rcx, QWORD PTR lSingleFilterDescription$[rsp+2]
	call	memset

; 2144 : 		wchar_t * * lFilterPatterns;
; 2145 : 		wchar_t * lTmpWChar;
; 2146 : 		char * lTmpChar;
; 2147 : 		int i;
; 2148 : 
; 2149 : 		lFilterPatterns = (wchar_t * *)malloc(aNumOfFilterPatterns*sizeof(wchar_t *));

	mov	eax, 8
	mov	QWORD PTR tv476[rsp], rdi
	mul	rdi
	mov	rsi, -1
	mov	rbp, rdi
	cmovo	rax, rsi
	mov	rcx, rax
	call	QWORD PTR __imp_malloc
	mov	r14, rax

; 2150 : 		for (i = 0; i < aNumOfFilterPatterns; i++)

	test	edi, edi
	jle	$LN3@openFileDi
	mov	rsi, rbp
	mov	rdi, rax
	mov	rbp, -1
	sub	r15, rax
$LL4@openFileDi:

; 2151 : 		{
; 2152 : 				if (tinyfd_winUtf8) lTmpWChar = tinyfd_utf8to16(aFilterPatterns[i]);

	mov	rcx, QWORD PTR [r15+rdi]
	call	tinyfd_utf8to16
	mov	rbx, rax

; 2153 : 				else lTmpWChar = tinyfd_mbcsTo16(aFilterPatterns[i]);
; 2154 : 				lFilterPatterns[i] = (wchar_t *)malloc((wcslen(lTmpWChar) + 1)*sizeof(wchar_t *));

	mov	rcx, rbp
$LL48@openFileDi:
	inc	rcx
	cmp	WORD PTR [rax+rcx*2], 0
	jne	SHORT $LL48@openFileDi
	inc	rcx
	mov	eax, 8
	mul	rcx
	cmovo	rax, rbp
	mov	rcx, rax
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR [rdi], rax

; 2155 : 	  if (lFilterPatterns[i]) wcscpy(lFilterPatterns[i], lTmpWChar);

	test	rax, rax
	je	SHORT $LN2@openFileDi
	npad	6
$LL24@openFileDi:
	movzx	edx, WORD PTR [rbx]
	lea	rbx, QWORD PTR [rbx+2]
	mov	WORD PTR [rax], dx
	lea	rax, QWORD PTR [rax+2]
	test	dx, dx
	jne	SHORT $LL24@openFileDi
$LN2@openFileDi:

; 2150 : 		for (i = 0; i < aNumOfFilterPatterns; i++)

	add	rdi, 8
	sub	rsi, 1
	jne	SHORT $LL4@openFileDi
	mov	rbp, QWORD PTR tv476[rsp]
	mov	rsi, -1
	mov	rbx, QWORD PTR aSingleFilterDescription$GSCopy$1$[rsp]
	mov	edi, ebp
$LN3@openFileDi:

; 2156 : 		}
; 2157 : 
; 2158 : 		if (aTitle)

	test	r12, r12
	je	SHORT $LN11@openFileDi

; 2159 : 		{
; 2160 : 				if (tinyfd_winUtf8) lTmpWChar = tinyfd_utf8to16(aTitle);

	mov	rcx, r12
	call	tinyfd_utf8to16

; 2161 : 				else lTmpWChar = tinyfd_mbcsTo16(aTitle);
; 2162 : 				wcscpy(lTitle, lTmpWChar);

	lea	r8, QWORD PTR lTitle$[rsp]
	sub	r8, rax
	npad	8
$LL25@openFileDi:
	movzx	edx, WORD PTR [rax]
	mov	WORD PTR [r8+rax], dx
	lea	rax, QWORD PTR [rax+2]
	test	dx, dx
	jne	SHORT $LL25@openFileDi
$LN11@openFileDi:

; 2163 : 		}
; 2164 : 		if (aDefaultPathAndFile)

	test	r13, r13
	je	SHORT $LN14@openFileDi

; 2165 : 		{
; 2166 : 				if (tinyfd_winUtf8) lTmpWChar = tinyfd_utf8to16(aDefaultPathAndFile);

	mov	rcx, r13
	call	tinyfd_utf8to16

; 2167 : 				else lTmpWChar = tinyfd_mbcsTo16(aDefaultPathAndFile);
; 2168 : 				wcscpy(lDefaultPathAndFile, lTmpWChar);

	lea	r8, QWORD PTR lDefaultPathAndFile$[rsp]
	sub	r8, rax
	npad	7
$LL26@openFileDi:
	movzx	edx, WORD PTR [rax]
	mov	WORD PTR [r8+rax], dx
	lea	rax, QWORD PTR [rax+2]
	test	dx, dx
	jne	SHORT $LL26@openFileDi
$LN14@openFileDi:

; 2169 : 		}
; 2170 : 		if (aSingleFilterDescription)

	test	rbx, rbx
	je	SHORT $LN17@openFileDi

; 2171 : 		{
; 2172 : 				if (tinyfd_winUtf8) lTmpWChar = tinyfd_utf8to16(aSingleFilterDescription);

	mov	rcx, rbx
	call	tinyfd_utf8to16

; 2173 : 				else lTmpWChar = tinyfd_mbcsTo16(aSingleFilterDescription);
; 2174 : 				wcscpy(lSingleFilterDescription, lTmpWChar);

	lea	rdx, QWORD PTR lSingleFilterDescription$[rsp]
	sub	rdx, rax
	npad	10
$LL27@openFileDi:
	movzx	ecx, WORD PTR [rax]
	mov	WORD PTR [rdx+rax], cx
	lea	rax, QWORD PTR [rax+2]
	test	cx, cx
	jne	SHORT $LL27@openFileDi
$LN17@openFileDi:

; 2175 : 		}
; 2176 : 
; 2177 : 		lTmpWChar = tinyfd_openFileDialogW(

	lea	rax, QWORD PTR lSingleFilterDescription$[rsp]
	xor	r15d, r15d
	mov	DWORD PTR [rsp+40], r15d
	lea	rdx, QWORD PTR lDefaultPathAndFile$[rsp]
	mov	r9, r14
	mov	QWORD PTR [rsp+32], rax
	mov	r8d, edi
	lea	rcx, QWORD PTR lTitle$[rsp]
	call	tinyfd_openFileDialogW
	mov	rdi, rax

; 2178 : 				lTitle,
; 2179 : 				lDefaultPathAndFile,
; 2180 : 				aNumOfFilterPatterns,
; 2181 : 				(wchar_t const**) lFilterPatterns, /*stupid cast for gcc*/
; 2182 : 				lSingleFilterDescription,
; 2183 : 				aAllowMultipleSelects);
; 2184 : 
; 2185 : 		for (i = 0; i < aNumOfFilterPatterns; i++)

	test	rbp, rbp
	jle	SHORT $LN6@openFileDi
	mov	ebx, r15d
	npad	8
$LL7@openFileDi:

; 2186 : 		{
; 2187 : 				free(lFilterPatterns[i]);

	mov	rcx, QWORD PTR [r14+rbx*8]
	call	QWORD PTR __imp_free
	inc	rbx
	cmp	rbx, rbp
	jl	SHORT $LL7@openFileDi
$LN6@openFileDi:

; 2188 : 		}
; 2189 : 		free(lFilterPatterns);

	mov	rcx, r14
	call	QWORD PTR __imp_free

; 2190 : 
; 2191 : 		if (!lTmpWChar) return NULL;

	test	rdi, rdi
	jne	SHORT $LN20@openFileDi
	xor	eax, eax
	jmp	SHORT $LN1@openFileDi
$LN20@openFileDi:

; 2192 : 
; 2193 : 		if (tinyfd_winUtf8) lTmpChar = tinyfd_utf16to8(lTmpWChar);

	mov	rcx, rdi
	call	tinyfd_utf16to8

; 2194 : 		else lTmpChar = tinyfd_utf16toMbcs(lTmpWChar);
; 2195 : 		(void)tinyfd_openFileDialogW(NULL, NULL, 0, NULL, NULL, -1);

	xor	r9d, r9d
	mov	DWORD PTR [rsp+40], esi
	xor	r8d, r8d
	mov	QWORD PTR [rsp+32], r15
	xor	edx, edx
	xor	ecx, ecx
	mov	rbx, rax
	call	tinyfd_openFileDialogW

; 2196 : 
; 2197 : 		return lTmpChar;

	mov	rax, rbx
$LN1@openFileDi:

; 2198 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 2664				; 00000a68H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
openFileDialogWinGui ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT dialogPresent
_TEXT	SEGMENT
lBuff$ = 32
__$ArrayPad$ = 1056
dialogPresent PROC					; COMDAT

; 2287 : {

	sub	rsp, 1080				; 00000438H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 2288 : 		static int lDialogPresent = -1 ;
; 2289 : 		char lBuff[MAX_PATH_OR_CMD] ;
; 2290 : 		FILE * lIn ;
; 2291 : 		char const * lString = "dialog.exe";
; 2292 : 				if (!tinyfd_allowCursesDialogs) return 0;

	cmp	DWORD PTR tinyfd_allowCursesDialogs, 0
	jne	SHORT $LN4@dialogPres
	xor	eax, eax

; 2317 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1080				; 00000438H
	ret	0
$LN4@dialogPres:

; 2293 : 				if (lDialogPresent < 0)

	mov	ecx, DWORD PTR ?lDialogPresent@?1??dialogPresent@@9@9
	mov	QWORD PTR [rsp+1072], rbx
	test	ecx, ecx
	jns	$LN8@dialogPres

; 2294 : 		{
; 2295 : 				if (!(lIn = _popen("where dialog.exe","r")))

	lea	rdx, OFFSET FLAT:??_C@_01KDCPPGHE@r@
	lea	rcx, OFFSET FLAT:??_C@_0BB@BAPMEJCE@where?5dialog?4exe@
	call	QWORD PTR __imp__popen
	mov	rbx, rax
	test	rax, rax
	jne	SHORT $LL2@dialogPres

; 2296 : 				{
; 2297 : 						lDialogPresent = 0 ;

	xor	ecx, ecx
	mov	DWORD PTR ?lDialogPresent@?1??dialogPresent@@9@9, ecx

; 2298 : 						return 0 ;

	jmp	$LN39@dialogPres
	npad	5
$LL2@dialogPres:

; 2299 : 				}
; 2300 : 				while ( fgets( lBuff , sizeof( lBuff ) , lIn ) != NULL )

	mov	r8, rbx
	lea	rcx, QWORD PTR lBuff$[rsp]
	mov	edx, 1024				; 00000400H
	call	QWORD PTR __imp_fgets
	test	rax, rax
	jne	SHORT $LL2@dialogPres

; 2301 : 				{}
; 2302 : 				_pclose( lIn ) ;

	mov	rcx, rbx
	call	QWORD PTR __imp__pclose

; 2303 : 				if ( lBuff[strlen( lBuff ) -1] == '\n' )

	mov	rcx, -1
	lea	rdx, QWORD PTR lBuff$[rsp]
	mov	rax, rcx
$LL21@dialogPres:
	inc	rax
	cmp	BYTE PTR [rdx+rax], 0
	jne	SHORT $LL21@dialogPres
	cmp	BYTE PTR lBuff$[rsp+rax-1], 10
	jne	SHORT $LN7@dialogPres

; 2304 : 				{
; 2305 : 						lBuff[strlen( lBuff ) -1] = '\0' ;

	dec	rax
	cmp	rax, 1024				; 00000400H
	jae	SHORT $LN11@dialogPres
	mov	BYTE PTR lBuff$[rsp+rax], 0
$LN7@dialogPres:

; 2306 : 				}
; 2307 : 				if ( strcmp(lBuff+strlen(lBuff)-strlen(lString),lString) )

	lea	rax, QWORD PTR lBuff$[rsp]
$LL20@dialogPres:
	inc	rcx
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL20@dialogPres
	lea	rax, QWORD PTR lBuff$[rsp]
	sub	rax, 10
	lea	rdx, OFFSET FLAT:??_C@_0L@MNLFJHLA@dialog?4exe@
	add	rcx, rax
	call	strcmp
	xor	ecx, ecx
	test	eax, eax
	sete	cl
	mov	DWORD PTR ?lDialogPresent@?1??dialogPresent@@9@9, ecx
$LN8@dialogPres:

; 2308 : 				{
; 2309 : 						lDialogPresent = 0 ;
; 2310 : 				}
; 2311 : 				else
; 2312 : 				{
; 2313 : 						lDialogPresent = 1 ;
; 2314 : 				}
; 2315 : 		}
; 2316 : 				return lDialogPresent;

	mov	eax, ecx
$LN39@dialogPres:
	mov	rbx, QWORD PTR [rsp+1072]

; 2317 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1080				; 00000438H
	ret	0
$LN11@dialogPres:

; 2304 : 				{
; 2305 : 						lBuff[strlen( lBuff ) -1] = '\0' ;

	call	__report_rangecheckfailure
	int	3
$LN40@dialogPres:
dialogPresent ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT inputBoxWinConsole
_TEXT	SEGMENT
st$1 = 32
lDialogString$ = 80
lDialogFile$ = 1104
__$ArrayPad$ = 2128
aoBuff$dead$ = 2192
aTitle$ = 2200
aMessage$ = 2208
aDefaultInput$ = 2216
inputBoxWinConsole PROC					; COMDAT

; 2440 : {

	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r14
	lea	rbp, QWORD PTR [rsp-1888]
	sub	rsp, 2144				; 00000860H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax

; 2441 : 		char lDialogString[MAX_PATH_OR_CMD];
; 2442 : 		char lDialogFile[MAX_PATH_OR_CMD];
; 2443 : 		FILE * lIn;
; 2444 : 		int lResult;
; 2445 : 
; 2446 : 		strcpy(lDialogFile, getenv("TEMP"));

	lea	rcx, OFFSET FLAT:??_C@_04JKHNIKCB@TEMP@
	mov	r14, r9
	mov	rdi, r8
	mov	rbx, rdx
	call	QWORD PTR __imp_getenv
	lea	r8, QWORD PTR lDialogFile$[rbp-256]
	sub	r8, rax
	npad	9
$LL14@inputBoxWi:
	movzx	ecx, BYTE PTR [rax]
	mov	BYTE PTR [r8+rax], cl
	lea	rax, QWORD PTR [rax+1]
	test	cl, cl
	jne	SHORT $LL14@inputBoxWi

; 2447 : 		strcat(lDialogFile, "\\tinyfd.txt");

	lea	rcx, QWORD PTR lDialogFile$[rbp-256]
	dec	rcx
	npad	7
$LL89@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL89@inputBoxWi
	movsd	xmm0, QWORD PTR ??_C@_0M@JPCOHHM@?2tinyfd?4txt@
	mov	eax, DWORD PTR ??_C@_0M@JPCOHHM@?2tinyfd?4txt@+8
	movsd	QWORD PTR [rcx], xmm0

; 2448 : 		strcpy(lDialogString , "echo|set /p=1 >" ) ;

	movups	xmm0, XMMWORD PTR ??_C@_0BA@OKBGGIDD@echo?$HMset?5?1p?$DN1?5?$DO@
	mov	DWORD PTR [rcx+8], eax

; 2449 : 		strcat(lDialogString, lDialogFile);

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	movaps	XMMWORD PTR lDialogString$[rsp], xmm0
$LL87@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL87@inputBoxWi
	lea	r8, QWORD PTR lDialogFile$[rbp-256]
	xor	edx, edx
	npad	10
$LL88@inputBoxWi:
	movzx	eax, BYTE PTR [r8+rdx]
	mov	BYTE PTR [rcx+rdx], al
	lea	rdx, QWORD PTR [rdx+1]
	test	al, al
	jne	SHORT $LL88@inputBoxWi

; 2450 : 		strcat( lDialogString , " & " ) ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	8
$LL86@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL86@inputBoxWi
	mov	eax, DWORD PTR ??_C@_03NHMNJBCN@?5?$CG?5@
	mov	DWORD PTR [rcx], eax

; 2451 : 
; 2452 : 		strcat( lDialogString , "dialog " ) ;

	lea	rax, QWORD PTR lDialogString$[rsp]
	dec	rax
	npad	6
$LL85@inputBoxWi:
	cmp	BYTE PTR [rax+1], 0
	lea	rax, QWORD PTR [rax+1]
	jne	SHORT $LL85@inputBoxWi
	movsd	xmm0, QWORD PTR ??_C@_07PEGBNPAA@dialog?5@

; 2453 : 		if ( aTitle && strlen(aTitle) )

	mov	rsi, -1
	movzx	r8d, BYTE PTR ??_C@_02KOPDJAMB@?$CC?5@+2
	movzx	r9d, WORD PTR ??_C@_02KOPDJAMB@?$CC?5@
	movsd	QWORD PTR [rax], xmm0
	test	rbx, rbx
	je	$LN4@inputBoxWi
	mov	rax, rsi
	npad	7
$LL84@inputBoxWi:
	inc	rax
	cmp	BYTE PTR [rbx+rax], 0
	jne	SHORT $LL84@inputBoxWi
	test	rax, rax
	je	SHORT $LN4@inputBoxWi

; 2454 : 		{
; 2455 : 				strcat(lDialogString, "--title \"") ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
$LL83@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL83@inputBoxWi
	movsd	xmm0, QWORD PTR ??_C@_09LMCKDOCL@?9?9title?5?$CC@
	movzx	eax, WORD PTR ??_C@_09LMCKDOCL@?9?9title?5?$CC@+8
	movsd	QWORD PTR [rcx], xmm0
	mov	WORD PTR [rcx+8], ax

; 2456 : 				strcat(lDialogString, aTitle) ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	1
$LL81@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL81@inputBoxWi
	xor	edx, edx
	npad	4
$LL82@inputBoxWi:
	movzx	eax, BYTE PTR [rbx+rdx]
	mov	BYTE PTR [rcx+rdx], al
	lea	rdx, QWORD PTR [rdx+1]
	test	al, al
	jne	SHORT $LL82@inputBoxWi

; 2457 : 				strcat(lDialogString, "\" ") ;

	lea	rax, QWORD PTR lDialogString$[rsp]
	dec	rax
	npad	9
$LL80@inputBoxWi:
	cmp	BYTE PTR [rax+1], 0
	lea	rax, QWORD PTR [rax+1]
	jne	SHORT $LL80@inputBoxWi
	mov	WORD PTR [rax], r9w
	mov	BYTE PTR [rax+2], r8b
$LN4@inputBoxWi:

; 2458 : 		}
; 2459 : 
; 2460 : 		strcat(lDialogString, "--backtitle \"") ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	6
$LL79@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL79@inputBoxWi
	mov	eax, DWORD PTR ??_C@_0O@HIBPPKGD@?9?9backtitle?5?$CC@+8
	movsd	xmm0, QWORD PTR ??_C@_0O@HIBPPKGD@?9?9backtitle?5?$CC@
	movsd	QWORD PTR [rcx], xmm0
	mov	DWORD PTR [rcx+8], eax
	movzx	eax, WORD PTR ??_C@_0O@HIBPPKGD@?9?9backtitle?5?$CC@+12
	mov	WORD PTR [rcx+12], ax

; 2461 : 		strcat(lDialogString, "tab: move focus") ;

	lea	rax, QWORD PTR lDialogString$[rsp]
	dec	rax
$LL78@inputBoxWi:
	cmp	BYTE PTR [rax+1], 0
	lea	rax, QWORD PTR [rax+1]
	jne	SHORT $LL78@inputBoxWi
	movups	xmm0, XMMWORD PTR ??_C@_0BA@HOKFLDCM@tab?3?5move?5focus@
	movups	XMMWORD PTR [rax], xmm0

; 2462 : 		if ( ! aDefaultInput )

	lea	rax, QWORD PTR lDialogString$[rsp]
	dec	rax
	test	r14, r14
	jne	$LL74@inputBoxWi
	npad	9
$LL77@inputBoxWi:

; 2463 : 		{
; 2464 : 				strcat(lDialogString, " (sometimes nothing, no blink nor star, is shown in text field)") ;

	cmp	BYTE PTR [rax+1], 0
	lea	rax, QWORD PTR [rax+1]
	jne	SHORT $LL77@inputBoxWi
	movaps	xmm0, XMMWORD PTR ??_C@_0EA@LHJOGAKC@?5?$CIsometimes?5nothing?0?5no?5blink?5n@
	movaps	xmm1, XMMWORD PTR ??_C@_0EA@LHJOGAKC@?5?$CIsometimes?5nothing?0?5no?5blink?5n@+16
	movups	XMMWORD PTR [rax], xmm0
	movaps	xmm0, XMMWORD PTR ??_C@_0EA@LHJOGAKC@?5?$CIsometimes?5nothing?0?5no?5blink?5n@+32
	movups	XMMWORD PTR [rax+16], xmm1
	movaps	xmm1, XMMWORD PTR ??_C@_0EA@LHJOGAKC@?5?$CIsometimes?5nothing?0?5no?5blink?5n@+48
	movups	XMMWORD PTR [rax+32], xmm0
	movups	XMMWORD PTR [rax+48], xmm1
	lea	rax, QWORD PTR lDialogString$[rsp]
	dec	rax
	npad	3
$LL76@inputBoxWi:
	cmp	BYTE PTR [rax+1], 0
	lea	rax, QWORD PTR [rax+1]
	jne	SHORT $LL76@inputBoxWi

; 2468 : 
; 2469 : 		if ( ! aDefaultInput )
; 2470 : 		{
; 2471 : 				strcat( lDialogString , "--insecure --passwordbox" ) ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	mov	WORD PTR [rax], r9w
	dec	rcx
	mov	BYTE PTR [rax+2], r8b
	npad	6
$LL75@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL75@inputBoxWi
	movups	xmm0, XMMWORD PTR ??_C@_0BJ@OHOAAMAP@?9?9insecure?5?9?9passwordbox@
	movzx	eax, BYTE PTR ??_C@_0BJ@OHOAAMAP@?9?9insecure?5?9?9passwordbox@+24
	movups	XMMWORD PTR [rcx], xmm0
	movsd	xmm0, QWORD PTR ??_C@_0BJ@OHOAAMAP@?9?9insecure?5?9?9passwordbox@+16
	movsd	QWORD PTR [rcx+16], xmm0
	mov	BYTE PTR [rcx+24], al

; 2472 : 		}

	jmp	SHORT $LN7@inputBoxWi
	npad	3
$LL74@inputBoxWi:

; 2465 : 		}
; 2466 : 
; 2467 : 		strcat(lDialogString, "\" ") ;

	cmp	BYTE PTR [rax+1], 0
	lea	rax, QWORD PTR [rax+1]
	jne	SHORT $LL74@inputBoxWi

; 2473 : 		else
; 2474 : 		{
; 2475 : 				strcat( lDialogString , "--inputbox" ) ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	mov	WORD PTR [rax], r9w
	dec	rcx
	mov	BYTE PTR [rax+2], r8b
	npad	6
$LL73@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL73@inputBoxWi
	movzx	eax, WORD PTR ??_C@_0L@NIOFMLOI@?9?9inputbox@+8
	movsd	xmm0, QWORD PTR ??_C@_0L@NIOFMLOI@?9?9inputbox@
	movsd	QWORD PTR [rcx], xmm0
	mov	WORD PTR [rcx+8], ax
	movzx	eax, BYTE PTR ??_C@_0L@NIOFMLOI@?9?9inputbox@+10
	mov	BYTE PTR [rcx+10], al
$LN7@inputBoxWi:

; 2476 : 		}
; 2477 : 		strcat( lDialogString , " \"" ) ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
$LL72@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL72@inputBoxWi
	movzx	eax, WORD PTR ??_C@_02JPEBCGCN@?5?$CC@
	mov	WORD PTR [rcx], ax
	movzx	eax, BYTE PTR ??_C@_02JPEBCGCN@?5?$CC@+2
	mov	BYTE PTR [rcx+2], al

; 2478 : 		if ( aMessage && strlen(aMessage) )

	test	rdi, rdi
	je	SHORT $LN8@inputBoxWi
	mov	rax, rsi
	npad	7
$LL71@inputBoxWi:
	inc	rax
	cmp	BYTE PTR [rdi+rax], 0
	jne	SHORT $LL71@inputBoxWi
	test	rax, rax
	je	SHORT $LN8@inputBoxWi

; 2479 : 		{
; 2480 : 				strcat(lDialogString, aMessage) ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
$LL69@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL69@inputBoxWi
	xor	edx, edx
	npad	14
$LL70@inputBoxWi:
	movzx	eax, BYTE PTR [rdi+rdx]
	mov	BYTE PTR [rcx+rdx], al
	lea	rdx, QWORD PTR [rdx+1]
	test	al, al
	jne	SHORT $LL70@inputBoxWi
$LN8@inputBoxWi:

; 2481 : 		}
; 2482 : 		strcat(lDialogString,"\" 10 60 ") ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	9
$LL68@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL68@inputBoxWi
	movsd	xmm0, QWORD PTR ??_C@_08ODIHMDCC@?$CC?510?560?5@
	movzx	eax, BYTE PTR ??_C@_08ODIHMDCC@?$CC?510?560?5@+8
	movsd	QWORD PTR [rcx], xmm0
	mov	BYTE PTR [rcx+8], al

; 2483 : 		if ( aDefaultInput && strlen(aDefaultInput) )

	test	r14, r14
	je	$LN9@inputBoxWi
	mov	rax, rsi
	npad	4
$LL67@inputBoxWi:
	inc	rax
	cmp	BYTE PTR [r14+rax], 0
	jne	SHORT $LL67@inputBoxWi
	test	rax, rax
	je	SHORT $LN9@inputBoxWi

; 2484 : 		{
; 2485 : 				strcat(lDialogString, "\"") ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	9
$LL66@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL66@inputBoxWi
	movzx	eax, WORD PTR ??_C@_01BJJEKLCA@?$CC@
	mov	WORD PTR [rcx], ax

; 2486 : 				strcat(lDialogString, aDefaultInput) ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	4
$LL64@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL64@inputBoxWi
	xor	edx, edx
	npad	4
$LL65@inputBoxWi:
	movzx	eax, BYTE PTR [r14+rdx]
	mov	BYTE PTR [rcx+rdx], al
	lea	rdx, QWORD PTR [rdx+1]
	test	al, al
	jne	SHORT $LL65@inputBoxWi

; 2487 : 				strcat(lDialogString, "\" ") ;

	lea	rax, QWORD PTR lDialogString$[rsp]
	dec	rax
	npad	8
$LL63@inputBoxWi:
	cmp	BYTE PTR [rax+1], 0
	lea	rax, QWORD PTR [rax+1]
	jne	SHORT $LL63@inputBoxWi
	mov	WORD PTR [rax], r9w
	mov	BYTE PTR [rax+2], r8b
$LN9@inputBoxWi:

; 2488 : 		}
; 2489 : 
; 2490 : 		strcat(lDialogString, "2>>");

	lea	rdx, QWORD PTR lDialogString$[rsp]
	dec	rdx
	npad	6
$LL62@inputBoxWi:
	cmp	BYTE PTR [rdx+1], 0
	lea	rdx, QWORD PTR [rdx+1]
	jne	SHORT $LL62@inputBoxWi
	mov	eax, DWORD PTR ??_C@_03OLKJMDCO@2?$DO?$DO@

; 2491 : 		strcpy(lDialogFile, getenv("TEMP"));

	lea	rcx, OFFSET FLAT:??_C@_04JKHNIKCB@TEMP@
	mov	DWORD PTR [rdx], eax
	call	QWORD PTR __imp_getenv
	lea	rdx, QWORD PTR lDialogFile$[rbp-256]
	sub	rdx, rax
	npad	7
$LL15@inputBoxWi:
	movzx	ecx, BYTE PTR [rax]
	mov	BYTE PTR [rdx+rax], cl
	lea	rax, QWORD PTR [rax+1]
	test	cl, cl
	jne	SHORT $LL15@inputBoxWi

; 2492 : 		strcat(lDialogFile, "\\tinyfd.txt");

	lea	rcx, QWORD PTR lDialogFile$[rbp-256]
	dec	rcx
	npad	8
$LL61@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL61@inputBoxWi
	movsd	xmm0, QWORD PTR ??_C@_0M@JPCOHHM@?2tinyfd?4txt@
	mov	eax, DWORD PTR ??_C@_0M@JPCOHHM@?2tinyfd?4txt@+8
	movsd	QWORD PTR [rcx], xmm0
	mov	DWORD PTR [rcx+8], eax

; 2493 : 		strcat(lDialogString, lDialogFile);

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	9
$LL59@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL59@inputBoxWi
	lea	r8, QWORD PTR lDialogFile$[rbp-256]
	xor	edx, edx
	npad	13
$LL60@inputBoxWi:
	movzx	eax, BYTE PTR [r8+rdx]
	mov	BYTE PTR [rcx+rdx], al
	lea	rdx, QWORD PTR [rdx+1]
	test	al, al
	jne	SHORT $LL60@inputBoxWi

; 2494 : 		strcat(lDialogString, " || echo 0 > ");

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	8
$LL58@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL58@inputBoxWi
	mov	eax, DWORD PTR ??_C@_0O@PFKMHDNM@?5?$HM?$HM?5echo?50?5?$DO?5@+8
	movsd	xmm0, QWORD PTR ??_C@_0O@PFKMHDNM@?5?$HM?$HM?5echo?50?5?$DO?5@
	movsd	QWORD PTR [rcx], xmm0
	mov	DWORD PTR [rcx+8], eax
	movzx	eax, WORD PTR ??_C@_0O@PFKMHDNM@?5?$HM?$HM?5echo?50?5?$DO?5@+12
	mov	WORD PTR [rcx+12], ax

; 2495 : 		strcat(lDialogString, lDialogFile);

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
$LL56@inputBoxWi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL56@inputBoxWi
	lea	r8, QWORD PTR lDialogFile$[rbp-256]
	xor	edx, edx
	npad	11
$LL57@inputBoxWi:
	movzx	eax, BYTE PTR [r8+rdx]
	mov	BYTE PTR [rcx+rdx], al
	lea	rdx, QWORD PTR [rdx+1]
	test	al, al
	jne	SHORT $LL57@inputBoxWi

; 2496 : 
; 2497 : 		/* printf( "lDialogString: %s\n" , lDialogString ) ; */
; 2498 : 		system( lDialogString ) ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	call	QWORD PTR __imp_system

; 2499 : 
; 2500 : 		if (!(lIn = fopen(lDialogFile, "r")))

	lea	rdx, OFFSET FLAT:??_C@_01KDCPPGHE@r@
	lea	rcx, QWORD PTR lDialogFile$[rbp-256]
	call	QWORD PTR __imp_fopen
	mov	rbx, rax
	test	rax, rax
	jne	SHORT $LN94@inputBoxWi

; 2501 : 		{
; 2502 : 				remove(lDialogFile);

	lea	rcx, QWORD PTR lDialogFile$[rbp-256]
	call	QWORD PTR __imp_remove
$LN151@inputBoxWi:

; 2529 : }

	mov	BYTE PTR ?lBuff@?1??tinyfd_inputBox@@9@9, 0
	xor	eax, eax
	jmp	$LN1@inputBoxWi
$LN94@inputBoxWi:
	lea	r14, OFFSET FLAT:?lBuff@?1??tinyfd_inputBox@@9@9
	npad	7
$LL2@inputBoxWi:

; 2503 : 								aoBuff[0] = '\0';
; 2504 : 								return 0;
; 2505 : 		}
; 2506 : 		while (fgets(aoBuff, MAX_PATH_OR_CMD, lIn) != NULL)

	mov	r8, rbx
	mov	edx, 1024				; 00000400H
	mov	rcx, r14
	call	QWORD PTR __imp_fgets
	test	rax, rax
	jne	SHORT $LL2@inputBoxWi

; 2507 : 		{}
; 2508 : 		fclose(lIn);

	mov	rcx, rbx
	call	QWORD PTR __imp_fclose
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h

; 241  :             return _stat64i32(_FileName, (struct _stat64i32*)_Stat);

	lea	rdx, QWORD PTR st$1[rsp]
	lea	rcx, QWORD PTR lDialogFile$[rbp-256]
	call	QWORD PTR __imp__stat64i32
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c

; 396  : 		if (stat(aFilename, &st) == 0)

	test	eax, eax
	jne	SHORT $LN22@inputBoxWi

; 397  : 		{
; 398  : 				if ((lIn = fopen(aFilename, "w")))

	lea	rdx, OFFSET FLAT:??_C@_01NOFIACDB@w@
	lea	rcx, QWORD PTR lDialogFile$[rbp-256]
	call	QWORD PTR __imp_fopen
	mov	rdi, rax
	test	rax, rax
	je	SHORT $LN22@inputBoxWi

; 399  : 				{
; 400  : 						for (i = 0; i < st.st_size; i++)

	xor	ebx, ebx
	cmp	DWORD PTR st$1[rsp+20], ebx
	jle	SHORT $LN19@inputBoxWi
	npad	7
$LL20@inputBoxWi:

; 401  : 						{
; 402  : 								fputc('A', lIn);

	mov	rdx, rdi
	mov	ecx, 65					; 00000041H
	call	QWORD PTR __imp_fputc
	inc	ebx
	cmp	ebx, DWORD PTR st$1[rsp+20]
	jl	SHORT $LL20@inputBoxWi
$LN19@inputBoxWi:

; 403  : 						}
; 404  : 						fclose(lIn);

	mov	rcx, rdi
	call	QWORD PTR __imp_fclose
$LN22@inputBoxWi:

; 2509 : 
; 2510 : 		wipefile(lDialogFile);
; 2511 : 		remove(lDialogFile);

	lea	rcx, QWORD PTR lDialogFile$[rbp-256]
	call	QWORD PTR __imp_remove
	npad	4
$LL55@inputBoxWi:

; 2512 : 	if ( aoBuff[strlen( aoBuff ) -1] == '\n' )

	cmp	BYTE PTR [r14+rsi+1], 0
	lea	rsi, QWORD PTR [rsi+1]
	jne	SHORT $LL55@inputBoxWi
	cmp	BYTE PTR [rsi+r14-1], 10
	jne	SHORT $LN11@inputBoxWi

; 2513 : 	{
; 2514 : 		aoBuff[strlen( aoBuff ) -1] = '\0' ;

	mov	BYTE PTR [rsi+r14-1], 0
$LN11@inputBoxWi:

; 2515 : 	}
; 2516 : 		/* printf( "aoBuff: %s\n" , aoBuff ) ; */
; 2517 : 
; 2518 : 		/* printf( "aoBuff: %s len: %lu \n" , aoBuff , strlen(aoBuff) ) ; */
; 2519 : 	lResult =  strncmp( aoBuff , "1" , 1) ? 0 : 1 ;

	mov	r8d, 1
	lea	rdx, OFFSET FLAT:??_C@_01HIHLOKLC@1@
	mov	rcx, r14
	call	QWORD PTR __imp_strncmp
	test	eax, eax

; 2520 : 		/* printf( "lResult: %d \n" , lResult ) ; */
; 2521 : 		if ( ! lResult )

	jne	$LN151@inputBoxWi

; 2522 : 		{
; 2523 : 				aoBuff[0] = '\0';
; 2524 : 				return 0 ;
; 2525 : 		}
; 2526 : 		/* printf( "aoBuff+1: %s\n" , aoBuff+1 ) ; */
; 2527 : 		strcpy(aoBuff, aoBuff+3);

	lea	rdx, OFFSET FLAT:?lBuff@?1??tinyfd_inputBox@@9@9+3
	npad	1
$LL16@inputBoxWi:
	movzx	ecx, BYTE PTR [rdx]
	mov	BYTE PTR [rdx-3], cl
	lea	rdx, QWORD PTR [rdx+1]
	test	cl, cl
	jne	SHORT $LL16@inputBoxWi

; 2528 : 		return 1;

	mov	eax, 1
$LN1@inputBoxWi:

; 2529 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 2144				; 00000860H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
inputBoxWinConsole ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT openFileDialogWinConsole
_TEXT	SEGMENT
lDialogString$ = 32
lFilterPatterns$ = 1056
__$ArrayPad$ = 2080
aTitle$ = 2112
aDefaultPathAndFile$ = 2120
openFileDialogWinConsole PROC				; COMDAT

; 2599 : {

	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rdi
	push	rbp
	lea	rbp, QWORD PTR [rsp-1840]
	sub	rsp, 2096				; 00000830H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	rbx, rdx

; 2600 : 		char lFilterPatterns[MAX_PATH_OR_CMD] = "";

	mov	BYTE PTR lFilterPatterns$[rbp-256], 0
	mov	rdi, rcx
	xor	edx, edx
	lea	rcx, QWORD PTR lFilterPatterns$[rbp-255]
	mov	r8d, 1023				; 000003ffH
	call	memset

; 2601 : 		char lDialogString[MAX_PATH_OR_CMD] ;
; 2602 : 		FILE * lIn;
; 2603 : 
; 2604 : 				static char aoBuff[MAX_PATH_OR_CMD];
; 2605 : 
; 2606 : 		strcpy( lDialogString , "dialog " ) ;
; 2607 : 		if ( aTitle && strlen(aTitle) )

	movzx	r9d, BYTE PTR ??_C@_02KOPDJAMB@?$CC?5@+2
	mov	rax, 9120927512095076			; 0020676f6c616964H
	movzx	r10d, WORD PTR ??_C@_02KOPDJAMB@?$CC?5@
	mov	r8, -1
	mov	QWORD PTR lDialogString$[rsp], rax
	test	rdi, rdi
	je	$LN4@openFileDi
	mov	rax, r8
	npad	2
$LL66@openFileDi:
	inc	rax
	cmp	BYTE PTR [rdi+rax], 0
	jne	SHORT $LL66@openFileDi
	test	rax, rax
	je	SHORT $LN4@openFileDi

; 2608 : 		{
; 2609 : 				strcat(lDialogString, "--title \"") ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
$LL65@openFileDi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL65@openFileDi
	movsd	xmm0, QWORD PTR ??_C@_09LMCKDOCL@?9?9title?5?$CC@
	movzx	eax, WORD PTR ??_C@_09LMCKDOCL@?9?9title?5?$CC@+8
	movsd	QWORD PTR [rcx], xmm0
	mov	WORD PTR [rcx+8], ax

; 2610 : 				strcat(lDialogString, aTitle) ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	1
$LL63@openFileDi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL63@openFileDi
	xor	edx, edx
	npad	4
$LL64@openFileDi:
	movzx	eax, BYTE PTR [rdi+rdx]
	mov	BYTE PTR [rcx+rdx], al
	lea	rdx, QWORD PTR [rdx+1]
	test	al, al
	jne	SHORT $LL64@openFileDi

; 2611 : 				strcat(lDialogString, "\" ") ;

	lea	rax, QWORD PTR lDialogString$[rsp]
	dec	rax
	npad	9
$LL62@openFileDi:
	cmp	BYTE PTR [rax+1], 0
	lea	rax, QWORD PTR [rax+1]
	jne	SHORT $LL62@openFileDi
	mov	WORD PTR [rax], r10w
	mov	BYTE PTR [rax+2], r9b
$LN4@openFileDi:

; 2612 : 		}
; 2613 : 
; 2614 : 		strcat(lDialogString, "--backtitle \"") ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	6
$LL61@openFileDi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL61@openFileDi
	mov	eax, DWORD PTR ??_C@_0O@HIBPPKGD@?9?9backtitle?5?$CC@+8
	movsd	xmm0, QWORD PTR ??_C@_0O@HIBPPKGD@?9?9backtitle?5?$CC@
	movsd	QWORD PTR [rcx], xmm0
	mov	DWORD PTR [rcx+8], eax
	movzx	eax, WORD PTR ??_C@_0O@HIBPPKGD@?9?9backtitle?5?$CC@+12
	mov	WORD PTR [rcx+12], ax

; 2615 : 		strcat(lDialogString,

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
$LL60@openFileDi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL60@openFileDi
	movzx	eax, WORD PTR ??_C@_0EL@PNIMLOJG@tab?3?5focus?5?$HM?5?1?3?5populate?5?$HM?5spac@+72
	movaps	xmm0, XMMWORD PTR ??_C@_0EL@PNIMLOJG@tab?3?5focus?5?$HM?5?1?3?5populate?5?$HM?5spac@
	movaps	xmm1, XMMWORD PTR ??_C@_0EL@PNIMLOJG@tab?3?5focus?5?$HM?5?1?3?5populate?5?$HM?5spac@+16
	movups	XMMWORD PTR [rcx], xmm0
	movaps	xmm0, XMMWORD PTR ??_C@_0EL@PNIMLOJG@tab?3?5focus?5?$HM?5?1?3?5populate?5?$HM?5spac@+32
	movups	XMMWORD PTR [rcx+16], xmm1
	movaps	xmm1, XMMWORD PTR ??_C@_0EL@PNIMLOJG@tab?3?5focus?5?$HM?5?1?3?5populate?5?$HM?5spac@+48
	movups	XMMWORD PTR [rcx+32], xmm0
	movsd	xmm0, QWORD PTR ??_C@_0EL@PNIMLOJG@tab?3?5focus?5?$HM?5?1?3?5populate?5?$HM?5spac@+64
	movups	XMMWORD PTR [rcx+48], xmm1
	movsd	QWORD PTR [rcx+64], xmm0
	mov	WORD PTR [rcx+72], ax
	movzx	eax, BYTE PTR ??_C@_0EL@PNIMLOJG@tab?3?5focus?5?$HM?5?1?3?5populate?5?$HM?5spac@+74
	mov	BYTE PTR [rcx+74], al

; 2616 : 				"tab: focus | /: populate | spacebar: fill text field | ok: TEXT FIELD ONLY") ;
; 2617 : 		strcat(lDialogString, "\" ") ;

	lea	rax, QWORD PTR lDialogString$[rsp]
	dec	rax
$LL59@openFileDi:
	cmp	BYTE PTR [rax+1], 0
	lea	rax, QWORD PTR [rax+1]
	jne	SHORT $LL59@openFileDi

; 2618 : 
; 2619 : 		strcat( lDialogString , "--fselect \"" ) ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	mov	WORD PTR [rax], r10w
	dec	rcx
	mov	BYTE PTR [rax+2], r9b
	npad	5
$LL58@openFileDi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL58@openFileDi
	movsd	xmm0, QWORD PTR ??_C@_0M@HDHPIGEA@?9?9fselect?5?$CC@
	mov	eax, DWORD PTR ??_C@_0M@HDHPIGEA@?9?9fselect?5?$CC@+8
	movsd	QWORD PTR [rcx], xmm0
	mov	DWORD PTR [rcx+8], eax

; 2620 : 		if ( aDefaultPathAndFile && strlen(aDefaultPathAndFile) )

	test	rbx, rbx
	je	SHORT $LN13@openFileDi
$LL57@openFileDi:
	inc	r8
	cmp	BYTE PTR [rbx+r8], 0
	jne	SHORT $LL57@openFileDi
	test	r8, r8
	je	SHORT $LN13@openFileDi

; 2621 : 		{
; 2622 : 				/* dialog.exe uses unix separators even on windows */
; 2623 : 				strcpy(lFilterPatterns, aDefaultPathAndFile);

	lea	rcx, QWORD PTR lFilterPatterns$[rbp-256]
	sub	rcx, rbx
	npad	3
$LL9@openFileDi:
	movzx	eax, BYTE PTR [rbx]
	mov	BYTE PTR [rcx+rbx], al
	lea	rbx, QWORD PTR [rbx+1]
	test	al, al
	jne	SHORT $LL9@openFileDi

; 553  : 		while ((p = strchr(p, aOldChr)))

	mov	edx, 92					; 0000005cH
	lea	rcx, QWORD PTR lFilterPatterns$[rbp-256]
	call	QWORD PTR __imp_strchr
	test	rax, rax
	je	SHORT $LN13@openFileDi
	npad	11
$LL12@openFileDi:

; 554  : 		{
; 555  : 				*p = aNewChr;
; 556  : 				p++;

	lea	rcx, QWORD PTR [rax+1]
	mov	BYTE PTR [rax], 47			; 0000002fH
	mov	edx, 92					; 0000005cH
	call	QWORD PTR __imp_strchr
	test	rax, rax
	jne	SHORT $LL12@openFileDi
$LN13@openFileDi:

; 2624 : 				replaceChr( lFilterPatterns , '\\' , '/' ) ;
; 2625 : 		}
; 2626 : 
; 2627 : 		/* dialog.exe needs at least one separator */
; 2628 : 		if ( ! strchr(lFilterPatterns, '/') )

	mov	edx, 47					; 0000002fH
	lea	rcx, QWORD PTR lFilterPatterns$[rbp-256]
	call	QWORD PTR __imp_strchr
	test	rax, rax
	jne	SHORT $LN6@openFileDi

; 2629 : 		{
; 2630 : 				strcat(lDialogString, "./") ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
$LL56@openFileDi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL56@openFileDi
	movzx	eax, WORD PTR ??_C@_02CAHBHFGK@?4?1@
	mov	WORD PTR [rcx], ax
	movzx	eax, BYTE PTR ??_C@_02CAHBHFGK@?4?1@+2
	mov	BYTE PTR [rcx+2], al
$LN6@openFileDi:

; 2631 : 		}
; 2632 : 		strcat(lDialogString, lFilterPatterns) ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	4
$LL54@openFileDi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL54@openFileDi
	lea	r8, QWORD PTR lFilterPatterns$[rbp-256]
	xor	edx, edx
	npad	13
$LL55@openFileDi:
	movzx	eax, BYTE PTR [r8+rdx]
	mov	BYTE PTR [rcx+rdx], al
	lea	rdx, QWORD PTR [rdx+1]
	test	al, al
	jne	SHORT $LL55@openFileDi

; 2633 : 		strcat(lDialogString, "\" 0 60 2>");

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	8
$LL53@openFileDi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL53@openFileDi
	movsd	xmm0, QWORD PTR ??_C@_09CKEGHFKN@?$CC?50?560?52?$DO@
	movzx	eax, WORD PTR ??_C@_09CKEGHFKN@?$CC?50?560?52?$DO@+8
	movsd	QWORD PTR [rcx], xmm0
	mov	WORD PTR [rcx+8], ax

; 2634 : 		strcpy(lFilterPatterns, getenv("TEMP"));

	lea	rcx, OFFSET FLAT:??_C@_04JKHNIKCB@TEMP@
	call	QWORD PTR __imp_getenv
	lea	rdx, QWORD PTR lFilterPatterns$[rbp-256]
	sub	rdx, rax
	npad	8
$LL10@openFileDi:
	movzx	ecx, BYTE PTR [rax]
	mov	BYTE PTR [rdx+rax], cl
	lea	rax, QWORD PTR [rax+1]
	test	cl, cl
	jne	SHORT $LL10@openFileDi

; 2635 : 		strcat(lFilterPatterns, "\\tinyfd.txt");

	lea	rcx, QWORD PTR lFilterPatterns$[rbp-256]
	dec	rcx
	npad	8
$LL52@openFileDi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL52@openFileDi
	movsd	xmm0, QWORD PTR ??_C@_0M@JPCOHHM@?2tinyfd?4txt@
	mov	eax, DWORD PTR ??_C@_0M@JPCOHHM@?2tinyfd?4txt@+8
	movsd	QWORD PTR [rcx], xmm0
	mov	DWORD PTR [rcx+8], eax

; 2636 : 		strcat(lDialogString, lFilterPatterns);

	lea	rcx, QWORD PTR lDialogString$[rsp]
	dec	rcx
	npad	9
$LL50@openFileDi:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL50@openFileDi
	lea	r8, QWORD PTR lFilterPatterns$[rbp-256]
	xor	edx, edx
	npad	13
$LL51@openFileDi:
	movzx	eax, BYTE PTR [r8+rdx]
	mov	BYTE PTR [rcx+rdx], al
	lea	rdx, QWORD PTR [rdx+1]
	test	al, al
	jne	SHORT $LL51@openFileDi

; 2637 : 
; 2638 : 		/* printf( "lDialogString: %s\n" , lDialogString ) ; */
; 2639 : 		system( lDialogString ) ;

	lea	rcx, QWORD PTR lDialogString$[rsp]
	call	QWORD PTR __imp_system

; 2640 : 
; 2641 : 		if (!(lIn = fopen(lFilterPatterns, "r")))

	lea	rdx, OFFSET FLAT:??_C@_01KDCPPGHE@r@
	lea	rcx, QWORD PTR lFilterPatterns$[rbp-256]
	call	QWORD PTR __imp_fopen
	mov	rbx, rax
	test	rax, rax
	jne	SHORT $LL2@openFileDi

; 2642 : 		{
; 2643 : 				remove(lFilterPatterns);

	lea	rcx, QWORD PTR lFilterPatterns$[rbp-256]
	call	QWORD PTR __imp_remove

; 2644 : 				return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@openFileDi
	npad	8
$LL2@openFileDi:

; 2645 : 		}
; 2646 : 		while (fgets(aoBuff, MAX_PATH_OR_CMD, lIn) != NULL)

	mov	r8, rbx
	lea	rcx, OFFSET FLAT:?aoBuff@?1??openFileDialogWinConsole@@9@9
	mov	edx, 1024				; 00000400H
	call	QWORD PTR __imp_fgets
	test	rax, rax
	jne	SHORT $LL2@openFileDi

; 2647 : 		{}
; 2648 : 		fclose(lIn);

	mov	rcx, rbx
	call	QWORD PTR __imp_fclose

; 2649 : 		remove(lFilterPatterns);

	lea	rcx, QWORD PTR lFilterPatterns$[rbp-256]
	call	QWORD PTR __imp_remove

; 553  : 		while ((p = strchr(p, aOldChr)))

	mov	edx, 47					; 0000002fH
	lea	rcx, OFFSET FLAT:?aoBuff@?1??openFileDialogWinConsole@@9@9
	call	QWORD PTR __imp_strchr
	test	rax, rax
	je	SHORT $LN19@openFileDi
	npad	9
$LL18@openFileDi:

; 554  : 		{
; 555  : 				*p = aNewChr;
; 556  : 				p++;

	lea	rcx, QWORD PTR [rax+1]
	mov	BYTE PTR [rax], 92			; 0000005cH
	mov	edx, 47					; 0000002fH
	call	QWORD PTR __imp_strchr
	test	rax, rax
	jne	SHORT $LL18@openFileDi
$LN19@openFileDi:

; 2650 : 		replaceChr( aoBuff , '/' , '\\' ) ;
; 2651 : 		/* printf( "aoBuff: %s\n" , aoBuff ) ; */
; 2652 : 		return aoBuff;

	lea	rax, OFFSET FLAT:?aoBuff@?1??openFileDialogWinConsole@@9@9
$LN1@openFileDi:

; 2653 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+2096]
	mov	rbx, QWORD PTR [r11+24]
	mov	rdi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rbp
	ret	0
openFileDialogWinConsole ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT writeUtf8
_TEXT	SEGMENT
lNum$ = 48
__$ArrayPad$ = 56
aUtf8String$ = 80
writeUtf8 PROC						; COMDAT

; 2715 : {

	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx

; 2716 : 		unsigned long lNum;
; 2717 : 		void * lConsoleHandle;
; 2718 : 		wchar_t * lTmpWChar;
; 2719 : 
; 2720 : 		lConsoleHandle = GetStdHandle(STD_OUTPUT_HANDLE);

	mov	ecx, -11				; fffffff5H
	call	QWORD PTR __imp_GetStdHandle

; 2721 : 		lTmpWChar = tinyfd_utf8to16(aUtf8String);

	mov	rcx, rbx
	mov	rdi, rax
	call	tinyfd_utf8to16

; 2722 : 		(void)WriteConsoleW(lConsoleHandle, lTmpWChar, (DWORD) wcslen(lTmpWChar), &lNum, NULL);

	mov	r8, -1
	npad	7
$LL3@writeUtf8:
	inc	r8
	cmp	WORD PTR [rax+r8*2], 0
	jne	SHORT $LL3@writeUtf8
	lea	r9, QWORD PTR lNum$[rsp]
	mov	QWORD PTR [rsp+32], 0
	mov	rdx, rax
	mov	rcx, rdi
	call	QWORD PTR __imp_WriteConsoleW

; 2723 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
writeUtf8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT tinyfd_inputBox
_TEXT	SEGMENT
mode$ = 48
lNum$ = 52
lTitle$1 = 64
lBuffW$ = 320
lDefaultInput$2 = 2368
__$ArrayPad$ = 4416
aTitle$ = 4496
aMessage$ = 4504
aDefaultInput$ = 4512
tinyfd_inputBox PROC					; COMDAT

; 2873 : {

$LN141:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-4176]
	mov	eax, 4432				; 00001150H
	call	__chkstk
	sub	rsp, rax
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	rbx, rcx
	mov	r15, r8

; 2874 : 		static char lBuff[MAX_PATH_OR_CMD] = "";
; 2875 : 		char * lEOF;
; 2876 : 
; 2877 : 		DWORD mode = 0;
; 2878 : 		HANDLE hStdin = GetStdHandle(STD_INPUT_HANDLE);

	mov	ecx, -10				; fffffff6H
	mov	rsi, rdx
	call	QWORD PTR __imp_GetStdHandle

; 2879 : 
; 2880 : 		unsigned long lNum;
; 2881 : 		void * lConsoleHandle;
; 2882 : 		char * lTmpChar;
; 2883 : 		wchar_t lBuffW[1024];
; 2884 : 
; 2885 : 		UINT lOriginalCP = 0;
; 2886 : 		UINT lOriginalOutputCP = 0;
; 2887 : 
; 2888 : 		if (!aTitle && !aMessage && !aDefaultInput) return lBuff; /* now I can fill lBuff from outside */

	test	rbx, rbx
	jne	SHORT $LN2@tinyfd_inp
	test	rsi, rsi
	jne	SHORT $LN2@tinyfd_inp
	test	r15, r15
	je	$LN91@tinyfd_inp
$LN2@tinyfd_inp:

; 2889 : 
; 2890 : 		if (tfd_quoteDetected(aTitle)) return tinyfd_inputBox("INVALID TITLE WITH QUOTES", aMessage, aDefaultInput);

	mov	rcx, rbx
	call	tfd_quoteDetected
	test	eax, eax
	je	SHORT $LN3@tinyfd_inp
	mov	r8, r15
	lea	rcx, OFFSET FLAT:??_C@_0BK@LOHMADNE@INVALID?5TITLE?5WITH?5QUOTES@
	mov	rdx, rsi
	call	tinyfd_inputBox
	jmp	$LN29@tinyfd_inp
$LN3@tinyfd_inp:

; 2891 : 		if (tfd_quoteDetected(aMessage)) return tinyfd_inputBox(aTitle, "INVALID MESSAGE WITH QUOTES", aDefaultInput);

	mov	rcx, rsi
	call	tfd_quoteDetected
	test	eax, eax
	je	SHORT $LN4@tinyfd_inp
	mov	r8, r15
	lea	rdx, OFFSET FLAT:??_C@_0BM@NGNLCBDA@INVALID?5MESSAGE?5WITH?5QUOTES@
	mov	rcx, rbx
	call	tinyfd_inputBox
	jmp	$LN29@tinyfd_inp
$LN4@tinyfd_inp:

; 2892 : 		if (tfd_quoteDetected(aDefaultInput)) return tinyfd_inputBox(aTitle, aMessage, "INVALID DEFAULT_INPUT WITH QUOTES: use the GRAVE ACCENT \\x60 instead.");

	mov	rcx, r15
	call	tfd_quoteDetected
	test	eax, eax
	je	SHORT $LN5@tinyfd_inp
	lea	r8, OFFSET FLAT:??_C@_0EG@KIAFJPFE@INVALID?5DEFAULT_INPUT?5WITH?5QUOT@
	mov	rdx, rsi
	mov	rcx, rbx
	call	tinyfd_inputBox
	jmp	$LN29@tinyfd_inp
$LN5@tinyfd_inp:

; 2893 : 
; 2894 : 	mode = 0;

	xor	r14d, r14d

; 2895 : 	hStdin = GetStdHandle(STD_INPUT_HANDLE);

	mov	ecx, -10				; fffffff6H
	mov	DWORD PTR mode$[rsp], r14d
	call	QWORD PTR __imp_GetStdHandle

; 2896 : 
; 2897 : 	if ((!tinyfd_forceConsole || !(
; 2898 : 			GetConsoleWindow() ||
; 2899 : 			dialogPresent()))
; 2900 : 						&& (!getenv("SSH_CLIENT") || getenvDISPLAY()))

	cmp	DWORD PTR tinyfd_forceConsole, r14d
	mov	r12, rax
	je	SHORT $LN8@tinyfd_inp
	call	QWORD PTR __imp_GetConsoleWindow
	test	rax, rax
	jne	SHORT $LN6@tinyfd_inp
	call	dialogPresent
	test	eax, eax
	jne	SHORT $LN6@tinyfd_inp
$LN8@tinyfd_inp:
	lea	rcx, OFFSET FLAT:??_C@_0L@JOMIIHFG@SSH_CLIENT@
	call	QWORD PTR __imp_getenv
	test	rax, rax
	je	$LN9@tinyfd_inp
	call	getenvDISPLAY
	test	eax, eax
	jne	$LN9@tinyfd_inp
$LN6@tinyfd_inp:

; 2906 : 		}
; 2907 : 	else if ( dialogPresent() )

	call	dialogPresent
	test	eax, eax
	je	SHORT $LN13@tinyfd_inp

; 2908 : 	{
; 2909 : 		if (aTitle&&!strcmp(aTitle,"tinyfd_query")){strcpy(tinyfd_response,"dialog");return (char *)0;}

	test	rbx, rbx
	je	SHORT $LN15@tinyfd_inp
	lea	rdx, OFFSET FLAT:??_C@_0N@MNLKONMA@tinyfd_query@
	mov	rcx, rbx
	call	strcmp
	test	eax, eax
	jne	SHORT $LN15@tinyfd_inp
	mov	eax, DWORD PTR ??_C@_06IOAEHBNO@dialog@
	mov	DWORD PTR tinyfd_response, eax
	movzx	eax, WORD PTR ??_C@_06IOAEHBNO@dialog@+4
	mov	WORD PTR tinyfd_response+4, ax
	movzx	eax, BYTE PTR ??_C@_06IOAEHBNO@dialog@+6
	mov	BYTE PTR tinyfd_response+6, al
	xor	eax, eax
	jmp	$LN29@tinyfd_inp
$LN15@tinyfd_inp:

; 2910 : 		lBuff[0]='\0';
; 2911 : 				if (inputBoxWinConsole(lBuff, aTitle, aMessage, aDefaultInput) ) return lBuff;

	mov	r9, r15
	mov	BYTE PTR ?lBuff@?1??tinyfd_inputBox@@9@9, r14b
	mov	r8, rsi
	mov	rdx, rbx
	call	inputBoxWinConsole
	test	eax, eax
	jne	$LN91@tinyfd_inp

; 2905 : 				else return NULL;

	xor	eax, eax
	jmp	$LN29@tinyfd_inp
$LN13@tinyfd_inp:

; 2912 : 				else return NULL;
; 2913 : 		}
; 2914 : 	else
; 2915 : 	{
; 2916 : 	  if (aTitle&&!strcmp(aTitle,"tinyfd_query")){strcpy(tinyfd_response,"basicinput");return (char *)0;}

	test	rbx, rbx
	je	SHORT $LN18@tinyfd_inp
	lea	rdx, OFFSET FLAT:??_C@_0N@MNLKONMA@tinyfd_query@
	mov	rcx, rbx
	call	strcmp
	test	eax, eax
	jne	SHORT $LN18@tinyfd_inp
	movzx	eax, WORD PTR ??_C@_0L@GFJODNDH@basicinput@+8
	movsd	xmm0, QWORD PTR ??_C@_0L@GFJODNDH@basicinput@
	mov	WORD PTR tinyfd_response+8, ax
	movzx	eax, BYTE PTR ??_C@_0L@GFJODNDH@basicinput@+10
	mov	BYTE PTR tinyfd_response+10, al
	xor	eax, eax
	movsd	QWORD PTR tinyfd_response, xmm0
	jmp	$LN29@tinyfd_inp
$LN18@tinyfd_inp:

; 2917 : 	  lBuff[0]='\0';
; 2918 : 	  if (!gWarningDisplayed && !tinyfd_forceConsole)

	cmp	DWORD PTR gWarningDisplayed, r14d
	mov	BYTE PTR ?lBuff@?1??tinyfd_inputBox@@9@9, r14b
	jne	SHORT $LN19@tinyfd_inp
	cmp	DWORD PTR tinyfd_forceConsole, r14d
	jne	SHORT $LN19@tinyfd_inp

; 2919 : 	  {
; 2920 : 		  gWarningDisplayed = 1 ;
; 2921 : 		  printf("\n\n%s\n", gTitle);

	lea	rdx, OFFSET FLAT:gTitle
	mov	DWORD PTR gWarningDisplayed, 1
	lea	rcx, OFFSET FLAT:??_C@_05JOKCAEBE@?6?6?$CFs?6@
	call	printf

; 2922 : 		  printf("%s\n\n", tinyfd_needs);

	lea	rdx, OFFSET FLAT:tinyfd_needs
	lea	rcx, OFFSET FLAT:??_C@_04LOAOMKLI@?$CFs?6?6@
	call	printf
$LN19@tinyfd_inp:

; 2923 : 	  }
; 2924 : 
; 2925 : 	  if (!tinyfd_winUtf8)
; 2926 : 	  {
; 2927 : 			  lOriginalCP = GetConsoleCP();
; 2928 : 			  lOriginalOutputCP = GetConsoleOutputCP();
; 2929 : 			  (void)SetConsoleCP(GetACP());
; 2930 : 			  (void)SetConsoleOutputCP(GetACP());
; 2931 : 	  }
; 2932 : 
; 2933 : 	  if (aTitle && strlen(aTitle))

	mov	rdi, -1
	test	rbx, rbx
	je	SHORT $LN21@tinyfd_inp
	mov	rax, rdi
	npad	4
$LL99@tinyfd_inp:
	inc	rax
	cmp	BYTE PTR [rbx+rax], r14b
	jne	SHORT $LL99@tinyfd_inp
	test	rax, rax
	je	SHORT $LN21@tinyfd_inp

; 2934 : 	  {
; 2935 : 				printf("\n");

	lea	rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	call	printf

; 2936 : 				if (tinyfd_winUtf8) writeUtf8(aTitle);

	mov	rcx, rbx
	call	writeUtf8

; 2937 : 				else printf("%s", aTitle);
; 2938 : 				printf("\n\n");

	lea	rcx, OFFSET FLAT:??_C@_02PHMGELLB@?6?6@
	call	printf
$LN21@tinyfd_inp:

; 2939 : 		  }
; 2940 : 	  if ( aMessage && strlen(aMessage) )

	test	rsi, rsi
	je	SHORT $LN24@tinyfd_inp
	mov	rax, rdi
$LL98@tinyfd_inp:
	inc	rax
	cmp	BYTE PTR [rsi+rax], r14b
	jne	SHORT $LL98@tinyfd_inp
	test	rax, rax
	je	SHORT $LN24@tinyfd_inp

; 2941 : 	  {
; 2942 : 				if (tinyfd_winUtf8) writeUtf8(aMessage);

	mov	rcx, rsi
	call	writeUtf8

; 2943 : 				else printf("%s", aMessage);
; 2944 : 				printf("\n");

	lea	rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	call	printf
$LN24@tinyfd_inp:

; 2945 : 	  }
; 2946 : 	  printf("(ctrl-Z + enter to cancel): ");

	lea	rcx, OFFSET FLAT:??_C@_0BN@PLNPMPIF@?$CIctrl?9Z?5?$CL?5enter?5to?5cancel?$CJ?3?5@
	call	printf

; 2947 : 	  if ( ! aDefaultInput )

	test	r15, r15
	jne	SHORT $LN27@tinyfd_inp

; 2948 : 	  {
; 2949 : 				  (void) GetConsoleMode(hStdin, &mode);

	lea	rdx, QWORD PTR mode$[rsp]
	mov	rcx, r12
	call	QWORD PTR __imp_GetConsoleMode

; 2950 : 				  (void) SetConsoleMode(hStdin, mode & (~ENABLE_ECHO_INPUT));

	mov	edx, DWORD PTR mode$[rsp]
	mov	rcx, r12
	and	edx, -5					; fffffffbH
	call	QWORD PTR __imp_SetConsoleMode
	mov	ecx, -10				; fffffff6H
	call	QWORD PTR __imp_GetStdHandle
	lea	r9, QWORD PTR lNum$[rsp]
	mov	QWORD PTR [rsp+32], r14
	mov	rcx, rax
	lea	rdx, QWORD PTR lBuffW$[rbp-256]
	mov	r8d, 1024				; 00000400H
	call	QWORD PTR __imp_ReadConsoleW

; 2956 : 				if (!aDefaultInput)
; 2957 : 				{
; 2958 : 						(void)SetConsoleMode(hStdin, mode);

	mov	edx, DWORD PTR mode$[rsp]
	mov	rcx, r12
	call	QWORD PTR __imp_SetConsoleMode

; 2959 : 						printf("\n");

	lea	rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	call	printf
	jmp	SHORT $LN30@tinyfd_inp
$LN27@tinyfd_inp:

; 2951 : 	  }
; 2952 : 		  if (tinyfd_winUtf8)
; 2953 : 		  {
; 2954 : 				lConsoleHandle = GetStdHandle(STD_INPUT_HANDLE);

	mov	ecx, -10				; fffffff6H
	call	QWORD PTR __imp_GetStdHandle

; 2955 : 				(void) ReadConsoleW(lConsoleHandle, lBuffW, MAX_PATH_OR_CMD, &lNum, NULL);

	lea	r9, QWORD PTR lNum$[rsp]
	mov	QWORD PTR [rsp+32], r14
	mov	rcx, rax
	lea	rdx, QWORD PTR lBuffW$[rbp-256]
	mov	r8d, 1024				; 00000400H
	call	QWORD PTR __imp_ReadConsoleW
$LN30@tinyfd_inp:

; 2960 : 				}
; 2961 : 				lBuffW[lNum] = '\0';

	mov	eax, DWORD PTR lNum$[rsp]
	add	rax, rax
	cmp	rax, 2048				; 00000800H
	jae	$LN47@tinyfd_inp
	mov	WORD PTR lBuffW$[rbp+rax-256], r14w

; 2962 : 				if (lBuffW[wcslen(lBuffW) - 1] == '\n') lBuffW[wcslen(lBuffW) - 1] = '\0';

	lea	rcx, QWORD PTR lBuffW$[rbp-256]
	mov	rax, rdi
$LL97@tinyfd_inp:
	cmp	WORD PTR [rcx+rax*2+2], r14w
	lea	rax, QWORD PTR [rax+1]
	jne	SHORT $LL97@tinyfd_inp
	cmp	WORD PTR lBuffW$[rbp+rax*2-258], 10
	jne	SHORT $LN31@tinyfd_inp
	lea	rax, QWORD PTR [rax*2-2]
	cmp	rax, 2048				; 00000800H
	jae	$LN47@tinyfd_inp
	mov	WORD PTR lBuffW$[rbp+rax-256], r14w
$LN31@tinyfd_inp:

; 2963 : 				if (lBuffW[wcslen(lBuffW) - 1] == '\r') lBuffW[wcslen(lBuffW) - 1] = '\0';

	lea	rax, QWORD PTR lBuffW$[rbp-256]
$LL96@tinyfd_inp:
	cmp	WORD PTR [rax+rdi*2+2], r14w
	lea	rdi, QWORD PTR [rdi+1]
	jne	SHORT $LL96@tinyfd_inp
	cmp	WORD PTR lBuffW$[rbp+rdi*2-258], 13
	jne	SHORT $LN32@tinyfd_inp
	lea	rdi, QWORD PTR [rdi*2-2]
	cmp	rdi, 2048				; 00000800H
	jae	$LN47@tinyfd_inp
	mov	WORD PTR lBuffW$[rbp+rdi-256], r14w
$LN32@tinyfd_inp:

; 2964 : 				lTmpChar = tinyfd_utf16to8(lBuffW);

	lea	rcx, QWORD PTR lBuffW$[rbp-256]
	call	tinyfd_utf16to8

; 2965 : 				if (lTmpChar)

	test	rax, rax
	je	$LN11@tinyfd_inp

; 2966 : 				{
; 2967 : 						strcpy(lBuff, lTmpChar);

	lea	rdx, OFFSET FLAT:?lBuff@?1??tinyfd_inputBox@@9@9
	sub	rdx, rax
	npad	1
$LL53@tinyfd_inp:
	movzx	ecx, BYTE PTR [rax]
	mov	BYTE PTR [rdx+rax], cl
	lea	rax, QWORD PTR [rax+1]
	test	cl, cl
	jne	SHORT $LL53@tinyfd_inp
	jmp	$LN91@tinyfd_inp
$LN9@tinyfd_inp:

; 2901 : 	{
; 2902 : 		if (aTitle&&!strcmp(aTitle,"tinyfd_query")){strcpy(tinyfd_response,"windows");return (char *)1;}

	test	rbx, rbx
	je	SHORT $LN10@tinyfd_inp
	lea	rdx, OFFSET FLAT:??_C@_0N@MNLKONMA@tinyfd_query@
	mov	rcx, rbx
	call	strcmp
	test	eax, eax
	jne	SHORT $LN10@tinyfd_inp
	mov	rax, 32500942631758199			; 0073776f646e6977H
	mov	QWORD PTR tinyfd_response, rax
	mov	eax, 1
	jmp	$LN29@tinyfd_inp
$LN10@tinyfd_inp:

; 2016 : 		wchar_t lTitle[128] = L"";

	xor	edx, edx

; 2903 : 		lBuff[0]='\0';

	mov	BYTE PTR ?lBuff@?1??tinyfd_inputBox@@9@9, r14b

; 2016 : 		wchar_t lTitle[128] = L"";

	mov	r8d, 254				; 000000feH
	mov	WORD PTR lTitle$1[rsp], r14w
	lea	rcx, QWORD PTR lTitle$1[rsp+2]
	call	memset

; 2017 : 		wchar_t * lMessage = NULL;
; 2018 : 		wchar_t lDefaultInput[MAX_PATH_OR_CMD] = L"";

	xor	edx, edx
	mov	WORD PTR lDefaultInput$2[rbp-256], r14w
	mov	r8d, 2046				; 000007feH
	lea	rcx, QWORD PTR lDefaultInput$2[rbp-254]
	mov	rdi, r14
	call	memset

; 2019 : 		wchar_t * lTmpWChar;
; 2020 : 		char * lTmpChar;
; 2021 : 
; 2022 : 		if (aTitle)

	test	rbx, rbx
	je	SHORT $LN57@tinyfd_inp

; 2023 : 		{
; 2024 : 				if (tinyfd_winUtf8) lTmpWChar = tinyfd_utf8to16(aTitle);

	mov	rcx, rbx
	call	tinyfd_utf8to16

; 2025 : 				else lTmpWChar = tinyfd_mbcsTo16(aTitle);
; 2026 : 				wcscpy(lTitle, lTmpWChar);

	lea	rdx, QWORD PTR lTitle$1[rsp]
	sub	rdx, rax
	npad	7
$LL72@tinyfd_inp:
	movzx	ecx, WORD PTR [rax]
	mov	WORD PTR [rdx+rax], cx
	lea	rax, QWORD PTR [rax+2]
	test	cx, cx
	jne	SHORT $LL72@tinyfd_inp
$LN57@tinyfd_inp:

; 2027 : 		}
; 2028 : 		if (aMessage)

	test	rsi, rsi
	je	SHORT $LN63@tinyfd_inp

; 2029 : 		{
; 2030 : 				if (tinyfd_winUtf8) lTmpWChar = tinyfd_utf8to16(aMessage);

	mov	rcx, rsi
	call	tinyfd_utf8to16

; 2031 : 				else lTmpWChar = tinyfd_mbcsTo16(aMessage);
; 2032 : 				lMessage = (wchar_t *) malloc((wcslen(lTmpWChar) + 1)* sizeof(wchar_t));

	mov	rdi, -1
	mov	rbx, rax
	mov	rcx, rdi
	npad	6
$LL95@tinyfd_inp:
	inc	rcx
	cmp	WORD PTR [rax+rcx*2], r14w
	jne	SHORT $LL95@tinyfd_inp
	inc	rcx
	mov	eax, 2
	mul	rcx
	cmovo	rax, rdi
	mov	rcx, rax
	call	QWORD PTR __imp_malloc
	mov	rdi, rax

; 2033 : 	  if (lMessage) wcscpy(lMessage, lTmpWChar);

	test	rax, rax
	je	SHORT $LN63@tinyfd_inp
	mov	rdx, rax
	sub	rdx, rbx
$LL73@tinyfd_inp:
	movzx	ecx, WORD PTR [rbx]
	mov	WORD PTR [rdx+rbx], cx
	lea	rbx, QWORD PTR [rbx+2]
	test	cx, cx
	jne	SHORT $LL73@tinyfd_inp
$LN63@tinyfd_inp:

; 2034 : 		}
; 2035 : 		if (aDefaultInput)

	test	r15, r15
	je	SHORT $LN64@tinyfd_inp

; 2036 : 		{
; 2037 : 				if (tinyfd_winUtf8) lTmpWChar = tinyfd_utf8to16(aDefaultInput);

	mov	rcx, r15
	call	tinyfd_utf8to16

; 2038 : 				else lTmpWChar = tinyfd_mbcsTo16(aDefaultInput);
; 2039 : 				wcscpy(lDefaultInput, lTmpWChar);

	lea	rdx, QWORD PTR lDefaultInput$2[rbp-256]
	sub	rdx, rax
	npad	9
$LL74@tinyfd_inp:
	movzx	ecx, WORD PTR [rax]
	mov	WORD PTR [rdx+rax], cx
	lea	rax, QWORD PTR [rax+2]
	test	cx, cx
	jne	SHORT $LL74@tinyfd_inp

; 2040 : 		lTmpWChar = tinyfd_inputBoxW(lTitle, lMessage, lDefaultInput);

	lea	r14, QWORD PTR lDefaultInput$2[rbp-256]
$LN64@tinyfd_inp:

; 2041 : 		}
; 2042 : 	else lTmpWChar = tinyfd_inputBoxW(lTitle, lMessage, NULL);
; 2043 : 
; 2044 : 		free(lMessage);

	mov	r8, r14
	lea	rcx, QWORD PTR lTitle$1[rsp]
	mov	rdx, rdi
	call	tinyfd_inputBoxW
	mov	rcx, rdi
	mov	rbx, rax
	call	QWORD PTR __imp_free

; 2045 : 
; 2046 : 		if (!lTmpWChar)

	test	rbx, rbx
	jne	SHORT $LN68@tinyfd_inp

; 2047 : 		{
; 2048 : 				aoBuff[0] = '\0';

	mov	BYTE PTR ?lBuff@?1??tinyfd_inputBox@@9@9, bl
$LN11@tinyfd_inp:

; 2905 : 				else return NULL;

	xor	eax, eax
	jmp	SHORT $LN29@tinyfd_inp
$LN68@tinyfd_inp:

; 2052 : 		if (tinyfd_winUtf8) lTmpChar = tinyfd_utf16to8(lTmpWChar);

	mov	rcx, rbx
	call	tinyfd_utf16to8

; 2053 : 		else lTmpChar = tinyfd_utf16toMbcs(lTmpWChar);
; 2054 : 
; 2055 : 		strcpy(aoBuff, lTmpChar);

	lea	rdx, OFFSET FLAT:?lBuff@?1??tinyfd_inputBox@@9@9
	sub	rdx, rax
	npad	12
$LL75@tinyfd_inp:
	movzx	ecx, BYTE PTR [rax]
	mov	BYTE PTR [rdx+rax], cl
	lea	rax, QWORD PTR [rax+1]
	test	cl, cl
	jne	SHORT $LL75@tinyfd_inp
$LN91@tinyfd_inp:

; 2904 : 				if (inputBoxWinGui(lBuff, aTitle, aMessage, aDefaultInput)) return lBuff;

	lea	rax, OFFSET FLAT:?lBuff@?1??tinyfd_inputBox@@9@9
$LN29@tinyfd_inp:

; 2968 : 						return lBuff;
; 2969 : 				}
; 2970 : 				else
; 2971 : 						return NULL;
; 2972 : 		  }
; 2973 : 		  else
; 2974 : 		  {
; 2975 : 				  lEOF = fgets(lBuff, MAX_PATH_OR_CMD, stdin);
; 2976 : 				  if (!aDefaultInput)
; 2977 : 				  {
; 2978 : 						  (void)SetConsoleMode(hStdin, mode);
; 2979 : 						  printf("\n");
; 2980 : 				  }
; 2981 : 
; 2982 : 				  if (!tinyfd_winUtf8)
; 2983 : 				  {
; 2984 : 						  (void)SetConsoleCP(lOriginalCP);
; 2985 : 						  (void)SetConsoleOutputCP(lOriginalOutputCP);
; 2986 : 				  }
; 2987 : 
; 2988 : 				  if (!lEOF)
; 2989 : 				  {
; 2990 : 						  return NULL;
; 2991 : 				  }
; 2992 : 				  printf("\n");
; 2993 : 				  if (strchr(lBuff, 27))
; 2994 : 				  {
; 2995 : 						  return NULL;
; 2996 : 				  }
; 2997 : 				  if (lBuff[strlen(lBuff) - 1] == '\n')
; 2998 : 				  {
; 2999 : 						  lBuff[strlen(lBuff) - 1] = '\0';
; 3000 : 				  }
; 3001 : 				  return lBuff;
; 3002 : 				}
; 3003 : 		}
; 3004 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 4432				; 00001150H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
$LN47@tinyfd_inp:

; 2960 : 				}
; 2961 : 				lBuffW[lNum] = '\0';

	call	__report_rangecheckfailure
	int	3
$LN139@tinyfd_inp:
tinyfd_inputBox ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\tinyfiledialogs.c
;	COMDAT tinyfd_openFileDialog
_TEXT	SEGMENT
lString$ = 48
__$ArrayPad$ = 1072
aTitle$ = 1152
aDefaultPathAndFile$ = 1160
aNumOfFilterPatterns$ = 1168
aFilterPatterns$ = 1176
aSingleFilterDescription$ = 1184
aAllowMultipleSelects$dead$ = 1192
tinyfd_openFileDialog PROC				; COMDAT

; 3084 : {

$LN102:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 1088				; 00000440H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r12, QWORD PTR aSingleFilterDescription$[rsp]
	mov	rdi, r9
	mov	r14d, r8d
	mov	rbp, rdx
	mov	rsi, rcx
	npad	8
$LL49@tinyfd_ope:
	mov	eax, r14d

; 3085 : 	static char lBuff[MAX_PATH_OR_CMD];
; 3086 : 	char lString[MAX_PATH_OR_CMD];
; 3087 : 		char * p;
; 3088 : 		char * lPointerInputBox;
; 3089 : 		int i;
; 3090 : 
; 3091 : 	if ( ! aFilterPatterns ) aNumOfFilterPatterns = 0 ;
; 3092 : 		if (tfd_quoteDetected(aTitle)) return tinyfd_openFileDialog("INVALID TITLE WITH QUOTES", aDefaultPathAndFile, aNumOfFilterPatterns, aFilterPatterns, aSingleFilterDescription, aAllowMultipleSelects);

	mov	rcx, rsi
	xor	r14d, r14d
	test	rdi, rdi
	cmovne	r14d, eax
	call	tfd_quoteDetected
	test	eax, eax
	je	SHORT $LN6@tinyfd_ope
	lea	rsi, OFFSET FLAT:??_C@_0BK@LOHMADNE@INVALID?5TITLE?5WITH?5QUOTES@
	jmp	SHORT $LL49@tinyfd_ope
$LN6@tinyfd_ope:

; 3093 : 		if (tfd_quoteDetected(aDefaultPathAndFile)) return tinyfd_openFileDialog(aTitle, "INVALID DEFAULT_PATH WITH QUOTES: use the GRAVE ACCENT \\x60 instead.", aNumOfFilterPatterns, aFilterPatterns, aSingleFilterDescription, aAllowMultipleSelects);

	mov	rcx, rbp
	call	tfd_quoteDetected
	test	eax, eax
	je	SHORT $LN7@tinyfd_ope
	lea	rbp, OFFSET FLAT:??_C@_0EF@BGLKEBPM@INVALID?5DEFAULT_PATH?5WITH?5QUOTE@
	jmp	SHORT $LL49@tinyfd_ope
$LN7@tinyfd_ope:

; 3094 : 		if (tfd_quoteDetected(aSingleFilterDescription)) return tinyfd_openFileDialog(aTitle, aDefaultPathAndFile, aNumOfFilterPatterns, aFilterPatterns, "INVALID FILTER_DESCRIPTION WITH QUOTES: use the GRAVE ACCENT \\x60 instead.", aAllowMultipleSelects);

	mov	rcx, r12
	call	tfd_quoteDetected
	test	eax, eax
	je	SHORT $LN8@tinyfd_ope
	lea	r12, OFFSET FLAT:??_C@_0EL@PNAFDOFE@INVALID?5FILTER_DESCRIPTION?5WITH@
	jmp	SHORT $LL49@tinyfd_ope
$LN8@tinyfd_ope:

; 3095 : 		for (i = 0; i < aNumOfFilterPatterns; i++)

	xor	ebx, ebx
	movsxd	r15, r14d
$LL4@tinyfd_ope:
	cmp	rbx, r15
	jge	SHORT $LN3@tinyfd_ope

; 3096 : 		{
; 3097 : 				if (tfd_quoteDetected(aFilterPatterns[i])) return tinyfd_openFileDialog("INVALID FILTER_PATTERN WITH QUOTES: use the GRAVE ACCENT \\x60 instead.", aDefaultPathAndFile, 0, NULL, NULL, aAllowMultipleSelects);

	mov	rcx, QWORD PTR [rdi+rbx*8]
	call	tfd_quoteDetected
	test	eax, eax
	jne	SHORT $LN57@tinyfd_ope

; 3095 : 		for (i = 0; i < aNumOfFilterPatterns; i++)

	inc	rbx
	jmp	SHORT $LL4@tinyfd_ope
$LN57@tinyfd_ope:

; 3096 : 		{
; 3097 : 				if (tfd_quoteDetected(aFilterPatterns[i])) return tinyfd_openFileDialog("INVALID FILTER_PATTERN WITH QUOTES: use the GRAVE ACCENT \\x60 instead.", aDefaultPathAndFile, 0, NULL, NULL, aAllowMultipleSelects);

	xor	r12d, r12d
	lea	rsi, OFFSET FLAT:??_C@_0EH@EMIKPBLA@INVALID?5FILTER_PATTERN?5WITH?5QUO@
	xor	edi, edi
	xor	r14d, r14d
	jmp	SHORT $LL49@tinyfd_ope
$LN3@tinyfd_ope:

; 3098 : 		}
; 3099 : 
; 3100 : 	if ( ( !tinyfd_forceConsole || !( GetConsoleWindow() || dialogPresent() ) )
; 3101 : 				&& (!getenv("SSH_CLIENT") || getenvDISPLAY()))

	cmp	DWORD PTR tinyfd_forceConsole, 0
	je	SHORT $LN12@tinyfd_ope
	call	QWORD PTR __imp_GetConsoleWindow
	test	rax, rax
	jne	SHORT $LN10@tinyfd_ope
	call	dialogPresent
	test	eax, eax
	jne	SHORT $LN10@tinyfd_ope
$LN12@tinyfd_ope:
	lea	rcx, OFFSET FLAT:??_C@_0L@JOMIIHFG@SSH_CLIENT@
	call	QWORD PTR __imp_getenv
	test	rax, rax
	je	$LN13@tinyfd_ope

; 193  : 		return tinyfd_assumeGraphicDisplay || getenv("DISPLAY");

	cmp	DWORD PTR tinyfd_assumeGraphicDisplay, 0
	jne	$LN13@tinyfd_ope
	lea	rcx, OFFSET FLAT:??_C@_07JPHDIPNG@DISPLAY@
	call	QWORD PTR __imp_getenv
	test	rax, rax
	jne	$LN13@tinyfd_ope
$LN10@tinyfd_ope:

; 3105 : 										(char const * const *)aFilterPatterns, aSingleFilterDescription, aAllowMultipleSelects);
; 3106 : 		}
; 3107 : 				else if (dialogPresent())

	call	dialogPresent
	test	eax, eax
	je	SHORT $LN15@tinyfd_ope

; 3108 : 				{
; 3109 : 						if (aTitle&&!strcmp(aTitle, "tinyfd_query")){ strcpy(tinyfd_response, "dialog"); return (char *)0; }

	test	rsi, rsi
	je	SHORT $LN17@tinyfd_ope
	lea	rdx, OFFSET FLAT:??_C@_0N@MNLKONMA@tinyfd_query@
	mov	rcx, rsi
	call	strcmp
	test	eax, eax
	jne	SHORT $LN17@tinyfd_ope
	mov	eax, DWORD PTR ??_C@_06IOAEHBNO@dialog@
	mov	DWORD PTR tinyfd_response, eax
	movzx	eax, WORD PTR ??_C@_06IOAEHBNO@dialog@+4
	mov	WORD PTR tinyfd_response+4, ax
	movzx	eax, BYTE PTR ??_C@_06IOAEHBNO@dialog@+6
	mov	BYTE PTR tinyfd_response+6, al
$LN24@tinyfd_ope:

; 3139 : }

	xor	eax, eax
$LN1@tinyfd_ope:
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1088				; 00000440H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN17@tinyfd_ope:

; 3110 : 						p = openFileDialogWinConsole(aTitle, aDefaultPathAndFile);

	mov	rdx, rbp
	mov	rcx, rsi
	call	openFileDialogWinConsole

; 3111 : 				}

	jmp	$LN100@tinyfd_ope
$LN15@tinyfd_ope:

; 3112 : 				else
; 3113 : 				{
; 3114 : 						if (aTitle&&!strcmp(aTitle, "tinyfd_query")){ strcpy(tinyfd_response, "basicinput"); return (char *)0; }

	test	rsi, rsi
	je	SHORT $LN18@tinyfd_ope
	lea	rdx, OFFSET FLAT:??_C@_0N@MNLKONMA@tinyfd_query@
	mov	rcx, rsi
	call	strcmp
	test	eax, eax
	jne	SHORT $LN18@tinyfd_ope
	movzx	eax, WORD PTR ??_C@_0L@GFJODNDH@basicinput@+8
	movsd	xmm0, QWORD PTR ??_C@_0L@GFJODNDH@basicinput@
	mov	WORD PTR tinyfd_response+8, ax
	movzx	eax, BYTE PTR ??_C@_0L@GFJODNDH@basicinput@+10
	mov	BYTE PTR tinyfd_response+10, al
	movsd	QWORD PTR tinyfd_response, xmm0
	jmp	SHORT $LN24@tinyfd_ope
$LN18@tinyfd_ope:

; 3115 : 						strcpy(lBuff, "Open file from ");

	movups	xmm0, XMMWORD PTR ??_C@_0BA@MCNFEBMK@Open?5file?5from?5@

; 200  : 		return getcwd(lCurDir, sizeof(lCurDir));

	mov	edx, 1024				; 00000400H
	lea	rcx, OFFSET FLAT:?lCurDir@?1??getCurDir@@9@9

; 3115 : 						strcpy(lBuff, "Open file from ");

	movaps	XMMWORD PTR ?lBuff@?1??tinyfd_openFileDialog@@9@9, xmm0

; 200  : 		return getcwd(lCurDir, sizeof(lCurDir));

	call	QWORD PTR __imp_getcwd

; 3116 : 						strcat(lBuff, getCurDir());

	lea	rbx, OFFSET FLAT:?lBuff@?1??tinyfd_openFileDialog@@9@9

; 200  : 		return getcwd(lCurDir, sizeof(lCurDir));

	mov	r8, rax

; 3116 : 						strcat(lBuff, getCurDir());

	lea	rcx, QWORD PTR [rbx-1]
	npad	2
$LL74@tinyfd_ope:
	cmp	BYTE PTR [rcx+1], 0
	lea	rcx, QWORD PTR [rcx+1]
	jne	SHORT $LL74@tinyfd_ope
	xor	edx, edx
	npad	4
$LL75@tinyfd_ope:
	movzx	eax, BYTE PTR [r8+rdx]
	mov	BYTE PTR [rcx+rdx], al
	lea	rdx, QWORD PTR [rdx+1]
	test	al, al
	jne	SHORT $LL75@tinyfd_ope

; 3117 : 						lPointerInputBox = tinyfd_inputBox(NULL, NULL, NULL); /* obtain a pointer on the current content of tinyfd_inputBox */

	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	tinyfd_inputBox
	mov	rdi, rax

; 3118 : 						if (lPointerInputBox) strcpy(lString, lPointerInputBox); /* preserve the current content of tinyfd_inputBox */

	test	rax, rax
	je	SHORT $LN19@tinyfd_ope
	mov	rdx, rax
	lea	rax, QWORD PTR lString$[rsp]
	sub	rax, rdx
	npad	1
$LL29@tinyfd_ope:
	movzx	ecx, BYTE PTR [rdx]
	mov	BYTE PTR [rax+rdx], cl
	lea	rdx, QWORD PTR [rdx+1]
	test	cl, cl
	jne	SHORT $LL29@tinyfd_ope
$LN19@tinyfd_ope:

; 3119 : 						p = tinyfd_inputBox(aTitle, lBuff, "");

	lea	r8, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	rdx, rbx
	mov	rcx, rsi
	call	tinyfd_inputBox

; 3120 : 						if (p) strcpy(lBuff, p); else lBuff[0] = '\0';

	test	rax, rax
	je	SHORT $LN20@tinyfd_ope
	mov	rdx, rbx
	sub	rdx, rax
	npad	5
$LL30@tinyfd_ope:
	movzx	ecx, BYTE PTR [rax]
	mov	BYTE PTR [rdx+rax], cl
	lea	rax, QWORD PTR [rax+1]
	test	cl, cl
	jne	SHORT $LL30@tinyfd_ope
	jmp	SHORT $LN21@tinyfd_ope
$LN20@tinyfd_ope:
	mov	BYTE PTR ?lBuff@?1??tinyfd_openFileDialog@@9@9, 0
$LN21@tinyfd_ope:

; 3121 : 						if (lPointerInputBox) strcpy(lPointerInputBox, lString); /* restore its previous content to tinyfd_inputBox */

	test	rdi, rdi
	je	SHORT $LN71@tinyfd_ope
	lea	rax, QWORD PTR lString$[rsp]
	sub	rdi, rax
	lea	rcx, QWORD PTR lString$[rsp]
	npad	7
$LL33@tinyfd_ope:
	movzx	eax, BYTE PTR [rcx]
	mov	BYTE PTR [rdi+rcx], al
	lea	rcx, QWORD PTR [rcx+1]
	test	al, al
	jne	SHORT $LL33@tinyfd_ope

; 3122 : 						p = lBuff;

	jmp	SHORT $LN71@tinyfd_ope
$LN13@tinyfd_ope:

; 3102 : 		{
; 3103 : 				if (aTitle&&!strcmp(aTitle,"tinyfd_query")){strcpy(tinyfd_response,"windows");return (char *)1;}

	test	rsi, rsi
	je	SHORT $LN14@tinyfd_ope
	lea	rdx, OFFSET FLAT:??_C@_0N@MNLKONMA@tinyfd_query@
	mov	rcx, rsi
	call	strcmp
	test	eax, eax
	jne	SHORT $LN14@tinyfd_ope
	mov	rax, 32500942631758199			; 0073776f646e6977H
	mov	QWORD PTR tinyfd_response, rax
	mov	eax, 1
	jmp	$LN1@tinyfd_ope
$LN14@tinyfd_ope:

; 3104 : 				p = openFileDialogWinGui( aTitle, aDefaultPathAndFile, aNumOfFilterPatterns,

	mov	r9, rdi
	mov	QWORD PTR [rsp+32], r12
	mov	r8d, r14d
	mov	rdx, rbp
	mov	rcx, rsi
	call	openFileDialogWinGui
$LN100@tinyfd_ope:

; 3123 : 				}
; 3124 : 
; 3125 : 		if ( ! p || ! strlen( p )  )

	mov	rbx, rax
	test	rax, rax
	je	$LN24@tinyfd_ope
$LN71@tinyfd_ope:
	mov	rax, -1
	npad	4
$LL73@tinyfd_ope:
	inc	rax
	cmp	BYTE PTR [rbx+rax], 0
	jne	SHORT $LL73@tinyfd_ope
	test	rax, rax
	je	$LN24@tinyfd_ope

; 3126 : 		{
; 3127 : 				return NULL;
; 3128 : 		}
; 3129 : 		if ( aAllowMultipleSelects && strchr(p, '|') )
; 3130 : 		{
; 3131 : 				p = ensureFilesExist( (char *) p , p ) ;
; 3132 : 		}
; 3133 : 		else if ( ! fileExists(p) )

	mov	rcx, rbx
	call	fileExists
	test	eax, eax
	je	$LN24@tinyfd_ope

; 3134 : 		{
; 3135 : 				return NULL ;
; 3136 : 		}
; 3137 : 		/* printf( "lBuff3: %s\n" , p ) ; */
; 3138 : 		return p ;

	mov	rax, rbx
	jmp	$LN1@tinyfd_ope
tinyfd_openFileDialog ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?Delete@VBO@@QEAAXXZ				; VBO::Delete
PUBLIC	?Unbind@VBO@@QEAAXXZ				; VBO::Unbind
PUBLIC	?Bind@VBO@@QEAAXXZ				; VBO::Bind
PUBLIC	??0VBO@@QEAA@AEAV?$vector@MV?$allocator@M@std@@@std@@@Z ; VBO::VBO
PUBLIC	??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z ; VBO::VBO
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0VBO@@QEAA@AEAV?$vector@MV?$allocator@M@std@@@std@@@Z DD imagerel $LN7
	DD	imagerel $LN7+86
	DD	imagerel $unwind$??0VBO@@QEAA@AEAV?$vector@MV?$allocator@M@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z DD imagerel $LN36
	DD	imagerel $LN36+197
	DD	imagerel $unwind$??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z DB 04H
	DB	'X'
	DB	02H
	DB	'b'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z
	DD	imagerel $ip2state$??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z DD 041919H
	DD	0a340aH
	DD	07006520aH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z
	DD	02aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0VBO@@QEAA@AEAV?$vector@MV?$allocator@M@std@@@std@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\VBO.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\VBO.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\VBO.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\VBO.cpp
;	COMDAT ??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z
_TEXT	SEGMENT
mat4s$GSCopy$ = 32
__$ArrayPad$ = 40
this$ = 64
mat4s$ = 72
??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z PROC ; VBO::VBO, COMDAT

; 12   : {

$LN36:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rdx
	mov	rdi, rcx

; 11   : VBO::VBO(std::vector<glm::mat4> mat4s)

	mov	QWORD PTR mat4s$GSCopy$[rsp], rdx

; 13   : 	glGenBuffers(1, &ID);

	mov	rdx, rcx
	mov	ecx, 1
	call	QWORD PTR glad_glGenBuffers

; 14   : 	glBindBuffer(GL_ARRAY_BUFFER, ID);

	mov	edx, DWORD PTR [rdi]
	mov	ecx, 34962				; 00008892H
	call	QWORD PTR glad_glBindBuffer

; 15   : 	glBufferData(GL_ARRAY_BUFFER, mat4s.size() * sizeof(glm::mat4), mat4s.data(), GL_STATIC_DRAW);

	mov	r8, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR [rbx+8]
	sub	rdx, r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\VBO.cpp

; 15   : 	glBufferData(GL_ARRAY_BUFFER, mat4s.size() * sizeof(glm::mat4), mat4s.data(), GL_STATIC_DRAW);

	and	rdx, -64				; ffffffffffffffc0H
	mov	ecx, 34962				; 00008892H
	lea	r9d, QWORD PTR [rcx+82]
	call	QWORD PTR glad_glBufferData
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx]
	test	rcx, rcx
	je	SHORT $LN9@VBO

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -64				; ffffffffffffffc0H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@VBO

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@VBO

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@VBO:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN9@VBO:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\VBO.cpp

; 16   : }

	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN24@VBO:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@VBO:
??0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z ENDP ; VBO::VBO
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
mat4s$GSCopy$ = 32
__$ArrayPad$ = 40
this$ = 64
mat4s$ = 72
?dtor$0@?0???0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z@4HA PROC ; `VBO::VBO'::`1'::dtor$0
	mov	rcx, QWORD PTR mat4s$GSCopy$[rdx]
	jmp	??1?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@QEAA@XZ ; std::vector<glm::mat<4,4,float,0>,std::allocator<glm::mat<4,4,float,0> > >::~vector<glm::mat<4,4,float,0>,std::allocator<glm::mat<4,4,float,0> > >
?dtor$0@?0???0VBO@@QEAA@V?$vector@U?$mat@$03$03M$0A@@glm@@V?$allocator@U?$mat@$03$03M$0A@@glm@@@std@@@std@@@Z@4HA ENDP ; `VBO::VBO'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\VBO.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\VBO.cpp
;	COMDAT ??0VBO@@QEAA@AEAV?$vector@MV?$allocator@M@std@@@std@@@Z
_TEXT	SEGMENT
this$ = 48
vertices$ = 56
??0VBO@@QEAA@AEAV?$vector@MV?$allocator@M@std@@@std@@@Z PROC ; VBO::VBO, COMDAT

; 5    : {

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 6    : 	glGenBuffers(1, &ID);

	mov	rdx, rcx
	mov	ecx, 1
	call	QWORD PTR glad_glGenBuffers

; 7    : 	glBindBuffer(GL_ARRAY_BUFFER, ID);

	mov	edx, DWORD PTR [rdi]
	mov	ecx, 34962				; 00008892H
	call	QWORD PTR glad_glBindBuffer

; 8    : 	glBufferData(GL_ARRAY_BUFFER, vertices.size() * sizeof(float), vertices.data(), GL_STATIC_DRAW);

	mov	r8, QWORD PTR [rbx]
	mov	ecx, 34962				; 00008892H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR [rbx+8]
	sub	rdx, r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\VBO.cpp

; 8    : 	glBufferData(GL_ARRAY_BUFFER, vertices.size() * sizeof(float), vertices.data(), GL_STATIC_DRAW);

	and	rdx, -4
	lea	r9d, QWORD PTR [rcx+82]
	call	QWORD PTR glad_glBufferData

; 9    : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0VBO@@QEAA@AEAV?$vector@MV?$allocator@M@std@@@std@@@Z ENDP ; VBO::VBO
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\VBO.cpp
;	COMDAT ?Bind@VBO@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?Bind@VBO@@QEAAXXZ PROC					; VBO::Bind, COMDAT

; 21   : 	glBindBuffer(GL_ARRAY_BUFFER, ID);

	mov	edx, DWORD PTR [rcx]
	mov	ecx, 34962				; 00008892H
	rex_jmp	QWORD PTR glad_glBindBuffer
?Bind@VBO@@QEAAXXZ ENDP					; VBO::Bind
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\VBO.cpp
;	COMDAT ?Unbind@VBO@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?Unbind@VBO@@QEAAXXZ PROC				; VBO::Unbind, COMDAT

; 27   : 	glBindBuffer(GL_ARRAY_BUFFER, 0);

	xor	edx, edx
	mov	ecx, 34962				; 00008892H
	rex_jmp	QWORD PTR glad_glBindBuffer
?Unbind@VBO@@QEAAXXZ ENDP				; VBO::Unbind
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\VBO.cpp
;	COMDAT ?Delete@VBO@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?Delete@VBO@@QEAAXXZ PROC				; VBO::Delete, COMDAT

; 33   : 	glDeleteBuffers(1, &ID);

	mov	rdx, rcx
	mov	ecx, 1
	rex_jmp	QWORD PTR glad_glDeleteBuffers
?Delete@VBO@@QEAAXXZ ENDP				; VBO::Delete
_TEXT	ENDS
END

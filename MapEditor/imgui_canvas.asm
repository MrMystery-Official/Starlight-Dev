; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??$Get@UImDrawList@@@VtxCurrentOffsetRef@ImCanvasDetails@@SAAEAIPEAUImDrawList@@@Z ; ImCanvasDetails::VtxCurrentOffsetRef::Get<ImDrawList>
PUBLIC	??$Get@UImDrawList@@@FringeScaleRef@ImCanvasDetails@@SAAEAMPEAUImDrawList@@@Z ; ImCanvasDetails::FringeScaleRef::Get<ImDrawList>
PUBLIC	?empty@?$ImVector@UImDrawCmd@@@@QEBA_NXZ	; ImVector<ImDrawCmd>::empty
PUBLIC	?size@?$ImVector@UImDrawCmd@@@@QEBAHXZ		; ImVector<ImDrawCmd>::size
PUBLIC	?LeaveLocalSpace@Canvas@ImGuiEx@@AEAAXXZ	; ImGuiEx::Canvas::LeaveLocalSpace
PUBLIC	?EnterLocalSpace@Canvas@ImGuiEx@@AEAAXXZ	; ImGuiEx::Canvas::EnterLocalSpace
PUBLIC	?RestoreViewportState@Canvas@ImGuiEx@@AEAAXXZ	; ImGuiEx::Canvas::RestoreViewportState
PUBLIC	?SaveViewportState@Canvas@ImGuiEx@@AEAAXXZ	; ImGuiEx::Canvas::SaveViewportState
PUBLIC	?RestoreInputState@Canvas@ImGuiEx@@AEAAXXZ	; ImGuiEx::Canvas::RestoreInputState
PUBLIC	?SaveInputState@Canvas@ImGuiEx@@AEAAXXZ		; ImGuiEx::Canvas::SaveInputState
PUBLIC	?UpdateViewTransformPosition@Canvas@ImGuiEx@@AEAAXXZ ; ImGuiEx::Canvas::UpdateViewTransformPosition
PUBLIC	?CalcViewRect@Canvas@ImGuiEx@@QEBA?AUImRect@@AEBUCanvasView@2@@Z ; ImGuiEx::Canvas::CalcViewRect
PUBLIC	?ToLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@AEBUCanvasView@2@@Z ; ImGuiEx::Canvas::ToLocal
PUBLIC	?ToLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@@Z ; ImGuiEx::Canvas::ToLocal
PUBLIC	?FromLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@AEBUCanvasView@2@@Z ; ImGuiEx::Canvas::FromLocal
PUBLIC	?FromLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@@Z ; ImGuiEx::Canvas::FromLocal
PUBLIC	?Resume@Canvas@ImGuiEx@@QEAAXXZ			; ImGuiEx::Canvas::Resume
PUBLIC	?Suspend@Canvas@ImGuiEx@@QEAAXXZ		; ImGuiEx::Canvas::Suspend
PUBLIC	?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z ; ImGuiEx::Canvas::CalcCenterView
PUBLIC	?SetView@Canvas@ImGuiEx@@QEAAXAEBUCanvasView@2@@Z ; ImGuiEx::Canvas::SetView
PUBLIC	?End@Canvas@ImGuiEx@@QEAAXXZ			; ImGuiEx::Canvas::End
PUBLIC	?Begin@Canvas@ImGuiEx@@QEAA_NIAEBUImVec2@@@Z	; ImGuiEx::Canvas::Begin
PUBLIC	?Begin@Canvas@ImGuiEx@@QEAA_NPEBDAEBUImVec2@@@Z	; ImGuiEx::Canvas::Begin
PUBLIC	?View@Canvas@ImGuiEx@@QEBAAEBUCanvasView@2@XZ	; ImGuiEx::Canvas::View
PUBLIC	??0CanvasView@ImGuiEx@@QEAA@AEBUImVec2@@M@Z	; ImGuiEx::CanvasView::CanvasView
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LeaveLocalSpace@Canvas@ImGuiEx@@AEAAXXZ DD imagerel $LN139
	DD	imagerel $LN139+1178
	DD	imagerel $unwind$?LeaveLocalSpace@Canvas@ImGuiEx@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnterLocalSpace@Canvas@ImGuiEx@@AEAAXXZ DD imagerel $LN121
	DD	imagerel $LN121+1227
	DD	imagerel $unwind$?EnterLocalSpace@Canvas@ImGuiEx@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Suspend@Canvas@ImGuiEx@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+38
	DD	imagerel $unwind$?Suspend@Canvas@ImGuiEx@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z DD imagerel $LN40
	DD	imagerel $LN40+129
	DD	imagerel $unwind$?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z DD imagerel $LN40+129
	DD	imagerel $LN40+270
	DD	imagerel $chain$0$?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z DD imagerel $LN40+270
	DD	imagerel $LN40+335
	DD	imagerel $chain$1$?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetView@Canvas@ImGuiEx@@QEAAXAEBUCanvasView@2@@Z DD imagerel $LN23
	DD	imagerel $LN23+144
	DD	imagerel $unwind$?SetView@Canvas@ImGuiEx@@QEAAXAEBUCanvasView@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?End@Canvas@ImGuiEx@@QEAAXXZ DD imagerel $LN10
	DD	imagerel $LN10+133
	DD	imagerel $unwind$?End@Canvas@ImGuiEx@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Begin@Canvas@ImGuiEx@@QEAA_NIAEBUImVec2@@@Z DD imagerel $LN97
	DD	imagerel $LN97+298
	DD	imagerel $unwind$?Begin@Canvas@ImGuiEx@@QEAA_NIAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?Begin@Canvas@ImGuiEx@@QEAA_NIAEBUImVec2@@@Z DD imagerel $LN97+298
	DD	imagerel $LN97+742
	DD	imagerel $chain$0$?Begin@Canvas@ImGuiEx@@QEAA_NIAEBUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Begin@Canvas@ImGuiEx@@QEAA_NPEBDAEBUImVec2@@@Z DD imagerel $LN4
	DD	imagerel $LN4+51
	DD	imagerel $unwind$?Begin@Canvas@ImGuiEx@@QEAA_NPEBDAEBUImVec2@@@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Begin@Canvas@ImGuiEx@@QEAA_NPEBDAEBUImVec2@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?Begin@Canvas@ImGuiEx@@QEAA_NIAEBUImVec2@@@Z DD 020521H
	DD	097405H
	DD	imagerel $LN97
	DD	imagerel $LN97+298
	DD	imagerel $unwind$?Begin@Canvas@ImGuiEx@@QEAA_NIAEBUImVec2@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Begin@Canvas@ImGuiEx@@QEAA_NIAEBUImVec2@@@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?End@Canvas@ImGuiEx@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetView@Canvas@ImGuiEx@@QEAAXAEBUCanvasView@2@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z DD 021H
	DD	imagerel $LN40
	DD	imagerel $LN40+129
	DD	imagerel $unwind$?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z DD 020521H
	DD	017805H
	DD	imagerel $LN40
	DD	imagerel $LN40+129
	DD	imagerel $unwind$?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z DD 052601H
	DD	08826H
	DD	026818H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Suspend@Canvas@ImGuiEx@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnterLocalSpace@Canvas@ImGuiEx@@AEAAXXZ DD 0a3201H
	DD	048832H
	DD	057824H
	DD	06681fH
	DD	011340aH
	DD	07006d20aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LeaveLocalSpace@Canvas@ImGuiEx@@AEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
;	COMDAT ??D@YA?AUImVec2@@AEBU0@M@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
lhs$ = 16
rhs$ = 24
??D@YA?AUImVec2@@AEBU0@M@Z PROC				; operator*, COMDAT

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	movaps	xmm0, xmm2
	mov	rax, rcx
	mulss	xmm0, DWORD PTR [rdx]
	mulss	xmm2, DWORD PTR [rdx+4]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR [rcx], xmm0
	movss	DWORD PTR [rcx+4], xmm2

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	ret	0
??D@YA?AUImVec2@@AEBU0@M@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
;	COMDAT ??H@YA?AUImVec2@@AEBU0@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
lhs$ = 16
rhs$ = 24
??H@YA?AUImVec2@@AEBU0@0@Z PROC				; operator+, COMDAT

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	movss	xmm0, DWORD PTR [rdx]
	mov	rax, rcx
	movss	xmm1, DWORD PTR [rdx+4]
	addss	xmm0, DWORD PTR [r8]
	addss	xmm1, DWORD PTR [r8+4]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR [rcx], xmm0
	movss	DWORD PTR [rcx+4], xmm1

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	ret	0
??H@YA?AUImVec2@@AEBU0@0@Z ENDP				; operator+
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
;	COMDAT ??G@YA?AUImVec2@@AEBU0@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
lhs$ = 16
rhs$ = 24
??G@YA?AUImVec2@@AEBU0@0@Z PROC				; operator-, COMDAT

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm0, DWORD PTR [rdx]
	mov	rax, rcx
	movss	xmm1, DWORD PTR [rdx+4]
	subss	xmm0, DWORD PTR [r8]
	subss	xmm1, DWORD PTR [r8+4]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR [rcx], xmm0
	movss	DWORD PTR [rcx+4], xmm1

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	ret	0
??G@YA?AUImVec2@@AEBU0@0@Z ENDP				; operator-
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.h
;	COMDAT ??0CanvasView@ImGuiEx@@QEAA@AEBUImVec2@@M@Z
_TEXT	SEGMENT
this$ = 8
origin$ = 16
scale$ = 24
??0CanvasView@ImGuiEx@@QEAA@AEBUImVec2@@M@Z PROC	; ImGuiEx::CanvasView::CanvasView, COMDAT

; 68   :         : Origin(origin)

	movsd	xmm0, QWORD PTR [rdx]
	xorps	xmm1, xmm1

; 69   :         , Scale(scale)
; 70   :         , InvScale(scale ? 1.0f / scale : 0.0f)

	ucomiss	xmm2, xmm1
	movss	DWORD PTR [rcx+8], xmm2
	movsd	QWORD PTR [rcx], xmm0
	jp	SHORT $LN5@CanvasView
	jne	SHORT $LN5@CanvasView
	movss	DWORD PTR [rcx+12], xmm1

; 72   :     }

	mov	rax, rcx
	ret	0
$LN5@CanvasView:

; 69   :         , Scale(scale)
; 70   :         , InvScale(scale ? 1.0f / scale : 0.0f)

	movss	xmm0, DWORD PTR __real@3f800000

; 72   :     }

	mov	rax, rcx
	divss	xmm0, xmm2
	movss	DWORD PTR [rcx+12], xmm0
	ret	0
??0CanvasView@ImGuiEx@@QEAA@AEBUImVec2@@M@Z ENDP	; ImGuiEx::CanvasView::CanvasView
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.h
;	COMDAT ?View@Canvas@ImGuiEx@@QEBAAEBUCanvasView@2@XZ
_TEXT	SEGMENT
this$ = 8
?View@Canvas@ImGuiEx@@QEBAAEBUCanvasView@2@XZ PROC	; ImGuiEx::Canvas::View, COMDAT

; 185  :     const CanvasView& View() const { return m_View; }

	lea	rax, QWORD PTR [rcx+64]
	ret	0
?View@Canvas@ImGuiEx@@QEBAAEBUCanvasView@2@XZ ENDP	; ImGuiEx::Canvas::View
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?ImFringeScaleRef@@YAAEAMPEAUImDrawList@@@Z
_TEXT	SEGMENT
drawList$ = 8
?ImFringeScaleRef@@YAAEAMPEAUImDrawList@@@Z PROC	; ImFringeScaleRef, COMDAT

; 83   :     using namespace ImCanvasDetails;
; 84   :     return FringeScaleRef::Get<ImDrawList>(drawList);

	lea	rax, QWORD PTR [rcx+192]

; 85   : }

	ret	0
?ImFringeScaleRef@@YAAEAMPEAUImDrawList@@@Z ENDP	; ImFringeScaleRef
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?ImVtxOffsetRef@@YAAEAIPEAUImDrawList@@@Z
_TEXT	SEGMENT
drawList$ = 8
?ImVtxOffsetRef@@YAAEAIPEAUImDrawList@@@Z PROC		; ImVtxOffsetRef, COMDAT

; 89   :     using namespace ImCanvasDetails;
; 90   :     return VtxCurrentOffsetRef::Get<ImDrawList>(drawList);

	lea	rax, QWORD PTR [rcx+160]

; 91   : }

	ret	0
?ImVtxOffsetRef@@YAAEAIPEAUImDrawList@@@Z ENDP		; ImVtxOffsetRef
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?ImSelectPositive@@YA?AUImVec2@@AEBU1@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
lhs$ = 16
rhs$ = 24
?ImSelectPositive@@YA?AUImVec2@@AEBU1@0@Z PROC		; ImSelectPositive, COMDAT

; 93   : static inline ImVec2 ImSelectPositive(const ImVec2& lhs, const ImVec2& rhs) { return ImVec2(lhs.x > 0.0f ? lhs.x : rhs.x, lhs.y > 0.0f ? lhs.y : rhs.y); }

	movss	xmm1, DWORD PTR [rdx+4]
	xorps	xmm2, xmm2
	comiss	xmm1, xmm2
	ja	SHORT $LN4@ImSelectPo
	movss	xmm1, DWORD PTR [r8+4]
$LN4@ImSelectPo:
	movss	xmm0, DWORD PTR [rdx]
	comiss	xmm0, xmm2
	ja	SHORT $LN6@ImSelectPo
	movss	xmm0, DWORD PTR [r8]
$LN6@ImSelectPo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR [rcx], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 93   : static inline ImVec2 ImSelectPositive(const ImVec2& lhs, const ImVec2& rhs) { return ImVec2(lhs.x > 0.0f ? lhs.x : rhs.x, lhs.y > 0.0f ? lhs.y : rhs.y); }

	mov	rax, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR [rcx+4], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 93   : static inline ImVec2 ImSelectPositive(const ImVec2& lhs, const ImVec2& rhs) { return ImVec2(lhs.x > 0.0f ? lhs.x : rhs.x, lhs.y > 0.0f ? lhs.y : rhs.y); }

	ret	0
?ImSelectPositive@@YA?AUImVec2@@AEBU1@0@Z ENDP		; ImSelectPositive
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?Begin@Canvas@ImGuiEx@@QEAA_NPEBDAEBUImVec2@@@Z
_TEXT	SEGMENT
this$ = 48
id$dead$ = 56
size$ = 64
?Begin@Canvas@ImGuiEx@@QEAA_NPEBDAEBUImVec2@@@Z PROC	; ImGuiEx::Canvas::Begin, COMDAT

; 96   : {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdi, r8

; 97   :     return Begin(ImGui::GetID(id), size);

	lea	rcx, OFFSET FLAT:??_C@_0L@DHFCBLFP@AINBEditor@
	call	?GetID@ImGui@@YAIPEBD@Z			; ImGui::GetID
	mov	edx, eax
	mov	r8, rdi
	mov	rcx, rbx

; 98   : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

; 97   :     return Begin(ImGui::GetID(id), size);

	jmp	?Begin@Canvas@ImGuiEx@@QEAA_NIAEBUImVec2@@@Z ; ImGuiEx::Canvas::Begin
?Begin@Canvas@ImGuiEx@@QEAA_NPEBDAEBUImVec2@@@Z ENDP	; ImGuiEx::Canvas::Begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?Begin@Canvas@ImGuiEx@@QEAA_NIAEBUImVec2@@@Z
_TEXT	SEGMENT
$T7 = 64
this$ = 64
id$ = 72
size$ = 80
?Begin@Canvas@ImGuiEx@@QEAA_NIAEBUImVec2@@@Z PROC	; ImGuiEx::Canvas::Begin, COMDAT

; 101  : {

$LN97:
	push	rbx
	sub	rsp, 48					; 00000030H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10239:     ImGuiWindow* window = GetCurrentWindowRead();

	mov	r9, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 101  : {

	mov	r11d, edx
	mov	rbx, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10240:     return window->DC.CursorPos;

	mov	rax, QWORD PTR [r9+16408]
	movss	xmm0, DWORD PTR [rax+312]
	movss	xmm5, DWORD PTR [rax+316]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 104  :     m_WidgetPosition = ImGui::GetCursorScreenPos();

	movss	DWORD PTR [rcx+4], xmm0
	movss	DWORD PTR [rcx+8], xmm5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10452:     ImGuiWindow* window = GImGui->CurrentWindow;

	mov	rdx, QWORD PTR [r9+16408]

; 10446:     ImVec2 mx = (window->DC.CurrentColumns || g.CurrentTable) ? window->WorkRect.Max : window->ContentRegionRect.Max;

	cmp	QWORD PTR [rdx+480], 0
	jne	SHORT $LN90@Begin
	cmp	QWORD PTR [r9+19728], 0
	mov	eax, 648				; 00000288H
	je	SHORT $LN11@Begin
$LN90@Begin:
	mov	eax, 600				; 00000258H
$LN11@Begin:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 93   : static inline ImVec2 ImSelectPositive(const ImVec2& lhs, const ImVec2& rhs) { return ImVec2(lhs.x > 0.0f ? lhs.x : rhs.x, lhs.y > 0.0f ? lhs.y : rhs.y); }

	movss	xmm2, DWORD PTR [r8+4]
	xorps	xmm4, xmm4
	comiss	xmm2, xmm4
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10446:     ImVec2 mx = (window->DC.CurrentColumns || g.CurrentTable) ? window->WorkRect.Max : window->ContentRegionRect.Max;

	movss	xmm3, DWORD PTR [rax+rdx]
	movss	xmm1, DWORD PTR [rax+rdx+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	subss	xmm3, DWORD PTR [rdx+312]
	subss	xmm1, DWORD PTR [rdx+316]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 93   : static inline ImVec2 ImSelectPositive(const ImVec2& lhs, const ImVec2& rhs) { return ImVec2(lhs.x > 0.0f ? lhs.x : rhs.x, lhs.y > 0.0f ? lhs.y : rhs.y); }

	ja	SHORT $LN19@Begin
	movaps	xmm2, xmm1
$LN19@Begin:
	movss	xmm1, DWORD PTR [r8]
	comiss	xmm1, xmm4
	ja	SHORT $LN21@Begin
	movaps	xmm1, xmm3
$LN21@Begin:

; 105  :     m_WidgetSize = ImSelectPositive(size, ImGui::GetContentRegionAvail());

	movss	DWORD PTR [rcx+12], xmm1

; 108  : 
; 109  :     UpdateViewTransformPosition();
; 110  : 
; 111  : # if IMGUI_VERSION_NUM > 18415
; 112  :     if (ImGui::IsClippedEx(m_WidgetRect, id))

	mov	edx, r11d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	addss	xmm1, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 105  :     m_WidgetSize = ImSelectPositive(size, ImGui::GetContentRegionAvail());

	movss	DWORD PTR [rcx+16], xmm2

; 106  :     m_WidgetRect = ImRect(m_WidgetPosition, m_WidgetPosition + m_WidgetSize);

	shufps	xmm0, xmm0, 225				; 000000e1H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	addss	xmm2, xmm5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 106  :     m_WidgetRect = ImRect(m_WidgetPosition, m_WidgetPosition + m_WidgetSize);

	movss	xmm0, xmm5
	add	rcx, 20
	shufps	xmm0, xmm0, 198				; 000000c6H
	movss	xmm0, xmm1
	shufps	xmm0, xmm0, 39				; 00000027H
	movss	xmm0, xmm2
	shufps	xmm0, xmm0, 57				; 00000039H
	movups	XMMWORD PTR [rcx], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rax, QWORD PTR [r9+16408]
	mov	BYTE PTR [rax+237], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 107  :     m_DrawList = ImGui::GetWindowDrawList();

	mov	rax, QWORD PTR [r9+16408]
	mov	r10, QWORD PTR [rax+728]
	mov	QWORD PTR [rbx+40], r10
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	movss	xmm1, DWORD PTR [rbx+4]
	movss	xmm0, DWORD PTR [rbx+68]
	addss	xmm1, DWORD PTR [rbx+64]
	addss	xmm0, DWORD PTR [rbx+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 348  :     m_ViewTransformPosition = m_View.Origin + m_WidgetPosition;

	movss	DWORD PTR [rbx+96], xmm1
	movss	DWORD PTR [rbx+100], xmm0

; 108  : 
; 109  :     UpdateViewTransformPosition();
; 110  : 
; 111  : # if IMGUI_VERSION_NUM > 18415
; 112  :     if (ImGui::IsClippedEx(m_WidgetRect, id))

	call	?IsClippedEx@ImGui@@YA_NAEBUImRect@@I@Z	; ImGui::IsClippedEx
	test	al, al
	je	SHORT $LN2@Begin

; 113  :         return false;

	xor	al, al

; 154  : }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
$LN2@Begin:

; 114  : # else
; 115  :     if (ImGui::IsClippedEx(m_WidgetRect, id, false))
; 116  :         return false;
; 117  : # endif
; 118  : 
; 119  :     // Save current channel, so we can assert when user
; 120  :     // call canvas API with different one.
; 121  :     m_ExpectedChannel = m_DrawList->_Splitter._Current;

	mov	eax, DWORD PTR [r10+168]
	mov	DWORD PTR [rbx+48], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rax, QWORD PTR [r9+16408]
	mov	QWORD PTR [rsp+72], rdi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10249:     window->DC.CursorPos = pos;

	xor	edi, edi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [r9+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10249:     window->DC.CursorPos = pos;

	mov	QWORD PTR [rax+312], rdi

; 10251:     window->DC.IsSetPos = true;

	mov	BYTE PTR [rax+377], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 354  :     m_MousePosBackup = io.MousePos;

	movsd	xmm0, QWORD PTR [r9+3592]
	movsd	QWORD PTR [rbx+112], xmm0

; 355  :     m_MousePosPrevBackup = io.MousePosPrev;

	movsd	xmm1, QWORD PTR [r9+14068]
	movsd	QWORD PTR [rbx+120], xmm1

; 356  :     for (auto i = 0; i < IM_ARRAYSIZE(m_MouseClickedPosBackup); ++i)
; 357  :         m_MouseClickedPosBackup[i] = io.MouseClickedPos[i];

	movsd	xmm0, QWORD PTR [r9+14076]
	movsd	QWORD PTR [rbx+128], xmm0
	movsd	xmm1, QWORD PTR [r9+14084]
	movsd	QWORD PTR [rbx+136], xmm1
	movsd	xmm0, QWORD PTR [r9+14092]
	movsd	QWORD PTR [rbx+144], xmm0
	movsd	xmm1, QWORD PTR [r9+14100]
	movsd	QWORD PTR [rbx+152], xmm1
	movsd	xmm0, QWORD PTR [r9+14108]
	movsd	QWORD PTR [rbx+160], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rax, QWORD PTR [r9+16408]
	mov	BYTE PTR [rax+237], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 373  :     auto viewport = ImGui::GetWindowViewport();

	mov	rcx, QWORD PTR [r9+19000]

; 374  : 
; 375  :     m_WindowPosBackup = window->Pos;

	mov	rax, QWORD PTR [r9+16408]
	movsd	xmm0, QWORD PTR [rax+80]
	movsd	QWORD PTR [rbx+176], xmm0

; 376  :     m_ViewportPosBackup = viewport->Pos;

	movsd	xmm1, QWORD PTR [rcx+8]
	movsd	QWORD PTR [rbx+184], xmm1
	movsd	xmm0, QWORD PTR [rcx+16]
	movsd	QWORD PTR [rbx+192], xmm0
	movsd	xmm1, QWORD PTR [rcx+24]
	movsd	QWORD PTR [rbx+200], xmm1
	movsd	xmm0, QWORD PTR [rcx+32]

; 138  : 
; 139  :     EnterLocalSpace();

	mov	rcx, rbx

; 376  :     m_ViewportPosBackup = viewport->Pos;

	movsd	QWORD PTR [rbx+208], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rax, QWORD PTR [r9+16408]
	mov	BYTE PTR [rax+237], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 137  :     m_WindowCursorMaxBackup = ImGui::GetCurrentWindow()->DC.CursorMaxPos;

	mov	rax, QWORD PTR [r9+16408]
	movsd	xmm0, QWORD PTR [rax+336]
	movsd	QWORD PTR [rbx+168], xmm0

; 138  : 
; 139  :     EnterLocalSpace();

	call	?EnterLocalSpace@Canvas@ImGuiEx@@AEAAXXZ ; ImGuiEx::Canvas::EnterLocalSpace
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5600 :     ImGuiContext& g = *GImGui;

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui

; 5601 :     g.NextItemData.ItemFlags |= ImGuiItemFlags_AllowOverlap;

	or	DWORD PTR [rcx+18596], 512		; 00000200H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 147  :     ImGui::Dummy(m_ViewRect.GetSize());

	lea	rcx, QWORD PTR $T7[rsp]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10249:     window->DC.CursorPos = pos;

	movsd	xmm0, QWORD PTR [rbx+80]
	movsd	QWORD PTR [rax+312], xmm0

; 10251:     window->DC.IsSetPos = true;

	mov	BYTE PTR [rax+377], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 528  :     ImVec2      GetSize() const                     { return ImVec2(Max.x - Min.x, Max.y - Min.y); }

	movss	xmm1, DWORD PTR [rbx+88]
	movss	xmm0, DWORD PTR [rbx+92]
	subss	xmm1, DWORD PTR [rbx+80]
	subss	xmm0, DWORD PTR [rbx+84]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR $T7[rsp], xmm1
	movss	DWORD PTR $T7[rsp+4], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 147  :     ImGui::Dummy(m_ViewRect.GetSize());

	call	?Dummy@ImGui@@YAXAEBUImVec2@@@Z		; ImGui::Dummy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	r11, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [r11+16408]
	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [r11+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10249:     window->DC.CursorPos = pos;

	mov	QWORD PTR [rax+312], rdi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 153  :     return true;

	mov	rdi, QWORD PTR [rsp+72]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10251:     window->DC.IsSetPos = true;

	mov	BYTE PTR [rax+377], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 153  :     return true;

	mov	al, 1
	mov	BYTE PTR [rbx], 1

; 154  : }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?Begin@Canvas@ImGuiEx@@QEAA_NIAEBUImVec2@@@Z ENDP	; ImGuiEx::Canvas::Begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?End@Canvas@ImGuiEx@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?End@Canvas@ImGuiEx@@QEAAXXZ PROC			; ImGuiEx::Canvas::End, COMDAT

; 157  : {

$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 158  :     // If you're here your call to Begin() returned false,
; 159  :     // or Begin() wasn't called at all.
; 160  :     IM_ASSERT(m_InBeginEnd == true);
; 161  : 
; 162  :     // If you're here, please make sure you do not interleave
; 163  :     // channel splitter with canvas.
; 164  :     // Always call canvas function with using same channel.
; 165  :     IM_ASSERT(m_DrawList->_Splitter._Current == m_ExpectedChannel);
; 166  : 
; 167  :     //auto& io = ImGui::GetIO();
; 168  : 
; 169  :     // Check: Unmatched calls to Suspend() / Resume(). Please check your code.
; 170  :     IM_ASSERT(m_SuspendCounter == 0);
; 171  : 
; 172  :     LeaveLocalSpace();

	call	?LeaveLocalSpace@Canvas@ImGuiEx@@AEAAXXZ ; ImGuiEx::Canvas::LeaveLocalSpace

; 174  :     ImGui::GetCurrentWindow()->DC.CursorMaxPos = m_WindowCursorMaxBackup;

	movss	xmm0, DWORD PTR [rbx+168]

; 182  :     ImGui::Dummy(m_WidgetSize);

	lea	rcx, QWORD PTR [rbx+12]
	movss	xmm1, DWORD PTR [rbx+172]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rdx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rdx+16408]
	mov	BYTE PTR [rax+237], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 174  :     ImGui::GetCurrentWindow()->DC.CursorMaxPos = m_WindowCursorMaxBackup;

	mov	rax, QWORD PTR [rdx+16408]
	movss	DWORD PTR [rax+336], xmm0
	movss	DWORD PTR [rax+340], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rax, QWORD PTR [rdx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rdx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10249:     window->DC.CursorPos = pos;

	movsd	xmm0, QWORD PTR [rbx+4]
	movsd	QWORD PTR [rax+312], xmm0

; 10250:     //window->DC.CursorMaxPos = ImMax(window->DC.CursorMaxPos, window->DC.CursorPos);
; 10251:     window->DC.IsSetPos = true;

	mov	BYTE PTR [rax+377], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 182  :     ImGui::Dummy(m_WidgetSize);

	call	?Dummy@ImGui@@YAXAEBUImVec2@@@Z		; ImGui::Dummy

; 183  : 
; 184  :     // #debug: Rect around canvas. Content should be inside these bounds.
; 185  :     //m_DrawList->AddRect(m_WidgetPosition - ImVec2(1.0f, 1.0f), m_WidgetPosition + m_WidgetSize + ImVec2(1.0f, 1.0f), IM_COL32(196, 0, 0, 255));
; 186  : 
; 187  :     m_InBeginEnd = false;

	mov	BYTE PTR [rbx], 0

; 188  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?End@Canvas@ImGuiEx@@QEAAXXZ ENDP			; ImGuiEx::Canvas::End
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?SetView@Canvas@ImGuiEx@@QEAAXAEBUCanvasView@2@@Z
_TEXT	SEGMENT
this$ = 48
view$ = 56
?SetView@Canvas@ImGuiEx@@QEAAXAEBUCanvasView@2@@Z PROC	; ImGuiEx::Canvas::SetView, COMDAT

; 196  : {

$LN23:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdi, rdx

; 197  :     if (m_InBeginEnd)

	movzx	ecx, BYTE PTR [rcx]
	test	cl, cl
	je	SHORT $LN2@SetView

; 198  :         LeaveLocalSpace();

	mov	rcx, rbx
	call	?LeaveLocalSpace@Canvas@ImGuiEx@@AEAAXXZ ; ImGuiEx::Canvas::LeaveLocalSpace
	movzx	ecx, BYTE PTR [rbx]
$LN2@SetView:

; 199  : 
; 200  :     if (m_View.Origin.x != view.Origin.x || m_View.Origin.y != view.Origin.y)

	movss	xmm0, DWORD PTR [rbx+64]
	ucomiss	xmm0, DWORD PTR [rdi]
	jp	SHORT $LN15@SetView
	jne	SHORT $LN15@SetView
	movss	xmm0, DWORD PTR [rbx+68]
	ucomiss	xmm0, DWORD PTR [rdi+4]
	jp	SHORT $LN15@SetView
	je	SHORT $LN3@SetView
$LN15@SetView:

; 201  :     {
; 202  :         m_View.Origin = view.Origin;

	movsd	xmm1, QWORD PTR [rdi]
	movsd	QWORD PTR [rbx+64], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	movss	xmm0, DWORD PTR [rbx+68]
	addss	xmm0, DWORD PTR [rbx+8]
	addss	xmm1, DWORD PTR [rbx+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 348  :     m_ViewTransformPosition = m_View.Origin + m_WidgetPosition;

	movss	DWORD PTR [rbx+100], xmm0
	movss	DWORD PTR [rbx+96], xmm1
$LN3@SetView:

; 203  : 
; 204  :         UpdateViewTransformPosition();
; 205  :     }
; 206  : 
; 207  :     if (m_View.Scale != view.Scale)

	movss	xmm1, DWORD PTR [rdi+8]
	movss	xmm0, DWORD PTR [rbx+72]
	ucomiss	xmm0, xmm1
	jp	SHORT $LN14@SetView
	je	SHORT $LN5@SetView
$LN14@SetView:

; 208  :     {
; 209  :         m_View.Scale    = view.Scale;

	movss	DWORD PTR [rbx+72], xmm1

; 210  :         m_View.InvScale = view.InvScale;

	mov	eax, DWORD PTR [rdi+12]
	mov	DWORD PTR [rbx+76], eax
$LN5@SetView:

; 211  :     }
; 212  : 
; 213  :     if (m_InBeginEnd)

	test	cl, cl
	je	SHORT $LN6@SetView

; 214  :         EnterLocalSpace();

	mov	rcx, rbx
	call	?EnterLocalSpace@Canvas@ImGuiEx@@AEAAXXZ ; ImGuiEx::Canvas::EnterLocalSpace
$LN6@SetView:

; 215  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?SetView@Canvas@ImGuiEx@@QEAAXAEBUCanvasView@2@@Z ENDP	; ImGuiEx::Canvas::SetView
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
canvasRect$ = 80
?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z PROC ; ImGuiEx::Canvas::CalcCenterView, COMDAT

; 240  : {

$LN40:
	sub	rsp, 56					; 00000038H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 528  :     ImVec2      GetSize() const                     { return ImVec2(Max.x - Min.x, Max.y - Min.y); }

	movss	xmm5, DWORD PTR [r8+8]
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR [r8+12]
	movaps	XMMWORD PTR [rsp+32], xmm6
	movss	xmm6, DWORD PTR [r8]
	subss	xmm5, xmm6
	movaps	XMMWORD PTR [rsp], xmm8
	movss	xmm8, DWORD PTR [r8+4]
	subss	xmm1, xmm8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	comiss	xmm2, xmm5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 243  :     if (canvasRectSize.x <= 0.0f || canvasRectSize.y <= 0.0f)

	jae	$LN3@CalcCenter
	comiss	xmm2, xmm1
	jae	$LN3@CalcCenter

; 245  : 
; 246  :     auto widgetAspectRatio     = m_WidgetSize.y   > 0.0f ? m_WidgetSize.x   / m_WidgetSize.y   : 0.0f;

	movss	xmm3, DWORD PTR [rcx+16]
	comiss	xmm3, xmm2
	jbe	SHORT $LN9@CalcCenter
	movss	xmm4, DWORD PTR [rcx+12]
	divss	xmm4, xmm3
	jmp	SHORT $LN10@CalcCenter
$LN9@CalcCenter:
	xorps	xmm4, xmm4
$LN10@CalcCenter:

; 247  :     auto canvasRectAspectRatio = canvasRectSize.y > 0.0f ? canvasRectSize.x / canvasRectSize.y : 0.0f;

	comiss	xmm1, xmm2
	jbe	SHORT $LN11@CalcCenter
	movaps	xmm0, xmm5
	divss	xmm0, xmm1
	jmp	SHORT $LN12@CalcCenter
$LN11@CalcCenter:
	xorps	xmm0, xmm0
$LN12@CalcCenter:

; 248  : 
; 249  :     if (widgetAspectRatio <= 0.0f || canvasRectAspectRatio <= 0.0f)

	comiss	xmm2, xmm4
	jae	$LN3@CalcCenter
	comiss	xmm2, xmm0
	jae	$LN3@CalcCenter

; 250  :         return View();
; 251  : 
; 252  :     auto newOrigin = m_View.Origin;
; 253  :     auto newScale  = m_View.Scale;
; 254  :     if (canvasRectAspectRatio > widgetAspectRatio)

	comiss	xmm0, xmm4
	movaps	XMMWORD PTR [rsp+16], xmm7
	movss	xmm7, DWORD PTR [rcx+12]
	jbe	SHORT $LN6@CalcCenter

; 255  :     {
; 256  :         // width span across view
; 257  :         newScale = m_WidgetSize.x / canvasRectSize.x;

	divss	xmm7, xmm5

; 258  :         newOrigin = canvasRect.Min * -newScale;

	mulss	xmm1, xmm7
	movaps	xmm0, xmm7
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movaps	xmm4, xmm7
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm8, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 259  :         newOrigin.y += (m_WidgetSize.y - canvasRectSize.y * newScale) * 0.5f;

	subss	xmm3, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm6, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 259  :         newOrigin.y += (m_WidgetSize.y - canvasRectSize.y * newScale) * 0.5f;

	mulss	xmm3, DWORD PTR __real@3f000000
	addss	xmm3, xmm8

; 260  :     }

	jmp	SHORT $LN7@CalcCenter
$LN6@CalcCenter:

; 264  :         newScale = m_WidgetSize.y / canvasRectSize.y;

	movaps	xmm4, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	movaps	xmm0, xmm6
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 264  :         newScale = m_WidgetSize.y / canvasRectSize.y;

	divss	xmm4, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	movaps	xmm3, xmm8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 265  :         newOrigin = canvasRect.Min * -newScale;

	mulss	xmm5, xmm4
	movaps	xmm1, xmm4
	xorps	xmm1, DWORD PTR __xmm@80000000800000008000000080000000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm0, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 266  :         newOrigin.x += (m_WidgetSize.x - canvasRectSize.x * newScale) * 0.5f;

	subss	xmm7, xmm5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm3, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 266  :         newOrigin.x += (m_WidgetSize.x - canvasRectSize.x * newScale) * 0.5f;

	mulss	xmm7, DWORD PTR __real@3f000000
	movaps	xmm6, xmm7
	addss	xmm6, xmm0
$LN7@CalcCenter:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.h

; 70   :         , InvScale(scale ? 1.0f / scale : 0.0f)

	ucomiss	xmm4, xmm2
	movaps	xmm7, XMMWORD PTR [rsp+16]
	movaps	xmm0, xmm6
	unpcklps xmm0, xmm3
	movsd	QWORD PTR [rdx], xmm0
	movss	DWORD PTR [rdx+8], xmm4
	jp	SHORT $LN29@CalcCenter
	je	SHORT $LN28@CalcCenter
$LN29@CalcCenter:
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, xmm4
	movaps	xmm2, xmm0
$LN28@CalcCenter:
	movss	DWORD PTR [rdx+12], xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 270  : }

	mov	rax, rdx
	movaps	xmm6, XMMWORD PTR [rsp+32]
	movaps	xmm8, XMMWORD PTR [rsp]
	add	rsp, 56					; 00000038H
	ret	0
$LN3@CalcCenter:

; 244  :         return View();

	movups	xmm0, XMMWORD PTR [rcx+64]

; 270  : }

	mov	rax, rdx
	movaps	xmm6, XMMWORD PTR [rsp+32]
	movaps	xmm8, XMMWORD PTR [rsp]
	movups	XMMWORD PTR [rdx], xmm0
	add	rsp, 56					; 00000038H
	ret	0
?CalcCenterView@Canvas@ImGuiEx@@QEBA?AUCanvasView@2@AEBUImRect@@@Z ENDP ; ImGuiEx::Canvas::CalcCenterView
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?Suspend@Canvas@ImGuiEx@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Suspend@Canvas@ImGuiEx@@QEAAXXZ PROC			; ImGuiEx::Canvas::Suspend, COMDAT

; 273  : {

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H

; 274  :     // If you're here, please make sure you do not interleave
; 275  :     // channel splitter with canvas.
; 276  :     // Always call canvas function with using same channel.
; 277  :     IM_ASSERT(m_DrawList->_Splitter._Current == m_ExpectedChannel);
; 278  : 
; 279  :     if (m_SuspendCounter == 0)

	cmp	DWORD PTR [rcx+104], 0
	mov	rbx, rcx
	jne	SHORT $LN4@Suspend

; 280  :         LeaveLocalSpace();

	call	?LeaveLocalSpace@Canvas@ImGuiEx@@AEAAXXZ ; ImGuiEx::Canvas::LeaveLocalSpace

; 281  : 
; 282  :     ++m_SuspendCounter;

	inc	DWORD PTR [rbx+104]

; 283  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@Suspend:

; 281  : 
; 282  :     ++m_SuspendCounter;

	inc	DWORD PTR [rcx+104]

; 283  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?Suspend@Canvas@ImGuiEx@@QEAAXXZ ENDP			; ImGuiEx::Canvas::Suspend
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?Resume@Canvas@ImGuiEx@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?Resume@Canvas@ImGuiEx@@QEAAXXZ PROC			; ImGuiEx::Canvas::Resume, COMDAT

; 287  :     // If you're here, please make sure you do not interleave
; 288  :     // channel splitter with canvas.
; 289  :     // Always call canvas function with using same channel.
; 290  :     IM_ASSERT(m_DrawList->_Splitter._Current == m_ExpectedChannel);
; 291  : 
; 292  :     // Check: Number of calls to Resume() do not match calls to Suspend(). Please check your code.
; 293  :     IM_ASSERT(m_SuspendCounter > 0);
; 294  :     if (--m_SuspendCounter == 0)

	sub	DWORD PTR [rcx+104], 1
	je	?EnterLocalSpace@Canvas@ImGuiEx@@AEAAXXZ ; ImGuiEx::Canvas::EnterLocalSpace
$LN2@Resume:

; 295  :         EnterLocalSpace();
; 296  : }

	ret	0
?Resume@Canvas@ImGuiEx@@QEAAXXZ ENDP			; ImGuiEx::Canvas::Resume
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?FromLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
point$ = 24
?FromLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@@Z PROC	; ImGuiEx::Canvas::FromLocal, COMDAT

; 300  :     return point * m_View.Scale + m_ViewTransformPosition;

	movss	xmm1, DWORD PTR [rcx+72]
	mov	rax, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	movaps	xmm0, xmm1
	mulss	xmm1, DWORD PTR [r8+4]
	mulss	xmm0, DWORD PTR [r8]

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	addss	xmm1, DWORD PTR [rcx+100]
	addss	xmm0, DWORD PTR [rcx+96]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR [rdx+4], xmm1
	movss	DWORD PTR [rdx], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 301  : }

	ret	0
?FromLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@@Z ENDP	; ImGuiEx::Canvas::FromLocal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?FromLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@AEBUCanvasView@2@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
point$ = 24
view$ = 32
?FromLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@AEBUCanvasView@2@@Z PROC ; ImGuiEx::Canvas::FromLocal, COMDAT

; 305  :     return point * view.Scale + view.Origin + m_WidgetPosition;

	movss	xmm1, DWORD PTR [r9+8]
	mov	rax, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	movaps	xmm0, xmm1
	mulss	xmm1, DWORD PTR [r8+4]
	mulss	xmm0, DWORD PTR [r8]

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	addss	xmm1, DWORD PTR [r9+4]
	addss	xmm0, DWORD PTR [r9]
	addss	xmm1, DWORD PTR [rcx+8]
	addss	xmm0, DWORD PTR [rcx+4]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR [rdx+4], xmm1
	movss	DWORD PTR [rdx], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 306  : }

	ret	0
?FromLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@AEBUCanvasView@2@@Z ENDP ; ImGuiEx::Canvas::FromLocal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?ToLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
point$ = 24
?ToLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@@Z PROC	; ImGuiEx::Canvas::ToLocal, COMDAT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm0, DWORD PTR [r8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 320  :     return (point - m_ViewTransformPosition) * m_View.InvScale;

	mov	rax, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm1, DWORD PTR [r8+4]
	subss	xmm0, DWORD PTR [rcx+96]
	subss	xmm1, DWORD PTR [rcx+100]

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm0, DWORD PTR [rcx+76]
	mulss	xmm1, DWORD PTR [rcx+76]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR [rdx], xmm0
	movss	DWORD PTR [rdx+4], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 321  : }

	ret	0
?ToLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@@Z ENDP	; ImGuiEx::Canvas::ToLocal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?ToLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@AEBUCanvasView@2@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
point$ = 24
view$ = 32
?ToLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@AEBUCanvasView@2@@Z PROC ; ImGuiEx::Canvas::ToLocal, COMDAT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm0, DWORD PTR [r8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 325  :     return (point - view.Origin - m_WidgetPosition) * view.InvScale;

	mov	rax, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	subss	xmm0, DWORD PTR [r9]
	movss	xmm1, DWORD PTR [r8+4]
	subss	xmm1, DWORD PTR [r9+4]
	subss	xmm0, DWORD PTR [rcx+4]
	subss	xmm1, DWORD PTR [rcx+8]

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm0, DWORD PTR [r9+12]
	mulss	xmm1, DWORD PTR [r9+12]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR [rdx], xmm0
	movss	DWORD PTR [rdx+4], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 326  : }

	ret	0
?ToLocal@Canvas@ImGuiEx@@QEBA?AUImVec2@@AEBU3@AEBUCanvasView@2@@Z ENDP ; ImGuiEx::Canvas::ToLocal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?CalcViewRect@Canvas@ImGuiEx@@QEBA?AUImRect@@AEBUCanvasView@2@@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
view$ = 24
?CalcViewRect@Canvas@ImGuiEx@@QEBA?AUImRect@@AEBUCanvasView@2@@Z PROC ; ImGuiEx::Canvas::CalcViewRect, COMDAT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	xor	eax, eax
	mov	QWORD PTR [rdx], rax
	mov	QWORD PTR [rdx+8], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 343  :     return result;

	mov	rax, rdx
	movss	xmm1, DWORD PTR [r8+4]
	movss	xmm3, DWORD PTR [r8]
	xorps	xmm1, DWORD PTR __xmm@80000000800000008000000080000000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm1, DWORD PTR [r8+12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 341  :     result.Min = ImVec2(-view.Origin.x, -view.Origin.y) * view.InvScale;

	xorps	xmm3, DWORD PTR __xmm@80000000800000008000000080000000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm3, DWORD PTR [r8+12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 341  :     result.Min = ImVec2(-view.Origin.x, -view.Origin.y) * view.InvScale;

	movss	DWORD PTR [rdx+4], xmm1
	movss	DWORD PTR [rdx], xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm1, DWORD PTR [rcx+12]
	movss	xmm0, DWORD PTR [rcx+16]
	subss	xmm1, DWORD PTR [r8]
	subss	xmm0, DWORD PTR [r8+4]

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm1, DWORD PTR [r8+12]
	mulss	xmm0, DWORD PTR [r8+12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 342  :     result.Max = (m_WidgetSize - view.Origin) * view.InvScale;

	movss	DWORD PTR [rdx+8], xmm1
	movss	DWORD PTR [rdx+12], xmm0

; 344  : }

	ret	0
?CalcViewRect@Canvas@ImGuiEx@@QEBA?AUImRect@@AEBUCanvasView@2@@Z ENDP ; ImGuiEx::Canvas::CalcViewRect
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?UpdateViewTransformPosition@Canvas@ImGuiEx@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?UpdateViewTransformPosition@Canvas@ImGuiEx@@AEAAXXZ PROC ; ImGuiEx::Canvas::UpdateViewTransformPosition, COMDAT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	movss	xmm1, DWORD PTR [rcx+64]
	movss	xmm0, DWORD PTR [rcx+68]
	addss	xmm1, DWORD PTR [rcx+4]
	addss	xmm0, DWORD PTR [rcx+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 348  :     m_ViewTransformPosition = m_View.Origin + m_WidgetPosition;

	movss	DWORD PTR [rcx+96], xmm1
	movss	DWORD PTR [rcx+100], xmm0

; 349  : }

	ret	0
?UpdateViewTransformPosition@Canvas@ImGuiEx@@AEAAXXZ ENDP ; ImGuiEx::Canvas::UpdateViewTransformPosition
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?SaveInputState@Canvas@ImGuiEx@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?SaveInputState@Canvas@ImGuiEx@@AEAAXXZ PROC		; ImGuiEx::Canvas::SaveInputState, COMDAT

; 353  :     auto& io = ImGui::GetIO();

	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui

; 354  :     m_MousePosBackup = io.MousePos;

	movsd	xmm0, QWORD PTR [rax+3592]
	movsd	QWORD PTR [rcx+112], xmm0

; 355  :     m_MousePosPrevBackup = io.MousePosPrev;

	movsd	xmm1, QWORD PTR [rax+14068]
	movsd	QWORD PTR [rcx+120], xmm1

; 356  :     for (auto i = 0; i < IM_ARRAYSIZE(m_MouseClickedPosBackup); ++i)
; 357  :         m_MouseClickedPosBackup[i] = io.MouseClickedPos[i];

	movsd	xmm0, QWORD PTR [rax+14076]
	movsd	QWORD PTR [rcx+128], xmm0
	movsd	xmm1, QWORD PTR [rax+14084]
	movsd	QWORD PTR [rcx+136], xmm1
	movsd	xmm0, QWORD PTR [rax+14092]
	movsd	QWORD PTR [rcx+144], xmm0
	movsd	xmm1, QWORD PTR [rax+14100]
	movsd	QWORD PTR [rcx+152], xmm1
	movsd	xmm0, QWORD PTR [rax+14108]
	movsd	QWORD PTR [rcx+160], xmm0

; 358  : }

	ret	0
?SaveInputState@Canvas@ImGuiEx@@AEAAXXZ ENDP		; ImGuiEx::Canvas::SaveInputState
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?RestoreInputState@Canvas@ImGuiEx@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?RestoreInputState@Canvas@ImGuiEx@@AEAAXXZ PROC		; ImGuiEx::Canvas::RestoreInputState, COMDAT

; 362  :     auto& io = ImGui::GetIO();
; 363  :     io.MousePos = m_MousePosBackup;

	movsd	xmm0, QWORD PTR [rcx+112]
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	movsd	QWORD PTR [rax+3592], xmm0

; 364  :     io.MousePosPrev = m_MousePosPrevBackup;

	movsd	xmm1, QWORD PTR [rcx+120]
	movsd	QWORD PTR [rax+14068], xmm1

; 365  :     for (auto i = 0; i < IM_ARRAYSIZE(m_MouseClickedPosBackup); ++i)
; 366  :         io.MouseClickedPos[i] = m_MouseClickedPosBackup[i];

	movsd	xmm0, QWORD PTR [rcx+128]
	movsd	QWORD PTR [rax+14076], xmm0
	movsd	xmm1, QWORD PTR [rcx+136]
	movsd	QWORD PTR [rax+14084], xmm1
	movsd	xmm0, QWORD PTR [rcx+144]
	movsd	QWORD PTR [rax+14092], xmm0
	movsd	xmm1, QWORD PTR [rcx+152]
	movsd	QWORD PTR [rax+14100], xmm1
	movsd	xmm0, QWORD PTR [rcx+160]
	movsd	QWORD PTR [rax+14108], xmm0

; 367  : }

	ret	0
?RestoreInputState@Canvas@ImGuiEx@@AEAAXXZ ENDP		; ImGuiEx::Canvas::RestoreInputState
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?SaveViewportState@Canvas@ImGuiEx@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?SaveViewportState@Canvas@ImGuiEx@@AEAAXXZ PROC		; ImGuiEx::Canvas::SaveViewportState, COMDAT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rdx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rdx+16408]
	mov	BYTE PTR [rax+237], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 373  :     auto viewport = ImGui::GetWindowViewport();

	mov	r8, QWORD PTR [rdx+19000]

; 374  : 
; 375  :     m_WindowPosBackup = window->Pos;

	mov	rax, QWORD PTR [rdx+16408]
	movsd	xmm0, QWORD PTR [rax+80]
	movsd	QWORD PTR [rcx+176], xmm0

; 376  :     m_ViewportPosBackup = viewport->Pos;

	movsd	xmm1, QWORD PTR [r8+8]
	movsd	QWORD PTR [rcx+184], xmm1
	movsd	xmm0, QWORD PTR [r8+16]
	movsd	QWORD PTR [rcx+192], xmm0
	movsd	xmm1, QWORD PTR [r8+24]
	movsd	QWORD PTR [rcx+200], xmm1
	movsd	xmm0, QWORD PTR [r8+32]
	movsd	QWORD PTR [rcx+208], xmm0

; 377  :     m_ViewportSizeBackup = viewport->Size;
; 378  : # if IMGUI_VERSION_NUM > 18002
; 379  :     m_ViewportWorkPosBackup = viewport->WorkPos;
; 380  :     m_ViewportWorkSizeBackup = viewport->WorkSize;
; 381  : # else
; 382  :     m_ViewportWorkOffsetMinBackup = viewport->WorkOffsetMin;
; 383  :     m_ViewportWorkOffsetMaxBackup = viewport->WorkOffsetMax;
; 384  : # endif
; 385  : # endif
; 386  : }

	ret	0
?SaveViewportState@Canvas@ImGuiEx@@AEAAXXZ ENDP		; ImGuiEx::Canvas::SaveViewportState
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?RestoreViewportState@Canvas@ImGuiEx@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?RestoreViewportState@Canvas@ImGuiEx@@AEAAXXZ PROC	; ImGuiEx::Canvas::RestoreViewportState, COMDAT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rdx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rdx+16408]
	mov	BYTE PTR [rax+237], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 394  :     window->Pos = m_WindowPosBackup;

	movsd	xmm0, QWORD PTR [rcx+176]
	mov	rax, QWORD PTR [rdx+16408]
	mov	r8, QWORD PTR [rdx+19000]
	movsd	QWORD PTR [rax+80], xmm0

; 395  :     viewport->Pos = m_ViewportPosBackup;

	movsd	xmm1, QWORD PTR [rcx+184]
	movsd	QWORD PTR [r8+8], xmm1
	movsd	xmm0, QWORD PTR [rcx+192]
	movsd	QWORD PTR [r8+16], xmm0
	movsd	xmm1, QWORD PTR [rcx+200]
	movsd	QWORD PTR [r8+24], xmm1
	movsd	xmm0, QWORD PTR [rcx+208]
	movsd	QWORD PTR [r8+32], xmm0

; 396  :     viewport->Size = m_ViewportSizeBackup;
; 397  : # if IMGUI_VERSION_NUM > 18002
; 398  :     viewport->WorkPos = m_ViewportWorkPosBackup;
; 399  :     viewport->WorkSize = m_ViewportWorkSizeBackup;
; 400  : # else
; 401  :     viewport->WorkOffsetMin = m_ViewportWorkOffsetMinBackup;
; 402  :     viewport->WorkOffsetMax = m_ViewportWorkOffsetMaxBackup;
; 403  : # endif
; 404  : # endif
; 405  : }

	ret	0
?RestoreViewportState@Canvas@ImGuiEx@@AEAAXXZ ENDP	; ImGuiEx::Canvas::RestoreViewportState
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_draw.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?EnterLocalSpace@Canvas@ImGuiEx@@AEAAXXZ
_TEXT	SEGMENT
$T10 = 32
$T11 = 32
$T12 = 40
clipped_clip_rect$ = 40
this$ = 128
?EnterLocalSpace@Canvas@ImGuiEx@@AEAAXXZ PROC		; ImGuiEx::Canvas::EnterLocalSpace, COMDAT

; 408  : {

$LN121:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 112				; 00000070H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	movss	xmm0, DWORD PTR [rcx+12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 419  :     ImGui::PushClipRect(m_WidgetPosition, m_WidgetPosition + m_WidgetSize, true);

	lea	rdx, QWORD PTR [rcx+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	addss	xmm0, DWORD PTR [rdx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 408  : {

	mov	rdi, rcx
	movaps	XMMWORD PTR [rsp+96], xmm6
	movaps	XMMWORD PTR [rsp+80], xmm7
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5088 :     window->DrawList->PushClipRect(clip_rect_min, clip_rect_max, intersect_with_current_clip_rect);

	lea	r8, QWORD PTR $T11[rsp]
	mov	r9b, 1
	movaps	XMMWORD PTR [rsp+64], xmm8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR $T11[rsp], xmm0

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	movss	xmm0, DWORD PTR [rdx+4]
	addss	xmm0, DWORD PTR [rcx+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR $T11[rsp+4], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	BYTE PTR [rax+237], 1
	mov	rbx, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5088 :     window->DrawList->PushClipRect(clip_rect_min, clip_rect_max, intersect_with_current_clip_rect);

	mov	rcx, QWORD PTR [rbx+728]
	call	?PushClipRect@ImDrawList@@QEAAXAEBUImVec2@@0_N@Z ; ImDrawList::PushClipRect

; 5089 :     window->ClipRect = window->DrawList->_ClipRectStack.back();

	mov	rax, QWORD PTR [rbx+728]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1926 :     inline T&           back()                              { IM_ASSERT(Size > 0); return Data[Size - 1]; }

	movsxd	rcx, DWORD PTR [rax+88]
	mov	rax, QWORD PTR [rax+96]
	add	rcx, rcx

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	xmm0, DWORD PTR [rax+rcx*8-12]
	movss	xmm1, DWORD PTR [rax+rcx*8-8]
	movss	xmm2, DWORD PTR [rax+rcx*8-4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5089 :     window->ClipRect = window->DrawList->_ClipRectStack.back();

	mov	eax, DWORD PTR [rax+rcx*8-16]
	mov	DWORD PTR [rbx+624], eax
	movss	DWORD PTR [rbx+628], xmm0
	movss	DWORD PTR [rbx+632], xmm1
	movss	DWORD PTR [rbx+636], xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 420  :     auto clipped_clip_rect = m_DrawList->_ClipRectStack.back();

	mov	rax, QWORD PTR [rdi+40]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1926 :     inline T&           back()                              { IM_ASSERT(Size > 0); return Data[Size - 1]; }

	movsxd	rcx, DWORD PTR [rax+88]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 420  :     auto clipped_clip_rect = m_DrawList->_ClipRectStack.back();

	mov	rax, QWORD PTR [rax+96]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1926 :     inline T&           back()                              { IM_ASSERT(Size > 0); return Data[Size - 1]; }

	add	rcx, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 420  :     auto clipped_clip_rect = m_DrawList->_ClipRectStack.back();

	movups	xmm0, XMMWORD PTR [rax+rcx*8-16]
	movups	XMMWORD PTR clipped_clip_rect$[rsp], xmm0

; 421  :     ImGui::PopClipRect();

	call	?PopClipRect@ImGui@@YAXXZ		; ImGui::PopClipRect

; 429  :     m_DrawListCommadBufferSize       = ImMax(m_DrawList->CmdBuffer.Size, 0);

	mov	rbx, QWORD PTR [rdi+40]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 455  : template<typename T> static inline T ImMax(T lhs, T rhs)                        { return lhs >= rhs ? lhs : rhs; }

	xor	eax, eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 429  :     m_DrawListCommadBufferSize       = ImMax(m_DrawList->CmdBuffer.Size, 0);

	mov	ecx, DWORD PTR [rbx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 455  : template<typename T> static inline T ImMax(T lhs, T rhs)                        { return lhs >= rhs ? lhs : rhs; }

	test	ecx, ecx
	cmovns	eax, ecx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 429  :     m_DrawListCommadBufferSize       = ImMax(m_DrawList->CmdBuffer.Size, 0);

	mov	DWORD PTR [rdi+56], eax

; 430  :     m_DrawListStartVertexIndex       = m_DrawList->_VtxCurrentIdx + ImVtxOffsetRef(m_DrawList);

	mov	eax, DWORD PTR [rbx+160]
	add	eax, DWORD PTR [rbx+52]
	mov	DWORD PTR [rdi+60], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1912 :     inline bool         empty() const                       { return Size == 0; }

	movsxd	rdx, DWORD PTR [rbx]
	test	edx, edx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 445  :     if ((!m_DrawList->CmdBuffer.empty() && m_DrawList->CmdBuffer.back().ElemCount > 0) || m_DrawList->_Splitter._Count > 1)

	je	SHORT $LN117@EnterLocal
	mov	rax, QWORD PTR [rbx+8]
	imul	rcx, rdx, 56				; 00000038H
	cmp	DWORD PTR [rcx+rax-24], 0
	ja	SHORT $LN6@EnterLocal
$LN117@EnterLocal:
	cmp	DWORD PTR [rbx+172], 1
	jle	SHORT $LN5@EnterLocal
$LN6@EnterLocal:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_draw.cpp

; 470  :     ImDrawCmd* curr_cmd = &CmdBuffer.Data[CmdBuffer.Size - 1];

	lea	eax, DWORD PTR [rdx-1]
	movsxd	rcx, eax
	imul	rax, rcx, 56				; 00000038H
	add	rax, QWORD PTR [rbx+8]

; 471  :     IM_ASSERT(curr_cmd->UserCallback == NULL);
; 472  :     if (curr_cmd->ElemCount != 0)

	cmp	DWORD PTR [rax+32], 0
	je	SHORT $LN104@EnterLocal

; 473  :     {
; 474  :         AddDrawCmd();

	mov	rcx, rbx
	call	?AddDrawCmd@ImDrawList@@QEAAXXZ		; ImDrawList::AddDrawCmd

; 475  :         curr_cmd = &CmdBuffer.Data[CmdBuffer.Size - 1];

	mov	eax, DWORD PTR [rbx]
	dec	eax
	cdqe
	imul	rax, rax, 56				; 00000038H
	add	rax, QWORD PTR [rbx+8]
$LN104@EnterLocal:

; 476  :     }
; 477  :     curr_cmd->UserCallback = callback;
; 478  :     curr_cmd->UserCallbackData = callback_data;
; 479  : 
; 480  :     AddDrawCmd(); // Force a new command after us (see comment below)

	mov	rcx, rbx
	mov	QWORD PTR [rax+40], -2
	mov	QWORD PTR [rax+48], 0
	call	?AddDrawCmd@ImDrawList@@QEAAXXZ		; ImDrawList::AddDrawCmd
$LN5@EnterLocal:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 448  :     m_DrawListFirstCommandIndex = ImMax(m_DrawList->CmdBuffer.Size - 1, 0);

	mov	rax, QWORD PTR [rdi+40]

; 480  :     ImGui::PushClipRect(ImVec2(clipped_clip_rect.x, clipped_clip_rect.y), ImVec2(clipped_clip_rect.z, clipped_clip_rect.w), false);

	lea	rdx, QWORD PTR $T10[rsp]
	mov	ecx, DWORD PTR [rax]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 455  : template<typename T> static inline T ImMax(T lhs, T rhs)                        { return lhs >= rhs ? lhs : rhs; }

	mov	eax, 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 448  :     m_DrawListFirstCommandIndex = ImMax(m_DrawList->CmdBuffer.Size - 1, 0);

	sub	ecx, 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 455  : template<typename T> static inline T ImMax(T lhs, T rhs)                        { return lhs >= rhs ? lhs : rhs; }

	cmovns	eax, ecx

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 448  :     m_DrawListFirstCommandIndex = ImMax(m_DrawList->CmdBuffer.Size - 1, 0);

	mov	DWORD PTR [rdi+52], eax

; 480  :     ImGui::PushClipRect(ImVec2(clipped_clip_rect.x, clipped_clip_rect.y), ImVec2(clipped_clip_rect.z, clipped_clip_rect.w), false);

	xor	r8d, r8d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 452  :     window->Pos = ImVec2(0.0f, 0.0f);

	mov	rax, QWORD PTR [rcx+16408]
	mov	QWORD PTR [rax+80], 0

; 457  :     viewport_min.x = (viewport_min.x - m_ViewTransformPosition.x) * m_View.InvScale;

	movss	xmm5, DWORD PTR [rdi+76]
	movss	xmm1, DWORD PTR [rdi+96]

; 458  :     viewport_min.y = (viewport_min.y - m_ViewTransformPosition.y) * m_View.InvScale;

	movss	xmm0, DWORD PTR [rdi+100]
	movss	xmm8, DWORD PTR [rdi+184]
	movss	xmm7, DWORD PTR [rdi+188]
	movaps	xmm2, xmm8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	movss	xmm4, DWORD PTR [rdi+192]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 457  :     viewport_min.x = (viewport_min.x - m_ViewTransformPosition.x) * m_View.InvScale;

	subss	xmm2, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	movss	xmm6, DWORD PTR [rdi+196]
	addss	xmm8, xmm4
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 462  :     auto viewport = ImGui::GetWindowViewport();

	mov	rax, QWORD PTR [rcx+19000]
	movaps	xmm3, xmm7

; 477  :     clipped_clip_rect.y = (clipped_clip_rect.y - m_ViewTransformPosition.y) * m_View.InvScale;

	movss	xmm4, DWORD PTR clipped_clip_rect$[rsp+4]
	subss	xmm3, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	addss	xmm7, xmm6
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 476  :     clipped_clip_rect.x = (clipped_clip_rect.x - m_ViewTransformPosition.x) * m_View.InvScale;

	movss	xmm6, DWORD PTR clipped_clip_rect$[rsp]
	mulss	xmm2, xmm5

; 480  :     ImGui::PushClipRect(ImVec2(clipped_clip_rect.x, clipped_clip_rect.y), ImVec2(clipped_clip_rect.z, clipped_clip_rect.w), false);

	lea	rcx, QWORD PTR $T12[rsp]
	subss	xmm8, xmm1
	mulss	xmm3, xmm5
	movss	DWORD PTR [rax+8], xmm2
	subss	xmm7, xmm0
	movss	DWORD PTR [rax+12], xmm3
	mulss	xmm8, xmm5
	mulss	xmm7, xmm5
	subss	xmm8, xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	subss	xmm7, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 464  :     viewport->Size = viewport_max - viewport_min;

	movss	DWORD PTR [rax+16], xmm8
	movss	DWORD PTR [rax+20], xmm7

; 467  :     viewport->WorkPos  = m_ViewportWorkPosBackup  * m_View.InvScale;

	movss	xmm1, DWORD PTR [rdi+76]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	movaps	xmm0, xmm1
	mulss	xmm1, DWORD PTR [rdi+204]
	mulss	xmm0, DWORD PTR [rdi+200]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 467  :     viewport->WorkPos  = m_ViewportWorkPosBackup  * m_View.InvScale;

	movss	DWORD PTR [rax+28], xmm1

; 478  :     clipped_clip_rect.z = (clipped_clip_rect.z - m_ViewTransformPosition.x) * m_View.InvScale;

	movss	xmm1, DWORD PTR clipped_clip_rect$[rsp+8]
	movss	DWORD PTR [rax+24], xmm0
	movss	xmm2, DWORD PTR [rdi+76]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	movaps	xmm0, xmm2
	mulss	xmm2, DWORD PTR [rdi+212]
	mulss	xmm0, DWORD PTR [rdi+208]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 468  :     viewport->WorkSize = m_ViewportWorkSizeBackup * m_View.InvScale;

	movss	DWORD PTR [rax+36], xmm2
	movss	DWORD PTR [rax+32], xmm0

; 476  :     clipped_clip_rect.x = (clipped_clip_rect.x - m_ViewTransformPosition.x) * m_View.InvScale;

	movss	xmm5, DWORD PTR [rdi+76]

; 479  :     clipped_clip_rect.w = (clipped_clip_rect.w - m_ViewTransformPosition.y) * m_View.InvScale;

	movss	xmm0, DWORD PTR clipped_clip_rect$[rsp+12]
	subss	xmm0, DWORD PTR [rdi+100]
	subss	xmm6, DWORD PTR [rdi+96]
	subss	xmm4, DWORD PTR [rdi+100]
	subss	xmm1, DWORD PTR [rdi+96]
	mulss	xmm0, xmm5
	mulss	xmm6, xmm5
	mulss	xmm4, xmm5
	mulss	xmm1, xmm5
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR $T10[rsp+4], xmm0
	movss	DWORD PTR $T12[rsp], xmm6
	movss	DWORD PTR $T10[rsp], xmm1
	movss	DWORD PTR $T12[rsp+4], xmm4
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 480  :     ImGui::PushClipRect(ImVec2(clipped_clip_rect.x, clipped_clip_rect.y), ImVec2(clipped_clip_rect.z, clipped_clip_rect.w), false);

	call	?PushClipRect@ImGui@@YAXAEBUImVec2@@0_N@Z ; ImGui::PushClipRect
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm1, DWORD PTR [rdi+112]
	subss	xmm1, DWORD PTR [rdi+96]
	movss	xmm0, DWORD PTR [rdi+116]
	subss	xmm0, DWORD PTR [rdi+100]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 483  :     auto& io = ImGui::GetIO();

	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm1, DWORD PTR [rdi+76]
	mulss	xmm0, DWORD PTR [rdi+76]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 484  :     io.MousePos     = (m_MousePosBackup - m_ViewTransformPosition) * m_View.InvScale;

	movss	DWORD PTR [rax+3592], xmm1
	movss	DWORD PTR [rax+3596], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm1, DWORD PTR [rdi+120]
	subss	xmm1, DWORD PTR [rdi+96]
	movss	xmm0, DWORD PTR [rdi+124]
	subss	xmm0, DWORD PTR [rdi+100]

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm1, DWORD PTR [rdi+76]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 494  : }

	mov	rbx, QWORD PTR [rsp+136]
	movaps	xmm6, XMMWORD PTR [rsp+96]
	movaps	xmm7, XMMWORD PTR [rsp+80]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm0, DWORD PTR [rdi+76]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 485  :     io.MousePosPrev = (m_MousePosPrevBackup - m_ViewTransformPosition) * m_View.InvScale;

	movss	DWORD PTR [rax+14068], xmm1

; 494  : }

	movaps	xmm8, XMMWORD PTR [rsp+64]
	movss	DWORD PTR [rax+14072], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm2, DWORD PTR [rdi+128]
	subss	xmm2, DWORD PTR [rdi+96]
	movss	xmm0, DWORD PTR [rdi+132]
	subss	xmm0, DWORD PTR [rdi+100]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mulss	xmm2, DWORD PTR [rdi+76]
	mulss	xmm0, DWORD PTR [rdi+76]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 487  :         io.MouseClickedPos[i] = (m_MouseClickedPosBackup[i] - m_ViewTransformPosition) * m_View.InvScale;

	movss	DWORD PTR [rax+14076], xmm2
	movss	DWORD PTR [rax+14080], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm2, DWORD PTR [rdi+136]
	subss	xmm2, DWORD PTR [rdi+96]
	movss	xmm0, DWORD PTR [rdi+140]
	subss	xmm0, DWORD PTR [rdi+100]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mulss	xmm2, DWORD PTR [rdi+76]
	mulss	xmm0, DWORD PTR [rdi+76]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 487  :         io.MouseClickedPos[i] = (m_MouseClickedPosBackup[i] - m_ViewTransformPosition) * m_View.InvScale;

	movss	DWORD PTR [rax+14084], xmm2
	movss	DWORD PTR [rax+14088], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm2, DWORD PTR [rdi+144]
	subss	xmm2, DWORD PTR [rdi+96]
	movss	xmm0, DWORD PTR [rdi+148]
	subss	xmm0, DWORD PTR [rdi+100]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mulss	xmm2, DWORD PTR [rdi+76]
	mulss	xmm0, DWORD PTR [rdi+76]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 487  :         io.MouseClickedPos[i] = (m_MouseClickedPosBackup[i] - m_ViewTransformPosition) * m_View.InvScale;

	movss	DWORD PTR [rax+14092], xmm2
	movss	DWORD PTR [rax+14096], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm2, DWORD PTR [rdi+152]
	subss	xmm2, DWORD PTR [rdi+96]
	movss	xmm0, DWORD PTR [rdi+156]
	subss	xmm0, DWORD PTR [rdi+100]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mulss	xmm2, DWORD PTR [rdi+76]
	mulss	xmm0, DWORD PTR [rdi+76]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 487  :         io.MouseClickedPos[i] = (m_MouseClickedPosBackup[i] - m_ViewTransformPosition) * m_View.InvScale;

	movss	DWORD PTR [rax+14100], xmm2
	movss	DWORD PTR [rax+14104], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm2, DWORD PTR [rdi+160]
	movss	xmm0, DWORD PTR [rdi+164]
	subss	xmm0, DWORD PTR [rdi+100]
	subss	xmm2, DWORD PTR [rdi+96]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mulss	xmm0, DWORD PTR [rdi+76]
	mulss	xmm2, DWORD PTR [rdi+76]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 487  :         io.MouseClickedPos[i] = (m_MouseClickedPosBackup[i] - m_ViewTransformPosition) * m_View.InvScale;

	movss	DWORD PTR [rax+14108], xmm2
	movss	DWORD PTR [rax+14112], xmm0

; 341  :     result.Min = ImVec2(-view.Origin.x, -view.Origin.y) * view.InvScale;

	movss	xmm4, DWORD PTR [rdi+76]
	movss	xmm1, DWORD PTR [rdi+64]
	movss	xmm2, DWORD PTR [rdi+68]
	movaps	xmm5, xmm1
	xorps	xmm5, DWORD PTR __xmm@80000000800000008000000080000000
	movaps	xmm3, xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm0, DWORD PTR [rdi+12]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 491  :     auto& fringeScale = ImFringeScaleRef(m_DrawList);

	mov	rcx, QWORD PTR [rdi+40]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	subss	xmm0, xmm1
	movss	xmm1, DWORD PTR [rdi+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 341  :     result.Min = ImVec2(-view.Origin.x, -view.Origin.y) * view.InvScale;

	xorps	xmm3, DWORD PTR __xmm@80000000800000008000000080000000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	subss	xmm1, xmm2

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm5, xmm4
	mulss	xmm0, xmm4
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 489  :     m_ViewRect = CalcViewRect(m_View);;

	shufps	xmm5, xmm5, 225				; 000000e1H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2536 : static inline ImVec2  operator*(const ImVec2& lhs, const float rhs)     { return ImVec2(lhs.x * rhs, lhs.y * rhs); }

	mulss	xmm3, xmm4
	mulss	xmm1, xmm4
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 489  :     m_ViewRect = CalcViewRect(m_View);;

	movss	xmm5, xmm3
	shufps	xmm5, xmm5, 198				; 000000c6H
	movss	xmm5, xmm0

; 492  :     m_LastFringeScale = fringeScale;
; 493  :     fringeScale *= m_View.InvScale;

	movss	xmm0, DWORD PTR [rdi+76]
	shufps	xmm5, xmm5, 39				; 00000027H
	movss	xmm5, xmm1
	shufps	xmm5, xmm5, 57				; 00000039H
	movups	XMMWORD PTR [rdi+80], xmm5
	mov	eax, DWORD PTR [rcx+192]
	mov	DWORD PTR [rdi+108], eax
	mulss	xmm0, DWORD PTR [rcx+192]
	movss	DWORD PTR [rcx+192], xmm0

; 494  : }

	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?EnterLocalSpace@Canvas@ImGuiEx@@AEAAXXZ ENDP		; ImGuiEx::Canvas::EnterLocalSpace
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ?LeaveLocalSpace@Canvas@ImGuiEx@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?LeaveLocalSpace@Canvas@ImGuiEx@@AEAAXXZ PROC		; ImGuiEx::Canvas::LeaveLocalSpace, COMDAT

; 497  : {

$LN139:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 498  :     IM_ASSERT(m_DrawList->_Splitter._Current == m_ExpectedChannel);
; 499  : 
; 500  : # if IMGUI_EX_CANVAS_DEFERED()
; 501  :     IM_ASSERT(m_CurrentRange != nullptr);
; 502  : 
; 503  :     m_CurrentRange->EndVertexIndex  = m_DrawList->_VtxCurrentIdx + ImVtxOffsetRef(m_DrawList);
; 504  :     m_CurrentRange->EndCommandIndex = m_DrawList->CmdBuffer.size();
; 505  :     if (m_CurrentRange->BeginVertexIndex == m_CurrentRange->EndVertexIndex)
; 506  :     {
; 507  :         // Drop empty range
; 508  :         m_Ranges.resize(m_Ranges.Size - 1);
; 509  :     }
; 510  :     m_CurrentRange = nullptr;
; 511  : # endif
; 512  : 
; 513  :     // Move vertices to screen space.
; 514  :     auto vertex    = m_DrawList->VtxBuffer.Data + m_DrawListStartVertexIndex;

	mov	r8, QWORD PTR [rcx+40]
	mov	rbx, rcx
	movsxd	rax, DWORD PTR [rcx+60]

; 515  :     auto vertexEnd = m_DrawList->VtxBuffer.Data + m_DrawList->_VtxCurrentIdx + ImVtxOffsetRef(m_DrawList);
; 516  : 
; 517  :     // If canvas view is not scaled take a faster path.
; 518  :     if (m_View.Scale != 1.0f)

	movss	xmm0, DWORD PTR [rcx+72]
	mov	r9, QWORD PTR [r8+40]
	lea	rdx, QWORD PTR [rax+rax*4]
	mov	eax, DWORD PTR [r8+52]
	lea	r10, QWORD PTR [r9+rdx*4]
	mov	edx, DWORD PTR [r8+160]
	add	rdx, rax
	ucomiss	xmm0, DWORD PTR __real@3f800000
	lea	rax, QWORD PTR [rdx+rdx*4]
	lea	rdx, QWORD PTR [r9+rax*4]
	jp	$LN100@LeaveLocal
	jne	$LN100@LeaveLocal

; 535  :         }
; 536  :     }
; 537  :     else
; 538  :     {
; 539  :         while (vertex < vertexEnd)

	cmp	r10, rdx
	jae	$LN74@LeaveLocal
	mov	rax, rdx
	add	rcx, 96					; 00000060H
	sub	rax, r10
	add	rax, 19
	cmp	rax, 80					; 00000050H
	lea	rax, QWORD PTR [rbx+100]
	jb	$LC7@LeaveLocal
	lea	r8, QWORD PTR [rdx-60]
	npad	8
$LL76@LeaveLocal:

; 540  :         {
; 541  :             vertex->pos.x = vertex->pos.x + m_ViewTransformPosition.x;

	movss	xmm0, DWORD PTR [rcx]
	addss	xmm0, DWORD PTR [r10]

; 542  :             vertex->pos.y = vertex->pos.y + m_ViewTransformPosition.y;

	movss	xmm1, DWORD PTR [r10+4]
	movss	DWORD PTR [r10], xmm0
	addss	xmm1, DWORD PTR [rax]
	movss	DWORD PTR [r10+4], xmm1
	movss	xmm0, DWORD PTR [rcx]
	addss	xmm0, DWORD PTR [r10+20]
	movss	xmm1, DWORD PTR [r10+24]
	movss	DWORD PTR [r10+20], xmm0
	addss	xmm1, DWORD PTR [rax]
	movss	xmm0, DWORD PTR [r10+40]
	movss	DWORD PTR [r10+24], xmm1
	addss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [r10+40], xmm0
	movss	xmm1, DWORD PTR [rax]
	addss	xmm1, DWORD PTR [r10+44]
	movss	xmm0, DWORD PTR [r10+60]
	movss	DWORD PTR [r10+44], xmm1
	movss	xmm1, DWORD PTR [r10+64]
	addss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [r10+60], xmm0
	addss	xmm1, DWORD PTR [rax]
	movss	DWORD PTR [r10+64], xmm1
	add	r10, 80					; 00000050H
	cmp	r10, r8
	jb	$LL76@LeaveLocal

; 535  :         }
; 536  :     }
; 537  :     else
; 538  :     {
; 539  :         while (vertex < vertexEnd)

	cmp	r10, rdx
	jae	SHORT $LN74@LeaveLocal
$LC7@LeaveLocal:

; 540  :         {
; 541  :             vertex->pos.x = vertex->pos.x + m_ViewTransformPosition.x;

	movss	xmm0, DWORD PTR [rcx]
	addss	xmm0, DWORD PTR [r10]
	movss	DWORD PTR [r10], xmm0

; 542  :             vertex->pos.y = vertex->pos.y + m_ViewTransformPosition.y;

	movss	xmm1, DWORD PTR [rax]
	addss	xmm1, DWORD PTR [r10+4]
	movss	DWORD PTR [r10+4], xmm1

; 543  :             ++vertex;

	add	r10, 20
	cmp	r10, rdx
	jb	SHORT $LC7@LeaveLocal
$LN74@LeaveLocal:

; 547  :         for (int i = m_DrawListFirstCommandIndex; i < m_DrawList->CmdBuffer.size(); ++i)

	mov	rdi, QWORD PTR [rbx+40]
	movsxd	rdx, DWORD PTR [rbx+52]
	cmp	edx, DWORD PTR [rdi]
	jge	$LN5@LeaveLocal
	imul	rcx, rdx, 56				; 00000038H
	npad	5
$LL11@LeaveLocal:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1917 :     inline T&           operator[](int i)                   { IM_ASSERT(i >= 0 && i < Size); return Data[i]; }

	mov	rax, QWORD PTR [rdi+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 547  :         for (int i = m_DrawListFirstCommandIndex; i < m_DrawList->CmdBuffer.size(); ++i)

	inc	edx

; 548  :         {
; 549  :             auto& command = m_DrawList->CmdBuffer[i];
; 550  :             command.ClipRect.x = command.ClipRect.x + m_ViewTransformPosition.x;

	movss	xmm0, DWORD PTR [rcx+rax]
	addss	xmm0, DWORD PTR [rbx+96]

; 551  :             command.ClipRect.y = command.ClipRect.y + m_ViewTransformPosition.y;

	movss	xmm1, DWORD PTR [rcx+rax+4]
	movss	DWORD PTR [rcx+rax], xmm0
	addss	xmm1, DWORD PTR [rbx+100]

; 552  :             command.ClipRect.z = command.ClipRect.z + m_ViewTransformPosition.x;

	movss	xmm0, DWORD PTR [rcx+rax+8]
	movss	DWORD PTR [rcx+rax+4], xmm1

; 553  :             command.ClipRect.w = command.ClipRect.w + m_ViewTransformPosition.y;

	movss	xmm1, DWORD PTR [rcx+rax+12]
	addss	xmm0, DWORD PTR [rbx+96]
	movss	DWORD PTR [rcx+rax+8], xmm0
	addss	xmm1, DWORD PTR [rbx+100]
	movss	DWORD PTR [rcx+rax+12], xmm1
	add	rcx, 56					; 00000038H
	mov	rdi, QWORD PTR [rbx+40]
	cmp	edx, DWORD PTR [rdi]
	jl	SHORT $LL11@LeaveLocal
	jmp	$LN5@LeaveLocal
$LN100@LeaveLocal:

; 519  :     {
; 520  :         while (vertex < vertexEnd)

	cmp	r10, rdx
	jae	$LN71@LeaveLocal
	mov	rax, rdx
	add	rcx, 96					; 00000060H
	sub	rax, r10
	add	rax, 19
	cmp	rax, 80					; 00000050H
	lea	rax, QWORD PTR [rbx+100]
	jb	$LC2@LeaveLocal
	lea	r8, QWORD PTR [rdx-60]
$LL73@LeaveLocal:

; 521  :         {
; 522  :             vertex->pos.x = vertex->pos.x * m_View.Scale + m_ViewTransformPosition.x;

	movss	xmm0, DWORD PTR [rbx+72]
	mulss	xmm0, DWORD PTR [r10]
	addss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [r10], xmm0

; 523  :             vertex->pos.y = vertex->pos.y * m_View.Scale + m_ViewTransformPosition.y;

	movss	xmm1, DWORD PTR [rbx+72]
	mulss	xmm1, DWORD PTR [r10+4]
	addss	xmm1, DWORD PTR [rax]
	movss	DWORD PTR [r10+4], xmm1
	movss	xmm0, DWORD PTR [rbx+72]
	mulss	xmm0, DWORD PTR [r10+20]
	addss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [r10+20], xmm0
	movss	xmm1, DWORD PTR [rbx+72]
	mulss	xmm1, DWORD PTR [r10+24]
	movss	xmm0, DWORD PTR [r10+40]
	addss	xmm1, DWORD PTR [rax]
	movss	DWORD PTR [r10+24], xmm1
	mulss	xmm0, DWORD PTR [rbx+72]
	addss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [r10+40], xmm0
	movss	xmm1, DWORD PTR [rbx+72]
	mulss	xmm1, DWORD PTR [r10+44]
	addss	xmm1, DWORD PTR [rax]
	movss	DWORD PTR [r10+44], xmm1
	movss	xmm0, DWORD PTR [rbx+72]
	mulss	xmm0, DWORD PTR [r10+60]
	movss	xmm1, DWORD PTR [r10+64]
	addss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [r10+60], xmm0
	mulss	xmm1, DWORD PTR [rbx+72]
	addss	xmm1, DWORD PTR [rax]
	movss	DWORD PTR [r10+64], xmm1
	add	r10, 80					; 00000050H
	cmp	r10, r8
	jb	$LL73@LeaveLocal

; 519  :     {
; 520  :         while (vertex < vertexEnd)

	cmp	r10, rdx
	jae	SHORT $LN71@LeaveLocal
$LC2@LeaveLocal:

; 521  :         {
; 522  :             vertex->pos.x = vertex->pos.x * m_View.Scale + m_ViewTransformPosition.x;

	movss	xmm0, DWORD PTR [rbx+72]
	mulss	xmm0, DWORD PTR [r10]
	addss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [r10], xmm0

; 523  :             vertex->pos.y = vertex->pos.y * m_View.Scale + m_ViewTransformPosition.y;

	movss	xmm1, DWORD PTR [rbx+72]
	mulss	xmm1, DWORD PTR [r10+4]
	addss	xmm1, DWORD PTR [rax]
	movss	DWORD PTR [r10+4], xmm1

; 524  :             ++vertex;

	add	r10, 20
	cmp	r10, rdx
	jb	SHORT $LC2@LeaveLocal
$LN71@LeaveLocal:

; 528  :         for (int i = m_DrawListFirstCommandIndex; i < m_DrawList->CmdBuffer.size(); ++i)

	mov	rdi, QWORD PTR [rbx+40]
	movsxd	rdx, DWORD PTR [rbx+52]
	cmp	edx, DWORD PTR [rdi]
	jge	$LN5@LeaveLocal
	imul	rcx, rdx, 56				; 00000038H
	npad	1
$LL6@LeaveLocal:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1917 :     inline T&           operator[](int i)                   { IM_ASSERT(i >= 0 && i < Size); return Data[i]; }

	mov	rax, QWORD PTR [rdi+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 528  :         for (int i = m_DrawListFirstCommandIndex; i < m_DrawList->CmdBuffer.size(); ++i)

	inc	edx

; 529  :         {
; 530  :             auto& command = m_DrawList->CmdBuffer[i];
; 531  :             command.ClipRect.x = command.ClipRect.x * m_View.Scale + m_ViewTransformPosition.x;

	movss	xmm0, DWORD PTR [rcx+rax]
	mulss	xmm0, DWORD PTR [rbx+72]
	addss	xmm0, DWORD PTR [rbx+96]
	movss	DWORD PTR [rcx+rax], xmm0

; 532  :             command.ClipRect.y = command.ClipRect.y * m_View.Scale + m_ViewTransformPosition.y;

	movss	xmm1, DWORD PTR [rbx+72]
	mulss	xmm1, DWORD PTR [rcx+rax+4]

; 533  :             command.ClipRect.z = command.ClipRect.z * m_View.Scale + m_ViewTransformPosition.x;

	movss	xmm0, DWORD PTR [rcx+rax+8]
	addss	xmm1, DWORD PTR [rbx+100]
	movss	DWORD PTR [rcx+rax+4], xmm1
	mulss	xmm0, DWORD PTR [rbx+72]
	addss	xmm0, DWORD PTR [rbx+96]
	movss	DWORD PTR [rcx+rax+8], xmm0

; 534  :             command.ClipRect.w = command.ClipRect.w * m_View.Scale + m_ViewTransformPosition.y;

	movss	xmm1, DWORD PTR [rbx+72]
	mulss	xmm1, DWORD PTR [rcx+rax+12]
	addss	xmm1, DWORD PTR [rbx+100]
	movss	DWORD PTR [rcx+rax+12], xmm1
	add	rcx, 56					; 00000038H
	mov	rdi, QWORD PTR [rbx+40]
	cmp	edx, DWORD PTR [rdi]
	jl	SHORT $LL6@LeaveLocal
$LN5@LeaveLocal:

; 554  :         }
; 555  :     }
; 556  : 
; 557  :     // Remove sentinel draw command if present
; 558  :     if (m_DrawListCommadBufferSize > 0)

	movsxd	rax, DWORD PTR [rbx+56]
	test	eax, eax
	jle	SHORT $LN17@LeaveLocal

; 559  :     {
; 560  :         if (m_DrawList->CmdBuffer.size() > m_DrawListCommadBufferSize && m_DrawList->CmdBuffer[m_DrawListCommadBufferSize].UserCallback == ImDrawCallback_ImCanvas)

	movsxd	r8, DWORD PTR [rdi]
	mov	r9, rax
	imul	rcx, rax, 56				; 00000038H
	cmp	r8d, eax
	jle	SHORT $LN136@LeaveLocal
	mov	r10, QWORD PTR [rdi+8]
	cmp	QWORD PTR [r10+rcx+40], -2
	je	SHORT $LN137@LeaveLocal

; 562  :         else if (m_DrawList->CmdBuffer.size() >= m_DrawListCommadBufferSize && m_DrawList->CmdBuffer[m_DrawListCommadBufferSize - 1].UserCallback == ImDrawCallback_ImCanvas)

	cmp	r8d, eax
$LN136@LeaveLocal:
	jl	SHORT $LN17@LeaveLocal
	mov	r10, QWORD PTR [rdi+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1917 :     inline T&           operator[](int i)                   { IM_ASSERT(i >= 0 && i < Size); return Data[i]; }

	imul	rax, r9, 56				; 00000038H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 562  :         else if (m_DrawList->CmdBuffer.size() >= m_DrawListCommadBufferSize && m_DrawList->CmdBuffer[m_DrawListCommadBufferSize - 1].UserCallback == ImDrawCallback_ImCanvas)

	cmp	QWORD PTR [rax+r10-16], -2
	jne	SHORT $LN17@LeaveLocal

; 563  :             m_DrawList->CmdBuffer.erase(m_DrawList->CmdBuffer.Data + m_DrawListCommadBufferSize - 1);

	add	rcx, -56				; ffffffffffffffc8H
$LN137@LeaveLocal:

; 564  :     }
; 565  : 
; 566  :     auto& fringeScale = ImFringeScaleRef(m_DrawList);
; 567  :     fringeScale = m_LastFringeScale;

	mov	rax, 5270498306774157605		; 4924924924924925H
	imul	rcx
	sar	rdx, 4
	mov	rax, rdx
	shr	rax, 63					; 0000003fH
	add	rdx, rax
	mov	rax, r8
	imul	rcx, rdx, 56				; 00000038H
	sub	rax, rdx
	imul	r8, rax, 56				; 00000038H
	add	rcx, r10
	sub	r8, 56					; 00000038H
	lea	rdx, QWORD PTR [rcx+56]
	call	memmove
	dec	DWORD PTR [rdi]
$LN17@LeaveLocal:
	mov	rcx, QWORD PTR [rbx+40]
	mov	eax, DWORD PTR [rbx+108]
	mov	DWORD PTR [rcx+192], eax

; 568  : 
; 569  :     // And pop \o/
; 570  :     ImGui::PopClipRect();

	call	?PopClipRect@ImGui@@YAXXZ		; ImGui::PopClipRect

; 363  :     io.MousePos = m_MousePosBackup;

	movsd	xmm0, QWORD PTR [rbx+112]
	mov	rdx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	movsd	QWORD PTR [rdx+3592], xmm0

; 364  :     io.MousePosPrev = m_MousePosPrevBackup;

	movsd	xmm1, QWORD PTR [rbx+120]
	movsd	QWORD PTR [rdx+14068], xmm1

; 365  :     for (auto i = 0; i < IM_ARRAYSIZE(m_MouseClickedPosBackup); ++i)
; 366  :         io.MouseClickedPos[i] = m_MouseClickedPosBackup[i];

	movsd	xmm0, QWORD PTR [rbx+128]
	movsd	QWORD PTR [rdx+14076], xmm0
	movsd	xmm1, QWORD PTR [rbx+136]
	movsd	QWORD PTR [rdx+14084], xmm1
	movsd	xmm0, QWORD PTR [rbx+144]
	movsd	QWORD PTR [rdx+14092], xmm0
	movsd	xmm1, QWORD PTR [rbx+152]
	movsd	QWORD PTR [rdx+14100], xmm1
	movsd	xmm0, QWORD PTR [rbx+160]
	movsd	QWORD PTR [rdx+14108], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rax, QWORD PTR [rdx+16408]
	mov	BYTE PTR [rax+237], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp

; 394  :     window->Pos = m_WindowPosBackup;

	movsd	xmm0, QWORD PTR [rbx+176]
	mov	rax, QWORD PTR [rdx+16408]
	mov	rcx, QWORD PTR [rdx+19000]
	movsd	QWORD PTR [rax+80], xmm0

; 395  :     viewport->Pos = m_ViewportPosBackup;

	movsd	xmm1, QWORD PTR [rbx+184]
	movsd	QWORD PTR [rcx+8], xmm1
	movsd	xmm0, QWORD PTR [rbx+192]
	movsd	QWORD PTR [rcx+16], xmm0
	movsd	xmm1, QWORD PTR [rbx+200]
	movsd	QWORD PTR [rcx+24], xmm1
	movsd	xmm0, QWORD PTR [rbx+208]

; 571  : 
; 572  :     RestoreInputState();
; 573  :     RestoreViewportState();
; 574  : }

	mov	rbx, QWORD PTR [rsp+48]

; 395  :     viewport->Pos = m_ViewportPosBackup;

	movsd	QWORD PTR [rcx+32], xmm0

; 571  : 
; 572  :     RestoreInputState();
; 573  :     RestoreViewportState();
; 574  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?LeaveLocalSpace@Canvas@ImGuiEx@@AEAAXXZ ENDP		; ImGuiEx::Canvas::LeaveLocalSpace
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
;	COMDAT ?size@?$ImVector@UImDrawCmd@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?size@?$ImVector@UImDrawCmd@@@@QEBAHXZ PROC		; ImVector<ImDrawCmd>::size, COMDAT

; 1913 :     inline int          size() const                        { return Size; }

	mov	eax, DWORD PTR [rcx]
	ret	0
?size@?$ImVector@UImDrawCmd@@@@QEBAHXZ ENDP		; ImVector<ImDrawCmd>::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
;	COMDAT ?empty@?$ImVector@UImDrawCmd@@@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$ImVector@UImDrawCmd@@@@QEBA_NXZ PROC		; ImVector<ImDrawCmd>::empty, COMDAT

; 1912 :     inline bool         empty() const                       { return Size == 0; }

	cmp	DWORD PTR [rcx], 0
	sete	al
	ret	0
?empty@?$ImVector@UImDrawCmd@@@@QEBA_NXZ ENDP		; ImVector<ImDrawCmd>::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ??$Get@UImDrawList@@@FringeScaleRef@ImCanvasDetails@@SAAEAMPEAUImDrawList@@@Z
_TEXT	SEGMENT
drawList$ = 8
??$Get@UImDrawList@@@FringeScaleRef@ImCanvasDetails@@SAAEAMPEAUImDrawList@@@Z PROC ; ImCanvasDetails::FringeScaleRef::Get<ImDrawList>, COMDAT

; 45   :         return drawList->_FringeScale;

	lea	rax, QWORD PTR [rcx+192]

; 46   :     }

	ret	0
??$Get@UImDrawList@@@FringeScaleRef@ImCanvasDetails@@SAAEAMPEAUImDrawList@@@Z ENDP ; ImCanvasDetails::FringeScaleRef::Get<ImDrawList>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_canvas.cpp
;	COMDAT ??$Get@UImDrawList@@@VtxCurrentOffsetRef@ImCanvasDetails@@SAAEAIPEAUImDrawList@@@Z
_TEXT	SEGMENT
drawList$ = 8
??$Get@UImDrawList@@@VtxCurrentOffsetRef@ImCanvasDetails@@SAAEAIPEAUImDrawList@@@Z PROC ; ImCanvasDetails::VtxCurrentOffsetRef::Get<ImDrawList>, COMDAT

; 72   :         return drawList->_CmdHeader.VtxOffset;

	lea	rax, QWORD PTR [rcx+160]

; 73   :     }

	ret	0
??$Get@UImDrawList@@@VtxCurrentOffsetRef@ImCanvasDetails@@SAAEAIPEAUImDrawList@@@Z ENDP ; ImCanvasDetails::VtxCurrentOffsetRef::Get<ImDrawList>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
;	COMDAT ??$ImMax@H@@YAHHH@Z
_TEXT	SEGMENT
lhs$ = 8
rhs$dead$ = 16
??$ImMax@H@@YAHHH@Z PROC				; ImMax<int>, COMDAT

; 455  : template<typename T> static inline T ImMax(T lhs, T rhs)                        { return lhs >= rhs ? lhs : rhs; }

	xor	eax, eax
	test	ecx, ecx
	cmovns	eax, ecx
	ret	0
??$ImMax@H@@YAHHH@Z ENDP				; ImMax<int>
_TEXT	ENDS
END

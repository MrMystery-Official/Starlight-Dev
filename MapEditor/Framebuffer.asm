; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BJ@PNMEFGGL@Framebuffer?5not?5complete@	; `string'
PUBLIC	??_C@_0M@OKNEJOOD@Framebuffer@			; `string'
;	COMDAT ??_C@_0M@OKNEJOOD@Framebuffer@
CONST	SEGMENT
??_C@_0M@OKNEJOOD@Framebuffer@ DB 'Framebuffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PNMEFGGL@Framebuffer?5not?5complete@
CONST	SEGMENT
??_C@_0BJ@PNMEFGGL@Framebuffer?5not?5complete@ DB 'Framebuffer not comple'
	DB	'te', 00H					; `string'
PUBLIC	?Delete@Framebuffer@@QEAAXXZ			; Framebuffer::Delete
PUBLIC	?Unbind@Framebuffer@@QEBAXXZ			; Framebuffer::Unbind
PUBLIC	?Bind@Framebuffer@@QEBAXXZ			; Framebuffer::Bind
PUBLIC	?RescaleFramebuffer@Framebuffer@@QEAAXMM@Z	; Framebuffer::RescaleFramebuffer
PUBLIC	?GetFrameTexture@Framebuffer@@QEAAIXZ		; Framebuffer::GetFrameTexture
PUBLIC	??0Framebuffer@@QEAA@MM@Z			; Framebuffer::Framebuffer
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Delete@Framebuffer@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$?Delete@Framebuffer@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RescaleFramebuffer@Framebuffer@@QEAAXMM@Z DD imagerel $LN4
	DD	imagerel $LN4+279
	DD	imagerel $unwind$?RescaleFramebuffer@Framebuffer@@QEAAXMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Framebuffer@@QEAA@MM@Z DD imagerel $LN32
	DD	imagerel $LN32+515
	DD	imagerel $unwind$??0Framebuffer@@QEAA@MM@Z
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Framebuffer@@QEAA@MM@Z DB 06H
	DB	'^'
	DB	00H
	DB	'-', 05H
	DB	02H
	DB	'\'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Framebuffer@@QEAA@MM@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	041H
	DB	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0Framebuffer@@QEAA@MM@Z DB 028H
	DD	imagerel $stateUnwindMap$??0Framebuffer@@QEAA@MM@Z
	DD	imagerel $ip2state$??0Framebuffer@@QEAA@MM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Framebuffer@@QEAA@MM@Z DD 0d1e11H
	DD	09781eH
	DD	0a681aH
	DD	01c5416H
	DD	01b3416H
	DD	0160116H
	DD	0700de00fH
	DD	0600cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0Framebuffer@@QEAA@MM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RescaleFramebuffer@Framebuffer@@QEAAXMM@Z DD 0a2401H
	DD	057824H
	DD	06681aH
	DD	011640fH
	DD	010340fH
	DD	0700bd20fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Delete@Framebuffer@@QEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Framebuffer.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Framebuffer.cpp
;	COMDAT ??0Framebuffer@@QEAA@MM@Z
_TEXT	SEGMENT
$T1 = 80
$T2 = 112
$T3 = 208
this$ = 208
Width$ = 216
Height$ = 224
??0Framebuffer@@QEAA@MM@Z PROC				; Framebuffer::Framebuffer, COMDAT

; 6    : {

$LN32:
	mov	rax, rsp
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 176				; 000000b0H
	movaps	XMMWORD PTR [rax-40], xmm6
	movaps	XMMWORD PTR [rax-56], xmm7
	movaps	xmm6, xmm2
	movaps	xmm7, xmm1
	mov	r14, rcx

; 7    : 	glGenFramebuffers(1, &m_FBO);

	mov	rdx, rcx
	mov	ecx, 1
	call	QWORD PTR glad_glGenFramebuffers

; 8    : 	glBindFramebuffer(GL_FRAMEBUFFER, m_FBO);

	mov	edx, DWORD PTR [r14]
	mov	ecx, 36160				; 00008d40H
	call	QWORD PTR glad_glBindFramebuffer

; 9    : 
; 10   : 	glGenTextures(1, &m_Texture);

	lea	rdx, QWORD PTR [r14+4]
	mov	ecx, 1
	call	QWORD PTR glad_glGenTextures

; 11   : 	glBindTexture(GL_TEXTURE_2D, m_Texture);

	mov	edx, DWORD PTR [r14+4]
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR glad_glBindTexture

; 12   : 	glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, Width, Height, 0, GL_RGB, GL_UNSIGNED_BYTE, NULL);

	cvttss2si edi, xmm6
	cvttss2si esi, xmm7
	xor	ebp, ebp
	mov	QWORD PTR [rsp+64], rbp
	mov	DWORD PTR [rsp+56], 5121		; 00001401H
	mov	DWORD PTR [rsp+48], 6407		; 00001907H
	mov	DWORD PTR [rsp+40], ebp
	mov	DWORD PTR [rsp+32], edi
	mov	r9d, esi
	xor	edx, edx
	mov	ecx, 3553				; 00000de1H
	mov	r8d, 6407				; 00001907H
	call	QWORD PTR glad_glTexImage2D

; 13   : 	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);

	mov	edx, 10241				; 00002801H
	mov	ecx, 3553				; 00000de1H
	mov	r8d, 9729				; 00002601H
	call	QWORD PTR glad_glTexParameteri

; 14   : 	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);

	mov	edx, 10240				; 00002800H
	mov	ecx, 3553				; 00000de1H
	mov	r8d, 9729				; 00002601H
	call	QWORD PTR glad_glTexParameteri

; 15   : 	glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, m_Texture, 0);

	mov	DWORD PTR [rsp+32], ebp
	mov	r9d, DWORD PTR [r14+4]
	mov	edx, 36064				; 00008ce0H
	lea	ecx, QWORD PTR [rdx+96]
	mov	r8d, 3553				; 00000de1H
	call	QWORD PTR glad_glFramebufferTexture2D

; 16   : 
; 17   : 	glGenRenderbuffers(1, &m_RBO);

	lea	rdx, QWORD PTR [r14+8]
	lea	ecx, QWORD PTR [rbp+1]
	call	QWORD PTR glad_glGenRenderbuffers

; 18   : 	glBindRenderbuffer(GL_RENDERBUFFER, m_RBO);

	mov	edx, DWORD PTR [r14+8]
	mov	ecx, 36161				; 00008d41H
	call	QWORD PTR glad_glBindRenderbuffer

; 19   : 	glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH24_STENCIL8, Width, Height);

	mov	r9d, edi
	mov	r8d, esi
	mov	edx, 35056				; 000088f0H
	mov	ecx, 36161				; 00008d41H
	call	QWORD PTR glad_glRenderbufferStorage

; 20   : 	glFramebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_STENCIL_ATTACHMENT, GL_RENDERBUFFER, m_RBO);

	mov	r9d, DWORD PTR [r14+8]
	mov	edx, 33306				; 0000821aH
	mov	ecx, 36160				; 00008d40H
	lea	r8d, QWORD PTR [rcx+1]
	call	QWORD PTR glad_glFramebufferRenderbuffer

; 21   : 
; 22   : 	if (glCheckFramebufferStatus(GL_FRAMEBUFFER) != GL_FRAMEBUFFER_COMPLETE)

	mov	rax, QWORD PTR glad_glCheckFramebufferStatus
	mov	ecx, 36160				; 00008d40H
	call	rax
	cmp	eax, 36053				; 00008cd5H
	je	SHORT $LN2@Framebuffe

; 23   : 		Logger::Error("Framebuffer", "Framebuffer not complete");

	lea	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR $T3[rsp], rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T1[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T1[rsp+16], rbp

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T1[rsp+24], rbp

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	r8d, QWORD PTR [rbp+24]
	lea	rdx, OFFSET FLAT:??_C@_0BJ@PNMEFGGL@Framebuffer?5not?5complete@
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T2[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T2[rsp+16], rbp

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T2[rsp+24], rbp

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	r8d, QWORD PTR [rbp+11]
	lea	rdx, OFFSET FLAT:??_C@_0M@OKNEJOOD@Framebuffer@
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Framebuffer.cpp

; 23   : 		Logger::Error("Framebuffer", "Framebuffer not complete");

	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	?Error@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Error
$LN2@Framebuffe:

; 24   : 
; 25   : 	glBindFramebuffer(GL_FRAMEBUFFER, 0);

	xor	edx, edx
	mov	ecx, 36160				; 00008d40H
	call	QWORD PTR glad_glBindFramebuffer

; 26   : 	glBindTexture(GL_TEXTURE_2D, 0);

	xor	edx, edx
	mov	ecx, 3553				; 00000de1H
	call	QWORD PTR glad_glBindTexture

; 27   : 	glBindRenderbuffer(GL_RENDERBUFFER, 0);

	xor	edx, edx
	mov	ecx, 36161				; 00008d41H
	call	QWORD PTR glad_glBindRenderbuffer

; 28   : }

	mov	rax, r14
	lea	r11, QWORD PTR [rsp+176]
	mov	rbx, QWORD PTR [r11+40]
	mov	rbp, QWORD PTR [r11+48]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
??0Framebuffer@@QEAA@MM@Z ENDP				; Framebuffer::Framebuffer
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 112
$T3 = 208
this$ = 208
Width$ = 216
Height$ = 224
?dtor$0@?0???0Framebuffer@@QEAA@MM@Z@4HA PROC		; `Framebuffer::Framebuffer'::`1'::dtor$0
	mov	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0Framebuffer@@QEAA@MM@Z@4HA ENDP		; `Framebuffer::Framebuffer'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Framebuffer.cpp
;	COMDAT ?GetFrameTexture@Framebuffer@@QEAAIXZ
_TEXT	SEGMENT
this$ = 8
?GetFrameTexture@Framebuffer@@QEAAIXZ PROC		; Framebuffer::GetFrameTexture, COMDAT

; 32   : 	return m_Texture;

	mov	eax, DWORD PTR [rcx+4]

; 33   : }

	ret	0
?GetFrameTexture@Framebuffer@@QEAAIXZ ENDP		; Framebuffer::GetFrameTexture
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Framebuffer.cpp
;	COMDAT ?RescaleFramebuffer@Framebuffer@@QEAAXMM@Z
_TEXT	SEGMENT
this$ = 128
width$ = 136
height$ = 144
?RescaleFramebuffer@Framebuffer@@QEAAXMM@Z PROC		; Framebuffer::RescaleFramebuffer, COMDAT

; 36   : {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 112				; 00000070H

; 37   : 	glBindTexture(GL_TEXTURE_2D, m_Texture);

	mov	edx, DWORD PTR [rcx+4]
	mov	rsi, rcx
	movaps	XMMWORD PTR [rsp+96], xmm6
	mov	ecx, 3553				; 00000de1H
	movaps	XMMWORD PTR [rsp+80], xmm7
	movaps	xmm6, xmm2
	movaps	xmm7, xmm1
	call	QWORD PTR glad_glBindTexture

; 38   : 	glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, NULL);

	mov	QWORD PTR [rsp+64], 0
	xor	edx, edx
	mov	DWORD PTR [rsp+56], 5121		; 00001401H
	mov	ecx, 3553				; 00000de1H
	cvttss2si edi, xmm7
	mov	DWORD PTR [rsp+48], 6407		; 00001907H
	mov	r8d, 6407				; 00001907H
	mov	DWORD PTR [rsp+40], 0
	cvttss2si ebx, xmm6
	mov	r9d, edi
	mov	DWORD PTR [rsp+32], ebx
	call	QWORD PTR glad_glTexImage2D

; 39   : 	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);

	mov	edx, 10241				; 00002801H
	mov	ecx, 3553				; 00000de1H
	mov	r8d, 9729				; 00002601H
	call	QWORD PTR glad_glTexParameteri

; 40   : 	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);

	mov	edx, 10240				; 00002800H
	mov	ecx, 3553				; 00000de1H
	mov	r8d, 9729				; 00002601H
	call	QWORD PTR glad_glTexParameteri

; 41   : 	glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, m_Texture, 0);

	mov	r9d, DWORD PTR [rsi+4]
	mov	edx, 36064				; 00008ce0H
	mov	r8d, 3553				; 00000de1H
	mov	DWORD PTR [rsp+32], 0
	lea	ecx, QWORD PTR [rdx+96]
	call	QWORD PTR glad_glFramebufferTexture2D

; 42   : 
; 43   : 	glBindRenderbuffer(GL_RENDERBUFFER, m_RBO);

	mov	edx, DWORD PTR [rsi+8]
	mov	ecx, 36161				; 00008d41H
	call	QWORD PTR glad_glBindRenderbuffer

; 44   : 	glRenderbufferStorage(GL_RENDERBUFFER, GL_DEPTH24_STENCIL8, width, height);

	mov	r9d, ebx
	mov	r8d, edi
	mov	edx, 35056				; 000088f0H
	mov	ecx, 36161				; 00008d41H
	call	QWORD PTR glad_glRenderbufferStorage

; 45   : 	glFramebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_STENCIL_ATTACHMENT, GL_RENDERBUFFER, m_RBO);

	mov	r9d, DWORD PTR [rsi+8]
	mov	ecx, 36160				; 00008d40H
	mov	edx, 33306				; 0000821aH
	lea	r8d, QWORD PTR [rcx+1]

; 46   : }

	movaps	xmm6, XMMWORD PTR [rsp+96]
	lea	r11, QWORD PTR [rsp+112]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	movaps	xmm7, XMMWORD PTR [rsp+80]
	mov	rsp, r11
	pop	rdi

; 45   : 	glFramebufferRenderbuffer(GL_FRAMEBUFFER, GL_DEPTH_STENCIL_ATTACHMENT, GL_RENDERBUFFER, m_RBO);

	rex_jmp	QWORD PTR glad_glFramebufferRenderbuffer
?RescaleFramebuffer@Framebuffer@@QEAAXMM@Z ENDP		; Framebuffer::RescaleFramebuffer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Framebuffer.cpp
;	COMDAT ?Bind@Framebuffer@@QEBAXXZ
_TEXT	SEGMENT
this$ = 8
?Bind@Framebuffer@@QEBAXXZ PROC				; Framebuffer::Bind, COMDAT

; 50   : 	glBindFramebuffer(GL_FRAMEBUFFER, m_FBO);

	mov	edx, DWORD PTR [rcx]
	mov	ecx, 36160				; 00008d40H
	rex_jmp	QWORD PTR glad_glBindFramebuffer
?Bind@Framebuffer@@QEBAXXZ ENDP				; Framebuffer::Bind
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Framebuffer.cpp
;	COMDAT ?Unbind@Framebuffer@@QEBAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?Unbind@Framebuffer@@QEBAXXZ PROC			; Framebuffer::Unbind, COMDAT

; 55   : 	glBindFramebuffer(GL_FRAMEBUFFER, 0);

	xor	edx, edx
	mov	ecx, 36160				; 00008d40H
	rex_jmp	QWORD PTR glad_glBindFramebuffer
?Unbind@Framebuffer@@QEBAXXZ ENDP			; Framebuffer::Unbind
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Framebuffer.cpp
;	COMDAT ?Delete@Framebuffer@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Delete@Framebuffer@@QEAAXXZ PROC			; Framebuffer::Delete, COMDAT

; 59   : {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 60   : 	glDeleteFramebuffers(1, &m_FBO);

	mov	rdx, rcx
	mov	ecx, 1
	call	QWORD PTR glad_glDeleteFramebuffers

; 61   : 	glDeleteTextures(1, &m_Texture);

	lea	rdx, QWORD PTR [rbx+4]
	mov	ecx, 1
	call	QWORD PTR glad_glDeleteTextures

; 62   : 	glDeleteRenderbuffers(1, &m_RBO);

	lea	rdx, QWORD PTR [rbx+8]
	mov	ecx, 1

; 63   : }

	add	rsp, 32					; 00000020H
	pop	rbx

; 62   : 	glDeleteRenderbuffers(1, &m_RBO);

	rex_jmp	QWORD PTR glad_glDeleteRenderbuffers
?Delete@Framebuffer@@QEAAXXZ ENDP			; Framebuffer::Delete
_TEXT	ENDS
END

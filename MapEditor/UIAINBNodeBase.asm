; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_03FDCLAKJL@?$CD?$CFd@			; `string'
PUBLIC	??_C@_0O@BHIPMNED@Node?5settings@		; `string'
PUBLIC	??_7UIAINBNodeBase@@6B@				; UIAINBNodeBase::`vftable'
PUBLIC	??_R1A@?0A@EA@UIAINBNodeBase@@8			; UIAINBNodeBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4UIAINBNodeBase@@6B@			; UIAINBNodeBase::`RTTI Complete Object Locator'
PUBLIC	??_R2UIAINBNodeBase@@8				; UIAINBNodeBase::`RTTI Base Class Array'
PUBLIC	??_R3UIAINBNodeBase@@8				; UIAINBNodeBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVUIAINBNodeBase@@@8			; UIAINBNodeBase `RTTI Type Descriptor'
;	COMDAT ??_R0?AVUIAINBNodeBase@@@8
data$rs	SEGMENT
??_R0?AVUIAINBNodeBase@@@8 DQ FLAT:??_7type_info@@6B@	; UIAINBNodeBase `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVUIAINBNodeBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R3UIAINBNodeBase@@8
rdata$r	SEGMENT
??_R3UIAINBNodeBase@@8 DD 00H				; UIAINBNodeBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2UIAINBNodeBase@@8
rdata$r	ENDS
;	COMDAT ??_R2UIAINBNodeBase@@8
rdata$r	SEGMENT
??_R2UIAINBNodeBase@@8 DD imagerel ??_R1A@?0A@EA@UIAINBNodeBase@@8 ; UIAINBNodeBase::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R4UIAINBNodeBase@@6B@
rdata$r	SEGMENT
??_R4UIAINBNodeBase@@6B@ DD 01H				; UIAINBNodeBase::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVUIAINBNodeBase@@@8
	DD	imagerel ??_R3UIAINBNodeBase@@8
	DD	imagerel ??_R4UIAINBNodeBase@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UIAINBNodeBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UIAINBNodeBase@@8 DD imagerel ??_R0?AVUIAINBNodeBase@@@8 ; UIAINBNodeBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3UIAINBNodeBase@@8
rdata$r	ENDS
;	COMDAT ??_7UIAINBNodeBase@@6B@
CONST	SEGMENT
??_7UIAINBNodeBase@@6B@ DQ FLAT:??_R4UIAINBNodeBase@@6B@ ; UIAINBNodeBase::`vftable'
	DQ	FLAT:_purecall
	DQ	FLAT:?RebuildNode@UIAINBNodeBase@@UEAAXXZ
	DQ	FLAT:?UpdateVisuals@UIAINBNodeBase@@UEAAXXZ
	DQ	FLAT:?PostProcessLinkedNodeInfo@UIAINBNodeBase@@UEAAXAEAUPin@1@AEAULinkedNodeInfo@AINBFile@@@Z
	DQ	FLAT:?PostProcessNode@UIAINBNodeBase@@UEAAXXZ
	DQ	FLAT:?GetNodeType@UIAINBNodeBase@@UEAA?AW4NodeType@1@XZ
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_C@_0O@BHIPMNED@Node?5settings@
CONST	SEGMENT
??_C@_0O@BHIPMNED@Node?5settings@ DB 'Node settings', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03FDCLAKJL@?$CD?$CFd@
CONST	SEGMENT
??_C@_03FDCLAKJL@?$CD?$CFd@ DB '#%d', 00H		; `string'
PUBLIC	??$?0U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > ><std::pair<unsigned int const ,UIAINBNodeBase::Pin> >
PUBLIC	??$?0U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > ><std::pair<unsigned int const ,UIAINBNodeBase::Link> >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >
PUBLIC	??$construct_at@PEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z ; std::construct_at<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> *,std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> * &,0>
PUBLIC	??$construct_at@PEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z ; std::construct_at<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> *,std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> * &,0>
PUBLIC	??$?0AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >,1><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > const &>
PUBLIC	??$forward@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > const &>
PUBLIC	??$?0AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >,1><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > const &>
PUBLIC	??$forward@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > const &>
PUBLIC	??$?0U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> ><std::pair<unsigned int const ,UIAINBNodeBase::Pin> >
PUBLIC	??$?0U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ; std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> ><std::pair<unsigned int const ,UIAINBNodeBase::Link> >
PUBLIC	??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@QEAA@XZ ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >
PUBLIC	??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@QEAA@XZ ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >
PUBLIC	??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> *,std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> * &>
PUBLIC	??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> *,std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> * &>
PUBLIC	??$?0AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >,1><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > const &>
PUBLIC	??$?0AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >,1><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > const &>
PUBLIC	??$?0AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > ><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > const &,0>
PUBLIC	??$?0AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > ><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > const &,0>
PUBLIC	?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::_Alloc_sentinel_and_proxy
PUBLIC	?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::_Alloc_sentinel_and_proxy
PUBLIC	??0?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@QEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z ; std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0>::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0>
PUBLIC	??0?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAAAEAMXZ ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >::_Max_bucket_size
PUBLIC	??0?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@QEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z ; std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0>::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0>
PUBLIC	??0?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >
PUBLIC	?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAAAEAMXZ ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >::_Max_bucket_size
PUBLIC	??0?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@QEAA@XZ ; std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >
PUBLIC	??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >
PUBLIC	??0?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@QEAA@XZ ; std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >
PUBLIC	??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >
PUBLIC	??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ ; std::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >
PUBLIC	??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ ; std::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >
PUBLIC	?GetNodeType@UIAINBNodeBase@@UEAA?AW4NodeType@1@XZ ; UIAINBNodeBase::GetNodeType
PUBLIC	?ValueTypeToPinType@UIAINBNodeBase@@QEAA?AW4PinType@1@E@Z ; UIAINBNodeBase::ValueTypeToPinType
PUBLIC	?GetValueTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@E@Z ; UIAINBNodeBase::GetValueTypeColor
PUBLIC	?GetPinTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@W4PinType@1@@Z ; UIAINBNodeBase::GetPinTypeColor
PUBLIC	?GetParamValueWidth@UIAINBNodeBase@@QEAAME@Z	; UIAINBNodeBase::GetParamValueWidth
PUBLIC	?GetValueTypeName@UIAINBNodeBase@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z ; UIAINBNodeBase::GetValueTypeName
PUBLIC	?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z ; UIAINBNodeBase::DrawParameterValue
PUBLIC	?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; UIAINBNodeBase::DrawPin
PUBLIC	?DrawPinIcon@UIAINBNodeBase@@QEAAX_NIW4PinType@1@@Z ; UIAINBNodeBase::DrawPinIcon
PUBLIC	?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z ; UIAINBNodeBase::DrawImmediateSeperator
PUBLIC	?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ		; UIAINBNodeBase::DrawNodeHeader
PUBLIC	??0NodeShapeInfo@UIAINBNodeBase@@QEAA@XZ	; UIAINBNodeBase::NodeShapeInfo::NodeShapeInfo
PUBLIC	??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z ; UIAINBNodeBase::UIAINBNodeBase
PUBLIC	?PostProcessNode@UIAINBNodeBase@@UEAAXXZ	; UIAINBNodeBase::PostProcessNode
PUBLIC	?PostProcessLinkedNodeInfo@UIAINBNodeBase@@UEAAXAEAUPin@1@AEAULinkedNodeInfo@AINBFile@@@Z ; UIAINBNodeBase::PostProcessLinkedNodeInfo
PUBLIC	?UpdateVisuals@UIAINBNodeBase@@UEAAXXZ		; UIAINBNodeBase::UpdateVisuals
PUBLIC	?RebuildNode@UIAINBNodeBase@@UEAAXXZ		; UIAINBNodeBase::RebuildNode
PUBLIC	?ClearParameterIds@UIAINBNodeBase@@QEAAXXZ	; UIAINBNodeBase::ClearParameterIds
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN33
	DD	imagerel $LN33+35
	DD	imagerel $unwind$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN33
	DD	imagerel $LN33+35
	DD	imagerel $unwind$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z DD imagerel $LN41
	DD	imagerel $LN41+45
	DD	imagerel $unwind$??0?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z DD imagerel $LN41
	DD	imagerel $LN41+45
	DD	imagerel $unwind$??0?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z DD imagerel $LN60
	DD	imagerel $LN60+115
	DD	imagerel $unwind$??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z DD imagerel $LN60
	DD	imagerel $LN60+115
	DD	imagerel $unwind$??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ DD imagerel $LN70
	DD	imagerel $LN70+113
	DD	imagerel $unwind$??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ DD imagerel $LN70
	DD	imagerel $LN70+113
	DD	imagerel $unwind$??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetPinTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@W4PinType@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$?GetPinTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@W4PinType@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetValueTypeName@UIAINBNodeBase@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z DD imagerel $LN103
	DD	imagerel $LN103+200
	DD	imagerel $unwind$?GetValueTypeName@UIAINBNodeBase@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z DD imagerel $LN624
	DD	imagerel $LN624+2084
	DD	imagerel $unwind$?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN105
	DD	imagerel $LN105+1193
	DD	imagerel $unwind$?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawPinIcon@UIAINBNodeBase@@QEAAX_NIW4PinType@1@@Z DD imagerel $LN74
	DD	imagerel $LN74+524
	DD	imagerel $unwind$?DrawPinIcon@UIAINBNodeBase@@QEAAX_NIW4PinType@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z DD imagerel $LN40
	DD	imagerel $LN40+52
	DD	imagerel $unwind$?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z DD imagerel $LN40+52
	DD	imagerel $LN40+406
	DD	imagerel $chain$0$?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z DD imagerel $LN40+406
	DD	imagerel $LN40+412
	DD	imagerel $chain$1$?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ DD imagerel $LN155
	DD	imagerel $LN155+1302
	DD	imagerel $unwind$?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z DD imagerel $LN169
	DD	imagerel $LN169+395
	DD	imagerel $unwind$??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearParameterIds@UIAINBNodeBase@@QEAAXXZ DD imagerel $LN31
	DD	imagerel $LN31+112
	DD	imagerel $unwind$?ClearParameterIds@UIAINBNodeBase@@QEAAXXZ
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearParameterIds@UIAINBNodeBase@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z DB 0cH
	DB	019H, 02H
	DB	06H
	DB	'|'
	DB	0aH
	DB	'D'
	DB	0cH
	DB	'|'
	DB	010H
	DB	'V'
	DB	012H
	DB	'D'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z DB 012H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$3@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$9@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$4@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z DB 028H
	DD	imagerel $stateUnwindMap$??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z
	DD	imagerel $ip2state$??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z DD 0a1b11H
	DD	0d541bH
	DD	0c341bH
	DD	0f017321bH
	DD	0c013e015H
	DD	060107011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ DB 0cH
	DB	'5', 02H
	DB	00H
	DB	'a', 06H
	DB	02H
	DB	0b1H, 05H
	DB	00H
	DB	'^'
	DB	02H
	DB	081H, 03H
	DB	04H
	DB	'P'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ DB 04H
	DB	0aH
	DD	imagerel ??1ImGuiTextBuffer@@QEAA@XZ
	DB	0e0H
	DB	03eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ
	DD	imagerel $ip2state$?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ DD 01d6019H
	DD	0ad852H
	DD	0bc84aH
	DD	0cb842H
	DD	0da83aH
	DD	0e9835H
	DD	0f8830H
	DD	010782bH
	DD	0116827H
	DD	02d7423H
	DD	02c6423H
	DD	02b3423H
	DD	0240123H
	DD	0e016f018H
	DD	0c012d014H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ
	DD	092H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z DD 021H
	DD	imagerel $LN40
	DD	imagerel $LN40+52
	DD	imagerel $unwind$?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z DD 020521H
	DD	057805H
	DD	imagerel $LN40
	DD	imagerel $LN40+52
	DD	imagerel $unwind$?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z DD 020601H
	DD	03002b206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawPinIcon@UIAINBNodeBase@@QEAAX_NIW4PinType@1@@Z DD 031b19H
	DD	0120109H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	088H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	08dH, 02H
	DB	02H
	DB	089H, 0eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01d5919H
	DD	04f84aH
	DD	05e844H
	DD	06d83eH
	DD	07c838H
	DD	08b832H
	DD	09a82dH
	DD	0a9828H
	DD	0b8823H
	DD	0c781eH
	DD	0d681aH
	DD	0225416H
	DD	0203416H
	DD	01c0116H
	DD	0700de00fH
	DD	0600cH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	03aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z DB '4'
	DB	0caH
	DB	02H
	DB	'&'
	DB	04H
	DB	098H
	DB	06H
	DB	'"'
	DB	08H
	DB	'Z'
	DB	06H
	DB	09dH, 04H
	DB	02H
	DB	'&'
	DB	04H
	DB	098H
	DB	06H
	DB	'"'
	DB	08H
	DB	'Z'
	DB	06H
	DB	'e', 03H
	DB	02H
	DB	09cH
	DB	04H
	DB	'"'
	DB	06H
	DB	'.'
	DB	08H
	DB	085H, 03H
	DB	02H
	DB	'&'
	DB	04H
	DB	098H
	DB	06H
	DB	'"'
	DB	08H
	DB	'.'
	DB	06H
	DB	09dH, 03H
	DB	02H
	DB	09cH
	DB	04H
	DB	'"'
	DB	06H
	DB	':'
	DB	08H
	DB	0a9H, 03H
	DB	00H
	DB	'D'
	DB	04H
	DB	'@'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z DB 08H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e1H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e0H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	041H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z DB 028H
	DD	imagerel $stateUnwindMap$?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z
	DD	imagerel $ip2state$?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z DD 0b2c19H
	DD	0d681eH
	DD	021641aH
	DD	020341aH
	DD	01c011aH
	DD	0700de00fH
	DD	0500cH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z
	DD	0c2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetValueTypeName@UIAINBNodeBase@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetPinTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@W4PinType@1@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ DB 04H
	DB	'B'
	DB	00H
	DB	'x'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0???0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ DB 04H
	DB	'B'
	DB	00H
	DB	'x'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0???0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z DB 04H
	DB	'F'
	DB	00H
	DB	'x'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z
	DD	imagerel $ip2state$??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z DB 04H
	DB	'F'
	DB	00H
	DB	'x'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z
	DD	imagerel $ip2state$??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ?ClearParameterIds@UIAINBNodeBase@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ClearParameterIds@UIAINBNodeBase@@QEAAXXZ PROC		; UIAINBNodeBase::ClearParameterIds, COMDAT

; 307  : {

$LN31:
	push	rbx
	sub	rsp, 32					; 00000020H

; 308  :     for (uint8_t i = 0; i < AINBFile::ValueTypeCount; i++) {

	xor	edx, edx
	mov	rbx, rcx
	lea	r8d, QWORD PTR [rdx+6]
	npad	1
$LL4@ClearParam:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rbx+48]

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

	mov	rcx, QWORD PTR [rdx+rax]
	cmp	rcx, QWORD PTR [rdx+rax+8]
	je	SHORT $LN8@ClearParam

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

	mov	QWORD PTR [rdx+rax+8], rcx
$LN8@ClearParam:

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rbx+72]

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

	mov	rcx, QWORD PTR [rdx+rax]
	cmp	rcx, QWORD PTR [rdx+rax+8]
	je	SHORT $LN13@ClearParam

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

	mov	QWORD PTR [rdx+rax+8], rcx
$LN13@ClearParam:

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rbx+96]

; 1766 :         if (_Myfirst == _Mylast) { // already empty, nothing to do

	mov	rcx, QWORD PTR [rdx+rax]
	cmp	rcx, QWORD PTR [rdx+rax+8]
	je	SHORT $LN2@ClearParam

; 1767 :             // This is an optimization for debug mode: we can avoid taking the debug lock to invalidate iterators.
; 1768 :             // Note that when clearing an empty vector, this will preserve past-the-end iterators, which is allowed by
; 1769 :             // N4950 [sequence.reqmts]/54 "a.clear() [...] may invalidate the past-the-end iterator".
; 1770 :             return;
; 1771 :         }
; 1772 : 
; 1773 :         _My_data._Orphan_all();
; 1774 :         _Destroy_range(_Myfirst, _Mylast, _Getal());
; 1775 :         _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Myfirst - _Mylast)); // negative when destroying elements
; 1776 :         _Mylast = _Myfirst;

	mov	QWORD PTR [rdx+rax+8], rcx
$LN2@ClearParam:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 308  :     for (uint8_t i = 0; i < AINBFile::ValueTypeCount; i++) {

	add	rdx, 24
	sub	r8, 1
	jne	SHORT $LL4@ClearParam

; 309  :         mOutputParameters[i].clear();
; 310  :         mInputParameters[i].clear();
; 311  :         mLinkedOutputParams[i].clear();
; 312  :     }
; 313  :     mPins.clear();

	lea	rcx, QWORD PTR [rbx+120]
	call	?clear@?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@QEAAXXZ ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >::clear

; 314  :     mLinks.clear();

	lea	rcx, QWORD PTR [rbx+184]

; 315  : }

	add	rsp, 32					; 00000020H
	pop	rbx

; 314  :     mLinks.clear();

	jmp	?clear@?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@QEAAXXZ ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >::clear
?ClearParameterIds@UIAINBNodeBase@@QEAAXXZ ENDP		; UIAINBNodeBase::ClearParameterIds
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.h
;	COMDAT ?RebuildNode@UIAINBNodeBase@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?RebuildNode@UIAINBNodeBase@@UEAAXXZ PROC		; UIAINBNodeBase::RebuildNode, COMDAT

; 76   :     virtual void RebuildNode() {}

	ret	0
?RebuildNode@UIAINBNodeBase@@UEAAXXZ ENDP		; UIAINBNodeBase::RebuildNode
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.h
;	COMDAT ?UpdateVisuals@UIAINBNodeBase@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?UpdateVisuals@UIAINBNodeBase@@UEAAXXZ PROC		; UIAINBNodeBase::UpdateVisuals, COMDAT

; 77   :     virtual void UpdateVisuals() {}

	ret	0
?UpdateVisuals@UIAINBNodeBase@@UEAAXXZ ENDP		; UIAINBNodeBase::UpdateVisuals
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.h
;	COMDAT ?PostProcessLinkedNodeInfo@UIAINBNodeBase@@UEAAXAEAUPin@1@AEAULinkedNodeInfo@AINBFile@@@Z
_TEXT	SEGMENT
this$ = 8
StartPin$ = 16
Info$ = 24
?PostProcessLinkedNodeInfo@UIAINBNodeBase@@UEAAXAEAUPin@1@AEAULinkedNodeInfo@AINBFile@@@Z PROC ; UIAINBNodeBase::PostProcessLinkedNodeInfo, COMDAT

; 78   :     virtual void PostProcessLinkedNodeInfo(Pin& StartPin, AINBFile::LinkedNodeInfo& Info) {}

	ret	0
?PostProcessLinkedNodeInfo@UIAINBNodeBase@@UEAAXAEAUPin@1@AEAULinkedNodeInfo@AINBFile@@@Z ENDP ; UIAINBNodeBase::PostProcessLinkedNodeInfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.h
;	COMDAT ?PostProcessNode@UIAINBNodeBase@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?PostProcessNode@UIAINBNodeBase@@UEAAXXZ PROC		; UIAINBNodeBase::PostProcessNode, COMDAT

; 79   :     virtual void PostProcessNode() {}

	ret	0
?PostProcessNode@UIAINBNodeBase@@UEAAXXZ ENDP		; UIAINBNodeBase::PostProcessNode
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z
_TEXT	SEGMENT
this$ = 80
this$ = 88
this$ = 88
Node$ = 88
EditorId$ = 96
HeaderBackground$ = 104
EnableFlow$dead$ = 112
??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z PROC ; UIAINBNodeBase::UIAINBNodeBase, COMDAT

; 11   : {

$LN169:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rbp
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
	mov	rbp, r9
	mov	r15, rcx
	lea	rax, OFFSET FLAT:??_7UIAINBNodeBase@@6B@
	mov	QWORD PTR [rcx], rax

; 7    :     : mNode(Node)

	mov	QWORD PTR [rcx+8], rdx

; 8    :     , mEditorId(EditorId)

	mov	DWORD PTR [rcx+16], r8d

; 11   : {

	xor	r12d, r12d
	mov	QWORD PTR [rcx+20], r12
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 269  :     constexpr ImVec2()                      : x(0.0f), y(0.0f) { }

	mov	QWORD PTR [rcx+28], r12
	mov	DWORD PTR [rcx+36], r12d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.h

; 63   :     float mMinTextBoxWidth = 150.0f;

	mov	DWORD PTR [rcx+40], 1125515264		; 43160000H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx+48], r12
	mov	QWORD PTR [rcx+56], r12
	mov	QWORD PTR [rcx+64], r12
	mov	QWORD PTR [rcx+72], r12
	mov	QWORD PTR [rcx+80], r12
	mov	QWORD PTR [rcx+88], r12
	mov	QWORD PTR [rcx+96], r12
	mov	QWORD PTR [rcx+104], r12
	mov	QWORD PTR [rcx+112], r12
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 11   : {

	lea	rbx, QWORD PTR [rcx+120]
	mov	QWORD PTR this$[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map

; 50   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	mov	DWORD PTR [rbx], r12d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	mov	QWORD PTR [rbx+8], r12
	mov	QWORD PTR [rbx+16], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [r12+56]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	lea	rcx, QWORD PTR [rbx+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx], r12
	mov	QWORD PTR [rcx+8], r12
	mov	QWORD PTR [rcx+16], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	mov	QWORD PTR [rbx+48], 7
	mov	QWORD PTR [rbx+56], 8

; 377  :         // construct empty hash table
; 378  :         _Max_bucket_size() = _Bucket_size;

	mov	DWORD PTR [rbx], 1065353216		; 3f800000H

; 379  :         _Vec._Assign_grow(_Min_buckets * 2, _List._Unchecked_end());

	mov	r8, QWORD PTR [rbx+8]
	lea	edx, QWORD PTR [r12+16]
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >::_Assign_grow
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 11   : {

	lea	rbx, QWORD PTR [r15+184]
	mov	QWORD PTR this$[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map

; 50   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	mov	DWORD PTR [rbx], r12d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	mov	QWORD PTR [rbx+8], r12
	mov	QWORD PTR [rbx+16], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [r12+40]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	lea	rcx, QWORD PTR [rbx+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx], r12
	mov	QWORD PTR [rcx+8], r12
	mov	QWORD PTR [rcx+16], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	mov	QWORD PTR [rbx+48], 7
	mov	QWORD PTR [rbx+56], 8

; 377  :         // construct empty hash table
; 378  :         _Max_bucket_size() = _Bucket_size;

	mov	DWORD PTR [rbx], 1065353216		; 3f800000H

; 379  :         _Vec._Assign_grow(_Min_buckets * 2, _List._Unchecked_end());

	mov	r8, QWORD PTR [rbx+8]
	lea	edx, QWORD PTR [r12+16]
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >::_Assign_grow
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 9    :     , mHeaderBackground(HeaderBackground)

	mov	QWORD PTR [r15+248], rbp

; 10   :     , mEnableFlow(EnableFlow)

	lea	rax, OFFSET FLAT:?EnableFlow@UIAINBEditor@@3_NA ; UIAINBEditor::EnableFlow
	mov	QWORD PTR [r15+256], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.h

; 71   :     bool mFlowLinked = false;

	mov	BYTE PTR [r15+264], r12b
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 12   :     mOutputParameters.resize(6);

	lea	edx, QWORD PTR [r12+6]
	lea	rcx, QWORD PTR [r15+48]
	call	?resize@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QEAAX_K@Z ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::resize

; 13   :     mInputParameters.resize(6);

	lea	edx, QWORD PTR [r12+6]
	lea	rcx, QWORD PTR [r15+72]
	call	?resize@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QEAAX_K@Z ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::resize

; 14   : 
; 15   :     mLinkedOutputParams.resize(6);

	lea	edx, QWORD PTR [r12+6]
	lea	rcx, QWORD PTR [r15+96]
	call	?resize@?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QEAAX_K@Z ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::resize
	npad	1

; 16   : }

	mov	rax, r15
	mov	rbx, QWORD PTR [rsp+96]
	mov	rbp, QWORD PTR [rsp+104]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z ENDP ; UIAINBNodeBase::UIAINBNodeBase
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
this$ = 88
this$ = 88
Node$ = 88
EditorId$ = 96
HeaderBackground$ = 104
EnableFlow$dead$ = 112
?dtor$0@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA PROC ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 48					; 00000030H
	jmp	??1?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::~vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
?dtor$0@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA ENDP ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
this$ = 88
this$ = 88
Node$ = 88
EditorId$ = 96
HeaderBackground$ = 104
EnableFlow$dead$ = 112
?dtor$1@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA PROC ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 72					; 00000048H
	jmp	??1?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::~vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
?dtor$1@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA ENDP ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
this$ = 88
this$ = 88
Node$ = 88
EditorId$ = 96
HeaderBackground$ = 104
EnableFlow$dead$ = 112
?dtor$2@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA PROC ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 96					; 00000060H
	jmp	??1?$vector@V?$vector@IV?$allocator@I@std@@@std@@V?$allocator@V?$vector@IV?$allocator@I@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >::~vector<std::vector<unsigned int,std::allocator<unsigned int> >,std::allocator<std::vector<unsigned int,std::allocator<unsigned int> > > >
?dtor$2@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA ENDP ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
this$ = 88
this$ = 88
Node$ = 88
EditorId$ = 96
HeaderBackground$ = 104
EnableFlow$dead$ = 112
?dtor$6@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA PROC ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$6
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 8
	jmp	??1?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::~list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >
?dtor$6@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA ENDP ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
this$ = 88
this$ = 88
Node$ = 88
EditorId$ = 96
HeaderBackground$ = 104
EnableFlow$dead$ = 112
?dtor$7@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA PROC ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$7
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 24
	jmp	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >
?dtor$7@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA ENDP ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
this$ = 88
this$ = 88
Node$ = 88
EditorId$ = 96
HeaderBackground$ = 104
EnableFlow$dead$ = 112
?dtor$3@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA PROC ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 120				; 00000078H
	jmp	??1?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ
?dtor$3@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA ENDP ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
this$ = 88
this$ = 88
Node$ = 88
EditorId$ = 96
HeaderBackground$ = 104
EnableFlow$dead$ = 112
?dtor$9@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA PROC ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$9
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 8
	jmp	??1?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::~list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >
?dtor$9@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA ENDP ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
this$ = 88
this$ = 88
Node$ = 88
EditorId$ = 96
HeaderBackground$ = 104
EnableFlow$dead$ = 112
?dtor$10@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA PROC ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$10
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 24
	jmp	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >
?dtor$10@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA ENDP ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 80
this$ = 88
this$ = 88
Node$ = 88
EditorId$ = 96
HeaderBackground$ = 104
EnableFlow$dead$ = 112
?dtor$4@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA PROC ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$4
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 184				; 000000b8H
	jmp	??1?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ
?dtor$4@?0???0UIAINBNodeBase@@QEAA@PEAUNode@AINBFile@@IAEAUTexture@TextureMgr@@AEA_N@Z@4HA ENDP ; `UIAINBNodeBase::UIAINBNodeBase'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
;	COMDAT ??0NodeShapeInfo@UIAINBNodeBase@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0NodeShapeInfo@UIAINBNodeBase@@QEAA@XZ PROC		; UIAINBNodeBase::NodeShapeInfo::NodeShapeInfo, COMDAT

; 269  :     constexpr ImVec2()                      : x(0.0f), y(0.0f) { }

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	DWORD PTR [rcx+16], eax
	mov	rax, rcx
	ret	0
??0NodeShapeInfo@UIAINBNodeBase@@QEAA@XZ ENDP		; UIAINBNodeBase::NodeShapeInfo::NodeShapeInfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_draw.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_draw.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_draw.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_draw.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_draw.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ
_TEXT	SEGMENT
$T3 = 80
$T4 = 80
text_size$5 = 80
$T6 = 80
$T7 = 80
$T8 = 80
clip_rect$9 = 88
$T10 = 88
WidgetPosition$11 = 88
uv$12 = 88
$T13 = 104
Builder$14 = 112
HeaderColor$15 = 128
__$ArrayPad$ = 144
this$ = 336
?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ PROC		; UIAINBNodeBase::DrawNodeHeader, COMDAT

; 19   : {

$LN155:
	mov	rax, rsp
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax+24], rsi
	mov	QWORD PTR [rax+32], rdi
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rax-72]
	sub	rsp, 288				; 00000120H
	movaps	XMMWORD PTR [rax-56], xmm6
	movaps	XMMWORD PTR [rax-72], xmm7
	movaps	XMMWORD PTR [rax-88], xmm8
	movaps	XMMWORD PTR [rax-104], xmm9
	movaps	XMMWORD PTR [rax-120], xmm10
	movaps	XMMWORD PTR [rax-136], xmm11
	movaps	XMMWORD PTR [rax-152], xmm12
	movaps	XMMWORD PTR [rax-168], xmm13
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	r14, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5586 :     return (g.LastItemData.StatusFlags & ImGuiItemStatusFlags_Visible) != 0;

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	eax, DWORD PTR [rcx+18624]
	shr	eax, 9
	test	al, 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 20   :     if (ImGui::IsItemVisible()) {

	je	$LN132@DrawNodeHe

; 21   :         int Alpha = ImGui::GetStyle().Alpha;

	cvttss2si ebx, DWORD PTR [rcx+14552]

; 22   :         ImColor HeaderColor = GetHeaderColor();

	mov	rax, QWORD PTR [r14]
	lea	rdx, QWORD PTR HeaderColor$15[rbp-256]
	mov	rcx, r14
	call	QWORD PTR [rax+64]
	movd	xmm0, ebx

; 23   :         HeaderColor.Value.w = Alpha;

	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR HeaderColor$15[rbp-244], xmm0

; 24   : 
; 25   :         ImDrawList* DrawList = ed::GetNodeBackgroundDrawList(mEditorId);

	mov	ecx, DWORD PTR [r14+16]
	call	?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z ; ax::NodeEditor::GetNodeBackgroundDrawList
	mov	rdi, rax

; 26   : 
; 27   :         float BorderWidth = ed::GetStyle().NodeBorderWidth;

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	movss	xmm1, DWORD PTR [rcx+148]

; 28   : 
; 29   :         mNodeShapeInfo.HeaderMin.x += BorderWidth;

	movaps	xmm4, xmm1
	addss	xmm4, DWORD PTR [r14+24]
	movss	DWORD PTR [r14+24], xmm4

; 30   :         mNodeShapeInfo.HeaderMin.y += BorderWidth;

	movaps	xmm0, xmm1
	addss	xmm0, DWORD PTR [r14+28]
	movss	DWORD PTR [r14+28], xmm0

; 31   :         mNodeShapeInfo.HeaderMax.x -= BorderWidth;

	lea	r12, QWORD PTR [r14+32]
	movss	xmm3, DWORD PTR [r12]
	subss	xmm3, xmm1
	movss	DWORD PTR [r12], xmm3

; 32   :         mNodeShapeInfo.HeaderMax.y -= BorderWidth;

	movss	xmm2, DWORD PTR [r14+36]
	subss	xmm2, xmm1
	movss	DWORD PTR [r14+36], xmm2

; 33   : 
; 34   :         /*
; 35   :         float BorderWidth = ed::GetStyle().NodeBorderWidth;
; 36   : 
; 37   :         mNodeShapeInfo.HeaderMin.x += BorderWidth;
; 38   :         mNodeShapeInfo.HeaderMin.y += BorderWidth;
; 39   :         mNodeShapeInfo.HeaderMax.x -= BorderWidth;
; 40   :         mNodeShapeInfo.HeaderMax.y -= BorderWidth;
; 41   : 
; 42   :         DrawList->AddRectFilled(mNodeShapeInfo.HeaderMin, mNodeShapeInfo.HeaderMax, HeaderColor, ed::GetStyle().NodeRounding,
; 43   :             ImDrawFlags_RoundCornersTopLeft | ImDrawFlags_RoundCornersTopRight);
; 44   : 
; 45   :         ImVec2 HeaderSeparatorLeft = ImVec2(mNodeShapeInfo.HeaderMin.x - BorderWidth / 2, mNodeShapeInfo.HeaderMax.y - 0.5f);
; 46   :         ImVec2 HeaderSeparatorRight = ImVec2(mNodeShapeInfo.HeaderMax.x, mNodeShapeInfo.HeaderMax.y - 0.5f);
; 47   : 
; 48   :         DrawList->AddLine(HeaderSeparatorLeft, HeaderSeparatorRight, ImColor(255, 255, 255, (int)(Alpha * 255 / 2)), BorderWidth);
; 49   :         */
; 50   :         
; 51   :         const auto HalfBorderWidth = ed::GetStyle().NodeBorderWidth * 0.5f;
; 52   : 
; 53   :         const auto uv = ImVec2(

	mov	r8, QWORD PTR [r14+248]
	subss	xmm2, xmm0
	mov	eax, DWORD PTR [r8+8]
	xorps	xmm0, xmm0
	cvtsi2ss xmm0, rax
	movss	xmm7, DWORD PTR __real@40800000
	mulss	xmm0, xmm7
	divss	xmm2, xmm0
	subss	xmm3, xmm4
	mov	eax, DWORD PTR [r8+4]
	xorps	xmm0, xmm0
	cvtsi2ss xmm0, rax
	mulss	xmm0, xmm7
	divss	xmm3, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR uv$12[rsp], xmm3
	movss	DWORD PTR uv$12[rsp+4], xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 57   :         DrawList->AddImageRounded((ImTextureID)mHeaderBackground.ID,

	movss	xmm6, DWORD PTR [rcx+144]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	lea	rcx, QWORD PTR HeaderColor$15[rbp-256]
	call	?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
	mov	DWORD PTR $T13[rsp], eax
	xorps	xmm13, xmm13

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	QWORD PTR $T8[rsp], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 57   :         DrawList->AddImageRounded((ImTextureID)mHeaderBackground.ID,

	mov	esi, DWORD PTR [r8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_draw.cpp

; 1644 :     if ((col & IM_COL32_A_MASK) == 0)

	xor	r15d, r15d
	movss	xmm10, DWORD PTR __real@3f000000
	test	eax, -16777216				; ff000000H
	je	$LN24@DrawNodeHe

; 1645 :         return;
; 1646 : 
; 1647 :     flags = FixRectCornerFlags(flags);
; 1648 :     if (rounding < 0.5f || (flags & ImDrawFlags_RoundCornersMask_) == ImDrawFlags_RoundCornersNone)

	comiss	xmm10, xmm6
	ja	$LN22@DrawNodeHe

; 1651 :         return;
; 1652 :     }
; 1653 : 
; 1654 :     const bool push_texture_id = user_texture_id != _CmdHeader.TextureId;

	mov	r15, QWORD PTR [rdi+152]

; 1655 :     if (push_texture_id)

	cmp	rsi, r15
	je	SHORT $LN23@DrawNodeHe

; 1656 :         PushTextureID(user_texture_id);

	mov	edx, esi
	mov	rcx, rdi
	call	?PushTextureID@ImDrawList@@QEAAXPEAX@Z	; ImDrawList::PushTextureID
$LN23@DrawNodeHe:

; 1657 : 
; 1658 :     int vert_start_idx = VtxBuffer.Size;

	mov	ebx, DWORD PTR [rdi+32]

; 1659 :     PathRect(p_min, p_max, rounding, flags);

	mov	DWORD PTR [rsp+32], 48			; 00000030H
	movaps	xmm3, xmm6
	mov	r8, r12
	lea	rdx, QWORD PTR [r14+24]
	mov	rcx, rdi
	call	?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z ; ImDrawList::PathRect
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2807 :     inline    void  PathFillConvex(ImU32 col)                                   { AddConvexPolyFilled(_Path.Data, _Path.Size, col); _Path.Size = 0; }

	mov	r9d, DWORD PTR $T13[rsp]
	mov	r8d, DWORD PTR [rdi+120]
	mov	rdx, QWORD PTR [rdi+128]
	mov	rcx, rdi
	call	?AddConvexPolyFilled@ImDrawList@@QEAAXPEBUImVec2@@HI@Z ; ImDrawList::AddConvexPolyFilled
	mov	DWORD PTR [rdi+120], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_draw.cpp

; 1662 :     ImGui::ShadeVertsLinearUV(this, vert_start_idx, vert_end_idx, p_min, p_max, uv_min, uv_max, true);

	lea	rax, QWORD PTR uv$12[rsp]
	mov	QWORD PTR [rsp+48], rax
	lea	rax, QWORD PTR $T8[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], r12
	lea	r9, QWORD PTR [r14+24]
	mov	r8d, DWORD PTR [rdi+32]
	mov	edx, ebx
	mov	rcx, rdi
	call	?ShadeVertsLinearUV@ImGui@@YAXPEAUImDrawList@@HHAEBUImVec2@@111_N@Z ; ImGui::ShadeVertsLinearUV

; 1663 : 
; 1664 :     if (push_texture_id)

	cmp	rsi, r15
	je	SHORT $LN151@DrawNodeHe

; 1665 :         PopTextureID();

	mov	rcx, rdi
	call	?PopTextureID@ImDrawList@@QEAAXXZ	; ImDrawList::PopTextureID
$LN151@DrawNodeHe:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1903 :     inline ImVector()                                       { Size = Capacity = 0; Data = NULL; }

	xor	r15d, r15d
$LN24@DrawNodeHe:
	mov	QWORD PTR Builder$14[rsp], 0
	mov	QWORD PTR Builder$14[rsp+8], r15
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 68   :         Builder.appendf("#%d", mNode->NodeIndex);

	mov	rax, QWORD PTR [r14+8]
	movzx	r8d, WORD PTR [rax+2]
	lea	rdx, OFFSET FLAT:??_C@_03FDCLAKJL@?$CD?$CFd@
	lea	rcx, QWORD PTR Builder$14[rsp]
	call	?appendf@ImGuiTextBuffer@@QEAAXPEBDZZ	; ImGuiTextBuffer::appendf
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2424 :     const char*         c_str() const           { return Buf.Data ? Buf.Data : EmptyString; }

	lea	rbx, OFFSET FLAT:?EmptyString@ImGuiTextBuffer@@2PADA ; ImGuiTextBuffer::EmptyString
	mov	rsi, QWORD PTR Builder$14[rsp+8]
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rcx, QWORD PTR [rax+15688]
	movss	xmm6, DWORD PTR [rax+15696]
	test	rsi, rsi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5417 :     const float font_size = g.FontSize;

	mov	rdx, rsi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2424 :     const char*         c_str() const           { return Buf.Data ? Buf.Data : EmptyString; }

	jne	SHORT $LN44@DrawNodeHe
	mov	rdx, rbx
$LN44@DrawNodeHe:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5420 :     ImVec2 text_size = font->CalcTextSizeA(font_size, FLT_MAX, wrap_width, text, text_display_end, NULL);

	mov	QWORD PTR [rsp+56], r15
	mov	QWORD PTR [rsp+48], r15
	mov	QWORD PTR [rsp+40], rdx
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@7f7fffff
	movaps	xmm2, xmm6
	lea	rdx, QWORD PTR text_size$5[rsp]
	call	?CalcTextSizeA@ImFont@@QEBA?AUImVec2@@MMMPEBD0PEAPEBD@Z ; ImFont::CalcTextSizeA

; 5421 : 
; 5422 :     // Round
; 5423 :     // FIXME: This has been here since Dec 2015 (7b0bf230) but down the line we want this out.
; 5424 :     // FIXME: Investigate using ceilf or e.g.
; 5425 :     // - https://git.musl-libc.org/cgit/musl/tree/src/math/ceilf.c
; 5426 :     // - https://embarkstudios.github.io/rust-gpu/api/src/libm/math/ceilf.rs.html
; 5427 :     text_size.x = IM_FLOOR(text_size.x + 0.99999f);

	movss	xmm0, DWORD PTR text_size$5[rsp]
	addss	xmm0, DWORD PTR __real@3f7fff58
	cvttss2si eax, xmm0
	movd	xmm1, eax
	cvtdq2ps xmm1, xmm1

; 5428 : 
; 5429 :     return text_size;

	movss	xmm6, DWORD PTR text_size$5[rsp+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 72   :         auto WidgetSize = ImVec2(TextSize.x + Padding.x * 2, TextSize.y + Padding.y * 2);

	addss	xmm6, xmm7
	addss	xmm1, xmm7

; 73   : 
; 74   :         auto WidgetPosition = ImVec2(mNodeShapeInfo.HeaderMax.x + Padding.x, mNodeShapeInfo.HeaderMin.y - Padding.y - WidgetSize.y);

	movss	xmm8, DWORD PTR [r14+28]
	movss	xmm11, DWORD PTR __real@40000000
	subss	xmm8, xmm11
	subss	xmm8, xmm6
	movss	xmm9, DWORD PTR [r12]
	addss	xmm9, xmm11
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR WidgetPosition$11[rsp], xmm9
	movss	DWORD PTR WidgetPosition$11[rsp+4], xmm8
	addss	xmm6, xmm8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 76   :         DrawList->AddRectFilled(WidgetPosition, ImVec2(WidgetPosition.x + WidgetSize.x, WidgetPosition.y + WidgetSize.y), IM_COL32(100, 80, 80, 190), 3.0f, ImDrawFlags_RoundCornersAll);

	movaps	xmm7, xmm9
	addss	xmm7, xmm1
	movaps	xmm0, xmm9
	addss	xmm0, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR $T7[rsp], xmm0
	movss	DWORD PTR $T7[rsp+4], xmm6
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 76   :         DrawList->AddRectFilled(WidgetPosition, ImVec2(WidgetPosition.x + WidgetSize.x, WidgetPosition.y + WidgetSize.y), IM_COL32(100, 80, 80, 190), 3.0f, ImDrawFlags_RoundCornersAll);

	mov	DWORD PTR [rsp+40], 240			; 000000f0H
	movss	xmm12, DWORD PTR __real@40400000
	movss	DWORD PTR [rsp+32], xmm12
	mov	r9d, -1102032796			; be505064H
	lea	r8, QWORD PTR $T7[rsp]
	lea	rdx, QWORD PTR WidgetPosition$11[rsp]
	mov	rcx, rdi
	call	?AddRectFilled@ImDrawList@@QEAAXAEBUImVec2@@0IMH@Z ; ImDrawList::AddRectFilled
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_draw.cpp

; 1397 :     if (Flags & ImDrawListFlags_AntiAliasedLines)

	movaps	xmm2, xmm8
	addss	xmm2, xmm10
	movaps	xmm1, xmm9
	addss	xmm1, xmm10
	movss	DWORD PTR $T10[rsp], xmm1
	movss	DWORD PTR $T10[rsp+4], xmm2
	mov	DWORD PTR [rsp+32], 240			; 000000f0H
	movaps	xmm3, xmm12
	lea	r8, QWORD PTR $T4[rsp]
	lea	rdx, QWORD PTR $T10[rsp]
	mov	rcx, rdi
	test	BYTE PTR [rdi+48], 1
	je	SHORT $LN66@DrawNodeHe
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	subss	xmm6, xmm10

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	subss	xmm7, xmm10
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_draw.cpp

; 1398 :         PathRect(p_min + ImVec2(0.50f, 0.50f), p_max - ImVec2(0.50f, 0.50f), rounding, flags);

	jmp	SHORT $LN152@DrawNodeHe
$LN22@DrawNodeHe:

; 1650 :         AddImage(user_texture_id, p_min, p_max, uv_min, uv_max, col);

	mov	DWORD PTR [rsp+48], eax
	lea	rax, QWORD PTR uv$12[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR $T8[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, r12
	lea	r8, QWORD PTR [r14+24]
	mov	rdx, rsi
	mov	rcx, rdi
	call	?AddImage@ImDrawList@@QEAAXPEAXAEBUImVec2@@111I@Z ; ImDrawList::AddImage

; 1663 : 
; 1664 :     if (push_texture_id)

	jmp	$LN24@DrawNodeHe
$LN66@DrawNodeHe:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	subss	xmm6, DWORD PTR __real@3efae148

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	subss	xmm7, DWORD PTR __real@3efae148
$LN152@DrawNodeHe:

; 2808 :     inline    void  PathStroke(ImU32 col, ImDrawFlags flags = 0, float thickness = 1.0f) { AddPolyline(_Path.Data, _Path.Size, col, flags, thickness); _Path.Size = 0; }

	movss	DWORD PTR $T3[rsp], xmm7
	movss	DWORD PTR $T3[rsp+4], xmm6
	call	?PathRect@ImDrawList@@QEAAXAEBUImVec2@@0MH@Z ; ImDrawList::PathRect
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+40], xmm0
	mov	DWORD PTR [rsp+32], 1
	mov	r9d, -1096769336			; bea0a0c8H
	mov	r8d, DWORD PTR [rdi+120]
	mov	rdx, QWORD PTR [rdi+128]
	mov	rcx, rdi
	call	?AddPolyline@ImDrawList@@QEAAXPEBUImVec2@@HIHM@Z ; ImDrawList::AddPolyline
	mov	DWORD PTR [rdi+120], r15d

; 2424 :     const char*         c_str() const           { return Buf.Data ? Buf.Data : EmptyString; }

	test	rsi, rsi
	cmovne	rbx, rsi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 78   :         DrawList->AddText(ImVec2(WidgetPosition.x + Padding.x, WidgetPosition.y + Padding.y), IM_COL32(255, 255, 255, 255), Builder.c_str());

	addss	xmm8, xmm11
	addss	xmm9, xmm11
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR $T6[rsp], xmm9
	movss	DWORD PTR $T6[rsp+4], xmm8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_draw.cpp

; 1582 :         text_end = text_begin + strlen(text_begin);

	mov	rcx, -1
	npad	6
$LL150@DrawNodeHe:
	inc	rcx
	cmp	BYTE PTR [rbx+rcx], 0
	jne	SHORT $LL150@DrawNodeHe
	add	rcx, rbx

; 1583 :     if (text_begin == text_end)

	cmp	rbx, rcx
	je	SHORT $LN103@DrawNodeHe

; 1584 :         return;
; 1585 : 
; 1586 :     // Pull default font/size from the shared ImDrawListSharedData instance
; 1587 :     if (font == NULL)
; 1588 :         font = _Data->Font;

	mov	rax, QWORD PTR [rdi+56]

; 1589 :     if (font_size == 0.0f)
; 1590 :         font_size = _Data->FontSize;
; 1591 : 
; 1592 :     IM_ASSERT(font->ContainerAtlas->TexID == _CmdHeader.TextureId);  // Use high-level ImGui::PushFont() or low-level ImDrawList::PushTextureId() to change font.
; 1593 : 
; 1594 :     ImVec4 clip_rect = _CmdHeader.ClipRect;

	movups	xmm0, XMMWORD PTR [rdi+136]
	movups	XMMWORD PTR clip_rect$9[rsp], xmm0

; 1595 :     if (cpu_fine_clip_rect)
; 1596 :     {
; 1597 :         clip_rect.x = ImMax(clip_rect.x, cpu_fine_clip_rect->x);
; 1598 :         clip_rect.y = ImMax(clip_rect.y, cpu_fine_clip_rect->y);
; 1599 :         clip_rect.z = ImMin(clip_rect.z, cpu_fine_clip_rect->z);
; 1600 :         clip_rect.w = ImMin(clip_rect.w, cpu_fine_clip_rect->w);
; 1601 :     }
; 1602 :     font->RenderText(this, font_size, pos, col, clip_rect, text_begin, text_end, wrap_width, cpu_fine_clip_rect != NULL);

	mov	BYTE PTR [rsp+72], 0
	movss	DWORD PTR [rsp+64], xmm13
	mov	QWORD PTR [rsp+56], rcx
	mov	QWORD PTR [rsp+48], rbx
	lea	rcx, QWORD PTR clip_rect$9[rsp]
	mov	QWORD PTR [rsp+40], rcx
	mov	DWORD PTR [rsp+32], -1			; ffffffffH
	lea	r9, QWORD PTR $T6[rsp]
	movss	xmm2, DWORD PTR [rax+16]
	mov	rdx, rdi
	mov	rcx, QWORD PTR [rax+8]
	call	?RenderText@ImFont@@QEBAXPEAUImDrawList@@MAEBUImVec2@@IAEBUImVec4@@PEBD3M_N@Z ; ImFont::RenderText
	npad	1
$LN103@DrawNodeHe:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1906 :     inline ~ImVector()                                      { if (Data) IM_FREE(Data); } // Important: does not destruct anything

	test	rsi, rsi
	je	SHORT $LN138@DrawNodeHe
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 4312 :         if (ImGuiContext* ctx = GImGui)

	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	test	rax, rax
	je	SHORT $LN136@DrawNodeHe

; 4313 :             ctx->IO.MetricsActiveAllocations--;

	dec	DWORD PTR [rax+244]
$LN136@DrawNodeHe:

; 1159 : static void    FreeWrapper(void* ptr, void* user_data)        { IM_UNUSED(user_data); free(ptr); }

	mov	rcx, rsi
	call	QWORD PTR __imp_free
	npad	1
$LN138@DrawNodeHe:
$LN132@DrawNodeHe:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 80   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+288]
	mov	rbx, QWORD PTR [r11+56]
	mov	rsi, QWORD PTR [r11+64]
	mov	rdi, QWORD PTR [r11+72]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	movaps	xmm11, XMMWORD PTR [r11-96]
	movaps	xmm12, XMMWORD PTR [r11-112]
	movaps	xmm13, XMMWORD PTR [r11-128]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
?DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ ENDP		; UIAINBNodeBase::DrawNodeHeader
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 80
$T4 = 80
text_size$5 = 80
$T6 = 80
$T7 = 80
$T8 = 80
clip_rect$9 = 88
$T10 = 88
WidgetPosition$11 = 88
uv$12 = 88
$T13 = 104
Builder$14 = 112
HeaderColor$15 = 128
__$ArrayPad$ = 144
this$ = 336
?dtor$0@?0??DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ@4HA PROC ; `UIAINBNodeBase::DrawNodeHeader'::`1'::dtor$0
	lea	rcx, QWORD PTR Builder$14[rdx]
	jmp	??1ImGuiTextBuffer@@QEAA@XZ
?dtor$0@?0??DrawNodeHeader@UIAINBNodeBase@@QEAAXXZ@4HA ENDP ; `UIAINBNodeBase::DrawNodeHeader'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z
_TEXT	SEGMENT
Pos$ = 48
$T2 = 56
this$ = 112
HeaderSeparatorRight$3 = 128
HeaderSeparatorLeft$4 = 136
?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z PROC ; UIAINBNodeBase::DrawImmediateSeperator, COMDAT

; 83   : {

$LN40:
	push	rbx
	sub	rsp, 96					; 00000060H
	mov	QWORD PTR Pos$[rsp], rdx
	mov	rbx, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5586 :     return (g.LastItemData.StatusFlags & ImGuiItemStatusFlags_Visible) != 0;

	mov	rdx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	eax, DWORD PTR [rdx+18624]
	shr	eax, 9
	test	al, 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 84   :     if (ImGui::IsItemVisible()) {

	je	$LN2@DrawImmedi

; 85   :         float BorderWidth = ed::GetStyle().NodeBorderWidth;

	mov	rax, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA

; 89   :         ImGui::Text("Node settings");

	lea	rcx, OFFSET FLAT:??_C@_0O@BHIPMNED@Node?5settings@
	movaps	XMMWORD PTR [rsp+80], xmm7
	movss	xmm7, DWORD PTR [rax+148]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rax, QWORD PTR [rdx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rdx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2539 : static inline ImVec2  operator-(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x - rhs.x, lhs.y - rhs.y); }

	movss	xmm1, DWORD PTR [rax+80]
	movss	xmm0, DWORD PTR [rax+84]
	subss	xmm1, DWORD PTR [rax+184]
	subss	xmm0, DWORD PTR [rax+188]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10279:     window->DC.IsSetPos = true;

	mov	BYTE PTR [rax+377], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	addss	xmm1, DWORD PTR Pos$[rsp]
	addss	xmm0, DWORD PTR Pos$[rsp+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10277:     window->DC.CursorPos = window->Pos - window->Scroll + local_pos;

	movss	DWORD PTR [rax+312], xmm1
	movss	DWORD PTR [rax+316], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 89   :         ImGui::Text("Node settings");

	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text

; 91   :         ImVec2 HeaderSeparatorLeft = ImVec2(mNodeShapeInfo.HeaderMin.x - BorderWidth / 2, ImGui::GetCursorPosY() - 2.5f);

	movss	xmm0, DWORD PTR [rbx+24]
	movaps	xmm1, xmm7
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10270:     ImGuiWindow* window = GetCurrentWindowRead();

	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 91   :         ImVec2 HeaderSeparatorLeft = ImVec2(mNodeShapeInfo.HeaderMin.x - BorderWidth / 2, ImGui::GetCursorPosY() - 2.5f);

	mulss	xmm1, DWORD PTR __real@3f000000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10270:     ImGuiWindow* window = GetCurrentWindowRead();

	mov	rcx, QWORD PTR [rax+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 91   :         ImVec2 HeaderSeparatorLeft = ImVec2(mNodeShapeInfo.HeaderMin.x - BorderWidth / 2, ImGui::GetCursorPosY() - 2.5f);

	subss	xmm0, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10271:     return window->DC.CursorPos.y - window->Pos.y + window->Scroll.y;

	movss	xmm2, DWORD PTR [rcx+316]
	subss	xmm2, DWORD PTR [rcx+84]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR HeaderSeparatorLeft$4[rsp], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10271:     return window->DC.CursorPos.y - window->Pos.y + window->Scroll.y;

	addss	xmm2, DWORD PTR [rcx+188]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 94   :         ed::GetNodeBackgroundDrawList(mEditorId)->AddLine(HeaderSeparatorLeft, HeaderSeparatorRight, ImColor(255, 255, 255, (int)(ImGui::GetStyle().Alpha * 255 / 2)), BorderWidth);

	mov	ecx, DWORD PTR [rbx+16]
	movaps	xmm0, xmm2
	subss	xmm0, DWORD PTR __real@40200000
	subss	xmm2, DWORD PTR __real@3fc00000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR HeaderSeparatorLeft$4[rsp+4], xmm0
	movss	xmm0, DWORD PTR [rbx+32]
	movss	DWORD PTR HeaderSeparatorRight$3[rsp], xmm0
	movss	DWORD PTR HeaderSeparatorRight$3[rsp+4], xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 94   :         ed::GetNodeBackgroundDrawList(mEditorId)->AddLine(HeaderSeparatorLeft, HeaderSeparatorRight, ImColor(255, 255, 255, (int)(ImGui::GetStyle().Alpha * 255 / 2)), BorderWidth);

	call	?GetNodeBackgroundDrawList@NodeEditor@ax@@YAPEAUImDrawList@@UNodeId@12@@Z ; ax::NodeEditor::GetNodeBackgroundDrawList
	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	r10, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR $T2[rsp], 1065353216		; 3f800000H
	mov	DWORD PTR $T2[rsp+4], 1065353216	; 3f800000H
	mov	DWORD PTR $T2[rsp+8], 1065353216	; 3f800000H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 94   :         ed::GetNodeBackgroundDrawList(mEditorId)->AddLine(HeaderSeparatorLeft, HeaderSeparatorRight, ImColor(255, 255, 255, (int)(ImGui::GetStyle().Alpha * 255 / 2)), BorderWidth);

	movss	xmm0, DWORD PTR [rcx+14552]
	mulss	xmm0, DWORD PTR __real@437f0000
	mulss	xmm0, DWORD PTR __real@3f000000
	cvttss2si ecx, xmm0
	movd	xmm0, ecx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	lea	rcx, QWORD PTR $T2[rsp]

; 2588 :     constexpr ImColor(int r, int g, int b, int a = 255)             : Value((float)r * (1.0f / 255.0f), (float)g * (1.0f / 255.0f), (float)b * (1.0f / 255.0f), (float)a* (1.0f / 255.0f)) {}

	cvtdq2ps xmm0, xmm0
	mulss	xmm0, DWORD PTR __real@3b808081

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	movss	DWORD PTR $T2[rsp+12], xmm0

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	call	?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
	mov	r9d, eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 94   :         ed::GetNodeBackgroundDrawList(mEditorId)->AddLine(HeaderSeparatorLeft, HeaderSeparatorRight, ImColor(255, 255, 255, (int)(ImGui::GetStyle().Alpha * 255 / 2)), BorderWidth);

	movss	DWORD PTR [rsp+32], xmm7
	lea	rdx, QWORD PTR HeaderSeparatorLeft$4[rsp]
	mov	rcx, r10
	lea	r8, QWORD PTR HeaderSeparatorRight$3[rsp]
	call	?AddLine@ImDrawList@@QEAAXAEBUImVec2@@0IM@Z ; ImDrawList::AddLine
	movaps	xmm7, XMMWORD PTR [rsp+80]
$LN2@DrawImmedi:

; 95   :     }
; 96   : }

	add	rsp, 96					; 00000060H
	pop	rbx
	ret	0
?DrawImmediateSeperator@UIAINBNodeBase@@QEAAXUImVec2@@@Z ENDP ; UIAINBNodeBase::DrawImmediateSeperator
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\ImGuiNodeEditorExt.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ?DrawPinIcon@UIAINBNodeBase@@QEAAX_NIW4PinType@1@@Z
_TEXT	SEGMENT
$T2 = 64
$T3 = 64
$T4 = 80
$T5 = 80
$T6 = 96
cursorPos$7 = 112
$T8 = 120
Color$ = 120
__$ArrayPad$ = 136
this$dead$ = 160
Connected$ = 168
Alpha$ = 176
Type$ = 184
?DrawPinIcon@UIAINBNodeBase@@QEAAX_NIW4PinType@1@@Z PROC ; UIAINBNodeBase::DrawPinIcon, COMDAT

; 99   : {

$LN74:
	push	rbx
	sub	rsp, 144				; 00000090H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r11d, r8d
	movzx	ebx, dl

; 256  :     return GetValueTypeColor((int)Type);

	movzx	r8d, r9b
	lea	rdx, QWORD PTR Color$[rsp]
	call	?GetValueTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@E@Z ; UIAINBNodeBase::GetValueTypeColor
	xorps	xmm2, xmm2

; 100  :     ax::Drawing::IconType PinIconType;
; 101  :     ImColor Color = GetPinTypeColor(Type);
; 102  :     Color.Value.w = Alpha / 255.0f;

	cvtsi2ss xmm2, r11
	divss	xmm2, DWORD PTR __real@437f0000

; 103  :     switch (Type) {

	cmp	r9d, 6
	ja	$LN11@DrawPinIco
	lea	rdx, OFFSET FLAT:__ImageBase
	movsxd	rax, r9d
	mov	ecx, DWORD PTR $LN67@DrawPinIco[rdx+rax*4]
	add	rcx, rdx
	jmp	rcx
$LN4@DrawPinIco:

; 104  :     case PinType::Flow:
; 105  :         PinIconType = ax::Drawing::IconType::Flow;

	xor	r9d, r9d

; 106  :         break;

	jmp	SHORT $LN2@DrawPinIco
$LN5@DrawPinIco:

; 107  :     case PinType::Bool:
; 108  :     case PinType::Int:
; 109  :     case PinType::Float:
; 110  :     case PinType::String:
; 111  :     case PinType::Vec3f:
; 112  :     case PinType::UserDefined:
; 113  :         PinIconType = ax::Drawing::IconType::Circle;

	mov	r9d, 1
$LN2@DrawPinIco:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2591 :     inline operator ImVec4() const                                  { return Value; }

	movss	xmm1, DWORD PTR Color$[rsp+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 8440 :     ImGuiWindow* window = GImGui->CurrentWindow;

	mov	r10, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	xmm3, DWORD PTR __real@41c00000
	movd	xmm0, r11d

; 2588 :     constexpr ImColor(int r, int g, int b, int a = 255)             : Value((float)r * (1.0f / 255.0f), (float)g * (1.0f / 255.0f), (float)b * (1.0f / 255.0f), (float)a* (1.0f / 255.0f)) {}

	cvtdq2ps xmm0, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 8440 :     ImGuiWindow* window = GImGui->CurrentWindow;

	mov	rax, QWORD PTR [r10+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR $T3[rsp], 1040220289		; 3e008081H
	mov	DWORD PTR $T3[rsp+4], 1040220289	; 3e008081H
	mov	DWORD PTR $T3[rsp+8], 1040220289	; 3e008081H

; 2591 :     inline operator ImVec4() const                                  { return Value; }

	movss	DWORD PTR $T5[rsp+12], xmm2

; 2588 :     constexpr ImColor(int r, int g, int b, int a = 255)             : Value((float)r * (1.0f / 255.0f), (float)g * (1.0f / 255.0f), (float)b * (1.0f / 255.0f), (float)a* (1.0f / 255.0f)) {}

	mulss	xmm0, DWORD PTR __real@3b808081

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	DWORD PTR $T8[rsp+4], 1103101952	; 41c00000H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 523  :     constexpr ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                {}

	movss	xmm2, DWORD PTR [rax+316]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2591 :     inline operator ImVec4() const                                  { return Value; }

	movss	DWORD PTR $T5[rsp+4], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 523  :     constexpr ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                {}

	movss	xmm1, DWORD PTR [rax+312]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	movss	DWORD PTR $T3[rsp+12], xmm0

; 2591 :     inline operator ImVec4() const                                  { return Value; }

	movss	xmm0, DWORD PTR Color$[rsp]
	movss	DWORD PTR $T5[rsp], xmm0
	movss	xmm0, DWORD PTR Color$[rsp+8]
	movss	DWORD PTR $T5[rsp+8], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 538  :     bool        Overlaps(const ImRect& r) const     { return r.Min.y <  Max.y && r.Max.y >  Min.y && r.Min.x <  Max.x && r.Max.x >  Min.x; }

	movss	xmm0, DWORD PTR [rax+636]
	comiss	xmm0, xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	DWORD PTR $T8[rsp], 1103101952		; 41c00000H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 538  :     bool        Overlaps(const ImRect& r) const     { return r.Min.y <  Max.y && r.Max.y >  Min.y && r.Min.x <  Max.x && r.Max.x >  Min.x; }

	jbe	$LN26@DrawPinIco
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	movaps	xmm0, xmm2
	addss	xmm0, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 538  :     bool        Overlaps(const ImRect& r) const     { return r.Min.y <  Max.y && r.Max.y >  Min.y && r.Min.x <  Max.x && r.Max.x >  Min.x; }

	comiss	xmm0, DWORD PTR [rax+628]
	jbe	$LN26@DrawPinIco
	movss	xmm0, DWORD PTR [rax+632]
	comiss	xmm0, xmm1
	jbe	$LN26@DrawPinIco
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2538 : static inline ImVec2  operator+(const ImVec2& lhs, const ImVec2& rhs)   { return ImVec2(lhs.x + rhs.x, lhs.y + rhs.y); }

	movaps	xmm0, xmm1
	addss	xmm0, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 538  :     bool        Overlaps(const ImRect& r) const     { return r.Min.y <  Max.y && r.Max.y >  Min.y && r.Min.x <  Max.x && r.Max.x >  Min.x; }

	comiss	xmm0, DWORD PTR [rax+624]
	jbe	$LN26@DrawPinIco
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10240:     return window->DC.CursorPos;

	movaps	xmm0, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	lea	rcx, QWORD PTR $T6[rsp]

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	movups	xmm1, XMMWORD PTR $T5[rsp]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10240:     return window->DC.CursorPos;

	unpcklps xmm0, xmm2
	movsd	QWORD PTR cursorPos$7[rsp], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	movups	xmm0, XMMWORD PTR $T3[rsp]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	BYTE PTR [rax+237], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	movups	XMMWORD PTR $T4[rsp], xmm1

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	xmm1, DWORD PTR cursorPos$7[rsp+4]

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	movups	XMMWORD PTR $T6[rsp], xmm0
	movss	xmm0, DWORD PTR cursorPos$7[rsp]

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	addss	xmm1, xmm3

; 2587 :     constexpr ImColor(const ImVec4& col)                            : Value(col) {}

	addss	xmm0, xmm3

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR $T2[rsp+4], xmm1
	movss	DWORD PTR $T2[rsp], xmm0

; 2590 :     inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }

	call	?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
	lea	rcx, QWORD PTR $T4[rsp]
	mov	r8d, eax
	call	?ColorConvertFloat4ToU32@ImGui@@YAIAEBUImVec4@@@Z ; ImGui::ColorConvertFloat4ToU32
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\ImGuiNodeEditorExt.cpp

; 239  :         ax::Drawing::DrawIcon(drawList, cursorPos, cursorPos + size, type, filled, ImColor(color), ImColor(innerColor));

	mov	rcx, QWORD PTR [r10+16408]
	lea	rdx, QWORD PTR cursorPos$7[rsp]
	mov	DWORD PTR [rsp+48], r8d
	lea	r8, QWORD PTR $T2[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	BYTE PTR [rsp+32], bl
	mov	rcx, QWORD PTR [rcx+728]
	call	?DrawIcon@Drawing@ax@@YAXPEAUImDrawList@@AEBUImVec2@@1W4IconType@12@_NII@Z ; ax::Drawing::DrawIcon
$LN26@DrawPinIco:

; 240  :     }
; 241  : 
; 242  :     ImGui::Dummy(size);

	lea	rcx, QWORD PTR $T8[rsp]
	call	?Dummy@ImGui@@YAXAEBUImVec2@@@Z		; ImGui::Dummy
$LN11@DrawPinIco:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 120  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 144				; 00000090H
	pop	rbx
	ret	0
$LN67@DrawPinIco:
	DD	$LN5@DrawPinIco
	DD	$LN5@DrawPinIco
	DD	$LN5@DrawPinIco
	DD	$LN5@DrawPinIco
	DD	$LN5@DrawPinIco
	DD	$LN5@DrawPinIco
	DD	$LN4@DrawPinIco
?DrawPinIcon@UIAINBNodeBase@@QEAAX_NIW4PinType@1@@Z ENDP ; UIAINBNodeBase::DrawPinIcon
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
Name$GSCopy$ = 32
InputsRect$ = 40
__$ArrayPad$ = 56
this$dead$ = 256
__$ReturnUdt$ = 264
Id$ = 272
Connected$ = 280
Alpha$ = 288
Type$ = 296
Kind$ = 304
Name$ = 312
?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; UIAINBNodeBase::DrawPin, COMDAT

; 123  : {

$LN105:
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 224				; 000000e0H
	movaps	XMMWORD PTR [rax-40], xmm6
	movaps	XMMWORD PTR [rax-56], xmm7
	movaps	XMMWORD PTR [rax-72], xmm8
	movaps	XMMWORD PTR [rax-88], xmm9
	movaps	XMMWORD PTR [rax-104], xmm10
	movaps	XMMWORD PTR [rax-120], xmm11
	movaps	XMMWORD PTR [rsp+112], xmm12
	movaps	XMMWORD PTR [rsp+96], xmm13
	movaps	XMMWORD PTR [rsp+80], xmm14
	movaps	XMMWORD PTR [rsp+64], xmm15
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	movzx	ebp, r9b
	mov	r14d, r8d
	mov	rdi, rdx

; 122  : ImRect UIAINBNodeBase::DrawPin(uint32_t Id, bool Connected, uint32_t Alpha, PinType Type, ed::PinKind Kind, std::string Name)

	mov	rbx, QWORD PTR Name$[rsp]
	mov	QWORD PTR Name$GSCopy$[rsp], rbx
	xorps	xmm14, xmm14
	xorps	xmm15, xmm15
	xorps	xmm0, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movups	XMMWORD PTR InputsRect$[rsp], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 127  :     if (Kind == ed::PinKind::Input) {

	mov	esi, DWORD PTR Kind$[rsp]
	test	esi, esi
	jne	$LN2@DrawPin

; 128  :         DrawPinIcon(Connected, Alpha, Type);

	mov	r9d, DWORD PTR Type$[rsp]
	mov	r8d, DWORD PTR Alpha$[rsp]
	movzx	edx, bpl
	call	?DrawPinIcon@UIAINBNodeBase@@QEAAX_NIW4PinType@1@@Z ; UIAINBNodeBase::DrawPinIcon
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5637 :     return g.LastItemData.Rect.Min;

	mov	r8, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	movss	xmm14, DWORD PTR [r8+18628]
	movss	xmm15, DWORD PTR [r8+18632]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 130  :         ImGui::SameLine();

	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10270:     ImGuiWindow* window = GetCurrentWindowRead();

	mov	rdx, QWORD PTR [r8+16408]

; 10271:     return window->DC.CursorPos.y - window->Pos.y + window->Scroll.y;

	movss	xmm4, DWORD PTR [rdx+316]
	subss	xmm4, DWORD PTR [rdx+84]
	addss	xmm4, DWORD PTR [rdx+188]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 131  :         ImGui::SetCursorPosY(ImGui::GetCursorPosY() + 5.0f);

	addss	xmm4, DWORD PTR __real@40a00000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	BYTE PTR [rdx+237], 1
	mov	rax, QWORD PTR [r8+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10293:     window->DC.CursorPos.y = window->Pos.y - window->Scroll.y + y;

	movss	xmm0, DWORD PTR [rax+84]
	subss	xmm0, DWORD PTR [rax+188]
	addss	xmm0, xmm4
	movss	DWORD PTR [rax+316], xmm0

; 10294:     //window->DC.CursorMaxPos.y = ImMax(window->DC.CursorMaxPos.y, window->DC.CursorPos.y);
; 10295:     window->DC.IsSetPos = true;

	mov	BYTE PTR [rax+377], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN66@DrawPin

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx]
$LN66@DrawPin:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 256  :     TextEx(text, text_end, ImGuiTextFlags_NoWidthForLargeClippedText);

	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+1]
	call	?TextEx@ImGui@@YAXPEBD0H@Z		; ImGui::TextEx
	xorps	xmm11, xmm11
	xorps	xmm12, xmm12
	xorps	xmm10, xmm10
	xorps	xmm13, xmm13
$LN101@DrawPin:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5637 :     return g.LastItemData.Rect.Min;

	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	movss	xmm6, DWORD PTR InputsRect$[rsp]
	movss	xmm9, DWORD PTR InputsRect$[rsp+4]
	movss	xmm7, DWORD PTR InputsRect$[rsp+8]
	movss	xmm8, DWORD PTR InputsRect$[rsp+12]
$LN4@DrawPin:
	movups	xmm0, XMMWORD PTR [rax+18628]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 523  :     constexpr ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                {}

	movups	XMMWORD PTR [rdi], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 144  :     if (Kind == ed::PinKind::Input) {

	test	esi, esi
	jne	$LN5@DrawPin

; 145  :         InputsRect = HeaderPos;

	movups	xmm6, xmm0
	movups	XMMWORD PTR InputsRect$[rsp], xmm0

; 146  : 
; 147  :         InputsRect.Min.x -= ImGui::GetStyle().ItemSpacing.x + 24;

	movss	xmm0, DWORD PTR [rax+14628]
	addss	xmm0, DWORD PTR __real@41c00000
	subss	xmm6, xmm0

; 148  :         InputsRect.Min.y -= 6;

	movss	xmm9, DWORD PTR InputsRect$[rsp+4]
	addss	xmm9, DWORD PTR __real@c0c00000

; 149  : 
; 150  :         InputsRect.Max.x += 2;

	movss	xmm7, DWORD PTR InputsRect$[rsp+8]
	addss	xmm7, DWORD PTR __real@40000000

; 151  :         InputsRect.Max.y += 6;

	movss	xmm8, DWORD PTR InputsRect$[rsp+12]
	jmp	$LN102@DrawPin
$LN2@DrawPin:
	xorps	xmm11, xmm11
	xorps	xmm12, xmm12
	xorps	xmm10, xmm10
	xorps	xmm13, xmm13

; 133  :     } else if (Kind == ed::PinKind::Output) {

	cmp	esi, 1
	jne	$LN101@DrawPin
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN75@DrawPin

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx]
$LN75@DrawPin:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 256  :     TextEx(text, text_end, ImGuiTextFlags_NoWidthForLargeClippedText);

	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+1]
	call	?TextEx@ImGui@@YAXPEBD0H@Z		; ImGui::TextEx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5643 :     return g.LastItemData.Rect.Max;

	mov	rdx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	movss	xmm11, DWORD PTR [rdx+18636]
	movss	xmm12, DWORD PTR [rdx+18640]

; 5637 :     return g.LastItemData.Rect.Min;

	movss	xmm10, DWORD PTR [rdx+18628]
	movss	xmm13, DWORD PTR [rdx+18632]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 135  :         InputsRect = ImRect(ImGui::GetItemRectMin(), ImGui::GetItemRectMax());

	movaps	xmm6, xmm10
	movaps	xmm9, xmm13
	movaps	xmm7, xmm11
	movaps	xmm8, xmm12

; 136  :         ImGui::SameLine();

	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10270:     ImGuiWindow* window = GetCurrentWindowRead();

	mov	rax, QWORD PTR [rdx+16408]

; 10271:     return window->DC.CursorPos.y - window->Pos.y + window->Scroll.y;

	movss	xmm4, DWORD PTR [rax+316]
	subss	xmm4, DWORD PTR [rax+84]
	addss	xmm4, DWORD PTR [rax+188]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 137  :         ImGui::SetCursorPosY(ImGui::GetCursorPosY() - 5.0f);

	subss	xmm4, DWORD PTR __real@40a00000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rdx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10293:     window->DC.CursorPos.y = window->Pos.y - window->Scroll.y + y;

	movss	xmm0, DWORD PTR [rax+84]
	subss	xmm0, DWORD PTR [rax+188]
	addss	xmm0, xmm4
	movss	DWORD PTR [rax+316], xmm0

; 10294:     //window->DC.CursorMaxPos.y = ImMax(window->DC.CursorMaxPos.y, window->DC.CursorPos.y);
; 10295:     window->DC.IsSetPos = true;

	mov	BYTE PTR [rax+377], 1

; 10264:     ImGuiWindow* window = GetCurrentWindowRead();

	mov	rax, QWORD PTR [rdx+16408]

; 10265:     return window->DC.CursorPos.x - window->Pos.x + window->Scroll.x;

	movss	xmm1, DWORD PTR [rax+312]
	subss	xmm1, DWORD PTR [rax+80]
	addss	xmm1, DWORD PTR [rax+184]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 138  :         ImGui::SetCursorPosX(ImGui::GetCursorPosX() - 5.0f);

	subss	xmm1, DWORD PTR __real@40a00000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rdx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10285:     window->DC.CursorPos.x = window->Pos.x - window->Scroll.x + x;

	movss	xmm0, DWORD PTR [rax+80]
	subss	xmm0, DWORD PTR [rax+184]
	addss	xmm0, xmm1
	movss	DWORD PTR [rax+312], xmm0

; 10286:     //window->DC.CursorMaxPos.x = ImMax(window->DC.CursorMaxPos.x, window->DC.CursorPos.x);
; 10287:     window->DC.IsSetPos = true;

	mov	BYTE PTR [rax+377], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 139  :         DrawPinIcon(Connected, Alpha, Type);

	mov	r9d, DWORD PTR Type$[rsp]
	mov	r8d, DWORD PTR Alpha$[rsp]
	movzx	edx, bpl
	call	?DrawPinIcon@UIAINBNodeBase@@QEAAX_NIW4PinType@1@@Z ; UIAINBNodeBase::DrawPinIcon
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5637 :     return g.LastItemData.Rect.Min;

	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	movss	xmm14, DWORD PTR [rax+18628]
	movss	xmm15, DWORD PTR [rax+18632]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 133  :     } else if (Kind == ed::PinKind::Output) {

	jmp	$LN4@DrawPin
$LN5@DrawPin:

; 152  :     } else if (Kind == ed::PinKind::Output) {

	cmp	esi, 1
	jne	SHORT $LN7@DrawPin

; 153  :         InputsRect.Max.x += ImGui::GetStyle().ItemSpacing.x + 24;

	movss	xmm7, DWORD PTR [rax+14628]
	addss	xmm7, DWORD PTR __real@41c00000
	addss	xmm7, xmm11
	movaps	xmm8, xmm12

; 154  :         InputsRect.Max.y += 6;

	subss	xmm10, DWORD PTR __real@40000000

; 155  : 
; 156  :         InputsRect.Min.x -= 2;

	movaps	xmm6, xmm10
	movaps	xmm9, xmm13
	subss	xmm9, DWORD PTR __real@40c00000
$LN102@DrawPin:

; 157  :         InputsRect.Min.y -= 6;
; 158  :     }
; 159  : 
; 160  :     IconPos.y += 12;

	addss	xmm8, DWORD PTR __real@40c00000
$LN7@DrawPin:
	addss	xmm15, DWORD PTR __real@41400000

; 161  :     IconPos.x += 8;

	addss	xmm14, DWORD PTR __real@41000000

; 162  : 
; 163  :     ImGui::SameLine();

	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine

; 164  : 
; 165  :     ed::BeginPin(Id, Kind);

	mov	rdx, r14
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 153  :     s_Editor->GetNodeBuilder().BeginPin(id, kind);

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	add	rcx, 1032				; 00000408H
	mov	r8d, esi
	call	?BeginPin@NodeBuilder@Detail@NodeEditor@ax@@QEAAXUPinId@34@W4PinKind@34@@Z ; ax::NodeEditor::Detail::NodeBuilder::BeginPin

; 163  :     s_Editor->GetNodeBuilder().PinPivotRect(a, b);

	mov	rcx, QWORD PTR ?s_Editor@@3PEAUEditorContext@Detail@NodeEditor@ax@@EA
	add	rcx, 1032				; 00000408H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5428 :     m_CurrentPin->m_Pivot = ImRect(a, b);

	mov	rax, QWORD PTR [rcx+16]
	movss	DWORD PTR [rax+64], xmm14
	movss	DWORD PTR [rax+68], xmm15
	movss	DWORD PTR [rax+72], xmm14
	movss	DWORD PTR [rax+76], xmm15

; 5429 :     m_ResolvePivot      = false;

	mov	BYTE PTR [rcx+81], 0

; 5419 :     m_CurrentPin->m_Bounds = ImRect(a, b);

	mov	rax, QWORD PTR [rcx+16]
	shufps	xmm6, xmm6, 225				; 000000e1H
	movss	xmm6, xmm9
	shufps	xmm6, xmm6, 198				; 000000c6H
	movss	xmm6, xmm7
	shufps	xmm6, xmm6, 39				; 00000027H
	movss	xmm6, xmm8
	shufps	xmm6, xmm6, 57				; 00000039H
	movups	XMMWORD PTR [rax+48], xmm6

; 5420 :     m_CurrentPin->m_Bounds.Floor();

	mov	r8, QWORD PTR [rcx+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 548  :     void        Floor()                             { Min.x = IM_FLOOR(Min.x); Min.y = IM_FLOOR(Min.y); Max.x = IM_FLOOR(Max.x); Max.y = IM_FLOOR(Max.y); }

	cvttss2si eax, DWORD PTR [r8+48]
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [r8+48], xmm0
	cvttss2si eax, DWORD PTR [r8+52]
	movd	xmm0, eax
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [r8+52], xmm0
	cvttss2si edx, DWORD PTR [r8+56]
	movd	xmm0, edx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [r8+56], xmm0
	cvttss2si edx, DWORD PTR [r8+60]
	movd	xmm0, edx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [r8+60], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor.cpp

; 5421 :     m_ResolvePinRect     = false;

	mov	BYTE PTR [rcx+80], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\imgui_node_editor_api.cpp

; 183  :     s_Editor->GetNodeBuilder().EndPin();

	call	?EndPin@NodeBuilder@Detail@NodeEditor@ax@@QEAAXXZ ; ax::NodeEditor::Detail::NodeBuilder::EndPin
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 170  :     return HeaderPos;

	mov	rax, rdi

; 171  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+224]
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+48]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	movaps	xmm11, XMMWORD PTR [r11-96]
	movaps	xmm12, XMMWORD PTR [r11-112]
	movaps	xmm13, XMMWORD PTR [r11-128]
	movaps	xmm14, XMMWORD PTR [rsp+80]
	movaps	xmm15, XMMWORD PTR [rsp+64]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
?DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; UIAINBNodeBase::DrawPin
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Name$GSCopy$ = 32
InputsRect$ = 40
__$ArrayPad$ = 56
this$dead$ = 256
__$ReturnUdt$ = 264
Id$ = 272
Connected$ = 280
Alpha$ = 288
Type$ = 296
Kind$ = 304
Name$ = 312
?dtor$0@?0??DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `UIAINBNodeBase::DrawPin'::`1'::dtor$0
	mov	rcx, QWORD PTR Name$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??DrawPin@UIAINBNodeBase@@QEAA?AUImRect@@I_NIW4PinType@1@W4PinKind@NodeEditor@ax@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `UIAINBNodeBase::DrawPin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z
_TEXT	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z PROC ; UIAINBNodeBase::DrawParameterValue, COMDAT

; 174  : {

$LN624:
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rsi
	push	rbp
	push	rdi
	push	r14
	lea	rbp, QWORD PTR [rax-87]
	sub	rsp, 224				; 000000e0H
	movaps	XMMWORD PTR [rax-40], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-161], rax
	mov	edi, r9d
	mov	rbx, r8
	mov	r8, rcx
	mov	QWORD PTR Name$GSCopy$[rbp-161], rbx
	mov	rsi, QWORD PTR Dest$[rbp-161]
	xor	r14d, r14d

; 175  :     switch (Type) {

	cmp	edx, 5
	ja	$LN2@DrawParame
	movsxd	rax, edx
	lea	rdx, OFFSET FLAT:__ImageBase
	mov	ecx, DWORD PTR $LN615@DrawParame[rdx+rax*4]
	add	rcx, rdx
	jmp	rcx
$LN4@DrawParame:

; 176  :     case AINBFile::ValueType::Int:
; 177  :         ImGui::PushItemWidth(mMinTextBoxWidth);

	movss	xmm0, DWORD PTR [r8+40]
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth

; 178  :         ImGui::InputScalar(("##" + Name + std::to_string(Id)).c_str(), ImGuiDataType_U32, Dest);

	mov	edx, edi
	lea	rcx, QWORD PTR $T10[rbp-161]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::to_string
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rdx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
	sub	rcx, rdx
	cmp	rcx, 2
	jb	$LN618@DrawParame

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rax, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN40@DrawParame

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rbx]
$LN40@DrawParame:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rdx
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T15[rbp-161]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, rdi
	lea	r8, QWORD PTR $T15[rbp-161]
	lea	rcx, QWORD PTR $T5[rbp-161]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T5[rbp-161]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T5[rbp-137], 16
	cmovae	rcx, QWORD PTR $T5[rbp-161]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 178  :         ImGui::InputScalar(("##" + Name + std::to_string(Id)).c_str(), ImGuiDataType_U32, Dest);

	mov	DWORD PTR [rsp+48], r14d
	mov	QWORD PTR [rsp+40], r14
	mov	QWORD PTR [rsp+32], r14
	xor	r9d, r9d
	mov	r8, rsi
	lea	edx, QWORD PTR [r9+5]
	call	?InputScalar@ImGui@@YA_NPEBDHPEAXPEBX20H@Z ; ImGui::InputScalar
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T5[rbp-137]
	cmp	rdx, 16
	jb	SHORT $LN68@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T5[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN80@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN80@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN80@DrawParame:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN68@DrawParame:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T5[rbp-145], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T5[rbp-161], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T15[rbp-137]
	cmp	rdx, 16
	jb	SHORT $LN97@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T15[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN109@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN109@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN109@DrawParame:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN97@DrawParame:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T10[rbp-137]
	cmp	rdx, 16
	jb	SHORT $LN126@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T10[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN138@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN138@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN138@DrawParame:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 201  : }

	call	??3@YAXPEAX_K@Z				; operator delete
$LN126@DrawParame:
	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T10[rbp-145], xmm0
	mov	BYTE PTR $T10[rbp-161], 0
	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	r8, QWORD PTR [rcx+16408]
	movsxd	rdx, DWORD PTR [r8+512]
	mov	rax, QWORD PTR [r8+520]
	mov	ecx, DWORD PTR [rax+rdx*4-4]
	mov	DWORD PTR [r8+500], ecx
	lea	eax, DWORD PTR [rdx-1]
	mov	DWORD PTR [r8+512], eax
	jmp	$LN2@DrawParame
$LN5@DrawParame:

; 179  :         ImGui::PopItemWidth();
; 180  :         break;
; 181  :     case AINBFile::ValueType::Float:
; 182  :         ImGui::PushItemWidth(mMinTextBoxWidth);

	movss	xmm0, DWORD PTR [r8+40]
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth

; 183  :         ImGui::InputScalar(("##" + Name + std::to_string(Id)).c_str(), ImGuiDataType_Float, Dest);

	mov	edx, edi
	lea	rcx, QWORD PTR $T9[rbp-161]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::to_string
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rdx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
	sub	rcx, rdx
	cmp	rcx, 2
	jb	$LN619@DrawParame

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rax, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN161@DrawParame

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rbx]
$LN161@DrawParame:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rdx
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T14[rbp-161]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, rdi
	lea	r8, QWORD PTR $T14[rbp-161]
	lea	rcx, QWORD PTR $T4[rbp-161]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T4[rbp-161]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T4[rbp-137], 16
	cmovae	rcx, QWORD PTR $T4[rbp-161]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 183  :         ImGui::InputScalar(("##" + Name + std::to_string(Id)).c_str(), ImGuiDataType_Float, Dest);

	mov	DWORD PTR [rsp+48], r14d
	mov	QWORD PTR [rsp+40], r14
	mov	QWORD PTR [rsp+32], r14
	xor	r9d, r9d
	mov	r8, rsi
	lea	edx, QWORD PTR [r9+8]
	call	?InputScalar@ImGui@@YA_NPEBDHPEAXPEBX20H@Z ; ImGui::InputScalar
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T4[rbp-137]
	cmp	rdx, 16
	jb	SHORT $LN188@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T4[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN200@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN200@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN200@DrawParame:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN188@DrawParame:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T4[rbp-145], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T4[rbp-161], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T14[rbp-137]
	cmp	rdx, 16
	jb	SHORT $LN217@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T14[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN229@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN229@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN229@DrawParame:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN217@DrawParame:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T9[rbp-137]
	cmp	rdx, 16
	jb	$LN126@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T9[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	$LN138@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	$LN138@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN6@DrawParame:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 187  :         ImGui::Checkbox(("##" + Name + std::to_string(Id)).c_str(), (bool*)Dest);

	mov	edx, edi
	lea	rcx, QWORD PTR $T8[rbp-161]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::to_string
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rdx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
	sub	rcx, rdx
	cmp	rcx, 2
	jb	$LN620@DrawParame

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rax, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN281@DrawParame

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rbx]
$LN281@DrawParame:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rdx
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T13[rbp-161]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, rdi
	lea	r8, QWORD PTR $T13[rbp-161]
	lea	rcx, QWORD PTR $T3[rbp-161]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T3[rbp-161]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T3[rbp-137], 16
	cmovae	rcx, QWORD PTR $T3[rbp-161]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 187  :         ImGui::Checkbox(("##" + Name + std::to_string(Id)).c_str(), (bool*)Dest);

	mov	rdx, rsi
	call	?Checkbox@ImGui@@YA_NPEBDPEA_N@Z	; ImGui::Checkbox
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T3[rbp-137]
	cmp	rdx, 16
	jb	SHORT $LN308@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T3[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN320@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN320@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN320@DrawParame:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN308@DrawParame:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T3[rbp-145], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T3[rbp-161], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T13[rbp-137]
	cmp	rdx, 16
	jb	SHORT $LN337@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T13[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN349@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN349@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN349@DrawParame:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN337@DrawParame:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T8[rbp-137]
	cmp	rdx, 16
	jb	$LN2@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T8[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN378@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN378@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN378@DrawParame:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 201  : }

	call	??3@YAXPEAX_K@Z				; operator delete
	jmp	$LN2@DrawParame
$LN7@DrawParame:

; 188  :         break;
; 189  :     case AINBFile::ValueType::String:
; 190  :         ImGui::PushItemWidth(mMinTextBoxWidth);

	movss	xmm0, DWORD PTR [r8+40]
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth

; 191  :         ImGui::InputText(("##" + Name + std::to_string(Id)).c_str(), (std::string*)Dest);

	mov	edx, edi
	lea	rcx, QWORD PTR $T7[rbp-161]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::to_string
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rdx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
	sub	rcx, rdx
	cmp	rcx, 2
	jb	$LN621@DrawParame

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rax, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN393@DrawParame

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rbx]
$LN393@DrawParame:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rdx
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T12[rbp-161]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, rdi
	lea	r8, QWORD PTR $T12[rbp-161]
	lea	rcx, QWORD PTR $T2[rbp-161]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T2[rbp-161]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T2[rbp-137], 16
	cmovae	rcx, QWORD PTR $T2[rbp-161]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 191  :         ImGui::InputText(("##" + Name + std::to_string(Id)).c_str(), (std::string*)Dest);

	mov	rdx, rsi
	call	?InputText@ImGui@@YA_NPEBDPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z ; ImGui::InputText
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T2[rbp-137]
	cmp	rdx, 16
	jb	SHORT $LN420@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T2[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN432@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN432@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN432@DrawParame:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN420@DrawParame:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T2[rbp-145], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T2[rbp-161], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T12[rbp-137]
	cmp	rdx, 16
	jb	SHORT $LN449@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T12[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN461@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN461@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN461@DrawParame:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN449@DrawParame:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T7[rbp-137]
	cmp	rdx, 16
	jb	$LN126@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T7[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	$LN138@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	$LN138@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN8@DrawParame:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 195  :         ImGui::InputScalarNWidth(("##" + Name + std::to_string(Id)).c_str(), ImGuiDataType_Float, ((Vector3F*)Dest)->GetRawData(), 3, mMinTextBoxWidth * 3);

	movss	xmm6, DWORD PTR [r8+40]
	mulss	xmm6, DWORD PTR __real@40400000
	mov	edx, edi
	lea	rcx, QWORD PTR $T6[rbp-161]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::to_string
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rdx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
	sub	rcx, rdx
	cmp	rcx, 2
	jb	$LN622@DrawParame

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rax, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN484@DrawParame

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rbx]
$LN484@DrawParame:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rdx
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T11[rbp-161]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, rdi
	lea	r8, QWORD PTR $T11[rbp-161]
	lea	rcx, QWORD PTR $T1[rbp-161]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T1[rbp-161]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T1[rbp-137], 16
	cmovae	rcx, QWORD PTR $T1[rbp-161]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 195  :         ImGui::InputScalarNWidth(("##" + Name + std::to_string(Id)).c_str(), ImGuiDataType_Float, ((Vector3F*)Dest)->GetRawData(), 3, mMinTextBoxWidth * 3);

	movss	DWORD PTR [rsp+32], xmm6
	mov	r8, rsi
	call	?InputScalarNWidth@ImGui@@YA_NPEBDHPEAXHMPEBX20H@Z ; ImGui::InputScalarNWidth
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T1[rbp-137]
	cmp	rdx, 16
	jb	SHORT $LN533@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T1[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN545@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN545@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN545@DrawParame:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN533@DrawParame:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T1[rbp-145], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T1[rbp-161], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T11[rbp-137]
	cmp	rdx, 16
	jb	SHORT $LN562@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T11[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN574@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN574@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN574@DrawParame:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN562@DrawParame:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T6[rbp-137]
	cmp	rdx, 16
	jb	SHORT $LN2@DrawParame

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T6[rbp-161]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	$LN378@DrawParame

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	$LN378@DrawParame
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN9@DrawParame:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 198  :         ImGui::NewLine();

	call	?NewLine@ImGui@@YAXXZ			; ImGui::NewLine
	npad	1
$LN2@DrawParame:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 201  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-161]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+224]
	mov	rbx, QWORD PTR [r11+32]
	mov	rsi, QWORD PTR [r11+40]
	movaps	xmm6, XMMWORD PTR [r11-16]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rbp
	ret	0
$LN622@DrawParame:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4917 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN618@DrawParame:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN619@DrawParame:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN620@DrawParame:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN621@DrawParame:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN616@DrawParame:
	npad	2
$LN615@DrawParame:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 201  : }

	DD	$LN4@DrawParame
	DD	$LN6@DrawParame
	DD	$LN5@DrawParame
	DD	$LN7@DrawParame
	DD	$LN8@DrawParame
	DD	$LN9@DrawParame
?DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z ENDP ; UIAINBNodeBase::DrawParameterValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$0@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$0
	mov	rcx, QWORD PTR Name$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$1@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T10[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$2@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$3@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$4@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$4
	lea	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$5@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$5
	lea	rcx, QWORD PTR $T14[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$6@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$6
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$6@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$7@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$7
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$7@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$8@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$8
	lea	rcx, QWORD PTR $T13[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$8@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$9@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$9
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$9@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$10@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$10
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$10@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$11@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$11
	lea	rcx, QWORD PTR $T12[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$11@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$12@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$12
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$12@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$13@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$13
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$13@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$14@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$14
	lea	rcx, QWORD PTR $T11[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$14@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 80
$T2 = 80
$T3 = 80
$T4 = 80
$T5 = 80
$T6 = 112
$T7 = 112
$T8 = 112
$T9 = 112
$T10 = 112
$T11 = 144
$T12 = 144
$T13 = 144
$T14 = 144
$T15 = 144
Name$GSCopy$ = 184
__$ArrayPad$ = 192
this$ = 256
Type$ = 264
Name$ = 272
Id$ = 280
Dest$ = 288
?dtor$15@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA PROC ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$15
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$15@?0??DrawParameterValue@UIAINBNodeBase@@QEAAXW4ValueType@AINBFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IPEAX@Z@4HA ENDP ; `UIAINBNodeBase::DrawParameterValue'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ?GetValueTypeName@UIAINBNodeBase@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z
_TEXT	SEGMENT
this$dead$ = 64
__$ReturnUdt$ = 72
ValueType$ = 80
?GetValueTypeName@UIAINBNodeBase@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z PROC ; UIAINBNodeBase::GetValueTypeName, COMDAT

; 209  : {

$LN103:
	push	rbx
	sub	rsp, 48					; 00000030H
	xor	r9d, r9d

; 210  :     switch (ValueType) {

	movzx	eax, r8b
	mov	rbx, rdx
	cmp	eax, 5
	ja	SHORT $LN10@GetValueTy
	lea	rdx, OFFSET FLAT:__ImageBase
	mov	ecx, DWORD PTR $LN98@GetValueTy[rdx+rax*4]
	add	rcx, rdx
	jmp	rcx
$LN4@GetValueTy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 3
	lea	rdx, OFFSET FLAT:??_C@_03DBLNGNIM@Int@
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 212  :         return "Int";

	jmp	SHORT $LN100@GetValueTy
$LN5@GetValueTy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 4
	lea	rdx, OFFSET FLAT:??_C@_04PCGIEMCI@Bool@
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 214  :         return "Bool";

	jmp	SHORT $LN100@GetValueTy
$LN6@GetValueTy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 5
	lea	rdx, OFFSET FLAT:??_C@_05KKPNNHNB@Float@
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 216  :         return "Float";

	jmp	SHORT $LN100@GetValueTy
$LN7@GetValueTy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 6
	lea	rdx, OFFSET FLAT:??_C@_06ENNEIMBA@String@
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 218  :         return "String";

	jmp	SHORT $LN100@GetValueTy
$LN8@GetValueTy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 5
	lea	rdx, OFFSET FLAT:??_C@_05PJCBICIO@Vec3f@
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 220  :         return "Vec3f";

	jmp	SHORT $LN100@GetValueTy
$LN9@GetValueTy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 11
	lea	rdx, OFFSET FLAT:??_C@_0M@EALHFGP@UserDefined@
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 222  :         return "UserDefined";

	jmp	SHORT $LN100@GetValueTy
$LN10@GetValueTy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 7
	lea	rdx, OFFSET FLAT:??_C@_07NBCGADJA@Unknown@
$LN100@GetValueTy:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 226  : }

	xorps	xmm0, xmm0
	mov	rcx, rbx
	movups	XMMWORD PTR [rbx], xmm0
	mov	QWORD PTR [rbx+16], r9
	mov	QWORD PTR [rbx+24], r9
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
	npad	2
$LN98@GetValueTy:
	DD	$LN4@GetValueTy
	DD	$LN5@GetValueTy
	DD	$LN6@GetValueTy
	DD	$LN7@GetValueTy
	DD	$LN8@GetValueTy
	DD	$LN9@GetValueTy
?GetValueTypeName@UIAINBNodeBase@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z ENDP ; UIAINBNodeBase::GetValueTypeName
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ?GetParamValueWidth@UIAINBNodeBase@@QEAAME@Z
_TEXT	SEGMENT
this$ = 8
ValueType$ = 16
?GetParamValueWidth@UIAINBNodeBase@@QEAAME@Z PROC	; UIAINBNodeBase::GetParamValueWidth, COMDAT

; 235  :     switch (ValueType) {

	movzx	eax, dl
	cmp	eax, 5
	ja	SHORT $LN2@GetParamVa
	lea	r8, OFFSET FLAT:__ImageBase
	mov	edx, DWORD PTR $LN13@GetParamVa[r8+rax*4]
	add	rdx, r8
	jmp	rdx
$LN4@GetParamVa:

; 236  :     case 0:
; 237  :     case 2:
; 238  :     case 3:
; 239  :         return mMinTextBoxWidth;

	movss	xmm0, DWORD PTR [rcx+40]

; 247  : }

	ret	0
$LN7@GetParamVa:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10420:     ImGuiContext& g = *GImGui;

	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui

; 10421:     return g.FontSize + g.Style.FramePadding.y * 2.0f;

	movss	xmm0, DWORD PTR [rax+14616]
	addss	xmm0, xmm0
	addss	xmm0, DWORD PTR [rax+15696]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 247  : }

	ret	0
$LN8@GetParamVa:

; 240  :     case 1:
; 241  :         return ImGui::GetFrameHeight();
; 242  :     case 4:
; 243  :         return mMinTextBoxWidth * 3;

	movss	xmm0, DWORD PTR [rcx+40]
	mulss	xmm0, DWORD PTR __real@40400000

; 247  : }

	ret	0
$LN9@GetParamVa:
	xorps	xmm0, xmm0
$LN2@GetParamVa:
	ret	0
$LN13@GetParamVa:
	DD	$LN4@GetParamVa
	DD	$LN7@GetParamVa
	DD	$LN4@GetParamVa
	DD	$LN4@GetParamVa
	DD	$LN8@GetParamVa
	DD	$LN9@GetParamVa
?GetParamValueWidth@UIAINBNodeBase@@QEAAME@Z ENDP	; UIAINBNodeBase::GetParamValueWidth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ?GetPinTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@W4PinType@1@@Z
_TEXT	SEGMENT
this$dead$ = 48
__$ReturnUdt$ = 56
Type$ = 64
?GetPinTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@W4PinType@1@@Z PROC ; UIAINBNodeBase::GetPinTypeColor, COMDAT

; 255  : {

$LN4:
	sub	rsp, 40					; 00000028H

; 256  :     return GetValueTypeColor((int)Type);

	call	?GetValueTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@E@Z ; UIAINBNodeBase::GetValueTypeColor
	mov	rax, rdx

; 257  : }

	add	rsp, 40					; 00000028H
	ret	0
?GetPinTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@W4PinType@1@@Z ENDP ; UIAINBNodeBase::GetPinTypeColor
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ?GetValueTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@E@Z
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
ValueType$ = 24
?GetValueTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@E@Z PROC ; UIAINBNodeBase::GetValueTypeColor, COMDAT

; 261  :     switch (ValueType) {

	movzx	eax, r8b
	cmp	eax, 6
	ja	$LN2@GetValueTy
	lea	r8, OFFSET FLAT:__ImageBase
	mov	ecx, DWORD PTR $LN40@GetValueTy[r8+rax*4]
	add	rcx, r8
	jmp	rcx
$LN4@GetValueTy:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx], 1040746633		; 3e088889H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	rax, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx+4], 1062721497		; 3f57d7d9H
	mov	DWORD PTR [rdx+8], 1059629225		; 3f28a8a9H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	DWORD PTR [rdx+12], 1065353216		; 3f800000H
	ret	0
$LN5@GetValueTy:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	rax, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx+4], 1059300260		; 3f23a3a4H
	mov	DWORD PTR [rdx+8], 1063971564		; 3f6aeaecH
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	DWORD PTR [rdx+12], 1065353216		; 3f800000H
	ret	0
$LN6@GetValueTy:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx], 1059234467		; 3f22a2a3H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	rax, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx+4], 1065024252		; 3f7afafcH
	mov	DWORD PTR [rdx+8], 1051240617		; 3ea8a8a9H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	DWORD PTR [rdx+12], 1065353216		; 3f800000H
	ret	0
$LN7@GetValueTy:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	QWORD PTR [rdx], 1064826873		; 3f77f7f9H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	rax, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx+8], 1062129360		; 3f4eced0H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	DWORD PTR [rdx+12], 1065353216		; 3f800000H
	ret	0
$LN8@GetValueTy:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx], 1064826873		; 3f77f7f9H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	rax, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx+4], 1061405637		; 3f43c3c5H
	mov	DWORD PTR [rdx+8], 1040483461		; 3e048485H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	DWORD PTR [rdx+12], 1065353216		; 3f800000H
	ret	0
$LN9@GetValueTy:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx], 1061405637		; 3f43c3c5H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	rax, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx+4], 1056504058		; 3ef8f8faH
	mov	DWORD PTR [rdx+8], 1064563701		; 3f73f3f5H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	DWORD PTR [rdx+12], 1065353216		; 3f800000H
	ret	0
$LN10@GetValueTy:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx], 1065353216		; 3f800000H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	rax, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 283  :     constexpr ImVec4(float _x, float _y, float _z, float _w)  : x(_x), y(_y), z(_z), w(_w) { }

	mov	DWORD PTR [rdx+4], 1065353216		; 3f800000H
	mov	DWORD PTR [rdx+8], 1065353216		; 3f800000H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp

; 277  : }

	mov	DWORD PTR [rdx+12], 1065353216		; 3f800000H
$LN2@GetValueTy:
	ret	0
$LN40@GetValueTy:
	DD	$LN4@GetValueTy
	DD	$LN5@GetValueTy
	DD	$LN6@GetValueTy
	DD	$LN7@GetValueTy
	DD	$LN8@GetValueTy
	DD	$LN9@GetValueTy
	DD	$LN10@GetValueTy
?GetValueTypeColor@UIAINBNodeBase@@QEAA?AUImColor@@E@Z ENDP ; UIAINBNodeBase::GetValueTypeColor
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ?ValueTypeToPinType@UIAINBNodeBase@@QEAA?AW4PinType@1@E@Z
_TEXT	SEGMENT
this$dead$ = 8
Type$ = 16
?ValueTypeToPinType@UIAINBNodeBase@@QEAA?AW4PinType@1@E@Z PROC ; UIAINBNodeBase::ValueTypeToPinType, COMDAT

; 286  :     switch (Type) {

	movzx	eax, dl
	cmp	eax, 6
	ja	SHORT $LN11@ValueTypeT
	lea	rdx, OFFSET FLAT:__ImageBase
	mov	ecx, DWORD PTR $LN13@ValueTypeT[rdx+rax*4]
	add	rcx, rdx
	jmp	rcx
$LN5@ValueTypeT:

; 287  :     case 0:
; 288  :         return PinType::Int;
; 289  :     case 1:
; 290  :         return PinType::Bool;

	mov	eax, 1

; 303  :     }
; 304  : }

	ret	0
$LN6@ValueTypeT:

; 291  :     case 2:
; 292  :         return PinType::Float;

	mov	eax, 2

; 303  :     }
; 304  : }

	ret	0
$LN7@ValueTypeT:

; 293  :     case 3:
; 294  :         return PinType::String;

	mov	eax, 3

; 303  :     }
; 304  : }

	ret	0
$LN8@ValueTypeT:

; 295  :     case 4:
; 296  :         return PinType::Vec3f;

	mov	eax, 4

; 303  :     }
; 304  : }

	ret	0
$LN9@ValueTypeT:

; 297  :     case 5:
; 298  :         return PinType::UserDefined;

	mov	eax, 5

; 303  :     }
; 304  : }

	ret	0
$LN10@ValueTypeT:

; 299  :     case 6:
; 300  :         return PinType::Flow; //Should never be the case

	mov	eax, 6

; 303  :     }
; 304  : }

	ret	0
$LN11@ValueTypeT:

; 301  :     default:
; 302  :         return PinType::Int;

	xor	eax, eax

; 303  :     }
; 304  : }

	ret	0
	npad	2
$LN13@ValueTypeT:
	DD	$LN11@ValueTypeT
	DD	$LN5@ValueTypeT
	DD	$LN6@ValueTypeT
	DD	$LN7@ValueTypeT
	DD	$LN8@ValueTypeT
	DD	$LN9@ValueTypeT
	DD	$LN10@ValueTypeT
?ValueTypeToPinType@UIAINBNodeBase@@QEAA?AW4PinType@1@E@Z ENDP ; UIAINBNodeBase::ValueTypeToPinType
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIAINBNodeBase.cpp
;	COMDAT ?GetNodeType@UIAINBNodeBase@@UEAA?AW4NodeType@1@XZ
_TEXT	SEGMENT
this$ = 8
?GetNodeType@UIAINBNodeBase@@UEAA?AW4NodeType@1@XZ PROC	; UIAINBNodeBase::GetNodeType, COMDAT

; 319  :     return NodeType::Default;

	xor	eax, eax

; 320  : }

	ret	0
?GetNodeType@UIAINBNodeBase@@UEAA?AW4NodeType@1@XZ ENDP	; UIAINBNodeBase::GetNodeType
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map
;	COMDAT ??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ PROC ; std::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >, COMDAT

; 107  :     unordered_map() : _Mybase(_Key_compare(), allocator_type()) {}

$LN70:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 50   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	xor	edi, edi
	mov	DWORD PTR [rcx], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	mov	QWORD PTR [rcx+8], rdi
	mov	QWORD PTR [rcx+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rdi+40]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	lea	rcx, QWORD PTR [rbx+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx], rdi
	mov	QWORD PTR [rcx+8], rdi
	mov	QWORD PTR [rcx+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	mov	QWORD PTR [rbx+48], 7
	mov	QWORD PTR [rbx+56], 8

; 377  :         // construct empty hash table
; 378  :         _Max_bucket_size() = _Bucket_size;

	mov	DWORD PTR [rbx], 1065353216		; 3f800000H

; 379  :         _Vec._Assign_grow(_Min_buckets * 2, _List._Unchecked_end());

	mov	r8, QWORD PTR [rbx+8]
	lea	edx, QWORD PTR [rdi+16]
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >::_Assign_grow
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map

; 107  :     unordered_map() : _Mybase(_Key_compare(), allocator_type()) {}

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ ENDP ; std::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ@4HA PROC ; `std::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 8
	jmp	??1?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::~list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >
?dtor$1@?0???0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ@4HA ENDP ; `std::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ@4HA PROC ; `std::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 24
	jmp	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >
?dtor$2@?0???0?$unordered_map@IULink@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ@4HA ENDP ; `std::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::unordered_map<unsigned int,UIAINBNodeBase::Link,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map
;	COMDAT ??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ PROC ; std::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >, COMDAT

; 107  :     unordered_map() : _Mybase(_Key_compare(), allocator_type()) {}

$LN70:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 50   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	xor	edi, edi
	mov	DWORD PTR [rcx], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	mov	QWORD PTR [rcx+8], rdi
	mov	QWORD PTR [rcx+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rdi+56]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	lea	rcx, QWORD PTR [rbx+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx], rdi
	mov	QWORD PTR [rcx+8], rdi
	mov	QWORD PTR [rcx+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	mov	QWORD PTR [rbx+48], 7
	mov	QWORD PTR [rbx+56], 8

; 377  :         // construct empty hash table
; 378  :         _Max_bucket_size() = _Bucket_size;

	mov	DWORD PTR [rbx], 1065353216		; 3f800000H

; 379  :         _Vec._Assign_grow(_Min_buckets * 2, _List._Unchecked_end());

	mov	r8, QWORD PTR [rbx+8]
	lea	edx, QWORD PTR [rdi+16]
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >::_Assign_grow
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map

; 107  :     unordered_map() : _Mybase(_Key_compare(), allocator_type()) {}

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ ENDP ; std::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ@4HA PROC ; `std::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 8
	jmp	??1?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::~list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >
?dtor$1@?0???0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ@4HA ENDP ; `std::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$2@?0???0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ@4HA PROC ; `std::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 24
	jmp	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >
?dtor$2@?0???0?$unordered_map@IUPin@UIAINBNodeBase@@U?$hash@I@std@@U?$equal_to@I@4@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@@std@@QEAA@XZ@4HA ENDP ; `std::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::unordered_map<unsigned int,UIAINBNodeBase::Pin,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$dead$ = 64
??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >, COMDAT

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

$LN60:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map

; 50   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	xor	edi, edi
	mov	QWORD PTR [rcx+8], rdi
	mov	QWORD PTR [rcx+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rdi+40]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	lea	rcx, QWORD PTR [rbx+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx], rdi
	mov	QWORD PTR [rcx+8], rdi
	mov	QWORD PTR [rcx+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	mov	QWORD PTR [rbx+48], 7
	mov	QWORD PTR [rbx+56], 8

; 377  :         // construct empty hash table
; 378  :         _Max_bucket_size() = _Bucket_size;

	mov	DWORD PTR [rbx], 1065353216		; 3f800000H

; 379  :         _Vec._Assign_grow(_Min_buckets * 2, _List._Unchecked_end());

	mov	r8, QWORD PTR [rbx+8]
	lea	edx, QWORD PTR [rdi+16]
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >::_Assign_grow
	npad	1

; 380  : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 381  :         _Stl_internal_check_container_invariants();
; 382  : #endif // _ENABLE_STL_INTERNAL_CHECK
; 383  :     }

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Al$dead$ = 64
?dtor$0@?0???0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z@4HA PROC ; `std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 8
	jmp	??1?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::~list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >
?dtor$0@?0???0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z@4HA ENDP ; `std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Al$dead$ = 64
?dtor$1@?0???0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z@4HA PROC ; `std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 24
	jmp	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >
?dtor$1@?0???0?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z@4HA ENDP ; `std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@QEAA@XZ PROC ; std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Al$dead$ = 64
??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >, COMDAT

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

$LN60:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map

; 50   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	xor	edi, edi
	mov	QWORD PTR [rcx+8], rdi
	mov	QWORD PTR [rcx+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rdi+56]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	lea	rcx, QWORD PTR [rbx+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx], rdi
	mov	QWORD PTR [rcx+8], rdi
	mov	QWORD PTR [rcx+16], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 376  :         : _Traitsobj(_Parg), _List(_Al), _Vec(_Al), _Mask(_Min_buckets - 1), _Maxidx(_Min_buckets) {

	mov	QWORD PTR [rbx+48], 7
	mov	QWORD PTR [rbx+56], 8

; 377  :         // construct empty hash table
; 378  :         _Max_bucket_size() = _Bucket_size;

	mov	DWORD PTR [rbx], 1065353216		; 3f800000H

; 379  :         _Vec._Assign_grow(_Min_buckets * 2, _List._Unchecked_end());

	mov	r8, QWORD PTR [rbx+8]
	lea	edx, QWORD PTR [rdi+16]
	call	?_Assign_grow@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAAX_KV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@2@@Z ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >::_Assign_grow
	npad	1

; 380  : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 381  :         _Stl_internal_check_container_invariants();
; 382  : #endif // _ENABLE_STL_INTERNAL_CHECK
; 383  :     }

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Al$dead$ = 64
?dtor$0@?0???0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z@4HA PROC ; `std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 8
	jmp	??1?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::~list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >
?dtor$0@?0???0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z@4HA ENDP ; `std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Parg$ = 56
_Al$dead$ = 64
?dtor$1@?0???0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z@4HA PROC ; `std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 24
	jmp	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >
?dtor$1@?0???0?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z@4HA ENDP ; `std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@QEAA@XZ PROC ; std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAAAEAMXZ
_TEXT	SEGMENT
this$ = 8
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAAAEAMXZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >::_Max_bucket_size, COMDAT

; 1801 :         return _Traitsobj._Get_max_bucket_size();

	mov	rax, rcx

; 1802 :     }

	ret	0
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAAAEAMXZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??0?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$dead$ = 56
??0?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >, COMDAT

; 803  :     explicit list(const _Alloc& _Al) : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN41:
	push	rbx
	sub	rsp, 32					; 00000020H

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	xor	eax, eax

; 803  :     explicit list(const _Alloc& _Al) : _Mypair(_One_then_variadic_args_t{}, _Al) {

	mov	rbx, rcx

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+40]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx], rax

; 804  :         _Alloc_sentinel_and_proxy();
; 805  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map
;	COMDAT ??0?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@QEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Traits$ = 16
??0?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@QEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z PROC ; std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0>::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0>, COMDAT

; 50   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
	mov	rax, rcx
	ret	0
??0?$_Umap_traits@IULink@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@4@$0A@@std@@QEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z ENDP ; std::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0>::_Umap_traits<unsigned int,UIAINBNodeBase::Link,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> >,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAAAEAMXZ
_TEXT	SEGMENT
this$ = 8
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAAAEAMXZ PROC ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >::_Max_bucket_size, COMDAT

; 1801 :         return _Traitsobj._Get_max_bucket_size();

	mov	rax, rcx

; 1802 :     }

	ret	0
?_Max_bucket_size@?$_Hash@V?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@@std@@IEAAAEAMXZ ENDP ; std::_Hash<std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0> >::_Max_bucket_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??0?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$dead$ = 56
??0?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >, COMDAT

; 803  :     explicit list(const _Alloc& _Al) : _Mypair(_One_then_variadic_args_t{}, _Al) {

$LN41:
	push	rbx
	sub	rsp, 32					; 00000020H

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	xor	eax, eax

; 803  :     explicit list(const _Alloc& _Al) : _Mypair(_One_then_variadic_args_t{}, _Al) {

	mov	rbx, rcx

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+56]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx], rax

; 804  :         _Alloc_sentinel_and_proxy();
; 805  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\unordered_map
;	COMDAT ??0?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@QEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Traits$ = 16
??0?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@QEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z PROC ; std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0>::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0>, COMDAT

; 50   :     explicit _Umap_traits(const _Tr& _Traits) noexcept(is_nothrow_copy_constructible_v<_Tr>) : _Tr(_Traits) {}

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
	mov	rax, rcx
	ret	0
??0?$_Umap_traits@IUPin@UIAINBNodeBase@@V?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@4@$0A@@std@@QEAA@AEBV?$_Uhash_compare@IU?$hash@I@std@@U?$equal_to@I@2@@1@@Z ENDP ; std::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0>::_Umap_traits<unsigned int,UIAINBNodeBase::Pin,std::_Uhash_compare<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int> >,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> >,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ PROC ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::_Alloc_sentinel_and_proxy, COMDAT

; 1832 :     void _Alloc_sentinel_and_proxy() {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 40					; 00000028H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx], rax

; 1840 :         _Proxy._Release();
; 1841 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ ENDP ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Link>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::_Alloc_sentinel_and_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ PROC ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::_Alloc_sentinel_and_proxy, COMDAT

; 1832 :     void _Alloc_sentinel_and_proxy() {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 56					; 00000038H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1837 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	mov	QWORD PTR [rax], rax

; 1838 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	mov	QWORD PTR [rax+8], rax

; 1839 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	QWORD PTR [rbx], rax

; 1840 :         _Proxy._Release();
; 1841 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Alloc_sentinel_and_proxy@?$list@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@V?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@2@@std@@AEAAXXZ ENDP ; std::list<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::_Alloc_sentinel_and_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ??$?0AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$dead$ = 16
??$?0AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > ><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > const &,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 267  :     }

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > ><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ??$?0AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al$dead$ = 16
??$?0AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > ><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > const &,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 267  :     }

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@$0A@@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > ><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >,1><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >,1><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >,1><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> >,std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >,1><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@0@0@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> *,std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> * &>, COMDAT

; 248  : #if _HAS_CXX20
; 249  :     if (_STD is_constant_evaluated()) {
; 250  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 251  :     } else
; 252  : #endif // _HAS_CXX20
; 253  :     {
; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 255  :     }
; 256  : }

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	ret	0
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> *,std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@0@0@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> *,std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> * &>, COMDAT

; 248  : #if _HAS_CXX20
; 249  :     if (_STD is_constant_evaluated()) {
; 250  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 251  :     } else
; 252  : #endif // _HAS_CXX20
; 253  :     {
; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 255  :     }
; 256  : }

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	ret	0
??$_Construct_in_place@PEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> *,std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >, COMDAT

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >, COMDAT

; 354  :     _List_val() noexcept : _Myhead(), _Mysize(0) {} // initialize data

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> ><std::pair<unsigned int const ,UIAINBNodeBase::Link> >, COMDAT

; 962  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> ><std::pair<unsigned int const ,UIAINBNodeBase::Link> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> ><std::pair<unsigned int const ,UIAINBNodeBase::Pin> >, COMDAT

; 962  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@?$allocator@U?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> >::allocator<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> ><std::pair<unsigned int const ,UIAINBNodeBase::Pin> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > const &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >,1><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >,1><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Link> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > const &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >,1><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >,1>::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >,1><std::allocator<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@PEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@PEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z PROC ; std::construct_at<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> *,std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> * &,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@PEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z ENDP ; std::construct_at<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> *,std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Link>,void *> * &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@PEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@PEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z PROC ; std::construct_at<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> *,std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> * &,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@PEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_List_node@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z ENDP ; std::construct_at<std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> *,std::_List_node<std::pair<unsigned int const ,UIAINBNodeBase::Pin>,void *> * &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > ><std::pair<unsigned int const ,UIAINBNodeBase::Link> >, COMDAT

; 962  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIULink@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Link> > > > ><std::pair<unsigned int const ,UIAINBNodeBase::Link> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > ><std::pair<unsigned int const ,UIAINBNodeBase::Pin> >, COMDAT

; 962  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@std@@@std@@@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBIUPin@UIAINBNodeBase@@@std@@@1@@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > >::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<unsigned int const ,UIAINBNodeBase::Pin> > > > ><std::pair<unsigned int const ,UIAINBNodeBase::Pin> >
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_02BONOGKBK@?$CC?3@			; `string'
PUBLIC	??_C@_04MLLLIHIP@null@				; `string'
PUBLIC	??_C@_02MCKKLHBJ@?2?$CC@			; `string'
PUBLIC	??_C@_07PBJOHOHP@?$CC?2?1?$AI?$AM?6?$AN@	; `string'
PUBLIC	??_C@_02HHAEMJFE@?2?1@				; `string'
PUBLIC	??_C@_02HDBGODGB@?2?2@				; `string'
PUBLIC	??_C@_02FGLPDNBI@?2f@				; `string'
PUBLIC	??_C@_02DCNDPIBM@?2b@				; `string'
PUBLIC	??_C@_02HIBBOKEN@?2r@				; `string'
PUBLIC	??_C@_02JOGGLHBA@?2n@				; `string'
PUBLIC	??_C@_06HHCOKMHE@?2u0000@			; `string'
PUBLIC	??_C@_02COELENML@?2t@				; `string'
PUBLIC	??_C@_02GMLFBBN@wb@				; `string'
PUBLIC	??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
EXTRN	__imp_?unsetf@ios_base@std@@QEAAXH@Z:PROC
EXTRN	__imp_?precision@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAADD@Z:PROC
EXTRN	__imp_fopen_s:PROC
EXTRN	__imp_terminate:PROC
EXTRN	__imp_strtod:PROC
EXTRN	__imp_setlocale:PROC
;	COMDAT ??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	088H
CONST	ENDS
;	COMDAT ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$rs	SEGMENT
??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allo'
	DB	'cator@D@2@@std@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DQ FLAT:??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DQ	FLAT:??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 01H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	088H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	imagerel ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
	DD	imagerel ??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb@
CONST	SEGMENT
??_C@_02GMLFBBN@wb@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02COELENML@?2t@
CONST	SEGMENT
??_C@_02COELENML@?2t@ DB '\t', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06HHCOKMHE@?2u0000@
CONST	SEGMENT
??_C@_06HHCOKMHE@?2u0000@ DB '\u0000', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02JOGGLHBA@?2n@
CONST	SEGMENT
??_C@_02JOGGLHBA@?2n@ DB '\n', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HIBBOKEN@?2r@
CONST	SEGMENT
??_C@_02HIBBOKEN@?2r@ DB '\r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DCNDPIBM@?2b@
CONST	SEGMENT
??_C@_02DCNDPIBM@?2b@ DB '\b', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FGLPDNBI@?2f@
CONST	SEGMENT
??_C@_02FGLPDNBI@?2f@ DB '\f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HDBGODGB@?2?2@
CONST	SEGMENT
??_C@_02HDBGODGB@?2?2@ DB '\\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HHAEMJFE@?2?1@
CONST	SEGMENT
??_C@_02HHAEMJFE@?2?1@ DB '\/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07PBJOHOHP@?$CC?2?1?$AI?$AM?6?$AN@
CONST	SEGMENT
??_C@_07PBJOHOHP@?$CC?2?1?$AI?$AM?6?$AN@ DB '"\/', 08H, 0cH, 0aH, 0dH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02MCKKLHBJ@?2?$CC@
CONST	SEGMENT
??_C@_02MCKKLHBJ@?2?$CC@ DB '\"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MLLLIHIP@null@
CONST	SEGMENT
??_C@_04MLLLIHIP@null@ DB 'null', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BONOGKBK@?$CC?3@
CONST	SEGMENT
??_C@_02BONOGKBK@?$CC?3@ DB '":', 00H			; `string'
PUBLIC	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>
PUBLIC	??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &,0>
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>
PUBLIC	??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>
PUBLIC	??$forward@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@AEAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>
PUBLIC	??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,0>
PUBLIC	??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>
PUBLIC	??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,0>
PUBLIC	??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >
PUBLIC	??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &,0>
PUBLIC	??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
PUBLIC	??$construct_at@Uvalue@crude_json@@AEAU12@$0A@@std@@YAPEAUvalue@crude_json@@QEAU12@AEAU12@@Z ; std::construct_at<crude_json::value,crude_json::value &,0>
PUBLIC	??$construct_at@Uvalue@crude_json@@U12@$0A@@std@@YAPEAUvalue@crude_json@@QEAU12@$$QEAU12@@Z ; std::construct_at<crude_json::value,crude_json::value,0>
PUBLIC	??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &>
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::`scalar deleting destructor'
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>
PUBLIC	??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >
PUBLIC	??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * const &,0>
PUBLIC	??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *>
PUBLIC	??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &>
PUBLIC	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>
PUBLIC	??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *>
PUBLIC	??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEBQEAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * const &>
PUBLIC	??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &>
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >
PUBLIC	??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>
PUBLIC	??$construct@Uvalue@crude_json@@AEAU12@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@AEAU34@@Z ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::construct<crude_json::value,crude_json::value &>
PUBLIC	??$forward@AEAUvalue@crude_json@@@std@@YAAEAUvalue@crude_json@@AEAU12@@Z ; std::forward<crude_json::value &>
PUBLIC	??$construct@Uvalue@crude_json@@U12@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::construct<crude_json::value,crude_json::value>
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@0@AEAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > > >
PUBLIC	??$?0AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &,bool,0>
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>
PUBLIC	??$move@AEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAU10@@Z ; std::move<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &>
PUBLIC	??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Allocate
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@QEAA@XZ ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::deallocate
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAA@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >
PUBLIC	??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@Uvalue@crude_json@@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBV32@AEBUvalue@crude_json@@@Z ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>::_Extract
PUBLIC	??$_Pocs@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@0@0@Z ; std::_Pocs<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??$addressof@V?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@@std@@YAPEAV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@0@AEAV10@@Z ; std::addressof<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> > >
PUBLIC	??$swap@PEAUvalue@crude_json@@$0A@@std@@YAXAEAPEAUvalue@crude_json@@0@Z ; std::swap<crude_json::value *,0>
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??$_Pocs@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXAEAV?$allocator@Uvalue@crude_json@@@0@0@Z ; std::_Pocs<std::allocator<crude_json::value> >
PUBLIC	??$addressof@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@YAPEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@AEAV10@@Z ; std::addressof<std::vector<crude_json::value,std::allocator<crude_json::value> > >
PUBLIC	??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::nullptr_t>
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@AEAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >
PUBLIC	??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *>
PUBLIC	??$move@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z ; std::move<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &>
PUBLIC	??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * const &>
PUBLIC	??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z ; std::destroy_at<crude_json::value>
PUBLIC	??$_Traits_find_first_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z ; std::_Traits_find_first_of<std::char_traits<char>,0>
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy<0>
PUBLIC	??$forward@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@0@AEAV10@@Z ; std::forward<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool,0>
PUBLIC	??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * const &,bool,0>
PUBLIC	??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >
PUBLIC	??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$forward@PEAUvalue@crude_json@@@std@@YA$$QEAPEAUvalue@crude_json@@AEAPEAU12@@Z ; std::forward<crude_json::value *>
PUBLIC	??$forward@V?$allocator@Uvalue@crude_json@@@std@@@std@@YA$$QEAV?$allocator@Uvalue@crude_json@@@0@AEAV10@@Z ; std::forward<std::allocator<crude_json::value> >
PUBLIC	??$_Unfancy@Uvalue@crude_json@@@std@@YAPEAUvalue@crude_json@@PEAU12@@Z ; std::_Unfancy<crude_json::value>
PUBLIC	??$_Emplace_back@Uvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::_Emplace_back<crude_json::value>
PUBLIC	??$_Emplace_back@AEAUvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAXAEAUvalue@crude_json@@@Z ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::_Emplace_back<crude_json::value &>
PUBLIC	??$forward@AEBQEAUvalue@crude_json@@@std@@YAAEBQEAUvalue@crude_json@@AEBQEAU12@@Z ; std::forward<crude_json::value * const &>
PUBLIC	??$move@AEAPEAUvalue@crude_json@@@std@@YA$$QEAPEAUvalue@crude_json@@AEAPEAU12@@Z ; std::move<crude_json::value * &>
PUBLIC	??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_reallocate<crude_json::value>
PUBLIC	??$_Emplace_back_with_unused_capacity@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_back_with_unused_capacity<crude_json::value>
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@1@AEB_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >,bool const &,0>
PUBLIC	??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1><>
PUBLIC	??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1><std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??$swap@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$0A@@std@@YAXAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z ; std::swap<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0>
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1>::_Get_first
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@_K@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >::deallocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::max_size
PUBLIC	?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getcomp
PUBLIC	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@PEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Max
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::max_size
PUBLIC	?swap@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAAXAEAV12@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::swap
PUBLIC	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Lrotate
PUBLIC	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Rrotate
PUBLIC	?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Orphan_ptr
PUBLIC	?_Buy_raw@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Buy_raw
PUBLIC	?_Swap_val@?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<crude_json::value> >::_Swap_val
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??0?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
PUBLIC	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@_K@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >::allocate
PUBLIC	?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Check_grow_by_1
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Insert_node
PUBLIC	?swap@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAXAEAV12@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::swap
PUBLIC	??0?$allocator@Uvalue@crude_json@@@std@@QEAA@XZ	; std::allocator<crude_json::value>::allocator<crude_json::value>
PUBLIC	?swap@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAXAEAV12@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::swap
PUBLIC	?_Buy_nonzero@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Buy_nonzero
PUBLIC	??0?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<crude_json::value> >::_Vector_val<std::_Simple_types<crude_json::value> >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@std@@QEAA@PEAUvalue@crude_json@@00@Z ; std::_Vector_val<std::_Simple_types<crude_json::value> >::_Vector_val<std::_Simple_types<crude_json::value> >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@PEAUvalue@crude_json@@AEAV?$allocator@Uvalue@crude_json@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::_Uninitialized_backout_al<std::allocator<crude_json::value> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::~_Uninitialized_backout_al<std::allocator<crude_json::value> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAPEAUvalue@crude_json@@XZ ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::_Release
PUBLIC	??1?$_Tidy_guard@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<crude_json::value,std::allocator<crude_json::value> > >::~_Tidy_guard<std::vector<crude_json::value,std::allocator<crude_json::value> > >
PUBLIC	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Release
PUBLIC	??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??0?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
PUBLIC	?_Release@?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAAXXZ ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Release
PUBLIC	??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::__autoclassinit2
PUBLIC	??$swap@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@$0A@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@0@Z ; std::swap<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,0>
PUBLIC	??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$?0U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU21@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_One_then_variadic_args_t,std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??$move@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@0@AEAV10@@Z ; std::move<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > &>
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
PUBLIC	??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@0@AEBV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > const >
PUBLIC	??$addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@AEBU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> const >
PUBLIC	??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::destroy<crude_json::value>
PUBLIC	??$_Traits_find_ch@U?$char_traits@D@std@@@std@@YA_KQEBD_K1D@Z ; std::_Traits_find_ch<std::char_traits<char> >
PUBLIC	??$_Traits_find_first_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z ; std::_Traits_find_first_of<std::char_traits<char>,1>
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> ><std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
PUBLIC	??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1><>
PUBLIC	??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Construct_n<crude_json::value * const &,crude_json::value * const &>
PUBLIC	??$?0V?$allocator@Uvalue@crude_json@@@std@@$$V@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uvalue@crude_json@@@1@@Z ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1><std::allocator<crude_json::value> >
PUBLIC	??$?0V?$allocator@Uvalue@crude_json@@@std@@PEAUvalue@crude_json@@PEAU23@PEAU23@@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uvalue@crude_json@@@1@$$QEAPEAUvalue@crude_json@@22@Z ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1><std::allocator<crude_json::value>,crude_json::value *,crude_json::value *,crude_json::value *>
PUBLIC	??$exchange@PEAUvalue@crude_json@@$$T@std@@YAPEAUvalue@crude_json@@AEAPEAU12@$$QEA$$T@Z ; std::exchange<crude_json::value *,std::nullptr_t>
PUBLIC	??$move@AEAV?$allocator@Uvalue@crude_json@@@std@@@std@@YA$$QEAV?$allocator@Uvalue@crude_json@@@0@AEAV10@@Z ; std::move<std::allocator<crude_json::value> &>
PUBLIC	??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z ; std::_Destroy_range<std::allocator<crude_json::value> >
PUBLIC	??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z ; std::_Uninitialized_move<crude_json::value *,std::allocator<crude_json::value> >
PUBLIC	??$_Get_unwrapped@AEBQEAUvalue@crude_json@@@std@@YA?A_TAEBQEAUvalue@crude_json@@@Z ; std::_Get_unwrapped<crude_json::value * const &>
PUBLIC	??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z ; std::_Uninitialized_copy<crude_json::value *,crude_json::value *,std::allocator<crude_json::value> >
PUBLIC	??$_Unwrap_sent@PEAUvalue@crude_json@@PEAU12@@ranges@std@@YA?A_T$$QEAPEAUvalue@crude_json@@@Z ; std::ranges::_Unwrap_sent<crude_json::value *,crude_json::value *>
PUBLIC	??$_Unwrap_iter@PEAUvalue@crude_json@@PEAU12@@ranges@std@@YA?A_T$$QEAPEAUvalue@crude_json@@@Z ; std::ranges::_Unwrap_iter<crude_json::value *,crude_json::value *>
PUBLIC	??$isnormal@N@@YA_NN@Z				; isnormal<double>
PUBLIC	??$_Emplace_one_at_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_one_at_back<crude_json::value>
PUBLIC	??$forward@Uvalue@crude_json@@@std@@YA$$QEAUvalue@crude_json@@AEAU12@@Z ; std::forward<crude_json::value>
PUBLIC	??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>
PUBLIC	??$swap@N$0A@@std@@YAXAEAN0@Z			; std::swap<double,0>
PUBLIC	??$swap@_N$0A@@std@@YAXAEA_N0@Z			; std::swap<bool,0>
PUBLIC	??$swap@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@0@Z ; std::swap<crude_json::value,std::allocator<crude_json::value> >
PUBLIC	??$swap@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@YAXAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@0@0@Z ; std::swap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >
PUBLIC	??$forward@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@YA$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@AEAV10@@Z ; std::forward<std::vector<crude_json::value,std::allocator<crude_json::value> > >
PUBLIC	??$forward@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@std@@YA$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@0@AEAV10@@Z ; std::forward<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
PUBLIC	??$move@AEAUvalue@crude_json@@@std@@YA$$QEAUvalue@crude_json@@AEAU12@@Z ; std::move<crude_json::value &>
PUBLIC	??$move@AEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@YA$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@AEAV10@@Z ; std::move<std::vector<crude_json::value,std::allocator<crude_json::value> > &>
PUBLIC	??$move@AEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@std@@YA$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@0@AEAV10@@Z ; std::move<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > &>
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1>::_Get_first
PUBLIC	?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getcomp
PUBLIC	?_Swap_val_excluding_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@AEAAXAEAV12@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Swap_val_excluding_comp
PUBLIC	?key_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::key_comp
PUBLIC	?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Alloc_sentinel_and_proxy
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>::_Get_first
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SA_KAEBV?$allocator@Uvalue@crude_json@@@2@@Z ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::max_size
PUBLIC	?capacity@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBA_KXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::capacity
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Uvalue@crude_json@@@2@XZ ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Uvalue@crude_json@@@2@XZ ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Get_first
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SA?AV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::select_on_container_copy_construction
PUBLIC	??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >
PUBLIC	??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getal
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Get_scary
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Get_scary
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@PEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Min
PUBLIC	?deallocate@?$allocator@Uvalue@crude_json@@@std@@QEAAXQEAUvalue@crude_json@@_K@Z ; std::allocator<crude_json::value>::deallocate
PUBLIC	?allocate@?$allocator@Uvalue@crude_json@@@std@@QEAAPEAUvalue@crude_json@@_K@Z ; std::allocator<crude_json::value>::allocate
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SA?AV?$allocator@Uvalue@crude_json@@@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::select_on_container_copy_construction
PUBLIC	?max_size@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBA_KXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::max_size
PUBLIC	?_Calculate_growth@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBA_K_K@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Change_array
PUBLIC	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
PUBLIC	?_Xlength@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@CAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBAXPEAUvalue@crude_json@@0@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Orphan_range
PUBLIC	?_Getal@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAV?$allocator@Uvalue@crude_json@@@2@XZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Getal
PUBLIC	?_Getal@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBAAEBV?$allocator@Uvalue@crude_json@@@2@XZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Getal
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::operator*
PUBLIC	?pointer_to@?$pointer_traits@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@SAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@AEBU32@@Z ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> const *>::pointer_to
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
PUBLIC	??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_of
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::end
PUBLIC	?_Unchecked_begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AU_Default_sentinel@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Unchecked_end
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::find
PUBLIC	??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >
PUBLIC	??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >
PUBLIC	??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@$$QEAV01@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >
PUBLIC	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::operator[]
PUBLIC	??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >
PUBLIC	??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >
PUBLIC	??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >
PUBLIC	??1?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::~vector<crude_json::value,std::allocator<crude_json::value> >
PUBLIC	?push_back@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::push_back
PUBLIC	?_Unchecked_begin@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBAPEBUvalue@crude_json@@XZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBAPEBUvalue@crude_json@@XZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Unchecked_end
PUBLIC	?size@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBA_KXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::size
PUBLIC	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEGBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::operator*
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::operator++
PUBLIC	??8?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NU_Default_sentinel@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::operator==
PUBLIC	??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::operator->
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::operator==
PUBLIC	?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parse
PUBLIC	?__autoclassinit2@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX_K@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAX_K@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::__autoclassinit2
PUBLIC	?eof@parser@value@crude_json@@AEBA_NXZ		; crude_json::value::parser::eof
PUBLIC	?advance@parser@value@crude_json@@AEAA_NH@Z	; crude_json::value::parser::advance
PUBLIC	?expect@parser@value@crude_json@@AEAA_ND@Z	; crude_json::value::parser::expect
PUBLIC	?peek@parser@value@crude_json@@AEBAHXZ		; crude_json::value::parser::peek
PUBLIC	?accept@parser@value@crude_json@@AEAA_NPEBD@Z	; crude_json::value::parser::accept
PUBLIC	?accept@parser@value@crude_json@@AEAA_ND@Z	; crude_json::value::parser::accept
PUBLIC	?accept_null@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_null
PUBLIC	?accept_boolean@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_boolean
PUBLIC	?accept_ws@parser@value@crude_json@@AEAA_NXZ	; crude_json::value::parser::accept_ws
PUBLIC	?accept_sign@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_sign
PUBLIC	?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_exp
PUBLIC	?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_frac
PUBLIC	?accept_onenine@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_onenine
PUBLIC	?accept_digit@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_digit
PUBLIC	?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_digits
PUBLIC	?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_int
PUBLIC	?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_number
PUBLIC	?accept_hex@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_hex
PUBLIC	?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z ; crude_json::value::parser::accept_escape
PUBLIC	?accept_character@parser@value@crude_json@@AEAA_NAEAH@Z ; crude_json::value::parser::accept_character
PUBLIC	?accept_characters@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_characters
PUBLIC	?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_string
PUBLIC	?accept_element@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_element
PUBLIC	??$emplace_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA?A_T$$QEAUvalue@crude_json@@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::emplace_back<crude_json::value>
PUBLIC	?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z ; crude_json::value::parser::accept_elements
PUBLIC	?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_array
PUBLIC	?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ; crude_json::value::parser::accept_member
PUBLIC	?accept_members@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ; crude_json::value::parser::accept_members
PUBLIC	?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_object
PUBLIC	?accept_value@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_value
PUBLIC	?state@parser@value@crude_json@@AEAA?AUcursor_state@123@XZ ; crude_json::value::parser::state
PUBLIC	??Rcursor_state@parser@value@crude_json@@QEAA_N_N@Z ; crude_json::value::parser::cursor_state::operator()
PUBLIC	?reset@cursor_state@parser@value@crude_json@@QEAAXXZ ; crude_json::value::parser::cursor_state::reset
PUBLIC	??0cursor_state@parser@value@crude_json@@QEAA@PEAU123@@Z ; crude_json::value::parser::cursor_state::cursor_state
PUBLIC	?parse@parser@value@crude_json@@QEAA?AU23@XZ	; crude_json::value::parser::parse
PUBLIC	??0parser@value@crude_json@@QEAA@PEBD0@Z	; crude_json::value::parser::parser
PUBLIC	?__autoclassinit2@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::__autoclassinit2
PUBLIC	?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z ; crude_json::value::dump
PUBLIC	?write_newline@dump_context_t@value@crude_json@@QEAAXXZ ; crude_json::value::dump_context_t::write_newline
PUBLIC	?write_separator@dump_context_t@value@crude_json@@QEAAXXZ ; crude_json::value::dump_context_t::write_separator
PUBLIC	?write_indent@dump_context_t@value@crude_json@@QEAAXH@Z ; crude_json::value::dump_context_t::write_indent
PUBLIC	??1dump_context_t@value@crude_json@@QEAA@XZ	; crude_json::value::dump_context_t::~dump_context_t
PUBLIC	?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z ; crude_json::value::dump
PUBLIC	??_Gvalue@crude_json@@QEAAPEAXI@Z		; crude_json::value::`scalar deleting destructor'
PUBLIC	?swap@value@crude_json@@QEAAXAEAU12@@Z		; crude_json::value::swap
PUBLIC	?push_back@value@crude_json@@QEAAX$$QEAU12@@Z	; crude_json::value::push_back
PUBLIC	?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::contains
PUBLIC	?__autoclassinit2@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAAX_K@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::__autoclassinit2
PUBLIC	??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::operator[]
PUBLIC	??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::operator[]
PUBLIC	??0value@crude_json@@QEAA@AEBU01@@Z		; crude_json::value::value
PUBLIC	??0value@crude_json@@QEAA@$$QEAU01@@Z		; crude_json::value::value
PUBLIC	??$get@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@value@crude_json@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; crude_json::value::get<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??_G?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAPEAXI@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::`scalar deleting destructor'
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >
PUBLIC	??_G?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAPEAXI@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::`scalar deleting destructor'
PUBLIC	??0dump_context_t@value@crude_json@@QEAA@HD@Z	; crude_json::value::dump_context_t::dump_context_t
PUBLIC	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
PUBLIC	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@N@Z ; crude_json::value::construct
PUBLIC	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@_N@Z ; crude_json::value::construct
PUBLIC	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; crude_json::value::construct
PUBLIC	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ; crude_json::value::construct
PUBLIC	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@5@@Z ; crude_json::value::construct
PUBLIC	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@5@@Z ; crude_json::value::construct
PUBLIC	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z ; crude_json::value::construct
PUBLIC	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z ; crude_json::value::construct
PUBLIC	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@W432@@Z ; crude_json::value::construct
PUBLIC	?number_ptr@value@crude_json@@CAPEBNAEBT?$_Align_type@N$0CA@@std@@@Z ; crude_json::value::number_ptr
PUBLIC	?number_ptr@value@crude_json@@CAPEANAEAT?$_Align_type@N$0CA@@std@@@Z ; crude_json::value::number_ptr
PUBLIC	?boolean_ptr@value@crude_json@@CAPEB_NAEBT?$_Align_type@N$0CA@@std@@@Z ; crude_json::value::boolean_ptr
PUBLIC	?boolean_ptr@value@crude_json@@CAPEA_NAEAT?$_Align_type@N$0CA@@std@@@Z ; crude_json::value::boolean_ptr
PUBLIC	?string_ptr@value@crude_json@@CAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBT?$_Align_type@N$0CA@@4@@Z ; crude_json::value::string_ptr
PUBLIC	?string_ptr@value@crude_json@@CAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAT?$_Align_type@N$0CA@@4@@Z ; crude_json::value::string_ptr
PUBLIC	?array_ptr@value@crude_json@@CAPEBV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBT?$_Align_type@N$0CA@@4@@Z ; crude_json::value::array_ptr
PUBLIC	?array_ptr@value@crude_json@@CAPEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAT?$_Align_type@N$0CA@@4@@Z ; crude_json::value::array_ptr
PUBLIC	?object_ptr@value@crude_json@@CAPEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEBT?$_Align_type@N$0CA@@4@@Z ; crude_json::value::object_ptr
PUBLIC	?object_ptr@value@crude_json@@CAPEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAT?$_Align_type@N$0CA@@4@@Z ; crude_json::value::object_ptr
PUBLIC	?is_array@value@crude_json@@QEBA_NXZ		; crude_json::value::is_array
PUBLIC	?is_object@value@crude_json@@QEBA_NXZ		; crude_json::value::is_object
PUBLIC	?is_null@value@crude_json@@QEBA_NXZ		; crude_json::value::is_null
PUBLIC	?is_structured@value@crude_json@@QEBA_NXZ	; crude_json::value::is_structured
PUBLIC	??4value@crude_json@@QEAAAEAU01@N@Z		; crude_json::value::operator=
PUBLIC	??4value@crude_json@@QEAAAEAU01@_N@Z		; crude_json::value::operator=
PUBLIC	??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::operator=
PUBLIC	??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z ; crude_json::value::operator=
PUBLIC	??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ; crude_json::value::operator=
PUBLIC	??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ; crude_json::value::operator=
PUBLIC	??4value@crude_json@@QEAAAEAU01@$$T@Z		; crude_json::value::operator=
PUBLIC	??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z	; crude_json::value::operator=
PUBLIC	??1value@crude_json@@QEAA@XZ			; crude_json::value::~value
PUBLIC	??0value@crude_json@@QEAA@N@Z			; crude_json::value::value
PUBLIC	??0value@crude_json@@QEAA@_N@Z			; crude_json::value::value
PUBLIC	??0value@crude_json@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::value
PUBLIC	??0value@crude_json@@QEAA@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z ; crude_json::value::value
PUBLIC	??0value@crude_json@@QEAA@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ; crude_json::value::value
PUBLIC	??0value@crude_json@@QEAA@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ; crude_json::value::value
PUBLIC	??0value@crude_json@@QEAA@W4type_t@1@@Z		; crude_json::value::value
PUBLIC	?defaultfloat@std@@YAAEAVios_base@1@AEAV21@@Z	; std::defaultfloat
PUBLIC	?_Getcont@_Iterator_base0@std@@QEBAPEBU_Container_base0@2@XZ ; std::_Iterator_base0::_Getcont
PUBLIC	?fpclassify@@YAHN@Z				; fpclassify
EXTRN	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z DD imagerel $LN76
	DD	imagerel $LN76+55
	DD	imagerel $unwind$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z DD imagerel $LN63
	DD	imagerel $LN63+55
	DD	imagerel $unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z DD imagerel $LN65
	DD	imagerel $LN65+63
	DD	imagerel $unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DD imagerel $LN75
	DD	imagerel $LN75+134
	DD	imagerel $unwind$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DD imagerel $LN87
	DD	imagerel $LN87+34
	DD	imagerel $unwind$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DD imagerel $LN43
	DD	imagerel $LN43+79
	DD	imagerel $unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DD imagerel $LN78
	DD	imagerel $LN78+134
	DD	imagerel $unwind$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z DD imagerel $LN45
	DD	imagerel $LN45+80
	DD	imagerel $unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DD imagerel $LN91
	DD	imagerel $LN91+34
	DD	imagerel $unwind$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z DD imagerel $LN125
	DD	imagerel $LN125+105
	DD	imagerel $unwind$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DD imagerel $LN81
	DD	imagerel $LN81+134
	DD	imagerel $unwind$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DD imagerel $LN96
	DD	imagerel $LN96+34
	DD	imagerel $unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DD imagerel $LN47
	DD	imagerel $LN47+79
	DD	imagerel $unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z DD imagerel $LN113
	DD	imagerel $LN113+39
	DD	imagerel $unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ DD imagerel $LN109
	DD	imagerel $LN109+35
	DD	imagerel $unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z DD imagerel $LN115
	DD	imagerel $LN115+35
	DD	imagerel $unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z DD imagerel $LN91
	DD	imagerel $LN91+223
	DD	imagerel $unwind$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z@4HA DD imagerel ?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z@4HA
	DD	imagerel ?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z@4HA+44
	DD	imagerel $unwind$?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DD imagerel $LN99
	DD	imagerel $LN99+34
	DD	imagerel $unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DD imagerel $LN95
	DD	imagerel $LN95+184
	DD	imagerel $unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ DD imagerel $LN33
	DD	imagerel $LN33+37
	DD	imagerel $unwind$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DD imagerel $LN40
	DD	imagerel $LN40+43
	DD	imagerel $unwind$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN115
	DD	imagerel $LN115+58
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DD imagerel $LN117
	DD	imagerel $LN117+35
	DD	imagerel $unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z DD imagerel $LN272
	DD	imagerel $LN272+18
	DD	imagerel $unwind$??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_first_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z DD imagerel $LN21
	DD	imagerel $LN21+117
	DD	imagerel $unwind$??$_Traits_find_first_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z DD imagerel $LN125
	DD	imagerel $LN125+105
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z DD imagerel $LN26
	DD	imagerel $LN26+164
	DD	imagerel $unwind$??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DD imagerel $LN146
	DD	imagerel $LN146+145
	DD	imagerel $unwind$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+40
	DD	imagerel $unwind$??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN20
	DD	imagerel $LN20+115
	DD	imagerel $unwind$??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@Uvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z DD imagerel $LN8
	DD	imagerel $LN8+29
	DD	imagerel $unwind$??$_Emplace_back@Uvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEAUvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAXAEAUvalue@crude_json@@@Z DD imagerel $LN76
	DD	imagerel $LN76+29
	DD	imagerel $unwind$??$_Emplace_back@AEAUvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAXAEAUvalue@crude_json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z DD imagerel $LN25
	DD	imagerel $LN25+321
	DD	imagerel $unwind$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z@4HA+52
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z DD imagerel $LN8
	DD	imagerel $LN8+36
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DD imagerel $LN315
	DD	imagerel $LN315+367
	DD	imagerel $unwind$??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+51
	DD	imagerel $unwind$?_Buy_raw@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+31
	DD	imagerel $unwind$?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z DD imagerel $LN10
	DD	imagerel $LN10+72
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ DD imagerel $LN274
	DD	imagerel $LN274+64
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN100
	DD	imagerel $LN100+75
	DD	imagerel $unwind$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z DD imagerel $LN36
	DD	imagerel $LN36+59
	DD	imagerel $unwind$??0?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN54
	DD	imagerel $LN54+57
	DD	imagerel $unwind$??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+36
	DD	imagerel $unwind$??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z DD imagerel $LN272
	DD	imagerel $LN272+21
	DD	imagerel $unwind$??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_ch@U?$char_traits@D@std@@@std@@YA_KQEBD_K1D@Z DD imagerel $LN10
	DD	imagerel $LN10+77
	DD	imagerel $unwind$??$_Traits_find_ch@U?$char_traits@D@std@@@std@@YA_KQEBD_K1D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_find_first_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z DD imagerel $LN48
	DD	imagerel $LN48+195
	DD	imagerel $unwind$??$_Traits_find_first_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DD imagerel $LN49
	DD	imagerel $LN49+39
	DD	imagerel $unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN32
	DD	imagerel $LN32+131
	DD	imagerel $unwind$??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DD imagerel $LN119
	DD	imagerel $LN119+206
	DD	imagerel $unwind$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN375
	DD	imagerel $LN375+292
	DD	imagerel $unwind$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z DD imagerel $LN19
	DD	imagerel $LN19+131
	DD	imagerel $unwind$??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z DD imagerel $LN273
	DD	imagerel $LN273+53
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z DD imagerel $LN125
	DD	imagerel $LN125+128
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z DD imagerel $LN324
	DD	imagerel $LN324+128
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$isnormal@N@@YA_NN@Z DD imagerel $LN7
	DD	imagerel $LN7+21
	DD	imagerel $unwind$??$isnormal@N@@YA_NN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_one_at_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z DD imagerel $LN12
	DD	imagerel $LN12+61
	DD	imagerel $unwind$??$_Emplace_one_at_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DD imagerel $LN325
	DD	imagerel $LN325+366
	DD	imagerel $unwind$??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD imagerel $LN36
	DD	imagerel $LN36+45
	DD	imagerel $unwind$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD imagerel $LN46
	DD	imagerel $LN46+55
	DD	imagerel $unwind$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN52
	DD	imagerel $LN52+92
	DD	imagerel $unwind$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@Uvalue@crude_json@@@std@@QEAAXQEAUvalue@crude_json@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@Uvalue@crude_json@@@std@@QEAAXQEAUvalue@crude_json@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@Uvalue@crude_json@@@std@@QEAAPEAUvalue@crude_json@@_K@Z DD imagerel $LN32
	DD	imagerel $LN32+116
	DD	imagerel $unwind$?allocate@?$allocator@Uvalue@crude_json@@@std@@QEAAPEAUvalue@crude_json@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z DD imagerel $LN192
	DD	imagerel $LN192+219
	DD	imagerel $unwind$?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ DD imagerel $LN179
	DD	imagerel $LN179+166
	DD	imagerel $unwind$?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@CAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlength@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD imagerel $LN8
	DD	imagerel $LN8+59
	DD	imagerel $unwind$??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z DD imagerel $LN19
	DD	imagerel $LN19+73
	DD	imagerel $unwind$?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DD imagerel $LN57
	DD	imagerel $LN57+191
	DD	imagerel $unwind$?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN52
	DD	imagerel $LN52+42
	DD	imagerel $unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD imagerel $LN39
	DD	imagerel $LN39+142
	DD	imagerel $unwind$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN50
	DD	imagerel $LN50+55
	DD	imagerel $unwind$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN122
	DD	imagerel $LN122+206
	DD	imagerel $unwind$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN56
	DD	imagerel $LN56+92
	DD	imagerel $unwind$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN377
	DD	imagerel $LN377+281
	DD	imagerel $unwind$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN25
	DD	imagerel $LN25+158
	DD	imagerel $unwind$??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z DD imagerel $LN14
	DD	imagerel $LN14+54
	DD	imagerel $unwind$?push_back@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN19
	DD	imagerel $LN19+167
	DD	imagerel $unwind$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+46
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+116
	DD	imagerel $unwind$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEGBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN7
	DD	imagerel $LN7+27
	DD	imagerel $unwind$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEGBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN279
	DD	imagerel $LN279+304
	DD	imagerel $unwind$?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$1@?0??parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0??parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_null@parser@value@crude_json@@AEAA_NAEAU23@@Z DD imagerel $LN26
	DD	imagerel $LN26+102
	DD	imagerel $unwind$?accept_null@parser@value@crude_json@@AEAA_NAEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_boolean@parser@value@crude_json@@AEAA_NAEAU23@@Z DD imagerel $LN47
	DD	imagerel $LN47+178
	DD	imagerel $unwind$?accept_boolean@parser@value@crude_json@@AEAA_NAEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_ws@parser@value@crude_json@@AEAA_NXZ DD imagerel $LN19
	DD	imagerel $LN19+105
	DD	imagerel $unwind$?accept_ws@parser@value@crude_json@@AEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_sign@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN59
	DD	imagerel $LN59+197
	DD	imagerel $unwind$?accept_sign@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN197
	DD	imagerel $LN197+487
	DD	imagerel $unwind$?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN100
	DD	imagerel $LN100+316
	DD	imagerel $unwind$?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_onenine@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN28
	DD	imagerel $LN28+117
	DD	imagerel $unwind$?accept_onenine@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_digit@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN32
	DD	imagerel $LN32+121
	DD	imagerel $unwind$?accept_digit@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN185
	DD	imagerel $LN185+525
	DD	imagerel $unwind$?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN372
	DD	imagerel $LN372+751
	DD	imagerel $unwind$?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z DD imagerel $LN249
	DD	imagerel $LN249+650
	DD	imagerel $unwind$?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_hex@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN33
	DD	imagerel $LN33+164
	DD	imagerel $unwind$?accept_hex@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z DD imagerel $LN174
	DD	imagerel $LN174+631
	DD	imagerel $unwind$?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_characters@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN88
	DD	imagerel $LN88+218
	DD	imagerel $unwind$?accept_characters@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z DD imagerel $LN309
	DD	imagerel $LN309+605
	DD	imagerel $unwind$?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_element@parser@value@crude_json@@AEAA_NAEAU23@@Z DD imagerel $LN98
	DD	imagerel $LN98+368
	DD	imagerel $unwind$?accept_element@parser@value@crude_json@@AEAA_NAEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA?A_T$$QEAUvalue@crude_json@@@Z DD imagerel $LN14
	DD	imagerel $LN14+61
	DD	imagerel $unwind$??$emplace_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA?A_T$$QEAUvalue@crude_json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z DD imagerel $LN436
	DD	imagerel $LN436+407
	DD	imagerel $unwind$?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z DD imagerel $LN114
	DD	imagerel $LN114+338
	DD	imagerel $unwind$?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DD imagerel $LN724
	DD	imagerel $LN724+747
	DD	imagerel $unwind$?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_members@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DD imagerel $LN55
	DD	imagerel $LN55+113
	DD	imagerel $unwind$?accept_members@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z DD imagerel $LN648
	DD	imagerel $LN648+674
	DD	imagerel $unwind$?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?accept_value@parser@value@crude_json@@AEAA_NAEAU23@@Z DD imagerel $LN81
	DD	imagerel $LN81+298
	DD	imagerel $unwind$?accept_value@parser@value@crude_json@@AEAA_NAEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?parse@parser@value@crude_json@@QEAA?AU23@XZ DD imagerel $LN255
	DD	imagerel $LN255+242
	DD	imagerel $unwind$?parse@parser@value@crude_json@@QEAA?AU23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??parse@parser@value@crude_json@@QEAA?AU23@XZ@4HA DD imagerel ?dtor$0@?0??parse@parser@value@crude_json@@QEAA?AU23@XZ@4HA
	DD	imagerel ?dtor$0@?0??parse@parser@value@crude_json@@QEAA?AU23@XZ@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??parse@parser@value@crude_json@@QEAA?AU23@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z DD imagerel $LN342
	DD	imagerel $LN342+141
	DD	imagerel $unwind$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z DD imagerel $LN342+141
	DD	imagerel $LN342+206
	DD	imagerel $chain$2$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z DD imagerel $LN342+206
	DD	imagerel $LN342+671
	DD	imagerel $chain$3$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z DD imagerel $LN342+671
	DD	imagerel $LN342+1482
	DD	imagerel $chain$4$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z DD imagerel $LN342+1482
	DD	imagerel $LN342+1536
	DD	imagerel $chain$5$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?write_indent@dump_context_t@value@crude_json@@QEAAXH@Z DD imagerel $LN18
	DD	imagerel $LN18+100
	DD	imagerel $unwind$?write_indent@dump_context_t@value@crude_json@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z DD imagerel $LN21
	DD	imagerel $LN21+183
	DD	imagerel $unwind$?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gvalue@crude_json@@QEAAPEAXI@Z DD imagerel $LN273
	DD	imagerel $LN273+27
	DD	imagerel $unwind$??_Gvalue@crude_json@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@value@crude_json@@QEAAXAEAU12@@Z DD imagerel $LN390
	DD	imagerel $LN390+532
	DD	imagerel $unwind$?swap@value@crude_json@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@value@crude_json@@QEAAX$$QEAU12@@Z DD imagerel $LN105
	DD	imagerel $LN105+93
	DD	imagerel $unwind$?push_back@value@crude_json@@QEAAX$$QEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN53
	DD	imagerel $LN53+19
	DD	imagerel $unwind$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN53+19
	DD	imagerel $LN53+95
	DD	imagerel $chain$2$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN53+95
	DD	imagerel $LN53+145
	DD	imagerel $chain$3$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN53+145
	DD	imagerel $LN53+153
	DD	imagerel $chain$4$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN50
	DD	imagerel $LN50+15
	DD	imagerel $unwind$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN50+15
	DD	imagerel $LN50+93
	DD	imagerel $chain$2$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN50+93
	DD	imagerel $LN50+141
	DD	imagerel $chain$3$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN50+141
	DD	imagerel $LN50+148
	DD	imagerel $chain$4$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN465
	DD	imagerel $LN465+356
	DD	imagerel $unwind$??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0value@crude_json@@QEAA@AEBU01@@Z DD imagerel $LN27
	DD	imagerel $LN27+120
	DD	imagerel $unwind$??0value@crude_json@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0value@crude_json@@QEAA@$$QEAU01@@Z DD imagerel $LN157
	DD	imagerel $LN157+248
	DD	imagerel $unwind$??0value@crude_json@@QEAA@$$QEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+121
	DD	imagerel $unwind$??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAPEAXI@Z DD imagerel $LN8
	DD	imagerel $LN8+23
	DD	imagerel $unwind$??_G?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN55
	DD	imagerel $LN55+42
	DD	imagerel $unwind$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAPEAXI@Z DD imagerel $LN60
	DD	imagerel $LN60+46
	DD	imagerel $unwind$??_G?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0dump_context_t@value@crude_json@@QEAA@HD@Z DD imagerel $LN6
	DD	imagerel $LN6+40
	DD	imagerel $unwind$??0dump_context_t@value@crude_json@@QEAA@HD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z DD imagerel $LN83
	DD	imagerel $LN83+83
	DD	imagerel $unwind$?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z DD imagerel $LN4
	DD	imagerel $LN4+19
	DD	imagerel $unwind$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@5@@Z DD imagerel $LN4
	DD	imagerel $LN4+19
	DD	imagerel $unwind$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@5@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z DD imagerel $LN126
	DD	imagerel $LN126+208
	DD	imagerel $unwind$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z DD imagerel $LN59
	DD	imagerel $LN59+94
	DD	imagerel $unwind$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@W432@@Z DD imagerel $LN87
	DD	imagerel $LN87+198
	DD	imagerel $unwind$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@W432@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4value@crude_json@@QEAAAEAU01@N@Z DD imagerel $LN93
	DD	imagerel $LN93+153
	DD	imagerel $unwind$??4value@crude_json@@QEAAAEAU01@N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4value@crude_json@@QEAAAEAU01@_N@Z DD imagerel $LN93
	DD	imagerel $LN93+151
	DD	imagerel $unwind$??4value@crude_json@@QEAAAEAU01@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN129
	DD	imagerel $LN129+183
	DD	imagerel $unwind$??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z DD imagerel $LN105
	DD	imagerel $LN105+190
	DD	imagerel $unwind$??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DD imagerel $LN91
	DD	imagerel $LN91+156
	DD	imagerel $unwind$??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DD imagerel $LN148
	DD	imagerel $LN148+230
	DD	imagerel $unwind$??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4value@crude_json@@QEAAAEAU01@$$T@Z DD imagerel $LN168
	DD	imagerel $LN168+147
	DD	imagerel $unwind$??4value@crude_json@@QEAAAEAU01@$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z DD imagerel $LN90
	DD	imagerel $LN90+142
	DD	imagerel $unwind$??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1value@crude_json@@QEAA@XZ DD imagerel $LN86
	DD	imagerel $LN86+86
	DD	imagerel $unwind$??1value@crude_json@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0value@crude_json@@QEAA@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DD imagerel $LN4
	DD	imagerel $LN4+26
	DD	imagerel $unwind$??0value@crude_json@@QEAA@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0value@crude_json@@QEAA@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DD imagerel $LN62
	DD	imagerel $LN62+99
	DD	imagerel $unwind$??0value@crude_json@@QEAA@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0value@crude_json@@QEAA@W4type_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+26
	DD	imagerel $unwind$??0value@crude_json@@QEAA@W4type_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?fpclassify@@YAHN@Z DD imagerel $LN5
	DD	imagerel $LN5+15
	DD	imagerel $unwind$?fpclassify@@YAHN@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$?fpclassify@@YAHN@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0value@crude_json@@QEAA@W4type_t@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0value@crude_json@@QEAA@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0value@crude_json@@QEAA@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1value@crude_json@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z DB 04H
	DB	'&'
	DB	00H
	DB	018H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z DB 02H
	DB	0aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z DB 028H
	DD	imagerel $stateUnwindMap$??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z
	DD	imagerel $ip2state$??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z DD 020611H
	DD	030029206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4value@crude_json@@QEAAAEAU01@$$T@Z DB 04H
	DB	'J'
	DB	02H
	DB	0c6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4value@crude_json@@QEAAAEAU01@$$T@Z DB 02H
	DB	0aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4value@crude_json@@QEAAAEAU01@$$T@Z DB 028H
	DD	imagerel $stateUnwindMap$??4value@crude_json@@QEAAAEAU01@$$T@Z
	DD	imagerel $ip2state$??4value@crude_json@@QEAAAEAU01@$$T@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4value@crude_json@@QEAAAEAU01@$$T@Z DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??4value@crude_json@@QEAAAEAU01@$$T@Z
	DD	04aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DB 06H
	DB	'Z'
	DB	00H
	DB	08cH
	DB	02H
	DB	0c6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DB 02H
	DB	0aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
	DD	imagerel $ip2state$??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DD 041919H
	DD	0e340aH
	DD	07006920aH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
	DD	04aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DB 06H
	DB	':'
	DB	00H
	DB	'"'
	DB	02H
	DB	0c6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DB 02H
	DB	0aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
	DD	imagerel $ip2state$??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
	DD	04aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z DB 04H
	DB	0a0H
	DB	02H
	DB	0c6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z DB 02H
	DB	0aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z
	DD	imagerel $ip2state$??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z
	DD	04aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	092H
	DB	02H
	DB	0c6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 02H
	DB	0aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	04aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4value@crude_json@@QEAAAEAU01@_N@Z DB 04H
	DB	'R'
	DB	02H
	DB	0c6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4value@crude_json@@QEAAAEAU01@_N@Z DB 02H
	DB	0aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4value@crude_json@@QEAAAEAU01@_N@Z DB 028H
	DD	imagerel $stateUnwindMap$??4value@crude_json@@QEAAAEAU01@_N@Z
	DD	imagerel $ip2state$??4value@crude_json@@QEAAAEAU01@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4value@crude_json@@QEAAAEAU01@_N@Z DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??4value@crude_json@@QEAAAEAU01@_N@Z
	DD	04aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4value@crude_json@@QEAAAEAU01@N@Z DB 04H
	DB	'V'
	DB	02H
	DB	0c6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4value@crude_json@@QEAAAEAU01@N@Z DB 02H
	DB	0aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4value@crude_json@@QEAAAEAU01@N@Z DB 028H
	DD	imagerel $stateUnwindMap$??4value@crude_json@@QEAAAEAU01@N@Z
	DD	imagerel $ip2state$??4value@crude_json@@QEAAAEAU01@N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4value@crude_json@@QEAAAEAU01@N@Z DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??4value@crude_json@@QEAAAEAU01@N@Z
	DD	04aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@W432@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z DB 04H
	DB	'L'
	DB	00H
	DB	'L'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z DB 028H
	DD	imagerel $stateUnwindMap$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z
	DD	imagerel $ip2state$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z DD 040a11H
	DD	0a340aH
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@5@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0dump_context_t@value@crude_json@@QEAA@HD@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0value@crude_json@@QEAA@$$QEAU01@@Z DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0value@crude_json@@QEAA@AEBU01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 08H
	DB	'd'
	DB	00H
	DB	0edH, 02H
	DB	02H
	DB	'('
	DB	04H
	DB	0baH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0a1811H
	DD	0116418H
	DD	0105418H
	DD	0f3418H
	DD	0f0149218H
	DD	07010e012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 021H
	DD	imagerel $LN50
	DD	imagerel $LN50+15
	DD	imagerel $unwind$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 040021H
	DD	087400H
	DD	075400H
	DD	imagerel $LN50
	DD	imagerel $LN50+15
	DD	imagerel $unwind$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 061221H
	DD	087412H
	DD	07540aH
	DD	063405H
	DD	imagerel $LN50
	DD	imagerel $LN50+15
	DD	imagerel $unwind$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 020601H
	DD	060023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 021H
	DD	imagerel $LN53
	DD	imagerel $LN53+19
	DD	imagerel $unwind$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 040021H
	DD	087400H
	DD	075400H
	DD	imagerel $LN53
	DD	imagerel $LN53+19
	DD	imagerel $unwind$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 061221H
	DD	087412H
	DD	07540aH
	DD	063405H
	DD	imagerel $LN53
	DD	imagerel $LN53+19
	DD	imagerel $unwind$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 020601H
	DD	060023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@value@crude_json@@QEAAX$$QEAU12@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?swap@value@crude_json@@QEAAXAEAU12@@Z DB 06H
	DB	05H, 04H
	DB	00H
	DB	0a2H
	DB	02H
	DB	0b0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?swap@value@crude_json@@QEAAXAEAU12@@Z DB 02H
	DB	0aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?swap@value@crude_json@@QEAAXAEAU12@@Z DB 028H
	DD	imagerel $stateUnwindMap$?swap@value@crude_json@@QEAAXAEAU12@@Z
	DD	imagerel $ip2state$?swap@value@crude_json@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@value@crude_json@@QEAAXAEAU12@@Z DD 041919H
	DD	0e340aH
	DD	07006920aH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?swap@value@crude_json@@QEAAXAEAU12@@Z
	DD	04aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_Gvalue@crude_json@@QEAAPEAXI@Z DB 02H
	DB	018H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_Gvalue@crude_json@@QEAAPEAXI@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_Gvalue@crude_json@@QEAAPEAXI@Z DB 068H
	DD	imagerel $stateUnwindMap$??_Gvalue@crude_json@@QEAAPEAXI@Z
	DD	imagerel $ip2state$??_Gvalue@crude_json@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gvalue@crude_json@@QEAAPEAXI@Z DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_Gvalue@crude_json@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z DB 06H
	DB	'^'
	DB	00H
	DB	'l'
	DB	02H
	DB	'H'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z DB 02H
	DB	0aH
	DD	imagerel ??1dump_context_t@value@crude_json@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z DB 028H
	DD	imagerel $stateUnwindMap$?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z
	DD	imagerel $ip2state$?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z DD 051f19H
	DD	02a340dH
	DD	026010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z
	DD	0122H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?write_indent@dump_context_t@value@crude_json@@QEAAXH@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z DD 021H
	DD	imagerel $LN342
	DD	imagerel $LN342+141
	DD	imagerel $unwind$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z DD 021H
	DD	imagerel $LN342+141
	DD	imagerel $LN342+206
	DD	imagerel $chain$2$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z DD 020821H
	DD	026f408H
	DD	imagerel $LN342+141
	DD	imagerel $LN342+206
	DD	imagerel $chain$2$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z DD 061f21H
	DD	027e41fH
	DD	0286417H
	DD	0315408H
	DD	imagerel $LN342
	DD	imagerel $LN342+141
	DD	imagerel $unwind$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z DD 062019H
	DD	029010eH
	DD	0c005d007H
	DD	030027003H
	DD	imagerel __GSHandlerCheck
	DD	0120H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??parse@parser@value@crude_json@@QEAA?AU23@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?parse@parser@value@crude_json@@QEAA?AU23@XZ DB 04H
	DB	088H
	DB	02H
	DB	'D'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?parse@parser@value@crude_json@@QEAA?AU23@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??parse@parser@value@crude_json@@QEAA?AU23@XZ@4HA
	DB	02aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?parse@parser@value@crude_json@@QEAA?AU23@XZ DB 028H
	DD	imagerel $stateUnwindMap$?parse@parser@value@crude_json@@QEAA?AU23@XZ
	DD	imagerel $ip2state$?parse@parser@value@crude_json@@QEAA?AU23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?parse@parser@value@crude_json@@QEAA?AU23@XZ DD 060f11H
	DD	011640fH
	DD	010340fH
	DD	0700bb20fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?parse@parser@value@crude_json@@QEAA?AU23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_value@parser@value@crude_json@@AEAA_NAEAU23@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z DB 0eH
	DB	'r'
	DB	00H
	DB	0e8H
	DB	02H
	DB	01eH
	DB	04H
	DB	084H
	DB	02H
	DB	0d5H, 02H
	DB	04H
	DB	01aH
	DB	02H
	DB	'!', 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ
	DB	040H
	DB	032H
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z DB 028H
	DD	imagerel $stateUnwindMap$?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z
	DD	imagerel $ip2state$?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z DD 082319H
	DD	0136415H
	DD	0123415H
	DD	0e00eb215H
	DD	0500b700cH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z
	DD	05aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_members@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DD 062901H
	DD	063429H
	DD	07640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DB 0cH
	DB	0a0H
	DB	04H
	DB	'5', 05H
	DB	06H
	DB	'*'
	DB	08H
	DB	'p'
	DB	0aH
	DB	'm', 03H
	DB	00H
	DB	'@'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DB 0aH
	DB	0aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	0b0H
	DB	032H
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	01H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	060H
	DB	06aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	060H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
	DD	imagerel $ip2state$?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z DD 0b2a19H
	DD	020341cH
	DD	016011cH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
	DD	0aaH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z DB 06H
	DB	'E', 02H
	DB	02H
	DB	0a6H
	DB	04H
	DB	084H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ
	DB	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z DB 028H
	DD	imagerel $stateUnwindMap$?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z
	DD	imagerel $ip2state$?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z DD 061e19H
	DD	011640fH
	DD	010340fH
	DD	0700bb20fH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z
	DD	052H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z DB 08H
	DB	'n'
	DB	02H
	DB	080H
	DB	04H
	DB	01cH
	DB	02H
	DB	081H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z DB 04H
	DB	0aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	040H
	DB	032H
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z
	DD	imagerel $ip2state$?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z DD 082619H
	DD	0176418H
	DD	0163418H
	DD	0e00ef218H
	DD	0500b700cH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z
	DD	072H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA?A_T$$QEAUvalue@crude_json@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_element@parser@value@crude_json@@AEAA_NAEAU23@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z DB 08H
	DB	0adH, 02H
	DB	02H
	DB	0adH, 03H
	DB	04H
	DB	01aH
	DB	02H
	DB	'u', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
	DB	032H
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z DB 028H
	DD	imagerel $stateUnwindMap$?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z
	DD	imagerel $ip2state$?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z DD 082619H
	DD	0176418H
	DD	0163418H
	DD	0e00ef218H
	DD	0500b700cH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z
	DD	07aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_characters@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 040a01H
	DD	0a340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z DB 04H
	DB	0f1H, 05H
	DB	02H
	DB	085H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z DB 028H
	DD	imagerel $stateUnwindMap$?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z
	DD	imagerel $ip2state$?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z DD 061b19H
	DD	010340cH
	DD	07008920cH
	DD	050066007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z
	DD	04aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_hex@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z DB 08H
	DB	0acH
	DB	02H
	DB	0beH
	DB	04H
	DB	0a9H, 02H
	DB	02H
	DB	05H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	070H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0b0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z DB 028H
	DD	imagerel $stateUnwindMap$?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z
	DD	imagerel $ip2state$?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z DD 0b2e19H
	DD	086820H
	DD	01a3418H
	DD	0120118H
	DD	0e00af00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z
	DD	07aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	0fcH
	DB	02H
	DB	'Q', 08H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 061d19H
	DD	010340fH
	DD	07008920fH
	DD	050066007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	042H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	'u', 04H
	DB	02H
	DB	'Y', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 062019H
	DD	0f7412H
	DD	0e3412H
	DD	0500b9212H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	042H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_digit@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_onenine@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	0f0H
	DB	02H
	DB	0d4H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 061e19H
	DD	0f640fH
	DD	0e340fH
	DD	0700b920fH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	042H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	0f0H
	DB	02H
	DB	'A', 04H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 061e19H
	DD	0f640fH
	DD	0e340fH
	DD	0700b920fH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	042H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_sign@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_ws@parser@value@crude_json@@AEAA_NXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_boolean@parser@value@crude_json@@AEAA_NAEAU23@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?accept_null@parser@value@crude_json@@AEAA_NAEAU23@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	0ecH
	DB	02H
	DB	'J'
	DB	04H
	DB	09H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02aH
	DD	imagerel ??1value@crude_json@@QEAA@XZ
	DB	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 041919H
	DD	011340aH
	DD	07006d20aH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	06aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEGBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	'^'
	DB	00H
	DB	'8'
	DB	02H
	DB	'\'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 041311H
	DD	083413H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z DB 06H
	DB	0a4H
	DB	00H
	DB	'T'
	DB	02H
	DB	'8'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z DD 060f11H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 06H
	DB	0a5H, 02H
	DB	02H
	DB	'('
	DB	04H
	DB	0acH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	imagerel $ip2state$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0a1811H
	DD	0116418H
	DD	0105418H
	DD	0f3418H
	DD	0f0149218H
	DD	07010e012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@$$QEAV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z DB 04H
	DB	'V'
	DB	00H
	DB	'L'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z DD 040a11H
	DD	0a340aH
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z DD 051f19H
	DD	028340dH
	DD	026010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0120H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@CAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ DB 02H
	DB	'R'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ DB 068H
	DD	imagerel $stateUnwindMap$?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ
	DD	imagerel $ip2state$?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ DD 060f19H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z DB 02H
	DB	08cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z
	DD	imagerel $ip2state$?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z DD 0a1911H
	DD	0b7419H
	DD	0a6419H
	DD	093419H
	DD	0f0153219H
	DD	0c011e013H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@Uvalue@crude_json@@@std@@QEAAPEAUvalue@crude_json@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@Uvalue@crude_json@@@std@@QEAAXQEAUvalue@crude_json@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 06H
	DB	'=', 03H
	DB	02H
	DB	090H
	DB	06H
	DB	0a2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
	DD	imagerel $ip2state$??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DD 091111H
	DD	0f00dc211H
	DD	0d009e00bH
	DD	07005c007H
	DD	050036004H
	DD	03002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_one_at_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$isnormal@N@@YA_NN@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z DB 04H
	DB	092H
	DB	02H
	DB	'D'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z DD 061e19H
	DD	0c640fH
	DD	0b340fH
	DD	0700b720fH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z
	DD	03aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z DB 04H
	DB	092H
	DB	02H
	DB	'D'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z DD 061e19H
	DD	0c640fH
	DD	0b340fH
	DD	0700b720fH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z
	DD	03aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z DB 02H
	DB	'6'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z DB 068H
	DD	imagerel $stateUnwindMap$??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z DD 040f19H
	DD	06340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z DB 06H
	DB	'j'
	DB	00H
	DB	'R'
	DB	02H
	DB	'>'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Tidy_guard@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z
	DD	imagerel $ip2state$??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z DD 081a11H
	DD	09741aH
	DD	08641aH
	DD	07341aH
	DD	0e016321aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 06H
	DB	0c9H, 02H
	DB	02H
	DB	'('
	DB	04H
	DB	0b0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	imagerel $ip2state$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0a1611H
	DD	0135416H
	DD	0123416H
	DD	0f0129216H
	DD	0c00ee010H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DB 04H
	DB	'L'
	DB	00H
	DB	'L'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
	DD	imagerel $ip2state$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DD 040a11H
	DD	0a340aH
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_first_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z DD 072419H
	DD	0296412H
	DD	0283412H
	DD	0260112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck
	DD	0120H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_ch@U?$char_traits@D@std@@@std@@YA_KQEBD_K1D@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z DB 02H
	DB	014H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z
	DD	imagerel $ip2state$??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z DD 010411H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	':'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD 040a19H
	DD	07340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ DB 02H
	DB	'L'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ DD 040a19H
	DD	06340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 06H
	DB	'Q', 03H
	DB	02H
	DB	090H
	DB	06H
	DB	09aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
	DD	imagerel $ip2state$??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DD 091111H
	DD	0f00dc211H
	DD	0d009e00bH
	DD	07005c007H
	DD	050036004H
	DD	03002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z DB 06H
	DB	08dH, 02H
	DB	00H
	DB	'b'
	DB	02H
	DB	086H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z DD 081419H
	DD	0f0105214H
	DD	0d00ce00eH
	DD	07008c00aH
	DD	030066007H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEAUvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAXAEAUvalue@crude_json@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@Uvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 04H
	DB	'd'
	DB	02H
	DB	'0'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 06H
	DB	0cH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03cH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
	DD	imagerel $ip2state$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DD 060f11H
	DD	0a640fH
	DD	09340fH
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z DB 02H
	DB	'x'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z DB 068H
	DD	imagerel $stateUnwindMap$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z
	DD	imagerel $ip2state$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z DD 060b19H
	DD	0e007320bH
	DD	060047005H
	DD	030025003H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_find_first_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z DB 02H
	DB	0eH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z DB 068H
	DD	imagerel $stateUnwindMap$??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z
	DD	imagerel $ip2state$??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DB 02H
	DB	' '
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
	DD	imagerel $ip2state$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DD 020611H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z DB 02H
	DB	'('
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z DB 068H
	DD	imagerel $stateUnwindMap$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z
	DD	imagerel $ip2state$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z DD 040a19H
	DD	06340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DB 02H
	DB	'2'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
	DD	imagerel $ip2state$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 04H
	DB	'b'
	DB	02H
	DB	088H
	DB	06H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 06H
	DB	0cH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03cH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
	DD	imagerel $ip2state$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DD 081211H
	DD	0c5412H
	DD	0b3412H
	DD	0e00e5212H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
	DD	imagerel $ip2state$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DD 020611H
	DD	030025206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z DB 0aH
	DB	08aH
	DB	02H
	DB	'F'
	DB	04H
	DB	01cH
	DB	02H
	DB	'b'
	DB	06H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z DB 02H
	DB	04H
	DB	04H
	DB	06H
	DD	imagerel $handlerMap$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z DB 08H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	060H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
	DB	068H
	DB	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z
	DD	imagerel $tryMap$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z
	DD	imagerel $ip2state$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z DD 0a1719H
	DD	0116417H
	DD	0103417H
	DD	0f0137217H
	DD	0d00fe011H
	DD	0700bc00dH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z DB 02H
	DB	' '
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z DB 068H
	DD	imagerel $stateUnwindMap$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z
	DD	imagerel $ip2state$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ DB 02H
	DB	' '
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z DB 02H
	DB	' '
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z DB 068H
	DD	imagerel $stateUnwindMap$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z
	DD	imagerel $ip2state$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 02H
	DB	088H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
	DD	imagerel $ip2state$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DD 010911H
	DD	04209H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DB 02H
	DB	018H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
	DD	imagerel $ip2state$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DD 020611H
	DD	030025206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DB 06H
	DB	'Z'
	DB	02H
	DB	'D'
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
	DD	imagerel $ip2state$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DD 081411H
	DD	0d6414H
	DD	0c5414H
	DD	0a3414H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z DB 02H
	DB	'x'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z DB 068H
	DD	imagerel $stateUnwindMap$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z
	DD	imagerel $ip2state$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z DD 060b19H
	DD	0e007320bH
	DD	060047005H
	DD	030025003H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DB 02H
	DB	018H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
	DD	imagerel $ip2state$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DD 020611H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z DB 02H
	DB	082H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z
	DD	imagerel $ip2state$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z DD 020611H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DB 06H
	DB	'Z'
	DB	02H
	DB	'D'
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
	DD	imagerel $ip2state$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DD 081411H
	DD	0d6414H
	DD	0c5414H
	DD	0a3414H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 02H
	DB	080H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
	DD	imagerel $ip2state$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DB 02H
	DB	018H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
	DD	imagerel $ip2state$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DD 020611H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DB 06H
	DB	'Z'
	DB	02H
	DB	'D'
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
	DD	imagerel $ip2state$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z DD 081411H
	DD	0d6414H
	DD	0b5414H
	DD	0a3414H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z DB 04H
	DB	'@'
	DB	00H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z
	DD	imagerel $ip2state$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z DB 04H
	DB	'*'
	DB	00H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z
	DD	imagerel $ip2state$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z DD 040a11H
	DD	07340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z DB 04H
	DB	'*'
	DB	00H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z
	DD	imagerel $ip2state$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
;	COMDAT ?fpclassify@@YAHN@Z
_TEXT	SEGMENT
_X$ = 48
?fpclassify@@YAHN@Z PROC				; fpclassify, COMDAT

; 300  :     {

$LN5:
	sub	rsp, 40					; 00000028H

; 301  :         return _dtest(&_X);

	call	_dclass
	cwde

; 302  :     }

	add	rsp, 40					; 00000028H
	ret	0
?fpclassify@@YAHN@Z ENDP				; fpclassify
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base0@std@@QEBAPEBU_Container_base0@2@XZ
_TEXT	SEGMENT
this$dead$ = 8
?_Getcont@_Iterator_base0@std@@QEBAPEBU_Container_base0@2@XZ PROC ; std::_Iterator_base0::_Getcont, COMDAT

; 1177 :         return nullptr;

	xor	eax, eax

; 1178 :     }

	ret	0
?_Getcont@_Iterator_base0@std@@QEBAPEBU_Container_base0@2@XZ ENDP ; std::_Iterator_base0::_Getcont
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ios
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ios
;	COMDAT ?defaultfloat@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 8
?defaultfloat@std@@YAAEAVios_base@1@AEAV21@@Z PROC	; std::defaultfloat, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase

; 275  :         _Fmtfl &= ~_Mask;

	and	DWORD PTR [rcx+24], -12289		; ffffffffffffcfffH
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ios

; 197  :     return _Iosbase;

	mov	rax, rcx

; 198  : }

	ret	0
?defaultfloat@std@@YAAEAVios_base@1@AEAV21@@Z ENDP	; std::defaultfloat
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??0value@crude_json@@QEAA@W4type_t@1@@Z
_TEXT	SEGMENT
this$ = 48
type$ = 56
??0value@crude_json@@QEAA@W4type_t@1@@Z PROC		; crude_json::value::value, COMDAT

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@W432@@Z ; crude_json::value::construct
	mov	DWORD PTR [rbx+32], eax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0value@crude_json@@QEAA@W4type_t@1@@Z ENDP		; crude_json::value::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??0value@crude_json@@QEAA@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
??0value@crude_json@@QEAA@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z PROC ; crude_json::value::value, COMDAT

; 62   :     value(      object&& v): m_Type(construct(m_Storage, std::move(v))) {}

$LN62:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 62   :     value(      object&& v): m_Type(construct(m_Storage, std::move(v))) {}

	mov	rdi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 62   :     value(      object&& v): m_Type(construct(m_Storage, std::move(v))) {}

	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+104]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rdi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

	mov	rcx, QWORD PTR [rbx]
	mov	QWORD PTR [rdi], rcx

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rbx], rax

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rdi+8], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 62   :     value(      object&& v): m_Type(construct(m_Storage, std::move(v))) {}

	mov	rax, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rbx+8], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 62   :     value(      object&& v): m_Type(construct(m_Storage, std::move(v))) {}

	mov	rbx, QWORD PTR [rsp+48]
	mov	DWORD PTR [rdi+32], 1
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0value@crude_json@@QEAA@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ENDP ; crude_json::value::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??0value@crude_json@@QEAA@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
v$ = 56
??0value@crude_json@@QEAA@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z PROC ; crude_json::value::value, COMDAT

; 63   :     value(const object&  v): m_Type(construct(m_Storage,           v))  {}

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z ; crude_json::value::construct
	mov	DWORD PTR [rbx+32], eax
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0value@crude_json@@QEAA@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ENDP ; crude_json::value::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??0value@crude_json@@QEAA@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z
_TEXT	SEGMENT
this$ = 8
v$ = 16
??0value@crude_json@@QEAA@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z PROC ; crude_json::value::value, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rdx]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r10d, r10d
	mov	r9, QWORD PTR [rdx+16]

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rdx+8]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdx+16], r10
	mov	QWORD PTR [rdx+8], r10
	mov	QWORD PTR [rdx], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 64   :     value(      array&&  v): m_Type(construct(m_Storage, std::move(v))) {}

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx+8], r8
	mov	QWORD PTR [rcx+16], r9
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 64   :     value(      array&&  v): m_Type(construct(m_Storage, std::move(v))) {}

	mov	DWORD PTR [rcx+32], 2
	ret	0
??0value@crude_json@@QEAA@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z ENDP ; crude_json::value::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??0value@crude_json@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 8
v$ = 16
??0value@crude_json@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::value, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	eax, eax
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR [rcx+16], rax

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rcx+24], rax

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rcx+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 66   :     value(      string&& v): m_Type(construct(m_Storage, std::move(v))) {}

	mov	QWORD PTR [rdx+16], rax
	mov	QWORD PTR [rdx+24], 15
	mov	BYTE PTR [rdx], al
	mov	rax, rcx
	mov	DWORD PTR [rcx+32], 3
	ret	0
??0value@crude_json@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??0value@crude_json@@QEAA@_N@Z
_TEXT	SEGMENT
this$ = 8
v$ = 16
??0value@crude_json@@QEAA@_N@Z PROC			; crude_json::value::value, COMDAT

; 186  :     static type_t construct(storage_t& storage,       boolean  value) { new (&storage) boolean(value);                        return type_t::boolean; }

	mov	BYTE PTR [rcx], dl

; 69   :     value(      boolean  v): m_Type(construct(m_Storage,           v))  {}

	mov	rax, rcx
	mov	DWORD PTR [rcx+32], 4
	ret	0
??0value@crude_json@@QEAA@_N@Z ENDP			; crude_json::value::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??0value@crude_json@@QEAA@N@Z
_TEXT	SEGMENT
this$ = 8
v$ = 16
??0value@crude_json@@QEAA@N@Z PROC			; crude_json::value::value, COMDAT

; 187  :     static type_t construct(storage_t& storage,       number   value) { new (&storage)  number(value);                        return type_t::number;  }

	movsd	QWORD PTR [rcx], xmm1

; 70   :     value(      number   v): m_Type(construct(m_Storage,           v))  {}

	mov	rax, rcx
	mov	DWORD PTR [rcx+32], 5
	ret	0
??0value@crude_json@@QEAA@N@Z ENDP			; crude_json::value::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??1value@crude_json@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1value@crude_json@@QEAA@XZ PROC			; crude_json::value::~value, COMDAT

; 71   :     ~value() { destruct(m_Storage, m_Type); }

$LN86:
	push	rbx
	sub	rsp, 32					; 00000020H

; 191  :         switch (type)

	mov	edx, DWORD PTR [rcx+32]

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	rbx, rcx

; 191  :         switch (type)

	sub	edx, 1
	je	SHORT $LN6@value
	sub	edx, 1
	je	SHORT $LN7@value
	cmp	edx, 1
	jne	SHORT $LN12@value

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN7@value:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
$LN6@value:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rbx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 104				; 00000068H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN12@value:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1value@crude_json@@QEAA@XZ ENDP			; crude_json::value::~value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 96
other$ = 104
??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z PROC	; crude_json::value::operator=, COMDAT

; 73   :     value& operator=(value&& other)      { if (this != &other) { value(std::move(other)).swap(*this); } return *this; }

$LN90:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rbx, rcx
	cmp	rcx, rdx
	je	SHORT $LN86@operator
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
	npad	1
	mov	rdx, rbx
	mov	rcx, rax
	call	?swap@value@crude_json@@QEAAXAEAU12@@Z	; crude_json::value::swap
	npad	1

; 191  :         switch (type)

	mov	eax, DWORD PTR $T1[rsp+32]
	sub	eax, 1
	je	SHORT $LN10@operator
	sub	eax, 1
	je	SHORT $LN11@operator
	cmp	eax, 1
	jne	SHORT $LN86@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T1[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 73   :     value& operator=(value&& other)      { if (this != &other) { value(std::move(other)).swap(*this); } return *this; }

	mov	rax, rbx
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
$LN11@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR $T1[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 73   :     value& operator=(value&& other)      { if (this != &other) { value(std::move(other)).swap(*this); } return *this; }

	mov	rax, rbx
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
$LN10@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR $T1[rsp]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR $T1[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN86@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 73   :     value& operator=(value&& other)      { if (this != &other) { value(std::move(other)).swap(*this); } return *this; }

	mov	rax, rbx
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z ENDP	; crude_json::value::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 96
other$ = 104
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z@4HA PROC ; `crude_json::value::operator='::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z@4HA ENDP ; `crude_json::value::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??4value@crude_json@@QEAAAEAU01@$$T@Z
_TEXT	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
__formal$dead$ = 104
??4value@crude_json@@QEAAAEAU01@$$T@Z PROC		; crude_json::value::operator=, COMDAT

; 76   :     value& operator=(      null)       { auto other = value(           );  swap(other); return *this; }

$LN168:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR other$[rsp+32], 0

; 76   :     value& operator=(      null)       { auto other = value(           );  swap(other); return *this; }

	lea	rdx, QWORD PTR other$[rsp]
	call	?swap@value@crude_json@@QEAAXAEAU12@@Z	; crude_json::value::swap
	npad	1

; 191  :         switch (type)

	mov	edx, DWORD PTR other$[rsp+32]
	sub	edx, 1
	je	SHORT $LN89@operator
	sub	edx, 1
	je	SHORT $LN90@operator
	cmp	edx, 1
	jne	SHORT $LN165@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN165@operator
$LN90@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN165@operator
$LN89@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR other$[rsp]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR other$[rsp]
	lea	rcx, QWORD PTR other$[rsp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR other$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN165@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 76   :     value& operator=(      null)       { auto other = value(           );  swap(other); return *this; }

	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
??4value@crude_json@@QEAAAEAU01@$$T@Z ENDP		; crude_json::value::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
__formal$dead$ = 104
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@$$T@Z@4HA PROC ; `crude_json::value::operator='::`1'::dtor$0
	lea	rcx, QWORD PTR other$[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@$$T@Z@4HA ENDP ; `crude_json::value::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
v$ = 104
??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z PROC ; crude_json::value::operator=, COMDAT

; 77   :     value& operator=(      object&& v) { auto other = value(std::move(v)); swap(other); return *this; }

$LN148:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rdx
	mov	rdi, rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	movdqu	XMMWORD PTR other$[rsp], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rbx]
	mov	QWORD PTR other$[rsp], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rbx], rcx

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	rcx, QWORD PTR other$[rsp+8]

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rbx+8]
	mov	QWORD PTR other$[rsp+8], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rbx+8], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 62   :     value(      object&& v): m_Type(construct(m_Storage, std::move(v))) {}

	mov	DWORD PTR other$[rsp+32], 1

; 77   :     value& operator=(      object&& v) { auto other = value(std::move(v)); swap(other); return *this; }

	lea	rdx, QWORD PTR other$[rsp]
	mov	rcx, rdi
	call	?swap@value@crude_json@@QEAAXAEAU12@@Z	; crude_json::value::swap
	npad	1

; 191  :         switch (type)

	mov	edx, DWORD PTR other$[rsp+32]
	sub	edx, 1
	je	SHORT $LN68@operator
	sub	edx, 1
	je	SHORT $LN69@operator
	cmp	edx, 1
	jne	SHORT $LN145@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN145@operator
$LN69@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN145@operator
$LN68@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR other$[rsp]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR other$[rsp]
	lea	rcx, QWORD PTR other$[rsp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR other$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN145@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 77   :     value& operator=(      object&& v) { auto other = value(std::move(v)); swap(other); return *this; }

	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+112]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ENDP ; crude_json::value::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
v$ = 104
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA PROC ; `crude_json::value::operator='::`1'::dtor$0
	lea	rcx, QWORD PTR other$[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA ENDP ; `crude_json::value::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
v$ = 104
??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z PROC ; crude_json::value::operator=, COMDAT

; 78   :     value& operator=(const object&  v) { auto other = value(          v);  swap(other); return *this; }

$LN91:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx

; 63   :     value(const object&  v): m_Type(construct(m_Storage,           v))  {}

	lea	rcx, QWORD PTR other$[rsp]
	call	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z ; crude_json::value::construct
	mov	DWORD PTR other$[rsp+32], eax

; 78   :     value& operator=(const object&  v) { auto other = value(          v);  swap(other); return *this; }

	lea	rdx, QWORD PTR other$[rsp]
	mov	rcx, rbx
	call	?swap@value@crude_json@@QEAAXAEAU12@@Z	; crude_json::value::swap
	npad	1

; 191  :         switch (type)

	mov	edx, DWORD PTR other$[rsp+32]
	sub	edx, 1
	je	SHORT $LN11@operator
	sub	edx, 1
	je	SHORT $LN12@operator
	cmp	edx, 1
	jne	SHORT $LN88@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN88@operator
$LN12@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN88@operator
$LN11@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR other$[rsp]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR other$[rsp]
	lea	rcx, QWORD PTR other$[rsp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR other$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN88@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 78   :     value& operator=(const object&  v) { auto other = value(          v);  swap(other); return *this; }

	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
??4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ENDP ; crude_json::value::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
v$ = 104
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA PROC ; `crude_json::value::operator='::`1'::dtor$0
	lea	rcx, QWORD PTR other$[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA ENDP ; `crude_json::value::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z
_TEXT	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
v$ = 104
??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z PROC ; crude_json::value::operator=, COMDAT

; 79   :     value& operator=(      array&&  v) { auto other = value(std::move(v)); swap(other); return *this; }

$LN105:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rdx+16]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r9d, r9d
	mov	QWORD PTR [rdx+16], r9

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rcx, QWORD PTR [rdx+8]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdx+8], r9

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rdx]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdx], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR other$[rsp], rax
	mov	QWORD PTR other$[rsp+8], rcx
	mov	QWORD PTR other$[rsp+16], r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 64   :     value(      array&&  v): m_Type(construct(m_Storage, std::move(v))) {}

	mov	DWORD PTR other$[rsp+32], 2

; 79   :     value& operator=(      array&&  v) { auto other = value(std::move(v)); swap(other); return *this; }

	lea	rdx, QWORD PTR other$[rsp]
	mov	rcx, rbx
	call	?swap@value@crude_json@@QEAAXAEAU12@@Z	; crude_json::value::swap
	npad	1

; 191  :         switch (type)

	mov	edx, DWORD PTR other$[rsp+32]
	sub	edx, 1
	je	SHORT $LN25@operator
	sub	edx, 1
	je	SHORT $LN26@operator
	cmp	edx, 1
	jne	SHORT $LN102@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN102@operator
$LN26@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN102@operator
$LN25@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR other$[rsp]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR other$[rsp]
	lea	rcx, QWORD PTR other$[rsp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR other$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN102@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 79   :     value& operator=(      array&&  v) { auto other = value(std::move(v)); swap(other); return *this; }

	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z ENDP ; crude_json::value::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
v$ = 104
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z@4HA PROC ; `crude_json::value::operator='::`1'::dtor$0
	lea	rcx, QWORD PTR other$[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z@4HA ENDP ; `crude_json::value::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
v$ = 104
??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::operator=, COMDAT

; 81   :     value& operator=(      string&& v) { auto other = value(std::move(v)); swap(other); return *this; }

$LN129:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR [rdx]
	movups	XMMWORD PTR other$[rsp], xmm1
	movups	xmm0, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR other$[rsp+16], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 66   :     value(      string&& v): m_Type(construct(m_Storage, std::move(v))) {}

	mov	QWORD PTR [rdx+16], 0
	mov	QWORD PTR [rdx+24], 15
	mov	BYTE PTR [rdx], 0
	mov	DWORD PTR other$[rsp+32], 3

; 81   :     value& operator=(      string&& v) { auto other = value(std::move(v)); swap(other); return *this; }

	lea	rdx, QWORD PTR other$[rsp]
	call	?swap@value@crude_json@@QEAAXAEAU12@@Z	; crude_json::value::swap
	npad	1

; 191  :         switch (type)

	mov	edx, DWORD PTR other$[rsp+32]
	sub	edx, 1
	je	SHORT $LN43@operator
	sub	edx, 1
	je	SHORT $LN44@operator
	cmp	edx, 1
	jne	SHORT $LN126@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN126@operator
$LN44@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN126@operator
$LN43@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR other$[rsp]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR other$[rsp]
	lea	rcx, QWORD PTR other$[rsp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR other$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN126@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 81   :     value& operator=(      string&& v) { auto other = value(std::move(v)); swap(other); return *this; }

	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
??4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
v$ = 104
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `crude_json::value::operator='::`1'::dtor$0
	lea	rcx, QWORD PTR other$[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `crude_json::value::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??4value@crude_json@@QEAAAEAU01@_N@Z
_TEXT	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
v$ = 104
??4value@crude_json@@QEAAAEAU01@_N@Z PROC		; crude_json::value::operator=, COMDAT

; 84   :     value& operator=(      boolean  v) { auto other = value(          v);  swap(other); return *this; }

$LN93:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx

; 186  :     static type_t construct(storage_t& storage,       boolean  value) { new (&storage) boolean(value);                        return type_t::boolean; }

	mov	BYTE PTR other$[rsp], dl

; 69   :     value(      boolean  v): m_Type(construct(m_Storage,           v))  {}

	mov	DWORD PTR other$[rsp+32], 4

; 84   :     value& operator=(      boolean  v) { auto other = value(          v);  swap(other); return *this; }

	lea	rdx, QWORD PTR other$[rsp]
	call	?swap@value@crude_json@@QEAAXAEAU12@@Z	; crude_json::value::swap
	npad	1

; 191  :         switch (type)

	mov	edx, DWORD PTR other$[rsp+32]
	sub	edx, 1
	je	SHORT $LN13@operator
	sub	edx, 1
	je	SHORT $LN14@operator
	cmp	edx, 1
	jne	SHORT $LN90@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN90@operator
$LN14@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN90@operator
$LN13@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR other$[rsp]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR other$[rsp]
	lea	rcx, QWORD PTR other$[rsp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR other$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN90@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 84   :     value& operator=(      boolean  v) { auto other = value(          v);  swap(other); return *this; }

	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
??4value@crude_json@@QEAAAEAU01@_N@Z ENDP		; crude_json::value::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
v$ = 104
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@_N@Z@4HA PROC ; `crude_json::value::operator='::`1'::dtor$0
	lea	rcx, QWORD PTR other$[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@_N@Z@4HA ENDP ; `crude_json::value::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??4value@crude_json@@QEAAAEAU01@N@Z
_TEXT	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
v$ = 104
??4value@crude_json@@QEAAAEAU01@N@Z PROC		; crude_json::value::operator=, COMDAT

; 85   :     value& operator=(      number   v) { auto other = value(          v);  swap(other); return *this; }

$LN93:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx

; 187  :     static type_t construct(storage_t& storage,       number   value) { new (&storage)  number(value);                        return type_t::number;  }

	movsd	QWORD PTR other$[rsp], xmm1

; 70   :     value(      number   v): m_Type(construct(m_Storage,           v))  {}

	mov	DWORD PTR other$[rsp+32], 5

; 85   :     value& operator=(      number   v) { auto other = value(          v);  swap(other); return *this; }

	lea	rdx, QWORD PTR other$[rsp]
	call	?swap@value@crude_json@@QEAAXAEAU12@@Z	; crude_json::value::swap
	npad	1

; 191  :         switch (type)

	mov	edx, DWORD PTR other$[rsp+32]
	sub	edx, 1
	je	SHORT $LN13@operator
	sub	edx, 1
	je	SHORT $LN14@operator
	cmp	edx, 1
	jne	SHORT $LN90@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN90@operator
$LN14@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR other$[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN90@operator
$LN13@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR other$[rsp]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR other$[rsp]
	lea	rcx, QWORD PTR other$[rsp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR other$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN90@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 85   :     value& operator=(      number   v) { auto other = value(          v);  swap(other); return *this; }

	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
??4value@crude_json@@QEAAAEAU01@N@Z ENDP		; crude_json::value::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
other$ = 32
__$ArrayPad$ = 72
this$ = 96
v$ = 104
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@N@Z@4HA PROC	; `crude_json::value::operator='::`1'::dtor$0
	lea	rcx, QWORD PTR other$[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$0@?0???4value@crude_json@@QEAAAEAU01@N@Z@4HA ENDP	; `crude_json::value::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?is_structured@value@crude_json@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?is_structured@value@crude_json@@QEBA_NXZ PROC		; crude_json::value::is_structured, COMDAT

; 106  :     bool is_object()     const { return m_Type == type_t::object;    }

	mov	eax, DWORD PTR [rcx+32]
	dec	eax
	cmp	eax, 1
	setbe	al

; 104  :     bool is_structured() const { return is_object() || is_array();   }

	ret	0
?is_structured@value@crude_json@@QEBA_NXZ ENDP		; crude_json::value::is_structured
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?is_null@value@crude_json@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?is_null@value@crude_json@@QEBA_NXZ PROC		; crude_json::value::is_null, COMDAT

; 105  :     bool is_null()       const { return m_Type == type_t::null;      }

	cmp	DWORD PTR [rcx+32], 0
	sete	al
	ret	0
?is_null@value@crude_json@@QEBA_NXZ ENDP		; crude_json::value::is_null
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?is_object@value@crude_json@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?is_object@value@crude_json@@QEBA_NXZ PROC		; crude_json::value::is_object, COMDAT

; 106  :     bool is_object()     const { return m_Type == type_t::object;    }

	cmp	DWORD PTR [rcx+32], 1
	sete	al
	ret	0
?is_object@value@crude_json@@QEBA_NXZ ENDP		; crude_json::value::is_object
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?is_array@value@crude_json@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?is_array@value@crude_json@@QEBA_NXZ PROC		; crude_json::value::is_array, COMDAT

; 107  :     bool is_array()      const { return m_Type == type_t::array;     }

	cmp	DWORD PTR [rcx+32], 2
	sete	al
	ret	0
?is_array@value@crude_json@@QEBA_NXZ ENDP		; crude_json::value::is_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?object_ptr@value@crude_json@@CAPEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAT?$_Align_type@N$0CA@@4@@Z
_TEXT	SEGMENT
storage$ = 8
?object_ptr@value@crude_json@@CAPEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAT?$_Align_type@N$0CA@@4@@Z PROC ; crude_json::value::object_ptr, COMDAT

; 152  :     static       object*   object_ptr(      storage_t& storage) { return reinterpret_cast<       object*>(&storage); }

	mov	rax, rcx
	ret	0
?object_ptr@value@crude_json@@CAPEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAT?$_Align_type@N$0CA@@4@@Z ENDP ; crude_json::value::object_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?object_ptr@value@crude_json@@CAPEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEBT?$_Align_type@N$0CA@@4@@Z
_TEXT	SEGMENT
storage$ = 8
?object_ptr@value@crude_json@@CAPEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEBT?$_Align_type@N$0CA@@4@@Z PROC ; crude_json::value::object_ptr, COMDAT

; 153  :     static const object*   object_ptr(const storage_t& storage) { return reinterpret_cast<const  object*>(&storage); }

	mov	rax, rcx
	ret	0
?object_ptr@value@crude_json@@CAPEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEBT?$_Align_type@N$0CA@@4@@Z ENDP ; crude_json::value::object_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?array_ptr@value@crude_json@@CAPEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAT?$_Align_type@N$0CA@@4@@Z
_TEXT	SEGMENT
storage$ = 8
?array_ptr@value@crude_json@@CAPEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAT?$_Align_type@N$0CA@@4@@Z PROC ; crude_json::value::array_ptr, COMDAT

; 154  :     static       array*     array_ptr(      storage_t& storage) { return reinterpret_cast<        array*>(&storage); }

	mov	rax, rcx
	ret	0
?array_ptr@value@crude_json@@CAPEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAT?$_Align_type@N$0CA@@4@@Z ENDP ; crude_json::value::array_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?array_ptr@value@crude_json@@CAPEBV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBT?$_Align_type@N$0CA@@4@@Z
_TEXT	SEGMENT
storage$ = 8
?array_ptr@value@crude_json@@CAPEBV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBT?$_Align_type@N$0CA@@4@@Z PROC ; crude_json::value::array_ptr, COMDAT

; 155  :     static const array*     array_ptr(const storage_t& storage) { return reinterpret_cast<const   array*>(&storage); }

	mov	rax, rcx
	ret	0
?array_ptr@value@crude_json@@CAPEBV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBT?$_Align_type@N$0CA@@4@@Z ENDP ; crude_json::value::array_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?string_ptr@value@crude_json@@CAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAT?$_Align_type@N$0CA@@4@@Z
_TEXT	SEGMENT
storage$ = 8
?string_ptr@value@crude_json@@CAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAT?$_Align_type@N$0CA@@4@@Z PROC ; crude_json::value::string_ptr, COMDAT

; 156  :     static       string*   string_ptr(      storage_t& storage) { return reinterpret_cast<       string*>(&storage); }

	mov	rax, rcx
	ret	0
?string_ptr@value@crude_json@@CAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAT?$_Align_type@N$0CA@@4@@Z ENDP ; crude_json::value::string_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?string_ptr@value@crude_json@@CAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBT?$_Align_type@N$0CA@@4@@Z
_TEXT	SEGMENT
storage$ = 8
?string_ptr@value@crude_json@@CAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBT?$_Align_type@N$0CA@@4@@Z PROC ; crude_json::value::string_ptr, COMDAT

; 157  :     static const string*   string_ptr(const storage_t& storage) { return reinterpret_cast<const  string*>(&storage); }

	mov	rax, rcx
	ret	0
?string_ptr@value@crude_json@@CAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBT?$_Align_type@N$0CA@@4@@Z ENDP ; crude_json::value::string_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?boolean_ptr@value@crude_json@@CAPEA_NAEAT?$_Align_type@N$0CA@@std@@@Z
_TEXT	SEGMENT
storage$ = 8
?boolean_ptr@value@crude_json@@CAPEA_NAEAT?$_Align_type@N$0CA@@std@@@Z PROC ; crude_json::value::boolean_ptr, COMDAT

; 158  :     static       boolean* boolean_ptr(      storage_t& storage) { return reinterpret_cast<      boolean*>(&storage); }

	mov	rax, rcx
	ret	0
?boolean_ptr@value@crude_json@@CAPEA_NAEAT?$_Align_type@N$0CA@@std@@@Z ENDP ; crude_json::value::boolean_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?boolean_ptr@value@crude_json@@CAPEB_NAEBT?$_Align_type@N$0CA@@std@@@Z
_TEXT	SEGMENT
storage$ = 8
?boolean_ptr@value@crude_json@@CAPEB_NAEBT?$_Align_type@N$0CA@@std@@@Z PROC ; crude_json::value::boolean_ptr, COMDAT

; 159  :     static const boolean* boolean_ptr(const storage_t& storage) { return reinterpret_cast<const boolean*>(&storage); }

	mov	rax, rcx
	ret	0
?boolean_ptr@value@crude_json@@CAPEB_NAEBT?$_Align_type@N$0CA@@std@@@Z ENDP ; crude_json::value::boolean_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?number_ptr@value@crude_json@@CAPEANAEAT?$_Align_type@N$0CA@@std@@@Z
_TEXT	SEGMENT
storage$ = 8
?number_ptr@value@crude_json@@CAPEANAEAT?$_Align_type@N$0CA@@std@@@Z PROC ; crude_json::value::number_ptr, COMDAT

; 160  :     static       number*   number_ptr(      storage_t& storage) { return reinterpret_cast<       number*>(&storage); }

	mov	rax, rcx
	ret	0
?number_ptr@value@crude_json@@CAPEANAEAT?$_Align_type@N$0CA@@std@@@Z ENDP ; crude_json::value::number_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?number_ptr@value@crude_json@@CAPEBNAEBT?$_Align_type@N$0CA@@std@@@Z
_TEXT	SEGMENT
storage$ = 8
?number_ptr@value@crude_json@@CAPEBNAEBT?$_Align_type@N$0CA@@std@@@Z PROC ; crude_json::value::number_ptr, COMDAT

; 161  :     static const number*   number_ptr(const storage_t& storage) { return reinterpret_cast<const  number*>(&storage); }

	mov	rax, rcx
	ret	0
?number_ptr@value@crude_json@@CAPEBNAEBT?$_Align_type@N$0CA@@std@@@Z ENDP ; crude_json::value::number_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@W432@@Z
_TEXT	SEGMENT
storage$ = 48
type$ = 56
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@W432@@Z PROC ; crude_json::value::construct, COMDAT

; 164  :     {

$LN87:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 165  :         switch (type)

	mov	r8d, edx
	mov	edi, edx
	mov	rbx, rcx
	sub	r8d, 1
	je	SHORT $LN4@construct
	sub	r8d, 1
	je	SHORT $LN5@construct
	sub	r8d, 1
	je	SHORT $LN6@construct
	sub	r8d, 1
	je	SHORT $LN7@construct
	cmp	r8d, 1
	jne	$LN84@construct

; 171  :             case type_t::number:    new (&storage) number();  break;

	xor	eax, eax
	mov	QWORD PTR [rcx], rax

; 176  :     }

	mov	eax, edx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN7@construct:

; 166  :         {
; 167  :             case type_t::object:    new (&storage) object();  break;
; 168  :             case type_t::array:     new (&storage) array();   break;
; 169  :             case type_t::string:    new (&storage) string();  break;
; 170  :             case type_t::boolean:   new (&storage) boolean(); break;

	xor	eax, eax
	mov	BYTE PTR [rcx], al

; 176  :     }

	mov	eax, edi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN6@construct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4821 :         _My_data._Mysize = 0;

	xor	eax, eax
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR [rcx+16], rax

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR [rcx+24], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR [rcx], al
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 176  :     }

	mov	eax, edi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN5@construct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 176  :     }

	mov	eax, edi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@construct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+104]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax
$LN84@construct:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 176  :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	eax, edi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@W432@@Z ENDP ; crude_json::value::construct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z
_TEXT	SEGMENT
storage$ = 48
value$ = 56
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z PROC ; crude_json::value::construct, COMDAT

; 179  :     static type_t construct(storage_t& storage,       object&& value) { new (&storage)  object(std::forward<object>(value));  return type_t::object;  }

$LN59:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 179  :     static type_t construct(storage_t& storage,       object&& value) { new (&storage)  object(std::forward<object>(value));  return type_t::object;  }

	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 179  :     static type_t construct(storage_t& storage,       object&& value) { new (&storage)  object(std::forward<object>(value));  return type_t::object;  }

	mov	rdi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+104]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

	mov	rcx, QWORD PTR [rdi]
	mov	QWORD PTR [rbx], rcx

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdi], rax

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdi+8]
	mov	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rbx+8], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 179  :     static type_t construct(storage_t& storage,       object&& value) { new (&storage)  object(std::forward<object>(value));  return type_t::object;  }

	mov	eax, 1
	mov	rbx, QWORD PTR [rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdi+8], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 179  :     static type_t construct(storage_t& storage,       object&& value) { new (&storage)  object(std::forward<object>(value));  return type_t::object;  }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z ENDP ; crude_json::value::construct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z
_TEXT	SEGMENT
_Sentinel$1 = 32
storage$ = 64
value$ = 72
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z PROC ; crude_json::value::construct, COMDAT

; 180  :     static type_t construct(storage_t& storage, const object&  value) { new (&storage)  object(value);                        return type_t::object;  }

$LN126:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, rdx
	mov	rdi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax

; 767  :     _Tree_head_scoped_ptr(_Alnode& _Al_, _Scary_val& _Mycont_) : _Al(_Al_), _Mycont(_STD addressof(_Mycont_)) {

	mov	QWORD PTR _Sentinel$1[rsp], rcx
	mov	QWORD PTR _Sentinel$1[rsp+8], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+104]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 768  :         _Mycont->_Myhead = _Alnode::value_type::_Buyheadnode(_Al);

	mov	QWORD PTR [rdi], rax

; 1640 :         _Scary->_Myhead->_Parent = _Copy_nodes<_Strat>(_Right_scary->_Myhead->_Parent, _Scary->_Myhead);

	mov	rdx, QWORD PTR [rbx]
	mov	r8, rax
	mov	rdx, QWORD PTR [rdx+8]
	mov	rcx, rdi
	call	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>
	mov	rcx, QWORD PTR [rdi]
	mov	QWORD PTR [rcx+8], rax

; 1641 :         _Scary->_Mysize          = _Right_scary->_Mysize;

	mov	rax, QWORD PTR [rbx+8]
	mov	QWORD PTR [rdi+8], rax

; 1642 :         if (!_Scary->_Myhead->_Parent->_Isnil) { // nonempty tree, look for new smallest and largest

	mov	r8, QWORD PTR [rdi]
	mov	rdx, QWORD PTR [r8+8]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN50@construct

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [rdx]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN55@construct
	npad	10
$LL54@construct:

; 454  :             _Pnode = _Pnode->_Left;

	mov	rdx, rcx

; 447  :         }
; 448  : 
; 449  :         return _Pnode;
; 450  :     }
; 451  : 
; 452  :     static _Nodeptr _Min(_Nodeptr _Pnode) noexcept { // return leftmost node in subtree at _Pnode
; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rax, QWORD PTR [rcx]
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL54@construct
$LN55@construct:

; 1643 :             _Scary->_Myhead->_Left  = _Scary_val::_Min(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [r8], rdx

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	rdx, QWORD PTR [rdi]
	mov	rcx, QWORD PTR [rdx+8]

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN59@construct
$LL58@construct:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rcx, rax

; 438  : 
; 439  :     enum _Redbl { // colors for link to parent
; 440  :         _Red,
; 441  :         _Black
; 442  :     };
; 443  : 
; 444  :     static _Nodeptr _Max(_Nodeptr _Pnode) noexcept { // return rightmost node in subtree at _Pnode
; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL58@construct
$LN59@construct:

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [rdx+16], rcx

; 1645 :         } else { // empty tree, just tidy head pointers

	jmp	SHORT $LN123@construct
$LN50@construct:

; 1646 :             _Scary->_Myhead->_Left  = _Scary->_Myhead;

	mov	QWORD PTR [r8], r8

; 1647 :             _Scary->_Myhead->_Right = _Scary->_Myhead;

	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rax+16], rax
$LN123@construct:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 180  :     static type_t construct(storage_t& storage, const object&  value) { new (&storage)  object(value);                        return type_t::object;  }

	mov	eax, 1
	mov	rbx, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z ENDP ; crude_json::value::construct
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Sentinel$1 = 32
storage$ = 64
value$ = 72
?dtor$1@?0??construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z@4HA PROC ; `crude_json::value::construct'::`1'::dtor$1
	lea	rcx, QWORD PTR _Sentinel$1[rdx]
	jmp	??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
?dtor$1@?0??construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z@4HA ENDP ; `crude_json::value::construct'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@5@@Z
_TEXT	SEGMENT
storage$ = 8
value$ = 16
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@5@@Z PROC ; crude_json::value::construct, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rdx]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r10d, r10d
	mov	r9, QWORD PTR [rdx+16]

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rdx+8]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdx+16], r10
	mov	QWORD PTR [rdx+8], r10
	mov	QWORD PTR [rdx], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 181  :     static type_t construct(storage_t& storage,       array&&  value) { new (&storage)   array(std::forward<array>(value));   return type_t::array;   }

	lea	eax, QWORD PTR [r10+2]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx+8], r8
	mov	QWORD PTR [rcx+16], r9
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 181  :     static type_t construct(storage_t& storage,       array&&  value) { new (&storage)   array(std::forward<array>(value));   return type_t::array;   }

	ret	0
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@5@@Z ENDP ; crude_json::value::construct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@5@@Z
_TEXT	SEGMENT
storage$ = 48
value$ = 56
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@5@@Z PROC ; crude_json::value::construct, COMDAT

; 182  :     static type_t construct(storage_t& storage, const array&   value) { new (&storage)   array(value);                        return type_t::array;   }

$LN4:
	sub	rsp, 40					; 00000028H
	call	??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >
	mov	eax, 2
	add	rsp, 40					; 00000028H
	ret	0
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@5@@Z ENDP ; crude_json::value::construct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z
_TEXT	SEGMENT
storage$ = 8
value$ = 16
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z PROC ; crude_json::value::construct, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	eax, eax
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR [rcx+16], rax

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rcx+24], rax

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rcx+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 183  :     static type_t construct(storage_t& storage,       string&& value) { new (&storage)  string(std::forward<string>(value));  return type_t::string;  }

	mov	QWORD PTR [rdx+16], rax
	mov	QWORD PTR [rdx+24], 15
	mov	BYTE PTR [rdx], al
	mov	eax, 3
	ret	0
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ENDP ; crude_json::value::construct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z
_TEXT	SEGMENT
storage$ = 48
value$ = 56
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z PROC ; crude_json::value::construct, COMDAT

; 184  :     static type_t construct(storage_t& storage, const string&  value) { new (&storage)  string(value);                        return type_t::string;  }

$LN4:
	sub	rsp, 40					; 00000028H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, 3
	add	rsp, 40					; 00000028H
	ret	0
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z ENDP ; crude_json::value::construct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@_N@Z
_TEXT	SEGMENT
storage$ = 8
value$ = 16
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@_N@Z PROC ; crude_json::value::construct, COMDAT

; 186  :     static type_t construct(storage_t& storage,       boolean  value) { new (&storage) boolean(value);                        return type_t::boolean; }

	mov	BYTE PTR [rcx], dl
	mov	eax, 4
	ret	0
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@_N@Z ENDP ; crude_json::value::construct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@N@Z
_TEXT	SEGMENT
storage$ = 8
value$ = 16
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@N@Z PROC ; crude_json::value::construct, COMDAT

; 187  :     static type_t construct(storage_t& storage,       number   value) { new (&storage)  number(value);                        return type_t::number;  }

	movsd	QWORD PTR [rcx], xmm1
	mov	eax, 5
	ret	0
?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@N@Z ENDP ; crude_json::value::construct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z
_TEXT	SEGMENT
storage$ = 48
type$ = 56
?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z PROC ; crude_json::value::destruct, COMDAT

; 190  :     {

$LN83:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 191  :         switch (type)

	sub	edx, 1
	je	SHORT $LN4@destruct
	sub	edx, 1
	je	SHORT $LN5@destruct
	cmp	edx, 1
	jne	SHORT $LN10@destruct

; 198  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN5@destruct:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 198  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
$LN4@destruct:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rbx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 104				; 00000068H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 198  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN10@destruct:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 198  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ENDP ; crude_json::value::destruct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??0dump_context_t@value@crude_json@@QEAA@HD@Z
_TEXT	SEGMENT
this$ = 48
indent$dead$ = 56
indent_char$dead$ = 64
??0dump_context_t@value@crude_json@@QEAA@HD@Z PROC	; crude_json::value::dump_context_t::dump_context_t, COMDAT

; 210  :         {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >

; 211  :         }

	mov	rax, rbx
	mov	DWORD PTR [rbx+232], -1
	mov	BYTE PTR [rbx+236], 32			; 00000020H
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0dump_context_t@value@crude_json@@QEAA@HD@Z ENDP	; crude_json::value::dump_context_t::dump_context_t
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??_G?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAPEAXI@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::`scalar deleting destructor', COMDAT
$LN60:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 104				; 00000068H
	call	??3@YAXPEAX_K@Z				; operator delete
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAPEAXI@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >, COMDAT
$LN55:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 104				; 00000068H
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??_G?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAPEAXI@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::`scalar deleting destructor', COMDAT
$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 767  :         _Tidy();

	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAPEAXI@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
;	COMDAT ??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 733  :     ~basic_ostringstream() noexcept override {}

	mov	rax, QWORD PTR [rcx]
	lea	rdi, QWORD PTR [rcx+136]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rdx+rdi-136], rax
	mov	rax, QWORD PTR [rcx]

; 110  :         _Tidy();

	lea	rcx, QWORD PTR [rdi-128]

; 733  :     ~basic_ostringstream() noexcept override {}

	movsxd	rdx, DWORD PTR [rax+4]

; 109  :     ~basic_stringbuf() noexcept override {

	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@

; 733  :     ~basic_ostringstream() noexcept override {}

	lea	r8d, DWORD PTR [rdx-136]
	mov	DWORD PTR [rdx+rdi-140], r8d

; 109  :     ~basic_stringbuf() noexcept override {

	mov	QWORD PTR [rdi-128], rax

; 110  :         _Tidy();

	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 111  :     }

	lea	rcx, QWORD PTR [rdi-128]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ

; 733  :     ~basic_ostringstream() noexcept override {}

	lea	rcx, QWORD PTR [rdi-120]
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	mov	rcx, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??$get@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@value@crude_json@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
this$ = 8
??$get@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@value@crude_json@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; crude_json::value::get<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 232  : template <> inline       string&  value::get<string>()        { CRUDE_ASSERT(m_Type == type_t::string);  return *string_ptr(m_Storage);  }

	mov	rax, rcx
	ret	0
??$get@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@value@crude_json@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; crude_json::value::get<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ??0value@crude_json@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 48
other$ = 56
??0value@crude_json@@QEAA@$$QEAU01@@Z PROC		; crude_json::value::value, COMDAT

; 28   : {

$LN157:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 29   :     switch (m_Type)

	xor	esi, esi
	mov	ecx, DWORD PTR [rdx+32]
	mov	rbx, rdx
	mov	DWORD PTR [rdi+32], ecx
	sub	ecx, 1
	je	SHORT $LN4@value
	sub	ecx, 1
	je	SHORT $LN5@value
	sub	ecx, 1
	je	SHORT $LN6@value
	sub	ecx, 1
	je	SHORT $LN7@value
	cmp	ecx, 1
	jne	SHORT $LN9@value
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 187  :     static type_t construct(storage_t& storage,       number   value) { new (&storage)  number(value);                        return type_t::number;  }

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rdi], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 35   :         case type_t::number:    construct(m_Storage, std::move( *number_ptr(other.m_Storage))); break;

	jmp	SHORT $LN9@value
$LN7@value:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 186  :     static type_t construct(storage_t& storage,       boolean  value) { new (&storage) boolean(value);                        return type_t::boolean; }

	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [rdi], al
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 34   :         case type_t::boolean:   construct(m_Storage, std::move(*boolean_ptr(other.m_Storage))); break;

	jmp	SHORT $LN9@value
$LN6@value:
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rdi], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR [rdi+16], rsi

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rdi+24], rsi

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rdi], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rdi+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 33   :         case type_t::string:    construct(m_Storage, std::move( *string_ptr(other.m_Storage))); break;

	mov	QWORD PTR [rdx+16], rsi
	mov	QWORD PTR [rdx+24], 15
	mov	BYTE PTR [rdx], sil
	jmp	SHORT $LN9@value
$LN5@value:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rdx+16]
	mov	rcx, QWORD PTR [rbx+8]
	mov	rax, QWORD PTR [rbx]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rbx+16], rsi
	mov	QWORD PTR [rbx+8], rsi
	mov	QWORD PTR [rbx], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rdi], rax
	mov	QWORD PTR [rdi+8], rcx
	mov	QWORD PTR [rdi+16], rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 32   :         case type_t::array:     construct(m_Storage, std::move(  *array_ptr(other.m_Storage))); break;

	jmp	SHORT $LN9@value
$LN4@value:

; 30   :     {
; 31   :         case type_t::object:    construct(m_Storage, std::move( *object_ptr(other.m_Storage))); break;

	mov	rcx, rdi
	call	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z ; crude_json::value::construct
$LN9@value:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 191  :         switch (type)

	mov	eax, DWORD PTR [rbx+32]
	sub	eax, 1
	je	SHORT $LN64@value
	sub	eax, 1
	je	SHORT $LN65@value
	cmp	eax, 1
	jne	SHORT $LN154@value
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN154@value
$LN65@value:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN154@value
$LN64@value:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rbx]
	mov	rdx, rbx
	mov	rcx, rbx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 104				; 00000068H
	call	??3@YAXPEAX_K@Z				; operator delete
$LN154@value:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 40   : }

	mov	DWORD PTR [rbx+32], esi
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0value@crude_json@@QEAA@$$QEAU01@@Z ENDP		; crude_json::value::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ??0value@crude_json@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 48
other$ = 56
??0value@crude_json@@QEAA@AEBU01@@Z PROC		; crude_json::value::value, COMDAT

; 44   : {

$LN27:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 43   :     : m_Type(other.m_Type)

	mov	ecx, DWORD PTR [rdx+32]
	mov	DWORD PTR [rbx+32], ecx

; 45   :     switch (m_Type)

	sub	ecx, 1
	je	SHORT $LN4@value
	sub	ecx, 1
	je	SHORT $LN5@value
	sub	ecx, 1
	je	SHORT $LN6@value
	sub	ecx, 1
	je	SHORT $LN7@value
	cmp	ecx, 1
	jne	SHORT $LN25@value
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 187  :     static type_t construct(storage_t& storage,       number   value) { new (&storage)  number(value);                        return type_t::number;  }

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rbx], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 54   : }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN7@value:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 186  :     static type_t construct(storage_t& storage,       boolean  value) { new (&storage) boolean(value);                        return type_t::boolean; }

	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [rbx], al
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 54   : }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN6@value:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 184  :     static type_t construct(storage_t& storage, const string&  value) { new (&storage)  string(value);                        return type_t::string;  }

	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 54   : }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN5@value:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 182  :     static type_t construct(storage_t& storage, const array&   value) { new (&storage)   array(value);                        return type_t::array;   }

	mov	rcx, rbx
	call	??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 54   : }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@value:

; 46   :     {
; 47   :         case type_t::object:    construct(m_Storage,  *object_ptr(other.m_Storage)); break;

	mov	rcx, rbx
	call	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z ; crude_json::value::construct
$LN25@value:

; 54   : }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0value@crude_json@@QEAA@AEBU01@@Z ENDP		; crude_json::value::value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
$T5 = 72
this$ = 112
key$ = 120
??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::operator[], COMDAT

; 84   : {

$LN465:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rbp, rdx
	mov	rsi, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 105  :     bool is_null()       const { return m_Type == type_t::null;      }

	mov	eax, DWORD PTR [rcx+32]
	xor	r15d, r15d
	test	eax, eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 85   :     if (is_null())

	jne	SHORT $LN458@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], r15
	mov	QWORD PTR [rcx+8], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+104]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rsi], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 86   :         m_Type = construct(m_Storage, type_t::object);

	mov	DWORD PTR [rsi+32], 1
	jmp	SHORT $LN460@operator
$LN458@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 106  :     bool is_object()     const { return m_Type == type_t::object;    }

	cmp	eax, 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 88   :     if (is_object())

	jne	$LN3@operator
$LN460@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	r14, QWORD PTR [rsi]
	mov	rbx, QWORD PTR [r14+8]
	mov	QWORD PTR _Loc$1[rsp], rbx
	mov	DWORD PTR _Loc$1[rsp+8], r15d
	mov	rdi, r14

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r15b
	jne	SHORT $LN94@operator
	npad	9
$LL93@operator:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR _Loc$1[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN95@operator

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR _Loc$1[rsp+8], r15d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN96@operator
$LN95@operator:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR _Loc$1[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN96@operator:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r15b
	je	SHORT $LL93@operator
$LN94@operator:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r15b
	jne	SHORT $LN89@operator
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	jns	SHORT $LN88@operator
$LN89@operator:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 177372539170284150			; 0276276276276276H
	cmp	QWORD PTR [rsi+8], rax
	je	$LN463@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T4[rsp], rsi

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T4[rsp+8], r15

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T4[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, rbp
	lea	rcx, QWORD PTR [rax+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR [rdi+96], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], r14

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], r14

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], r14

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 212  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$1[rsp]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	mov	r8, rdi
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, rsi
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Insert_node
	mov	rdi, rax
$LN88@operator:

; 347  :         return _Try_emplace(_Keyval).first->_Myval.second;

	lea	rax, QWORD PTR [rdi+64]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 93   : }

	lea	r11, QWORD PTR [rsp+80]
	mov	rbx, QWORD PTR [r11+40]
	mov	rbp, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
	ret	0
$LN3@operator:

; 89   :         return (*object_ptr(m_Storage))[key];
; 90   : 
; 91   :     CRUDE_ASSERT(false && "operator[] on unsupported type");
; 92   :     std::terminate();

	call	QWORD PTR __imp_terminate
	int	3
$LN463@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN461@operator:
??Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
$T5 = 72
this$ = 112
key$ = 120
?dtor$6@?0???Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `crude_json::value::operator[]'::`1'::dtor$6
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$6@?0???Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `crude_json::value::operator[]'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
$T5 = 72
this$ = 112
key$ = 120
?dtor$5@?0???Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `crude_json::value::operator[]'::`1'::dtor$5
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$5@?0???Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `crude_json::value::operator[]'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
$T5 = 72
this$ = 112
key$ = 120
?dtor$8@?0???Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `crude_json::value::operator[]'::`1'::dtor$8
	mov	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$8@?0???Avalue@crude_json@@QEAAAEAU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `crude_json::value::operator[]'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
key$ = 56
??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::operator[], COMDAT

; 96   : {

$LN50:
	push	rsi
	sub	rsp, 32					; 00000020H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 106  :     bool is_object()     const { return m_Type == type_t::object;    }

	cmp	DWORD PTR [rcx+32], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 96   : {

	mov	rsi, rdx

; 97   :     if (is_object())

	jne	SHORT $LN2@operator
	mov	QWORD PTR [rsp+48], rbx
	mov	QWORD PTR [rsp+56], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1612 :         const auto _Scary = _Get_scary();

	mov	rbp, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 97   :     if (is_object())

	mov	QWORD PTR [rsp+64], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rdi, rbp
	mov	rbx, QWORD PTR [rbp+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN15@operator
	npad	2
$LL14@operator:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN16@operator

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN17@operator
$LN16@operator:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN17@operator:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL14@operator
$LN15@operator:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], 0
	mov	rbx, QWORD PTR [rsp+48]
	jne	SHORT $LN25@operator
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	js	SHORT $LN25@operator
	mov	al, 1
	jmp	SHORT $LN26@operator
$LN25@operator:
	xor	al, al
$LN26@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 102  :         return it->second;

	test	al, al
	cmove	rdi, rbp
	mov	rbp, QWORD PTR [rsp+56]
	lea	rax, QWORD PTR [rdi+64]
	mov	rdi, QWORD PTR [rsp+64]

; 107  : }

	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN2@operator:

; 103  :     }
; 104  : 
; 105  :     CRUDE_ASSERT(false && "operator[] on unsupported type");
; 106  :     std::terminate();

	call	QWORD PTR __imp_terminate
	int	3
$LN47@operator:
??Avalue@crude_json@@QEBAAEBU01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
key$ = 56
?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::contains, COMDAT

; 110  : {

$LN53:
	push	rsi
	sub	rsp, 32					; 00000020H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 106  :     bool is_object()     const { return m_Type == type_t::object;    }

	cmp	DWORD PTR [rcx+32], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 110  : {

	mov	rsi, rdx

; 111  :     if (is_object())

	jne	$LN2@contains
	mov	QWORD PTR [rsp+48], rbx
	mov	QWORD PTR [rsp+56], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1612 :         const auto _Scary = _Get_scary();

	mov	rbp, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 111  :     if (is_object())

	mov	QWORD PTR [rsp+64], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rdi, rbp
	mov	rbx, QWORD PTR [rbp+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN15@contains
$LL14@contains:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN16@contains

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN17@contains
$LN16@contains:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN17@contains:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL14@contains
$LN15@contains:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], 0
	mov	rbx, QWORD PTR [rsp+48]
	jne	SHORT $LN25@contains
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	js	SHORT $LN25@contains
	mov	al, 1
	jmp	SHORT $LN26@contains
$LN25@contains:
	xor	al, al
$LN26@contains:

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	test	al, al
	cmove	rdi, rbp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 115  :         return it != o.end();

	cmp	rdi, rbp
	mov	rdi, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+56]
	setne	al

; 119  : }

	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN2@contains:

; 116  :     }
; 117  : 
; 118  :     return false;

	xor	al, al

; 119  : }

	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
?contains@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::contains
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?push_back@value@crude_json@@QEAAX$$QEAU12@@Z
_TEXT	SEGMENT
this$ = 48
value$ = 56
?push_back@value@crude_json@@QEAAX$$QEAU12@@Z PROC	; crude_json::value::push_back, COMDAT

; 139  : {

$LN105:
	push	rbx
	sub	rsp, 32					; 00000020H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 105  :     bool is_null()       const { return m_Type == type_t::null;      }

	mov	eax, DWORD PTR [rcx+32]
	lea	rbx, QWORD PTR [rcx+8]
	test	eax, eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 140  :     if (is_null())

	jne	SHORT $LN98@push_back
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rcx+16], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 141  :         m_Type = construct(m_Storage, type_t::array);

	mov	DWORD PTR [rcx+32], 2
	jmp	SHORT $LN99@push_back
$LN98@push_back:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 107  :     bool is_array()      const { return m_Type == type_t::array;     }

	cmp	eax, 2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 143  :     if (is_array())

	jne	SHORT $LN3@push_back
$LN99@push_back:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rax, QWORD PTR [rbx]
	cmp	rax, QWORD PTR [rcx+16]
	je	SHORT $LN90@push_back
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, rax
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 806  :         ++_Mylast;

	add	QWORD PTR [rbx], 40			; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 153  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN90@push_back:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	mov	r8, rdx
	mov	rdx, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 153  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	jmp	??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_reallocate<crude_json::value>
$LN3@push_back:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 151  :         std::terminate();

	call	QWORD PTR __imp_terminate
	int	3
$LN102@push_back:
?push_back@value@crude_json@@QEAAX$$QEAU12@@Z ENDP	; crude_json::value::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?swap@value@crude_json@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
tmp$1 = 32
__$ArrayPad$ = 72
this$ = 96
other$ = 104
?swap@value@crude_json@@QEAAXAEAU12@@Z PROC		; crude_json::value::swap, COMDAT

; 172  : {

$LN390:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rdx
	mov	rbx, rcx

; 173  :     using std::swap;
; 174  : 
; 175  :     if (m_Type == other.m_Type)

	mov	ecx, DWORD PTR [rcx+32]
	cmp	ecx, DWORD PTR [rdx+32]
	jne	$LN4@swap

; 176  :     {
; 177  :         switch (m_Type)

	sub	ecx, 1
	je	$LN6@swap
	sub	ecx, 1
	je	SHORT $LN7@swap
	sub	ecx, 1
	je	SHORT $LN8@swap
	sub	ecx, 1
	je	SHORT $LN9@swap
	cmp	ecx, 1
	jne	$LN194@swap
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

	movsd	xmm0, QWORD PTR [rbx]

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rbx], rax

; 101  :     _Right   = _STD move(_Tmp);

	movsd	QWORD PTR [rdx], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 183  :             case type_t::number:    swap(*number_ptr(m_Storage),  *number_ptr(other.m_Storage));  break;

	jmp	$LN194@swap
$LN9@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

	movzx	ecx, BYTE PTR [rbx]

; 100  :     _Left    = _STD move(_Right);

	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [rbx], al

; 101  :     _Right   = _STD move(_Tmp);

	mov	BYTE PTR [rdx], cl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 182  :             case type_t::boolean:   swap(*boolean_ptr(m_Storage), *boolean_ptr(other.m_Storage)); break;

	jmp	$LN194@swap
$LN8@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4308 :         if (this != _STD addressof(_Right)) {

	cmp	rbx, rdi
	je	$LN194@swap

; 4281 :                 _CSTD memcpy(_Temp_mem, _My_data_mem, _Memcpy_val_size);

	movups	xmm2, XMMWORD PTR [rbx]
	movups	xmm3, XMMWORD PTR [rbx+16]

; 4282 :                 _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rbx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rbx+16], xmm1

; 4283 :                 _CSTD memcpy(_Right_data_mem, _Temp_mem, _Memcpy_val_size);

	movups	XMMWORD PTR [rdx], xmm2
	movups	XMMWORD PTR [rdx+16], xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 181  :             case type_t::string:    swap(*string_ptr(m_Storage),  *string_ptr(other.m_Storage));  break;

	jmp	$LN194@swap
$LN7@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1780 :         if (this != _STD addressof(_Right)) {

	cmp	rbx, rdi
	je	$LN194@swap
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	rcx, QWORD PTR [rbx]

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rbx], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx], rcx

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	rcx, QWORD PTR [rbx+8]

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rbx+8], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx+8], rcx

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	rcx, QWORD PTR [rbx+16]

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rbx+16], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx+16], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 180  :             case type_t::array:     swap(*array_ptr(m_Storage),   *array_ptr(other.m_Storage));   break;

	jmp	$LN194@swap
$LN6@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1487 :         if (this != _STD addressof(_Right)) {

	cmp	rbx, rdi
	je	$LN194@swap
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	rcx, QWORD PTR [rbx]

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rbx], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx], rcx

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	rcx, QWORD PTR [rbx+8]

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rbx+8], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx+8], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 186  :     }

	jmp	$LN194@swap
$LN4@swap:

; 187  :     else
; 188  :     {
; 189  :         value tmp(std::move(other));

	lea	rcx, QWORD PTR tmp$1[rsp]
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	ecx, DWORD PTR [rdi+32]

; 191  :         switch (type)

	sub	ecx, 1
	je	SHORT $LN22@swap
	sub	ecx, 1
	je	SHORT $LN23@swap
	cmp	ecx, 1
	jne	SHORT $LN28@swap
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	jmp	SHORT $LN28@swap
$LN23@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rdi
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
	jmp	SHORT $LN28@swap
$LN22@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rdi]
	mov	r8, QWORD PTR [r8+8]
	mov	rdx, rdi
	mov	rcx, rdi
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR [rdi]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN28@swap:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 191  :         new (&other) value(std::move(*this));

	mov	rdx, rbx
	mov	rcx, rdi
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	ecx, DWORD PTR [rbx+32]

; 191  :         switch (type)

	sub	ecx, 1
	je	SHORT $LN107@swap
	sub	ecx, 1
	je	SHORT $LN108@swap
	cmp	ecx, 1
	jne	SHORT $LN113@swap
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	jmp	SHORT $LN113@swap
$LN108@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
	jmp	SHORT $LN113@swap
$LN107@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rbx]
	mov	r8, QWORD PTR [r8+8]
	mov	rdx, rbx
	mov	rcx, rbx
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR [rbx]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN113@swap:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 193  :         new (this) value(std::move(tmp));

	lea	rdx, QWORD PTR tmp$1[rsp]
	mov	rcx, rbx
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 191  :         switch (type)

	mov	ecx, DWORD PTR tmp$1[rsp+32]
	sub	ecx, 1
	je	SHORT $LN188@swap
	sub	ecx, 1
	je	SHORT $LN189@swap
	cmp	ecx, 1
	jne	SHORT $LN194@swap
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR tmp$1[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN194@swap
$LN189@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR tmp$1[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN194@swap
$LN188@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR tmp$1[rsp]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR tmp$1[rsp]
	lea	rcx, QWORD PTR tmp$1[rsp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR tmp$1[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN194@swap:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 195  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+112]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
?swap@value@crude_json@@QEAAXAEAU12@@Z ENDP		; crude_json::value::swap
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tmp$1 = 32
__$ArrayPad$ = 72
this$ = 96
other$ = 104
?dtor$0@?0??swap@value@crude_json@@QEAAXAEAU12@@Z@4HA PROC ; `crude_json::value::swap'::`1'::dtor$0
	lea	rcx, QWORD PTR tmp$1[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$0@?0??swap@value@crude_json@@QEAAXAEAU12@@Z@4HA ENDP ; `crude_json::value::swap'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
;	COMDAT ??_Gvalue@crude_json@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_Gvalue@crude_json@@QEAAPEAXI@Z PROC			; crude_json::value::`scalar deleting destructor', COMDAT
$LN273:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rcx+32]
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_Gvalue@crude_json@@QEAAPEAXI@Z ENDP			; crude_json::value::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z
_TEXT	SEGMENT
__$ReturnUdt$GSCopy$ = 40
context$ = 48
__$ArrayPad$ = 288
this$ = 320
__$ReturnUdt$ = 328
indent$dead$ = 336
indent_char$dead$ = 344
?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z PROC ; crude_json::value::dump, COMDAT

; 198  : {

$LN21:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 304				; 00000130H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rdx
	mov	rbx, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 210  :         {

	lea	rcx, QWORD PTR context$[rsp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >

; 208  :             : indent(indent)

	mov	DWORD PTR context$[rsp+232], -1

; 209  :             , indent_char(indent_char)

	mov	BYTE PTR context$[rsp+236], 32		; 00000020H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 201  :     context.out.precision(std::numeric_limits<double>::max_digits10 + 1);

	mov	rax, QWORD PTR context$[rsp]
	movsxd	rdx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase

; 285  :         _Prec                          = _Newprecision;

	mov	QWORD PTR context$[rsp+rdx+32], 18
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 202  :     context.out << std::defaultfloat;

	lea	rdx, OFFSET FLAT:?defaultfloat@std@@YAAEAVios_base@1@AEAV21@@Z ; std::defaultfloat
	lea	rcx, QWORD PTR context$[rsp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z

; 203  : 
; 204  :     dump(context, 0);

	xor	r8d, r8d
	lea	rdx, QWORD PTR context$[rsp]
	mov	rcx, rbx
	call	?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z ; crude_json::value::dump
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream

; 745  :         return _Stringbuffer.str();

	mov	rdx, rdi
	lea	rcx, QWORD PTR context$[rsp+8]
	call	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEGBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	npad	1
	lea	rcx, QWORD PTR context$[rsp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 205  :     return context.out.str();

	mov	rax, rdi

; 206  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+336]
	add	rsp, 304				; 00000130H
	pop	rdi
	ret	0
?dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z ENDP ; crude_json::value::dump
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
__$ReturnUdt$GSCopy$ = 40
context$ = 48
__$ArrayPad$ = 288
this$ = 320
__$ReturnUdt$ = 328
indent$dead$ = 336
indent_char$dead$ = 344
?dtor$0@?0??dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z@4HA PROC ; `crude_json::value::dump'::`1'::dtor$0
	lea	rcx, QWORD PTR context$[rdx]
	jmp	??1dump_context_t@value@crude_json@@QEAA@XZ
?dtor$0@?0??dump@value@crude_json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z@4HA ENDP ; `crude_json::value::dump'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1dump_context_t@value@crude_json@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1dump_context_t@value@crude_json@@QEAA@XZ PROC	; crude_json::value::dump_context_t::~dump_context_t, COMDAT
	jmp	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
??1dump_context_t@value@crude_json@@QEAA@XZ ENDP	; crude_json::value::dump_context_t::~dump_context_t
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ios
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?write_indent@dump_context_t@value@crude_json@@QEAAXH@Z
_TEXT	SEGMENT
this$ = 48
level$ = 56
?write_indent@dump_context_t@value@crude_json@@QEAAXH@Z PROC ; crude_json::value::dump_context_t::write_indent, COMDAT

; 209  : {

$LN18:
	push	rbx
	sub	rsp, 32					; 00000020H

; 210  :     if (indent <= 0 || level == 0)

	cmp	DWORD PTR [rcx+232], 0
	mov	rbx, rcx
	jle	SHORT $LN3@write_inde
	test	edx, edx
	je	SHORT $LN3@write_inde

; 211  :         return;
; 212  : 
; 213  :     out.fill(indent_char);

	mov	rax, QWORD PTR [rcx]
	movsxd	r8, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ios

; 105  :         _Fillch        = _Newfill;

	movzx	eax, BYTE PTR [rcx+236]
	mov	BYTE PTR [r8+rcx+88], al
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 214  :     out.width(indent * level);

	imul	edx, DWORD PTR [rcx+232]
	mov	rax, QWORD PTR [rcx]
	movsxd	rcx, DWORD PTR [rax+4]
	movsxd	rdx, edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase

; 296  :         _Wide                      = _Newwidth;

	mov	QWORD PTR [rcx+rbx+40], rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 215  :     out << indent_char;

	mov	rcx, rbx
	movzx	edx, BYTE PTR [rbx+236]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 216  :     out.width(0);

	mov	rax, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase

; 296  :         _Wide                      = _Newwidth;

	mov	QWORD PTR [rcx+rbx+40], 0
$LN3@write_inde:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 217  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?write_indent@dump_context_t@value@crude_json@@QEAAXH@Z ENDP ; crude_json::value::dump_context_t::write_indent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?write_separator@dump_context_t@value@crude_json@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?write_separator@dump_context_t@value@crude_json@@QEAAXXZ PROC ; crude_json::value::dump_context_t::write_separator, COMDAT

; 221  :     if (indent < 0)

	cmp	DWORD PTR [rcx+232], 0
	jl	SHORT $LN1@write_sepa

; 222  :         return;
; 223  : 
; 224  :     out.put(' ');

	mov	dl, 32					; 00000020H
	rex_jmp	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
$LN1@write_sepa:

; 225  : }

	ret	0
?write_separator@dump_context_t@value@crude_json@@QEAAXXZ ENDP ; crude_json::value::dump_context_t::write_separator
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?write_newline@dump_context_t@value@crude_json@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?write_newline@dump_context_t@value@crude_json@@QEAAXXZ PROC ; crude_json::value::dump_context_t::write_newline, COMDAT

; 229  :     if (indent < 0)

	cmp	DWORD PTR [rcx+232], 0
	jl	SHORT $LN1@write_newl

; 230  :         return;
; 231  : 
; 232  :     out.put('\n');

	mov	dl, 10
	rex_jmp	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
$LN1@write_newl:

; 233  : }

	ret	0
?write_newline@dump_context_t@value@crude_json@@QEAAXXZ ENDP ; crude_json::value::dump_context_t::write_newline
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ios
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ios
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ios
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z
_TEXT	SEGMENT
_Matches$1 = 32
__$ArrayPad$ = 288
this$ = 368
context$ = 376
level$ = 384
?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z PROC ; crude_json::value::dump, COMDAT

; 236  : {

$LN342:
	push	rbx
	push	rdi
	push	r12
	push	r13
	sub	rsp, 328				; 00000148H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 210  :     if (indent <= 0 || level == 0)

	xor	r12d, r12d

; 236  : {

	mov	r13d, r8d
	mov	rdi, rdx
	mov	rbx, rcx

; 210  :     if (indent <= 0 || level == 0)

	cmp	DWORD PTR [rdx+232], r12d
	jle	SHORT $LN56@dump
	test	r8d, r8d
	je	SHORT $LN56@dump

; 211  :         return;
; 212  : 
; 213  :     out.fill(indent_char);

	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ios

; 105  :         _Fillch        = _Newfill;

	movzx	eax, BYTE PTR [rdx+236]
	mov	BYTE PTR [rcx+rdx+88], al
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 214  :     out.width(indent * level);

	mov	eax, r8d
	imul	eax, DWORD PTR [rdx+232]
	movsxd	rdx, eax
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase

; 296  :         _Wide                      = _Newwidth;

	mov	QWORD PTR [rcx+rdi+40], rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 215  :     out << indent_char;

	mov	rcx, rdi
	movzx	edx, BYTE PTR [rdi+236]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 216  :     out.width(0);

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase

; 296  :         _Wide                      = _Newwidth;

	mov	QWORD PTR [rcx+rdi+40], r12
$LN56@dump:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 239  :     switch (m_Type)

	movsxd	rax, DWORD PTR [rbx+32]
	cmp	eax, 5
	ja	$LN52@dump
	mov	QWORD PTR [rsp+392], rbp
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	QWORD PTR [rsp+320], rsi
	mov	QWORD PTR [rsp+312], r14
	mov	edx, DWORD PTR $LN284@dump[rcx+rax*4]
	add	rdx, rcx
	jmp	rdx
$LN13@dump:

; 240  :     {
; 241  :         case type_t::null:
; 242  :             context.out << "null";

	lea	rdx, OFFSET FLAT:??_C@_04MLLLIHIP@null@
	mov	rcx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 243  :             break;

	jmp	$LN338@dump
$LN14@dump:

; 244  : 
; 245  :         case type_t::object:
; 246  :             context.out << '{';

	mov	dl, 123					; 0000007bH
	mov	QWORD PTR [rsp+304], r15
	mov	rcx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 229  :     if (indent < 0)

	cmp	DWORD PTR [rdi+232], r12d
	jl	SHORT $LN153@dump

; 230  :         return;
; 231  : 
; 232  :     out.put('\n');

	mov	dl, 10
	mov	rcx, rdi
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
$LN153@dump:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1150 :         return _Unchecked_const_iterator(_Get_scary()->_Myhead->_Left, nullptr);

	mov	rbx, QWORD PTR [rbx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 249  :                 bool first = true;

	mov	r15b, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rbx, QWORD PTR [rbx]

; 107  :         return !!_Ptr->_Isnil; // TRANSITION, avoid warning C4800:

	cmp	BYTE PTR [rbx+25], r12b
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 250  :                 for (auto& entry : *object_ptr(m_Storage))

	jne	$LN122@dump
	lea	r14d, DWORD PTR [r13+1]
	npad	7
$LL81@dump:

; 251  :                 {
; 252  :                     if (!first) { context.out << ','; context.write_newline(); } else first = false;

	test	r15b, r15b
	jne	SHORT $LN15@dump
	mov	dl, 44					; 0000002cH
	mov	rcx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 229  :     if (indent < 0)

	cmp	DWORD PTR [rdi+232], r12d
	jl	SHORT $LN91@dump

; 230  :         return;
; 231  : 
; 232  :     out.put('\n');

	mov	dl, 10
	mov	rcx, rdi
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z

; 233  : }

	jmp	SHORT $LN16@dump
$LN15@dump:

; 251  :                 {
; 252  :                     if (!first) { context.out << ','; context.write_newline(); } else first = false;

	xor	r15b, r15b
$LN16@dump:

; 210  :     if (indent <= 0 || level == 0)

	cmp	DWORD PTR [rdi+232], r12d
	jle	SHORT $LN91@dump
	test	r14d, r14d
	je	SHORT $LN91@dump

; 211  :         return;
; 212  : 
; 213  :     out.fill(indent_char);

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ios

; 105  :         _Fillch        = _Newfill;

	movzx	eax, BYTE PTR [rdi+236]
	mov	BYTE PTR [rcx+rdi+88], al
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 214  :     out.width(indent * level);

	mov	eax, r14d
	imul	eax, DWORD PTR [rdi+232]
	movsxd	rdx, eax
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase

; 296  :         _Wide                      = _Newwidth;

	mov	QWORD PTR [rcx+rdi+40], rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 215  :     out << indent_char;

	mov	rcx, rdi
	movzx	edx, BYTE PTR [rdi+236]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 216  :     out.width(0);

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase

; 296  :         _Wide                      = _Newwidth;

	mov	QWORD PTR [rcx+rdi+40], r12
$LN91@dump:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 254  :                     context.out << '\"' << entry.first << "\":";

	mov	dl, 34					; 00000022H
	mov	rcx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rbx+56], 16

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR [rbx+32]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN107@dump

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rbx+32]
$LN107@dump:

; 5187 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	mov	r8, QWORD PTR [rbx+48]
	mov	rcx, rax
	call	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
	mov	rcx, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 254  :                     context.out << '\"' << entry.first << "\":";

	lea	rdx, OFFSET FLAT:??_C@_02BONOGKBK@?$CC?3@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 106  :     bool is_object()     const { return m_Type == type_t::object;    }

	mov	eax, DWORD PTR [rbx+96]
	dec	eax
	cmp	eax, 1
	jbe	SHORT $LN71@dump
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 221  :     if (indent < 0)

	cmp	DWORD PTR [rdi+232], r12d
	jl	SHORT $LN119@dump

; 222  :         return;
; 223  : 
; 224  :     out.put(' ');

	mov	dl, 32					; 00000020H
	mov	rcx, rdi
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
$LN119@dump:

; 255  :                     if (!entry.second.is_structured())
; 256  :                     {
; 257  :                         context.write_separator();
; 258  :                         entry.second.dump(context, 0);

	mov	r8d, r12d

; 259  :                     }

	jmp	SHORT $LN4@dump
$LN71@dump:

; 229  :     if (indent < 0)

	cmp	DWORD PTR [rdi+232], r12d
	jl	SHORT $LN147@dump

; 230  :         return;
; 231  : 
; 232  :     out.put('\n');

	mov	dl, 10
	mov	rcx, rdi
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
$LN147@dump:

; 260  :                     else
; 261  :                     {
; 262  :                         context.write_newline();
; 263  :                         entry.second.dump(context, level + 1);

	mov	r8d, r14d
$LN4@dump:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

	mov	rdx, rdi
	lea	rcx, QWORD PTR [rbx+64]
	call	?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z ; crude_json::value::dump
	mov	rax, QWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+25], r12b
	je	SHORT $LN80@dump

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+25], r12b
	jne	SHORT $LN285@dump
	npad	6
$LL78@dump:
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN285@dump

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

	mov	rbx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+25], r12b
	je	SHORT $LL78@dump
$LN285@dump:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())

	mov	rbx, rax

; 58   :         } else {

	jmp	SHORT $LN85@dump
$LN80@dump:

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [rax]

; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

	mov	rbx, rax

; 453  :         while (!_Pnode->_Left->_Isnil) {

	cmp	BYTE PTR [rcx+25], r12b
	jne	SHORT $LN85@dump
	npad	12
$LL84@dump:
	mov	rax, QWORD PTR [rcx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	rbx, rcx
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], r12b
	je	SHORT $LL84@dump
$LN85@dump:

; 107  :         return !!_Ptr->_Isnil; // TRANSITION, avoid warning C4800:

	cmp	BYTE PTR [rbx+25], r12b
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 250  :                 for (auto& entry : *object_ptr(m_Storage))

	je	$LL81@dump

; 229  :     if (indent < 0)

	cmp	DWORD PTR [rdi+232], r12d
	jl	SHORT $LN122@dump

; 230  :         return;
; 231  : 
; 232  :     out.put('\n');

	mov	dl, 10
	mov	rcx, rdi
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
$LN122@dump:

; 264  :                     }
; 265  :                 }
; 266  :                 if (!first)
; 267  :                     context.write_newline();
; 268  :             }
; 269  :             context.write_indent(level);

	mov	edx, r13d
	mov	rcx, rdi
	call	?write_indent@dump_context_t@value@crude_json@@QEAAXH@Z ; crude_json::value::dump_context_t::write_indent

; 270  :             context.out << '}';

	mov	dl, 125					; 0000007dH
	mov	rcx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
	mov	r15, QWORD PTR [rsp+304]

; 271  :             break;

	jmp	$LN338@dump
$LN20@dump:

; 272  : 
; 273  :         case type_t::array:
; 274  :             context.out << '[';

	mov	dl, 91					; 0000005bH
	mov	rcx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 229  :     if (indent < 0)

	cmp	DWORD PTR [rdi+232], r12d
	jl	SHORT $LN150@dump

; 230  :         return;
; 231  : 
; 232  :     out.put('\n');

	mov	dl, 10
	mov	rcx, rdi
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
$LN150@dump:

; 275  :             {
; 276  :                 context.write_newline();
; 277  :                 bool first = true;
; 278  :                 for (auto& entry : *array_ptr(m_Storage))

	mov	r14, QWORD PTR [rbx+8]
	mov	bpl, 1
	mov	rbx, QWORD PTR [rbx]
	cmp	rbx, r14
	je	$LN144@dump
	lea	esi, DWORD PTR [r13+1]
$LL9@dump:

; 279  :                 {
; 280  :                     if (!first) { context.out << ','; context.write_newline(); } else first = false;

	test	bpl, bpl
	jne	SHORT $LN21@dump
	mov	dl, 44					; 0000002cH
	mov	rcx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 229  :     if (indent < 0)

	cmp	DWORD PTR [rdi+232], r12d
	jl	SHORT $LN22@dump

; 230  :         return;
; 231  : 
; 232  :     out.put('\n');

	mov	dl, 10
	mov	rcx, rdi
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z

; 233  : }

	jmp	SHORT $LN22@dump
$LN21@dump:

; 279  :                 {
; 280  :                     if (!first) { context.out << ','; context.write_newline(); } else first = false;

	xor	bpl, bpl
$LN22@dump:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 106  :     bool is_object()     const { return m_Type == type_t::object;    }

	mov	eax, DWORD PTR [rbx+32]
	dec	eax
	cmp	eax, 1
	jbe	SHORT $LN23@dump
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 210  :     if (indent <= 0 || level == 0)

	cmp	DWORD PTR [rdi+232], r12d
	jle	SHORT $LN133@dump
	test	esi, esi
	je	SHORT $LN133@dump

; 211  :         return;
; 212  : 
; 213  :     out.fill(indent_char);

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\ios

; 105  :         _Fillch        = _Newfill;

	movzx	eax, BYTE PTR [rdi+236]
	mov	BYTE PTR [rcx+rdi+88], al
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 214  :     out.width(indent * level);

	mov	eax, esi
	imul	eax, DWORD PTR [rdi+232]
	movsxd	rdx, eax
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase

; 296  :         _Wide                      = _Newwidth;

	mov	QWORD PTR [rcx+rdi+40], rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 215  :     out << indent_char;

	mov	rcx, rdi
	movzx	edx, BYTE PTR [rdi+236]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 216  :     out.width(0);

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xiosbase

; 296  :         _Wide                      = _Newwidth;

	mov	QWORD PTR [rcx+rdi+40], r12
$LN133@dump:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 284  :                         entry.dump(context, 0);

	mov	r8d, r12d

; 285  :                     }

	jmp	SHORT $LN7@dump
$LN23@dump:

; 286  :                     else
; 287  :                     {
; 288  :                         entry.dump(context, level + 1);

	mov	r8d, esi
$LN7@dump:

; 275  :             {
; 276  :                 context.write_newline();
; 277  :                 bool first = true;
; 278  :                 for (auto& entry : *array_ptr(m_Storage))

	mov	rdx, rdi
	mov	rcx, rbx
	call	?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z ; crude_json::value::dump
	add	rbx, 40					; 00000028H
	cmp	rbx, r14
	jne	$LL9@dump

; 229  :     if (indent < 0)

	cmp	DWORD PTR [rdi+232], r12d
	jl	SHORT $LN144@dump

; 230  :         return;
; 231  : 
; 232  :     out.put('\n');

	mov	dl, 10
	mov	rcx, rdi
	call	QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
$LN144@dump:

; 289  :                     }
; 290  :                 }
; 291  :                 if (!first)
; 292  :                     context.write_newline();
; 293  :             }
; 294  :             context.write_indent(level);

	mov	edx, r13d
	mov	rcx, rdi
	call	?write_indent@dump_context_t@value@crude_json@@QEAAXH@Z ; crude_json::value::dump_context_t::write_indent

; 295  :             context.out << ']';

	mov	dl, 93					; 0000005dH
	mov	rcx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 296  :             break;

	jmp	$LN338@dump
$LN26@dump:

; 297  : 
; 298  :         case type_t::string:
; 299  :             context.out << '\"';

	mov	dl, 34					; 00000022H
	mov	rcx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rbp, QWORD PTR [rbx+24]

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rsi, rbx

; 4433 :         return static_cast<size_type>(_Traits_find_first_of<_Traits>(

	mov	r14, QWORD PTR [rbx+16]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rbp, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN276@dump

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rsi, QWORD PTR [rbx]
$LN276@dump:

; 719  :     if (_Needle_size != 0 && _Start_at < _Hay_size) { // room for match, look for it

	test	r14, r14
	je	SHORT $LN273@dump
	xor	edx, edx
	lea	rcx, QWORD PTR _Matches$1[rsp]
	mov	r8d, 256				; 00000100H
	call	memset

; 720  :         if constexpr (_Special) {
; 721  :             _String_bitmap<typename _Traits::char_type> _Matches;
; 722  :             if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the

	lea	rcx, OFFSET FLAT:??_C@_07PBJOHOHP@?$CC?2?1?$AI?$AM?6?$AN@
	lea	rdx, OFFSET FLAT:??_C@_07PBJOHOHP@?$CC?2?1?$AI?$AM?6?$AN@+7
	npad	7
$LL186@dump:

; 670  :             _Matches[static_cast<unsigned char>(*_First)] = true;

	movzx	eax, BYTE PTR [rcx]
	inc	rcx
	mov	BYTE PTR _Matches$1[rsp+rax], 1
	cmp	rcx, rdx
	jne	SHORT $LL186@dump

; 728  :             for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

	lea	rdx, QWORD PTR [r14+rsi]
	mov	rcx, rsi
	cmp	rsi, rdx
	jae	SHORT $LN273@dump
	npad	4
$LL176@dump:

; 677  :         return _Matches[static_cast<unsigned char>(_Ch)];

	movzx	eax, BYTE PTR [rcx]

; 729  :                 if (_Matches._Match(*_Match_try)) {

	cmp	BYTE PTR _Matches$1[rsp+rax], r12b
	jne	SHORT $LN244@dump

; 723  :                                                                     // bitmap, fall back to the serial algorithm
; 724  :                 return _Traits_find_first_of<_Traits, false>(_Haystack, _Hay_size, _Start_at, _Needle, _Needle_size);
; 725  :             }
; 726  : 
; 727  :             const auto _End = _Haystack + _Hay_size;
; 728  :             for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

	inc	rcx
	cmp	rcx, rdx
	jb	SHORT $LL176@dump

; 729  :                 if (_Matches._Match(*_Match_try)) {

	jmp	SHORT $LN273@dump
$LN244@dump:

; 730  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match

	sub	rcx, rsi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 301  :             if (string_ptr(m_Storage)->find_first_of("\"\\/\b\f\n\r") != string::npos || string_ptr(m_Storage)->find('\0') != string::npos)

	cmp	rcx, -1
	jne	SHORT $LN29@dump
$LN273@dump:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rsi, rbx

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rbp, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN277@dump

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rsi, QWORD PTR [rbx]
$LN277@dump:

; 610  :     if (_Start_at < _Hay_size) {

	test	r14, r14
	je	$LN274@dump

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	mov	r8, r14
	xor	edx, edx
	mov	rcx, rsi
	call	memchr

; 612  :         if (_Found_at) {

	test	rax, rax
	je	$LN274@dump

; 613  :             return static_cast<size_t>(_Found_at - _Haystack);

	sub	rax, rsi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 301  :             if (string_ptr(m_Storage)->find_first_of("\"\\/\b\f\n\r") != string::npos || string_ptr(m_Storage)->find('\0') != string::npos)

	cmp	rax, -1
	je	$LN274@dump
$LN29@dump:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rbp, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN278@dump

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rsi, QWORD PTR [rbx]
	mov	rax, rsi
	mov	rbx, rsi
	jmp	SHORT $LN209@dump
$LN278@dump:
	mov	rsi, rbx
	mov	rax, rbx
$LN209@dump:

; 3949 :         return _Mypair._Myval2._Myptr() + _Mypair._Myval2._Mysize;

	lea	rbp, QWORD PTR [r14+rax]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 303  :                 for (auto c : *string_ptr(m_Storage))

	cmp	rbx, rbp
	je	$LN11@dump
	npad	7
$LL12@dump:
	movzx	edx, BYTE PTR [rsi]

; 304  :                 {
; 305  :                          if (c == '\"')  context.out << "\\\"";

	mov	rcx, rdi
	cmp	dl, 34					; 00000022H
	jne	SHORT $LN30@dump
	lea	rdx, OFFSET FLAT:??_C@_02MCKKLHBJ@?2?$CC@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN10@dump
$LN30@dump:

; 306  :                     else if (c == '\\')  context.out << "\\\\";

	cmp	dl, 92					; 0000005cH
	jne	SHORT $LN32@dump
	lea	rdx, OFFSET FLAT:??_C@_02HDBGODGB@?2?2@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	$LN10@dump
$LN32@dump:

; 307  :                     else if (c == '/')   context.out << "\\/";

	cmp	dl, 47					; 0000002fH
	jne	SHORT $LN34@dump
	lea	rdx, OFFSET FLAT:??_C@_02HHAEMJFE@?2?1@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN10@dump
$LN34@dump:

; 308  :                     else if (c == '\b')  context.out << "\\b";

	cmp	dl, 8
	jne	SHORT $LN36@dump
	lea	rdx, OFFSET FLAT:??_C@_02DCNDPIBM@?2b@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN10@dump
$LN36@dump:

; 309  :                     else if (c == '\f')  context.out << "\\f";

	cmp	dl, 12
	jne	SHORT $LN38@dump
	lea	rdx, OFFSET FLAT:??_C@_02FGLPDNBI@?2f@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN10@dump
$LN38@dump:

; 310  :                     else if (c == '\n')  context.out << "\\n";

	cmp	dl, 10
	jne	SHORT $LN40@dump
	lea	rdx, OFFSET FLAT:??_C@_02JOGGLHBA@?2n@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN10@dump
$LN40@dump:

; 311  :                     else if (c == '\r')  context.out << "\\r";

	cmp	dl, 13
	jne	SHORT $LN42@dump
	lea	rdx, OFFSET FLAT:??_C@_02HIBBOKEN@?2r@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN10@dump
$LN42@dump:

; 312  :                     else if (c == '\t')  context.out << "\\t";

	cmp	dl, 9
	jne	SHORT $LN44@dump
	lea	rdx, OFFSET FLAT:??_C@_02COELENML@?2t@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN10@dump
$LN44@dump:

; 313  :                     else if (c == 0)     context.out << "\\u0000";

	test	dl, dl
	jne	SHORT $LN46@dump
	lea	rdx, OFFSET FLAT:??_C@_06HHCOKMHE@?2u0000@
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN10@dump
$LN46@dump:

; 314  :                     else                 context.out << c;

	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
$LN10@dump:

; 303  :                 for (auto c : *string_ptr(m_Storage))

	inc	rsi
	cmp	rsi, rbp
	jne	$LL12@dump

; 319  :             context.out << '\"';

	mov	dl, 34					; 00000022H
	mov	rcx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 320  :             break;

	jmp	SHORT $LN338@dump
$LN274@dump:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rbp, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN231@dump

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rbx]
$LN231@dump:

; 5187 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	mov	r8, r14
	mov	rdx, rbx
	mov	rcx, rdi
	call	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
$LN11@dump:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 319  :             context.out << '\"';

	mov	dl, 34					; 00000022H
	mov	rcx, rdi
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >

; 320  :             break;

	jmp	SHORT $LN338@dump
$LN48@dump:

; 321  : 
; 322  : 
; 323  :         case type_t::boolean:
; 324  :             if (*boolean_ptr(m_Storage))
; 325  :                 context.out << "true";
; 326  :             else
; 327  :                 context.out << "false";
; 328  :             break;

	cmp	BYTE PTR [rbx], r12b
	lea	rax, OFFSET FLAT:??_C@_05LAPONLG@false@
	lea	rdx, OFFSET FLAT:??_C@_04LOAJBDKD@true@
	mov	rcx, rdi
	cmove	rdx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	jmp	SHORT $LN338@dump
$LN51@dump:

; 329  : 
; 330  :         case type_t::number:
; 331  :             context.out << *number_ptr(m_Storage);

	movsd	xmm1, QWORD PTR [rbx]
	mov	rcx, rdi
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
$LN338@dump:
	mov	rsi, QWORD PTR [rsp+320]
	mov	rbp, QWORD PTR [rsp+392]
	mov	r14, QWORD PTR [rsp+312]
$LN52@dump:

; 332  :             break;
; 333  : 
; 334  :         default:
; 335  :             break;
; 336  :     }
; 337  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 328				; 00000148H
	pop	r13
	pop	r12
	pop	rdi
	pop	rbx
	ret	0
$LN284@dump:
	DD	$LN13@dump
	DD	$LN14@dump
	DD	$LN20@dump
	DD	$LN26@dump
	DD	$LN48@dump
	DD	$LN51@dump
?dump@value@crude_json@@AEBAXAEAUdump_context_t@12@H@Z ENDP ; crude_json::value::dump
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAX_K@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ??0parser@value@crude_json@@QEAA@PEBD0@Z
_TEXT	SEGMENT
this$ = 8
begin$ = 16
end$ = 24
??0parser@value@crude_json@@QEAA@PEBD0@Z PROC		; crude_json::value::parser::parser, COMDAT

; 342  :         : m_Cursor(begin)

	mov	QWORD PTR [rcx], rdx

; 345  :     }

	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	ret	0
??0parser@value@crude_json@@QEAA@PEBD0@Z ENDP		; crude_json::value::parser::parser
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?parse@parser@value@crude_json@@QEAA?AU23@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 80
this$ = 112
__$ReturnUdt$ = 120
?parse@parser@value@crude_json@@QEAA?AU23@XZ PROC	; crude_json::value::parser::parse, COMDAT

; 348  :     {

$LN255:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rbx, rdx
	mov	rsi, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rdx
	xor	eax, eax
	mov	DWORD PTR $T1[rsp], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR [rdx+32], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 361  :         return v;

	mov	DWORD PTR $T1[rsp], 1

; 349  :         value v;
; 350  : 
; 351  :         // Switch to C locale to make strtod and strtol work as expected
; 352  :         auto previous_locale = std::setlocale(LC_NUMERIC, "C");

	lea	rdx, OFFSET FLAT:??_C@_01GFHCPBMG@C@
	lea	ecx, QWORD PTR [rax+4]
	call	QWORD PTR __imp_setlocale
	mov	rdi, rax

; 353  : 
; 354  :         // Accept single value only when end of the stream is reached.
; 355  :         if (!accept_element(v) || !eof())

	mov	rdx, rbx
	mov	rcx, rsi
	call	?accept_element@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_element
	test	al, al
	je	SHORT $LN3@parse

; 819  :         return m_Cursor == m_End;

	mov	rax, QWORD PTR [rsi+8]
	cmp	QWORD PTR [rsi], rax

; 353  : 
; 354  :         // Accept single value only when end of the stream is reached.
; 355  :         if (!accept_element(v) || !eof())

	je	SHORT $LN181@parse
$LN3@parse:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR $T2[rsp+32], 6
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 356  :             v = value(type_t::discarded);

	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rbx
	call	??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z ; crude_json::value::operator=
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 191  :         switch (type)

	mov	ecx, DWORD PTR $T2[rsp+32]
	sub	ecx, 1
	je	SHORT $LN175@parse
	sub	ecx, 1
	je	SHORT $LN176@parse
	cmp	ecx, 1
	jne	SHORT $LN181@parse
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T2[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN181@parse
$LN176@parse:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR $T2[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN181@parse
$LN175@parse:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR $T2[rsp]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR $T2[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN181@parse:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 358  :         if (previous_locale && strcmp(previous_locale, "C") != 0)

	test	rdi, rdi
	je	SHORT $LN251@parse
	cmp	BYTE PTR [rdi], 67			; 00000043H
	jne	SHORT $LN250@parse
	cmp	BYTE PTR [rdi+1], 0
	je	SHORT $LN251@parse
$LN250@parse:

; 359  :             std::setlocale(LC_NUMERIC, previous_locale);

	mov	rdx, rdi
	mov	ecx, 4
	call	QWORD PTR __imp_setlocale
$LN251@parse:

; 362  :     }

	mov	rax, rbx
	lea	r11, QWORD PTR [rsp+96]
	mov	rbx, QWORD PTR [r11+32]
	mov	rsi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	rdi
	ret	0
	int	3
?parse@parser@value@crude_json@@QEAA?AU23@XZ ENDP	; crude_json::value::parser::parse
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 80
this$ = 112
__$ReturnUdt$ = 120
?dtor$0@?0??parse@parser@value@crude_json@@QEAA?AU23@XZ@4HA PROC ; `crude_json::value::parser::parse'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN7@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
	call	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
$LN7@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??parse@parser@value@crude_json@@QEAA?AU23@XZ@4HA ENDP ; `crude_json::value::parser::parse'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 80
this$ = 112
__$ReturnUdt$ = 120
?dtor$1@?0??parse@parser@value@crude_json@@QEAA?AU23@XZ@4HA PROC ; `crude_json::value::parser::parse'::`1'::dtor$1
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$1@?0??parse@parser@value@crude_json@@QEAA?AU23@XZ@4HA ENDP ; `crude_json::value::parser::parse'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ??0cursor_state@parser@value@crude_json@@QEAA@PEAU123@@Z
_TEXT	SEGMENT
this$ = 8
p$ = 16
??0cursor_state@parser@value@crude_json@@QEAA@PEAU123@@Z PROC ; crude_json::value::parser::cursor_state::cursor_state, COMDAT

; 368  :             : m_Owner(p)

	mov	QWORD PTR [rcx], rdx

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx+8], rax

; 371  :         }

	mov	rax, rcx
	ret	0
??0cursor_state@parser@value@crude_json@@QEAA@PEAU123@@Z ENDP ; crude_json::value::parser::cursor_state::cursor_state
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?reset@cursor_state@parser@value@crude_json@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?reset@cursor_state@parser@value@crude_json@@QEAAXXZ PROC ; crude_json::value::parser::cursor_state::reset, COMDAT

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	rdx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax

; 376  :         }

	ret	0
?reset@cursor_state@parser@value@crude_json@@QEAAXXZ ENDP ; crude_json::value::parser::cursor_state::reset
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ??Rcursor_state@parser@value@crude_json@@QEAA_N_N@Z
_TEXT	SEGMENT
this$ = 8
accept$ = 16
??Rcursor_state@parser@value@crude_json@@QEAA_N_N@Z PROC ; crude_json::value::parser::cursor_state::operator(), COMDAT

; 379  :         {

	mov	r8, QWORD PTR [rcx]

; 380  :             if (!accept)

	test	dl, dl
	jne	SHORT $LN2@operator

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [r8], rax

; 384  :             return accept;
; 385  :         }

	movzx	eax, dl
	ret	0
$LN2@operator:

; 381  :                 reset();
; 382  :             else
; 383  :                 m_LastCursor = m_Owner->m_Cursor;

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax

; 384  :             return accept;
; 385  :         }

	movzx	eax, dl
	ret	0
??Rcursor_state@parser@value@crude_json@@QEAA_N_N@Z ENDP ; crude_json::value::parser::cursor_state::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?state@parser@value@crude_json@@AEAA?AUcursor_state@123@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?state@parser@value@crude_json@@AEAA?AUcursor_state@123@XZ PROC ; crude_json::value::parser::state, COMDAT

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx+8], rax

; 394  :         return cursor_state(this);

	mov	rax, rdx

; 368  :             : m_Owner(p)

	mov	QWORD PTR [rdx], rcx

; 395  :     }

	ret	0
?state@parser@value@crude_json@@AEAA?AUcursor_state@123@XZ ENDP ; crude_json::value::parser::state
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_value@parser@value@crude_json@@AEAA_NAEAU23@@Z
_TEXT	SEGMENT
this$ = 48
result$ = 56
?accept_value@parser@value@crude_json@@AEAA_NAEAU23@@Z PROC ; crude_json::value::parser::accept_value, COMDAT

; 398  :     {

$LN81:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx

; 399  :         return accept_object(result)

	call	?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_object
	test	al, al
	jne	SHORT $LN3@accept_val
	mov	rdx, rdi
	mov	rcx, rbx
	call	?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_array
	test	al, al
	jne	SHORT $LN3@accept_val
	mov	rdx, rdi
	mov	rcx, rbx
	call	?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_string
	test	al, al
	jne	SHORT $LN3@accept_val
	mov	rdx, rdi
	mov	rcx, rbx
	call	?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_number
	test	al, al
	jne	SHORT $LN3@accept_val

; 774  :         auto last = m_Cursor;

	mov	r9, QWORD PTR [rbx]

; 739  :         if (accept("true"))

	lea	rdx, OFFSET FLAT:??_C@_04LOAJBDKD@true@

; 819  :         return m_Cursor == m_End;

	mov	r8, QWORD PTR [rbx+8]
	mov	rcx, r9
$LL11@accept_val:
	cmp	rcx, r8

; 778  :             if (eof() || *str != *m_Cursor)

	je	SHORT $LN49@accept_val
	movzx	eax, BYTE PTR [rcx]
	cmp	BYTE PTR [rdx], al
	jne	SHORT $LN49@accept_val

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rcx+1]
	mov	rcx, rax
	cmp	rax, r8
	mov	rax, rbx
	jbe	SHORT $LN18@accept_val

; 807  :         {
; 808  :             m_Cursor = m_End;

	mov	rcx, r8
$LN18@accept_val:

; 785  :             ++str;

	inc	rdx
	mov	QWORD PTR [rax], rcx
	cmp	BYTE PTR [rdx], 0
	jne	SHORT $LL11@accept_val

; 741  :             result = true;

	mov	dl, 1
$LN79@accept_val:

; 399  :         return accept_object(result)

	mov	rcx, rdi
	call	??4value@crude_json@@QEAAAEAU01@_N@Z	; crude_json::value::operator=
$LN3@accept_val:
	mov	al, 1

; 400  :             || accept_array(result)
; 401  :             || accept_string(result)
; 402  :             || accept_number(result)
; 403  :             || accept_boolean(result)
; 404  :             || accept_null(result);
; 405  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN49@accept_val:

; 819  :         return m_Cursor == m_End;

	mov	r8, QWORD PTR [rbx+8]

; 744  :         else if (accept("false"))

	lea	rdx, OFFSET FLAT:??_C@_05LAPONLG@false@

; 780  :                 m_Cursor = last;

	mov	QWORD PTR [rbx], r9

; 819  :         return m_Cursor == m_End;

	mov	rcx, r9
$LL22@accept_val:
	cmp	rcx, r8

; 778  :             if (eof() || *str != *m_Cursor)

	je	SHORT $LN50@accept_val
	movzx	eax, BYTE PTR [rcx]
	cmp	BYTE PTR [rdx], al
	jne	SHORT $LN50@accept_val

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rcx+1]
	cmp	rax, r8
	mov	rcx, rax
	cmova	rcx, r8

; 785  :             ++str;

	inc	rdx
	mov	QWORD PTR [rbx], rcx
	cmp	BYTE PTR [rdx], 0
	jne	SHORT $LL22@accept_val

; 747  :             return true;

	xor	edx, edx
	jmp	SHORT $LN79@accept_val
$LN50@accept_val:

; 780  :                 m_Cursor = last;

	mov	QWORD PTR [rbx], r9

; 755  :         if (accept("null"))

	lea	rdx, OFFSET FLAT:??_C@_04MLLLIHIP@null@

; 819  :         return m_Cursor == m_End;

	mov	rcx, r9
	npad	2
$LL36@accept_val:
	cmp	rcx, r8

; 778  :             if (eof() || *str != *m_Cursor)

	je	SHORT $LN51@accept_val
	movzx	eax, BYTE PTR [rcx]
	cmp	BYTE PTR [rdx], al
	jne	SHORT $LN51@accept_val

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rcx+1]
	cmp	rax, r8
	mov	rcx, rax
	cmova	rcx, r8

; 785  :             ++str;

	inc	rdx
	mov	QWORD PTR [rbx], rcx
	cmp	BYTE PTR [rdx], 0
	jne	SHORT $LL36@accept_val

; 757  :             result = nullptr;

	mov	rcx, rdi
	call	??4value@crude_json@@QEAAAEAU01@$$T@Z	; crude_json::value::operator=

; 399  :         return accept_object(result)

	mov	al, 1

; 400  :             || accept_array(result)
; 401  :             || accept_string(result)
; 402  :             || accept_number(result)
; 403  :             || accept_boolean(result)
; 404  :             || accept_null(result);
; 405  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN51@accept_val:

; 780  :                 m_Cursor = last;

	mov	QWORD PTR [rbx], r9

; 399  :         return accept_object(result)

	xor	al, al

; 400  :             || accept_array(result)
; 401  :             || accept_string(result)
; 402  :             || accept_number(result)
; 403  :             || accept_boolean(result)
; 404  :             || accept_null(result);
; 405  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?accept_value@parser@value@crude_json@@AEAA_NAEAU23@@Z ENDP ; crude_json::value::parser::accept_value
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z
_TEXT	SEGMENT
o$ = 32
other$2 = 48
other$3 = 48
__$ArrayPad$ = 88
this$ = 128
result$ = 136
?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z PROC ; crude_json::value::parser::accept_object, COMDAT

; 408  :     {

$LN648:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rbp
	push	rdi
	push	r14
	mov	rbp, rsp
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-96], rax
	mov	r14, rdx
	mov	rbx, rcx

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rsi, QWORD PTR [rcx]
	xorps	xmm1, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	movdqu	XMMWORD PTR o$[rbp-96], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR o$[rbp-96], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 819  :         return m_Cursor == m_End;

	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rbx+8]
	cmp	rcx, rdx

; 793  :         if (!eof())

	je	SHORT $LN6@accept_obj

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 123			; 0000007bH

; 766  :         if (expect(c))

	jne	SHORT $LN6@accept_obj

; 806  :         if (m_Cursor + count > m_End)

	inc	rcx
	mov	rax, rcx
	cmp	rcx, rdx
	cmova	rax, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rax

; 409  :         auto s = state();
; 410  : 
; 411  :         object o;
; 412  :         if (s(accept('{') && accept_ws() && accept('}')))

	ja	SHORT $LN6@accept_obj
	mov	rcx, rbx
	call	?accept_ws@parser@value@crude_json@@AEAA_NXZ ; crude_json::value::parser::accept_ws
	test	al, al
	je	SHORT $LN6@accept_obj

; 819  :         return m_Cursor == m_End;

	mov	rdx, QWORD PTR [rbx]
	mov	r8, QWORD PTR [rbx+8]
	cmp	rdx, r8

; 793  :         if (!eof())

	je	SHORT $LN6@accept_obj

; 801  :         return peek() == c;

	cmp	BYTE PTR [rdx], 125			; 0000007dH

; 766  :         if (expect(c))

	jne	SHORT $LN6@accept_obj

; 806  :         if (m_Cursor + count > m_End)

	inc	rdx
	mov	rax, rdx
	cmp	rdx, r8
	cmova	rax, r8

; 767  :             return advance();

	mov	QWORD PTR [rbx], rax

; 409  :         auto s = state();
; 410  : 
; 411  :         object o;
; 412  :         if (s(accept('{') && accept_ws() && accept('}')))

	ja	SHORT $LN6@accept_obj
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 63   :     value(const object&  v): m_Type(construct(m_Storage,           v))  {}

	lea	rdx, QWORD PTR o$[rbp-96]
	lea	rcx, QWORD PTR other$3[rbp-96]
	call	?construct@value@crude_json@@CA?AW4type_t@2@AEAT?$_Align_type@N$0CA@@std@@AEBV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@5@@Z ; crude_json::value::construct
	mov	DWORD PTR other$3[rbp-64], eax

; 78   :     value& operator=(const object&  v) { auto other = value(          v);  swap(other); return *this; }

	lea	rdx, QWORD PTR other$3[rbp-96]
	mov	rcx, r14
	call	?swap@value@crude_json@@QEAAXAEAU12@@Z	; crude_json::value::swap
	npad	1
	jmp	$LN645@accept_obj
$LN6@accept_obj:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rbx], rsi

; 819  :         return m_Cursor == m_End;

	mov	rdx, QWORD PTR [rbx+8]
	cmp	rsi, rdx

; 793  :         if (!eof())

	je	$LN641@accept_obj

; 801  :         return peek() == c;

	cmp	BYTE PTR [rsi], 123			; 0000007bH

; 766  :         if (expect(c))

	jne	$LN641@accept_obj

; 806  :         if (m_Cursor + count > m_End)

	lea	rcx, QWORD PTR [rsi+1]
	mov	rax, rcx
	cmp	rcx, rdx
	cmova	rax, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rax

; 413  :         {
; 414  :             result = o;
; 415  :             return true;
; 416  :         }
; 417  :         else if (s(accept('{') && accept_members(o) && accept('}')))

	ja	$LN641@accept_obj

; 428  :         if (!accept_member(o))

	lea	rdx, QWORD PTR o$[rbp-96]
	mov	rcx, rbx
	call	?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ; crude_json::value::parser::accept_member
	test	al, al
	je	$LN641@accept_obj
	npad	5
$LL332@accept_obj:

; 368  :             : m_Owner(p)

	mov	rdi, QWORD PTR [rbx]

; 819  :         return m_Cursor == m_End;

	mov	rax, QWORD PTR [rbx+8]
	cmp	rdi, rax

; 793  :         if (!eof())

	je	SHORT $LN640@accept_obj

; 801  :         return peek() == c;

	cmp	BYTE PTR [rdi], 44			; 0000002cH

; 766  :         if (expect(c))

	jne	SHORT $LN640@accept_obj

; 806  :         if (m_Cursor + count > m_End)

	lea	rcx, QWORD PTR [rdi+1]
	cmp	rcx, rax
	ja	SHORT $LN640@accept_obj

; 807  :         {
; 808  :             m_Cursor = m_End;
; 809  :             return false;
; 810  :         }
; 811  : 
; 812  :         m_Cursor += count;
; 813  : 
; 814  :         return true;

	mov	QWORD PTR [rbx], rcx

; 434  :             if (!s(accept(',') && accept_member(o)))

	lea	rdx, QWORD PTR o$[rbp-96]
	mov	rcx, rbx
	call	?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ; crude_json::value::parser::accept_member
	test	al, al
	jne	SHORT $LL332@accept_obj
$LN640@accept_obj:

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rbx], rdi

; 819  :         return m_Cursor == m_End;

	mov	rdx, QWORD PTR [rbx+8]
	cmp	rdi, rdx

; 793  :         if (!eof())

	je	$LN641@accept_obj

; 801  :         return peek() == c;

	cmp	BYTE PTR [rdi], 125			; 0000007dH

; 766  :         if (expect(c))

	jne	$LN641@accept_obj

; 806  :         if (m_Cursor + count > m_End)

	lea	rcx, QWORD PTR [rdi+1]
	mov	rax, rcx
	cmp	rcx, rdx
	cmova	rax, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rax

; 413  :         {
; 414  :             result = o;
; 415  :             return true;
; 416  :         }
; 417  :         else if (s(accept('{') && accept_members(o) && accept('}')))

	ja	$LN641@accept_obj
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	movdqu	XMMWORD PTR other$2[rbp-96], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

	mov	rcx, QWORD PTR o$[rbp-96]
	mov	QWORD PTR other$2[rbp-96], rcx

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR o$[rbp-96], rax

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	rcx, QWORD PTR other$2[rbp-88]

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR o$[rbp-88]
	mov	QWORD PTR other$2[rbp-88], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR o$[rbp-88], rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 62   :     value(      object&& v): m_Type(construct(m_Storage, std::move(v))) {}

	mov	DWORD PTR other$2[rbp-64], 1

; 77   :     value& operator=(      object&& v) { auto other = value(std::move(v)); swap(other); return *this; }

	lea	rdx, QWORD PTR other$2[rbp-96]
	mov	rcx, r14
	call	?swap@value@crude_json@@QEAAXAEAU12@@Z	; crude_json::value::swap
	npad	1
$LN645@accept_obj:

; 191  :         switch (type)

	mov	ecx, DWORD PTR other$2[rbp-64]
	sub	ecx, 1
	je	SHORT $LN431@accept_obj
	sub	ecx, 1
	je	SHORT $LN432@accept_obj
	cmp	ecx, 1
	jne	SHORT $LN437@accept_obj
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR other$2[rbp-96]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	r14b, 1
	jmp	SHORT $LN12@accept_obj
$LN432@accept_obj:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR other$2[rbp-96]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
	mov	r14b, 1
	jmp	SHORT $LN12@accept_obj
$LN431@accept_obj:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR other$2[rbp-96]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR other$2[rbp-96]
	lea	rcx, QWORD PTR other$2[rbp-96]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR other$2[rbp-96]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN437@accept_obj:
	mov	r14b, 1
	jmp	SHORT $LN12@accept_obj
$LN641@accept_obj:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rbx], rsi

; 423  :         return false;

	xor	r14b, r14b
$LN12@accept_obj:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	rax, QWORD PTR o$[rbp-96]
	mov	rsi, QWORD PTR [rax+8]

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rsi+25], 0
	jne	SHORT $LN96@accept_obj
	npad	6
$LL95@accept_obj:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rsi+16]
	lea	rdx, QWORD PTR o$[rbp-96]
	lea	rcx, QWORD PTR o$[rbp-96]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdi, rsi

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rsi, QWORD PTR [rsi]
	lea	rcx, QWORD PTR [rdi+64]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rcx+32]
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rsi+25], 0
	je	SHORT $LL95@accept_obj
$LN96@accept_obj:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR o$[rbp-96]
	call	??3@YAXPEAX_K@Z				; operator delete
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 423  :         return false;

	movzx	eax, r14b

; 424  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-96]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+96]
	mov	rbx, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rbp
	ret	0
?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z ENDP ; crude_json::value::parser::accept_object
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
o$ = 32
other$2 = 48
other$3 = 48
__$ArrayPad$ = 88
this$ = 128
result$ = 136
?dtor$0@?0??accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA PROC ; `crude_json::value::parser::accept_object'::`1'::dtor$0
	lea	rcx, QWORD PTR o$[rdx]
	jmp	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ
?dtor$0@?0??accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA ENDP ; `crude_json::value::parser::accept_object'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
o$ = 32
other$2 = 48
other$3 = 48
__$ArrayPad$ = 88
this$ = 128
result$ = 136
?dtor$6@?0??accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA PROC ; `crude_json::value::parser::accept_object'::`1'::dtor$6
	lea	rcx, QWORD PTR other$3[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$6@?0??accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA ENDP ; `crude_json::value::parser::accept_object'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
o$ = 32
other$2 = 48
other$3 = 48
__$ArrayPad$ = 88
this$ = 128
result$ = 136
?dtor$9@?0??accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA PROC ; `crude_json::value::parser::accept_object'::`1'::dtor$9
	lea	rcx, QWORD PTR other$2[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$9@?0??accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA ENDP ; `crude_json::value::parser::accept_object'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_members@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
o$ = 56
?accept_members@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z PROC ; crude_json::value::parser::accept_members, COMDAT

; 427  :     {

$LN55:
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx
	mov	rdi, rcx

; 428  :         if (!accept_member(o))

	call	?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ; crude_json::value::parser::accept_member
	test	al, al
	jne	SHORT $LN53@accept_mem

; 439  :     }

	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN53@accept_mem:
	mov	QWORD PTR [rsp+48], rbx
	npad	7
$LL2@accept_mem:

; 368  :             : m_Owner(p)

	mov	rbx, QWORD PTR [rdi]

; 819  :         return m_Cursor == m_End;

	mov	rax, QWORD PTR [rdi+8]
	cmp	rbx, rax

; 793  :         if (!eof())

	je	SHORT $LN48@accept_mem

; 801  :         return peek() == c;

	cmp	BYTE PTR [rbx], 44			; 0000002cH

; 766  :         if (expect(c))

	jne	SHORT $LN48@accept_mem

; 806  :         if (m_Cursor + count > m_End)

	lea	rcx, QWORD PTR [rbx+1]
	cmp	rcx, rax
	ja	SHORT $LN48@accept_mem

; 807  :         {
; 808  :             m_Cursor = m_End;
; 809  :             return false;
; 810  :         }
; 811  : 
; 812  :         m_Cursor += count;
; 813  : 
; 814  :         return true;

	mov	QWORD PTR [rdi], rcx

; 429  :             return false;
; 430  : 
; 431  :         while (true)
; 432  :         {
; 433  :             auto s = state();
; 434  :             if (!s(accept(',') && accept_member(o)))

	mov	rdx, rsi
	mov	rcx, rdi
	call	?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ; crude_json::value::parser::accept_member
	test	al, al
	jne	SHORT $LL2@accept_mem
$LN48@accept_mem:

; 439  :     }

	mov	rsi, QWORD PTR [rsp+56]
	mov	al, 1

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rdi], rbx

; 435  :                 break;
; 436  :         }
; 437  : 
; 438  :         return true;

	mov	rbx, QWORD PTR [rsp+48]

; 439  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?accept_members@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ENDP ; crude_json::value::parser::accept_members
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
o$GSCopy$1$ = 32
$T5 = 32
$T6 = 48
$T7 = 48
$T8 = 64
key$ = 88
v$ = 128
__$ArrayPad$ = 168
this$ = 240
o$ = 248
?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z PROC ; crude_json::value::parser::accept_member, COMDAT

; 442  :     {

$LN724:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-39]
	sub	rsp, 176				; 000000b0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-137], rax
	mov	QWORD PTR o$GSCopy$1$[rbp-137], rdx
	mov	rbx, rcx

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rsi, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	xor	edi, edi
	mov	DWORD PTR key$[rbp-105], edi
	mov	DWORD PTR v$[rbp-105], edi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 447  :         if (s(accept_ws() && accept_string(key) && accept_ws() && accept(':') && accept_element(v)))

	call	?accept_ws@parser@value@crude_json@@AEAA_NXZ ; crude_json::value::parser::accept_ws
	test	al, al
	je	$LN4@accept_mem
	lea	rdx, QWORD PTR key$[rbp-137]
	mov	rcx, rbx
	call	?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_string
	test	al, al
	je	$LN719@accept_mem
	mov	rcx, rbx
	call	?accept_ws@parser@value@crude_json@@AEAA_NXZ ; crude_json::value::parser::accept_ws
	test	al, al
	je	$LN719@accept_mem
	mov	dl, 58					; 0000003aH
	mov	rcx, rbx
	call	?accept@parser@value@crude_json@@AEAA_ND@Z ; crude_json::value::parser::accept
	test	al, al
	je	$LN719@accept_mem
	lea	rdx, QWORD PTR v$[rbp-137]
	mov	rcx, rbx
	call	?accept_element@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_element
	test	al, al
	je	$LN719@accept_mem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rsi, QWORD PTR o$GSCopy$1$[rbp-137]
	mov	r13, QWORD PTR [rsi]
	mov	rbx, QWORD PTR [r13+8]
	mov	QWORD PTR $T8[rbp-137], rbx
	mov	DWORD PTR $T8[rbp-129], edi
	mov	r15, r13

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	mov	r12, QWORD PTR key$[rbp-113]
	mov	r14, QWORD PTR key$[rbp-121]
	cmp	BYTE PTR [rbx+25], dil
	jne	SHORT $LN346@accept_mem
	npad	10
$LL345@accept_mem:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR $T8[rbp-137], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR key$[rbp-137]

; 2236 :         if (_Large_string_engaged()) {

	cmp	r12, 16
	cmovae	rdx, QWORD PTR key$[rbp-137]

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rsi, QWORD PTR [rcx+16]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rcx+24], 16
	jb	SHORT $LN366@accept_mem

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN366@accept_mem:

; 555  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

	mov	r8, rsi
	cmp	r14, rsi
	cmovb	r8, r14

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	SHORT $LN371@accept_mem

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	jns	SHORT $LN354@accept_mem
	mov	al, 255					; 000000ffH
	jmp	SHORT $LN355@accept_mem
$LN371@accept_mem:

; 561  :     if (_Left_size < _Right_size) {

	cmp	rsi, r14
	jae	SHORT $LN372@accept_mem

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	mov	al, 255					; 000000ffH
	jmp	SHORT $LN355@accept_mem
$LN372@accept_mem:

; 565  :     if (_Left_size > _Right_size) {

	jbe	SHORT $LN347@accept_mem
$LN354@accept_mem:

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	mov	al, 1
$LN355@accept_mem:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN347@accept_mem

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR $T8[rbp-129], edi

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN348@accept_mem
$LN347@accept_mem:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR $T8[rbp-129], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	r15, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN348@accept_mem:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL345@accept_mem
	mov	rsi, QWORD PTR o$GSCopy$1$[rbp-137]
$LN346@accept_mem:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [r15+25], 0
	jne	SHORT $LN713@accept_mem
	lea	rdx, QWORD PTR [r15+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rbx, QWORD PTR [rdx+16]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdx+24], 16
	jb	SHORT $LN396@accept_mem

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN396@accept_mem:

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR key$[rbp-137]

; 2236 :         if (_Large_string_engaged()) {

	cmp	r12, 16
	cmovae	rcx, QWORD PTR key$[rbp-137]

; 555  :     const int _Ans = _Traits::compare(_Left, _Right, (_STD min)(_Left_size, _Right_size));

	mov	r8, r14
	cmp	rbx, r14
	cmovb	r8, rbx

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	SHORT $LN406@accept_mem

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	jns	SHORT $LN389@accept_mem
	mov	al, 255					; 000000ffH
	jmp	SHORT $LN390@accept_mem
$LN406@accept_mem:

; 561  :     if (_Left_size < _Right_size) {

	cmp	r14, rbx
	jae	SHORT $LN407@accept_mem

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	mov	al, 255					; 000000ffH
	jmp	SHORT $LN390@accept_mem
$LN407@accept_mem:

; 565  :     if (_Left_size > _Right_size) {

	jbe	$LN687@accept_mem
$LN389@accept_mem:

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	mov	al, 1
$LN390@accept_mem:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	jns	$LN687@accept_mem
$LN713@accept_mem:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 177372539170284150			; 0276276276276276H
	cmp	QWORD PTR [rsi+8], rax
	je	$LN722@accept_mem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T7[rbp-137], rsi

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T7[rbp-129], rdi

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T7[rbp-129], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 807  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	lea	rcx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T5[rbp-137], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR [rcx+16], rdi

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rcx+24], rdi

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR key$[rbp-137]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR key$[rbp-121]
	movups	XMMWORD PTR [rcx+16], xmm1

; 4821 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR key$[rbp-121], xmm0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR key$[rbp-137], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	add	rcx, 32					; 00000020H
	lea	rdx, QWORD PTR v$[rbp-137]
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rbx], r13

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rbx+8], r13

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rbx+16], r13

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rbx+24], 0

; 1027 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR $T8[rbp-137]
	movaps	XMMWORD PTR $T6[rbp-137], xmm0
	mov	r8, rbx
	lea	rdx, QWORD PTR $T6[rbp-137]
	mov	rcx, rsi
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Insert_node
$LN687@accept_mem:
	mov	bl, 1
	mov	edi, DWORD PTR v$[rbp-105]
	jmp	SHORT $LN8@accept_mem
$LN719@accept_mem:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 447  :         if (s(accept_ws() && accept_string(key) && accept_ws() && accept(':') && accept_element(v)))

	mov	edi, DWORD PTR v$[rbp-105]
$LN4@accept_mem:

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rbx], rsi

; 453  :         return false;

	xor	bl, bl
$LN8@accept_mem:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 191  :         switch (type)

	sub	edi, 1
	je	SHORT $LN183@accept_mem
	sub	edi, 1
	je	SHORT $LN184@accept_mem
	cmp	edi, 1
	jne	SHORT $LN189@accept_mem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR v$[rbp-137]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN189@accept_mem
$LN184@accept_mem:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR v$[rbp-137]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN189@accept_mem
$LN183@accept_mem:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR v$[rbp-137]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR v$[rbp-137]
	lea	rcx, QWORD PTR v$[rbp-137]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR v$[rbp-137]
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN189@accept_mem:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 191  :         switch (type)

	mov	ecx, DWORD PTR key$[rbp-105]
	sub	ecx, 1
	je	SHORT $LN263@accept_mem
	sub	ecx, 1
	je	SHORT $LN264@accept_mem
	cmp	ecx, 1
	jne	SHORT $LN269@accept_mem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR key$[rbp-137]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN269@accept_mem
$LN264@accept_mem:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR key$[rbp-137]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN269@accept_mem
$LN263@accept_mem:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR key$[rbp-137]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR key$[rbp-137]
	lea	rcx, QWORD PTR key$[rbp-137]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR key$[rbp-137]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN269@accept_mem:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 453  :         return false;

	movzx	eax, bl

; 454  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-137]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+256]
	add	rsp, 176				; 000000b0H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN722@accept_mem:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	npad	1
$LN720@accept_mem:
?accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z ENDP ; crude_json::value::parser::accept_member
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
o$GSCopy$1$ = 32
$T5 = 32
$T6 = 48
$T7 = 48
$T8 = 64
key$ = 88
v$ = 128
__$ArrayPad$ = 168
this$ = 240
o$ = 248
?dtor$0@?0??accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA PROC ; `crude_json::value::parser::accept_member'::`1'::dtor$0
	lea	rcx, QWORD PTR key$[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$0@?0??accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA ENDP ; `crude_json::value::parser::accept_member'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
o$GSCopy$1$ = 32
$T5 = 32
$T6 = 48
$T7 = 48
$T8 = 64
key$ = 88
v$ = 128
__$ArrayPad$ = 168
this$ = 240
o$ = 248
?dtor$1@?0??accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA PROC ; `crude_json::value::parser::accept_member'::`1'::dtor$1
	lea	rcx, QWORD PTR v$[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$1@?0??accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA ENDP ; `crude_json::value::parser::accept_member'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
o$GSCopy$1$ = 32
$T5 = 32
$T6 = 48
$T7 = 48
$T8 = 64
key$ = 88
v$ = 128
__$ArrayPad$ = 168
this$ = 240
o$ = 248
?dtor$16@?0??accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA PROC ; `crude_json::value::parser::accept_member'::`1'::dtor$16
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$16@?0??accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA ENDP ; `crude_json::value::parser::accept_member'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
o$GSCopy$1$ = 32
$T5 = 32
$T6 = 48
$T7 = 48
$T8 = 64
key$ = 88
v$ = 128
__$ArrayPad$ = 168
this$ = 240
o$ = 248
?dtor$15@?0??accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA PROC ; `crude_json::value::parser::accept_member'::`1'::dtor$15
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$15@?0??accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA ENDP ; `crude_json::value::parser::accept_member'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
o$GSCopy$1$ = 32
$T5 = 32
$T6 = 48
$T7 = 48
$T8 = 64
key$ = 88
v$ = 128
__$ArrayPad$ = 168
this$ = 240
o$ = 248
?dtor$17@?0??accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA PROC ; `crude_json::value::parser::accept_member'::`1'::dtor$17
	mov	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$17@?0??accept_member@parser@value@crude_json@@AEAA_NAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@Z@4HA ENDP ; `crude_json::value::parser::accept_member'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z
_TEXT	SEGMENT
$T1 = 32
a$ = 56
__$ArrayPad$ = 80
this$ = 112
result$ = 120
?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z PROC ; crude_json::value::parser::accept_array, COMDAT

; 457  :     {

$LN114:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rsi, rdx
	mov	rbx, rcx

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rdi, QWORD PTR [rcx]

; 819  :         return m_Cursor == m_End;

	mov	rdx, QWORD PTR [rcx+8]
	cmp	rdi, rdx

; 793  :         if (!eof())

	je	SHORT $LN5@accept_arr

; 801  :         return peek() == c;

	cmp	BYTE PTR [rdi], 91			; 0000005bH

; 766  :         if (expect(c))

	jne	SHORT $LN5@accept_arr

; 806  :         if (m_Cursor + count > m_End)

	lea	rcx, QWORD PTR [rdi+1]
	mov	rax, rcx
	cmp	rcx, rdx
	cmova	rax, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rax

; 458  :         auto s = state();
; 459  : 
; 460  :         if (s(accept('[') && accept_ws() && accept(']')))

	ja	SHORT $LN5@accept_arr
	mov	rcx, rbx
	call	?accept_ws@parser@value@crude_json@@AEAA_NXZ ; crude_json::value::parser::accept_ws
	test	al, al
	je	SHORT $LN5@accept_arr

; 819  :         return m_Cursor == m_End;

	mov	rdx, QWORD PTR [rbx]
	mov	r8, QWORD PTR [rbx+8]
	cmp	rdx, r8

; 793  :         if (!eof())

	je	SHORT $LN5@accept_arr

; 801  :         return peek() == c;

	cmp	BYTE PTR [rdx], 93			; 0000005dH

; 766  :         if (expect(c))

	jne	SHORT $LN5@accept_arr

; 806  :         if (m_Cursor + count > m_End)

	inc	rdx
	mov	rax, rdx
	cmp	rdx, r8
	cmova	rax, r8

; 767  :             return advance();

	mov	QWORD PTR [rbx], rax

; 458  :         auto s = state();
; 459  : 
; 460  :         if (s(accept('[') && accept_ws() && accept(']')))

	ja	SHORT $LN5@accept_arr
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	movdqu	XMMWORD PTR $T1[rsp], xmm0
	mov	QWORD PTR $T1[rsp+16], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 462  :             result = array();

	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rsi
	call	??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z ; crude_json::value::operator=
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR $T1[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 463  :             return true;

	mov	al, 1
	jmp	$LN1@accept_arr
$LN5@accept_arr:

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rbx], rdi
	xor	eax, eax
	xorps	xmm1, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	movdqu	XMMWORD PTR a$[rsp], xmm1
	mov	QWORD PTR a$[rsp+16], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 819  :         return m_Cursor == m_End;

	mov	rdx, QWORD PTR [rbx+8]
	cmp	rdi, rdx

; 793  :         if (!eof())

	je	SHORT $LN7@accept_arr

; 801  :         return peek() == c;

	cmp	BYTE PTR [rdi], 91			; 0000005bH

; 766  :         if (expect(c))

	jne	SHORT $LN7@accept_arr

; 806  :         if (m_Cursor + count > m_End)

	lea	rcx, QWORD PTR [rdi+1]
	mov	rax, rcx
	cmp	rcx, rdx
	cmova	rax, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rax

; 464  :         }
; 465  : 
; 466  :         array a;
; 467  :         if (s(accept('[') && accept_elements(a) && accept(']')))

	ja	SHORT $LN7@accept_arr
	lea	rdx, QWORD PTR a$[rsp]
	mov	rcx, rbx
	call	?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z ; crude_json::value::parser::accept_elements
	test	al, al
	je	SHORT $LN7@accept_arr

; 819  :         return m_Cursor == m_End;

	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rbx+8]
	cmp	rcx, rdx

; 793  :         if (!eof())

	je	SHORT $LN7@accept_arr

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 93			; 0000005dH

; 766  :         if (expect(c))

	jne	SHORT $LN7@accept_arr

; 806  :         if (m_Cursor + count > m_End)

	inc	rcx
	mov	rax, rcx
	cmp	rcx, rdx
	cmova	rax, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rax

; 464  :         }
; 465  : 
; 466  :         array a;
; 467  :         if (s(accept('[') && accept_elements(a) && accept(']')))

	ja	SHORT $LN7@accept_arr

; 468  :         {
; 469  :             result = std::move(a);

	lea	rdx, QWORD PTR a$[rsp]
	mov	rcx, rsi
	call	??4value@crude_json@@QEAAAEAU01@$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z ; crude_json::value::operator=
	mov	bl, 1
	jmp	SHORT $LN11@accept_arr
$LN7@accept_arr:

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rbx], rdi

; 473  :         return false;

	xor	bl, bl
$LN11@accept_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR a$[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 473  :         return false;

	movzx	eax, bl
$LN1@accept_arr:

; 474  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+96]
	mov	rbx, QWORD PTR [r11+32]
	mov	rsi, QWORD PTR [r11+40]
	mov	rsp, r11
	pop	rdi
	ret	0
?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z ENDP ; crude_json::value::parser::accept_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
a$ = 56
__$ArrayPad$ = 80
this$ = 112
result$ = 120
?dtor$0@?0??accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA PROC ; `crude_json::value::parser::accept_array'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::~vector<crude_json::value,std::allocator<crude_json::value> >
?dtor$0@?0??accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA ENDP ; `crude_json::value::parser::accept_array'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
a$ = 56
__$ArrayPad$ = 80
this$ = 112
result$ = 120
?dtor$1@?0??accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA PROC ; `crude_json::value::parser::accept_array'::`1'::dtor$1
	lea	rcx, QWORD PTR a$[rdx]
	jmp	??1?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::~vector<crude_json::value,std::allocator<crude_json::value> >
?dtor$1@?0??accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA ENDP ; `crude_json::value::parser::accept_array'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z
_TEXT	SEGMENT
v$ = 32
other$2 = 72
__$ArrayPad$ = 112
this$ = 160
a$ = 168
?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z PROC ; crude_json::value::parser::accept_elements, COMDAT

; 477  :     {

$LN436:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rbp
	push	rdi
	push	r14
	mov	rbp, rsp
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-128], rax
	mov	rbx, rdx
	mov	rdi, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	xor	r14d, r14d
	mov	DWORD PTR v$[rbp-96], r14d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 479  :         if (!accept_element(v))

	lea	rdx, QWORD PTR v$[rbp-128]
	call	?accept_element@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_element
	test	al, al
	jne	SHORT $LN4@accept_ele
	xor	bl, bl
	jmp	$LN10@accept_ele
$LN4@accept_ele:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rax, QWORD PTR [rbx+8]
	cmp	rax, QWORD PTR [rbx+16]
	jne	$LN432@accept_ele
$LN132@accept_ele:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 369  :             , m_LastCursor(p->m_Cursor)

	lea	r8, QWORD PTR v$[rbp-128]
	mov	rdx, rax
	mov	rcx, rbx
	call	??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_reallocate<crude_json::value>
	npad	12
$LL2@accept_ele:
	mov	rsi, QWORD PTR [rdi]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR other$2[rbp-96], r14d

; 76   :     value& operator=(      null)       { auto other = value(           );  swap(other); return *this; }

	lea	rdx, QWORD PTR other$2[rbp-128]
	lea	rcx, QWORD PTR v$[rbp-128]
	call	?swap@value@crude_json@@QEAAXAEAU12@@Z	; crude_json::value::swap
	npad	1

; 191  :         switch (type)

	mov	ecx, DWORD PTR other$2[rbp-96]
	sub	ecx, 1
	je	SHORT $LN232@accept_ele
	sub	ecx, 1
	je	SHORT $LN233@accept_ele
	cmp	ecx, 1
	jne	SHORT $LN238@accept_ele
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR other$2[rbp-128]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN238@accept_ele
$LN233@accept_ele:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR other$2[rbp-128]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN238@accept_ele
$LN232@accept_ele:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR other$2[rbp-128]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR other$2[rbp-128]
	lea	rcx, QWORD PTR other$2[rbp-128]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR other$2[rbp-128]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN238@accept_ele:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 819  :         return m_Cursor == m_End;

	mov	rax, QWORD PTR [rdi]
	mov	rcx, QWORD PTR [rdi+8]
	cmp	rax, rcx

; 793  :         if (!eof())

	je	SHORT $LN430@accept_ele

; 801  :         return peek() == c;

	cmp	BYTE PTR [rax], 44			; 0000002cH

; 766  :         if (expect(c))

	jne	SHORT $LN430@accept_ele

; 806  :         if (m_Cursor + count > m_End)

	inc	rax
	cmp	rax, rcx
	ja	SHORT $LN430@accept_ele

; 807  :         {
; 808  :             m_Cursor = m_End;
; 809  :             return false;
; 810  :         }
; 811  : 
; 812  :         m_Cursor += count;
; 813  : 
; 814  :         return true;

	mov	QWORD PTR [rdi], rax

; 480  :             return false;
; 481  : 
; 482  :         a.emplace_back(std::move(v));
; 483  :         while (true)
; 484  :         {
; 485  :             auto s = state();
; 486  :             v = nullptr;
; 487  :             if (!s(accept(',') && accept_element(v)))

	lea	rdx, QWORD PTR v$[rbp-128]
	mov	rcx, rdi
	call	?accept_element@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_element
	test	al, al
	je	SHORT $LN430@accept_ele
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rax, QWORD PTR [rbx+8]
	cmp	rax, QWORD PTR [rbx+16]
	je	$LN132@accept_ele
$LN432@accept_ele:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 369  :             , m_LastCursor(p->m_Cursor)

	lea	rdx, QWORD PTR v$[rbp-128]
	mov	rcx, rax
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
	add	QWORD PTR [rbx+8], 40			; 00000028H
	jmp	$LL2@accept_ele
$LN430@accept_ele:

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rdi], rsi

; 488  :                 break;
; 489  :             a.emplace_back(std::move(v));
; 490  :         }
; 491  : 
; 492  :         return true;

	mov	bl, 1
$LN10@accept_ele:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 191  :         switch (type)

	mov	edx, DWORD PTR v$[rbp-96]
	sub	edx, 1
	je	SHORT $LN344@accept_ele
	sub	edx, 1
	je	SHORT $LN345@accept_ele
	cmp	edx, 1
	jne	SHORT $LN433@accept_ele
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR v$[rbp-128]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN433@accept_ele
$LN345@accept_ele:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR v$[rbp-128]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN433@accept_ele
$LN344@accept_ele:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR v$[rbp-128]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR v$[rbp-128]
	lea	rcx, QWORD PTR v$[rbp-128]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR v$[rbp-128]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN433@accept_ele:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 493  :     }

	movzx	eax, bl
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-128]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rbp
	ret	0
?accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z ENDP ; crude_json::value::parser::accept_elements
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
v$ = 32
other$2 = 72
__$ArrayPad$ = 112
this$ = 160
a$ = 168
?dtor$0@?0??accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z@4HA PROC ; `crude_json::value::parser::accept_elements'::`1'::dtor$0
	lea	rcx, QWORD PTR v$[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$0@?0??accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z@4HA ENDP ; `crude_json::value::parser::accept_elements'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
v$ = 32
other$2 = 72
__$ArrayPad$ = 112
this$ = 160
a$ = 168
?dtor$6@?0??accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z@4HA PROC ; `crude_json::value::parser::accept_elements'::`1'::dtor$6
	lea	rcx, QWORD PTR other$2[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$6@?0??accept_elements@parser@value@crude_json@@AEAA_NAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@Z@4HA ENDP ; `crude_json::value::parser::accept_elements'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$emplace_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA?A_T$$QEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
this$ = 48
<_Val_0>$ = 56
??$emplace_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA?A_T$$QEAUvalue@crude_json@@@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::emplace_back<crude_json::value>, COMDAT

; 862  :     _CONSTEXPR20 decltype(auto) emplace_back(_Valty&&... _Val) {

$LN14:
	push	rbx
	sub	rsp, 32					; 00000020H

; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rax, QWORD PTR [rcx+8]

; 862  :     _CONSTEXPR20 decltype(auto) emplace_back(_Valty&&... _Val) {

	mov	rbx, rcx

; 781  :         if (_Mylast != _My_data._Myend) {

	cmp	rax, QWORD PTR [rcx+16]
	je	SHORT $LN4@emplace_ba
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, rax
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 805  :         _Ty& _Result = *_Mylast;

	mov	rax, QWORD PTR [rbx+8]

; 806  :         ++_Mylast;

	lea	rdx, QWORD PTR [rax+40]
	mov	QWORD PTR [rbx+8], rdx

; 863  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 864  :         _Ty& _Result = _Emplace_one_at_back(_STD forward<_Valty>(_Val)...);
; 865  : #if _HAS_CXX17
; 866  :         return _Result;
; 867  : #else // ^^^ _HAS_CXX17 / !_HAS_CXX17 vvv
; 868  :         (void) _Result;
; 869  : #endif // _HAS_CXX17
; 870  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@emplace_ba:

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	mov	r8, rdx
	mov	rdx, rax

; 863  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 864  :         _Ty& _Result = _Emplace_one_at_back(_STD forward<_Valty>(_Val)...);
; 865  : #if _HAS_CXX17
; 866  :         return _Result;
; 867  : #else // ^^^ _HAS_CXX17 / !_HAS_CXX17 vvv
; 868  :         (void) _Result;
; 869  : #endif // _HAS_CXX17
; 870  :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	jmp	??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_reallocate<crude_json::value>
??$emplace_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA?A_T$$QEAUvalue@crude_json@@@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::emplace_back<crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_element@parser@value@crude_json@@AEAA_NAEAU23@@Z
_TEXT	SEGMENT
this$ = 48
result$ = 56
?accept_element@parser@value@crude_json@@AEAA_NAEAU23@@Z PROC ; crude_json::value::parser::accept_element, COMDAT

; 496  :     {

$LN98:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rsi, QWORD PTR [rcx]

; 496  :     {

	mov	rdi, rdx
	mov	rbx, rcx

; 497  :         auto s = state();
; 498  :         return s(accept_ws() && accept_value(result) && accept_ws());

	call	?accept_ws@parser@value@crude_json@@AEAA_NXZ ; crude_json::value::parser::accept_ws
	test	al, al
	je	$LN3@accept_ele

; 399  :         return accept_object(result)

	mov	rdx, rdi
	mov	rcx, rbx
	call	?accept_object@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_object
	test	al, al
	jne	$LN80@accept_ele
	mov	rdx, rdi
	mov	rcx, rbx
	call	?accept_array@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_array
	test	al, al
	jne	$LN80@accept_ele
	mov	rdx, rdi
	mov	rcx, rbx
	call	?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_string
	test	al, al
	jne	$LN80@accept_ele
	mov	rdx, rdi
	mov	rcx, rbx
	call	?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_number
	test	al, al
	jne	$LN80@accept_ele

; 774  :         auto last = m_Cursor;

	mov	rdx, QWORD PTR [rbx]

; 739  :         if (accept("true"))

	lea	r8, OFFSET FLAT:??_C@_04LOAJBDKD@true@

; 819  :         return m_Cursor == m_End;

	mov	r9, QWORD PTR [rbx+8]
	mov	rcx, rdx
$LL19@accept_ele:
	cmp	rcx, r9

; 778  :             if (eof() || *str != *m_Cursor)

	je	SHORT $LN63@accept_ele
	movzx	eax, BYTE PTR [rcx]
	cmp	BYTE PTR [r8], al
	jne	SHORT $LN63@accept_ele

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rcx+1]
	mov	rcx, rax
	cmp	rax, r9
	mov	rax, rbx
	jbe	SHORT $LN26@accept_ele

; 807  :         {
; 808  :             m_Cursor = m_End;

	mov	rcx, r9
$LN26@accept_ele:

; 785  :             ++str;

	inc	r8
	mov	QWORD PTR [rax], rcx
	cmp	BYTE PTR [r8], 0
	jne	SHORT $LL19@accept_ele

; 741  :             result = true;

	mov	dl, 1
	mov	rcx, rdi
	call	??4value@crude_json@@QEAAAEAU01@_N@Z	; crude_json::value::operator=

; 742  :             return true;

	jmp	$LN80@accept_ele
$LN63@accept_ele:

; 819  :         return m_Cursor == m_End;

	mov	r9, QWORD PTR [rbx+8]

; 744  :         else if (accept("false"))

	lea	r8, OFFSET FLAT:??_C@_05LAPONLG@false@

; 780  :                 m_Cursor = last;

	mov	QWORD PTR [rbx], rdx

; 819  :         return m_Cursor == m_End;

	mov	rcx, rdx
	npad	3
$LL30@accept_ele:
	cmp	rcx, r9

; 778  :             if (eof() || *str != *m_Cursor)

	je	SHORT $LN64@accept_ele
	movzx	eax, BYTE PTR [rcx]
	cmp	BYTE PTR [r8], al
	jne	SHORT $LN64@accept_ele

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rcx+1]
	cmp	rax, r9
	mov	rcx, rax
	cmova	rcx, r9

; 785  :             ++str;

	inc	r8
	mov	QWORD PTR [rbx], rcx
	cmp	BYTE PTR [r8], 0
	jne	SHORT $LL30@accept_ele

; 746  :             result = false;

	xor	edx, edx
	mov	rcx, rdi
	call	??4value@crude_json@@QEAAAEAU01@_N@Z	; crude_json::value::operator=

; 747  :             return true;

	jmp	SHORT $LN80@accept_ele
$LN64@accept_ele:

; 780  :                 m_Cursor = last;

	mov	QWORD PTR [rbx], rdx

; 755  :         if (accept("null"))

	lea	rcx, OFFSET FLAT:??_C@_04MLLLIHIP@null@
	npad	3
$LL44@accept_ele:

; 819  :         return m_Cursor == m_End;

	cmp	rdx, r9

; 778  :             if (eof() || *str != *m_Cursor)

	je	SHORT $LN3@accept_ele
	movzx	eax, BYTE PTR [rdx]
	cmp	BYTE PTR [rcx], al
	jne	SHORT $LN3@accept_ele

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rdx+1]
	cmp	rax, r9
	mov	rdx, rax
	cmova	rdx, r9

; 785  :             ++str;

	inc	rcx
	mov	QWORD PTR [rbx], rdx
	cmp	BYTE PTR [rcx], 0
	jne	SHORT $LL44@accept_ele

; 757  :             result = nullptr;

	mov	rcx, rdi
	call	??4value@crude_json@@QEAAAEAU01@$$T@Z	; crude_json::value::operator=
$LN80@accept_ele:

; 497  :         auto s = state();
; 498  :         return s(accept_ws() && accept_value(result) && accept_ws());

	mov	rcx, rbx
	call	?accept_ws@parser@value@crude_json@@AEAA_NXZ ; crude_json::value::parser::accept_ws
	test	al, al
	je	SHORT $LN3@accept_ele
	mov	al, 1

; 499  :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@accept_ele:

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rbx], rsi

; 497  :         auto s = state();
; 498  :         return s(accept_ws() && accept_value(result) && accept_ws());

	xor	al, al

; 499  :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?accept_element@parser@value@crude_json@@AEAA_NAEAU23@@Z ENDP ; crude_json::value::parser::accept_element
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z
_TEXT	SEGMENT
c$2 = 40
v$ = 48
other$3 = 80
__$ArrayPad$ = 120
this$ = 160
result$ = 168
?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z PROC ; crude_json::value::parser::accept_string, COMDAT

; 502  :     {

$LN309:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rbp
	push	rdi
	push	r14
	mov	rbp, rsp
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-128], rax
	mov	r14, rdx
	mov	rbx, rcx

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rsi, QWORD PTR [rcx]
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR v$[rbp-128], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR v$[rbp-112], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	edi, 15
	mov	QWORD PTR v$[rbp-104], rdi

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR v$[rbp-128], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 819  :         return m_Cursor == m_End;

	mov	rdx, QWORD PTR [rcx+8]
	cmp	rsi, rdx

; 793  :         if (!eof())

	je	$LN5@accept_str

; 801  :         return peek() == c;

	cmp	BYTE PTR [rsi], 34			; 00000022H

; 766  :         if (expect(c))

	jne	$LN5@accept_str

; 806  :         if (m_Cursor + count > m_End)

	lea	rcx, QWORD PTR [rsi+1]
	mov	rax, rcx
	cmp	rcx, rdx
	cmova	rax, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rax

; 503  :         auto s = state();
; 504  : 
; 505  :         string v;
; 506  :         if (s(accept('\"') && accept_characters(v) && accept('\"')))

	ja	$LN5@accept_str
	npad	8
$LL42@accept_str:

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rdx, QWORD PTR [rbx]

; 819  :         return m_Cursor == m_End;

	mov	r8, QWORD PTR [rbx+8]
	cmp	rdx, r8

; 793  :         if (!eof())

	je	SHORT $LN305@accept_str

; 801  :         return peek() == c;

	cmp	BYTE PTR [rdx], 92			; 0000005cH

; 766  :         if (expect(c))

	jne	SHORT $LN305@accept_str

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rdx+1]
	mov	rcx, rax
	cmp	rax, r8
	cmova	rcx, r8

; 767  :             return advance();

	mov	QWORD PTR [rbx], rcx

; 531  :         if (accept('\\'))

	ja	SHORT $LN46@accept_str

; 532  :         {
; 533  :             return accept_escape(c);

	lea	rdx, QWORD PTR c$2[rbp-128]
	mov	rcx, rbx
	call	?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z ; crude_json::value::parser::accept_escape

; 518  :         while (accept_character(c))

	test	al, al
	je	$LN43@accept_str
	mov	r9d, DWORD PTR c$2[rbp-128]
	jmp	SHORT $LN300@accept_str
$LN305@accept_str:

; 769  :             return false;

	mov	rcx, rdx
$LN46@accept_str:

; 819  :         return m_Cursor == m_End;

	cmp	rcx, r8

; 793  :         if (!eof())

	je	SHORT $LN80@accept_str

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 34			; 00000022H

; 535  :         else if (expect('\"'))

	je	SHORT $LN43@accept_str

; 794  :             return *m_Cursor;

	movsx	r9d, BYTE PTR [rcx]
	jmp	SHORT $LN81@accept_str
$LN80@accept_str:

; 795  :         else
; 796  :             return -1;

	mov	r9d, -1
$LN81@accept_str:

; 539  :         return s((c = peek()) >= 0) && advance();

	mov	DWORD PTR c$2[rbp-128], r9d
	mov	eax, r9d
	shr	eax, 31
	xor	al, 1

; 380  :             if (!accept)

	je	SHORT $LN294@accept_str

; 806  :         if (m_Cursor + count > m_End)

	mov	rax, QWORD PTR [rbx]
	inc	rax
	mov	rdx, r8
	cmp	rax, r8
	ja	SHORT $LN294@accept_str

; 807  :         {
; 808  :             m_Cursor = m_End;
; 809  :             return false;
; 810  :         }
; 811  : 
; 812  :         m_Cursor += count;

	mov	QWORD PTR [rbx], rax
$LN300@accept_str:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR v$[rbp-112]
	cmp	rcx, rdi

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	jae	SHORT $LN95@accept_str

; 4048 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + 1);
; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR v$[rbp-112], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR v$[rbp-128]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rdi, 16

; 2227 :         if (_Large_string_engaged()) {

	cmovae	rax, QWORD PTR v$[rbp-128]

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	BYTE PTR [rax+rcx], r9b

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

	mov	BYTE PTR [rax+rcx+1], 0

; 4053 :             return;

	mov	rdi, QWORD PTR v$[rbp-104]
	jmp	$LL42@accept_str
$LN95@accept_str:

; 4054 :         }
; 4055 : 
; 4056 :         _Reallocate_grow_by(

	lea	rcx, QWORD PTR v$[rbp-128]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 522  :         }

	mov	rdi, QWORD PTR v$[rbp-104]
	jmp	$LL42@accept_str
$LN294@accept_str:
	mov	QWORD PTR [rbx], rdx
$LN43@accept_str:

; 819  :         return m_Cursor == m_End;

	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rbx+8]
	cmp	rcx, rdx

; 793  :         if (!eof())

	je	$LN5@accept_str

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 34			; 00000022H

; 766  :         if (expect(c))

	jne	$LN5@accept_str

; 806  :         if (m_Cursor + count > m_End)

	inc	rcx
	mov	rax, rcx
	cmp	rcx, rdx
	cmova	rax, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rax

; 503  :         auto s = state();
; 504  : 
; 505  :         string v;
; 506  :         if (s(accept('\"') && accept_characters(v) && accept('\"')))

	ja	$LN5@accept_str
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR v$[rbp-128]
	movups	XMMWORD PTR other$3[rbp-128], xmm1
	movups	xmm0, XMMWORD PTR v$[rbp-112]
	movups	XMMWORD PTR other$3[rbp-112], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR v$[rbp-112], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	edi, 15
	mov	QWORD PTR v$[rbp-104], rdi

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR v$[rbp-128], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 66   :     value(      string&& v): m_Type(construct(m_Storage, std::move(v))) {}

	mov	DWORD PTR other$3[rbp-96], 3

; 81   :     value& operator=(      string&& v) { auto other = value(std::move(v)); swap(other); return *this; }

	lea	rdx, QWORD PTR other$3[rbp-128]
	mov	rcx, r14
	call	?swap@value@crude_json@@QEAAXAEAU12@@Z	; crude_json::value::swap
	npad	1

; 191  :         switch (type)

	mov	ecx, DWORD PTR other$3[rbp-96]
	sub	ecx, 1
	je	SHORT $LN165@accept_str
	sub	ecx, 1
	je	SHORT $LN166@accept_str
	cmp	ecx, 1
	jne	SHORT $LN171@accept_str
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR other$3[rbp-128]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	bl, 1
	jmp	SHORT $LN8@accept_str
$LN166@accept_str:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR other$3[rbp-128]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
	mov	bl, 1
	jmp	SHORT $LN8@accept_str
$LN165@accept_str:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR other$3[rbp-128]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR other$3[rbp-128]
	lea	rcx, QWORD PTR other$3[rbp-128]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR other$3[rbp-128]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN171@accept_str:
	mov	bl, 1
	jmp	SHORT $LN8@accept_str
$LN5@accept_str:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rbx], rsi

; 512  :             return false;

	xor	bl, bl
$LN8@accept_str:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rdi, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN262@accept_str

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	lea	rdx, QWORD PTR [rdi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR v$[rbp-128]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN274@accept_str

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN274@accept_str
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN274@accept_str:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN262@accept_str:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 512  :             return false;

	movzx	eax, bl

; 513  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-128]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rbp
	ret	0
$LN306@accept_str:
?accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z ENDP ; crude_json::value::parser::accept_string
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
c$2 = 40
v$ = 48
other$3 = 80
__$ArrayPad$ = 120
this$ = 160
result$ = 168
?dtor$0@?0??accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA PROC ; `crude_json::value::parser::accept_string'::`1'::dtor$0
	lea	rcx, QWORD PTR v$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA ENDP ; `crude_json::value::parser::accept_string'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
c$2 = 40
v$ = 48
other$3 = 80
__$ArrayPad$ = 120
this$ = 160
result$ = 168
?dtor$4@?0??accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA PROC ; `crude_json::value::parser::accept_string'::`1'::dtor$4
	lea	rcx, QWORD PTR other$3[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$4@?0??accept_string@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA ENDP ; `crude_json::value::parser::accept_string'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_characters@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
c$ = 40
this$ = 64
result$ = 72
?accept_characters@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::parser::accept_characters, COMDAT

; 516  :     {

$LN88:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rdx
	mov	rbx, rcx
$LL2@accept_cha:

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rcx, QWORD PTR [rbx]

; 819  :         return m_Cursor == m_End;

	mov	rdx, QWORD PTR [rbx+8]
	cmp	rcx, rdx

; 793  :         if (!eof())

	je	SHORT $LN72@accept_cha

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 92			; 0000005cH

; 766  :         if (expect(c))

	jne	SHORT $LN72@accept_cha

; 806  :         if (m_Cursor + count > m_End)

	lea	r8, QWORD PTR [rcx+1]
	mov	r9, rbx

; 807  :         {
; 808  :             m_Cursor = m_End;
; 809  :             return false;

	mov	rax, rdx
	cmp	r8, rdx
	ja	SHORT $LN28@accept_cha

; 813  : 
; 814  :         return true;

	mov	rax, r8
$LN28@accept_cha:

; 767  :             return advance();

	mov	QWORD PTR [r9], rax

; 531  :         if (accept('\\'))

	ja	SHORT $LN6@accept_cha

; 532  :         {
; 533  :             return accept_escape(c);

	lea	rdx, QWORD PTR c$[rsp]
	mov	rcx, rbx
	call	?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z ; crude_json::value::parser::accept_escape

; 517  :         int c;
; 518  :         while (accept_character(c))

	test	al, al
	je	$LN73@accept_cha
	mov	r9d, DWORD PTR c$[rsp]
	jmp	SHORT $LN68@accept_cha
$LN72@accept_cha:

; 769  :             return false;

	mov	rax, rcx
$LN6@accept_cha:

; 819  :         return m_Cursor == m_End;

	cmp	rax, rdx

; 793  :         if (!eof())

	je	SHORT $LN40@accept_cha

; 801  :         return peek() == c;

	cmp	BYTE PTR [rax], 34			; 00000022H

; 535  :         else if (expect('\"'))

	je	SHORT $LN73@accept_cha

; 794  :             return *m_Cursor;

	movsx	r9d, BYTE PTR [rax]
	jmp	SHORT $LN41@accept_cha
$LN40@accept_cha:

; 795  :         else
; 796  :             return -1;

	mov	r9d, -1
$LN41@accept_cha:

; 539  :         return s((c = peek()) >= 0) && advance();

	mov	eax, r9d
	mov	DWORD PTR c$[rsp], r9d
	shr	eax, 31
	xor	al, 1

; 380  :             if (!accept)

	je	SHORT $LN70@accept_cha

; 806  :         if (m_Cursor + count > m_End)

	mov	rax, QWORD PTR [rbx]
	mov	rcx, QWORD PTR [rbx+8]
	inc	rax
	cmp	rax, rcx
	ja	SHORT $LN70@accept_cha

; 810  :         }
; 811  : 
; 812  :         m_Cursor += count;

	mov	QWORD PTR [rbx], rax
$LN68@accept_cha:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR [rdi+16]

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	mov	rdx, QWORD PTR [rdi+24]
	cmp	rcx, rdx
	jae	SHORT $LN55@accept_cha

; 4048 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + 1);
; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR [rdi+16], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rdi

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rdx, 16

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN58@accept_cha

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rdi]
$LN58@accept_cha:

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	BYTE PTR [rax+rcx], r9b

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

	mov	BYTE PTR [rax+rcx+1], 0

; 4053 :             return;

	jmp	$LL2@accept_cha
$LN55@accept_cha:

; 4054 :         }
; 4055 : 
; 4056 :         _Reallocate_grow_by(

	mov	rcx, rdi
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 522  :         }

	jmp	$LL2@accept_cha
$LN70@accept_cha:
	mov	QWORD PTR [rbx], rcx
$LN73@accept_cha:

; 523  : 
; 524  :         return true;
; 525  :     }

	mov	rbx, QWORD PTR [rsp+80]
	mov	al, 1
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?accept_characters@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::parser::accept_characters
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_character@parser@value@crude_json@@AEAA_NAEAH@Z
_TEXT	SEGMENT
this$ = 8
c$ = 16
?accept_character@parser@value@crude_json@@AEAA_NAEAH@Z PROC ; crude_json::value::parser::accept_character, COMDAT

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	r8, QWORD PTR [rcx]

; 528  :     {

	mov	r10, rdx

; 819  :         return m_Cursor == m_End;

	mov	r9, QWORD PTR [rcx+8]
	cmp	r8, r9

; 793  :         if (!eof())

	je	SHORT $LN52@accept_cha

; 801  :         return peek() == c;

	cmp	BYTE PTR [r8], 92			; 0000005cH

; 766  :         if (expect(c))

	jne	SHORT $LN52@accept_cha

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [r8+1]
	cmp	rax, r9
	mov	rdx, rax
	cmova	rdx, r9

; 767  :             return advance();

	mov	QWORD PTR [rcx], rdx

; 529  :         auto s = state();
; 530  : 
; 531  :         if (accept('\\'))

	ja	SHORT $LN2@accept_cha

; 532  :         {
; 533  :             return accept_escape(c);

	mov	rdx, r10
	jmp	?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z ; crude_json::value::parser::accept_escape
$LN52@accept_cha:

; 769  :             return false;

	mov	rdx, r8
$LN2@accept_cha:

; 819  :         return m_Cursor == m_End;

	cmp	rdx, r9

; 793  :         if (!eof())

	je	SHORT $LN36@accept_cha

; 801  :         return peek() == c;

	cmp	BYTE PTR [rdx], 34			; 00000022H

; 534  :         }
; 535  :         else if (expect('\"'))

	je	SHORT $LN54@accept_cha

; 794  :             return *m_Cursor;

	movsx	eax, BYTE PTR [rdx]
	jmp	SHORT $LN37@accept_cha
$LN36@accept_cha:

; 795  :         else
; 796  :             return -1;

	mov	eax, -1
$LN37@accept_cha:

; 536  :             return false;
; 537  : 
; 538  :         // #todo: Handle UTF-8 sequences.
; 539  :         return s((c = peek()) >= 0) && advance();

	mov	DWORD PTR [r10], eax
	shr	eax, 31
	xor	al, 1

; 380  :             if (!accept)

	je	SHORT $LN6@accept_cha

; 806  :         if (m_Cursor + count > m_End)

	mov	rax, QWORD PTR [rcx]
	mov	r8, r9
	inc	rax
	cmp	rax, r9
	jbe	SHORT $LN48@accept_cha
$LN6@accept_cha:

; 536  :             return false;
; 537  : 
; 538  :         // #todo: Handle UTF-8 sequences.
; 539  :         return s((c = peek()) >= 0) && advance();

	mov	QWORD PTR [rcx], r8
$LN54@accept_cha:

; 540  :     }

	xor	al, al
	ret	0
$LN48@accept_cha:

; 812  :         m_Cursor += count;

	mov	QWORD PTR [rcx], rax

; 536  :             return false;
; 537  : 
; 538  :         // #todo: Handle UTF-8 sequences.
; 539  :         return s((c = peek()) >= 0) && advance();

	mov	al, 1

; 540  :     }

	ret	0
?accept_character@parser@value@crude_json@@AEAA_NAEAH@Z ENDP ; crude_json::value::parser::accept_character
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z
_TEXT	SEGMENT
end$1 = 32
hex$ = 40
__$ArrayPad$ = 72
this$ = 112
c$ = 120
?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z PROC ; crude_json::value::parser::accept_escape, COMDAT

; 543  :     {

$LN174:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rdx
	mov	rbx, rcx

; 819  :         return m_Cursor == m_End;

	mov	rcx, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rbx+8]
	cmp	rcx, rdx

; 793  :         if (!eof())

	je	$LN5@accept_esc

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 34			; 00000022H

; 766  :         if (expect(c))

	jne	SHORT $LN2@accept_esc

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rcx+1]
	mov	rcx, rax
	cmp	rax, rdx
	cmova	rcx, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rcx

; 544  :         if (accept('\"')) { c = '\"'; return true; }

	ja	SHORT $LN2@accept_esc
	mov	DWORD PTR [rdi], 34			; 00000022H
	mov	al, 1
	jmp	$LN1@accept_esc
$LN2@accept_esc:

; 819  :         return m_Cursor == m_End;

	cmp	rcx, rdx

; 793  :         if (!eof())

	je	SHORT $LN5@accept_esc

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 92			; 0000005cH

; 766  :         if (expect(c))

	jne	SHORT $LN3@accept_esc

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rcx+1]
	mov	rcx, rax
	cmp	rax, rdx
	cmova	rcx, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rcx

; 545  :         if (accept('\\')) { c = '\\'; return true; }

	ja	SHORT $LN3@accept_esc
	mov	DWORD PTR [rdi], 92			; 0000005cH
	mov	al, 1
	jmp	$LN1@accept_esc
$LN3@accept_esc:

; 819  :         return m_Cursor == m_End;

	cmp	rcx, rdx

; 793  :         if (!eof())

	je	SHORT $LN5@accept_esc

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 47			; 0000002fH

; 766  :         if (expect(c))

	jne	SHORT $LN4@accept_esc

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rcx+1]
	mov	rcx, rax
	cmp	rax, rdx
	cmova	rcx, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rcx

; 546  :         if (accept('/'))  { c = '/';  return true; }

	ja	SHORT $LN4@accept_esc
	mov	DWORD PTR [rdi], 47			; 0000002fH
	mov	al, 1
	jmp	$LN1@accept_esc
$LN4@accept_esc:

; 819  :         return m_Cursor == m_End;

	cmp	rcx, rdx

; 793  :         if (!eof())

	je	SHORT $LN5@accept_esc

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 98			; 00000062H

; 766  :         if (expect(c))

	jne	SHORT $LN5@accept_esc

; 806  :         if (m_Cursor + count > m_End)

	inc	rcx
	mov	rax, rcx
	cmp	rcx, rdx
	cmova	rax, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rax

; 547  :         if (accept('b'))  { c = '\b'; return true; }

	ja	SHORT $LN5@accept_esc
	mov	DWORD PTR [rdi], 8
	mov	al, 1
	jmp	$LN1@accept_esc
$LN5@accept_esc:

; 548  :         if (accept('f'))  { c = '\f'; return true; }

	mov	dl, 102					; 00000066H
	mov	rcx, rbx
	call	?accept@parser@value@crude_json@@AEAA_ND@Z ; crude_json::value::parser::accept
	test	al, al
	je	SHORT $LN6@accept_esc
	mov	DWORD PTR [rdi], 12
	mov	al, 1
	jmp	$LN1@accept_esc
$LN6@accept_esc:

; 549  :         if (accept('n'))  { c = '\n'; return true; }

	mov	dl, 110					; 0000006eH
	mov	rcx, rbx
	call	?accept@parser@value@crude_json@@AEAA_ND@Z ; crude_json::value::parser::accept
	test	al, al
	je	SHORT $LN7@accept_esc
	mov	DWORD PTR [rdi], 10
	mov	al, 1
	jmp	$LN1@accept_esc
$LN7@accept_esc:

; 550  :         if (accept('r'))  { c = '\r'; return true; }

	mov	dl, 114					; 00000072H
	mov	rcx, rbx
	call	?accept@parser@value@crude_json@@AEAA_ND@Z ; crude_json::value::parser::accept
	test	al, al
	je	SHORT $LN8@accept_esc
	mov	DWORD PTR [rdi], 13
	mov	al, 1
	jmp	$LN1@accept_esc
$LN8@accept_esc:

; 551  :         if (accept('t'))  { c = '\t'; return true; }

	mov	dl, 116					; 00000074H
	mov	rcx, rbx
	call	?accept@parser@value@crude_json@@AEAA_ND@Z ; crude_json::value::parser::accept
	test	al, al
	je	SHORT $LN9@accept_esc
	mov	DWORD PTR [rdi], 9
	mov	al, 1
	jmp	$LN1@accept_esc
$LN9@accept_esc:

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rbp, QWORD PTR [rbx]
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR hex$[rsp], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR hex$[rsp+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	esi, 15
	mov	QWORD PTR hex$[rsp+24], rsi

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR hex$[rsp], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 557  :         if (s(accept('u') && accept_hex(hex) && accept_hex(hex) && accept_hex(hex) && accept_hex(hex)))

	mov	dl, 117					; 00000075H
	mov	rcx, rbx
	call	?accept@parser@value@crude_json@@AEAA_ND@Z ; crude_json::value::parser::accept
	test	al, al
	je	$LN13@accept_esc
	lea	rdx, QWORD PTR hex$[rsp]
	mov	rcx, rbx
	call	?accept_hex@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_hex
	test	al, al
	je	$LN166@accept_esc
	lea	rdx, QWORD PTR hex$[rsp]
	mov	rcx, rbx
	call	?accept_hex@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_hex
	test	al, al
	je	SHORT $LN166@accept_esc
	lea	rdx, QWORD PTR hex$[rsp]
	mov	rcx, rbx
	call	?accept_hex@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_hex
	test	al, al
	je	SHORT $LN166@accept_esc
	lea	rdx, QWORD PTR hex$[rsp]
	mov	rcx, rbx
	call	?accept_hex@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_hex
	test	al, al
	je	SHORT $LN166@accept_esc

; 558  :         {
; 559  :             char* end = nullptr;

	mov	QWORD PTR end$1[rsp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR hex$[rsp]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR hex$[rsp+24], 16
	cmovae	rcx, QWORD PTR hex$[rsp]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 560  :             auto v = std::strtol(hex.c_str(), &end, 16);

	lea	r8d, QWORD PTR [rsi+1]
	lea	rdx, QWORD PTR end$1[rsp]
	call	QWORD PTR __imp_strtol
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR hex$[rsp]

; 2236 :         if (_Large_string_engaged()) {

	mov	r8, QWORD PTR hex$[rsp]
	mov	rsi, QWORD PTR hex$[rsp+24]
	cmp	rsi, 16
	cmovae	rdx, r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 561  :             if (end != hex.c_str() + hex.size())

	add	rdx, QWORD PTR hex$[rsp+16]
	cmp	QWORD PTR end$1[rsp], rdx
	jne	SHORT $LN171@accept_esc

; 562  :                 return false;
; 563  : 
; 564  :             c = static_cast<int>(v);

	mov	DWORD PTR [rdi], eax

; 565  :             return true;

	mov	bl, 1
	jmp	SHORT $LN17@accept_esc
$LN166@accept_esc:

; 557  :         if (s(accept('u') && accept_hex(hex) && accept_hex(hex) && accept_hex(hex) && accept_hex(hex)))

	mov	rsi, QWORD PTR hex$[rsp+24]
$LN13@accept_esc:

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rbx], rbp

; 568  :         return false;

	mov	r8, QWORD PTR hex$[rsp]
$LN171@accept_esc:
	xor	bl, bl
$LN17@accept_esc:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rsi, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN116@accept_esc

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	lea	rdx, QWORD PTR [rsi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, r8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN128@accept_esc

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [r8-8]
	sub	rax, r8

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN128@accept_esc
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN128@accept_esc:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, r8
	call	??3@YAXPEAX_K@Z				; operator delete
$LN116@accept_esc:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 568  :         return false;

	movzx	eax, bl
$LN1@accept_esc:

; 569  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+128]
	add	rsp, 80					; 00000050H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN167@accept_esc:
?accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z ENDP ; crude_json::value::parser::accept_escape
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
end$1 = 32
hex$ = 40
__$ArrayPad$ = 72
this$ = 112
c$ = 120
?dtor$0@?0??accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z@4HA PROC ; `crude_json::value::parser::accept_escape'::`1'::dtor$0
	lea	rcx, QWORD PTR hex$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??accept_escape@parser@value@crude_json@@AEAA_NAEAH@Z@4HA ENDP ; `crude_json::value::parser::accept_escape'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_hex@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
result$ = 56
?accept_hex@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::parser::accept_hex, COMDAT

; 572  :     {

$LN33:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 573  :         if (accept_digit(result))

	call	?accept_digit@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_digit
	test	al, al
	jne	SHORT $LN16@accept_hex

; 819  :         return m_Cursor == m_End;

	mov	rax, QWORD PTR [rdi]
	mov	rcx, QWORD PTR [rdi+8]
	cmp	rax, rcx

; 793  :         if (!eof())

	je	SHORT $LN3@accept_hex

; 794  :             return *m_Cursor;

	movsx	r9d, BYTE PTR [rax]

; 574  :             return true;
; 575  : 
; 576  :         auto c = peek();
; 577  :         if ((c >= 'A' && c <= 'F') || (c >= 'a' && c <= 'f'))

	cmp	r9d, 65					; 00000041H
	jl	SHORT $LN5@accept_hex
	cmp	r9d, 70					; 00000046H
	jle	SHORT $LN4@accept_hex
$LN5@accept_hex:
	cmp	r9d, 97					; 00000061H
	jl	SHORT $LN3@accept_hex
	cmp	r9d, 102				; 00000066H
	jg	SHORT $LN3@accept_hex
$LN4@accept_hex:

; 806  :         if (m_Cursor + count > m_End)

	inc	rax
	cmp	rax, rcx
	cmova	rax, rcx

; 578  :         {
; 579  :             advance();
; 580  :             result.push_back(static_cast<char>(c));

	mov	QWORD PTR [rdi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR [rbx+16]

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	mov	rdx, QWORD PTR [rbx+24]
	cmp	rcx, rdx
	jae	SHORT $LN17@accept_hex

; 4048 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + 1);
; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR [rbx+16], rax

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rdx, 16

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN20@accept_hex

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rbx]
$LN20@accept_hex:

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	BYTE PTR [rbx+rcx], r9b

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

	mov	BYTE PTR [rbx+rcx+1], 0
$LN16@accept_hex:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 581  :             return true;

	mov	al, 1

; 582  :         }
; 583  : 
; 584  :         return false;
; 585  :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN17@accept_hex:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4056 :         _Reallocate_grow_by(

	mov	rcx, rbx
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 581  :             return true;

	mov	al, 1

; 582  :         }
; 583  : 
; 584  :         return false;
; 585  :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@accept_hex:
	mov	rbx, QWORD PTR [rsp+64]
	xor	al, al
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?accept_hex@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::parser::accept_hex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z
_TEXT	SEGMENT
end$2 = 48
n$ = 56
part$3 = 88
__$ArrayPad$ = 120
this$ = 192
result$ = 200
?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z PROC ; crude_json::value::parser::accept_number, COMDAT

; 588  :     {

$LN249:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-55]
	sub	rsp, 144				; 00000090H
	movaps	XMMWORD PTR [rsp+128], xmm6
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-89], rax
	mov	r15, rdx
	mov	rdi, rcx

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	r14, QWORD PTR [rcx]
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR n$[rbp-89], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR n$[rbp-73], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR n$[rbp-65], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR n$[rbp-89], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 592  :         if (s(accept_int(n) && accept_frac(n) && accept_exp(n)))

	lea	rdx, QWORD PTR n$[rbp-89]
	call	?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_int
	test	al, al
	je	$LN6@accept_num

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rbx, QWORD PTR [rdi]
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR part$3[rbp-89], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR part$3[rbp-73], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR part$3[rbp-65], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR part$3[rbp-89], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 819  :         return m_Cursor == m_End;

	mov	rdx, QWORD PTR [rdi+8]
	cmp	rbx, rdx

; 793  :         if (!eof())

	je	$LN244@accept_num

; 801  :         return peek() == c;

	cmp	BYTE PTR [rbx], 46			; 0000002eH

; 766  :         if (expect(c))

	jne	$LN244@accept_num

; 806  :         if (m_Cursor + count > m_End)

	lea	rcx, QWORD PTR [rbx+1]
	mov	rax, rcx
	cmp	rcx, rdx
	cmova	rax, rdx

; 767  :             return advance();

	mov	QWORD PTR [rdi], rax

; 690  :         if (s(accept('.') && accept_digits(part)))

	ja	$LN244@accept_num
	lea	rdx, QWORD PTR part$3[rbp-89]
	mov	rcx, rdi
	call	?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_digits
	test	al, al
	je	$LN244@accept_num
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR n$[rbp-73]
	mov	rdx, QWORD PTR n$[rbp-65]
	cmp	rcx, rdx

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	jae	SHORT $LN112@accept_num

; 4048 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + 1);
; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR n$[rbp-73], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR n$[rbp-89]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR n$[rbp-89]

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	WORD PTR [rax+rcx], 46			; 0000002eH

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());
; 4053 :             return;

	jmp	SHORT $LN111@accept_num
$LN112@accept_num:

; 4054 :         }
; 4055 : 
; 4056 :         _Reallocate_grow_by(

	mov	r9b, 46					; 0000002eH
	lea	rcx, QWORD PTR n$[rbp-89]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
$LN111@accept_num:

; 3241 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rsi, QWORD PTR part$3[rbp-73]

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r9, QWORD PTR part$3[rbp-89]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR part$3[rbp-65], 16
	cmovae	r9, QWORD PTR part$3[rbp-89]

; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR n$[rbp-73]
	mov	rdx, QWORD PTR n$[rbp-65]
	mov	rax, rdx
	sub	rax, rcx

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rsi, rax
	ja	SHORT $LN129@accept_num

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rcx+rsi]
	mov	QWORD PTR n$[rbp-73], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rbx, QWORD PTR n$[rbp-89]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rbx, QWORD PTR n$[rbp-89]

; 3275 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

	add	rbx, rcx

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rsi
	mov	rdx, r9
	mov	rcx, rbx
	call	memmove

; 3276 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rsi+rbx], 0

; 3277 :             return *this;

	jmp	SHORT $LN128@accept_num
$LN129@accept_num:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], rsi
	mov	rdx, rsi
	lea	rcx, QWORD PTR n$[rbp-89]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
	jmp	SHORT $LN128@accept_num
$LN244@accept_num:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rdi], rbx
$LN128@accept_num:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR part$3[rbp-65]
	cmp	rdx, 16
	jb	SHORT $LN241@accept_num

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR part$3[rbp-89]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN175@accept_num

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN175@accept_num
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN175@accept_num:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN241@accept_num:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 592  :         if (s(accept_int(n) && accept_frac(n) && accept_exp(n)))

	lea	rdx, QWORD PTR n$[rbp-89]
	mov	rcx, rdi
	call	?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_exp
	test	al, al
	je	SHORT $LN6@accept_num

; 593  :         {
; 594  :             char* end = nullptr;

	mov	QWORD PTR end$2[rbp-89], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR n$[rbp-89]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR n$[rbp-65], 16
	cmovae	rcx, QWORD PTR n$[rbp-89]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 595  :             auto v = std::strtod(n.c_str(), &end);

	lea	rdx, QWORD PTR end$2[rbp-89]
	call	QWORD PTR __imp_strtod
	movaps	xmm6, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR n$[rbp-89]

; 2236 :         if (_Large_string_engaged()) {

	mov	rbx, QWORD PTR n$[rbp-65]
	cmp	rbx, 16
	cmovae	rcx, QWORD PTR n$[rbp-89]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 596  :             if (end != n.c_str() + n.size())

	add	rcx, QWORD PTR n$[rbp-73]
	cmp	QWORD PTR end$2[rbp-89], rcx
	jne	SHORT $LN9@accept_num
	xorps	xmm1, xmm1

; 599  :             if (v != 0 && !std::isnormal(v))

	ucomisd	xmm0, xmm1
	jp	SHORT $LN243@accept_num
	je	SHORT $LN4@accept_num
$LN243@accept_num:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 301  :         return _dtest(&_X);

	call	_dclass
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 599  :             if (v != 0 && !std::isnormal(v))

	cmp	ax, -1
	jne	SHORT $LN9@accept_num
$LN4@accept_num:

; 600  :                 return false;
; 601  : 
; 602  :             result = v;

	movaps	xmm1, xmm6
	mov	rcx, r15
	call	??4value@crude_json@@QEAAAEAU01@N@Z	; crude_json::value::operator=

; 603  :             return true;

	mov	dil, 1
	jmp	SHORT $LN246@accept_num
$LN9@accept_num:
	xor	dil, dil
	jmp	SHORT $LN11@accept_num
$LN6@accept_num:

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rdi], r14

; 606  :         return false;

	xor	dil, dil
$LN246@accept_num:
	mov	rbx, QWORD PTR n$[rbp-65]
$LN11@accept_num:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rbx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN47@accept_num

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	lea	rdx, QWORD PTR [rbx+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR n$[rbp-89]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN59@accept_num

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN59@accept_num
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN59@accept_num:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN47@accept_num:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 606  :         return false;

	movzx	eax, dil

; 607  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-89]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+208]
	movaps	xmm6, XMMWORD PTR [rsp+128]
	add	rsp, 144				; 00000090H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN245@accept_num:
?accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z ENDP ; crude_json::value::parser::accept_number
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
end$2 = 48
n$ = 56
part$3 = 88
__$ArrayPad$ = 120
this$ = 192
result$ = 200
?dtor$0@?0??accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA PROC ; `crude_json::value::parser::accept_number'::`1'::dtor$0
	lea	rcx, QWORD PTR n$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA ENDP ; `crude_json::value::parser::accept_number'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
end$2 = 48
n$ = 56
part$3 = 88
__$ArrayPad$ = 120
this$ = 192
result$ = 200
?dtor$5@?0??accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA PROC ; `crude_json::value::parser::accept_number'::`1'::dtor$5
	lea	rcx, QWORD PTR part$3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??accept_number@parser@value@crude_json@@AEAA_NAEAU23@@Z@4HA ENDP ; `crude_json::value::parser::accept_number'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
part$ = 32
__$ArrayPad$ = 64
this$ = 112
result$ = 120
?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::parser::accept_int, COMDAT

; 610  :     {

$LN372:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	mov	rbp, rsp
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-80], rax
	mov	rdi, rdx
	mov	rbx, rcx

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rsi, QWORD PTR [rcx]
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR part$[rbp-80], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR part$[rbp-64], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	edx, 15
	mov	QWORD PTR part$[rbp-56], rdx

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR part$[rbp-80], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 819  :         return m_Cursor == m_End;

	mov	r8, QWORD PTR [rcx+8]
	cmp	rsi, r8

; 793  :         if (!eof())

	je	SHORT $LN349@accept_int

; 794  :             return *m_Cursor;

	movzx	ecx, BYTE PTR [rsi]

; 676  :         if (c >= '1' && c <= '9')

	lea	eax, DWORD PTR [rcx-49]
	cmp	al, 8
	ja	SHORT $LN349@accept_int
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	mov	QWORD PTR part$[rbp-64], 1

; 4050 :             _Elem* const _Ptr       = _Mypair._Myval2._Myptr();
; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	BYTE PTR part$[rbp-80], cl

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

	mov	BYTE PTR part$[rbp-79], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 806  :         if (m_Cursor + count > m_End)

	lea	rcx, QWORD PTR [rsi+1]
	mov	rax, rcx
	cmp	rcx, r8
	cmova	rax, r8

; 679  :             return advance();

	mov	QWORD PTR [rbx], rax

; 611  :         auto s = state();
; 612  : 
; 613  :         string part;
; 614  :         if (s(accept_onenine(part) && accept_digits(part)))

	ja	SHORT $LN349@accept_int
	lea	rdx, QWORD PTR part$[rbp-80]
	mov	rcx, rbx
	call	?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_digits
	test	al, al
	jne	$LN367@accept_int
	mov	rdx, QWORD PTR part$[rbp-56]
$LN349@accept_int:

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rbx], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR part$[rbp-80]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR part$[rbp-80]

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR part$[rbp-64], 0
	mov	BYTE PTR [rax], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 819  :         return m_Cursor == m_End;

	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rbx+8]
	cmp	rcx, rdx

; 793  :         if (!eof())

	je	$LN3@accept_int

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 48			; 00000030H

; 766  :         if (expect(c))

	jne	SHORT $LN135@accept_int

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rcx+1]
	mov	rcx, rax
	cmp	rax, rdx
	cmova	rcx, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rcx

; 662  :         if (accept('0'))

	ja	SHORT $LN135@accept_int
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR part$[rbp-64]
	mov	rdx, QWORD PTR part$[rbp-56]
	cmp	rcx, rdx

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	jae	SHORT $LN155@accept_int

; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR part$[rbp-64], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR part$[rbp-80]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR part$[rbp-80]

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	WORD PTR [rax+rcx], 48			; 00000030H

; 4053 :             return;

	jmp	$LN367@accept_int
$LN155@accept_int:

; 4054 :         }
; 4055 : 
; 4056 :         _Reallocate_grow_by(

	mov	r9b, 48					; 00000030H
	lea	rcx, QWORD PTR part$[rbp-80]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 665  :             return true;

	jmp	$LN367@accept_int
$LN135@accept_int:

; 819  :         return m_Cursor == m_End;

	cmp	rcx, rdx

; 793  :         if (!eof())

	je	SHORT $LN3@accept_int

; 794  :             return *m_Cursor;

	movzx	r9d, BYTE PTR [rcx]

; 676  :         if (c >= '1' && c <= '9')

	lea	eax, DWORD PTR [r9-49]
	cmp	al, 8
	ja	SHORT $LN3@accept_int
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR part$[rbp-64]
	mov	rdx, QWORD PTR part$[rbp-56]
	cmp	rcx, rdx

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	jae	SHORT $LN172@accept_int

; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR part$[rbp-64], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR part$[rbp-80]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR part$[rbp-80]

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	BYTE PTR [rax+rcx], r9b

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

	mov	BYTE PTR [rax+rcx+1], 0

; 4053 :             return;

	jmp	SHORT $LN171@accept_int
$LN172@accept_int:

; 4054 :         }
; 4055 : 
; 4056 :         _Reallocate_grow_by(

	lea	rcx, QWORD PTR part$[rbp-80]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
$LN171@accept_int:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 806  :         if (m_Cursor + count > m_End)

	mov	rdx, QWORD PTR [rbx]
	inc	rdx
	mov	rax, rdx
	cmp	rdx, QWORD PTR [rbx+8]
	cmova	rax, QWORD PTR [rbx+8]

; 679  :             return advance();

	mov	QWORD PTR [rbx], rax

; 667  :         else if (accept_onenine(result))

	jbe	$LN367@accept_int
$LN3@accept_int:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR part$[rbp-80]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR part$[rbp-56], 16
	cmovae	rax, QWORD PTR part$[rbp-80]

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR part$[rbp-64], 0
	mov	BYTE PTR [rax], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 819  :         return m_Cursor == m_End;

	mov	rax, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rbx+8]
	cmp	rax, rdx

; 793  :         if (!eof())

	je	$LN9@accept_int

; 801  :         return peek() == c;

	cmp	BYTE PTR [rax], 45			; 0000002dH

; 766  :         if (expect(c))

	jne	$LN9@accept_int

; 806  :         if (m_Cursor + count > m_End)

	inc	rax
	mov	rcx, rax
	cmp	rax, rdx
	cmova	rcx, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rcx

; 615  :         {
; 616  :             result += std::move(part);
; 617  :             return true;
; 618  :         }
; 619  : 
; 620  :         part.resize(0);
; 621  :         if (accept_digit(part))
; 622  :         {
; 623  :             result += std::move(part);
; 624  :             return true;
; 625  :         }
; 626  : 
; 627  :         part.resize(0);
; 628  :         if (s(accept('-') && accept_onenine(part) && accept_digits(part)))

	ja	SHORT $LN9@accept_int

; 819  :         return m_Cursor == m_End;

	cmp	rcx, rdx

; 793  :         if (!eof())

	je	SHORT $LN9@accept_int

; 794  :             return *m_Cursor;

	movzx	r9d, BYTE PTR [rcx]

; 676  :         if (c >= '1' && c <= '9')

	lea	eax, DWORD PTR [r9-49]
	cmp	al, 8
	ja	SHORT $LN9@accept_int
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR part$[rbp-64]
	mov	rdx, QWORD PTR part$[rbp-56]
	cmp	rcx, rdx

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	jae	SHORT $LN256@accept_int

; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR part$[rbp-64], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR part$[rbp-80]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR part$[rbp-80]

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	BYTE PTR [rax+rcx], r9b

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

	mov	BYTE PTR [rax+rcx+1], 0

; 4053 :             return;

	jmp	SHORT $LN255@accept_int
$LN256@accept_int:

; 4054 :         }
; 4055 : 
; 4056 :         _Reallocate_grow_by(

	lea	rcx, QWORD PTR part$[rbp-80]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
$LN255@accept_int:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 806  :         if (m_Cursor + count > m_End)

	mov	rdx, QWORD PTR [rbx]
	inc	rdx
	mov	rax, rdx
	cmp	rdx, QWORD PTR [rbx+8]
	cmova	rax, QWORD PTR [rbx+8]

; 679  :             return advance();

	mov	QWORD PTR [rbx], rax

; 615  :         {
; 616  :             result += std::move(part);
; 617  :             return true;
; 618  :         }
; 619  : 
; 620  :         part.resize(0);
; 621  :         if (accept_digit(part))
; 622  :         {
; 623  :             result += std::move(part);
; 624  :             return true;
; 625  :         }
; 626  : 
; 627  :         part.resize(0);
; 628  :         if (s(accept('-') && accept_onenine(part) && accept_digits(part)))

	ja	SHORT $LN9@accept_int
	lea	rdx, QWORD PTR part$[rbp-80]
	mov	rcx, rbx
	call	?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_digits
	test	al, al
	jne	SHORT $LN369@accept_int
$LN9@accept_int:

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rbx], rsi

; 629  :         {
; 630  :             result += '-';
; 631  :             result += std::move(part);
; 632  :             return true;
; 633  :         }
; 634  : 
; 635  :         part.resize(0);

	xor	edx, edx
	lea	rcx, QWORD PTR part$[rbp-80]
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

; 819  :         return m_Cursor == m_End;

	mov	rcx, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rbx+8]
	cmp	rcx, rdx

; 793  :         if (!eof())

	je	SHORT $LN11@accept_int

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 45			; 0000002dH

; 766  :         if (expect(c))

	jne	SHORT $LN11@accept_int

; 806  :         if (m_Cursor + count > m_End)

	inc	rcx
	mov	rax, rcx
	cmp	rcx, rdx
	cmova	rax, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rax

; 636  :         if (s(accept('-') && accept_digit(part)))

	ja	SHORT $LN11@accept_int
	lea	rdx, QWORD PTR part$[rbp-80]
	mov	rcx, rbx
	call	?accept_digit@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_digit
	test	al, al
	je	SHORT $LN11@accept_int
$LN369@accept_int:

; 637  :         {
; 638  :             result += '-';

	mov	dl, 45					; 0000002dH
	mov	rcx, rdi
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN367@accept_int:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR part$[rbp-80]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR part$[rbp-56], 16
	cmovae	rdx, QWORD PTR part$[rbp-80]
	mov	r8, QWORD PTR part$[rbp-64]
	mov	rcx, rdi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	bl, 1
	jmp	SHORT $LN17@accept_int
$LN11@accept_int:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rbx], rsi

; 643  :         return false;

	xor	bl, bl
$LN17@accept_int:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR part$[rbp-56]
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN73@accept_int

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR part$[rbp-80]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN85@accept_int

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN85@accept_int
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN85@accept_int:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN73@accept_int:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 643  :         return false;

	movzx	eax, bl

; 644  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-80]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+128]
	add	rsp, 80					; 00000050H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN366@accept_int:
?accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::parser::accept_int
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
part$ = 32
__$ArrayPad$ = 64
this$ = 112
result$ = 120
?dtor$0@?0??accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `crude_json::value::parser::accept_int'::`1'::dtor$0
	lea	rcx, QWORD PTR part$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??accept_int@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `crude_json::value::parser::accept_int'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
part$ = 32
__$ArrayPad$ = 64
this$ = 96
result$ = 104
?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::parser::accept_digits, COMDAT

; 647  :     {

$LN185:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rdi
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-80], rax
	mov	rdi, rdx
	mov	rbx, rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR part$[rbp-80], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR part$[rbp-64], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	r8d, 15
	mov	QWORD PTR part$[rbp-56], r8

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR part$[rbp-80], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 819  :         return m_Cursor == m_End;

	mov	rcx, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rbx+8]
	cmp	rcx, rdx

; 793  :         if (!eof())

	je	SHORT $LN27@accept_dig

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 48			; 00000030H

; 766  :         if (expect(c))

	jne	SHORT $LN27@accept_dig

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rcx+1]
	mov	rcx, rax
	cmp	rax, rdx
	cmova	rcx, rdx

; 767  :             return advance();

	mov	QWORD PTR [rbx], rcx

; 662  :         if (accept('0'))

	mov	r9, rcx
	ja	SHORT $LN22@accept_dig
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	mov	QWORD PTR part$[rbp-64], 1

; 4050 :             _Elem* const _Ptr       = _Mypair._Myval2._Myptr();
; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	WORD PTR part$[rbp-80], 48		; 00000030H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 665  :             return true;

	jmp	SHORT $LL2@accept_dig
$LN27@accept_dig:

; 769  :             return false;

	mov	r9, rcx
$LN22@accept_dig:

; 819  :         return m_Cursor == m_End;

	cmp	rcx, rdx

; 793  :         if (!eof())

	je	$LN24@accept_dig

; 794  :             return *m_Cursor;

	movzx	edx, BYTE PTR [rcx]

; 676  :         if (c >= '1' && c <= '9')

	lea	eax, DWORD PTR [rdx-49]
	cmp	al, 8
	ja	$LN24@accept_dig
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	mov	QWORD PTR part$[rbp-64], 1

; 4050 :             _Elem* const _Ptr       = _Mypair._Myval2._Myptr();
; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	BYTE PTR part$[rbp-80], dl

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

	mov	BYTE PTR part$[rbp-79], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 806  :         if (m_Cursor + count > m_End)

	lea	rdx, QWORD PTR [r9+1]
	mov	rax, rdx
	cmp	rdx, QWORD PTR [rbx+8]
	cmova	rax, QWORD PTR [rbx+8]

; 679  :             return advance();

	mov	QWORD PTR [rbx], rax

; 667  :         else if (accept_onenine(result))

	ja	$LN24@accept_dig
	npad	4
$LL2@accept_dig:

; 819  :         return m_Cursor == m_End;

	mov	rax, QWORD PTR [rbx]
	mov	rcx, QWORD PTR [rbx+8]
	cmp	rax, rcx

; 793  :         if (!eof())

	je	$LN106@accept_dig

; 801  :         return peek() == c;

	cmp	BYTE PTR [rax], 48			; 00000030H

; 766  :         if (expect(c))

	jne	SHORT $LN78@accept_dig

; 806  :         if (m_Cursor + count > m_End)

	lea	rdx, QWORD PTR [rax+1]
	mov	r9, rbx
	cmp	rdx, rcx

; 807  :         {
; 808  :             m_Cursor = m_End;
; 809  :             return false;

	mov	rax, rcx

; 806  :         if (m_Cursor + count > m_End)

	ja	SHORT $LN94@accept_dig

; 810  :         }
; 811  : 
; 812  :         m_Cursor += count;
; 813  : 
; 814  :         return true;

	mov	rax, rdx
$LN94@accept_dig:

; 767  :             return advance();

	mov	QWORD PTR [r9], rax

; 662  :         if (accept('0'))

	ja	SHORT $LN78@accept_dig
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR part$[rbp-64]
	cmp	rcx, r8

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	jae	SHORT $LN98@accept_dig

; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR part$[rbp-64], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR part$[rbp-80]

; 2227 :         if (_Large_string_engaged()) {

	cmp	r8, 16
	cmovae	rax, QWORD PTR part$[rbp-80]

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	WORD PTR [rax+rcx], 48			; 00000030H

; 4053 :             return;

	mov	r8, QWORD PTR part$[rbp-56]
	jmp	SHORT $LL2@accept_dig
$LN98@accept_dig:

; 4054 :         }
; 4055 : 
; 4056 :         _Reallocate_grow_by(

	mov	r9b, 48					; 00000030H
	lea	rcx, QWORD PTR part$[rbp-80]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 665  :             return true;

	mov	r8, QWORD PTR part$[rbp-56]
	jmp	SHORT $LL2@accept_dig
$LN78@accept_dig:

; 819  :         return m_Cursor == m_End;

	cmp	rax, rcx

; 793  :         if (!eof())

	je	SHORT $LN106@accept_dig

; 794  :             return *m_Cursor;

	movsx	r9d, BYTE PTR [rax]
	mov	eax, r9d

; 676  :         if (c >= '1' && c <= '9')

	add	eax, -49				; ffffffcfH
	cmp	eax, 8
	ja	SHORT $LN106@accept_dig
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR part$[rbp-64]
	cmp	rcx, r8

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	jae	SHORT $LN115@accept_dig

; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR part$[rbp-64], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR part$[rbp-80]

; 2227 :         if (_Large_string_engaged()) {

	cmp	r8, 16
	cmovae	rax, QWORD PTR part$[rbp-80]

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	BYTE PTR [rax+rcx], r9b

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

	mov	BYTE PTR [rax+rcx+1], 0

; 4053 :             return;

	jmp	SHORT $LN114@accept_dig
$LN115@accept_dig:

; 4054 :         }
; 4055 : 
; 4056 :         _Reallocate_grow_by(

	lea	rcx, QWORD PTR part$[rbp-80]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
$LN114@accept_dig:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 806  :         if (m_Cursor + count > m_End)

	mov	rax, QWORD PTR [rbx]
	inc	rax
	mov	rcx, QWORD PTR [rbx+8]
	cmp	rax, rcx
	ja	SHORT $LN174@accept_dig

; 810  :         }
; 811  : 
; 812  :         m_Cursor += count;
; 813  : 
; 814  :         return true;

	mov	QWORD PTR [rbx], rax
	mov	r8, QWORD PTR part$[rbp-56]
	jmp	$LL2@accept_dig
$LN174@accept_dig:

; 807  :         {
; 808  :             m_Cursor = m_End;
; 809  :             return false;

	mov	QWORD PTR [rbx], rcx
	mov	r8, QWORD PTR part$[rbp-56]
$LN106@accept_dig:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR part$[rbp-80]

; 2236 :         if (_Large_string_engaged()) {

	cmp	r8, 16
	cmovae	rdx, QWORD PTR part$[rbp-80]

; 3241 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, QWORD PTR part$[rbp-64]
	mov	rcx, rdi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 657  :         return true;

	mov	bl, 1
	mov	r8, QWORD PTR part$[rbp-56]
	jmp	SHORT $LN7@accept_dig
$LN24@accept_dig:
	xor	bl, bl
$LN7@accept_dig:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r8, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN146@accept_dig

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	lea	rdx, QWORD PTR [r8+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR part$[rbp-80]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN158@accept_dig

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN158@accept_dig
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN158@accept_dig:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN146@accept_dig:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 657  :         return true;

	movzx	eax, bl

; 658  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-80]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+112]
	mov	rdi, QWORD PTR [rsp+120]
	add	rsp, 80					; 00000050H
	pop	rbp
	ret	0
$LN181@accept_dig:
?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::parser::accept_digits
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
part$ = 32
__$ArrayPad$ = 64
this$ = 96
result$ = 104
?dtor$0@?0??accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `crude_json::value::parser::accept_digits'::`1'::dtor$0
	lea	rcx, QWORD PTR part$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `crude_json::value::parser::accept_digits'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_digit@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
result$ = 56
?accept_digit@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::parser::accept_digit, COMDAT

; 661  :     {

$LN32:
	sub	rsp, 40					; 00000028H
	mov	r8, rcx

; 819  :         return m_Cursor == m_End;

	mov	rcx, QWORD PTR [rcx]
	mov	r9, QWORD PTR [r8+8]
	cmp	rcx, r9

; 793  :         if (!eof())

	je	SHORT $LN2@accept_dig

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 48			; 00000030H

; 766  :         if (expect(c))

	jne	SHORT $LN2@accept_dig

; 806  :         if (m_Cursor + count > m_End)

	inc	rcx
	cmp	rcx, r9
	mov	rax, rcx
	cmova	rax, r9

; 767  :             return advance();

	mov	QWORD PTR [r8], rax

; 662  :         if (accept('0'))

	ja	SHORT $LN2@accept_dig
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR [rdx+16]

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	mov	r8, QWORD PTR [rdx+24]
	cmp	rcx, r8
	jae	SHORT $LN22@accept_dig

; 4048 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + 1);
; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR [rdx+16], rax

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r8, 16

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN25@accept_dig

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN25@accept_dig:

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	WORD PTR [rdx+rcx], 48			; 00000030H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 668  :             return true;

	mov	al, 1

; 669  : 
; 670  :         return false;
; 671  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN22@accept_dig:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4056 :         _Reallocate_grow_by(

	mov	r9b, 48					; 00000030H
	mov	rcx, rdx
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 668  :             return true;

	mov	al, 1

; 669  : 
; 670  :         return false;
; 671  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN2@accept_dig:

; 663  :         {
; 664  :             result.push_back('0');
; 665  :             return true;
; 666  :         }
; 667  :         else if (accept_onenine(result))

	mov	rcx, r8
	call	?accept_onenine@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_onenine
	test	al, al
	setne	al

; 669  : 
; 670  :         return false;
; 671  :     }

	add	rsp, 40					; 00000028H
	ret	0
?accept_digit@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::parser::accept_digit
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_onenine@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
result$ = 56
?accept_onenine@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::parser::accept_onenine, COMDAT

; 674  :     {

$LN28:
	push	rbx
	sub	rsp, 32					; 00000020H

; 819  :         return m_Cursor == m_End;

	mov	r9, QWORD PTR [rcx]

; 674  :     {

	mov	rbx, rcx

; 819  :         return m_Cursor == m_End;

	cmp	r9, QWORD PTR [rcx+8]

; 793  :         if (!eof())

	je	SHORT $LN2@accept_one

; 794  :             return *m_Cursor;

	movzx	r9d, BYTE PTR [r9]

; 675  :         auto c = peek();
; 676  :         if (c >= '1' && c <= '9')

	lea	eax, DWORD PTR [r9-49]
	cmp	al, 8
	ja	SHORT $LN2@accept_one
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR [rdx+16]

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	mov	r8, QWORD PTR [rdx+24]
	cmp	rcx, r8
	jae	SHORT $LN11@accept_one

; 4048 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + 1);
; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR [rdx+16], rax

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r8, 16

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN14@accept_one

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN14@accept_one:

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	BYTE PTR [rdx+rcx], r9b

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

	mov	BYTE PTR [rdx+rcx+1], 0

; 4053 :             return;

	jmp	SHORT $LN10@accept_one
$LN11@accept_one:

; 4054 :         }
; 4055 : 
; 4056 :         _Reallocate_grow_by(

	mov	rcx, rdx
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
$LN10@accept_one:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 806  :         if (m_Cursor + count > m_End)

	mov	rdx, QWORD PTR [rbx]
	inc	rdx
	cmp	rdx, QWORD PTR [rbx+8]
	mov	rcx, rdx
	cmova	rcx, QWORD PTR [rbx+8]

; 677  :         {
; 678  :             result.push_back(static_cast<char>(c));
; 679  :             return advance();

	setbe	al
	mov	QWORD PTR [rbx], rcx

; 683  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN2@accept_one:

; 680  :         }
; 681  : 
; 682  :         return false;

	xor	al, al

; 683  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?accept_onenine@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::parser::accept_onenine
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
part$ = 32
__$ArrayPad$ = 64
this$ = 96
result$ = 104
?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::parser::accept_frac, COMDAT

; 686  :     {

$LN100:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rdx
	mov	rdi, rcx

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rsi, QWORD PTR [rcx]
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR part$[rsp], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR part$[rsp+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	edx, 15
	mov	QWORD PTR part$[rsp+24], rdx

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR part$[rsp], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 819  :         return m_Cursor == m_End;

	mov	r8, QWORD PTR [rcx+8]
	cmp	rsi, r8

; 793  :         if (!eof())

	je	$LN4@accept_fra

; 801  :         return peek() == c;

	cmp	BYTE PTR [rsi], 46			; 0000002eH

; 766  :         if (expect(c))

	jne	$LN4@accept_fra

; 806  :         if (m_Cursor + count > m_End)

	lea	rcx, QWORD PTR [rsi+1]
	mov	rax, rcx
	cmp	rcx, r8
	cmova	rax, r8

; 767  :             return advance();

	mov	QWORD PTR [rdi], rax

; 690  :         if (s(accept('.') && accept_digits(part)))

	ja	SHORT $LN4@accept_fra
	lea	rdx, QWORD PTR part$[rsp]
	mov	rcx, rdi
	call	?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_digits
	test	al, al
	je	SHORT $LN96@accept_fra
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR [rbx+16]

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	mov	rdx, QWORD PTR [rbx+24]
	cmp	rcx, rdx
	jae	SHORT $LN48@accept_fra

; 4048 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + 1);
; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR [rbx+16], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rbx

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	jb	SHORT $LN51@accept_fra

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rbx]
$LN51@accept_fra:

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	WORD PTR [rax+rcx], 46			; 0000002eH

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());
; 4053 :             return;

	jmp	SHORT $LN47@accept_fra
$LN48@accept_fra:

; 4054 :         }
; 4055 : 
; 4056 :         _Reallocate_grow_by(

	mov	r9b, 46					; 0000002eH
	mov	rcx, rbx
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
$LN47@accept_fra:

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR part$[rsp]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR part$[rsp+24], 16
	cmovae	rdx, QWORD PTR part$[rsp]

; 3241 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, QWORD PTR part$[rsp+16]
	mov	rcx, rbx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	rdx, QWORD PTR part$[rsp+24]
	jmp	SHORT $LN2@accept_fra
$LN96@accept_fra:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 690  :         if (s(accept('.') && accept_digits(part)))

	mov	rdx, QWORD PTR part$[rsp+24]
$LN4@accept_fra:

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rdi], rsi
$LN2@accept_fra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN76@accept_fra

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR part$[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN88@accept_fra

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN88@accept_fra
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN88@accept_fra:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN76@accept_fra:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 696  :         return true;

	mov	al, 1

; 697  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+120]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
$LN97@accept_fra:
?accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::parser::accept_frac
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
part$ = 32
__$ArrayPad$ = 64
this$ = 96
result$ = 104
?dtor$0@?0??accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `crude_json::value::parser::accept_frac'::`1'::dtor$0
	lea	rcx, QWORD PTR part$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??accept_frac@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `crude_json::value::parser::accept_frac'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
part$ = 32
__$ArrayPad$ = 64
this$ = 96
result$ = 104
?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::parser::accept_exp, COMDAT

; 700  :     {

$LN197:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rdx
	mov	rdi, rcx

; 369  :             , m_LastCursor(p->m_Cursor)

	mov	rsi, QWORD PTR [rcx]
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR part$[rsp], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR part$[rsp+16], 0

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	edx, 15
	mov	QWORD PTR part$[rsp+24], rdx

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR part$[rsp], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 819  :         return m_Cursor == m_End;

	mov	r8, QWORD PTR [rcx+8]
	cmp	rsi, r8

; 793  :         if (!eof())

	je	$LN5@accept_exp

; 801  :         return peek() == c;

	cmp	BYTE PTR [rsi], 101			; 00000065H

; 766  :         if (expect(c))

	jne	$LN5@accept_exp

; 806  :         if (m_Cursor + count > m_End)

	lea	rcx, QWORD PTR [rsi+1]
	mov	rax, rcx
	cmp	rcx, r8
	cmova	rax, r8

; 767  :             return advance();

	mov	QWORD PTR [rdi], rax

; 701  :         auto s = state();
; 702  : 
; 703  :         string part;
; 704  :         if (s(accept('e') && accept_sign(part) && accept_digits(part)))

	ja	SHORT $LN5@accept_exp
	lea	rdx, QWORD PTR part$[rsp]
	mov	rcx, rdi
	call	?accept_sign@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_sign
	test	al, al
	je	SHORT $LN192@accept_exp
	lea	rdx, QWORD PTR part$[rsp]
	mov	rcx, rdi
	call	?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_digits
	test	al, al
	je	SHORT $LN192@accept_exp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR [rbx+16]

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	mov	rdx, QWORD PTR [rbx+24]
	cmp	rcx, rdx
	jae	SHORT $LN82@accept_exp

; 4048 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + 1);
; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR [rbx+16], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rbx

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	jb	SHORT $LN85@accept_exp

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rbx]
$LN85@accept_exp:

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	WORD PTR [rax+rcx], 101			; 00000065H

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());
; 4053 :             return;

	jmp	SHORT $LN81@accept_exp
$LN82@accept_exp:

; 4054 :         }
; 4055 : 
; 4056 :         _Reallocate_grow_by(

	mov	r9b, 101				; 00000065H
$LN194@accept_exp:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 717  :         return true;

	mov	rcx, rbx
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
$LN81@accept_exp:
	lea	rdx, QWORD PTR part$[rsp]
	cmp	QWORD PTR part$[rsp+24], 16
	cmovae	rdx, QWORD PTR part$[rsp]
	mov	r8, QWORD PTR part$[rsp+16]
	mov	rcx, rbx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	jmp	$LN3@accept_exp
$LN192@accept_exp:

; 701  :         auto s = state();
; 702  : 
; 703  :         string part;
; 704  :         if (s(accept('e') && accept_sign(part) && accept_digits(part)))

	mov	rdx, QWORD PTR part$[rsp+24]
$LN5@accept_exp:

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rdi], rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR part$[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR part$[rsp]

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR part$[rsp+16], 0
	mov	BYTE PTR [rax], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 819  :         return m_Cursor == m_End;

	mov	rcx, QWORD PTR [rdi]
	mov	rdx, QWORD PTR [rdi+8]
	cmp	rcx, rdx

; 793  :         if (!eof())

	je	SHORT $LN7@accept_exp

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 69			; 00000045H

; 766  :         if (expect(c))

	jne	SHORT $LN7@accept_exp

; 806  :         if (m_Cursor + count > m_End)

	inc	rcx
	mov	rax, rcx
	cmp	rcx, rdx
	cmova	rax, rdx

; 767  :             return advance();

	mov	QWORD PTR [rdi], rax

; 705  :         {
; 706  :             result += 'e';
; 707  :             result += std::move(part);
; 708  :             return true;
; 709  :         }
; 710  :         part.resize(0);
; 711  :         if (s(accept('E') && accept_sign(part) && accept_digits(part)))

	ja	SHORT $LN7@accept_exp
	lea	rdx, QWORD PTR part$[rsp]
	mov	rcx, rdi
	call	?accept_sign@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_sign
	test	al, al
	je	SHORT $LN7@accept_exp
	lea	rdx, QWORD PTR part$[rsp]
	mov	rcx, rdi
	call	?accept_digits@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; crude_json::value::parser::accept_digits
	test	al, al
	je	SHORT $LN7@accept_exp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR [rbx+16]

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	mov	rdx, QWORD PTR [rbx+24]
	cmp	rcx, rdx
	jae	SHORT $LN156@accept_exp

; 4048 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + 1);
; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR [rbx+16], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	mov	rax, rbx

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	jb	SHORT $LN159@accept_exp

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rbx]
$LN159@accept_exp:

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	WORD PTR [rax+rcx], 69			; 00000045H

; 4052 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());
; 4053 :             return;

	jmp	$LN81@accept_exp
$LN156@accept_exp:

; 4054 :         }
; 4055 : 
; 4056 :         _Reallocate_grow_by(

	mov	r9b, 69					; 00000045H

; 3241 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	jmp	$LN194@accept_exp
$LN7@accept_exp:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 375  :             m_Owner->m_Cursor = m_LastCursor;

	mov	QWORD PTR [rdi], rsi
$LN3@accept_exp:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR part$[rsp+24]
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN61@accept_exp

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR part$[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN73@accept_exp

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN73@accept_exp
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN73@accept_exp:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN61@accept_exp:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 717  :         return true;

	mov	al, 1

; 718  :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+112]
	mov	rsi, QWORD PTR [rsp+120]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
$LN193@accept_exp:
?accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::parser::accept_exp
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
part$ = 32
__$ArrayPad$ = 64
this$ = 96
result$ = 104
?dtor$0@?0??accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `crude_json::value::parser::accept_exp'::`1'::dtor$0
	lea	rcx, QWORD PTR part$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??accept_exp@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `crude_json::value::parser::accept_exp'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_sign@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
result$ = 56
?accept_sign@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::parser::accept_sign, COMDAT

; 721  :     {

$LN59:
	sub	rsp, 40					; 00000028H
	mov	r9, rcx

; 819  :         return m_Cursor == m_End;

	mov	rcx, QWORD PTR [rcx]
	mov	r8, QWORD PTR [r9+8]
	cmp	rcx, r8

; 793  :         if (!eof())

	je	$LN53@accept_sig

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 43			; 0000002bH

; 766  :         if (expect(c))

	jne	SHORT $LN2@accept_sig

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rcx+1]
	cmp	rax, r8
	mov	rcx, rax
	cmova	rcx, r8

; 767  :             return advance();

	mov	QWORD PTR [r9], rcx

; 722  :         if (accept('+'))

	ja	SHORT $LN2@accept_sig
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR [rdx+16]

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	mov	r8, QWORD PTR [rdx+24]
	cmp	rcx, r8
	jae	SHORT $LN22@accept_sig

; 4048 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + 1);
; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR [rdx+16], rax

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r8, 16

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN25@accept_sig

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN25@accept_sig:

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	WORD PTR [rdx+rcx], 43			; 0000002bH
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 728  :     }

	mov	al, 1
	add	rsp, 40					; 00000028H
	ret	0
$LN22@accept_sig:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4056 :         _Reallocate_grow_by(

	mov	r9b, 43					; 0000002bH
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 728  :     }

	mov	rcx, rdx
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
	mov	al, 1
	add	rsp, 40					; 00000028H
	ret	0
$LN2@accept_sig:

; 819  :         return m_Cursor == m_End;

	cmp	rcx, r8

; 793  :         if (!eof())

	je	SHORT $LN53@accept_sig

; 801  :         return peek() == c;

	cmp	BYTE PTR [rcx], 45			; 0000002dH

; 766  :         if (expect(c))

	jne	SHORT $LN53@accept_sig

; 806  :         if (m_Cursor + count > m_End)

	inc	rcx
	cmp	rcx, r8
	mov	rax, rcx
	cmova	rax, r8

; 767  :             return advance();

	mov	QWORD PTR [r9], rax

; 723  :             result.push_back('+');
; 724  :         else if (accept('-'))

	ja	SHORT $LN53@accept_sig
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4046 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR [rdx+16]

; 4047 :         if (_Old_size < _Mypair._Myval2._Myres) {

	mov	r8, QWORD PTR [rdx+24]
	cmp	rcx, r8
	jae	SHORT $LN45@accept_sig

; 4048 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + 1);
; 4049 :             _Mypair._Myval2._Mysize = _Old_size + 1;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR [rdx+16], rax

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r8, 16

; 2227 :         if (_Large_string_engaged()) {

	jb	SHORT $LN48@accept_sig

; 2228 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN48@accept_sig:

; 4051 :             _Traits::assign(_Ptr[_Old_size], _Ch);

	mov	WORD PTR [rdx+rcx], 45			; 0000002dH
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 728  :     }

	mov	al, 1
	add	rsp, 40					; 00000028H
	ret	0
$LN45@accept_sig:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4056 :         _Reallocate_grow_by(

	mov	r9b, 45					; 0000002dH
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 728  :     }

	mov	rcx, rdx
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back'::`2'::<lambda_1>,char>
$LN53@accept_sig:
	mov	al, 1
	add	rsp, 40					; 00000028H
	ret	0
?accept_sign@parser@value@crude_json@@AEAA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::parser::accept_sign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_ws@parser@value@crude_json@@AEAA_NXZ
_TEXT	SEGMENT
this$ = 48
?accept_ws@parser@value@crude_json@@AEAA_NXZ PROC	; crude_json::value::parser::accept_ws, COMDAT

; 731  :     {

$LN19:
	sub	rsp, 40					; 00000028H
	mov	r8, rcx
	npad	9
$LL2@accept_ws:

; 732  :         while (expect('\x09') || expect('\x0A') || expect('\x0D') || expect('\x20'))

	mov	dl, 9
	mov	rcx, r8
	call	?expect@parser@value@crude_json@@AEAA_ND@Z ; crude_json::value::parser::expect
	test	al, al
	jne	SHORT $LN4@accept_ws
	mov	dl, 10
	mov	rcx, r8
	call	?expect@parser@value@crude_json@@AEAA_ND@Z ; crude_json::value::parser::expect
	test	al, al
	jne	SHORT $LN4@accept_ws
	mov	dl, 13
	mov	rcx, r8
	call	?expect@parser@value@crude_json@@AEAA_ND@Z ; crude_json::value::parser::expect
	test	al, al
	jne	SHORT $LN4@accept_ws
	mov	dl, 32					; 00000020H
	mov	rcx, r8
	call	?expect@parser@value@crude_json@@AEAA_ND@Z ; crude_json::value::parser::expect
	test	al, al
	je	SHORT $LN16@accept_ws
$LN4@accept_ws:

; 806  :         if (m_Cursor + count > m_End)

	mov	rcx, QWORD PTR [r8]
	mov	rax, QWORD PTR [r8+8]
	inc	rcx
	cmp	rcx, rax
	ja	SHORT $LN17@accept_ws

; 807  :         {
; 808  :             m_Cursor = m_End;
; 809  :             return false;
; 810  :         }
; 811  : 
; 812  :         m_Cursor += count;

	mov	rax, rcx
$LN17@accept_ws:

; 733  :             advance();

	mov	rcx, r8
	mov	QWORD PTR [rcx], rax
	jmp	SHORT $LL2@accept_ws
$LN16@accept_ws:

; 734  :         return true;

	mov	al, 1

; 735  :     }

	add	rsp, 40					; 00000028H
	ret	0
?accept_ws@parser@value@crude_json@@AEAA_NXZ ENDP	; crude_json::value::parser::accept_ws
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_boolean@parser@value@crude_json@@AEAA_NAEAU23@@Z
_TEXT	SEGMENT
this$ = 48
result$ = 56
?accept_boolean@parser@value@crude_json@@AEAA_NAEAU23@@Z PROC ; crude_json::value::parser::accept_boolean, COMDAT

; 738  :     {

$LN47:
	push	rbx
	sub	rsp, 32					; 00000020H

; 774  :         auto last = m_Cursor;

	mov	r11, QWORD PTR [rcx]

; 739  :         if (accept("true"))

	lea	r9, OFFSET FLAT:??_C@_04LOAJBDKD@true@
	mov	r10, rcx

; 819  :         return m_Cursor == m_End;

	mov	r8, r11
	mov	rcx, QWORD PTR [rcx+8]

; 738  :     {

	mov	rbx, rdx
	npad	3
$LL7@accept_boo:

; 819  :         return m_Cursor == m_End;

	cmp	r8, rcx

; 778  :             if (eof() || *str != *m_Cursor)

	je	SHORT $LN30@accept_boo
	movzx	eax, BYTE PTR [r8]
	cmp	BYTE PTR [r9], al
	jne	SHORT $LN30@accept_boo

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [r8+1]
	mov	r8, rax
	cmp	rax, rcx
	mov	rax, r10
	jbe	SHORT $LN14@accept_boo

; 807  :         {
; 808  :             m_Cursor = m_End;

	mov	r8, rcx
$LN14@accept_boo:

; 785  :             ++str;

	inc	r9
	mov	QWORD PTR [rax], r8
	cmp	BYTE PTR [r9], 0
	jne	SHORT $LL7@accept_boo

; 740  :         {
; 741  :             result = true;

	mov	dl, 1
	mov	rcx, rbx
	call	??4value@crude_json@@QEAAAEAU01@_N@Z	; crude_json::value::operator=

; 742  :             return true;

	mov	al, 1

; 751  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN30@accept_boo:

; 819  :         return m_Cursor == m_End;

	mov	r8, QWORD PTR [r10+8]

; 743  :         }
; 744  :         else if (accept("false"))

	lea	rdx, OFFSET FLAT:??_C@_05LAPONLG@false@

; 780  :                 m_Cursor = last;

	mov	QWORD PTR [r10], r11

; 819  :         return m_Cursor == m_End;

	mov	rcx, r11
	npad	1
$LL18@accept_boo:
	cmp	rcx, r8

; 778  :             if (eof() || *str != *m_Cursor)

	je	SHORT $LN31@accept_boo
	movzx	eax, BYTE PTR [rcx]
	cmp	BYTE PTR [rdx], al
	jne	SHORT $LN31@accept_boo

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [rcx+1]
	cmp	rax, r8
	mov	rcx, rax
	cmova	rcx, r8

; 785  :             ++str;

	inc	rdx
	mov	QWORD PTR [r10], rcx
	cmp	BYTE PTR [rdx], 0
	jne	SHORT $LL18@accept_boo

; 745  :         {
; 746  :             result = false;

	xor	edx, edx
	mov	rcx, rbx
	call	??4value@crude_json@@QEAAAEAU01@_N@Z	; crude_json::value::operator=

; 747  :             return true;

	mov	al, 1

; 751  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN31@accept_boo:

; 780  :                 m_Cursor = last;

	mov	QWORD PTR [r10], r11

; 748  :         }
; 749  : 
; 750  :         return false;

	xor	al, al

; 751  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?accept_boolean@parser@value@crude_json@@AEAA_NAEAU23@@Z ENDP ; crude_json::value::parser::accept_boolean
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept_null@parser@value@crude_json@@AEAA_NAEAU23@@Z
_TEXT	SEGMENT
this$ = 48
result$ = 56
?accept_null@parser@value@crude_json@@AEAA_NAEAU23@@Z PROC ; crude_json::value::parser::accept_null, COMDAT

; 754  :     {

$LN26:
	push	rbx
	sub	rsp, 32					; 00000020H

; 774  :         auto last = m_Cursor;

	mov	r11, QWORD PTR [rcx]

; 755  :         if (accept("null"))

	lea	r8, OFFSET FLAT:??_C@_04MLLLIHIP@null@

; 819  :         return m_Cursor == m_End;

	mov	r9, QWORD PTR [rcx+8]
	mov	rax, r11

; 754  :     {

	mov	rbx, rdx
	mov	r10, rcx
	npad	3
$LL5@accept_nul:

; 819  :         return m_Cursor == m_End;

	cmp	rax, r9

; 778  :             if (eof() || *str != *m_Cursor)

	je	SHORT $LN16@accept_nul
	movzx	edx, BYTE PTR [rax]
	cmp	BYTE PTR [r8], dl
	jne	SHORT $LN16@accept_nul

; 806  :         if (m_Cursor + count > m_End)

	lea	rcx, QWORD PTR [rax+1]
	mov	rax, rcx
	cmp	rcx, r9
	mov	rcx, r10
	jbe	SHORT $LN12@accept_nul

; 807  :         {
; 808  :             m_Cursor = m_End;

	mov	rax, r9
$LN12@accept_nul:

; 785  :             ++str;

	inc	r8
	mov	QWORD PTR [rcx], rax
	cmp	BYTE PTR [r8], 0
	jne	SHORT $LL5@accept_nul

; 756  :         {
; 757  :             result = nullptr;

	mov	rcx, rbx
	call	??4value@crude_json@@QEAAAEAU01@$$T@Z	; crude_json::value::operator=

; 758  :             return true;

	mov	al, 1

; 762  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN16@accept_nul:

; 780  :                 m_Cursor = last;

	mov	QWORD PTR [r10], r11

; 759  :         }
; 760  : 
; 761  :         return false;

	xor	al, al

; 762  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?accept_null@parser@value@crude_json@@AEAA_NAEAU23@@Z ENDP ; crude_json::value::parser::accept_null
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept@parser@value@crude_json@@AEAA_ND@Z
_TEXT	SEGMENT
this$ = 8
c$ = 16
?accept@parser@value@crude_json@@AEAA_ND@Z PROC		; crude_json::value::parser::accept, COMDAT

; 819  :         return m_Cursor == m_End;

	mov	r9, QWORD PTR [rcx]

; 765  :     {

	mov	r11, rcx

; 819  :         return m_Cursor == m_End;

	mov	r10, QWORD PTR [rcx+8]
	cmp	r9, r10

; 793  :         if (!eof())

	je	SHORT $LN8@accept

; 794  :             return *m_Cursor;

	movsx	r8d, BYTE PTR [r9]
	jmp	SHORT $LN9@accept
$LN8@accept:

; 795  :         else
; 796  :             return -1;

	mov	r8d, -1
$LN9@accept:

; 801  :         return peek() == c;

	movsx	eax, dl
	cmp	r8d, eax

; 766  :         if (expect(c))

	jne	SHORT $LN2@accept

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [r9+1]
	cmp	rax, r10
	mov	rcx, rax
	cmova	rcx, r10

; 767  :             return advance();

	setbe	al
	mov	QWORD PTR [r11], rcx

; 770  :     }

	ret	0
$LN2@accept:

; 768  :         else
; 769  :             return false;

	xor	al, al

; 770  :     }

	ret	0
?accept@parser@value@crude_json@@AEAA_ND@Z ENDP		; crude_json::value::parser::accept
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?accept@parser@value@crude_json@@AEAA_NPEBD@Z
_TEXT	SEGMENT
this$ = 8
str$ = 16
?accept@parser@value@crude_json@@AEAA_NPEBD@Z PROC	; crude_json::value::parser::accept, COMDAT

; 774  :         auto last = m_Cursor;
; 775  : 
; 776  :         while (*str)

	cmp	BYTE PTR [rdx], 0
	mov	r10, QWORD PTR [rcx]
	je	SHORT $LN3@accept

; 819  :         return m_Cursor == m_End;

	mov	r9, QWORD PTR [rcx+8]
	mov	r8, r10
	npad	1
$LL2@accept:
	cmp	r8, r9

; 777  :         {
; 778  :             if (eof() || *str != *m_Cursor)

	je	SHORT $LN13@accept
	movzx	eax, BYTE PTR [r8]
	cmp	BYTE PTR [rdx], al
	jne	SHORT $LN13@accept

; 806  :         if (m_Cursor + count > m_End)

	lea	rax, QWORD PTR [r8+1]
	mov	r8, rax
	cmp	rax, r9
	mov	rax, rcx
	jbe	SHORT $LN9@accept

; 807  :         {
; 808  :             m_Cursor = m_End;

	mov	r8, r9
$LN9@accept:

; 782  :             }
; 783  : 
; 784  :             advance();
; 785  :             ++str;

	inc	rdx
	mov	QWORD PTR [rax], r8
	cmp	BYTE PTR [rdx], 0
	jne	SHORT $LL2@accept
$LN3@accept:

; 786  :         }
; 787  : 
; 788  :         return true;

	mov	al, 1

; 789  :     }

	ret	0
$LN13@accept:

; 779  :             {
; 780  :                 m_Cursor = last;

	mov	QWORD PTR [rcx], r10

; 781  :                 return false;

	xor	al, al

; 789  :     }

	ret	0
?accept@parser@value@crude_json@@AEAA_NPEBD@Z ENDP	; crude_json::value::parser::accept
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?peek@parser@value@crude_json@@AEBAHXZ
_TEXT	SEGMENT
this$ = 8
?peek@parser@value@crude_json@@AEBAHXZ PROC		; crude_json::value::parser::peek, COMDAT

; 819  :         return m_Cursor == m_End;

	mov	rax, QWORD PTR [rcx]
	cmp	rax, QWORD PTR [rcx+8]

; 793  :         if (!eof())

	je	SHORT $LN2@peek

; 794  :             return *m_Cursor;

	movsx	eax, BYTE PTR [rax]

; 797  :     }

	ret	0
$LN2@peek:

; 795  :         else
; 796  :             return -1;

	mov	eax, -1

; 797  :     }

	ret	0
?peek@parser@value@crude_json@@AEBAHXZ ENDP		; crude_json::value::parser::peek
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?expect@parser@value@crude_json@@AEAA_ND@Z
_TEXT	SEGMENT
this$ = 8
c$ = 16
?expect@parser@value@crude_json@@AEAA_ND@Z PROC		; crude_json::value::parser::expect, COMDAT

; 819  :         return m_Cursor == m_End;

	mov	rax, QWORD PTR [rcx]
	cmp	rax, QWORD PTR [rcx+8]

; 793  :         if (!eof())

	je	SHORT $LN4@expect

; 794  :             return *m_Cursor;

	movsx	ecx, BYTE PTR [rax]

; 801  :         return peek() == c;

	movsx	eax, dl
	cmp	ecx, eax
	sete	al

; 802  :     }

	ret	0
$LN4@expect:

; 801  :         return peek() == c;

	movsx	eax, dl

; 796  :             return -1;

	mov	ecx, -1

; 801  :         return peek() == c;

	cmp	ecx, eax
	sete	al

; 802  :     }

	ret	0
?expect@parser@value@crude_json@@AEAA_ND@Z ENDP		; crude_json::value::parser::expect
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?advance@parser@value@crude_json@@AEAA_NH@Z
_TEXT	SEGMENT
this$ = 8
count$dead$ = 16
?advance@parser@value@crude_json@@AEAA_NH@Z PROC	; crude_json::value::parser::advance, COMDAT

; 806  :         if (m_Cursor + count > m_End)

	mov	rax, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rcx+8]
	inc	rax
	cmp	rax, rdx
	jbe	SHORT $LN2@advance

; 807  :         {
; 808  :             m_Cursor = m_End;

	mov	QWORD PTR [rcx], rdx

; 809  :             return false;

	xor	al, al

; 815  :     }

	ret	0
$LN2@advance:

; 810  :         }
; 811  : 
; 812  :         m_Cursor += count;

	mov	QWORD PTR [rcx], rax

; 813  : 
; 814  :         return true;

	mov	al, 1

; 815  :     }

	ret	0
?advance@parser@value@crude_json@@AEAA_NH@Z ENDP	; crude_json::value::parser::advance
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?eof@parser@value@crude_json@@AEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?eof@parser@value@crude_json@@AEBA_NXZ PROC		; crude_json::value::parser::eof, COMDAT

; 819  :         return m_Cursor == m_End;

	mov	rax, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rcx], rax
	sete	al

; 820  :     }

	ret	0
?eof@parser@value@crude_json@@AEBA_NXZ ENDP		; crude_json::value::parser::eof
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAX_K@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rcx], xmm0
	ret	0
?__autoclassinit2@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAX_K@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 80
p$ = 88
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
data$ = 136
?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; crude_json::value::parse, COMDAT

; 827  : {

$LN279:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	xor	r9d, r9d
	mov	DWORD PTR $T1[rsp], r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdx+24], 16
	jb	SHORT $LN272@parse

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r8, QWORD PTR [rdx]
	add	r8, QWORD PTR [rdx+16]
	mov	rdx, QWORD PTR [rdx]
	jmp	SHORT $LN15@parse
$LN272@parse:
	mov	r8, QWORD PTR [rdx+16]
	add	r8, rdx
$LN15@parse:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 342  :         : m_Cursor(begin)

	mov	QWORD PTR p$[rsp], rdx

; 343  :         , m_End(end)

	mov	QWORD PTR p$[rsp+8], r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR [rcx+32], r9d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 361  :         return v;

	mov	DWORD PTR $T1[rsp], 2

; 344  :     {
; 345  :     }
; 346  : 
; 347  :     value parse()
; 348  :     {
; 349  :         value v;
; 350  : 
; 351  :         // Switch to C locale to make strtod and strtol work as expected
; 352  :         auto previous_locale = std::setlocale(LC_NUMERIC, "C");

	lea	rdx, OFFSET FLAT:??_C@_01GFHCPBMG@C@
	mov	ecx, 4
	call	QWORD PTR __imp_setlocale
	mov	rdi, rax

; 353  : 
; 354  :         // Accept single value only when end of the stream is reached.
; 355  :         if (!accept_element(v) || !eof())

	mov	rdx, rbx
	lea	rcx, QWORD PTR p$[rsp]
	call	?accept_element@parser@value@crude_json@@AEAA_NAEAU23@@Z ; crude_json::value::parser::accept_element
	test	al, al
	je	SHORT $LN23@parse

; 819  :         return m_Cursor == m_End;

	mov	rax, QWORD PTR p$[rsp+8]
	cmp	QWORD PTR p$[rsp], rax

; 355  :         if (!accept_element(v) || !eof())

	je	SHORT $LN201@parse
$LN23@parse:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR $T2[rsp+32], 6
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 356  :             v = value(type_t::discarded);

	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rbx
	call	??4value@crude_json@@QEAAAEAU01@$$QEAU01@@Z ; crude_json::value::operator=
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 191  :         switch (type)

	mov	ecx, DWORD PTR $T2[rsp+32]
	sub	ecx, 1
	je	SHORT $LN195@parse
	sub	ecx, 1
	je	SHORT $LN196@parse
	cmp	ecx, 1
	jne	SHORT $LN201@parse
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T2[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 195  :             case type_t::string: string_ptr(storage)->~string(); break;

	jmp	SHORT $LN201@parse
$LN196@parse:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR $T2[rsp]
	call	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 194  :             case type_t::array:   array_ptr(storage)->~array();  break;

	jmp	SHORT $LN201@parse
$LN195@parse:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR $T2[rsp]
	mov	r8, QWORD PTR [r8+8]
	lea	rdx, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, QWORD PTR $T2[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN201@parse:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp

; 358  :         if (previous_locale && strcmp(previous_locale, "C") != 0)

	test	rdi, rdi
	je	SHORT $LN275@parse
	cmp	BYTE PTR [rdi], 67			; 00000043H
	jne	SHORT $LN274@parse
	cmp	BYTE PTR [rdi+1], 0
	je	SHORT $LN275@parse
$LN274@parse:

; 359  :             std::setlocale(LC_NUMERIC, previous_locale);

	mov	rdx, rdi
	mov	ecx, 4
	call	QWORD PTR __imp_setlocale
	npad	1
$LN275@parse:

; 828  :     auto p = parser(data.c_str(), data.c_str() + data.size());
; 829  : 
; 830  :     auto v = p.parse();
; 831  : 
; 832  :     return v;
; 833  : }

	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+136]
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; crude_json::value::parse
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 80
p$ = 88
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
data$ = 136
?dtor$1@?0??parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `crude_json::value::parse'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN27@dtor$1
	and	DWORD PTR $T1[rbp], -3
	mov	rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
	call	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
$LN27@dtor$1:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `crude_json::value::parse'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 80
p$ = 88
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
data$ = 136
?dtor$2@?0??parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `crude_json::value::parse'::`1'::dtor$2
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1value@crude_json@@QEAA@XZ		; crude_json::value::~value
?dtor$2@?0??parse@value@crude_json@@SA?AU12@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `crude_json::value::parse'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ??R<lambda_1>@?1??load@value@crude_json@@SA?AU?$pair@Uvalue@crude_json@@_N@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z@QEBA@PEAU_iobuf@@@Z
_TEXT	SEGMENT
this$dead$ = 8
file$ = 16
??R<lambda_1>@?1??load@value@crude_json@@SA?AU?$pair@Uvalue@crude_json@@_N@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z@QEBA@PEAU_iobuf@@@Z PROC ; `crude_json::value::load'::`2'::<lambda_1>::operator(), COMDAT

; 839  :     std::unique_ptr<FILE, void(*)(FILE*)> file{nullptr, [](FILE* file) { if (file) fclose(file); }};

	test	rdx, rdx
	je	SHORT $LN2@operator
	mov	rcx, rdx
	rex_jmp	QWORD PTR __imp_fclose
$LN2@operator:
	ret	0
??R<lambda_1>@?1??load@value@crude_json@@SA?AU?$pair@Uvalue@crude_json@@_N@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@5@@Z@QEBA@PEAU_iobuf@@@Z ENDP ; `crude_json::value::load'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?<lambda_invoker_cdecl>@<lambda_1>@?1??load@value@crude_json@@SA?AU?$pair@Uvalue@crude_json@@_N@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@6@@Z@SA@PEAU_iobuf@@@Z
_TEXT	SEGMENT
file$ = 8
?<lambda_invoker_cdecl>@<lambda_1>@?1??load@value@crude_json@@SA?AU?$pair@Uvalue@crude_json@@_N@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@6@@Z@SA@PEAU_iobuf@@@Z PROC ; `crude_json::value::load'::`2'::<lambda_1>::<lambda_invoker_cdecl>, COMDAT

; 839  :     std::unique_ptr<FILE, void(*)(FILE*)> file{nullptr, [](FILE* file) { if (file) fclose(file); }};

	test	rcx, rcx
	je	SHORT $LN4@
	rex_jmp	QWORD PTR __imp_fclose
$LN4@:
	ret	0
?<lambda_invoker_cdecl>@<lambda_1>@?1??load@value@crude_json@@SA?AU?$pair@Uvalue@crude_json@@_N@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@6@@Z@SA@PEAU_iobuf@@@Z ENDP ; `crude_json::value::load'::`2'::<lambda_1>::<lambda_invoker_cdecl>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ??R<lambda_1>@?1??save@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z@QEBA@PEAU_iobuf@@@Z
_TEXT	SEGMENT
this$dead$ = 8
file$ = 16
??R<lambda_1>@?1??save@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z@QEBA@PEAU_iobuf@@@Z PROC ; `crude_json::value::save'::`2'::<lambda_1>::operator(), COMDAT

; 867  :     std::unique_ptr<FILE, void(*)(FILE*)> file{nullptr, [](FILE* file) { if (file) fclose(file); }};

	test	rdx, rdx
	je	SHORT $LN2@operator
	mov	rcx, rdx
	rex_jmp	QWORD PTR __imp_fclose
$LN2@operator:
	ret	0
??R<lambda_1>@?1??save@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z@QEBA@PEAU_iobuf@@@Z ENDP ; `crude_json::value::save'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.cpp
;	COMDAT ?<lambda_invoker_cdecl>@<lambda_1>@?1??save@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z@SA@PEAU_iobuf@@@Z
_TEXT	SEGMENT
file$ = 8
?<lambda_invoker_cdecl>@<lambda_1>@?1??save@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z@SA@PEAU_iobuf@@@Z PROC ; `crude_json::value::save'::`2'::<lambda_1>::<lambda_invoker_cdecl>, COMDAT

; 867  :     std::unique_ptr<FILE, void(*)(FILE*)> file{nullptr, [](FILE* file) { if (file) fclose(file); }};

	test	rcx, rcx
	je	SHORT $LN4@
	rex_jmp	QWORD PTR __imp_fclose
$LN4@:
	ret	0
?<lambda_invoker_cdecl>@<lambda_1>@?1??save@value@crude_json@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HD@Z@SA@PEAU_iobuf@@@Z ENDP ; `crude_json::value::save'::`2'::<lambda_1>::<lambda_invoker_cdecl>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::operator==, COMDAT

; 229  : #if _ITERATOR_DEBUG_LEVEL == 2
; 230  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "map/set iterators incompatible");
; 231  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 232  : 
; 233  :         return this->_Ptr == _Right._Ptr;

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	sete	al

; 234  :     }

	ret	0
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@XZ
_TEXT	SEGMENT
this$ = 8
??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::operator->, COMDAT

; 186  :         return this->_Ptr->_Myval;

	mov	rax, QWORD PTR [rcx]
	add	rax, 32					; 00000020H

; 190  :         return pointer_traits<pointer>::pointer_to(**this);
; 191  :     }

	ret	0
??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEBAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??8?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NU_Default_sentinel@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??8?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NU_Default_sentinel@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::operator==, COMDAT

; 107  :         return !!_Ptr->_Isnil; // TRANSITION, avoid warning C4800:

	mov	rax, QWORD PTR [rcx]
	cmp	BYTE PTR [rax+25], 0
	setne	al

; 108  :                                // "Implicit conversion from 'char' to bool. Possible information loss" (/Wall)
; 109  :     }

	ret	0
??8?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NU_Default_sentinel@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::operator++, COMDAT

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

	mov	rdx, QWORD PTR [rcx]
	mov	r8, rcx
	mov	r9, QWORD PTR [rdx+16]
	cmp	BYTE PTR [r9+25], 0
	je	SHORT $LN4@operator

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN3@operator
	npad	5
$LL2@operator:
	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN3@operator

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

	mov	QWORD PTR [rcx], rax
	mov	rdx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL2@operator
$LN3@operator:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())
; 58   :         } else {
; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 60   :         }
; 61   : 
; 62   :         return *this;

	mov	QWORD PTR [rcx], rax

; 63   :     }

	mov	rax, r8
	ret	0
$LN4@operator:

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [r9]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN9@operator
	npad	10
$LL8@operator:
	mov	rax, QWORD PTR [rcx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	r9, rcx
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL8@operator
$LN9@operator:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())
; 58   :         } else {
; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 60   :         }
; 61   : 
; 62   :         return *this;

	mov	QWORD PTR [r8], r9

; 63   :     }

	mov	rax, r8
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::operator*, COMDAT

; 43   :         return _Ptr->_Myval;

	mov	rax, QWORD PTR [rcx]
	add	rax, 32					; 00000020H

; 44   :     }

	ret	0
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
;	COMDAT ?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEGBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEGBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT

; 744  :     {

$LN7:
	push	rbx
	sub	rsp, 48					; 00000030H

; 745  :         return _Stringbuffer.str();

	add	rcx, 8
	mov	rbx, rdx
	call	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEGBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	mov	rax, rbx

; 746  :     }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEGBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
;	COMDAT ??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 733  :     ~basic_ostringstream() noexcept override {}

$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR [rcx-136]
	mov	rdi, rcx
	movsxd	rdx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rdx+rcx-136], rax
	mov	rax, QWORD PTR [rcx-136]
	movsxd	rdx, DWORD PTR [rax+4]

; 109  :     ~basic_stringbuf() noexcept override {

	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@

; 733  :     ~basic_ostringstream() noexcept override {}

	lea	r8d, DWORD PTR [rdx-136]
	mov	DWORD PTR [rdx+rcx-140], r8d

; 109  :     ~basic_stringbuf() noexcept override {

	mov	QWORD PTR [rcx-128], rax

; 110  :         _Tidy();

	add	rcx, -128				; ffffffffffffff80H
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 111  :     }

	lea	rcx, QWORD PTR [rdi-128]
	call	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ

; 733  :     ~basic_ostringstream() noexcept override {}

	lea	rcx, QWORD PTR [rdi-120]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\sstream
;	COMDAT ??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
$initVBases$dead$ = 56
$T1 = 56
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 678  :     basic_ostringstream() : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(ios_base::out) {}

$LN19:
	mov	QWORD PTR [rsp+24], rbx
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	DWORD PTR $T1[rsp], 0
	lea	rax, OFFSET FLAT:??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
	mov	QWORD PTR [rcx], rax
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	mov	DWORD PTR $T1[rsp], 1
	xor	r9d, r9d
	xor	r8d, r8d
	lea	rdx, QWORD PTR [rdi+8]
	mov	rcx, rdi
	call	QWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	npad	1
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rcx+rdi], rax
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-136]
	mov	DWORD PTR [rcx+rdi-4], edx

; 37   :     explicit basic_stringbuf(ios_base::openmode _Mode) : _Seekhigh(nullptr), _Mystate(_Getstate(_Mode)), _Al() {}

	lea	rcx, QWORD PTR [rdi+8]
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rdi+8], rax
	mov	QWORD PTR [rdi+112], 0
	mov	DWORD PTR [rdi+120], 4

; 678  :     basic_ostringstream() : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(ios_base::out) {}

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
$initVBases$dead$ = 56
$T1 = 56
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
$initVBases$dead$ = 56
$T1 = 56
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?size@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBA_KXZ PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::size, COMDAT

; 1868 :         auto& _My_data = _Mypair._Myval2;
; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+8]
	sub	rax, QWORD PTR [rcx]
	mov	rcx, -3689348814741910323		; cccccccccccccccdH
	sar	rax, 3
	imul	rax, rcx

; 1870 :     }

	ret	0
?size@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Unchecked_end@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBAPEBUvalue@crude_json@@XZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked_end@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBAPEBUvalue@crude_json@@XZ PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Unchecked_end, COMDAT

; 1859 :         return _Mypair._Myval2._Mylast;

	mov	rax, QWORD PTR [rcx+8]

; 1860 :     }

	ret	0
?_Unchecked_end@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBAPEBUvalue@crude_json@@XZ ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBAPEBUvalue@crude_json@@XZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked_begin@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBAPEBUvalue@crude_json@@XZ PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Unchecked_begin, COMDAT

; 1851 :         return _Mypair._Myval2._Myfirst;

	mov	rax, QWORD PTR [rcx]

; 1852 :     }

	ret	0
?_Unchecked_begin@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBAPEBUvalue@crude_json@@XZ ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?push_back@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::push_back, COMDAT

; 876  :     _CONSTEXPR20 void push_back(_Ty&& _Val) {

$LN14:
	push	rbx
	sub	rsp, 32					; 00000020H

; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rax, QWORD PTR [rcx+8]

; 876  :     _CONSTEXPR20 void push_back(_Ty&& _Val) {

	mov	rbx, rcx

; 781  :         if (_Mylast != _My_data._Myend) {

	cmp	rax, QWORD PTR [rcx+16]
	je	SHORT $LN4@push_back
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, rax
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 806  :         ++_Mylast;

	add	QWORD PTR [rbx+8], 40			; 00000028H

; 877  :         // insert by moving into element at end, provide strong guarantee
; 878  :         _Emplace_one_at_back(_STD move(_Val));
; 879  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN4@push_back:

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	mov	r8, rdx
	mov	rdx, rax

; 877  :         // insert by moving into element at end, provide strong guarantee
; 878  :         _Emplace_one_at_back(_STD move(_Val));
; 879  :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	jmp	??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_reallocate<crude_json::value>
?push_back@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::~vector<crude_json::value,std::allocator<crude_json::value> >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
??1?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::~vector<crude_json::value,std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rdx]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	r10d, r10d
	mov	r9, QWORD PTR [rdx+16]

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rdx+8]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdx+16], r10
	mov	QWORD PTR [rdx+8], r10
	mov	QWORD PTR [rdx], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx], rax

; 701  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 702  :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);
; 703  :     }

	mov	rax, rcx

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx+8], r8
	mov	QWORD PTR [rcx+16], r9

; 701  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 702  :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);
; 703  :     }

	ret	0
??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Guard$1 = 48
this$ = 48
_Right$ = 56
??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >, COMDAT

; 683  :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

$LN25:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx
	mov	rdi, rcx

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 684  :         const auto& _Right_data = _Right._Mypair._Myval2;
; 685  :         const auto _Count       = static_cast<size_type>(_Right_data._Mylast - _Right_data._Myfirst);

	mov	rbx, QWORD PTR [rdx+8]
	sub	rbx, QWORD PTR [rdx]
	sar	rbx, 3
	mov	rax, -3689348814741910323		; cccccccccccccccdH
	imul	rbx, rax

; 2065 :         if (_Count != 0) {

	test	rbx, rbx
	je	SHORT $LN18@vector

; 2006 :         if (_Newcapacity > max_size()) {

	mov	rax, 461168601842738790			; 0666666666666666H
	cmp	rbx, rax
	ja	SHORT $LN23@vector

; 1989 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	rdx, rbx
	call	?allocate@?$allocator@Uvalue@crude_json@@@std@@QEAAPEAUvalue@crude_json@@_K@Z ; std::allocator<crude_json::value>::allocate

; 1990 :         _Myfirst           = _Newvec;

	mov	QWORD PTR [rdi], rax

; 1991 :         _Mylast            = _Newvec;

	mov	QWORD PTR [rdi+8], rax

; 1992 :         _Myend             = _Newvec + _Newcapacity;

	lea	rcx, QWORD PTR [rbx+rbx*4]
	lea	rdx, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR [rdi+16], rdx

; 2067 :             _Tidy_guard<vector> _Guard{this};

	mov	QWORD PTR _Guard$1[rsp], rdi

; 2068 :             if constexpr (sizeof...(_Val) == 0) {
; 2069 :                 _My_data._Mylast = _Uninitialized_value_construct_n(_My_data._Myfirst, _Count, _Al);
; 2070 :             } else if constexpr (sizeof...(_Val) == 1) {
; 2071 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Valty..., const _Ty&>);
; 2072 :                 _My_data._Mylast = _Uninitialized_fill_n(_My_data._Myfirst, _Count, _Val..., _Al);
; 2073 :             } else if constexpr (sizeof...(_Val) == 2) {
; 2074 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

	mov	r9, rdi
	mov	r8, rax
	mov	rdx, QWORD PTR [rsi+8]
	mov	rcx, QWORD PTR [rsi]
	call	??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z ; std::_Uninitialized_copy<crude_json::value *,crude_json::value *,std::allocator<crude_json::value> >
	mov	QWORD PTR [rdi+8], rax
$LN18@vector:

; 686  :         _Construct_n(_Count, _Right_data._Myfirst, _Right_data._Mylast);
; 687  :     }

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN23@vector:

; 2007 :             _Xlength();

	call	?_Xlength@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@CAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Xlength
	int	3
$LN21@vector:
??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Guard$1 = 48
this$ = 48
_Right$ = 56
?dtor$0@?0???0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Guard$1[rdx]
	jmp	??1?$_Tidy_guard@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<crude_json::value,std::allocator<crude_json::value> > >::~_Tidy_guard<std::vector<crude_json::value,std::allocator<crude_json::value> > >
?dtor$0@?0???0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax

; 611  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 612  :     }

	mov	rax, rcx
	ret	0
??0?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::vector<crude_json::value,std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
$T5 = 72
this$ = 112
_Keyval$ = 120
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::operator[], COMDAT

; 346  :     mapped_type& operator[](const key_type& _Keyval) {

$LN377:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rsi, rdx
	mov	r14, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbp, QWORD PTR [rcx]
	mov	rbx, QWORD PTR [rbp+8]
	mov	QWORD PTR _Loc$1[rsp], rbx
	xor	r15d, r15d
	mov	DWORD PTR _Loc$1[rsp+8], r15d
	mov	rdi, rbp

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r15b
	jne	SHORT $LN9@operator
	npad	5
$LL8@operator:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR _Loc$1[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN10@operator

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR _Loc$1[rsp+8], r15d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN11@operator
$LN10@operator:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR _Loc$1[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN11@operator:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r15b
	je	SHORT $LL8@operator
$LN9@operator:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r15b
	jne	SHORT $LN4@operator
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	jns	SHORT $LN3@operator
$LN4@operator:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 177372539170284150			; 0276276276276276H
	cmp	QWORD PTR [r14+8], rax
	je	SHORT $LN375@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T4[rsp], r14

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T4[rsp+8], r15

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T4[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, rsi
	lea	rcx, QWORD PTR [rax+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR [rdi+96], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 212  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$1[rsp]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	mov	r8, rdi
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, r14
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Insert_node
	mov	rdi, rax
$LN3@operator:

; 347  :         return _Try_emplace(_Keyval).first->_Myval.second;

	lea	rax, QWORD PTR [rdi+64]

; 348  :     }

	lea	r11, QWORD PTR [rsp+80]
	mov	rbx, QWORD PTR [r11+40]
	mov	rbp, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
	ret	0
$LN375@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN373@operator:
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
$T5 = 72
this$ = 112
_Keyval$ = 120
?dtor$2@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::operator[]'::`1'::dtor$2
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$2@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::operator[]'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
$T5 = 72
this$ = 112
_Keyval$ = 120
?dtor$1@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::operator[]'::`1'::dtor$1
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$1@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::operator[]'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
$T5 = 72
this$ = 112
_Keyval$ = 120
?dtor$4@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::operator[]'::`1'::dtor$4
	mov	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAAEAUvalue@crude_json@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::operator[]'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >, COMDAT

; 166  :     map(map&& _Right) : _Mybase(_STD move(_Right)) {}

$LN56:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 166  :     map(map&& _Right) : _Mybase(_STD move(_Right)) {}

	mov	rdi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 166  :     map(map&& _Right) : _Mybase(_STD move(_Right)) {}

	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+104]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rdi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

	mov	rcx, QWORD PTR [rbx]
	mov	QWORD PTR [rdi], rcx

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rbx], rax

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rdi+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 166  :     map(map&& _Right) : _Mybase(_STD move(_Right)) {}

	mov	rax, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rbx+8], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 166  :     map(map&& _Right) : _Mybase(_STD move(_Right)) {}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Sentinel$1 = 32
this$GSCopy$ = 32
this$ = 64
_Right$ = 72
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >, COMDAT

; 111  :     map(const map& _Right) : _Mybase(_Right, _Alnode_traits::select_on_container_copy_construction(_Right._Getal())) {}

$LN122:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, rdx
	mov	rdi, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax

; 767  :     _Tree_head_scoped_ptr(_Alnode& _Al_, _Scary_val& _Mycont_) : _Al(_Al_), _Mycont(_STD addressof(_Mycont_)) {

	mov	QWORD PTR _Sentinel$1[rsp], rcx
	mov	QWORD PTR _Sentinel$1[rsp+8], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+104]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 768  :         _Mycont->_Myhead = _Alnode::value_type::_Buyheadnode(_Al);

	mov	QWORD PTR [rdi], rax

; 1640 :         _Scary->_Myhead->_Parent = _Copy_nodes<_Strat>(_Right_scary->_Myhead->_Parent, _Scary->_Myhead);

	mov	rdx, QWORD PTR [rbx]
	mov	r8, rax
	mov	rdx, QWORD PTR [rdx+8]
	mov	rcx, rdi
	call	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>
	mov	rcx, rax
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rax+8], rcx

; 1641 :         _Scary->_Mysize          = _Right_scary->_Mysize;

	mov	rax, QWORD PTR [rbx+8]
	mov	QWORD PTR [rdi+8], rax

; 1642 :         if (!_Scary->_Myhead->_Parent->_Isnil) { // nonempty tree, look for new smallest and largest

	mov	r8, QWORD PTR [rdi]
	mov	rdx, QWORD PTR [r8+8]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN48@map

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [rdx]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN53@map
	npad	2
$LL52@map:

; 454  :             _Pnode = _Pnode->_Left;

	mov	rdx, rcx

; 447  :         }
; 448  : 
; 449  :         return _Pnode;
; 450  :     }
; 451  : 
; 452  :     static _Nodeptr _Min(_Nodeptr _Pnode) noexcept { // return leftmost node in subtree at _Pnode
; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rax, QWORD PTR [rcx]
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL52@map
$LN53@map:

; 1643 :             _Scary->_Myhead->_Left  = _Scary_val::_Min(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [r8], rdx

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	rdx, QWORD PTR [rdi]
	mov	rax, QWORD PTR [rdx+8]

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rcx, QWORD PTR [rax+16]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN57@map
$LL56@map:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rax, rcx

; 438  : 
; 439  :     enum _Redbl { // colors for link to parent
; 440  :         _Red,
; 441  :         _Black
; 442  :     };
; 443  : 
; 444  :     static _Nodeptr _Max(_Nodeptr _Pnode) noexcept { // return rightmost node in subtree at _Pnode
; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rcx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL56@map
$LN57@map:

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [rdx+16], rax

; 1645 :         } else { // empty tree, just tidy head pointers

	jmp	SHORT $LN119@map
$LN48@map:

; 1646 :             _Scary->_Myhead->_Left  = _Scary->_Myhead;

	mov	QWORD PTR [r8], r8

; 1647 :             _Scary->_Myhead->_Right = _Scary->_Myhead;

	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rax+16], rax
$LN119@map:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 111  :     map(const map& _Right) : _Mybase(_Right, _Alnode_traits::select_on_container_copy_construction(_Right._Getal())) {}

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Sentinel$1 = 32
this$GSCopy$ = 32
this$ = 64
_Right$ = 72
?dtor$1@?0???0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >'::`1'::dtor$1
	lea	rcx, QWORD PTR _Sentinel$1[rdx]
	jmp	??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
?dtor$1@?0???0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >, COMDAT

; 107  :     map() : _Mybase(key_compare()) {}

$LN50:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 107  :     map() : _Mybase(key_compare()) {}

	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+104]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 107  :     map() : _Mybase(key_compare()) {}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAA@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Keyval$ = 64
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::find, COMDAT

; 1381 :     _NODISCARD const_iterator find(const key_type& _Keyval) const {

$LN39:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	r14, QWORD PTR [rcx]

; 1381 :     _NODISCARD const_iterator find(const key_type& _Keyval) const {

	mov	rbp, r8
	mov	rsi, rdx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rdi, r14
	mov	rbx, QWORD PTR [r14+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN8@find
$LL7@find:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN9@find

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN10@find
$LN9@find:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN10@find:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL7@find
$LN8@find:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN4@find
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	js	SHORT $LN4@find

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rsi], rdi

; 1370 :             return _Loc._Bound;

	jmp	SHORT $LN36@find
$LN4@find:

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rsi], r14
$LN36@find:

; 1382 :         return const_iterator(_Find(_Keyval), _Get_scary());
; 1383 :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::find
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Unchecked_end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AU_Default_sentinel@2@XZ
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
?_Unchecked_end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AU_Default_sentinel@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Unchecked_end, COMDAT

; 1154 :         return {};

	xor	eax, eax
	mov	BYTE PTR [rdx], al
	mov	rax, rdx

; 1155 :     }

	ret	0
?_Unchecked_end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AU_Default_sentinel@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Unchecked_begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?_Unchecked_begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Unchecked_begin, COMDAT

; 1150 :         return _Unchecked_const_iterator(_Get_scary()->_Myhead->_Left, nullptr);

	mov	rax, QWORD PTR [rcx]

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rcx, QWORD PTR [rax]

; 1150 :         return _Unchecked_const_iterator(_Get_scary()->_Myhead->_Left, nullptr);

	mov	rax, rdx

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rdx], rcx

; 1151 :     }

	ret	0
?_Unchecked_begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::end, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 1141 :         const auto _Scary = _Get_scary();
; 1142 :         return const_iterator(_Scary->_Myhead, _Scary);

	mov	rax, rdx

; 1143 :     }

	ret	0
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >, COMDAT

; 1080 :     ~_Tree() noexcept {

$LN52:
	push	rbx
	sub	rsp, 32					; 00000020H

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx

; 1080 :     ~_Tree() noexcept {

	mov	rbx, rcx

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 104				; 00000068H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1087 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
_TEXT	SEGMENT
_Matches$1 = 32
__$ArrayPad$ = 288
this$ = 320
_Ptr$dead$ = 328
_Off$dead$ = 336
?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_of, COMDAT

; 4431 :     /* strengthened */ {

$LN57:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 304				; 00000130H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16

; 4431 :     /* strengthened */ {

	mov	rbx, rcx

; 4432 :         // look for one of [_Ptr, <null>) at or after _Off
; 4433 :         return static_cast<size_type>(_Traits_find_first_of<_Traits>(

	mov	rdi, QWORD PTR [rcx+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN6@find_first

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rcx]
$LN6@find_first:

; 719  :     if (_Needle_size != 0 && _Start_at < _Hay_size) { // room for match, look for it

	test	rdi, rdi
	je	SHORT $LN12@find_first
	xor	edx, edx
	lea	rcx, QWORD PTR _Matches$1[rsp]
	mov	r8d, 256				; 00000100H
	call	memset

; 720  :         if constexpr (_Special) {
; 721  :             _String_bitmap<typename _Traits::char_type> _Matches;
; 722  :             if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the

	lea	rcx, OFFSET FLAT:??_C@_07PBJOHOHP@?$CC?2?1?$AI?$AM?6?$AN@
	lea	rdx, OFFSET FLAT:??_C@_07PBJOHOHP@?$CC?2?1?$AI?$AM?6?$AN@+7
	npad	11
$LL23@find_first:

; 670  :             _Matches[static_cast<unsigned char>(*_First)] = true;

	movzx	eax, BYTE PTR [rcx]
	inc	rcx
	mov	BYTE PTR _Matches$1[rsp+rax], 1
	cmp	rcx, rdx
	jne	SHORT $LL23@find_first

; 728  :             for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

	lea	rdx, QWORD PTR [rdi+rbx]
	mov	rax, rbx
	cmp	rbx, rdx
	jae	SHORT $LN12@find_first
	npad	4
$LL13@find_first:

; 677  :         return _Matches[static_cast<unsigned char>(_Ch)];

	movzx	ecx, BYTE PTR [rax]

; 729  :                 if (_Matches._Match(*_Match_try)) {

	cmp	BYTE PTR _Matches$1[rsp+rcx], 0
	jne	SHORT $LN40@find_first

; 723  :                                                                     // bitmap, fall back to the serial algorithm
; 724  :                 return _Traits_find_first_of<_Traits, false>(_Haystack, _Hay_size, _Start_at, _Needle, _Needle_size);
; 725  :             }
; 726  : 
; 727  :             const auto _End = _Haystack + _Hay_size;
; 728  :             for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

	inc	rax
	cmp	rax, rdx
	jb	SHORT $LL13@find_first
$LN12@find_first:

; 4432 :         // look for one of [_Ptr, <null>) at or after _Off
; 4433 :         return static_cast<size_type>(_Traits_find_first_of<_Traits>(

	mov	rax, -1
$LN10@find_first:

; 4434 :             _Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off, _Ptr, _Traits::length(_Ptr)));
; 4435 :     }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+320]
	add	rsp, 304				; 00000130H
	pop	rdi
	ret	0
$LN40@find_first:

; 730  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match

	sub	rax, rbx
	jmp	SHORT $LN10@find_first
?find_first_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_first_of
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ch$ = 56
_Off$ = 64
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT

; 4361 :     _NODISCARD _CONSTEXPR20 size_type find(const _Elem _Ch, const size_type _Off = 0) const noexcept {

$LN19:
	push	rbx
	sub	rsp, 32					; 00000020H

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16

; 4361 :     _NODISCARD _CONSTEXPR20 size_type find(const _Elem _Ch, const size_type _Off = 0) const noexcept {

	mov	rax, r8

; 4362 :         // look for _Ch at or after _Off
; 4363 :         return static_cast<size_type>(

	mov	r8, QWORD PTR [rcx+16]
	mov	rbx, rcx

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN4@find

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rcx]
$LN4@find:

; 610  :     if (_Start_at < _Hay_size) {

	cmp	rax, r8
	jae	SHORT $LN10@find

; 611  :         const auto _Found_at = _Traits::find(_Haystack + _Start_at, _Hay_size - _Start_at, _Ch);

	sub	r8, rax

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	movsx	edx, dl

; 611  :         const auto _Found_at = _Traits::find(_Haystack + _Start_at, _Hay_size - _Start_at, _Ch);

	lea	rcx, QWORD PTR [rbx+rax]

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	call	memchr

; 612  :         if (_Found_at) {

	test	rax, rax
	je	SHORT $LN10@find

; 613  :             return static_cast<size_t>(_Found_at - _Haystack);

	sub	rax, rbx

; 4364 :             _Traits_find_ch<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off, _Ch));
; 4365 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN10@find:

; 4362 :         // look for _Ch at or after _Off
; 4363 :         return static_cast<size_type>(

	mov	rax, -1

; 4364 :             _Traits_find_ch<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off, _Ch));
; 4365 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rdi, QWORD PTR [rcx-136]
	mov	ebx, edx
	mov	rcx, rdi
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	test	bl, 1
	je	SHORT $LN4@scalar
	mov	edx, 232				; 000000e8H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__param0$ = 16
__param1$dead$ = 24
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__param0$ = 16
__param1$dead$ = 24
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ?pointer_to@?$pointer_traits@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@SAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@AEBU32@@Z
_TEXT	SEGMENT
_Val$ = 8
?pointer_to@?$pointer_traits@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@SAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@AEBU32@@Z PROC ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> const *>::pointer_to, COMDAT

; 306  :         return _STD addressof(_Val);

	mov	rax, rcx

; 307  :     }

	ret	0
?pointer_to@?$pointer_traits@PEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@SAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@AEBU32@@Z ENDP ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> const *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::operator*, COMDAT

; 180  : #if _ITERATOR_DEBUG_LEVEL == 2
; 181  :         const auto _Mycont = static_cast<const _Mytree*>(this->_Getcont());
; 182  :         _STL_ASSERT(_Mycont, "cannot dereference value-initialized map/set iterator");
; 183  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot dereference end map/set iterator");
; 184  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 185  : 
; 186  :         return this->_Ptr->_Myval;

	mov	rax, QWORD PTR [rcx]
	add	rax, 32					; 00000020H

; 187  :     }

	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Pnode$ = 16
_Plist$dead$ = 24
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rcx], rdx

; 39   :         this->_Adopt(_Plist);
; 40   :     }

	mov	rax, rcx
	ret	0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBAAEBV?$allocator@Uvalue@crude_json@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBAAEBV?$allocator@Uvalue@crude_json@@@2@XZ PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Getal, COMDAT

; 2185 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2186 :     }

	ret	0
?_Getal@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBAAEBV?$allocator@Uvalue@crude_json@@@2@XZ ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAV?$allocator@Uvalue@crude_json@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAV?$allocator@Uvalue@crude_json@@@2@XZ PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAV?$allocator@Uvalue@crude_json@@@2@XZ ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Orphan_range@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBAXPEAUvalue@crude_json@@0@Z
_TEXT	SEGMENT
this$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
?_Orphan_range@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBAXPEAUvalue@crude_json@@0@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Orphan_range, COMDAT

; 2177 :     _CONSTEXPR20 void _Orphan_range(pointer, pointer) const {}

	ret	0
?_Orphan_range@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBAXPEAUvalue@crude_json@@0@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Xlength@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@CAXXZ PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Xlength, COMDAT

; 2137 :     [[noreturn]] static void _Xlength() {

$LN4:
	sub	rsp, 40					; 00000028H

; 2138 :         _Xlength_error("vector too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlength:
?_Xlength@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@CAXXZ ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN179:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	test	rbx, rbx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rsi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rsi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rbx+32]
	mov	rcx, rbx
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 40					; 00000028H
	cmp	rbx, rsi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rdi]
	mov	rax, QWORD PTR [rdi+16]
	sub	rax, rcx
	sar	rax, 3
	mov	rdx, -3689348814741910323		; cccccccccccccccdH
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN168@Tidy

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN165@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN168@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rdi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rdi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rdi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN165@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN176@Tidy:
?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z
_TEXT	SEGMENT
this$ = 64
_Newvec$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Change_array, COMDAT

; 2013 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN192:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
	mov	r15, r9
	mov	r12, r8
	mov	r14, rdx
	mov	rsi, rcx

; 2014 :         // orphan all iterators, discard old array, acquire new array
; 2015 :         auto& _Al         = _Getal();
; 2016 :         auto& _My_data    = _Mypair._Myval2;
; 2017 :         pointer& _Myfirst = _My_data._Myfirst;
; 2018 :         pointer& _Mylast  = _My_data._Mylast;
; 2019 :         pointer& _Myend   = _My_data._Myend;
; 2020 : 
; 2021 :         _My_data._Orphan_all();
; 2022 : 
; 2023 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	test	rbx, rbx
	je	SHORT $LN169@Change_arr

; 2024 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rdi
	je	SHORT $LN6@Change_arr
	npad	10
$LL7@Change_arr:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rbx+32]
	mov	rcx, rbx
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 40					; 00000028H
	cmp	rbx, rdi
	jne	SHORT $LL7@Change_arr
$LN6@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2026 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rsi]
	mov	rax, QWORD PTR [rsi+16]
	sub	rax, rcx
	sar	rax, 3
	mov	rdx, -3689348814741910323		; cccccccccccccccdH
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN181@Change_arr

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN178@Change_arr

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN181@Change_arr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN169@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2029 :         _Myfirst = _Newvec;

	mov	QWORD PTR [rsi], r14

; 2030 :         _Mylast  = _Newvec + _Newsize;

	lea	rax, QWORD PTR [r12+r12*4]
	lea	rcx, QWORD PTR [r14+rax*8]
	mov	QWORD PTR [rsi+8], rcx

; 2031 :         _Myend   = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [r15+r15*4]
	lea	rcx, QWORD PTR [r14+rax*8]
	mov	QWORD PTR [rsi+16], rcx

; 2033 :     }

	mov	rbx, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+88]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	r12
	ret	0
$LN178@Change_arr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN189@Change_arr:
?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Calculate_growth@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Newsize$ = 16
?_Calculate_growth@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Calculate_growth, COMDAT

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	r8, QWORD PTR [rcx+16]
	mov	rax, -3689348814741910323		; cccccccccccccccdH
	sub	r8, QWORD PTR [rcx]
	sar	r8, 3
	imul	r8, rax

; 1962 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1963 :         const size_type _Oldcapacity = capacity();
; 1964 :         const auto _Max              = max_size();
; 1965 : 
; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rax, 461168601842738790			; 0666666666666666H
	mov	r9, r8
	mov	rcx, rax
	shr	r9, 1
	sub	rcx, r9
	cmp	r8, rcx
	ja	SHORT $LN1@Calculate_

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rax, QWORD PTR [r9+r8]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rax, rdx
	cmovb	rax, rdx
$LN1@Calculate_:

; 1973 :             return _Newsize; // geometric growth would be insufficient
; 1974 :         }
; 1975 : 
; 1976 :         return _Geometric; // geometric growth is sufficient
; 1977 :     }

	ret	0
?_Calculate_growth@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?max_size@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBA_KXZ PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::max_size, COMDAT

; 1873 :         return (_STD min)(

	mov	rax, 461168601842738790			; 0666666666666666H

; 1874 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1875 :     }

	ret	0
?max_size@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SA?AV?$allocator@Uvalue@crude_json@@@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Al$dead$ = 16
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SA?AV?$allocator@Uvalue@crude_json@@@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::select_on_container_copy_construction, COMDAT

; 737  :         return _Al;

	mov	rax, rcx

; 738  :     }

	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SA?AV?$allocator@Uvalue@crude_json@@@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@Uvalue@crude_json@@@std@@QEAAPEAUvalue@crude_json@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@Uvalue@crude_json@@@std@@QEAAPEAUvalue@crude_json@@_K@Z PROC ; std::allocator<crude_json::value>::allocate, COMDAT

; 972  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN32:
	sub	rsp, 40					; 00000028H

; 70   :         if (_Count > _Max_possible) {

	mov	rax, 461168601842738790			; 0666666666666666H
	cmp	rdx, rax
	ja	SHORT $LN28@allocate

; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	lea	rax, QWORD PTR [rdx+rdx*4]
	lea	rcx, QWORD PTR [rax*8]

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN9@allocate

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	SHORT $LN28@allocate

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new
	mov	rcx, rax

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	SHORT $LN18@allocate

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	add	rax, 39					; 00000027H
	and	rax, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rax-8], rcx

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN18@allocate:

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN9@allocate:

; 244  :     if (_Bytes != 0) {

	test	rcx, rcx
	je	SHORT $LN10@allocate

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H

; 87   :         return ::operator new(_Bytes);

	jmp	??2@YAPEAX_K@Z				; operator new
$LN10@allocate:

; 248  :     return nullptr;

	xor	eax, eax

; 973  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 974  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));
; 975  :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN28@allocate:

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	int	3
$LN30@allocate:
?allocate@?$allocator@Uvalue@crude_json@@@std@@QEAAPEAUvalue@crude_json@@_K@Z ENDP ; std::allocator<crude_json::value>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@Uvalue@crude_json@@@std@@QEAAXQEAUvalue@crude_json@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@Uvalue@crude_json@@@std@@QEAAXQEAUvalue@crude_json@@_K@Z PROC ; std::allocator<crude_json::value>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8+r8*4]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@Uvalue@crude_json@@@std@@QEAAXQEAUvalue@crude_json@@_K@Z ENDP ; std::allocator<crude_json::value>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@PEAU32@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@PEAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Min, COMDAT

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rdx, QWORD PTR [rcx]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN9@Min
	npad	7
$LL2@Min:
	mov	rcx, QWORD PTR [rdx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	rax, rdx
	mov	rdx, rcx
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL2@Min

; 458  :     }

	ret	0
$LN9@Min:

; 455  :         }
; 456  : 
; 457  :         return _Pnode;

	mov	rax, rcx

; 458  :     }

	ret	0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@PEAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Min
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Get_scary, COMDAT

; 1973 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	rax, rcx

; 1974 :     }

	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Get_scary, COMDAT

; 1969 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	rax, rcx

; 1970 :     }

	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getal, COMDAT

; 1965 :         return _Mypair._Myval2._Get_first();

	mov	rax, rcx

; 1966 :     }

	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getal, COMDAT

; 1961 :         return _Mypair._Myval2._Get_first();

	mov	rax, rcx

; 1962 :     }

	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >, COMDAT

; 906  :             _One_then_variadic_args_t{}, _STD move(_Right._Getal())) {

$LN52:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax

; 906  :             _One_then_variadic_args_t{}, _STD move(_Right._Getal())) {

	mov	rdi, rcx

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], rax

; 906  :             _One_then_variadic_args_t{}, _STD move(_Right._Getal())) {

	mov	rbx, rdx

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+104]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rdi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

	mov	rcx, QWORD PTR [rbx]
	mov	QWORD PTR [rdi], rcx

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rbx], rax

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rdi+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 909  :     }

	mov	rax, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rbx+8], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 909  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$dead$ = 56
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >, COMDAT

; 882  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t{}, _Parg, _Zero_then_variadic_args_t{}) {

$LN46:
	push	rbx
	sub	rsp, 32					; 00000020H

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax

; 882  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t{}, _Parg, _Zero_then_variadic_args_t{}) {

	mov	rbx, rcx

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+104]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax

; 883  :         _Alloc_sentinel_and_proxy();
; 884  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SA?AV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Al$dead$ = 16
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SA?AV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::select_on_container_copy_construction, COMDAT

; 737  :         return _Al;

	mov	rax, rcx

; 738  :     }

	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SA?AV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Uvalue@crude_json@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Uvalue@crude_json@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Uvalue@crude_json@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Uvalue@crude_json@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Uvalue@crude_json@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Uvalue@crude_json@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?capacity@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBA_KXZ PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::capacity, COMDAT

; 1878 :         auto& _My_data = _Mypair._Myval2;
; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	mov	rcx, -3689348814741910323		; cccccccccccccccdH
	sar	rax, 3
	imul	rax, rcx

; 1880 :     }

	ret	0
?capacity@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SA_KAEBV?$allocator@Uvalue@crude_json@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SA_KAEBV?$allocator@Uvalue@crude_json@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 461168601842738790			; 0666666666666666H

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SA_KAEBV?$allocator@Uvalue@crude_json@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Alloc_sentinel_and_proxy, COMDAT

; 1939 :     void _Alloc_sentinel_and_proxy() {

$LN36:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1940 :         const auto _Scary = _Get_scary();
; 1941 :         auto&& _Alproxy   = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());
; 1942 :         _Container_proxy_ptr<_Alnode> _Proxy(_Alproxy, *_Scary);
; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax

; 1944 :         _Proxy._Release();
; 1945 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Alloc_sentinel_and_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?key_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$dead$ = 8
__$ReturnUdt$ = 16
?key_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::key_comp, COMDAT

; 1211 :         return _Getcomp();

	mov	rax, rdx

; 1212 :     }

	ret	0
?key_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA?AU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::key_comp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Swap_val_excluding_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?_Swap_val_excluding_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@AEAAXAEAV12@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Swap_val_excluding_comp, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
	mov	r8, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx], r8

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	r8, QWORD PTR [rcx+8]

; 100  :     _Left    = _STD move(_Right);

	mov	QWORD PTR [rcx+8], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx+8], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 991  :     }

	ret	0
?_Swap_val_excluding_comp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@AEAAXAEAV12@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Swap_val_excluding_comp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getcomp, COMDAT

; 1957 :         return _Mypair._Get_first();

	mov	rax, rcx

; 1958 :     }

	ret	0
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@std@@YA$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@std@@YA$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@0@AEAV10@@Z PROC ; std::move<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@std@@YA$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@0@AEAV10@@Z ENDP ; std::move<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@YA$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@YA$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@AEAV10@@Z PROC ; std::move<std::vector<crude_json::value,std::allocator<crude_json::value> > &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@YA$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@AEAV10@@Z ENDP ; std::move<std::vector<crude_json::value,std::allocator<crude_json::value> > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAUvalue@crude_json@@@std@@YA$$QEAUvalue@crude_json@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAUvalue@crude_json@@@std@@YA$$QEAUvalue@crude_json@@AEAU12@@Z PROC ; std::move<crude_json::value &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAUvalue@crude_json@@@std@@YA$$QEAUvalue@crude_json@@AEAU12@@Z ENDP ; std::move<crude_json::value &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@std@@YA$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@std@@YA$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@0@AEAV10@@Z PROC ; std::forward<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@@std@@YA$$QEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@0@AEAV10@@Z ENDP ; std::forward<std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@YA$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@YA$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::vector<crude_json::value,std::allocator<crude_json::value> > >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@YA$$QEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::vector<crude_json::value,std::allocator<crude_json::value> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??$swap@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@YAXAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$swap@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@YAXAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@0@0@Z PROC ; std::swap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1487 :         if (this != _STD addressof(_Right)) {

	cmp	rcx, rdx
	je	SHORT $LN6@swap
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
	mov	r8, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx], r8

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	r8, QWORD PTR [rcx+8]

; 100  :     _Left    = _STD move(_Right);

	mov	QWORD PTR [rcx+8], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx+8], r8
$LN6@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 447  : }

	ret	0
??$swap@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@YAXAEAV?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@0@0@Z ENDP ; std::swap<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$swap@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$swap@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@0@Z PROC ; std::swap<crude_json::value,std::allocator<crude_json::value> >, COMDAT

; 2353 : _CONSTEXPR20 void swap(vector<_Ty, _Alloc>& _Left, vector<_Ty, _Alloc>& _Right) noexcept /* strengthened */ {

	mov	r9, rcx

; 1780 :         if (this != _STD addressof(_Right)) {

	cmp	rcx, rdx
	je	SHORT $LN13@swap
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	r8, QWORD PTR [rcx]

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx], r8

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	r8, QWORD PTR [rcx+8]

; 100  :     _Left    = _STD move(_Right);

	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx+8], r8

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	rcx, QWORD PTR [rcx+16]

; 100  :     _Left    = _STD move(_Right);

	mov	QWORD PTR [r9+16], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx+16], rcx
$LN13@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2355 : }

	ret	0
??$swap@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXAEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@0@Z ENDP ; std::swap<crude_json::value,std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$swap@_N$0A@@std@@YAXAEA_N0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$swap@_N$0A@@std@@YAXAEA_N0@Z PROC			; std::swap<bool,0>, COMDAT

; 99   :     _Ty _Tmp = _STD move(_Left);
; 100  :     _Left    = _STD move(_Right);

	movzx	eax, BYTE PTR [rdx]
	movzx	r8d, BYTE PTR [rcx]
	mov	BYTE PTR [rcx], al

; 101  :     _Right   = _STD move(_Tmp);

	mov	BYTE PTR [rdx], r8b

; 102  : }

	ret	0
??$swap@_N$0A@@std@@YAXAEA_N0@Z ENDP			; std::swap<bool,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$swap@N$0A@@std@@YAXAEAN0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$swap@N$0A@@std@@YAXAEAN0@Z PROC			; std::swap<double,0>, COMDAT

; 99   :     _Ty _Tmp = _STD move(_Left);
; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
	movsd	xmm0, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rax

; 101  :     _Right   = _STD move(_Tmp);

	movsd	QWORD PTR [rdx], xmm0

; 102  : }

	ret	0
??$swap@N$0A@@std@@YAXAEAN0@Z ENDP			; std::swap<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
_Loc$3 = 32
_Loc$1$ = 64
$T4 = 64
$T5 = 80
this$ = 176
__$ReturnUdt$ = 184
<_Vals_0>$ = 192
<_Vals_1>$ = 200
??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>, COMDAT

; 1032 :     pair<iterator, bool> emplace(_Valtys&&... _Vals) {

$LN325:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 104				; 00000068H
	mov	r12, r9
	mov	rsi, r8
	mov	r14, rdx
	mov	r15, rcx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbp, QWORD PTR [rcx]
	mov	rbx, QWORD PTR [rbp+8]
	mov	QWORD PTR $T2[rsp], rbx
	xor	r13d, r13d
	mov	DWORD PTR $T2[rsp+8], r13d
	mov	rdi, rbp
	mov	QWORD PTR $T2[rsp+16], rbp

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r13b
	jne	SHORT $LN9@emplace
	npad	1
$LL8@emplace:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR $T2[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN10@emplace

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR $T2[rsp+8], r13d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN11@emplace
$LN10@emplace:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR $T2[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx
	mov	QWORD PTR $T2[rsp+16], rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN11@emplace:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r13b
	je	SHORT $LL8@emplace
$LN9@emplace:

; 1002 :             _Loc                = _Find_lower_bound(_Keyval);

	movups	xmm0, XMMWORD PTR $T2[rsp]
	movups	XMMWORD PTR _Loc$1$[rsp], xmm0
	movsd	xmm0, QWORD PTR $T2[rsp+16]
	movsd	QWORD PTR _Loc$3[rsp+16], xmm0

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r13b
	jne	SHORT $LN4@emplace
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN4@emplace
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	xor	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1004 :                 return {_Loc._Bound, false};

	jmp	$LN296@emplace
$LN4@emplace:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 177372539170284150			; 0276276276276276H
	cmp	QWORD PTR [r15+8], rax
	je	$LN323@emplace
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T1[rsp], r15

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T1[rsp+8], r13

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T1[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 807  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	lea	rcx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T5[rsp], rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR [rcx+16], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rcx+24], r13

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rsi]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rsi+16]
	movups	XMMWORD PTR [rcx+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [rsi+16], r13
	mov	QWORD PTR [rsi+24], 15
	mov	BYTE PTR [rsi], 0
	add	rcx, 32					; 00000020H
	mov	rdx, r12
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rbx], rbp

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rbx+8], rbp

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rbx+16], rbp

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rbx+24], 0

; 1027 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$1$[rsp]
	movaps	XMMWORD PTR $T4[rsp], xmm0
	mov	r8, rbx
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, r15
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Insert_node
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	al, 1
$LN296@emplace:
	mov	QWORD PTR [r14], rdi
	mov	BYTE PTR [r14+8], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1034 :         return {iterator(_Result.first, _Get_scary()), _Result.second};

	mov	rax, r14

; 1035 :     }

	add	rsp, 104				; 00000068H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN323@emplace:

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN321@emplace:
??$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$3 = 32
_Loc$1$ = 64
$T4 = 64
$T5 = 80
this$ = 176
__$ReturnUdt$ = 184
<_Vals_0>$ = 192
<_Vals_1>$ = 200
?dtor$2@?0???$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$2
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$2@?0???$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$3 = 32
_Loc$1$ = 64
$T4 = 64
$T5 = 80
this$ = 176
__$ReturnUdt$ = 184
<_Vals_0>$ = 192
<_Vals_1>$ = 200
?dtor$1@?0???$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$1
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$1@?0???$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$3 = 32
_Loc$1$ = 64
$T4 = 64
$T5 = 80
this$ = 176
__$ReturnUdt$ = 184
<_Vals_0>$ = 192
<_Vals_1>$ = 200
?dtor$3@?0???$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$3
	mov	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0???$emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@Uvalue@crude_json@@@std@@YA$$QEAUvalue@crude_json@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@Uvalue@crude_json@@@std@@YA$$QEAUvalue@crude_json@@AEAU12@@Z PROC ; std::forward<crude_json::value>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@Uvalue@crude_json@@@std@@YA$$QEAUvalue@crude_json@@AEAU12@@Z ENDP ; std::forward<crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_one_at_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z
_TEXT	SEGMENT
this$ = 48
<_Val_0>$ = 56
??$_Emplace_one_at_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_one_at_back<crude_json::value>, COMDAT

; 776  :     _CONSTEXPR20 _Ty& _Emplace_one_at_back(_Valty&&... _Val) {

$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H

; 777  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 778  :         auto& _My_data   = _Mypair._Myval2;
; 779  :         pointer& _Mylast = _My_data._Mylast;
; 780  : 
; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rax, QWORD PTR [rcx+8]
	mov	rbx, rcx
	cmp	rax, QWORD PTR [rcx+16]
	je	SHORT $LN2@Emplace_on
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, rax
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 805  :         _Ty& _Result = *_Mylast;

	mov	rax, QWORD PTR [rbx+8]

; 806  :         ++_Mylast;

	lea	rdx, QWORD PTR [rax+40]
	mov	QWORD PTR [rbx+8], rdx

; 786  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN2@Emplace_on:

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);
; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	mov	r8, rdx
	mov	rdx, rax

; 786  :     }

	add	rsp, 32					; 00000020H
	pop	rbx

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);
; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	jmp	??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_reallocate<crude_json::value>
??$_Emplace_one_at_back@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_one_at_back<crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
;	COMDAT ??$isnormal@N@@YA_NN@Z
_TEXT	SEGMENT
_X$ = 48
??$isnormal@N@@YA_NN@Z PROC				; isnormal<double>, COMDAT

; 424  :     {

$LN7:
	sub	rsp, 40					; 00000028H

; 301  :         return _dtest(&_X);

	call	_dclass

; 425  :         return fpclassify(_X) == FP_NORMAL;

	cmp	ax, -1
	sete	al

; 426  :     }

	add	rsp, 40					; 00000028H
	ret	0
??$isnormal@N@@YA_NN@Z ENDP				; isnormal<double>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Unwrap_iter@PEAUvalue@crude_json@@PEAU12@@ranges@std@@YA?A_T$$QEAPEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Unwrap_iter@PEAUvalue@crude_json@@PEAU12@@ranges@std@@YA?A_T$$QEAPEAUvalue@crude_json@@@Z PROC ; std::ranges::_Unwrap_iter<crude_json::value *,crude_json::value *>, COMDAT

; 2488 :         _STL_INTERNAL_STATIC_ASSERT(sentinel_for<remove_cvref_t<_Sent>, remove_cvref_t<_Iter>>);
; 2489 :         if constexpr (is_pointer_v<remove_cvref_t<_Iter>>) {
; 2490 :             return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 2491 :         } else if constexpr (_Unwrappable_sentinel_for<_Sent, _Iter>) {
; 2492 :             return static_cast<_Iter&&>(_It)._Unwrapped();
; 2493 :         } else {
; 2494 :             return static_cast<_Iter&&>(_It);
; 2495 :         }
; 2496 :     }

	ret	0
??$_Unwrap_iter@PEAUvalue@crude_json@@PEAU12@@ranges@std@@YA?A_T$$QEAPEAUvalue@crude_json@@@Z ENDP ; std::ranges::_Unwrap_iter<crude_json::value *,crude_json::value *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Unwrap_sent@PEAUvalue@crude_json@@PEAU12@@ranges@std@@YA?A_T$$QEAPEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
_Se$ = 8
??$_Unwrap_sent@PEAUvalue@crude_json@@PEAU12@@ranges@std@@YA?A_T$$QEAPEAUvalue@crude_json@@@Z PROC ; std::ranges::_Unwrap_sent<crude_json::value *,crude_json::value *>, COMDAT

; 2501 :         _STL_INTERNAL_STATIC_ASSERT(sentinel_for<remove_cvref_t<_Sent>, remove_cvref_t<_Iter>>);
; 2502 :         if constexpr (is_pointer_v<remove_cvref_t<_Sent>>) {
; 2503 :             return _Se + 0;

	mov	rax, QWORD PTR [rcx]

; 2504 :         } else if constexpr (_Unwrappable_sentinel_for<_Sent, _Iter>) {
; 2505 :             return static_cast<_Sent&&>(_Se)._Unwrapped();
; 2506 :         } else {
; 2507 :             return static_cast<_Sent&&>(_Se);
; 2508 :         }
; 2509 :     }

	ret	0
??$_Unwrap_sent@PEAUvalue@crude_json@@PEAU12@@ranges@std@@YA?A_T$$QEAPEAUvalue@crude_json@@@Z ENDP ; std::ranges::_Unwrap_sent<crude_json::value *,crude_json::value *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 32
__$ArrayPad$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z PROC ; std::_Uninitialized_copy<crude_json::value *,crude_json::value *,std::allocator<crude_json::value> >, COMDAT

; 1819 :     _InIt _First, _Se _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN324:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbx, rcx
	xorps	xmm0, xmm0
	movups	XMMWORD PTR _Backout$[rsp], xmm0

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR _Backout$[rsp], r8
	mov	QWORD PTR _Backout$[rsp+8], r8
	mov	QWORD PTR _Backout$[rsp+16], r9

; 1820 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1821 :     // note: only called internally from elsewhere in the STL
; 1822 :     using _Ptrval = typename _Alloc::value_type*;
; 1823 : 
; 1824 : #ifdef __cpp_lib_concepts
; 1825 :     auto _UFirst = _RANGES _Unwrap_iter<_Se>(_STD move(_First));
; 1826 :     auto _ULast  = _RANGES _Unwrap_sent<_InIt>(_STD move(_Last));
; 1827 : #else // ^^^ __cpp_lib_concepts / !__cpp_lib_concepts vvv
; 1828 :     // In pre-concepts world, _Uninitialized_copy should only ever be called with an iterator
; 1829 :     // and sentinel of the same type, so `_Get_unwrapped` is fine to call.
; 1830 :     auto _UFirst = _Get_unwrapped(_STD move(_First));
; 1831 :     auto _ULast  = _Get_unwrapped(_STD move(_Last));
; 1832 : #endif // ^^^ !__cpp_lib_concepts ^^^
; 1833 : 
; 1834 :     constexpr bool _Can_memmove = _Sent_copy_cat<decltype(_UFirst), decltype(_ULast), _Ptrval>::_Bitcopy_constructible
; 1835 :                                && _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>::value;
; 1836 : 
; 1837 :     if constexpr (_Can_memmove) {
; 1838 : #if _HAS_CXX20
; 1839 :         if (!_STD is_constant_evaluated())
; 1840 : #endif // _HAS_CXX20
; 1841 :         {
; 1842 :             if constexpr (is_same_v<decltype(_UFirst), decltype(_ULast)>) {
; 1843 :                 _Copy_memmove(_To_address(_UFirst), _To_address(_ULast), _Unfancy(_Dest));
; 1844 :                 _Dest += _ULast - _UFirst;
; 1845 :             } else {
; 1846 :                 const auto _Count = static_cast<size_t>(_ULast - _UFirst);
; 1847 :                 _Copy_memmove_n(_To_address(_UFirst), _Count, _Unfancy(_Dest));
; 1848 :                 _Dest += _Count;
; 1849 :             }
; 1850 :             return _Dest;
; 1851 :         }
; 1852 :     }
; 1853 : 
; 1854 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1855 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rcx, rdx
	je	SHORT $LN321@Uninitiali
$LL4@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rdx, rbx
	mov	rcx, rdi
	call	??0value@crude_json@@QEAA@AEBU01@@Z	; crude_json::value::value
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	rdi, 40					; 00000028H
	mov	QWORD PTR _Backout$[rsp+8], rdi

; 1820 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1821 :     // note: only called internally from elsewhere in the STL
; 1822 :     using _Ptrval = typename _Alloc::value_type*;
; 1823 : 
; 1824 : #ifdef __cpp_lib_concepts
; 1825 :     auto _UFirst = _RANGES _Unwrap_iter<_Se>(_STD move(_First));
; 1826 :     auto _ULast  = _RANGES _Unwrap_sent<_InIt>(_STD move(_Last));
; 1827 : #else // ^^^ __cpp_lib_concepts / !__cpp_lib_concepts vvv
; 1828 :     // In pre-concepts world, _Uninitialized_copy should only ever be called with an iterator
; 1829 :     // and sentinel of the same type, so `_Get_unwrapped` is fine to call.
; 1830 :     auto _UFirst = _Get_unwrapped(_STD move(_First));
; 1831 :     auto _ULast  = _Get_unwrapped(_STD move(_Last));
; 1832 : #endif // ^^^ !__cpp_lib_concepts ^^^
; 1833 : 
; 1834 :     constexpr bool _Can_memmove = _Sent_copy_cat<decltype(_UFirst), decltype(_ULast), _Ptrval>::_Bitcopy_constructible
; 1835 :                                && _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>::value;
; 1836 : 
; 1837 :     if constexpr (_Can_memmove) {
; 1838 : #if _HAS_CXX20
; 1839 :         if (!_STD is_constant_evaluated())
; 1840 : #endif // _HAS_CXX20
; 1841 :         {
; 1842 :             if constexpr (is_same_v<decltype(_UFirst), decltype(_ULast)>) {
; 1843 :                 _Copy_memmove(_To_address(_UFirst), _To_address(_ULast), _Unfancy(_Dest));
; 1844 :                 _Dest += _ULast - _UFirst;
; 1845 :             } else {
; 1846 :                 const auto _Count = static_cast<size_t>(_ULast - _UFirst);
; 1847 :                 _Copy_memmove_n(_To_address(_UFirst), _Count, _Unfancy(_Dest));
; 1848 :                 _Dest += _Count;
; 1849 :             }
; 1850 :             return _Dest;
; 1851 :         }
; 1852 :     }
; 1853 : 
; 1854 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1855 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	rbx, 40					; 00000028H
	cmp	rbx, rsi
	jne	SHORT $LL4@Uninitiali
$LN321@Uninitiali:

; 1856 :         _Backout._Emplace_back(*_UFirst);
; 1857 :     }
; 1858 : 
; 1859 :     return _Backout._Release();
; 1860 : }

	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z ENDP ; std::_Uninitialized_copy<crude_json::value *,crude_json::value *,std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 32
__$ArrayPad$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
?dtor$0@?0???$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<crude_json::value *,crude_json::value *,std::allocator<crude_json::value> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Backout$[rdx]
	jmp	??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::~_Uninitialized_backout_al<std::allocator<crude_json::value> >
?dtor$0@?0???$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<crude_json::value *,crude_json::value *,std::allocator<crude_json::value> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBQEAUvalue@crude_json@@@std@@YA?A_TAEBQEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBQEAUvalue@crude_json@@@std@@YA?A_TAEBQEAUvalue@crude_json@@@Z PROC ; std::_Get_unwrapped<crude_json::value * const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;

	mov	rax, QWORD PTR [rcx]

; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBQEAUvalue@crude_json@@@std@@YA?A_TAEBQEAUvalue@crude_json@@@Z ENDP ; std::_Get_unwrapped<crude_json::value * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z
_TEXT	SEGMENT
_Backout$ = 32
__$ArrayPad$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z PROC ; std::_Uninitialized_move<crude_json::value *,std::allocator<crude_json::value> >, COMDAT

; 1927 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN125:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbx, rcx
	xorps	xmm0, xmm0
	movups	XMMWORD PTR _Backout$[rsp], xmm0

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR _Backout$[rsp], r8
	mov	QWORD PTR _Backout$[rsp+8], r8
	mov	QWORD PTR _Backout$[rsp+16], r9

; 1928 :     // move [_First, _Last) to raw _Dest, using _Al
; 1929 :     // note: only called internally from elsewhere in the STL
; 1930 :     using _Ptrval     = typename _Alloc::value_type*;
; 1931 :     auto _UFirst      = _Get_unwrapped(_First);
; 1932 :     const auto _ULast = _Get_unwrapped(_Last);
; 1933 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1934 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1935 : #if _HAS_CXX20
; 1936 :         if (!_STD is_constant_evaluated())
; 1937 : #endif // _HAS_CXX20
; 1938 :         {
; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1940 :             return _Dest + (_ULast - _UFirst);
; 1941 :         }
; 1942 :     }
; 1943 : 
; 1944 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rcx, rdx
	je	SHORT $LN122@Uninitiali
$LL4@Uninitiali:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rdx, rbx
	mov	rcx, rdi
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	rdi, 40					; 00000028H
	mov	QWORD PTR _Backout$[rsp+8], rdi

; 1928 :     // move [_First, _Last) to raw _Dest, using _Al
; 1929 :     // note: only called internally from elsewhere in the STL
; 1930 :     using _Ptrval     = typename _Alloc::value_type*;
; 1931 :     auto _UFirst      = _Get_unwrapped(_First);
; 1932 :     const auto _ULast = _Get_unwrapped(_Last);
; 1933 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1934 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1935 : #if _HAS_CXX20
; 1936 :         if (!_STD is_constant_evaluated())
; 1937 : #endif // _HAS_CXX20
; 1938 :         {
; 1939 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1940 :             return _Dest + (_ULast - _UFirst);
; 1941 :         }
; 1942 :     }
; 1943 : 
; 1944 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1945 :     for (; _UFirst != _ULast; ++_UFirst) {

	add	rbx, 40					; 00000028H
	cmp	rbx, rsi
	jne	SHORT $LL4@Uninitiali
$LN122@Uninitiali:

; 1946 :         _Backout._Emplace_back(_STD move(*_UFirst));
; 1947 :     }
; 1948 : 
; 1949 :     return _Backout._Release();
; 1950 : }

	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z ENDP ; std::_Uninitialized_move<crude_json::value *,std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Backout$ = 32
__$ArrayPad$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
?dtor$0@?0???$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<crude_json::value *,std::allocator<crude_json::value> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Backout$[rdx]
	jmp	??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::~_Uninitialized_backout_al<std::allocator<crude_json::value> >
?dtor$0@?0???$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<crude_json::value *,std::allocator<crude_json::value> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z PROC ; std::_Destroy_range<std::allocator<crude_json::value> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN273:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN270@Destroy_ra
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	mov	rdi, rdx
	mov	rbx, rcx
$LL4@Destroy_ra:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rbx+32]
	mov	rcx, rbx
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 40					; 00000028H
	cmp	rbx, rdi
	jne	SHORT $LL4@Destroy_ra

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN270@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@Uvalue@crude_json@@@std@@@std@@YA$$QEAV?$allocator@Uvalue@crude_json@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$allocator@Uvalue@crude_json@@@std@@@std@@YA$$QEAV?$allocator@Uvalue@crude_json@@@0@AEAV10@@Z PROC ; std::move<std::allocator<crude_json::value> &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAV?$allocator@Uvalue@crude_json@@@std@@@std@@YA$$QEAV?$allocator@Uvalue@crude_json@@@0@AEAV10@@Z ENDP ; std::move<std::allocator<crude_json::value> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAUvalue@crude_json@@$$T@std@@YAPEAUvalue@crude_json@@AEAPEAU12@$$QEA$$T@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAUvalue@crude_json@@$$T@std@@YAPEAUvalue@crude_json@@AEAPEAU12@$$QEA$$T@Z PROC ; std::exchange<crude_json::value *,std::nullptr_t>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAUvalue@crude_json@@$$T@std@@YAPEAUvalue@crude_json@@AEAPEAU12@$$QEA$$T@Z ENDP ; std::exchange<crude_json::value *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0V?$allocator@Uvalue@crude_json@@@std@@PEAUvalue@crude_json@@PEAU23@PEAU23@@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uvalue@crude_json@@@1@$$QEAPEAUvalue@crude_json@@22@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
<_Val2_0>$ = 32
<_Val2_1>$ = 40
<_Val2_2>$ = 48
??$?0V?$allocator@Uvalue@crude_json@@@std@@PEAUvalue@crude_json@@PEAU23@PEAU23@@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uvalue@crude_json@@@1@$$QEAPEAUvalue@crude_json@@22@Z PROC ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1><std::allocator<crude_json::value>,crude_json::value *,crude_json::value *,crude_json::value *>, COMDAT

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, QWORD PTR <_Val2_2>$[rsp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR <_Val2_1>$[rsp]
	mov	rdx, QWORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	rax, QWORD PTR [r9]
	mov	QWORD PTR [rcx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	ret	0
??$?0V?$allocator@Uvalue@crude_json@@@std@@PEAUvalue@crude_json@@PEAU23@PEAU23@@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uvalue@crude_json@@@1@$$QEAPEAUvalue@crude_json@@22@Z ENDP ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1><std::allocator<crude_json::value>,crude_json::value *,crude_json::value *,crude_json::value *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0V?$allocator@Uvalue@crude_json@@@std@@$$V@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uvalue@crude_json@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0V?$allocator@Uvalue@crude_json@@@std@@$$V@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uvalue@crude_json@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1><std::allocator<crude_json::value> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0V?$allocator@Uvalue@crude_json@@@std@@$$V@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@Uvalue@crude_json@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1><std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z
_TEXT	SEGMENT
_Guard$1 = 48
this$ = 48
_Count$ = 56
<_Val_0>$ = 64
<_Val_1>$ = 72
??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Construct_n<crude_json::value * const &,crude_json::value * const &>, COMDAT

; 2056 :     _CONSTEXPR20 void _Construct_n(_CRT_GUARDOVERFLOW const size_type _Count, _Valty&&... _Val) {

$LN19:

; 2057 :         // Dispatches between the three sized constructions.
; 2058 :         // 1-arg -> value-construction, e.g. vector(5)
; 2059 :         // 2-arg -> fill, e.g. vector(5, "meow")
; 2060 :         // 3-arg -> sized range construction, e.g. vector{"Hello", "Fluffy", "World"}
; 2061 :         auto& _Al       = _Getal();
; 2062 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2063 :         auto& _My_data  = _Mypair._Myval2;
; 2064 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2065 :         if (_Count != 0) {

	test	rdx, rdx
	je	SHORT $LN15@Construct_
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H

; 2056 :     _CONSTEXPR20 void _Construct_n(_CRT_GUARDOVERFLOW const size_type _Count, _Valty&&... _Val) {

	mov	rsi, r9
	mov	r14, r8
	mov	rbx, rdx
	mov	rdi, rcx

; 2006 :         if (_Newcapacity > max_size()) {

	mov	rax, 461168601842738790			; 0666666666666666H
	cmp	rdx, rax
	ja	SHORT $LN17@Construct_

; 1989 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	call	?allocate@?$allocator@Uvalue@crude_json@@@std@@QEAAPEAUvalue@crude_json@@_K@Z ; std::allocator<crude_json::value>::allocate

; 1990 :         _Myfirst           = _Newvec;

	mov	QWORD PTR [rdi], rax

; 1991 :         _Mylast            = _Newvec;

	mov	QWORD PTR [rdi+8], rax

; 1992 :         _Myend             = _Newvec + _Newcapacity;

	lea	rcx, QWORD PTR [rbx+rbx*4]
	lea	rdx, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR [rdi+16], rdx

; 2066 :             _Buy_nonzero(_Count);
; 2067 :             _Tidy_guard<vector> _Guard{this};

	mov	QWORD PTR _Guard$1[rsp], rdi

; 2068 :             if constexpr (sizeof...(_Val) == 0) {
; 2069 :                 _My_data._Mylast = _Uninitialized_value_construct_n(_My_data._Myfirst, _Count, _Al);
; 2070 :             } else if constexpr (sizeof...(_Val) == 1) {
; 2071 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Valty..., const _Ty&>);
; 2072 :                 _My_data._Mylast = _Uninitialized_fill_n(_My_data._Myfirst, _Count, _Val..., _Al);
; 2073 :             } else if constexpr (sizeof...(_Val) == 2) {
; 2074 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

	mov	r9, rdi
	mov	r8, rax
	mov	rdx, QWORD PTR [rsi]
	mov	rcx, QWORD PTR [r14]
	call	??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z ; std::_Uninitialized_copy<crude_json::value *,crude_json::value *,std::allocator<crude_json::value> >
	mov	QWORD PTR [rdi+8], rax

; 2075 :             } else {
; 2076 :                 static_assert(_Always_false<_Ty>, "Should be unreachable");
; 2077 :             }
; 2078 :             _ASAN_VECTOR_CREATE;
; 2079 :             _Guard._Target = nullptr;
; 2080 :         }
; 2081 : 
; 2082 :         _Proxy._Release();
; 2083 :     }

	mov	rbx, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
$LN15@Construct_:
	ret	0
$LN17@Construct_:

; 2007 :             _Xlength();

	call	?_Xlength@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@CAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Xlength
	int	3
$LN14@Construct_:
??$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Construct_n<crude_json::value * const &,crude_json::value * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Guard$1 = 48
this$ = 48
_Count$ = 56
<_Val_0>$ = 64
<_Val_1>$ = 72
?dtor$0@?0???$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z@4HA PROC ; `std::vector<crude_json::value,std::allocator<crude_json::value> >::_Construct_n<crude_json::value * const &,crude_json::value * const &>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Guard$1[rdx]
	jmp	??1?$_Tidy_guard@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<crude_json::value,std::allocator<crude_json::value> > >::~_Tidy_guard<std::vector<crude_json::value,std::allocator<crude_json::value> > >
?dtor$0@?0???$_Construct_n@AEBQEAUvalue@crude_json@@AEBQEAU12@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_KAEBQEAUvalue@crude_json@@1@Z@4HA ENDP ; `std::vector<crude_json::value,std::allocator<crude_json::value> >::_Construct_n<crude_json::value * const &,crude_json::value * const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@Uvalue@crude_json@@@std@@V?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1>::_Compressed_pair<std::allocator<crude_json::value>,std::_Vector_val<std::_Simple_types<crude_json::value> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 48
$T3 = 72
this$ = 128
__$ReturnUdt$ = 136
_Keyval$ = 144
??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 197  :     pair<_Nodeptr, bool> _Try_emplace(_Keyty&& _Keyval, _Mappedty&&... _Mapval) {

$LN375:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rbp, r8
	mov	rsi, rdx
	mov	r14, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	r15, QWORD PTR [rcx]
	mov	rbx, QWORD PTR [r15+8]
	mov	QWORD PTR _Loc$[rsp], rbx
	xor	r12d, r12d
	mov	DWORD PTR _Loc$[rsp+8], r12d
	mov	rdi, r15

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	jne	SHORT $LN7@Try_emplac
	npad	4
$LL6@Try_emplac:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR _Loc$[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN8@Try_emplac

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR _Loc$[rsp+8], r12d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN9@Try_emplac
$LN8@Try_emplac:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR _Loc$[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN9@Try_emplac:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	je	SHORT $LL6@Try_emplac
$LN7@Try_emplac:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r12b
	jne	SHORT $LN2@Try_emplac
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN2@Try_emplac
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [rsi], rdi
	mov	BYTE PTR [rsi+8], r12b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 200  :             return {_Loc._Bound, false};

	jmp	SHORT $LN371@Try_emplac
$LN2@Try_emplac:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 177372539170284150			; 0276276276276276H
	cmp	QWORD PTR [r14+8], rax
	je	SHORT $LN373@Try_emplac
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T2[rsp], r14

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T2[rsp+8], r12

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T2[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, rbp
	lea	rcx, QWORD PTR [rax+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR [rdi+96], r12d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], r15

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], r15

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], r15

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 212  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	r8, rdi
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r14
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Insert_node
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [rsi], rax
	mov	BYTE PTR [rsi+8], 1
$LN371@Try_emplac:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 213  :     }

	mov	rax, rsi
	lea	r11, QWORD PTR [rsp+80]
	mov	rbx, QWORD PTR [r11+64]
	mov	rbp, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
$LN373@Try_emplac:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN370@Try_emplac:
??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 48
$T3 = 72
this$ = 128
__$ReturnUdt$ = 136
_Keyval$ = 144
?dtor$2@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$2
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$2@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 48
$T3 = 72
this$ = 128
__$ReturnUdt$ = 136
_Keyval$ = 144
?dtor$1@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$1
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$1@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 48
$T3 = 72
this$ = 128
__$ReturnUdt$ = 136
_Keyval$ = 144
?dtor$4@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$4
	mov	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
_Sentinel$ = 32
this$ = 64
_Right$ = 72
_Al$dead$ = 80
??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> ><std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 894  :             _STD forward<_Any_alloc>(_Al)) {

$LN119:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, rdx
	mov	rdi, rcx

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax

; 767  :     _Tree_head_scoped_ptr(_Alnode& _Al_, _Scary_val& _Mycont_) : _Al(_Al_), _Mycont(_STD addressof(_Mycont_)) {

	mov	QWORD PTR _Sentinel$[rsp], rcx
	mov	QWORD PTR _Sentinel$[rsp+8], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+104]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 768  :         _Mycont->_Myhead = _Alnode::value_type::_Buyheadnode(_Al);

	mov	QWORD PTR [rdi], rax

; 1640 :         _Scary->_Myhead->_Parent = _Copy_nodes<_Strat>(_Right_scary->_Myhead->_Parent, _Scary->_Myhead);

	mov	rdx, QWORD PTR [rbx]
	mov	r8, rax
	mov	rdx, QWORD PTR [rdx+8]
	mov	rcx, rdi
	call	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>
	mov	rcx, rax
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rax+8], rcx

; 1641 :         _Scary->_Mysize          = _Right_scary->_Mysize;

	mov	rax, QWORD PTR [rbx+8]
	mov	QWORD PTR [rdi+8], rax

; 1642 :         if (!_Scary->_Myhead->_Parent->_Isnil) { // nonempty tree, look for new smallest and largest

	mov	r8, QWORD PTR [rdi]
	mov	rdx, QWORD PTR [r8+8]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN45@value

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [rdx]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN50@value
	npad	7
$LL49@value:

; 454  :             _Pnode = _Pnode->_Left;

	mov	rdx, rcx

; 447  :         }
; 448  : 
; 449  :         return _Pnode;
; 450  :     }
; 451  : 
; 452  :     static _Nodeptr _Min(_Nodeptr _Pnode) noexcept { // return leftmost node in subtree at _Pnode
; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rax, QWORD PTR [rcx]
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL49@value
$LN50@value:

; 1643 :             _Scary->_Myhead->_Left  = _Scary_val::_Min(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [r8], rdx

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	rdx, QWORD PTR [rdi]
	mov	rax, QWORD PTR [rdx+8]

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rcx, QWORD PTR [rax+16]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN54@value
$LL53@value:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rax, rcx

; 438  : 
; 439  :     enum _Redbl { // colors for link to parent
; 440  :         _Red,
; 441  :         _Black
; 442  :     };
; 443  : 
; 444  :     static _Nodeptr _Max(_Nodeptr _Pnode) noexcept { // return rightmost node in subtree at _Pnode
; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rcx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL53@value
$LN54@value:

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [rdx+16], rax

; 1645 :         } else { // empty tree, just tidy head pointers

	jmp	SHORT $LN116@value
$LN45@value:

; 1646 :             _Scary->_Myhead->_Left  = _Scary->_Myhead;

	mov	QWORD PTR [r8], r8

; 1647 :             _Scary->_Myhead->_Right = _Scary->_Myhead;

	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rax+16], rax
$LN116@value:

; 895  :         auto&& _Alproxy   = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());
; 896  :         const auto _Scary = _Get_scary();
; 897  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, *_Scary);
; 898  :         _Tree_head_scoped_ptr<_Alnode, _Scary_val> _Sentinel(_Getal(), *_Scary);
; 899  :         _Copy<_Strategy::_Copy>(_Right);
; 900  :         _Sentinel._Release();
; 901  :         _Proxy._Release();
; 902  :     }

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> ><std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Sentinel$ = 32
this$ = 64
_Right$ = 72
_Al$dead$ = 80
?dtor$0@?0???$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> ><std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Sentinel$[rdx]
	jmp	??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
?dtor$0@?0???$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAA@AEBV01@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> ><std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Keyval$ = 56
??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1367 :     _NODISCARD _Nodeptr _Find(const _Other& _Keyval) const {

$LN32:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbp, QWORD PTR [rcx]

; 1367 :     _NODISCARD _Nodeptr _Find(const _Other& _Keyval) const {

	mov	rsi, rdx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rdi, rbp
	mov	rbx, QWORD PTR [rbp+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN6@Find
	npad	9
$LL5@Find:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN7@Find

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN8@Find
$LN7@Find:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN8@Find:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL5@Find
$LN6@Find:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN2@Find
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1370 :             return _Loc._Bound;

	mov	rax, rdi

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	jns	SHORT $LN1@Find
$LN2@Find:

; 1371 :         }
; 1372 : 
; 1373 :         return _Get_scary()->_Myhead;

	mov	rax, rbp
$LN1@Find:

; 1374 :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$ = 56
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 752  :     void _Erase_head(_Alnode& _Al) noexcept {

$LN49:
	push	rbx
	sub	rsp, 32					; 00000020H

; 753  :         this->_Orphan_all();
; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 104				; 00000068H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 756  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??$_Traits_find_first_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z
_TEXT	SEGMENT
_Matches$1 = 32
__$ArrayPad$ = 288
_Haystack$ = 320
_Hay_size$ = 328
_Start_at$dead$ = 336
_Needle$dead$ = 344
_Needle_size$ = 352
??$_Traits_find_first_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z PROC ; std::_Traits_find_first_of<std::char_traits<char>,1>, COMDAT

; 717  :     const size_t _Needle_size) noexcept {

$LN48:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 718  :     // in [_Haystack, _Haystack + _Hay_size), look for one of [_Needle, _Needle + _Needle_size), at/after _Start_at
; 719  :     if (_Needle_size != 0 && _Start_at < _Hay_size) { // room for match, look for it

	mov	rsi, QWORD PTR _Needle_size$[rsp]
	mov	rdi, rdx
	mov	rbx, rcx
	test	rsi, rsi
	je	SHORT $LN3@Traits_fin
	test	rdx, rdx
	je	SHORT $LN3@Traits_fin

; 720  :         if constexpr (_Special) {
; 721  :             _String_bitmap<typename _Traits::char_type> _Matches;
; 722  :             if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the

	xor	edx, edx
	lea	rcx, QWORD PTR _Matches$1[rsp]
	mov	r8d, 256				; 00000100H
	call	memset
	lea	rdx, OFFSET FLAT:??_C@_07PBJOHOHP@?$CC?2?1?$AI?$AM?6?$AN@
	lea	rcx, QWORD PTR [rsi+rdx]

; 669  :         for (; _First != _Last; ++_First) {

	cmp	rdx, rcx
	je	SHORT $LN13@Traits_fin
	npad	2
$LL14@Traits_fin:

; 670  :             _Matches[static_cast<unsigned char>(*_First)] = true;

	movzx	eax, BYTE PTR [rdx]
	inc	rdx
	mov	BYTE PTR _Matches$1[rsp+rax], 1
	cmp	rdx, rcx
	jne	SHORT $LL14@Traits_fin
$LN13@Traits_fin:

; 723  :                                                                     // bitmap, fall back to the serial algorithm
; 724  :                 return _Traits_find_first_of<_Traits, false>(_Haystack, _Hay_size, _Start_at, _Needle, _Needle_size);
; 725  :             }
; 726  : 
; 727  :             const auto _End = _Haystack + _Hay_size;

	lea	rdx, QWORD PTR [rbx+rdi]

; 728  :             for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

	mov	rax, rbx
	cmp	rbx, rdx
	jae	SHORT $LN3@Traits_fin
	npad	4
$LL4@Traits_fin:

; 677  :         return _Matches[static_cast<unsigned char>(_Ch)];

	movzx	ecx, BYTE PTR [rax]

; 729  :                 if (_Matches._Match(*_Match_try)) {

	cmp	BYTE PTR _Matches$1[rsp+rcx], 0
	jne	SHORT $LN31@Traits_fin

; 728  :             for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

	inc	rax
	cmp	rax, rdx
	jb	SHORT $LL4@Traits_fin
$LN3@Traits_fin:

; 731  :                 }
; 732  :             }
; 733  :         } else {
; 734  :             const auto _End = _Haystack + _Hay_size;
; 735  :             for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {
; 736  :                 if (_Traits::find(_Needle, _Needle_size, *_Match_try)) {
; 737  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match
; 738  :                 }
; 739  :             }
; 740  :         }
; 741  :     }
; 742  : 
; 743  :     return static_cast<size_t>(-1); // no match

	mov	rax, -1
$LN1@Traits_fin:

; 744  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+304]
	mov	rbx, QWORD PTR [r11+16]
	mov	rsi, QWORD PTR [r11+24]
	mov	rsp, r11
	pop	rdi
	ret	0
$LN31@Traits_fin:

; 730  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match

	sub	rax, rbx
	jmp	SHORT $LN1@Traits_fin
??$_Traits_find_first_of@U?$char_traits@D@std@@$00@std@@YA_KQEBD_K101@Z ENDP ; std::_Traits_find_first_of<std::char_traits<char>,1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??$_Traits_find_ch@U?$char_traits@D@std@@@std@@YA_KQEBD_K1D@Z
_TEXT	SEGMENT
_Haystack$ = 48
_Hay_size$ = 56
_Start_at$ = 64
_Ch$ = 72
??$_Traits_find_ch@U?$char_traits@D@std@@@std@@YA_KQEBD_K1D@Z PROC ; std::_Traits_find_ch<std::char_traits<char> >, COMDAT

; 608  :     const size_t _Start_at, const _Traits_ch_t<_Traits> _Ch) noexcept {

$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rax, r8
	mov	rbx, rcx
	mov	r8, rdx

; 609  :     // search [_Haystack, _Haystack + _Hay_size) for _Ch, at/after _Start_at
; 610  :     if (_Start_at < _Hay_size) {

	cmp	rax, rdx
	jae	SHORT $LN3@Traits_fin

; 611  :         const auto _Found_at = _Traits::find(_Haystack + _Start_at, _Hay_size - _Start_at, _Ch);

	sub	r8, rax

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	movsx	edx, r9b

; 611  :         const auto _Found_at = _Traits::find(_Haystack + _Start_at, _Hay_size - _Start_at, _Ch);

	add	rcx, rax

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	call	memchr

; 612  :         if (_Found_at) {

	mov	rdx, rax
	mov	rcx, -1
	sub	rdx, rbx
	test	rax, rax
	cmovne	rcx, rdx
	mov	rax, rcx

; 618  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN3@Traits_fin:

; 613  :             return static_cast<size_t>(_Found_at - _Haystack);
; 614  :         }
; 615  :     }
; 616  : 
; 617  :     return static_cast<size_t>(-1); // (npos) no match

	mov	rax, -1

; 618  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Traits_find_ch@U?$char_traits@D@std@@@std@@YA_KQEBD_K1D@Z ENDP ; std::_Traits_find_ch<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z PROC ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::destroy<crude_json::value>, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN272:
	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	rcx, rdx
	mov	edx, DWORD PTR [rdx+32]
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::destroy<crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@AEBU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@AEBU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> const >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAPEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@AEBU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> const >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > const >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > const >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@0@AEAV10@@Z PROC ; std::move<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@0@AEAV10@@Z ENDP ; std::move<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU21@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
<_Val2_0>$dead$ = 32
<_Val2_1>$dead$ = 40
??$?0U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU21@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_One_then_variadic_args_t,std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU21@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_One_then_variadic_args_t,std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
<_Val2_0>$dead$ = 32
??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 344  :     static _Nodeptr _Buyheadnode(_Alloc& _Al) {

$LN33:
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 351  :         _Pnode->_Isnil = true;
; 352  :         return _Pnode;
; 353  :     }

	add	rsp, 40					; 00000028H
	ret	0
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$swap@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@$0A@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$swap@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@$0A@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@0@Z PROC ; std::swap<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,0>, COMDAT

; 99   :     _Ty _Tmp = _STD move(_Left);
; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
	mov	r8, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx], r8

; 102  : }

	ret	0
??$swap@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@$0A@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@0@Z ENDP ; std::swap<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	xor	eax, eax
	movups	XMMWORD PTR [rcx], xmm0
	mov	QWORD PTR [rcx+16], rax
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ PROC ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >, COMDAT

; 775  :     ~_Tree_head_scoped_ptr() {

$LN54:
	push	rbx
	sub	rsp, 32					; 00000020H

; 776  :         if (_Mycont) {

	mov	rbx, QWORD PTR [rcx+8]
	test	rbx, rbx
	je	SHORT $LN34@Tree_head_

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rbx]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rbx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 104				; 00000068H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 779  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN34@Tree_head_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 779  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@XZ ENDP ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::~_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Release@?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAAXXZ PROC ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Release, COMDAT

; 772  :         _Mycont = nullptr;

	mov	QWORD PTR [rcx+8], 0

; 773  :     }

	ret	0
?_Release@?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAAXXZ ENDP ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al_$ = 56
_Mycont_$ = 64
??0?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z PROC ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >, COMDAT

; 767  :     _Tree_head_scoped_ptr(_Alnode& _Al_, _Scary_val& _Mycont_) : _Al(_Al_), _Mycont(_STD addressof(_Mycont_)) {

$LN36:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [rcx+8], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 768  :         _Mycont->_Myhead = _Alnode::value_type::_Buyheadnode(_Al);

	mov	rdx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rdx], rax

; 769  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_head_scoped_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z ENDP ; std::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Tree_head_scoped_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 818  :     ~_Tree_temp_node() {

$LN100:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 819  :         if (this->_Ptr) {

	mov	rbx, QWORD PTR [rcx+8]
	test	rbx, rbx
	je	SHORT $LN9@Tree_temp_
	lea	rcx, QWORD PTR [rbx+64]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rcx+32]
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN9@Tree_temp_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1156 :         if (_Ptr) {

	mov	rcx, QWORD PTR [rdi+8]
	test	rcx, rcx
	je	SHORT $LN80@Tree_temp_

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN80@Tree_temp_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 825  :     }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rcx+8]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rcx+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1148 :     }

	ret	0
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Tidy_guard@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tidy_guard@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<crude_json::value,std::allocator<crude_json::value> > >::~_Tidy_guard<std::vector<crude_json::value,std::allocator<crude_json::value> > >, COMDAT

; 44   :         if (_Target) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	jne	?_Tidy@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Tidy

; 45   :             _Target->_Tidy();
; 46   :         }
; 47   :     }

	ret	0
??1?$_Tidy_guard@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<crude_json::value,std::allocator<crude_json::value> > >::~_Tidy_guard<std::vector<crude_json::value,std::allocator<crude_json::value> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAPEAUvalue@crude_json@@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAPEAUvalue@crude_json@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::_Release, COMDAT

; 1807 :         _First = _Last;

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rcx], rax

; 1808 :         return _Last;
; 1809 :     }

	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAPEAUvalue@crude_json@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::~_Uninitialized_backout_al<std::allocator<crude_json::value> >, COMDAT

; 1796 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

$LN274:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1797 :         _Destroy_range(_First, _Last, _Al);

	mov	rdi, QWORD PTR [rcx+8]
	mov	rbx, QWORD PTR [rcx]

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rdi
	je	SHORT $LN5@Uninitiali
	npad	10
$LL6@Uninitiali:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rbx+32]
	mov	rcx, rbx
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 40					; 00000028H
	cmp	rbx, rdi
	jne	SHORT $LL6@Uninitiali
$LN5@Uninitiali:

; 1798 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::~_Uninitialized_backout_al<std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@PEAUvalue@crude_json@@AEAV?$allocator@Uvalue@crude_json@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Dest$ = 16
_Al_$ = 24
??0?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@PEAUvalue@crude_json@@AEAV?$allocator@Uvalue@crude_json@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::_Uninitialized_backout_al<std::allocator<crude_json::value> >, COMDAT

; 1791 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], r8
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAA@PEAUvalue@crude_json@@AEAV?$allocator@Uvalue@crude_json@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::_Uninitialized_backout_al<std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@std@@QEAA@PEAUvalue@crude_json@@00@Z
_TEXT	SEGMENT
this$ = 8
_First$ = 16
_Last$ = 24
_End$ = 32
??0?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@std@@QEAA@PEAUvalue@crude_json@@00@Z PROC ; std::_Vector_val<std::_Simple_types<crude_json::value> >::_Vector_val<std::_Simple_types<crude_json::value> >, COMDAT

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], r8
	mov	QWORD PTR [rcx+16], r9
	ret	0
??0?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@std@@QEAA@PEAUvalue@crude_json@@00@Z ENDP ; std::_Vector_val<std::_Simple_types<crude_json::value> >::_Vector_val<std::_Simple_types<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<crude_json::value> >::_Vector_val<std::_Simple_types<crude_json::value> >, COMDAT

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<crude_json::value> >::_Vector_val<std::_Simple_types<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Buy_nonzero, COMDAT

; 1995 :     _CONSTEXPR20 void _Buy_nonzero(const size_type _Newcapacity) {

$LN10:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1996 :         // allocate array with _Newcapacity elements
; 1997 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1998 :         auto& _My_data    = _Mypair._Myval2;
; 1999 :         pointer& _Myfirst = _My_data._Myfirst;
; 2000 :         pointer& _Mylast  = _My_data._Mylast;
; 2001 :         pointer& _Myend   = _My_data._Myend;
; 2002 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 2003 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 2004 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 2005 : 
; 2006 :         if (_Newcapacity > max_size()) {

	mov	rax, 461168601842738790			; 0666666666666666H
	mov	rbx, rdx
	mov	rdi, rcx
	cmp	rdx, rax
	ja	SHORT $LN9@Buy_nonzer

; 1989 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	call	?allocate@?$allocator@Uvalue@crude_json@@@std@@QEAAPEAUvalue@crude_json@@_K@Z ; std::allocator<crude_json::value>::allocate

; 1990 :         _Myfirst           = _Newvec;

	mov	QWORD PTR [rdi], rax

; 1992 :         _Myend             = _Newvec + _Newcapacity;

	lea	rcx, QWORD PTR [rbx+rbx*4]

; 2008 :         }
; 2009 : 
; 2010 :         _Buy_raw(_Newcapacity);
; 2011 :     }

	mov	rbx, QWORD PTR [rsp+48]

; 1991 :         _Mylast            = _Newvec;

	mov	QWORD PTR [rdi+8], rax

; 1992 :         _Myend             = _Newvec + _Newcapacity;

	lea	rax, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR [rdi+16], rax

; 2008 :         }
; 2009 : 
; 2010 :         _Buy_raw(_Newcapacity);
; 2011 :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN9@Buy_nonzer:

; 2007 :             _Xlength();

	call	?_Xlength@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@CAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Xlength
	int	3
$LN7@Buy_nonzer:
?_Buy_nonzero@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?swap@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?swap@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::swap, COMDAT

; 1779 :     _CONSTEXPR20 void swap(vector& _Right) noexcept /* strengthened */ {

	mov	r9, rcx

; 1780 :         if (this != _STD addressof(_Right)) {

	cmp	rcx, rdx
	je	SHORT $LN11@swap
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	r8, QWORD PTR [rcx]

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx], r8

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	r8, QWORD PTR [rcx+8]

; 100  :     _Left    = _STD move(_Right);

	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [rdx+16]

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx+8], r8

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	rcx, QWORD PTR [rcx+16]

; 100  :     _Left    = _STD move(_Right);

	mov	QWORD PTR [r9+16], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx+16], rcx
$LN11@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1784 :     }

	ret	0
?swap@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::swap
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@Uvalue@crude_json@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@Uvalue@crude_json@@@std@@QEAA@XZ PROC	; std::allocator<crude_json::value>::allocator<crude_json::value>, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@Uvalue@crude_json@@@std@@QEAA@XZ ENDP	; std::allocator<crude_json::value>::allocator<crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ?swap@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?swap@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAXAEAV12@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::swap, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1487 :         if (this != _STD addressof(_Right)) {

	cmp	rcx, rdx
	je	SHORT $LN4@swap
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
	mov	r8, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx], r8

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	r8, QWORD PTR [rcx+8]

; 100  :     _Left    = _STD move(_Right);

	mov	QWORD PTR [rcx+8], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx+8], r8
$LN4@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 181  :     }

	ret	0
?swap@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@@std@@QEAAXAEAV12@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::swap
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU32@@Z
_TEXT	SEGMENT
this$ = 8
_Loc$ = 16
_Newnode$ = 24
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Insert_node, COMDAT

; 647  :         ++_Mysize;

	inc	QWORD PTR [rcx+8]
	mov	r9, r8

; 648  :         const auto _Head  = _Myhead;

	mov	r11, QWORD PTR [rcx]
	mov	r10, rcx

; 649  :         _Newnode->_Parent = _Loc._Parent;

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [r8+8], rax

; 650  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

	cmp	rax, r11
	jne	SHORT $LN5@Insert_nod

; 651  :             _Head->_Left     = _Newnode;

	mov	QWORD PTR [r11], r8

; 712  :         return _Newnode;
; 713  :     }

	mov	rax, r8
	mov	QWORD PTR [r11+8], r8
	mov	QWORD PTR [r11+16], r8
	mov	BYTE PTR [r8+24], 1
	ret	0
$LN5@Insert_nod:

; 652  :             _Head->_Parent   = _Newnode;
; 653  :             _Head->_Right    = _Newnode;
; 654  :             _Newnode->_Color = _Black; // the root is black
; 655  :             return _Newnode;
; 656  :         }
; 657  : 
; 658  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 659  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

	cmp	DWORD PTR [rdx+8], 0
	jne	SHORT $LN6@Insert_nod

; 660  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 661  :             _Loc._Parent->_Right = _Newnode;

	mov	QWORD PTR [rax+16], r9

; 662  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

	cmp	rax, QWORD PTR [r11+16]
	jne	SHORT $LN9@Insert_nod

; 663  :                 _Head->_Right = _Newnode;

	mov	QWORD PTR [r11+16], r9

; 664  :             }
; 665  :         } else { // add to left of _Loc._Parent

	jmp	SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 666  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 667  :             _Loc._Parent->_Left = _Newnode;

	mov	QWORD PTR [rax], r9

; 668  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

	cmp	rax, QWORD PTR [r11]
	jne	SHORT $LN9@Insert_nod

; 669  :                 _Head->_Left = _Newnode;

	mov	QWORD PTR [r11], r9
$LN9@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

	mov	rcx, QWORD PTR [r8+8]
	mov	rax, r9
	cmp	BYTE PTR [rcx+24], 0
	jne	$LN3@Insert_nod
	npad	1
$LL2@Insert_nod:

; 674  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

	mov	rdx, QWORD PTR [rax+8]
	mov	r8, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [r8]
	cmp	rdx, rcx
	jne	$LN10@Insert_nod

; 675  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

	mov	rcx, QWORD PTR [r8+16]

; 676  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

	cmp	BYTE PTR [rcx+24], 0
	jne	SHORT $LN12@Insert_nod

; 677  :                     _Pnode->_Parent->_Color          = _Black;

	mov	BYTE PTR [rdx+24], 1

; 678  :                     _Parent_sibling->_Color          = _Black;

	mov	BYTE PTR [rcx+24], 1

; 679  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	mov	BYTE PTR [rdx+24], 0

; 680  :                     _Pnode                           = _Pnode->_Parent->_Parent;

	mov	rcx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rcx+8]

; 681  :                 } else { // parent's sibling has red and black children

	jmp	$LN46@Insert_nod
$LN12@Insert_nod:

; 682  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

	mov	r8, QWORD PTR [rdx+16]
	cmp	rax, r8
	jne	SHORT $LN51@Insert_nod

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	rcx, QWORD PTR [r8]

; 683  :                         _Pnode = _Pnode->_Parent;

	mov	rax, rdx

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	QWORD PTR [rdx+16], rcx

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [r8]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN20@Insert_nod

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

	mov	QWORD PTR [rcx+8], rdx
$LN20@Insert_nod:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rcx

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rcx, QWORD PTR [r10]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN21@Insert_nod

; 471  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rcx+8], r8
	jmp	SHORT $LN24@Insert_nod
$LN21@Insert_nod:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

	mov	rcx, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rcx]
	jne	SHORT $LN23@Insert_nod

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rcx], r8

; 474  :         } else {

	jmp	SHORT $LN24@Insert_nod
$LN23@Insert_nod:

; 475  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rcx+16], r8
$LN24@Insert_nod:

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

	mov	QWORD PTR [r8], rdx

; 479  :         _Wherenode->_Parent = _Pnode;

	mov	QWORD PTR [rdx+8], r8
$LN51@Insert_nod:

; 684  :                         _Lrotate(_Pnode);
; 685  :                     }
; 686  : 
; 687  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+24], 1

; 688  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	mov	BYTE PTR [rdx+24], 0

; 689  :                     _Rrotate(_Pnode->_Parent->_Parent);

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]

; 483  :         _Nodeptr _Pnode   = _Wherenode->_Left;

	mov	r8, QWORD PTR [rdx]

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	rcx, QWORD PTR [r8+16]
	mov	QWORD PTR [rdx], rcx

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

	mov	rcx, QWORD PTR [r8+16]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN27@Insert_nod

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

	mov	QWORD PTR [rcx+8], rdx
$LN27@Insert_nod:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rcx

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rcx, QWORD PTR [r10]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN28@Insert_nod

; 493  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rcx+8], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [r8+16], rdx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

	jmp	$LN53@Insert_nod
$LN28@Insert_nod:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

	mov	rcx, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rcx+16]
	jne	SHORT $LN30@Insert_nod

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rcx+16], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [r8+16], rdx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

	jmp	$LN53@Insert_nod
$LN30@Insert_nod:

; 497  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rcx], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [r8+16], rdx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

	jmp	$LN53@Insert_nod
$LN10@Insert_nod:

; 692  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 693  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

	cmp	BYTE PTR [rcx+24], 0
	jne	SHORT $LN15@Insert_nod

; 694  :                     _Pnode->_Parent->_Color          = _Black;

	mov	BYTE PTR [rdx+24], 1

; 695  :                     _Parent_sibling->_Color          = _Black;

	mov	BYTE PTR [rcx+24], 1

; 696  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	mov	BYTE PTR [rdx+24], 0

; 697  :                     _Pnode                           = _Pnode->_Parent->_Parent;

	mov	rcx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rcx+8]

; 698  :                 } else { // parent's sibling has red and black children

	jmp	$LN46@Insert_nod
$LN15@Insert_nod:

; 699  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

	mov	r8, QWORD PTR [rdx]
	cmp	rax, r8
	jne	SHORT $LN39@Insert_nod

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	rcx, QWORD PTR [r8+16]

; 700  :                         _Pnode = _Pnode->_Parent;

	mov	rax, rdx

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	QWORD PTR [rdx], rcx

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

	mov	rcx, QWORD PTR [r8+16]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN34@Insert_nod

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

	mov	QWORD PTR [rcx+8], rdx
$LN34@Insert_nod:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rcx

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rcx, QWORD PTR [r10]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN35@Insert_nod

; 493  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rcx+8], r8
	jmp	SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

	mov	rcx, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rcx+16]
	jne	SHORT $LN37@Insert_nod

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rcx+16], r8

; 496  :         } else {

	jmp	SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 497  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rcx], r8
$LN38@Insert_nod:

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [r8+16], rdx

; 501  :         _Wherenode->_Parent = _Pnode;

	mov	QWORD PTR [rdx+8], r8
$LN39@Insert_nod:

; 701  :                         _Rrotate(_Pnode);
; 702  :                     }
; 703  : 
; 704  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+24], 1

; 705  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	mov	BYTE PTR [rdx+24], 0

; 706  :                     _Lrotate(_Pnode->_Parent->_Parent);

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]

; 461  :         _Nodeptr _Pnode    = _Wherenode->_Right;

	mov	r8, QWORD PTR [rdx+16]

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	rcx, QWORD PTR [r8]
	mov	QWORD PTR [rdx+16], rcx

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [r8]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN41@Insert_nod

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

	mov	QWORD PTR [rcx+8], rdx
$LN41@Insert_nod:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rcx

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rcx, QWORD PTR [r10]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN42@Insert_nod

; 471  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rcx+8], r8
	jmp	SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

	mov	rcx, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rcx]
	jne	SHORT $LN44@Insert_nod

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rcx], r8

; 474  :         } else {

	jmp	SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 475  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rcx+16], r8
$LN45@Insert_nod:

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

	mov	QWORD PTR [r8], rdx
$LN53@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

	mov	QWORD PTR [rdx+8], r8
$LN46@Insert_nod:
	mov	rcx, QWORD PTR [rax+8]
	cmp	BYTE PTR [rcx+24], 0
	je	$LL2@Insert_nod
$LN3@Insert_nod:

; 707  :                 }
; 708  :             }
; 709  :         }
; 710  : 
; 711  :         _Head->_Parent->_Color = _Black; // root is always black

	mov	rax, QWORD PTR [r11+8]
	mov	BYTE PTR [rax+24], 1

; 712  :         return _Newnode;
; 713  :     }

	mov	rax, r9
	ret	0
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Check_grow_by_1, COMDAT

; 1630 :     void _Check_grow_by_1() {

$LN7:
	sub	rsp, 40					; 00000028H

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 177372539170284150			; 0276276276276276H
	cmp	QWORD PTR [rcx+8], rax
	je	SHORT $LN6@Check_grow

; 1633 :         }
; 1634 :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN6@Check_grow:

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN4@Check_grow:
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Check_grow_by_1
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Count$dead$ = 16
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >::allocate, COMDAT

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	jmp	??2@YAPEAX_K@Z				; operator new
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 1156 :         if (_Ptr) {

	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN10@Tree_temp_

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN10@Tree_temp_:
	ret	0
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__param0$ = 16
__param1$dead$ = 24
??0?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 1156 :         if (_Ptr) {

	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN8@Alloc_cons

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN8@Alloc_cons:

; 1157 :             _Al.deallocate(_Ptr, 1);
; 1158 :         }
; 1159 :     }

	ret	0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Swap_val@?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?_Swap_val@?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_val<std::_Simple_types<crude_json::value> >::_Swap_val, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 403  :     _CONSTEXPR20 void _Swap_val(_Vector_val& _Right) noexcept {

	mov	r9, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	r8, QWORD PTR [rcx]

; 100  :     _Left    = _STD move(_Right);

	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx], r8

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	r8, QWORD PTR [rcx+8]

; 100  :     _Left    = _STD move(_Right);

	mov	QWORD PTR [rcx+8], rax
	mov	rax, QWORD PTR [r9+16]

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx+8], r8

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	rdx, QWORD PTR [rcx+16]

; 100  :     _Left    = _STD move(_Right);

	mov	QWORD PTR [rcx+16], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [r9+16], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 408  :     }

	ret	0
?_Swap_val@?$_Vector_val@U?$_Simple_types@Uvalue@crude_json@@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_val<std::_Simple_types<crude_json::value> >::_Swap_val
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Buy_raw@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_raw@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Buy_raw, COMDAT

; 1979 :     _CONSTEXPR20 void _Buy_raw(const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 1980 :         // allocate array with _Newcapacity elements
; 1981 :         auto& _My_data    = _Mypair._Myval2;
; 1982 :         pointer& _Myfirst = _My_data._Myfirst;
; 1983 :         pointer& _Mylast  = _My_data._Mylast;
; 1984 :         pointer& _Myend   = _My_data._Myend;
; 1985 : 
; 1986 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1987 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1988 : 
; 1989 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	call	?allocate@?$allocator@Uvalue@crude_json@@@std@@QEAAPEAUvalue@crude_json@@_K@Z ; std::allocator<crude_json::value>::allocate

; 1990 :         _Myfirst           = _Newvec;

	mov	QWORD PTR [rdi], rax

; 1991 :         _Mylast            = _Newvec;
; 1992 :         _Myend             = _Newvec + _Newcapacity;

	lea	rdx, QWORD PTR [rbx+rbx*4]

; 1993 :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+8], rax
	lea	rax, QWORD PTR [rax+rdx*8]
	mov	QWORD PTR [rdi+16], rax
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Buy_raw@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$dead$ = 16
?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Orphan_ptr, COMDAT

; 716  : #if _ITERATOR_DEBUG_LEVEL == 2
; 717  :         _Lockit _Lock(_LOCK_DEBUG);
; 718  :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;
; 719  :         while (*_Pnext) {
; 720  :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;
; 721  :             if (_Pnextptr == _Myhead || (_Ptr != nullptr && _Pnextptr != _Ptr)) {
; 722  :                 _Pnext = &(*_Pnext)->_Mynextiter;
; 723  :             } else { // orphan the iterator
; 724  :                 (*_Pnext)->_Myproxy = nullptr;
; 725  :                 *_Pnext             = (*_Pnext)->_Mynextiter;
; 726  :             }
; 727  :         }
; 728  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 729  :         (void) _Ptr;
; 730  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 731  :     }

	ret	0
?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Orphan_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@@Z
_TEXT	SEGMENT
this$ = 8
_Wherenode$ = 16
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Rrotate, COMDAT

; 483  :         _Nodeptr _Pnode   = _Wherenode->_Left;

	mov	r8, QWORD PTR [rdx]

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	rax, QWORD PTR [r8+16]
	mov	QWORD PTR [rdx], rax

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [r8+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN2@Rrotate

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

	mov	QWORD PTR [rax+8], rdx
$LN2@Rrotate:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rax

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rax, QWORD PTR [rcx]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN3@Rrotate

; 493  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rax+8], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;
; 501  :         _Wherenode->_Parent = _Pnode;
; 502  :     }

	mov	QWORD PTR [r8+16], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
$LN3@Rrotate:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN5@Rrotate

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rax+16], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;
; 501  :         _Wherenode->_Parent = _Pnode;
; 502  :     }

	mov	QWORD PTR [r8+16], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
$LN5@Rrotate:

; 496  :         } else {
; 497  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rax], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;
; 501  :         _Wherenode->_Parent = _Pnode;
; 502  :     }

	mov	QWORD PTR [r8+16], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@@Z
_TEXT	SEGMENT
this$ = 8
_Wherenode$ = 16
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Lrotate, COMDAT

; 461  :         _Nodeptr _Pnode    = _Wherenode->_Right;

	mov	r8, QWORD PTR [rdx+16]

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx+16], rax

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN2@Lrotate

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

	mov	QWORD PTR [rax+8], rdx
$LN2@Lrotate:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rax

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rax, QWORD PTR [rcx]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN3@Lrotate

; 471  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rax+8], r8

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;
; 479  :         _Wherenode->_Parent = _Pnode;
; 480  :     }

	mov	QWORD PTR [r8], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
$LN3@Lrotate:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rax]
	jne	SHORT $LN5@Lrotate

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rax], r8

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;
; 479  :         _Wherenode->_Parent = _Pnode;
; 480  :     }

	mov	QWORD PTR [r8], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
$LN5@Lrotate:

; 474  :         } else {
; 475  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rax+16], r8

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;
; 479  :         _Wherenode->_Parent = _Pnode;
; 480  :     }

	mov	QWORD PTR [r8], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?swap@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?swap@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::swap, COMDAT

; 1486 :         using _STD swap;
; 1487 :         if (this != _STD addressof(_Right)) {

	cmp	rcx, rdx
	je	SHORT $LN2@swap
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
	mov	r8, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [rdx+8]

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx], r8

; 99   :     _Ty _Tmp = _STD move(_Left);

	mov	r8, QWORD PTR [rcx+8]

; 100  :     _Left    = _STD move(_Right);

	mov	QWORD PTR [rcx+8], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx+8], r8
$LN2@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1492 :     }

	ret	0
?swap@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::swap
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::max_size, COMDAT

; 1198 :         return (_STD min)(

	mov	rax, 177372539170284150			; 0276276276276276H

; 1199 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alnode_traits::max_size(_Getal()));
; 1200 :     }

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@PEAU32@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@PEAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Max, COMDAT

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rdx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN9@Max
	npad	6
$LL2@Max:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rax, rdx
	mov	rdx, QWORD PTR [rdx+16]
	cmp	BYTE PTR [rdx+25], 0
	je	SHORT $LL2@Max

; 450  :     }

	ret	0
$LN9@Max:

; 447  :         }
; 448  : 
; 449  :         return _Pnode;

	mov	rax, rcx

; 450  :     }

	ret	0
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@PEAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Max
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getcomp, COMDAT

; 1953 :         return _Mypair._Get_first();

	mov	rax, rcx

; 1954 :     }

	ret	0
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 177372539170284150			; 0276276276276276H

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@2@$00@std@@QEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$swap@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$0A@@std@@YAXAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z
_TEXT	SEGMENT
_Left$dead$ = 8
_Right$dead$ = 16
??$swap@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$0A@@std@@YAXAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z PROC ; std::swap<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0>, COMDAT

; 99   :     _Ty _Tmp = _STD move(_Left);
; 100  :     _Left    = _STD move(_Right);
; 101  :     _Right   = _STD move(_Tmp);
; 102  : }

	ret	0
??$swap@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@$0A@@std@@YAXAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z ENDP ; std::swap<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1><std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1><std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 32
_Loc$1$ = 64
$T3 = 64
$T4 = 80
this$ = 176
__$ReturnUdt$ = 184
<_Vals_0>$ = 192
<_Vals_1>$ = 200
??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>, COMDAT

; 995  :     pair<_Nodeptr, bool> _Emplace(_Valtys&&... _Vals) {

$LN315:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 104				; 00000068H
	mov	r12, r9
	mov	rsi, r8
	mov	r14, rdx
	mov	r15, rcx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbp, QWORD PTR [rcx]
	mov	rbx, QWORD PTR [rbp+8]
	mov	QWORD PTR $T2[rsp], rbx
	xor	r13d, r13d
	mov	DWORD PTR $T2[rsp+8], r13d
	mov	rdi, rbp
	mov	QWORD PTR $T2[rsp+16], rbp

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r13b
	jne	SHORT $LN7@Emplace
	npad	1
$LL6@Emplace:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR $T2[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN8@Emplace

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR $T2[rsp+8], r13d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN9@Emplace
$LN8@Emplace:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR $T2[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN9@Emplace:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r13b
	je	SHORT $LL6@Emplace

; 1622 :                 _Result._Bound           = _Trynode;

	mov	QWORD PTR $T2[rsp+16], rdi
$LN7@Emplace:

; 996  :         using _In_place_key_extractor = typename _Traits::template _In_place_key_extractor<_Remove_cvref_t<_Valtys>...>;
; 997  :         const auto _Scary             = _Get_scary();
; 998  :         _Tree_find_result<_Nodeptr> _Loc;
; 999  :         _Nodeptr _Inserted;
; 1000 :         if constexpr (!_Multi && _In_place_key_extractor::_Extractable) {
; 1001 :             const auto& _Keyval = _In_place_key_extractor::_Extract(_Vals...);
; 1002 :             _Loc                = _Find_lower_bound(_Keyval);

	movups	xmm0, XMMWORD PTR $T2[rsp]
	movups	XMMWORD PTR _Loc$1$[rsp], xmm0
	movsd	xmm0, QWORD PTR $T2[rsp+16]
	movsd	QWORD PTR _Loc$[rsp+16], xmm0

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r13b
	jne	SHORT $LN2@Emplace
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN2@Emplace
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [r14], rdi
	mov	BYTE PTR [r14+8], r13b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1004 :                 return {_Loc._Bound, false};

	jmp	$LN311@Emplace
$LN2@Emplace:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 177372539170284150			; 0276276276276276H
	cmp	QWORD PTR [r15+8], rax
	je	$LN313@Emplace
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T1[rsp], r15

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T1[rsp+8], r13

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T1[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 807  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	lea	rcx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T4[rsp], rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR [rcx+16], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rcx+24], r13

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rsi]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rsi+16]
	movups	XMMWORD PTR [rcx+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [rsi+16], r13
	mov	QWORD PTR [rsi+24], 15
	mov	BYTE PTR [rsi], 0
	add	rcx, 32					; 00000020H
	mov	rdx, r12
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rbx], rbp

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rbx+8], rbp

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rbx+16], rbp

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rbx+24], 0

; 1005 :             }
; 1006 : 
; 1007 :             _Check_grow_by_1();
; 1008 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();
; 1009 :             // nothrow hereafter
; 1010 :         } else {
; 1011 :             _Tree_temp_node<_Alnode> _Newnode(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...);
; 1012 :             const auto& _Keyval = _Traits::_Kfn(_Newnode._Ptr->_Myval);
; 1013 :             if constexpr (_Multi) { // duplicate check if unique
; 1014 :                 _Loc = _Find_upper_bound(_Keyval);
; 1015 :             } else {
; 1016 :                 _Loc = _Find_lower_bound(_Keyval);
; 1017 :                 if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {
; 1018 :                     return {_Loc._Bound, false};
; 1019 :                 }
; 1020 :             }
; 1021 : 
; 1022 :             _Check_grow_by_1();
; 1023 :             // nothrow hereafter
; 1024 :             _Inserted = _Newnode._Release();
; 1025 :         }
; 1026 : 
; 1027 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$1$[rsp]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	mov	r8, rbx
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, r15
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Insert_node
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [r14], rax
	mov	BYTE PTR [r14+8], 1
$LN311@Emplace:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1028 :     }

	mov	rax, r14
	add	rsp, 104				; 00000068H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN313@Emplace:

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN310@Emplace:
??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 32
_Loc$1$ = 64
$T3 = 64
$T4 = 80
this$ = 176
__$ReturnUdt$ = 184
<_Vals_0>$ = 192
<_Vals_1>$ = 200
?dtor$2@?0???$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$2
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$2@?0???$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 32
_Loc$1$ = 64
$T3 = 64
$T4 = 80
this$ = 176
__$ReturnUdt$ = 184
<_Vals_0>$ = 192
<_Vals_1>$ = 200
?dtor$1@?0???$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$1
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$1@?0???$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 32
_Loc$1$ = 64
$T3 = 64
$T4 = 80
this$ = 176
__$ReturnUdt$ = 184
<_Vals_0>$ = 192
<_Vals_1>$ = 200
?dtor$3@?0???$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$3
	mov	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0???$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@1@AEB_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@1@AEB_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >,bool const &,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@1@AEB_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > >,bool const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z
_TEXT	SEGMENT
this$ = 48
<_Val_0>$ = 56
??$_Emplace_back_with_unused_capacity@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_back_with_unused_capacity<crude_json::value>, COMDAT

; 789  :     _CONSTEXPR20 _Ty& _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR [rcx+8]
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 805  :         _Ty& _Result = *_Mylast;

	mov	rax, QWORD PTR [rbx+8]

; 806  :         ++_Mylast;

	lea	rdx, QWORD PTR [rax+40]
	mov	QWORD PTR [rbx+8], rdx

; 807  : 
; 808  :         return _Result;
; 809  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Emplace_back_with_unused_capacity@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAAEAUvalue@crude_json@@$$QEAU23@@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_back_with_unused_capacity<crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z
_TEXT	SEGMENT
_Newvec$ = 32
_Constructed_first$ = 112
this$ = 112
_Newcapacity$ = 120
_Whereptr$ = 120
<_Val_0>$ = 128
_Constructed_last$ = 136
??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z PROC ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_reallocate<crude_json::value>, COMDAT

; 812  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN25:
	mov	QWORD PTR [rsp+24], r8
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
	mov	r12, rdx
	mov	rdi, rcx

; 813  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 814  :         _Alty& _Al        = _Getal();
; 815  :         auto& _My_data    = _Mypair._Myval2;
; 816  :         pointer& _Myfirst = _My_data._Myfirst;
; 817  :         pointer& _Mylast  = _My_data._Mylast;
; 818  : 
; 819  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 820  : 
; 821  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

	mov	r10, QWORD PTR [rcx]
	mov	r9, rdx
	sub	r9, r10
	mov	rax, 7378697629483820647		; 6666666666666667H
	imul	r9
	mov	r14, rdx
	sar	r14, 4
	mov	rax, r14
	shr	rax, 63					; 0000003fH
	add	r14, rax

; 822  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r13, QWORD PTR [rcx+8]
	sub	r13, r10
	sar	r13, 3
	mov	rax, -3689348814741910323		; cccccccccccccccdH
	imul	r13, rax

; 823  : 
; 824  :         if (_Oldsize == max_size()) {

	mov	rbx, 461168601842738790			; 0666666666666666H
	cmp	r13, rbx
	je	$LN24@Emplace_re

; 826  :         }
; 827  : 
; 828  :         const size_type _Newsize     = _Oldsize + 1;

	inc	r13

; 1879 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rcx+16]
	sub	rcx, r10
	sar	rcx, 3
	imul	rcx, rax

; 1966 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	rdx, rcx
	shr	rdx, 1
	mov	rax, rbx
	sub	rax, rdx
	cmp	rcx, rax
	ja	SHORT $LN22@Emplace_re

; 1967 :             return _Max; // geometric growth would overflow
; 1968 :         }
; 1969 : 
; 1970 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	lea	rbx, QWORD PTR [rdx+rcx]

; 1971 : 
; 1972 :         if (_Geometric < _Newsize) {

	cmp	rbx, r13
	cmovb	rbx, r13
$LN22@Emplace_re:

; 829  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 830  : 
; 831  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

	mov	QWORD PTR _Newcapacity$[rsp], rbx
	mov	rdx, rbx
	call	?allocate@?$allocator@Uvalue@crude_json@@@std@@QEAAPEAUvalue@crude_json@@_K@Z ; std::allocator<crude_json::value>::allocate
	mov	rsi, rax
	mov	QWORD PTR _Newvec$[rsp], rax

; 832  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

	lea	rcx, QWORD PTR [r14+r14*4]
	lea	r14, QWORD PTR [rax+rcx*8]
	lea	r15, QWORD PTR [r14+40]
	mov	QWORD PTR _Constructed_last$[rsp], r15

; 833  :         pointer _Constructed_first      = _Constructed_last;

	mov	QWORD PTR _Constructed_first$[rsp], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rdx, QWORD PTR <_Val_0>$[rsp]
	mov	rcx, r14
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 837  :         _Constructed_first = _Newvec + _Whereoff;

	mov	QWORD PTR _Constructed_first$[rsp], r14

; 838  : 
; 839  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

	mov	rdx, QWORD PTR [rdi+8]
	mov	rcx, QWORD PTR [rdi]
	mov	r9, rdi
	mov	r8, rsi
	cmp	r12, rdx
	jne	SHORT $LN4@Emplace_re

; 840  :             if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 841  :                 _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);
; 842  :             } else {
; 843  :                 _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);

	call	??$_Uninitialized_copy@PEAUvalue@crude_json@@PEAU12@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@PEAU12@00AEAV?$allocator@Uvalue@crude_json@@@0@@Z ; std::_Uninitialized_copy<crude_json::value *,crude_json::value *,std::allocator<crude_json::value> >

; 844  :             }
; 845  :         } else { // provide basic guarantee

	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 846  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);

	mov	rdx, r12
	call	??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z ; std::_Uninitialized_move<crude_json::value *,std::allocator<crude_json::value> >

; 847  :             _Constructed_first = _Newvec;

	mov	QWORD PTR _Constructed_first$[rsp], rsi

; 848  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

	mov	r9, rdi
	mov	r8, r15
	mov	rdx, QWORD PTR [rdi+8]
	mov	rcx, r12
	call	??$_Uninitialized_move@PEAUvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAPEAUvalue@crude_json@@QEAU12@0PEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z ; std::_Uninitialized_move<crude_json::value *,std::allocator<crude_json::value> >
	npad	1
$LN5@Emplace_re:

; 849  :         }
; 850  :         _CATCH_ALL
; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);
; 852  :         _Al.deallocate(_Newvec, _Newcapacity);
; 853  :         _RERAISE;
; 854  :         _CATCH_END
; 855  : 
; 856  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, rbx
	mov	r8, r13
	mov	rdx, rsi
	mov	rcx, rdi
	call	?_Change_array@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAXQEAUvalue@crude_json@@_K1@Z ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Change_array

; 857  :         return _Newvec + _Whereoff;

	mov	rax, r14

; 858  :     }

	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
$LN24@Emplace_re:

; 825  :             _Xlength();

	call	?_Xlength@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@CAXXZ ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Xlength
	int	3
$LN21@Emplace_re:
??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z ENDP ; std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_reallocate<crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newvec$ = 32
_Constructed_first$ = 112
this$ = 112
_Newcapacity$ = 120
_Whereptr$ = 120
<_Val_0>$ = 128
_Constructed_last$ = 136
?catch$0@?0???$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z@4HA PROC ; `std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_reallocate<crude_json::value>'::`1'::catch$0

; 850  :         _CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z$0:

; 851  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);

	mov	rdx, QWORD PTR _Constructed_last$[rbp]
	mov	rcx, QWORD PTR _Constructed_first$[rbp]
	call	??$_Destroy_range@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXPEAUvalue@crude_json@@QEAU12@AEAV?$allocator@Uvalue@crude_json@@@0@@Z ; std::_Destroy_range<std::allocator<crude_json::value> >

; 852  :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	call	?deallocate@?$allocator@Uvalue@crude_json@@@std@@QEAAXQEAUvalue@crude_json@@_K@Z ; std::allocator<crude_json::value>::deallocate

; 853  :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$0@?0???$_Emplace_reallocate@Uvalue@crude_json@@@?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@AEAAPEAUvalue@crude_json@@QEAU23@$$QEAU23@@Z@4HA ENDP ; `std::vector<crude_json::value,std::allocator<crude_json::value> >::_Emplace_reallocate<crude_json::value>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAPEAUvalue@crude_json@@@std@@YA$$QEAPEAUvalue@crude_json@@AEAPEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAPEAUvalue@crude_json@@@std@@YA$$QEAPEAUvalue@crude_json@@AEAPEAU12@@Z PROC ; std::move<crude_json::value * &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAPEAUvalue@crude_json@@@std@@YA$$QEAPEAUvalue@crude_json@@AEAPEAU12@@Z ENDP ; std::move<crude_json::value * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEBQEAUvalue@crude_json@@@std@@YAAEBQEAUvalue@crude_json@@AEBQEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBQEAUvalue@crude_json@@@std@@YAAEBQEAUvalue@crude_json@@AEBQEAU12@@Z PROC ; std::forward<crude_json::value * const &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEBQEAUvalue@crude_json@@@std@@YAAEBQEAUvalue@crude_json@@AEBQEAU12@@Z ENDP ; std::forward<crude_json::value * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@AEAUvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAXAEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
this$ = 48
<_Vals_0>$ = 56
??$_Emplace_back@AEAUvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAXAEAUvalue@crude_json@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::_Emplace_back<crude_json::value &>, COMDAT

; 1801 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN76:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR [rcx+8]
	call	??0value@crude_json@@QEAA@AEBU01@@Z	; crude_json::value::value
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rbx+8], 40			; 00000028H

; 1804 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Emplace_back@AEAUvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAXAEAUvalue@crude_json@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::_Emplace_back<crude_json::value &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Emplace_back@Uvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
this$ = 48
<_Vals_0>$ = 56
??$_Emplace_back@Uvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::_Emplace_back<crude_json::value>, COMDAT

; 1801 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR [rcx+8]
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1803 :         ++_Last;

	add	QWORD PTR [rbx+8], 40			; 00000028H

; 1804 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Emplace_back@Uvalue@crude_json@@@?$_Uninitialized_backout_al@V?$allocator@Uvalue@crude_json@@@std@@@std@@QEAAX$$QEAUvalue@crude_json@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<crude_json::value> >::_Emplace_back<crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@Uvalue@crude_json@@@std@@YAPEAUvalue@crude_json@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@Uvalue@crude_json@@@std@@YAPEAUvalue@crude_json@@PEAU12@@Z PROC ; std::_Unfancy<crude_json::value>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@Uvalue@crude_json@@@std@@YAPEAUvalue@crude_json@@PEAU12@@Z ENDP ; std::_Unfancy<crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@V?$allocator@Uvalue@crude_json@@@std@@@std@@YA$$QEAV?$allocator@Uvalue@crude_json@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@Uvalue@crude_json@@@std@@@std@@YA$$QEAV?$allocator@Uvalue@crude_json@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<crude_json::value> >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@V?$allocator@Uvalue@crude_json@@@std@@@std@@YA$$QEAV?$allocator@Uvalue@crude_json@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@PEAUvalue@crude_json@@@std@@YA$$QEAPEAUvalue@crude_json@@AEAPEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@PEAUvalue@crude_json@@@std@@YA$$QEAPEAUvalue@crude_json@@AEAPEAU12@@Z PROC ; std::forward<crude_json::value *>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@PEAUvalue@crude_json@@@std@@YA$$QEAPEAUvalue@crude_json@@AEAPEAU12@@Z ENDP ; std::forward<crude_json::value *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Keyval$ = 64
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1611 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

$LN20:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1612 :         const auto _Scary = _Get_scary();
; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rax, QWORD PTR [rcx]
	mov	rsi, r8
	mov	rdi, rdx
	mov	DWORD PTR [rdx+8], 0
	mov	QWORD PTR [rdx+16], rax
	mov	rbx, QWORD PTR [rax+8]
	mov	QWORD PTR [rdx], rbx

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN14@Find_lower
$LL2@Find_lower:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
	mov	QWORD PTR [rdi], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN4@Find_lower

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]
	xor	eax, eax

; 1620 :             } else {

	jmp	SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	QWORD PTR [rdi+16], rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	eax, 1
	mov	rbx, QWORD PTR [rbx]
$LN5@Find_lower:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	mov	DWORD PTR [rdi+8], eax
	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Find_lower
$LN14@Find_lower:

; 1624 :             }
; 1625 :         }
; 1626 : 
; 1627 :         return _Result;
; 1628 :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
this$dead$ = 48
_Bound$ = 56
_Keyval$ = 64
??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1606 :     bool _Lower_bound_duplicate(const _Nodeptr _Bound, const _Keyty& _Keyval) const {

$LN11:
	sub	rsp, 40					; 00000028H

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN3@Lower_boun
	add	rdx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, r8
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	js	SHORT $LN3@Lower_boun
	mov	al, 1

; 1608 :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@Lower_boun:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	xor	al, al

; 1608 :     }

	add	rsp, 40					; 00000028H
	ret	0
??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\tuple
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$dead$ = 88
<_Vals_1>$ = 96
<_Vals_2>$dead$ = 104
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >, COMDAT

; 806  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

$LN146:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, r8
	mov	rsi, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [rcx+8], 0

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR [rcx+8], 0

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR [rsi+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 807  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\tuple

; 366  :     tuple(tuple&&)      = default;

	mov	rdx, QWORD PTR <_Vals_1>$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [rdx]
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR [rbx+64], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	rcx, QWORD PTR [rsi+8]
	mov	QWORD PTR [rcx], rdi

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	rcx, QWORD PTR [rsi+8]
	mov	QWORD PTR [rcx+8], rdi

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	rcx, QWORD PTR [rsi+8]
	mov	QWORD PTR [rcx+16], rdi

; 811  :         this->_Ptr->_Color = _Red;

	mov	rcx, QWORD PTR [rsi+8]
	mov	BYTE PTR [rcx+24], 0
	mov	rcx, QWORD PTR [rsi+8]
	mov	BYTE PTR [rcx+25], 0

; 812  :         this->_Ptr->_Isnil = false;
; 813  :     }

	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$dead$ = 88
<_Vals_1>$ = 96
<_Vals_2>$dead$ = 104
?dtor$1@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$1@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$dead$ = 88
<_Vals_1>$ = 96
<_Vals_2>$dead$ = 104
?dtor$0@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$0@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$dead$ = 88
<_Vals_1>$ = 96
<_Vals_2>$dead$ = 104
?dtor$3@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$3
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * const &,bool,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * const &,bool,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy<0>, COMDAT

; 1637 :     void _Copy(const _Tree& _Right) { // copy or move entire tree from _Right

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1638 :         const auto _Scary        = _Get_scary();
; 1639 :         const auto _Right_scary  = _Right._Get_scary();
; 1640 :         _Scary->_Myhead->_Parent = _Copy_nodes<_Strat>(_Right_scary->_Myhead->_Parent, _Scary->_Myhead);

	mov	r8, QWORD PTR [rcx]
	mov	rbx, rdx
	mov	rdx, QWORD PTR [rdx]
	mov	rdi, rcx
	mov	rdx, QWORD PTR [rdx+8]
	call	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>
	mov	r8, QWORD PTR [rdi]
	mov	QWORD PTR [r8+8], rax

; 1641 :         _Scary->_Mysize          = _Right_scary->_Mysize;
; 1642 :         if (!_Scary->_Myhead->_Parent->_Isnil) { // nonempty tree, look for new smallest and largest

	mov	r8, QWORD PTR [rdi]
	mov	rax, QWORD PTR [rbx+8]
	mov	QWORD PTR [rdi+8], rax
	mov	rdx, QWORD PTR [r8+8]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN2@Copy

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [rdx]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN7@Copy
	npad	12
$LL6@Copy:
	mov	rax, QWORD PTR [rcx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	rdx, rcx
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL6@Copy
$LN7@Copy:

; 1643 :             _Scary->_Myhead->_Left  = _Scary_val::_Min(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [r8], rdx

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	rdx, QWORD PTR [rdi]
	mov	rcx, QWORD PTR [rdx+8]

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN11@Copy
$LL10@Copy:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rcx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL10@Copy
$LN11@Copy:

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [rdx+16], rcx

; 1645 :         } else { // empty tree, just tidy head pointers
; 1646 :             _Scary->_Myhead->_Left  = _Scary->_Myhead;
; 1647 :             _Scary->_Myhead->_Right = _Scary->_Myhead;
; 1648 :         }
; 1649 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Copy:
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [r8], r8
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rax+16], rax
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy<0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z
_TEXT	SEGMENT
this$ = 80
_Al$ = 88
_Rootnode$ = 96
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

$LN125:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	r14, rdx
	mov	rbp, rcx

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [r8+25], 0
	jne	SHORT $LN3@Erase_tree
	npad	5
$LL2@Erase_tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, r14
	mov	rcx, rbp
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rsi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
	lea	rcx, QWORD PTR [rsi+64]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rcx+32]
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rsi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Erase_tree
$LN3@Erase_tree:

; 747  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 748  :         }
; 749  :     }

	add	rsp, 32					; 00000020H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??$_Traits_find_first_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z
_TEXT	SEGMENT
_Haystack$ = 48
_Hay_size$ = 56
_Start_at$dead$ = 64
_Needle$dead$ = 72
_Needle_size$ = 80
??$_Traits_find_first_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z PROC ; std::_Traits_find_first_of<std::char_traits<char>,0>, COMDAT

; 717  :     const size_t _Needle_size) noexcept {

$LN21:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 718  :     // in [_Haystack, _Haystack + _Hay_size), look for one of [_Needle, _Needle + _Needle_size), at/after _Start_at
; 719  :     if (_Needle_size != 0 && _Start_at < _Hay_size) { // room for match, look for it

	mov	rbp, QWORD PTR _Needle_size$[rsp]
	mov	rsi, rcx
	test	rbp, rbp
	je	SHORT $LN3@Traits_fin
	test	rdx, rdx
	je	SHORT $LN3@Traits_fin

; 720  :         if constexpr (_Special) {
; 721  :             _String_bitmap<typename _Traits::char_type> _Matches;
; 722  :             if (!_Matches._Mark(_Needle, _Needle + _Needle_size)) { // couldn't put one of the characters into the
; 723  :                                                                     // bitmap, fall back to the serial algorithm
; 724  :                 return _Traits_find_first_of<_Traits, false>(_Haystack, _Hay_size, _Start_at, _Needle, _Needle_size);
; 725  :             }
; 726  : 
; 727  :             const auto _End = _Haystack + _Hay_size;
; 728  :             for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {
; 729  :                 if (_Matches._Match(*_Match_try)) {
; 730  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match
; 731  :                 }
; 732  :             }
; 733  :         } else {
; 734  :             const auto _End = _Haystack + _Hay_size;

	lea	rdi, QWORD PTR [rcx+rdx]

; 735  :             for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

	mov	rbx, rcx
	cmp	rcx, rdi
	jae	SHORT $LN3@Traits_fin
$LL4@Traits_fin:

; 421  :             return __builtin_char_memchr(_First, _Ch, _Count);

	movsx	edx, BYTE PTR [rbx]
	lea	rcx, OFFSET FLAT:??_C@_07PBJOHOHP@?$CC?2?1?$AI?$AM?6?$AN@
	mov	r8, rbp
	call	memchr

; 736  :                 if (_Traits::find(_Needle, _Needle_size, *_Match_try)) {

	test	rax, rax
	jne	SHORT $LN11@Traits_fin

; 735  :             for (auto _Match_try = _Haystack + _Start_at; _Match_try < _End; ++_Match_try) {

	inc	rbx
	cmp	rbx, rdi
	jb	SHORT $LL4@Traits_fin
$LN3@Traits_fin:

; 738  :                 }
; 739  :             }
; 740  :         }
; 741  :     }
; 742  : 
; 743  :     return static_cast<size_t>(-1); // no match

	mov	rax, -1
$LN1@Traits_fin:

; 744  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN11@Traits_fin:

; 737  :                     return static_cast<size_t>(_Match_try - _Haystack); // found a match

	sub	rbx, rsi
	mov	rax, rbx
	jmp	SHORT $LN1@Traits_fin
??$_Traits_find_first_of@U?$char_traits@D@std@@$0A@@std@@YA_KQEBD_K101@Z ENDP ; std::_Traits_find_first_of<std::char_traits<char>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z PROC ; std::destroy_at<crude_json::value>, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN272:
	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rcx+32]
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 40					; 00000028H
	ret	0
??$destroy_at@Uvalue@crude_json@@@std@@YAXQEAUvalue@crude_json@@@Z ENDP ; std::destroy_at<crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEBQEAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * const &>, COMDAT

; 248  : #if _HAS_CXX20
; 249  :     if (_STD is_constant_evaluated()) {
; 250  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 251  :     } else
; 252  : #endif // _HAS_CXX20
; 253  :     {
; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 255  :     }
; 256  : }

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	ret	0
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEBQEAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::move<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::move<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *>, COMDAT

; 305  :     if constexpr (is_array_v<_Ty>) {
; 306  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 307  :     } else {
; 308  :         _Obj.~_Ty();
; 309  :     }
; 310  : }

	ret	0
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@AEAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@AEAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN117:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	lea	rcx, QWORD PTR [rdx+32]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rcx+32]
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::nullptr_t>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@YAPEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@YAPEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::vector<crude_json::value,std::allocator<crude_json::value> > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@std@@@std@@YAPEAV?$vector@Uvalue@crude_json@@V?$allocator@Uvalue@crude_json@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::vector<crude_json::value,std::allocator<crude_json::value> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Pocs@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXAEAV?$allocator@Uvalue@crude_json@@@0@0@Z
_TEXT	SEGMENT
_Left$dead$ = 8
_Right$dead$ = 16
??$_Pocs@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXAEAV?$allocator@Uvalue@crude_json@@@0@0@Z PROC ; std::_Pocs<std::allocator<crude_json::value> >, COMDAT

; 1074 :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_swap::value) {
; 1075 :         swap(_Left, _Right); // intentional ADL
; 1076 :     } else {
; 1077 :         _STL_ASSERT(_Left == _Right, "containers incompatible for swap");
; 1078 :     }
; 1079 : }

	ret	0
??$_Pocs@V?$allocator@Uvalue@crude_json@@@std@@@std@@YAXAEAV?$allocator@Uvalue@crude_json@@@0@0@Z ENDP ; std::_Pocs<std::allocator<crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Ptr$ = 56
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

$LN115:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	lea	rcx, QWORD PTR [rdx+64]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rcx+32]
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 384  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$swap@PEAUvalue@crude_json@@$0A@@std@@YAXAEAPEAUvalue@crude_json@@0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$swap@PEAUvalue@crude_json@@$0A@@std@@YAXAEAPEAUvalue@crude_json@@0@Z PROC ; std::swap<crude_json::value *,0>, COMDAT

; 99   :     _Ty _Tmp = _STD move(_Left);
; 100  :     _Left    = _STD move(_Right);

	mov	rax, QWORD PTR [rdx]
	mov	r8, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rax

; 101  :     _Right   = _STD move(_Tmp);

	mov	QWORD PTR [rdx], r8

; 102  : }

	ret	0
??$swap@PEAUvalue@crude_json@@$0A@@std@@YAXAEAPEAUvalue@crude_json@@0@Z ENDP ; std::swap<crude_json::value *,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@@std@@YAPEAV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@@std@@YAPEAV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@@std@@YAPEAV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Pocs@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@0@0@Z
_TEXT	SEGMENT
_Left$dead$ = 8
_Right$dead$ = 16
??$_Pocs@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@0@0@Z PROC ; std::_Pocs<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 1074 :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_swap::value) {
; 1075 :         swap(_Left, _Right); // intentional ADL
; 1076 :     } else {
; 1077 :         _STL_ASSERT(_Left == _Right, "containers incompatible for swap");
; 1078 :     }
; 1079 : }

	ret	0
??$_Pocs@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@0@0@Z ENDP ; std::_Pocs<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@Uvalue@crude_json@@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBV32@AEBUvalue@crude_json@@@Z
_TEXT	SEGMENT
_Val$ = 8
__formal$dead$ = 16
?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@Uvalue@crude_json@@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBV32@AEBUvalue@crude_json@@@Z PROC ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>::_Extract, COMDAT

; 2104 :         return _Val;

	mov	rax, rcx

; 2105 :     }

	ret	0
?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@Uvalue@crude_json@@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBV32@AEBUvalue@crude_json@@@Z ENDP ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>::_Extract
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al_$ = 56
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 785  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

$LN40:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR [rcx], rdx
	xor	eax, eax

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR [rcx+8], rax

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+104]
	call	??2@YAPEAX_K@Z				; operator new

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR [rbx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 787  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Al_$ = 56
?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z@4HA PROC ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z@4HA ENDP ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >, COMDAT

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::deallocate, COMDAT

; 701  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@QEAA@XZ PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Allocate, COMDAT

; 1150 :     _CONSTEXPR20 void _Allocate() { // disengage *this, then allocate a new memory block

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR [rcx+8], 0

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR [rbx+8], rax

; 1153 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al_$ = 16
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 0
	ret	0
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAU10@@Z PROC ; std::move<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AEAU10@@Z ENDP ; std::move<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 80
_Al_$ = 88
_Myhead$ = 96
<_Vals_0>$ = 104
<_Vals_1>$ = 112
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>, COMDAT

; 806  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

$LN95:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 48					; 00000030H
	mov	rdi, r9
	mov	rsi, r8
	mov	r14, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
	mov	rbx, QWORD PTR <_Vals_1>$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR [rcx], rdx
	xor	ebp, ebp

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR [rcx+8], rbp

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rbp+104]
	call	??2@YAPEAX_K@Z				; operator new

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR [r14+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 807  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	lea	rcx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR [rcx+16], rbp

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rcx+24], rbp

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rdi]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdi+16]
	movups	XMMWORD PTR [rcx+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [rdi+16], rbp
	mov	QWORD PTR [rdi+24], 15
	mov	BYTE PTR [rdi], bpl
	add	rcx, 32					; 00000020H
	mov	rdx, rbx
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	rcx, QWORD PTR [r14+8]
	mov	QWORD PTR [rcx], rsi

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	rcx, QWORD PTR [r14+8]
	mov	QWORD PTR [rcx+8], rsi

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	rcx, QWORD PTR [r14+8]
	mov	QWORD PTR [rcx+16], rsi

; 811  :         this->_Ptr->_Color = _Red;

	mov	rcx, QWORD PTR [r14+8]
	mov	BYTE PTR [rcx+24], bpl
	mov	rcx, QWORD PTR [r14+8]
	mov	BYTE PTR [rcx+25], bpl

; 812  :         this->_Ptr->_Isnil = false;
; 813  :     }

	mov	rax, r14
	mov	rbx, QWORD PTR [rsp+88]
	mov	rbp, QWORD PTR [rsp+96]
	add	rsp, 48					; 00000030H
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 80
_Al_$ = 88
_Myhead$ = 96
<_Vals_0>$ = 104
<_Vals_1>$ = 112
?dtor$1@?0???$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$1
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$1@?0???$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 80
_Al_$ = 88
_Myhead$ = 96
<_Vals_0>$ = 104
<_Vals_1>$ = 112
?dtor$0@?0???$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$0
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$0@?0???$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 80
_Al_$ = 88
_Myhead$ = 96
<_Vals_0>$ = 104
<_Vals_1>$ = 112
?dtor$2@?0???$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$2
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0???$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &,bool,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &,bool,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > > >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@Uvalue@crude_json@@U12@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@$$QEAU34@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@Uvalue@crude_json@@U12@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::construct<crude_json::value,crude_json::value>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rdx, r8
	jmp	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
??$construct@Uvalue@crude_json@@U12@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::construct<crude_json::value,crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEAUvalue@crude_json@@@std@@YAAEAUvalue@crude_json@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAUvalue@crude_json@@@std@@YAAEAUvalue@crude_json@@AEAU12@@Z PROC ; std::forward<crude_json::value &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEAUvalue@crude_json@@@std@@YAAEAUvalue@crude_json@@AEAU12@@Z ENDP ; std::forward<crude_json::value &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@Uvalue@crude_json@@AEAU12@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@AEAU34@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
<_Args_0>$ = 24
??$construct@Uvalue@crude_json@@AEAU12@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@AEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::construct<crude_json::value,crude_json::value &>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rdx, r8
	jmp	??0value@crude_json@@QEAA@AEBU01@@Z	; crude_json::value::value
??$construct@Uvalue@crude_json@@AEAU12@@?$_Default_allocator_traits@V?$allocator@Uvalue@crude_json@@@std@@@std@@SAXAEAV?$allocator@Uvalue@crude_json@@@1@QEAUvalue@crude_json@@AEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<crude_json::value> >::construct<crude_json::value,crude_json::value &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z PROC ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>, COMDAT

; 68   :         return _Val.first;

	mov	rax, rcx

; 69   :     }

	ret	0
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z ENDP ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$dead$ = 64
_Ptr$ = 72
<_Args_0>$dead$ = 80
<_Args_1>$ = 88
<_Args_2>$dead$ = 96
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN99:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [r9]
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR [rbx+64], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__formal$dead$ = 64
_Ptr$ = 72
<_Args_0>$dead$ = 80
<_Args_1>$ = 88
<_Args_2>$dead$ = 96
?dtor$1@?0???$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA PROC ; `std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$1
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA ENDP ; `std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@0@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &>, COMDAT

; 248  : #if _HAS_CXX20
; 249  :     if (_STD is_constant_evaluated()) {
; 250  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 251  :     } else
; 252  : #endif // _HAS_CXX20
; 253  :     {
; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 255  :     }
; 256  : }

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	ret	0
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEBQEAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * const &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEBQEAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z
_TEXT	SEGMENT
$T1 = 32
_Newroot$ = 32
this$GSCopy$ = 40
_Newnode$2 = 48
this$ = 112
_Rootnode$ = 120
_Wherenode$ = 128
??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>, COMDAT

; 1665 :     _Nodeptr _Copy_nodes(_Nodeptr _Rootnode, _Nodeptr _Wherenode) {

$LN91:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
	mov	r13, r8
	mov	r15, rdx
	mov	r14, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx

; 1666 :         // copy entire subtree, recursively
; 1667 :         const auto _Scary = _Get_scary();

	mov	r12, QWORD PTR [rcx]

; 1668 :         _Nodeptr _Newroot = _Scary->_Myhead; // point at nil node
; 1669 : 
; 1670 :         if (!_Rootnode->_Isnil) { // copy or move a node, then any subtrees

	cmp	BYTE PTR [rdx+25], 0
	jne	$LN8@Copy_nodes
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR _Newnode$2[rsp], rcx

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR _Newnode$2[rsp+8], 0

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rsi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR _Newnode$2[rsp+8], rax
	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 245  :     pair(const pair&) = default;

	lea	rdx, QWORD PTR [r15+32]
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [r15+64]
	call	??0value@crude_json@@QEAA@AEBU01@@Z	; crude_json::value::value
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 362  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

	mov	QWORD PTR [rsi], r12

; 363  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);
; 364  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);

	mov	QWORD PTR [rsi+16], r12

; 365  :         _Newnode._Ptr->_Color = _Red;

	mov	WORD PTR [rsi+24], 0

; 1671 :             _Nodeptr _Pnode = _Copy_or_move<_Strat>(_Rootnode->_Myval);
; 1672 :             _Pnode->_Parent = _Wherenode;

	mov	QWORD PTR [rsi+8], r13

; 1673 :             _Pnode->_Color  = _Rootnode->_Color;

	movzx	eax, BYTE PTR [r15+24]
	mov	BYTE PTR [rsi+24], al

; 1674 :             if (_Newroot->_Isnil) {

	cmp	BYTE PTR [r12+25], 0
	cmovne	r12, rsi
	mov	QWORD PTR _Newroot$[rsp], r12

; 1675 :                 _Newroot = _Pnode; // memorize new root
; 1676 :             }
; 1677 : 
; 1678 :             _TRY_BEGIN
; 1679 :             _Pnode->_Left  = _Copy_nodes<_Strat>(_Rootnode->_Left, _Pnode);

	mov	r8, rsi
	mov	rdx, QWORD PTR [r15]
	mov	rcx, r14
	call	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>
	mov	QWORD PTR [rsi], rax

; 1680 :             _Pnode->_Right = _Copy_nodes<_Strat>(_Rootnode->_Right, _Pnode);

	mov	r8, rsi
	mov	rdx, QWORD PTR [r15+16]
	mov	rcx, r14
	call	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>
	mov	QWORD PTR [rsi+16], rax
$LN8@Copy_nodes:

; 1681 :             _CATCH_ALL
; 1682 :             _Scary->_Erase_tree_and_orphan(_Getal(), _Newroot); // subtree copy failed, bail out
; 1683 :             _RERAISE;
; 1684 :             _CATCH_END
; 1685 :         }
; 1686 : 
; 1687 :         return _Newroot; // return newly constructed tree

	mov	rax, r12

; 1688 :     }

	lea	r11, QWORD PTR [rsp+64]
	mov	rbx, QWORD PTR [r11+64]
	mov	rsi, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
$LN89@Copy_nodes:
??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Newroot$ = 32
this$GSCopy$ = 40
_Newnode$2 = 48
this$ = 112
_Rootnode$ = 120
_Wherenode$ = 128
?dtor$0@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Newnode$2[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$0@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Newroot$ = 32
this$GSCopy$ = 40
_Newnode$2 = 48
this$ = 112
_Rootnode$ = 120
_Wherenode$ = 128
?dtor$1@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>'::`1'::dtor$1
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Newroot$ = 32
this$GSCopy$ = 40
_Newnode$2 = 48
this$ = 112
_Rootnode$ = 120
_Wherenode$ = 128
?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>'::`1'::catch$3

; 1681 :             _CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z$0:

; 1682 :             _Scary->_Erase_tree_and_orphan(_Getal(), _Newroot); // subtree copy failed, bail out

	mov	rcx, QWORD PTR this$GSCopy$[rbp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Getal
	mov	rdx, rax
	mov	r8, QWORD PTR _Newroot$[rbp]
	call	??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >

; 1683 :             _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@PEAU21@0@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_nodes<0>'::`1'::catch$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@0@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *>, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z PROC ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * const &,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z ENDP ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z PROC ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN115:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rcx+32]
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@@Z ENDP ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>, COMDAT
$LN109:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rcx+32]
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::`scalar deleting destructor', COMDAT
$LN113:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rcx+32]
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAAPEAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
$T1 = 48
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
<_Args_1>$ = 72
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN47:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rdx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rdx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	eax, eax
	mov	QWORD PTR [rdx+16], rax

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rdx+24], rax

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [r8]
	movups	XMMWORD PTR [rdx], xmm0
	movups	xmm1, XMMWORD PTR [r8+16]
	movups	XMMWORD PTR [rdx+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [r8+16], rax
	mov	QWORD PTR [r8+24], 15
	mov	BYTE PTR [r8], al
	lea	rcx, QWORD PTR [rdx+32]
	mov	rdx, r9
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	add	rsp, 40					; 00000028H
	ret	0
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
<_Args_1>$ = 72
?dtor$0@?0???$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA PROC ; `std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$0
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA ENDP ; `std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@Uvalue@crude_json@@U12@$0A@@std@@YAPEAUvalue@crude_json@@QEAU12@$$QEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@Uvalue@crude_json@@U12@$0A@@std@@YAPEAUvalue@crude_json@@QEAU12@$$QEAU12@@Z PROC ; std::construct_at<crude_json::value,crude_json::value,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	jmp	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
??$construct_at@Uvalue@crude_json@@U12@$0A@@std@@YAPEAUvalue@crude_json@@QEAU12@$$QEAU12@@Z ENDP ; std::construct_at<crude_json::value,crude_json::value,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@Uvalue@crude_json@@AEAU12@$0A@@std@@YAPEAUvalue@crude_json@@QEAU12@AEAU12@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@Uvalue@crude_json@@AEAU12@$0A@@std@@YAPEAUvalue@crude_json@@QEAU12@AEAU12@@Z PROC ; std::construct_at<crude_json::value,crude_json::value &,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	jmp	??0value@crude_json@@QEAA@AEBU01@@Z	; crude_json::value::value
??$construct_at@Uvalue@crude_json@@AEAU12@$0A@@std@@YAPEAUvalue@crude_json@@QEAU12@AEAU12@@Z ENDP ; std::construct_at<crude_json::value,crude_json::value &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Location$ = 64
<_Args_0>$dead$ = 72
<_Args_1>$ = 80
<_Args_2>$dead$ = 88
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z PROC ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN96:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [r8]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR [rbx+64], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rbx

; 242  : }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z ENDP ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Location$ = 64
<_Args_0>$dead$ = 72
<_Args_1>$ = 80
<_Args_2>$dead$ = 88
?dtor$1@?0???$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z@4HA PROC ; `std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>'::`1'::dtor$1
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z@4HA ENDP ; `std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z PROC ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z ENDP ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> * &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
_TEXT	SEGMENT
_Newnode$1 = 32
$T2 = 48
this$ = 80
_Val$ = 88
??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >, COMDAT

; 1652 :     _Nodeptr _Copy_or_move(_Ty& _Val) {

$LN81:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rsi, rdx

; 1949 :         return _Node::_Buynode(_Getal(), _Get_scary()->_Myhead, _STD forward<_Valty>(_Val)...);

	mov	rbp, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR _Newnode$1[rsp], rcx

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR _Newnode$1[rsp+8], 0

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR _Newnode$1[rsp+8], rax
	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T2[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 245  :     pair(const pair&) = default;

	mov	rdx, rsi
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [rsi+32]
	call	??0value@crude_json@@QEAA@AEBU01@@Z	; crude_json::value::value
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 362  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 363  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 364  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 365  :         _Newnode._Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0

; 1653 :         if constexpr (_Strat == _Strategy::_Copy) {
; 1654 :             return _Buynode(_Val);

	mov	rax, rdi

; 1655 :         } else {
; 1656 :             if constexpr (_Is_set) {
; 1657 :                 return _Buynode(_STD move(_Val));
; 1658 :             } else {
; 1659 :                 return _Buynode(_STD move(const_cast<key_type&>(_Val.first)), _STD move(_Val.second));
; 1660 :             }
; 1661 :         }
; 1662 :     }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newnode$1 = 32
$T2 = 48
this$ = 80
_Val$ = 88
?dtor$0@?0???$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Newnode$1[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$0@?0???$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newnode$1 = 32
$T2 = 48
this$ = 80
_Val$ = 88
?dtor$1@?0???$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >'::`1'::dtor$1
	mov	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z
_TEXT	SEGMENT
this$ = 80
_Al$ = 88
_Rootnode$ = 96
??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >, COMDAT

; 734  :     void _Erase_tree_and_orphan(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

$LN125:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	r14, rdx
	mov	rbp, rcx

; 735  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [r8+25], 0
	jne	SHORT $LN3@Erase_tree
	npad	5
$LL2@Erase_tree:

; 736  :             _Erase_tree_and_orphan(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, r14
	mov	rcx, rbp
	call	??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rsi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
	lea	rcx, QWORD PTR [rsi+64]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 71   :     ~value() { destruct(m_Storage, m_Type); }

	mov	edx, DWORD PTR [rcx+32]
	call	?destruct@value@crude_json@@CAXAEAT?$_Align_type@N$0CA@@std@@W4type_t@2@@Z ; crude_json::value::destruct
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rsi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 104				; 00000068H
	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 735  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Erase_tree
$LN3@Erase_tree:

; 737  :             auto _To_delete = _STD exchange(_Rootnode, _Rootnode->_Left);
; 738  :             _Orphan_ptr(_To_delete);
; 739  :             _Alnode::value_type::_Freenode(_Al, _To_delete);
; 740  :         }
; 741  :     }

	add	rsp, 32					; 00000020H
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$dead$ = 56
_Val1$ = 64
_Val2$dead$ = 72
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 305  :         : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

$LN91:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [r8]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR [rbx+64], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 305  :         : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$dead$ = 56
_Val1$ = 64
_Val2$dead$ = 72
?dtor$1@?0???$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z@4HA PROC ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z@4HA ENDP ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
$T1 = 48
_Location$ = 48
<_Args_0>$ = 56
<_Args_1>$ = 64
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z PROC ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN45:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	eax, eax
	mov	QWORD PTR [rcx+16], rax

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rcx+24], rax

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rcx+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [rdx+16], rax
	mov	QWORD PTR [rdx+24], 15
	mov	BYTE PTR [rdx], al
	add	rcx, 32					; 00000020H
	mov	rdx, r8
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rbx

; 242  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z ENDP ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
_Location$ = 48
<_Args_0>$ = 56
<_Args_1>$ = 64
?dtor$0@?0???$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z@4HA PROC ; `std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,0>'::`1'::dtor$0
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Uvalue@crude_json@@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAUvalue@crude_json@@@Z@4HA ENDP ; `std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
_TEXT	SEGMENT
_Newnode$1 = 32
$T2 = 48
this$ = 80
<_Val_0>$ = 88
??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>, COMDAT

; 1948 :     _Nodeptr _Buynode(_Valty&&... _Val) {

$LN78:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rsi, rdx

; 1949 :         return _Node::_Buynode(_Getal(), _Get_scary()->_Myhead, _STD forward<_Valty>(_Val)...);

	mov	rbp, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR _Newnode$1[rsp], rcx

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR _Newnode$1[rsp+8], 0

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR _Newnode$1[rsp+8], rax
	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T2[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 245  :     pair(const pair&) = default;

	mov	rdx, rsi
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [rsi+32]
	call	??0value@crude_json@@QEAA@AEBU01@@Z	; crude_json::value::value
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 362  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 363  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 364  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 365  :         _Newnode._Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0

; 1949 :         return _Node::_Buynode(_Getal(), _Get_scary()->_Myhead, _STD forward<_Valty>(_Val)...);

	mov	rax, rdi

; 1950 :     }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newnode$1 = 32
$T2 = 48
this$ = 80
<_Val_0>$ = 88
?dtor$0@?0???$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Newnode$1[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$0@?0???$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newnode$1 = 32
$T2 = 48
this$ = 80
<_Val_0>$ = 88
?dtor$1@?0???$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>'::`1'::dtor$1
	mov	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

$LN43:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rcx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	eax, eax
	mov	QWORD PTR [rcx+16], rax

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rcx+24], rax

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rdx]
	movups	XMMWORD PTR [rcx], xmm0
	movups	xmm1, XMMWORD PTR [rdx+16]
	movups	XMMWORD PTR [rcx+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [rdx+16], rax
	mov	QWORD PTR [rdx+24], 15
	mov	BYTE PTR [rdx], al
	add	rcx, 32					; 00000020H
	mov	rdx, r8
	call	??0value@crude_json@@QEAA@$$QEAU01@@Z	; crude_json::value::value
	npad	1

; 243  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA PROC ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,0>'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAUvalue@crude_json@@@Z@4HA ENDP ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,crude_json::value,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$dead$ = 64
__formal$dead$ = 72
__formal$dead$ = 80
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>, COMDAT

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

$LN87:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdx, QWORD PTR [rdx]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui_node_editor\crude_json.h

; 57   :     value(type_t type = type_t::null): m_Type(construct(m_Storage, type)) {}

	mov	DWORD PTR [rbx+64], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$dead$ = 64
__formal$dead$ = 72
__formal$dead$ = 80
?dtor$0@?0???$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z@4HA PROC ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z@4HA ENDP ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@AEAU10@@Z PROC ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@@std@@YAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@AEAU10@@Z ENDP ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z
_TEXT	SEGMENT
_Newnode$ = 32
$T1 = 48
_Al$ = 80
_Myhead$ = 88
<_Val_0>$ = 96
??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>, COMDAT

; 356  :     static _Nodeptr _Buynode(_Alloc& _Al, _Nodeptr _Myhead, _Valty&&... _Val) {

$LN75:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rsi, r8
	mov	rbp, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR _Newnode$[rsp], rcx

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR _Newnode$[rsp+8], 0

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 104				; 00000068H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR _Newnode$[rsp+8], rax
	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 245  :     pair(const pair&) = default;

	mov	rdx, rsi
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [rsi+32]
	call	??0value@crude_json@@QEAA@AEBU01@@Z	; crude_json::value::value
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 362  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 363  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 364  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 365  :         _Newnode._Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0

; 366  :         _Newnode._Ptr->_Isnil = false;
; 367  :         return _Newnode._Release();

	mov	rax, rdi

; 368  :     }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newnode$ = 32
$T1 = 48
_Al$ = 80
_Myhead$ = 88
<_Val_0>$ = 96
?dtor$0@?0???$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z@4HA PROC ; `std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Newnode$[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >
?dtor$0@?0???$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z@4HA ENDP ; `std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newnode$ = 32
$T1 = 48
_Al$ = 80
_Myhead$ = 88
<_Val_0>$ = 96
?dtor$1@?0???$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z@4HA PROC ; `std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>'::`1'::dtor$1
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@@Z@4HA ENDP ; `std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z
_TEXT	SEGMENT
$T1 = 48
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN65:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 245  :     pair(const pair&) = default;

	mov	rdx, r8
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [rdi+32]
	call	??0value@crude_json@@QEAA@AEBU01@@Z	; crude_json::value::value
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
?dtor$0@?0???$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z@4HA PROC ; `std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>'::`1'::dtor$0
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@1@AEAU31@@Z@4HA ENDP ; `std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z
_TEXT	SEGMENT
$T1 = 48
_Location$ = 48
<_Args_0>$ = 56
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z PROC ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN63:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 245  :     pair(const pair&) = default;

	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rdi+32]
	lea	rdx, QWORD PTR [rbx+32]
	call	??0value@crude_json@@QEAA@AEBU01@@Z	; crude_json::value::value
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rdi

; 242  : }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z ENDP ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
_Location$ = 48
<_Args_0>$ = 56
?dtor$0@?0???$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z@4HA PROC ; `std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &,0>'::`1'::dtor$0
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@0@QEAU10@AEAU10@@Z@4HA ENDP ; `std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value> &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>, COMDAT

; 245  :     pair(const pair&) = default;

$LN76:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rdi+32]
	lea	rdx, QWORD PTR [rbx+32]
	call	??0value@crude_json@@QEAA@AEBU01@@Z	; crude_json::value::value
	npad	1
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z@4HA PROC ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@Uvalue@crude_json@@@std@@QEAA@AEBU01@@Z@4HA ENDP ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,crude_json::value>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
	movsxd	rax, DWORD PTR [rcx-4]
	sub	rcx, rax
	jmp	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
END

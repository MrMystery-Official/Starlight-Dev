; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

EXTRN	__imp__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp___std_terminate:PROC
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	__security_check_cookie:PROC
EXTRN	__imp___CxxFrameHandler4:PROC
PUBLIC	??$_Visit@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@4@@?$_Variant_raw_visit1@$01@std@@SAX_K$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@@Z ; std::_Variant_raw_visit1<2>::_Visit<`std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
PUBLIC	??$_Variant_raw_visit@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@QEAAXXZ@@std@@YAX_KAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@QEAAXXZ@@Z ; std::_Variant_raw_visit<std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &,`std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1> >
PUBLIC	?_Get@?$_Variant_storage_@$0A@VNode@BymlFile@@@std@@QEGAAAEAVNode@BymlFile@@XZ ; std::_Variant_storage_<0,BymlFile::Node>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$0A@NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEANXZ ; std::_Variant_storage_<0,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$0A@_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEA_NXZ ; std::_Variant_storage_<0,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$0A@M_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAMXZ ; std::_Variant_storage_<0,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$0A@_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEA_JXZ ; std::_Variant_storage_<0,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$0A@_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEA_KXZ ; std::_Variant_storage_<0,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$0A@H_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAHXZ ; std::_Variant_storage_<0,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAIXZ ; std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
PUBLIC	?_Storage@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@XZ ; std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Storage
PUBLIC	?index@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEBA_KXZ ; std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::index
PUBLIC	??1?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
PUBLIC	??$?RU?$_Tagged@AEAVNode@BymlFile@@$07@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAVNode@BymlFile@@$07@3@@Z ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<BymlFile::Node &,8> >
PUBLIC	??$?RU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$06@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$06@3@@Z ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,7> >
PUBLIC	??$?RU?$_Tagged@AEAN$05@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAN$05@3@@Z ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<double &,6> >
PUBLIC	??$?RU?$_Tagged@AEA_N$04@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_N$04@3@@Z ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<bool &,5> >
PUBLIC	??$?RU?$_Tagged@AEAM$03@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAM$03@3@@Z ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<float &,4> >
PUBLIC	??$?RU?$_Tagged@AEA_J$02@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_J$02@3@@Z ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<__int64 &,3> >
PUBLIC	??$?RU?$_Tagged@AEA_K$01@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_K$01@3@@Z ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<unsigned __int64 &,2> >
PUBLIC	??$?RU?$_Tagged@AEAH$00@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAH$00@3@@Z ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<int &,1> >
PUBLIC	??$?RU?$_Tagged@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@$0?0@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@$0?0@3@@Z ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &,-1> >
PUBLIC	??$_Variant_raw_get@$0A@AEAV?$_Variant_storage_@$0A@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@VNode@BymlFile@@@0@@Z ; std::_Variant_raw_get<0,std::_Variant_storage_<0,BymlFile::Node> &>
PUBLIC	??$_Variant_raw_get@$07AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ; std::_Variant_raw_get<8,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
PUBLIC	??$_Variant_raw_get@$06AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ; std::_Variant_raw_get<7,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
PUBLIC	??$_Variant_raw_get@$05AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ; std::_Variant_raw_get<6,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
PUBLIC	??$_Variant_raw_get@$04AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ; std::_Variant_raw_get<5,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
PUBLIC	??$_Variant_raw_get@$03AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ; std::_Variant_raw_get<4,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
PUBLIC	??$_Variant_raw_get@$02AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ; std::_Variant_raw_get<3,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
PUBLIC	??$_Variant_raw_get@$01AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ; std::_Variant_raw_get<2,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
PUBLIC	??$_Variant_raw_get@$00AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ; std::_Variant_raw_get<1,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
PUBLIC	??$?RU?$_Tagged@AEAI$0A@@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAI$0A@@3@@Z ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<unsigned int &,0> >
PUBLIC	??$_Variant_raw_get@$0A@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ; std::_Variant_raw_get<0,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
PUBLIC	?_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ ; std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy
PUBLIC	??1?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
PUBLIC	??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAAPEAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >::`scalar deleting destructor'
PUBLIC	??1?$_Non_trivial_copy@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@QEAA@XZ ; std::_Non_trivial_copy<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >::~_Non_trivial_copy<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >
PUBLIC	??1?$_Non_trivial_move@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Non_trivial_move<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Non_trivial_move<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
PUBLIC	??1?$_Non_trivial_copy_assign@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Non_trivial_copy_assign<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Non_trivial_copy_assign<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
PUBLIC	??1?$_Non_trivial_move_assign@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Non_trivial_move_assign<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Non_trivial_move_assign<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
PUBLIC	??1?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAA@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >
PUBLIC	??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@0@@Z ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >
PUBLIC	??$_Visit@V<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@4@@?$_Variant_raw_visit1@$01@std@@SAX_K$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@1@QEAAXXZ@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@1@@Z ; std::_Variant_raw_visit1<2>::_Visit<`std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@0@AEAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >
PUBLIC	??_GNode@RailData@PhiveData@Actor@@QEAAPEAXI@Z	; Actor::PhiveData::RailData::Node::`scalar deleting destructor'
PUBLIC	??$_Variant_raw_visit@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@2@QEAAXXZ@@std@@YAX_KAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@QEAAXXZ@@Z ; std::_Variant_raw_visit<std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &,`std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1> >
PUBLIC	??1Node@RailData@PhiveData@Actor@@QEAA@XZ	; Actor::PhiveData::RailData::Node::~Node
PUBLIC	??$destroy_at@UNode@RailData@PhiveData@Actor@@@std@@YAXQEAUNode@RailData@PhiveData@Actor@@@Z ; std::destroy_at<Actor::PhiveData::RailData::Node>
PUBLIC	??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> *>
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
PUBLIC	??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@0@AEAPEAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> * &>
PUBLIC	?_Get@?$_Variant_storage_@$00VVector3F@@@std@@QEGAAAEAVVector3F@@XZ ; std::_Variant_storage_<1,Vector3F>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$00MVVector3F@@@std@@QEGAAAEAMXZ ; std::_Variant_storage_<1,float,Vector3F>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$00_KMVVector3F@@@std@@QEGAAAEA_KXZ ; std::_Variant_storage_<1,unsigned __int64,float,Vector3F>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$00I_KMVVector3F@@@std@@QEGAAAEAIXZ ; std::_Variant_storage_<1,unsigned int,unsigned __int64,float,Vector3F>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$00_JI_KMVVector3F@@@std@@QEGAAAEA_JXZ ; std::_Variant_storage_<1,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$00H_JI_KMVVector3F@@@std@@QEGAAAEAHXZ ; std::_Variant_storage_<1,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$00_NH_JI_KMVVector3F@@@std@@QEGAAAEA_NXZ ; std::_Variant_storage_<1,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Get
PUBLIC	?_Get@?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEGAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Get
PUBLIC	?_Storage@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEGAAAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@2@XZ ; std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Storage
PUBLIC	?index@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEBA_KXZ ; std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::index
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@2@_K@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> >::deallocate
PUBLIC	??1?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ; std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
PUBLIC	??$?RU?$_Tagged@AEAVVector3F@@$06@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAVVector3F@@$06@3@@Z ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<Vector3F &,7> >
PUBLIC	??$?RU?$_Tagged@AEAM$05@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAM$05@3@@Z ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<float &,6> >
PUBLIC	??$?RU?$_Tagged@AEA_K$04@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_K$04@3@@Z ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<unsigned __int64 &,5> >
PUBLIC	??$?RU?$_Tagged@AEAI$03@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAI$03@3@@Z ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<unsigned int &,4> >
PUBLIC	??$?RU?$_Tagged@AEA_J$02@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_J$02@3@@Z ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<__int64 &,3> >
PUBLIC	??$?RU?$_Tagged@AEAH$01@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAH$01@3@@Z ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<int &,2> >
PUBLIC	??$?RU?$_Tagged@AEA_N$00@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_N$00@3@@Z ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<bool &,1> >
PUBLIC	??$?RU?$_Tagged@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@$0?0@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@$0?0@3@@Z ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &,-1> >
PUBLIC	??$_Variant_raw_get@$06AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ; std::_Variant_raw_get<7,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
PUBLIC	??$_Variant_raw_get@$05AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ; std::_Variant_raw_get<6,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
PUBLIC	??$_Variant_raw_get@$04AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ; std::_Variant_raw_get<5,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
PUBLIC	??$_Variant_raw_get@$03AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ; std::_Variant_raw_get<4,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
PUBLIC	??$_Variant_raw_get@$02AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ; std::_Variant_raw_get<3,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
PUBLIC	??$_Variant_raw_get@$01AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ; std::_Variant_raw_get<2,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
PUBLIC	??$_Variant_raw_get@$00AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ; std::_Variant_raw_get<1,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
PUBLIC	??$?RU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@3@@Z ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0> >
PUBLIC	??$_Variant_raw_get@$0A@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ; std::_Variant_raw_get<0,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
PUBLIC	?_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ ; std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >::deallocate
PUBLIC	??1?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ; std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
PUBLIC	??1?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAAPEAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAAPEAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>::`scalar deleting destructor'
PUBLIC	??$destroy@UNode@RailData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@UNode@RailData@PhiveData@Actor@@@1@QEAUNode@RailData@PhiveData@Actor@@@Z ; std::_Default_allocator_traits<std::allocator<Actor::PhiveData::RailData::Node> >::destroy<Actor::PhiveData::RailData::Node>
PUBLIC	??$_Unfancy@UNode@RailData@PhiveData@Actor@@@std@@YAPEAUNode@RailData@PhiveData@Actor@@PEAU1234@@Z ; std::_Unfancy<Actor::PhiveData::RailData::Node>
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$_Non_trivial_copy@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@QEAA@XZ ; std::_Non_trivial_copy<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> >::~_Non_trivial_copy<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> >
PUBLIC	??1?$_Non_trivial_move@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ; std::_Non_trivial_move<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Non_trivial_move<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
PUBLIC	??1?$_Non_trivial_copy_assign@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ; std::_Non_trivial_copy_assign<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Non_trivial_copy_assign<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
PUBLIC	??1?$_Non_trivial_move_assign@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ; std::_Non_trivial_move_assign<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Non_trivial_move_assign<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
PUBLIC	??1?$variant@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ; std::variant<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~variant<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
PUBLIC	??1DynamicData@Actor@@QEAA@XZ			; Actor::DynamicData::~DynamicData
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAA@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>
PUBLIC	??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@0@@Z ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >
PUBLIC	??_G?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAAPEAXI@Z ; std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>::`scalar deleting destructor'
PUBLIC	??_G?$pair@$$CBVNode@BymlFile@@I@std@@QEAAPEAXI@Z ; std::pair<BymlFile::Node const ,unsigned int>::`scalar deleting destructor'
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > > >
PUBLIC	??$_Destroy_range@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@YAXPEAUNode@RailData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UNode@RailData@PhiveData@Actor@@@0@@Z ; std::_Destroy_range<std::allocator<Actor::PhiveData::RailData::Node> >
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
PUBLIC	??1?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAA@XZ ; std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>::~pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>
PUBLIC	??$destroy_at@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@YAXQEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@0@@Z ; std::destroy_at<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >
PUBLIC	??1?$pair@$$CBVNode@BymlFile@@I@std@@QEAA@XZ	; std::pair<BymlFile::Node const ,unsigned int>::~pair<BymlFile::Node const ,unsigned int>
PUBLIC	??$destroy_at@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@YAXQEAU?$pair@$$CBVNode@BymlFile@@I@0@@Z ; std::destroy_at<std::pair<BymlFile::Node const ,unsigned int> >
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@0@AEAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@UNode@RailData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UNode@RailData@PhiveData@Actor@@@2@XZ ; std::_Compressed_pair<std::allocator<Actor::PhiveData::RailData::Node>,std::_Vector_val<std::_Simple_types<Actor::PhiveData::RailData::Node> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >,1>::_Get_first
PUBLIC	?deallocate@?$allocator@UNode@RailData@PhiveData@Actor@@@std@@QEAAXQEAUNode@RailData@PhiveData@Actor@@_K@Z ; std::allocator<Actor::PhiveData::RailData::Node>::deallocate
PUBLIC	?_Getal@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@UNode@RailData@PhiveData@Actor@@@2@XZ ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Getal
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >,0> >::_Get_scary
PUBLIC	?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Tidy
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >,0> >
PUBLIC	??1?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@QEAA@XZ ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::~vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_GNode@BymlFile@@QEAAPEAXI@Z			; BymlFile::Node::`scalar deleting destructor'
PUBLIC	??_GOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z ; Actor::PhiveData::ConstraintLinkData::OwnerData::`scalar deleting destructor'
PUBLIC	??_GReferData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z ; Actor::PhiveData::ConstraintLinkData::ReferData::`scalar deleting destructor'
PUBLIC	??_GRailData@PhiveData@Actor@@QEAAPEAXI@Z	; Actor::PhiveData::RailData::`scalar deleting destructor'
PUBLIC	??_GLink@Actor@@QEAAPEAXI@Z			; Actor::Link::`scalar deleting destructor'
PUBLIC	??_GRail@Actor@@QEAAPEAXI@Z			; Actor::Rail::`scalar deleting destructor'
PUBLIC	??_GActor@@QEAAPEAXI@Z				; Actor::`scalar deleting destructor'
PUBLIC	??$destroy_at@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::destroy_at<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??1Node@BymlFile@@QEAA@XZ			; BymlFile::Node::~Node
PUBLIC	??$destroy_at@VNode@BymlFile@@@std@@YAXQEAVNode@BymlFile@@@Z ; std::destroy_at<BymlFile::Node>
PUBLIC	??$destroy@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >::destroy<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >
PUBLIC	??$addressof@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@YAPEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@0@AEAU10@@Z ; std::addressof<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >
PUBLIC	??$destroy@U?$pair@$$CBVNode@BymlFile@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@QEAU?$pair@$$CBVNode@BymlFile@@I@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >::destroy<std::pair<BymlFile::Node const ,unsigned int> >
PUBLIC	??$addressof@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@YAPEAU?$pair@$$CBVNode@BymlFile@@I@0@AEAU10@@Z ; std::addressof<std::pair<BymlFile::Node const ,unsigned int> >
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@@std@@QEAA@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >
PUBLIC	??1OwnerData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ ; Actor::PhiveData::ConstraintLinkData::OwnerData::~OwnerData
PUBLIC	??$destroy_at@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@YAXQEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@@Z ; std::destroy_at<Actor::PhiveData::ConstraintLinkData::OwnerData>
PUBLIC	??1ReferData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ ; Actor::PhiveData::ConstraintLinkData::ReferData::~ReferData
PUBLIC	??$destroy_at@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@YAXQEAUReferData@ConstraintLinkData@PhiveData@Actor@@@Z ; std::destroy_at<Actor::PhiveData::ConstraintLinkData::ReferData>
PUBLIC	??1RailData@PhiveData@Actor@@QEAA@XZ		; Actor::PhiveData::RailData::~RailData
PUBLIC	??$destroy_at@URailData@PhiveData@Actor@@@std@@YAXQEAURailData@PhiveData@Actor@@@Z ; std::destroy_at<Actor::PhiveData::RailData>
PUBLIC	??1Link@Actor@@QEAA@XZ				; Actor::Link::~Link
PUBLIC	??$destroy_at@ULink@Actor@@@std@@YAXQEAULink@Actor@@@Z ; std::destroy_at<Actor::Link>
PUBLIC	??1Rail@Actor@@QEAA@XZ				; Actor::Rail::~Rail
PUBLIC	??$destroy_at@URail@Actor@@@std@@YAXQEAURail@Actor@@@Z ; std::destroy_at<Actor::Rail>
PUBLIC	??$destroy_at@UActor@@@std@@YAXQEAUActor@@@Z	; std::destroy_at<Actor>
PUBLIC	??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *>
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
PUBLIC	??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@AEAPEAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>
PUBLIC	??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> *>
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
PUBLIC	??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@0@AEAPEAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> * &>
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@_K@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> >::deallocate
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@2@_K@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> >::deallocate
PUBLIC	?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::deallocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >::deallocate
PUBLIC	??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z ; std::_Traits_equal<std::char_traits<char> >
PUBLIC	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@VNode@BymlFile@@@?$_Default_allocator_traits@V?$allocator@VNode@BymlFile@@@std@@@std@@SAXAEAV?$allocator@VNode@BymlFile@@@1@QEAVNode@BymlFile@@@Z ; std::_Default_allocator_traits<std::allocator<BymlFile::Node> >::destroy<BymlFile::Node>
PUBLIC	??$_Unfancy@VNode@BymlFile@@@std@@YAPEAVNode@BymlFile@@PEAV12@@Z ; std::_Unfancy<BymlFile::Node>
PUBLIC	??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> *>
PUBLIC	??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >
PUBLIC	??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> *>
PUBLIC	??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >
PUBLIC	??$destroy@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@1@QEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@@Z ; std::_Default_allocator_traits<std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::destroy<Actor::PhiveData::ConstraintLinkData::OwnerData>
PUBLIC	??$_Unfancy@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@YAPEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@PEAU1234@@Z ; std::_Unfancy<Actor::PhiveData::ConstraintLinkData::OwnerData>
PUBLIC	??$destroy@UReferData@ConstraintLinkData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@1@QEAUReferData@ConstraintLinkData@PhiveData@Actor@@@Z ; std::_Default_allocator_traits<std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::destroy<Actor::PhiveData::ConstraintLinkData::ReferData>
PUBLIC	??$_Unfancy@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@YAPEAUReferData@ConstraintLinkData@PhiveData@Actor@@PEAU1234@@Z ; std::_Unfancy<Actor::PhiveData::ConstraintLinkData::ReferData>
PUBLIC	??$destroy@URailData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@URailData@PhiveData@Actor@@@1@QEAURailData@PhiveData@Actor@@@Z ; std::_Default_allocator_traits<std::allocator<Actor::PhiveData::RailData> >::destroy<Actor::PhiveData::RailData>
PUBLIC	??$_Unfancy@URailData@PhiveData@Actor@@@std@@YAPEAURailData@PhiveData@Actor@@PEAU123@@Z ; std::_Unfancy<Actor::PhiveData::RailData>
PUBLIC	??$destroy@ULink@Actor@@@?$_Default_allocator_traits@V?$allocator@ULink@Actor@@@std@@@std@@SAXAEAV?$allocator@ULink@Actor@@@1@QEAULink@Actor@@@Z ; std::_Default_allocator_traits<std::allocator<Actor::Link> >::destroy<Actor::Link>
PUBLIC	??$_Unfancy@ULink@Actor@@@std@@YAPEAULink@Actor@@PEAU12@@Z ; std::_Unfancy<Actor::Link>
PUBLIC	??$destroy@URail@Actor@@@?$_Default_allocator_traits@V?$allocator@URail@Actor@@@std@@@std@@SAXAEAV?$allocator@URail@Actor@@@1@QEAURail@Actor@@@Z ; std::_Default_allocator_traits<std::allocator<Actor::Rail> >::destroy<Actor::Rail>
PUBLIC	??$_Unfancy@URail@Actor@@@std@@YAPEAURail@Actor@@PEAU12@@Z ; std::_Unfancy<Actor::Rail>
PUBLIC	??$destroy@UActor@@@?$_Default_allocator_traits@V?$allocator@UActor@@@std@@@std@@SAXAEAV?$allocator@UActor@@@1@QEAUActor@@@Z ; std::_Default_allocator_traits<std::allocator<Actor> >::destroy<Actor>
PUBLIC	??$_Unfancy@UActor@@@std@@YAPEAUActor@@PEAU1@@Z	; std::_Unfancy<Actor>
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
PUBLIC	??$forward@AEBD@std@@YAAEBDAEBD@Z		; std::forward<char const &>
PUBLIC	?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> >::deallocate
PUBLIC	?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> >::deallocate
PUBLIC	?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >::deallocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >::deallocate
PUBLIC	??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z	; std::construct_at<char,char const &,0>
PUBLIC	??$addressof@D@std@@YAPEADAEAD@Z		; std::addressof<char>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPEAEQEAEAEAV?$allocator@E@0@@Z ; std::_Destroy_range<std::allocator<unsigned char> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z ; std::_Destroy_range<std::allocator<BymlFile::Node> >
PUBLIC	??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >
PUBLIC	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >
PUBLIC	??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@PEAV12@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@0@QEAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > *>
PUBLIC	??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >
PUBLIC	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >
PUBLIC	??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@PEAV12@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@0@QEAV10@@Z ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > *>
PUBLIC	??$_Destroy_range@V?$allocator@UModelElement@UMii@@@std@@@std@@YAXPEAUModelElement@UMii@@QEAU12@AEAV?$allocator@UModelElement@UMii@@@0@@Z ; std::_Destroy_range<std::allocator<UMii::ModelElement> >
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$_Destroy_range@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@0@@Z ; std::_Destroy_range<std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >
PUBLIC	??$_Destroy_range@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUReferData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@0@@Z ; std::_Destroy_range<std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >
PUBLIC	??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z ; std::_Destroy_range<std::allocator<unsigned __int64> >
PUBLIC	??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z ; std::_Destroy_range<std::allocator<Actor::PhiveData::RailData> >
PUBLIC	??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z ; std::_Destroy_range<std::allocator<Actor::Link> >
PUBLIC	??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z ; std::_Destroy_range<std::allocator<Actor::Rail> >
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > > >
PUBLIC	??$_Destroy_range@V?$allocator@UActor@@@std@@@std@@YAXPEAUActor@@QEAU1@AEAV?$allocator@UActor@@@0@@Z ; std::_Destroy_range<std::allocator<Actor> >
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z	; std::_Char_traits<char,int>::assign
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAAAEAV?$allocator@E@2@XZ ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@VNode@BymlFile@@@std@@V?$_Vector_val@U?$_Simple_types@VNode@BymlFile@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VNode@BymlFile@@@2@XZ ; std::_Compressed_pair<std::allocator<BymlFile::Node>,std::_Vector_val<std::_Simple_types<BymlFile::Node> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UModelElement@UMii@@@std@@V?$_Vector_val@U?$_Simple_types@UModelElement@UMii@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UModelElement@UMii@@@2@XZ ; std::_Compressed_pair<std::allocator<UMii::ModelElement>,std::_Vector_val<std::_Simple_types<UMii::ModelElement> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@2@XZ ; std::_Compressed_pair<std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData>,std::_Vector_val<std::_Simple_types<Actor::PhiveData::ConstraintLinkData::OwnerData> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@2@XZ ; std::_Compressed_pair<std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData>,std::_Vector_val<std::_Simple_types<Actor::PhiveData::ConstraintLinkData::ReferData> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@URailData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@URailData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URailData@PhiveData@Actor@@@2@XZ ; std::_Compressed_pair<std::allocator<Actor::PhiveData::RailData>,std::_Vector_val<std::_Simple_types<Actor::PhiveData::RailData> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@ULink@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@ULink@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@ULink@Actor@@@2@XZ ; std::_Compressed_pair<std::allocator<Actor::Link>,std::_Vector_val<std::_Simple_types<Actor::Link> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@URail@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@URail@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URail@Actor@@@2@XZ ; std::_Compressed_pair<std::allocator<Actor::Rail>,std::_Vector_val<std::_Simple_types<Actor::Rail> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UActor@@@std@@V?$_Vector_val@U?$_Simple_types@UActor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UActor@@@2@XZ ; std::_Compressed_pair<std::allocator<Actor>,std::_Vector_val<std::_Simple_types<Actor> >,1>::_Get_first
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z	; std::allocator<unsigned char>::deallocate
PUBLIC	?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
PUBLIC	?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
PUBLIC	?deallocate@?$allocator@VNode@BymlFile@@@std@@QEAAXQEAVNode@BymlFile@@_K@Z ; std::allocator<BymlFile::Node>::deallocate
PUBLIC	?_Getal@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAAEAV?$allocator@VNode@BymlFile@@@2@XZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Getal
PUBLIC	?_Getal@?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@2@XZ ; std::list<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::_Getal
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@2@_K@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > >::deallocate
PUBLIC	?capacity@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >::capacity
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >,1>::_Get_first
PUBLIC	?_Getal@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@2@XZ ; std::list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::_Getal
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@2@_K@Z ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > >::deallocate
PUBLIC	?capacity@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >::capacity
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >,1>::_Get_first
PUBLIC	?deallocate@?$allocator@UModelElement@UMii@@@std@@QEAAXQEAUModelElement@UMii@@_K@Z ; std::allocator<UMii::ModelElement>::deallocate
PUBLIC	?_Getal@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAAEAV?$allocator@UModelElement@UMii@@@2@XZ ; std::vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Get_first
PUBLIC	?deallocate@?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@_K@Z ; std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData>::deallocate
PUBLIC	?_Getal@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@2@XZ ; std::vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::_Getal
PUBLIC	?deallocate@?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUReferData@ConstraintLinkData@PhiveData@Actor@@_K@Z ; std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData>::deallocate
PUBLIC	?_Getal@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@2@XZ ; std::vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::_Getal
PUBLIC	?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z	; std::allocator<unsigned __int64>::deallocate
PUBLIC	?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
PUBLIC	?deallocate@?$allocator@URailData@PhiveData@Actor@@@std@@QEAAXQEAURailData@PhiveData@Actor@@_K@Z ; std::allocator<Actor::PhiveData::RailData>::deallocate
PUBLIC	?_Getal@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@URailData@PhiveData@Actor@@@2@XZ ; std::vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >::_Getal
PUBLIC	?deallocate@?$allocator@ULink@Actor@@@std@@QEAAXQEAULink@Actor@@_K@Z ; std::allocator<Actor::Link>::deallocate
PUBLIC	?_Getal@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAAEAV?$allocator@ULink@Actor@@@2@XZ ; std::vector<Actor::Link,std::allocator<Actor::Link> >::_Getal
PUBLIC	?deallocate@?$allocator@URail@Actor@@@std@@QEAAXQEAURail@Actor@@_K@Z ; std::allocator<Actor::Rail>::deallocate
PUBLIC	?_Getal@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAAEAV?$allocator@URail@Actor@@@2@XZ ; std::vector<Actor::Rail,std::allocator<Actor::Rail> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >,1>::_Get_first
PUBLIC	?deallocate@?$allocator@UActor@@@std@@QEAAXQEAUActor@@_K@Z ; std::allocator<Actor>::deallocate
PUBLIC	?_Getal@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAAEAV?$allocator@UActor@@@2@XZ ; std::vector<Actor,std::allocator<Actor> >::_Getal
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
PUBLIC	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
PUBLIC	?_Tidy@?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@AEAAXXZ ; std::list<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::_Tidy
PUBLIC	?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >::_Tidy
PUBLIC	?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ ; std::list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::_Tidy
PUBLIC	?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >::_Tidy
PUBLIC	?_Tidy@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAXXZ ; std::vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >::_Tidy
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Get_scary
PUBLIC	?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::_Tidy
PUBLIC	?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::_Tidy
PUBLIC	?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Tidy
PUBLIC	?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >::_Tidy
PUBLIC	?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::Link,std::allocator<Actor::Link> >::_Tidy
PUBLIC	?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::Rail,std::allocator<Actor::Rail> >::_Tidy
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >,0> >::_Get_scary
PUBLIC	?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ ; std::vector<Actor,std::allocator<Actor> >::_Tidy
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@QEAA@XZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::~vector<BymlFile::Node,std::allocator<BymlFile::Node> >
PUBLIC	??1?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::~list<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >
PUBLIC	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >
PUBLIC	??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::~list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >
PUBLIC	??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >
PUBLIC	??1?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@QEAA@XZ ; std::vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >::~vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >
PUBLIC	??1?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@QEAA@XZ ; std::vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::~vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >
PUBLIC	??1?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@QEAA@XZ ; std::vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::~vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >
PUBLIC	??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
PUBLIC	??1?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@QEAA@XZ ; std::vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >::~vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >
PUBLIC	??1?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@QEAA@XZ ; std::vector<Actor::Link,std::allocator<Actor::Link> >::~vector<Actor::Link,std::allocator<Actor::Link> >
PUBLIC	??1?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@QEAA@XZ ; std::vector<Actor::Rail,std::allocator<Actor::Rail> >::~vector<Actor::Rail,std::allocator<Actor::Rail> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >,0> >
PUBLIC	??1?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@QEAA@XZ ; std::vector<Actor,std::allocator<Actor> >::~vector<Actor,std::allocator<Actor> >
PUBLIC	??1UMii@@QEAA@XZ				; UMii::~UMii
PUBLIC	??1BymlFile@@QEAA@XZ				; BymlFile::~BymlFile
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@@std@@QEAA@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >
PUBLIC	??1RopeLinkData@PhiveData@Actor@@QEAA@XZ	; Actor::PhiveData::RopeLinkData::~RopeLinkData
PUBLIC	??1ConstraintLinkData@PhiveData@Actor@@QEAA@XZ	; Actor::PhiveData::ConstraintLinkData::~ConstraintLinkData
PUBLIC	??1PhiveData@Actor@@QEAA@XZ			; Actor::PhiveData::~PhiveData
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1Actor@@QEAA@XZ				; Actor::~Actor
PUBLIC	??8Actor@@QEAA_NU0@@Z				; Actor::operator==
PUBLIC	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ ; std::_Hash<std::_Umap_traits<BymlFile::Node,unsigned int,std::_Uhash_compare<BymlFile::Node,BymlFile::NodeHasher,BymlFile::NodeEqual>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> >,0> >::~_Hash<std::_Umap_traits<BymlFile::Node,unsigned int,std::_Uhash_compare<BymlFile::Node,BymlFile::NodeHasher,BymlFile::NodeEqual>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> >,0> >
PUBLIC	??1?$unordered_map@VNode@BymlFile@@IUNodeHasher@2@UNodeEqual@2@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@QEAA@XZ ; std::unordered_map<BymlFile::Node,unsigned int,BymlFile::NodeHasher,BymlFile::NodeEqual,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::~unordered_map<BymlFile::Node,unsigned int,BymlFile::NodeHasher,BymlFile::NodeEqual,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >
PUBLIC	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Hash<std::_Umap_traits<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,std::_Uhash_compare<std::vector<unsigned char,std::allocator<unsigned char> >,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >,0> >::~_Hash<std::_Umap_traits<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,std::_Uhash_compare<std::vector<unsigned char,std::allocator<unsigned char> >,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >,0> >
PUBLIC	??1?$unordered_map@V?$vector@EV?$allocator@E@std@@@std@@IUVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ ; std::unordered_map<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::~unordered_map<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >
PUBLIC	?_Orphan_all@_Container_base0@std@@QEAAXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?is_constant_evaluated@std@@YA_NXZ		; std::is_constant_evaluated
PUBLIC	__isa_available_default
PUBLIC	__real@00000000
PUBLIC	__real@00800000
PUBLIC	__real@1e3ce508
PUBLIC	__real@34000000
PUBLIC	__real@358637bd
PUBLIC	__real@3727c5ac
PUBLIC	__real@37800000
PUBLIC	__real@38000000
PUBLIC	__real@38800000
PUBLIC	__real@38d1b717
PUBLIC	__real@3a83126f
PUBLIC	__real@3b05bf37
PUBLIC	__real@3b800000
PUBLIC	__real@3b808081
PUBLIC	__real@3b90fdbc
PUBLIC	__real@3c000000
PUBLIC	__real@3c23d70a
PUBLIC	__real@3c888889
PUBLIC	__real@3c8efa35
PUBLIC	__real@3ca3d70a
PUBLIC	__real@3ca72f05
PUBLIC	__real@3cdd2f1b
PUBLIC	__real@3cf5c28f
PUBLIC	__real@3d23d70a
PUBLIC	__real@3d2aaaab
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3d75c28f
PUBLIC	__real@3d860a92
PUBLIC	__real@3d8f5c29
PUBLIC	__real@3da3d70a
PUBLIC	__real@3dcccccd
PUBLIC	__real@3df5c28f
PUBLIC	__real@3e000000
PUBLIC	__real@3e051eb8
PUBLIC	__real@3e09374c
PUBLIC	__real@3e0f5c29
PUBLIC	__real@3e19999a
PUBLIC	__real@3e2aaaab
PUBLIC	__real@3e3851ec
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3e6147ae
PUBLIC	__real@3e800000
PUBLIC	__real@3e851eb8
PUBLIC	__real@3e99999a
PUBLIC	__real@3ea3d70a
PUBLIC	__real@3eaaaaab
PUBLIC	__real@3eb33333
PUBLIC	__real@3ec90fdb
PUBLIC	__real@3ecccccd
PUBLIC	__real@3ee4f8b580000000
PUBLIC	__real@3efae148
PUBLIC	__real@3f000000
PUBLIC	__real@3f0ccccd
PUBLIC	__real@3f19999a
PUBLIC	__real@3f1b645a
PUBLIC	__real@3f266666
PUBLIC	__real@3f2b851f
PUBLIC	__real@3f333333
PUBLIC	__real@3f350481
PUBLIC	__real@3f3851ec
PUBLIC	__real@3f400000
PUBLIC	__real@3f490fdb
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f59999a
PUBLIC	__real@3f5db22d
PUBLIC	__real@3f5db3d0
PUBLIC	__real@3f666666
PUBLIC	__real@3f68f5c3
PUBLIC	__real@3f7d70a4
PUBLIC	__real@3f7fff58
PUBLIC	__real@3f7fffef
PUBLIC	__real@3f7ffffe
PUBLIC	__real@3f800000
PUBLIC	__real@3f8ccccd
PUBLIC	__real@3f8f1aa0
PUBLIC	__real@3f99999a
PUBLIC	__real@3faccccd
PUBLIC	__real@3fb33333
PUBLIC	__real@3fbde44e
PUBLIC	__real@3fc00000
PUBLIC	__real@3fc90fdb
PUBLIC	__real@3fcccccd
PUBLIC	__real@3fd55555
PUBLIC	__real@3fd9999a
PUBLIC	__real@3fdd1745c0000000
PUBLIC	__real@3fe00000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe8000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@400ccccd
PUBLIC	__real@4019999a
PUBLIC	__real@40200000
PUBLIC	__real@4020000000000000
PUBLIC	__real@40266666
PUBLIC	__real@4030000000000000
PUBLIC	__real@403f5c29
PUBLIC	__real@40400000
PUBLIC	__real@4040000000000000
PUBLIC	__real@40490fdb
PUBLIC	__real@40555555
PUBLIC	__real@40600000
PUBLIC	__real@40666666
PUBLIC	__real@4070000000000000
PUBLIC	__real@4072000000000000
PUBLIC	__real@4078800000000000
PUBLIC	__real@40800000
PUBLIC	__real@408f400000000000
PUBLIC	__real@40900000
PUBLIC	__real@4099999a
PUBLIC	__real@40a00000
PUBLIC	__real@40afede0
PUBLIC	__real@40b00000
PUBLIC	__real@40c00000
PUBLIC	__real@40c2c75c
PUBLIC	__real@40c5eb9c
PUBLIC	__real@40c90fdb
PUBLIC	__real@40d55555
PUBLIC	__real@40d9999a
PUBLIC	__real@40e80000
PUBLIC	__real@41000000
PUBLIC	__real@41100000
PUBLIC	__real@41200000
PUBLIC	__real@41400000
PUBLIC	__real@41490fdb
PUBLIC	__real@41500000
PUBLIC	__real@41600000
PUBLIC	__real@41700000
PUBLIC	__real@41800000
PUBLIC	__real@41880000
PUBLIC	__real@41900000
PUBLIC	__real@419c0000
PUBLIC	__real@41a00000
PUBLIC	__real@41b80000
PUBLIC	__real@41c00000
PUBLIC	__real@41d80000
PUBLIC	__real@41f00000
PUBLIC	__real@42000000
PUBLIC	__real@42340000
PUBLIC	__real@42400000
PUBLIC	__real@42580000
PUBLIC	__real@42652ee0
PUBLIC	__real@42652ee1
PUBLIC	__real@42700000
PUBLIC	__real@427c0000
PUBLIC	__real@42800000
PUBLIC	__real@428c0000
PUBLIC	__real@42c80000
PUBLIC	__real@42f60000
PUBLIC	__real@43340000
PUBLIC	__real@43620000
PUBLIC	__real@437a0000
PUBLIC	__real@437f0000
PUBLIC	__real@43960000
PUBLIC	__real@43e0000000000000
PUBLIC	__real@43fa0000
PUBLIC	__real@44160000
PUBLIC	__real@44333333
PUBLIC	__real@443b8000
PUBLIC	__real@44480000
PUBLIC	__real@447a0000
PUBLIC	__real@44b33333
PUBLIC	__real@45333333
PUBLIC	__real@46ea6000
PUBLIC	__real@477fff00
PUBLIC	__real@47800000
PUBLIC	__real@47efffffe0000000
PUBLIC	__real@5f000000
PUBLIC	__real@7f7fffff
PUBLIC	__real@7fefffffffffffff
PUBLIC	__real@b4000000
PUBLIC	__real@be800000
PUBLIC	__real@beaaaaab
PUBLIC	__real@bf000000
PUBLIC	__real@bf400000
PUBLIC	__real@bf5db22d
PUBLIC	__real@bf5db3d0
PUBLIC	__real@bf800000
PUBLIC	__real@bfe0000000000000
PUBLIC	__real@c0000000
PUBLIC	__real@c0400000
PUBLIC	__real@c0a00000
PUBLIC	__real@c0c00000
PUBLIC	__real@c1200000
PUBLIC	__real@c3960000
PUBLIC	__real@c87a0000
PUBLIC	__real@ff7fffff
PUBLIC	__real@ffefffffffffffff
PUBLIC	__xmm@0000000000000000000000003f800000
PUBLIC	__xmm@00000000000000003ec28f5c00000000
PUBLIC	__xmm@00000000000000003f0000003d7df3b6
PUBLIC	__xmm@00000000000000003f80000000000000
PUBLIC	__xmm@00000000000000003f8000003f800000
PUBLIC	__xmm@00000000000000020000000300000001
PUBLIC	__xmm@00000000000000040000000000000000
PUBLIC	__xmm@00000000000000070000000000000000
PUBLIC	__xmm@000000000000000f0000000000000000
PUBLIC	__xmm@000000000000002f0000002e00000027
PUBLIC	__xmm@000000003f2a7efa3f8000003f2a7efa
PUBLIC	__xmm@000000003f2a7efa40c0000040c00000
PUBLIC	__xmm@000000003f8000000000000000000000
PUBLIC	__xmm@00000000be4cccf90000000000000000
PUBLIC	__xmm@00000000bf8000000000000000000000
PUBLIC	__xmm@00000001000000000000000000000000
PUBLIC	__xmm@00000001000000010000000100000001
PUBLIC	__xmm@00000002000000000000000100000003
PUBLIC	__xmm@00000002000000000000000400000000
PUBLIC	__xmm@00000002000000020000000200000002
PUBLIC	__xmm@00000003000000020000000100000000
PUBLIC	__xmm@00000003000000030000000300000003
PUBLIC	__xmm@00000004000000040000000800000008
PUBLIC	__xmm@00000004000000080000000800000008
PUBLIC	__xmm@0000003b0000002c0000005c0000005d
PUBLIC	__xmm@0000005b0000003d0000002d00000060
PUBLIC	__xmm@00000200000002000000020000000200
PUBLIC	__xmm@000002020000020e0000020d0000020c
PUBLIC	__xmm@0000026e0000026d0000026b0000026c
PUBLIC	__xmm@00000272000002710000026f00000270
PUBLIC	__xmm@00080008000800080008000800080008
PUBLIC	__xmm@00ff00ff00ff00ff00ff00ff00ff00ff
PUBLIC	__xmm@01010000010100000101000001010000
PUBLIC	__xmm@08a914e808a914e808a914e808a914e8
PUBLIC	__xmm@11c8e09e11c8e09e11c8e09e11c8e09e
PUBLIC	__xmm@11c8f9c311c8f9c311c8f9c311c8f9c3
PUBLIC	__xmm@12d0046b12d0046b12d0046b12d0046b
PUBLIC	__xmm@166f166f166f166f166f166f166f166f
PUBLIC	__xmm@1c5a1c5a1c5a1c5a1c5a1c5a1c5a1c5a
PUBLIC	__xmm@3e0080813f8000003f8000003f800000
PUBLIC	__xmm@3e20a0a13ef0f0f23ef0f0f23ef0f0f2
PUBLIC	__xmm@3e8000003e8000003f2a7efa3f2a7efa
PUBLIC	__xmm@3e8080813f8000003f0282833ca0a0a1
PUBLIC	__xmm@3ec0c0c23f8000003f8000003f800000
PUBLIC	__xmm@3ec8c8ca3f8000003f34b4b53e70f0f2
PUBLIC	__xmm@3f000000000000000000000000000000
PUBLIC	__xmm@3f0000003f8000003ec28f5c3f2a7efa
PUBLIC	__xmm@3f0000003f8000003f8000003d7df3b6
PUBLIC	__xmm@3f0000003f8000003f8000003e800000
PUBLIC	__xmm@3f0080813f8000003f0282833ca0a0a1
PUBLIC	__xmm@3f0080813f8000003f34b4b53e70f0f2
PUBLIC	__xmm@3f19999a3f19999a3f0a7efa3d7df3b6
PUBLIC	__xmm@3f20a0a1000000000000000000000000
PUBLIC	__xmm@3f2a7efa000000003ec28f5c00000000
PUBLIC	__xmm@3f2a7efa000000003f80000000000000
PUBLIC	__xmm@3f2a7efa3f2a7efa3f19999a3f19999a
PUBLIC	__xmm@3f34b4b53e0080813e0080813e34b4b5
PUBLIC	__xmm@3f34b4b53e0080813e34b4b53e008081
PUBLIC	__xmm@3f48c8ca3e0080813e0080813e008081
PUBLIC	__xmm@3f48c8ca3e8c8c8d3e70f0f23e70f0f2
PUBLIC	__xmm@3f800000000000000000000000000000
PUBLIC	__xmm@3f80000000000000000000003f800000
PUBLIC	__xmm@3f800000000000003ed2d2d43f4cccce
PUBLIC	__xmm@3f800000000000003f80000000000000
PUBLIC	__xmm@3f800000000000003f8000003f800000
PUBLIC	__xmm@3f80000000000000bf80000000000000
PUBLIC	__xmm@3f8000003d8f5c293d75c28f3e851eb8
PUBLIC	__xmm@3f8000003d8f5c293d8f5c293ef0a3d7
PUBLIC	__xmm@3f8000003d8f5c293e851eb83d75c28f
PUBLIC	__xmm@3f8000003e0f5c293e0f5c293f000000
PUBLIC	__xmm@3f8000003e19999a3df5c28f3f68f5c3
PUBLIC	__xmm@3f8000003e48c8ca3f30b0b13f800000
PUBLIC	__xmm@3f8000003e8080813f0080813f800000
PUBLIC	__xmm@3f8000003e851eb83d8f5c293d75c28f
PUBLIC	__xmm@3f8000003eb4b4b53f0282833eb4b4b5
PUBLIC	__xmm@3f8000003f0080813f0080813f800000
PUBLIC	__xmm@3f8000003f0080813f8000003f008081
PUBLIC	__xmm@3f8000003f0282833ec8c8ca3e8c8c8d
PUBLIC	__xmm@3f8000003f8000003f00000000000000
PUBLIC	__xmm@3f8000003f8000003f30b0b13e48c8ca
PUBLIC	__xmm@3f8000003f8000003f8000003f800000
PUBLIC	__xmm@40c00000404000004040000040000000
PUBLIC	__xmm@41000000410000004100000041000000
PUBLIC	__xmm@437f0000437f0000437f0000437f0000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
PUBLIC	__xmm@7fffffffffffffff7fffffffffffffff
PUBLIC	__xmm@80000000800000008000000080000000
PUBLIC	__xmm@80808080808080808080808080808080
PUBLIC	__xmm@bf800000bf8000380000000000000000
PUBLIC	__xmm@e09ee565e09ee565e09ee565e09ee565
PUBLIC	__xmm@e9cf12d0e9cf12d0e9cf12d0e9cf12d0
PUBLIC	__xmm@eb1a08a9eb1a08a9eb1a08a9eb1a08a9
PUBLIC	__xmm@f493f493f493f493f493f493f493f493
PUBLIC	__xmm@f9c31a9df9c31a9df9c31a9df9c31a9d
PUBLIC	__xmm@fa7efa7efa7efa7efa7efa7efa7efa7e
EXTRN	__std_terminate:PROC
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__chkstk:PROC
EXTRN	_dclass:PROC
EXTRN	_fdclass:PROC
EXTRN	acosf:PROC
EXTRN	atan2f:PROC
EXTRN	ceilf:PROC
EXTRN	cosf:PROC
EXTRN	floor:PROC
EXTRN	floorf:PROC
EXTRN	fmodf:PROC
EXTRN	log:PROC
EXTRN	log10:PROC
EXTRN	logf:PROC
EXTRN	memchr:PROC
EXTRN	memcmp:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	pow:PROC
EXTRN	powf:PROC
EXTRN	sinf:PROC
EXTRN	sqrt:PROC
EXTRN	sqrtf:PROC
EXTRN	strcmp:PROC
EXTRN	tanf:PROC
EXTRN	__ImageBase:BYTE
EXTRN	__isa_available:DWORD
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
EXTRN	_tls_index:DWORD
;	COMDAT __isa_available_default
_BSS	SEGMENT
__isa_available_default DD 01H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Visit@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@4@@?$_Variant_raw_visit1@$01@std@@SAX_K$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@@Z DD imagerel $LN131
	DD	imagerel $LN131+120
	DD	imagerel $unwind$??$_Visit@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@4@@?$_Variant_raw_visit1@$01@std@@SAX_K$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Variant_raw_visit@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@QEAAXXZ@@std@@YAX_KAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@QEAAXXZ@@Z DD imagerel $LN134
	DD	imagerel $LN134+120
	DD	imagerel $unwind$??$_Variant_raw_visit@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@QEAAXXZ@@std@@YAX_KAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@QEAAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RU?$_Tagged@AEAVNode@BymlFile@@$07@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAVNode@BymlFile@@$07@3@@Z DD imagerel $LN188
	DD	imagerel $LN188+40
	DD	imagerel $unwind$??$?RU?$_Tagged@AEAVNode@BymlFile@@$07@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAVNode@BymlFile@@$07@3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ DD imagerel $LN139
	DD	imagerel $LN139+124
	DD	imagerel $unwind$?_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ DD imagerel $LN97
	DD	imagerel $LN97+124
	DD	imagerel $unwind$??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAAPEAXI@Z DD imagerel $LN27
	DD	imagerel $LN27+35
	DD	imagerel $unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAA@XZ DD imagerel $LN23
	DD	imagerel $LN23+31
	DD	imagerel $unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@0@@Z DD imagerel $LN29
	DD	imagerel $LN29+31
	DD	imagerel $unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@1@@Z DD imagerel $LN31
	DD	imagerel $LN31+31
	DD	imagerel $unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GNode@RailData@PhiveData@Actor@@QEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+23
	DD	imagerel $unwind$??_GNode@RailData@PhiveData@Actor@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN77
	DD	imagerel $LN77+54
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+35
	DD	imagerel $unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAAPEAXI@Z DD imagerel $LN82
	DD	imagerel $LN82+96
	DD	imagerel $unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z DD imagerel $LN88
	DD	imagerel $LN88+25
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z DD imagerel $LN88+25
	DD	imagerel $LN88+116
	DD	imagerel $chain$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z DD imagerel $LN88+116
	DD	imagerel $LN88+125
	DD	imagerel $chain$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+31
	DD	imagerel $unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z DD imagerel $LN17
	DD	imagerel $LN17+31
	DD	imagerel $unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAA@XZ DD imagerel $LN77
	DD	imagerel $LN77+92
	DD	imagerel $unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@0@@Z DD imagerel $LN85
	DD	imagerel $LN85+92
	DD	imagerel $unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAAPEAXI@Z DD imagerel $LN41
	DD	imagerel $LN41+91
	DD	imagerel $unwind$??_G?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$pair@$$CBVNode@BymlFile@@I@std@@QEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+23
	DD	imagerel $unwind$??_G?$pair@$$CBVNode@BymlFile@@I@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@YAXPEAUNode@RailData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UNode@RailData@PhiveData@Actor@@@0@@Z DD imagerel $LN27
	DD	imagerel $LN27+49
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@YAXPEAUNode@RailData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UNode@RailData@PhiveData@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@@Z DD imagerel $LN49
	DD	imagerel $LN49+39
	DD	imagerel $unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAA@XZ DD imagerel $LN36
	DD	imagerel $LN36+88
	DD	imagerel $unwind$??1?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@YAXQEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@0@@Z DD imagerel $LN44
	DD	imagerel $LN44+88
	DD	imagerel $unwind$??$destroy_at@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@YAXQEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z DD imagerel $LN19
	DD	imagerel $LN19+31
	DD	imagerel $unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@1@@Z DD imagerel $LN88
	DD	imagerel $LN88+92
	DD	imagerel $unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UNode@RailData@PhiveData@Actor@@@std@@QEAAXQEAUNode@RailData@PhiveData@Actor@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@UNode@RailData@PhiveData@Actor@@@std@@QEAAXQEAUNode@RailData@PhiveData@Actor@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN53
	DD	imagerel $LN53+21
	DD	imagerel $unwind$?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN53+21
	DD	imagerel $LN53+102
	DD	imagerel $chain$0$?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN53+102
	DD	imagerel $LN53+162
	DD	imagerel $chain$1$?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN52
	DD	imagerel $LN52+42
	DD	imagerel $unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+23
	DD	imagerel $unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GNode@BymlFile@@QEAAPEAXI@Z DD imagerel $LN186
	DD	imagerel $LN186+44
	DD	imagerel $unwind$??_GNode@BymlFile@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+23
	DD	imagerel $unwind$??_GOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GReferData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+27
	DD	imagerel $unwind$??_GReferData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GRailData@PhiveData@Actor@@QEAAPEAXI@Z DD imagerel $LN14
	DD	imagerel $LN14+36
	DD	imagerel $unwind$??_GRailData@PhiveData@Actor@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GLink@Actor@@QEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+36
	DD	imagerel $unwind$??_GLink@Actor@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GRail@Actor@@QEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+36
	DD	imagerel $unwind$??_GRail@Actor@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GActor@@QEAAPEAXI@Z DD imagerel $LN679
	DD	imagerel $LN679+23
	DD	imagerel $unwind$??_GActor@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Node@BymlFile@@QEAA@XZ DD imagerel $LN41
	DD	imagerel $LN41+106
	DD	imagerel $unwind$??1Node@BymlFile@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@VNode@BymlFile@@@std@@YAXQEAVNode@BymlFile@@@Z DD imagerel $LN185
	DD	imagerel $LN185+40
	DD	imagerel $unwind$??$destroy_at@VNode@BymlFile@@@std@@YAXQEAVNode@BymlFile@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@1@@Z DD imagerel $LN47
	DD	imagerel $LN47+88
	DD	imagerel $unwind$??$destroy@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN55
	DD	imagerel $LN55+42
	DD	imagerel $unwind$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1OwnerData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ DD imagerel $LN221
	DD	imagerel $LN221+183
	DD	imagerel $unwind$??1OwnerData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1RailData@PhiveData@Actor@@QEAA@XZ DD imagerel $LN10
	DD	imagerel $LN10+32
	DD	imagerel $unwind$??1RailData@PhiveData@Actor@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@URailData@PhiveData@Actor@@@std@@YAXQEAURailData@PhiveData@Actor@@@Z DD imagerel $LN16
	DD	imagerel $LN16+32
	DD	imagerel $unwind$??$destroy_at@URailData@PhiveData@Actor@@@std@@YAXQEAURailData@PhiveData@Actor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Link@Actor@@QEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+32
	DD	imagerel $unwind$??1Link@Actor@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@ULink@Actor@@@std@@YAXQEAULink@Actor@@@Z DD imagerel $LN17
	DD	imagerel $LN17+32
	DD	imagerel $unwind$??$destroy_at@ULink@Actor@@@std@@YAXQEAULink@Actor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Rail@Actor@@QEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+32
	DD	imagerel $unwind$??1Rail@Actor@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@URail@Actor@@@std@@YAXQEAURail@Actor@@@Z DD imagerel $LN17
	DD	imagerel $LN17+32
	DD	imagerel $unwind$??$destroy_at@URail@Actor@@@std@@YAXQEAURail@Actor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN65
	DD	imagerel $LN65+54
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN134
	DD	imagerel $LN134+116
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z DD imagerel $LN9
	DD	imagerel $LN9+41
	DD	imagerel $unwind$??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@VNode@BymlFile@@@?$_Default_allocator_traits@V?$allocator@VNode@BymlFile@@@std@@@std@@SAXAEAV?$allocator@VNode@BymlFile@@@1@QEAVNode@BymlFile@@@Z DD imagerel $LN185
	DD	imagerel $LN185+40
	DD	imagerel $unwind$??$destroy@VNode@BymlFile@@@?$_Default_allocator_traits@V?$allocator@VNode@BymlFile@@@std@@@std@@SAXAEAV?$allocator@VNode@BymlFile@@@1@QEAVNode@BymlFile@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN93
	DD	imagerel $LN93+102
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN59
	DD	imagerel $LN59+36
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@URailData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@URailData@PhiveData@Actor@@@1@QEAURailData@PhiveData@Actor@@@Z DD imagerel $LN18
	DD	imagerel $LN18+32
	DD	imagerel $unwind$??$destroy@URailData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@URailData@PhiveData@Actor@@@1@QEAURailData@PhiveData@Actor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@ULink@Actor@@@?$_Default_allocator_traits@V?$allocator@ULink@Actor@@@std@@@std@@SAXAEAV?$allocator@ULink@Actor@@@1@QEAULink@Actor@@@Z DD imagerel $LN19
	DD	imagerel $LN19+32
	DD	imagerel $unwind$??$destroy@ULink@Actor@@@?$_Default_allocator_traits@V?$allocator@ULink@Actor@@@std@@@std@@SAXAEAV?$allocator@ULink@Actor@@@1@QEAULink@Actor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@URail@Actor@@@?$_Default_allocator_traits@V?$allocator@URail@Actor@@@std@@@std@@SAXAEAV?$allocator@URail@Actor@@@1@QEAURail@Actor@@@Z DD imagerel $LN19
	DD	imagerel $LN19+32
	DD	imagerel $unwind$??$destroy@URail@Actor@@@?$_Default_allocator_traits@V?$allocator@URail@Actor@@@std@@@std@@SAXAEAV?$allocator@URail@Actor@@@1@QEAURail@Actor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z DD imagerel $LN76
	DD	imagerel $LN76+25
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z DD imagerel $LN76+25
	DD	imagerel $LN76+116
	DD	imagerel $chain$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z DD imagerel $LN76+116
	DD	imagerel $LN76+125
	DD	imagerel $chain$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z DD imagerel $LN148
	DD	imagerel $LN148+25
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z DD imagerel $LN148+25
	DD	imagerel $LN148+139
	DD	imagerel $chain$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z DD imagerel $LN148+139
	DD	imagerel $LN148+184
	DD	imagerel $chain$3$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z DD imagerel $LN21
	DD	imagerel $LN21+60
	DD	imagerel $unwind$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN20
	DD	imagerel $LN20+53
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD imagerel $LN24
	DD	imagerel $LN24+49
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z DD imagerel $LN187
	DD	imagerel $LN187+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z DD imagerel $LN187+18
	DD	imagerel $LN187+82
	DD	imagerel $chain$0$??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z DD imagerel $LN187+82
	DD	imagerel $LN187+83
	DD	imagerel $chain$1$??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN106
	DD	imagerel $LN106+27
	DD	imagerel $unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN106+27
	DD	imagerel $LN106+127
	DD	imagerel $chain$0$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN106+127
	DD	imagerel $LN106+138
	DD	imagerel $chain$1$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN106+138
	DD	imagerel $LN106+145
	DD	imagerel $chain$2$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN70
	DD	imagerel $LN70+25
	DD	imagerel $unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN70+25
	DD	imagerel $LN70+70
	DD	imagerel $chain$0$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN70+70
	DD	imagerel $LN70+76
	DD	imagerel $chain$1$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@0@@Z DD imagerel $LN21
	DD	imagerel $LN21+52
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUReferData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@0@@Z DD imagerel $LN27
	DD	imagerel $LN27+50
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUReferData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z DD imagerel $LN29
	DD	imagerel $LN29+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z DD imagerel $LN29+10
	DD	imagerel $LN29+62
	DD	imagerel $chain$0$??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z DD imagerel $LN29+62
	DD	imagerel $LN29+63
	DD	imagerel $chain$1$??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z DD imagerel $LN30
	DD	imagerel $LN30+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z DD imagerel $LN30+10
	DD	imagerel $LN30+62
	DD	imagerel $chain$0$??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z DD imagerel $LN30+62
	DD	imagerel $LN30+63
	DD	imagerel $chain$1$??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z DD imagerel $LN30
	DD	imagerel $LN30+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z DD imagerel $LN30+10
	DD	imagerel $LN30+62
	DD	imagerel $chain$0$??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z DD imagerel $LN30+62
	DD	imagerel $LN30+63
	DD	imagerel $chain$1$??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UActor@@@std@@@std@@YAXPEAUActor@@QEAU1@AEAV?$allocator@UActor@@@0@@Z DD imagerel $LN694
	DD	imagerel $LN694+52
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UActor@@@std@@@std@@YAXPEAUActor@@QEAU1@AEAV?$allocator@UActor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z DD imagerel $LN49
	DD	imagerel $LN49+39
	DD	imagerel $unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@@Z DD imagerel $LN49
	DD	imagerel $LN49+39
	DD	imagerel $unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DD imagerel $LN23
	DD	imagerel $LN23+60
	DD	imagerel $unwind$??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN23
	DD	imagerel $LN23+62
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z DD imagerel $LN23
	DD	imagerel $LN23+62
	DD	imagerel $unwind$?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+66
	DD	imagerel $unwind$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@VNode@BymlFile@@@std@@QEAAXQEAVNode@BymlFile@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+63
	DD	imagerel $unwind$?deallocate@?$allocator@VNode@BymlFile@@@std@@QEAAXQEAVNode@BymlFile@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@2@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@2@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UModelElement@UMii@@@std@@QEAAXQEAUModelElement@UMii@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@UModelElement@UMii@@@std@@QEAAXQEAUModelElement@UMii@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+66
	DD	imagerel $unwind$?deallocate@?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUReferData@ConstraintLinkData@PhiveData@Actor@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUReferData@ConstraintLinkData@PhiveData@Actor@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@URailData@PhiveData@Actor@@@std@@QEAAXQEAURailData@PhiveData@Actor@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+66
	DD	imagerel $unwind$?deallocate@?$allocator@URailData@PhiveData@Actor@@@std@@QEAAXQEAURailData@PhiveData@Actor@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@ULink@Actor@@@std@@QEAAXQEAULink@Actor@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@ULink@Actor@@@std@@QEAAXQEAULink@Actor@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@URail@Actor@@@std@@QEAAXQEAURail@Actor@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+67
	DD	imagerel $unwind$?deallocate@?$allocator@URail@Actor@@@std@@QEAAXQEAURail@Actor@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UActor@@@std@@QEAAXQEAUActor@@_K@Z DD imagerel $LN23
	DD	imagerel $LN23+66
	DD	imagerel $unwind$?deallocate@?$allocator@UActor@@@std@@QEAAXQEAUActor@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN32
	DD	imagerel $LN32+95
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+88
	DD	imagerel $unwind$?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN50
	DD	imagerel $LN50+21
	DD	imagerel $unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN50+21
	DD	imagerel $LN50+80
	DD	imagerel $chain$0$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN50+80
	DD	imagerel $LN50+140
	DD	imagerel $chain$1$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ DD imagerel $LN163
	DD	imagerel $LN163+25
	DD	imagerel $unwind$?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ DD imagerel $LN163+25
	DD	imagerel $LN163+120
	DD	imagerel $chain$0$?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ DD imagerel $LN163+120
	DD	imagerel $LN163+180
	DD	imagerel $chain$1$?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@AEAAXXZ DD imagerel $LN49
	DD	imagerel $LN49+35
	DD	imagerel $unwind$?_Tidy@?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN32
	DD	imagerel $LN32+92
	DD	imagerel $unwind$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ DD imagerel $LN116
	DD	imagerel $LN116+35
	DD	imagerel $unwind$?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ DD imagerel $LN116+35
	DD	imagerel $LN116+86
	DD	imagerel $chain$0$?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ DD imagerel $LN116+86
	DD	imagerel $LN116+109
	DD	imagerel $chain$1$?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN32
	DD	imagerel $LN32+92
	DD	imagerel $unwind$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+114
	DD	imagerel $unwind$?_Tidy@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN47
	DD	imagerel $LN47+21
	DD	imagerel $unwind$?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN47+21
	DD	imagerel $LN47+104
	DD	imagerel $chain$0$?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN47+104
	DD	imagerel $LN47+164
	DD	imagerel $chain$1$?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN53
	DD	imagerel $LN53+21
	DD	imagerel $unwind$?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN53+21
	DD	imagerel $LN53+103
	DD	imagerel $chain$0$?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN53+103
	DD	imagerel $LN53+163
	DD	imagerel $chain$1$?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ DD imagerel $LN30
	DD	imagerel $LN30+92
	DD	imagerel $unwind$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN55
	DD	imagerel $LN55+21
	DD	imagerel $unwind$?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN55+21
	DD	imagerel $LN55+90
	DD	imagerel $chain$0$?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN55+90
	DD	imagerel $LN55+150
	DD	imagerel $chain$1$?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN56
	DD	imagerel $LN56+25
	DD	imagerel $unwind$?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN56+25
	DD	imagerel $LN56+116
	DD	imagerel $chain$0$?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN56+116
	DD	imagerel $LN56+176
	DD	imagerel $chain$1$?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN56
	DD	imagerel $LN56+25
	DD	imagerel $unwind$?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN56+25
	DD	imagerel $LN56+116
	DD	imagerel $chain$0$?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ DD imagerel $LN56+116
	DD	imagerel $LN56+176
	DD	imagerel $chain$1$?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ DD imagerel $LN321
	DD	imagerel $LN321+21
	DD	imagerel $unwind$?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ DD imagerel $LN321+21
	DD	imagerel $LN321+104
	DD	imagerel $chain$0$?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ DD imagerel $LN321+104
	DD	imagerel $LN321+164
	DD	imagerel $chain$1$?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+88
	DD	imagerel $unwind$??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ DD imagerel $LN52
	DD	imagerel $LN52+35
	DD	imagerel $unwind$??1?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN35
	DD	imagerel $LN35+92
	DD	imagerel $unwind$??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ DD imagerel $LN119
	DD	imagerel $LN119+35
	DD	imagerel $unwind$??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ DD imagerel $LN119+35
	DD	imagerel $LN119+86
	DD	imagerel $chain$0$??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ DD imagerel $LN119+86
	DD	imagerel $LN119+109
	DD	imagerel $chain$1$??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN35
	DD	imagerel $LN35+92
	DD	imagerel $unwind$??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN52
	DD	imagerel $LN52+42
	DD	imagerel $unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+92
	DD	imagerel $unwind$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN52
	DD	imagerel $LN52+42
	DD	imagerel $unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1UMii@@QEAA@XZ DD imagerel $LN19
	DD	imagerel $LN19+58
	DD	imagerel $unwind$??1UMii@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BymlFile@@QEAA@XZ DD imagerel $LN17
	DD	imagerel $LN17+61
	DD	imagerel $unwind$??1BymlFile@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN55
	DD	imagerel $LN55+42
	DD	imagerel $unwind$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1RopeLinkData@PhiveData@Actor@@QEAA@XZ DD imagerel $LN65
	DD	imagerel $LN65+173
	DD	imagerel $unwind$??1RopeLinkData@PhiveData@Actor@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ConstraintLinkData@PhiveData@Actor@@QEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+32
	DD	imagerel $unwind$??1ConstraintLinkData@PhiveData@Actor@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1PhiveData@Actor@@QEAA@XZ DD imagerel $LN68
	DD	imagerel $LN68+96
	DD	imagerel $unwind$??1PhiveData@Actor@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ DD imagerel $LN55
	DD	imagerel $LN55+42
	DD	imagerel $unwind$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Actor@@QEAA@XZ DD imagerel $LN156
	DD	imagerel $LN156+303
	DD	imagerel $unwind$??1Actor@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8Actor@@QEAA_NU0@@Z DD imagerel $LN68
	DD	imagerel $LN68+296
	DD	imagerel $unwind$??8Actor@@QEAA_NU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN38
	DD	imagerel $LN38+102
	DD	imagerel $unwind$??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN87
	DD	imagerel $LN87+116
	DD	imagerel $unwind$??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN13
	DD	imagerel $LN13+43
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
;	COMDAT __xmm@fa7efa7efa7efa7efa7efa7efa7efa7e
CONST	SEGMENT
__xmm@fa7efa7efa7efa7efa7efa7efa7efa7e DB '~', 0faH, '~', 0faH, '~', 0faH
	DB	'~', 0faH, '~', 0faH, '~', 0faH, '~', 0faH, '~', 0faH
CONST	ENDS
;	COMDAT __xmm@f9c31a9df9c31a9df9c31a9df9c31a9d
CONST	SEGMENT
__xmm@f9c31a9df9c31a9df9c31a9df9c31a9d DB 09dH, 01aH, 0c3H, 0f9H, 09dH, 01aH
	DB	0c3H, 0f9H, 09dH, 01aH, 0c3H, 0f9H, 09dH, 01aH, 0c3H, 0f9H
CONST	ENDS
;	COMDAT __xmm@f493f493f493f493f493f493f493f493
CONST	SEGMENT
__xmm@f493f493f493f493f493f493f493f493 DB 093H, 0f4H, 093H, 0f4H, 093H, 0f4H
	DB	093H, 0f4H, 093H, 0f4H, 093H, 0f4H, 093H, 0f4H, 093H, 0f4H
CONST	ENDS
;	COMDAT __xmm@eb1a08a9eb1a08a9eb1a08a9eb1a08a9
CONST	SEGMENT
__xmm@eb1a08a9eb1a08a9eb1a08a9eb1a08a9 DB 0a9H, 08H, 01aH, 0ebH, 0a9H, 08H
	DB	01aH, 0ebH, 0a9H, 08H, 01aH, 0ebH, 0a9H, 08H, 01aH, 0ebH
CONST	ENDS
;	COMDAT __xmm@e9cf12d0e9cf12d0e9cf12d0e9cf12d0
CONST	SEGMENT
__xmm@e9cf12d0e9cf12d0e9cf12d0e9cf12d0 DB 0d0H, 012H, 0cfH, 0e9H, 0d0H, 012H
	DB	0cfH, 0e9H, 0d0H, 012H, 0cfH, 0e9H, 0d0H, 012H, 0cfH, 0e9H
CONST	ENDS
;	COMDAT __xmm@e09ee565e09ee565e09ee565e09ee565
CONST	SEGMENT
__xmm@e09ee565e09ee565e09ee565e09ee565 DB 'e', 0e5H, 09eH, 0e0H, 'e', 0e5H
	DB	09eH, 0e0H, 'e', 0e5H, 09eH, 0e0H, 'e', 0e5H, 09eH, 0e0H
CONST	ENDS
;	COMDAT __xmm@bf800000bf8000380000000000000000
CONST	SEGMENT
__xmm@bf800000bf8000380000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, '8', 00H, 080H, 0bfH, 00H, 00H, 080H, 0bfH
CONST	ENDS
;	COMDAT __xmm@80808080808080808080808080808080
CONST	SEGMENT
__xmm@80808080808080808080808080808080 DB 080H, 080H, 080H, 080H, 080H, 080H
	DB	080H, 080H, 080H, 080H, 080H, 080H, 080H, 080H, 080H, 080H
CONST	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffffffffffff7fffffffffffffff
CONST	SEGMENT
__xmm@7fffffffffffffff7fffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@437f0000437f0000437f0000437f0000
CONST	SEGMENT
__xmm@437f0000437f0000437f0000437f0000 DB 00H, 00H, 07fH, 'C', 00H, 00H, 07fH
	DB	'C', 00H, 00H, 07fH, 'C', 00H, 00H, 07fH, 'C'
CONST	ENDS
;	COMDAT __xmm@41000000410000004100000041000000
CONST	SEGMENT
__xmm@41000000410000004100000041000000 DB 00H, 00H, 00H, 'A', 00H, 00H, 00H
	DB	'A', 00H, 00H, 00H, 'A', 00H, 00H, 00H, 'A'
CONST	ENDS
;	COMDAT __xmm@40c00000404000004040000040000000
CONST	SEGMENT
__xmm@40c00000404000004040000040000000 DB 00H, 00H, 00H, '@', 00H, 00H, '@'
	DB	'@', 00H, 00H, '@@', 00H, 00H, 0c0H, '@'
CONST	ENDS
;	COMDAT __xmm@3f8000003f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f8000003f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f8000003f30b0b13e48c8ca
CONST	SEGMENT
__xmm@3f8000003f8000003f30b0b13e48c8ca DB 0caH, 0c8H, 'H>', 0b1H, 0b0H, '0'
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f8000003f00000000000000
CONST	SEGMENT
__xmm@3f8000003f8000003f00000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f0282833ec8c8ca3e8c8c8d
CONST	SEGMENT
__xmm@3f8000003f0282833ec8c8ca3e8c8c8d DB 08dH, 08cH, 08cH, '>', 0caH, 0c8H
	DB	0c8H, '>', 083H, 082H, 02H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f0080813f8000003f008081
CONST	SEGMENT
__xmm@3f8000003f0080813f8000003f008081 DB 081H, 080H, 00H, '?', 00H, 00H, 080H
	DB	'?', 081H, 080H, 00H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f0080813f0080813f800000
CONST	SEGMENT
__xmm@3f8000003f0080813f0080813f800000 DB 00H, 00H, 080H, '?', 081H, 080H
	DB	00H, '?', 081H, 080H, 00H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003eb4b4b53f0282833eb4b4b5
CONST	SEGMENT
__xmm@3f8000003eb4b4b53f0282833eb4b4b5 DB 0b5H, 0b4H, 0b4H, '>', 083H, 082H
	DB	02H, '?', 0b5H, 0b4H, 0b4H, '>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003e851eb83d8f5c293d75c28f
CONST	SEGMENT
__xmm@3f8000003e851eb83d8f5c293d75c28f DB 08fH, 0c2H, 'u=)\', 08fH, '=', 0b8H
	DB	01eH, 085H, '>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003e8080813f0080813f800000
CONST	SEGMENT
__xmm@3f8000003e8080813f0080813f800000 DB 00H, 00H, 080H, '?', 081H, 080H
	DB	00H, '?', 081H, 080H, 080H, '>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003e48c8ca3f30b0b13f800000
CONST	SEGMENT
__xmm@3f8000003e48c8ca3f30b0b13f800000 DB 00H, 00H, 080H, '?', 0b1H, 0b0H
	DB	'0?', 0caH, 0c8H, 'H>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003e19999a3df5c28f3f68f5c3
CONST	SEGMENT
__xmm@3f8000003e19999a3df5c28f3f68f5c3 DB 0c3H, 0f5H, 'h?', 08fH, 0c2H, 0f5H
	DB	'=', 09aH, 099H, 019H, '>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003e0f5c293e0f5c293f000000
CONST	SEGMENT
__xmm@3f8000003e0f5c293e0f5c293f000000 DB 00H, 00H, 00H, '?)\', 0fH, '>)\'
	DB	0fH, '>', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003d8f5c293e851eb83d75c28f
CONST	SEGMENT
__xmm@3f8000003d8f5c293e851eb83d75c28f DB 08fH, 0c2H, 'u=', 0b8H, 01eH, 085H
	DB	'>)\', 08fH, '=', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003d8f5c293d8f5c293ef0a3d7
CONST	SEGMENT
__xmm@3f8000003d8f5c293d8f5c293ef0a3d7 DB 0d7H, 0a3H, 0f0H, '>)\', 08fH, '='
	DB	')\', 08fH, '=', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003d8f5c293d75c28f3e851eb8
CONST	SEGMENT
__xmm@3f8000003d8f5c293d75c28f3e851eb8 DB 0b8H, 01eH, 085H, '>', 08fH, 0c2H
	DB	'u=)\', 08fH, '=', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f80000000000000bf80000000000000
CONST	SEGMENT
__xmm@3f80000000000000bf80000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 080H
	DB	0bfH, 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f800000000000003f8000003f800000
CONST	SEGMENT
__xmm@3f800000000000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f800000000000003f80000000000000
CONST	SEGMENT
__xmm@3f800000000000003f80000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 080H
	DB	'?', 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f800000000000003ed2d2d43f4cccce
CONST	SEGMENT
__xmm@3f800000000000003ed2d2d43f4cccce DB 0ceH, 0ccH, 'L?', 0d4H, 0d2H, 0d2H
	DB	'>', 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f80000000000000000000003f800000
CONST	SEGMENT
__xmm@3f80000000000000000000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f800000000000000000000000000000
CONST	SEGMENT
__xmm@3f800000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f48c8ca3e8c8c8d3e70f0f23e70f0f2
CONST	SEGMENT
__xmm@3f48c8ca3e8c8c8d3e70f0f23e70f0f2 DB 0f2H, 0f0H, 'p>', 0f2H, 0f0H, 'p'
	DB	'>', 08dH, 08cH, 08cH, '>', 0caH, 0c8H, 'H?'
CONST	ENDS
;	COMDAT __xmm@3f48c8ca3e0080813e0080813e008081
CONST	SEGMENT
__xmm@3f48c8ca3e0080813e0080813e008081 DB 081H, 080H, 00H, '>', 081H, 080H
	DB	00H, '>', 081H, 080H, 00H, '>', 0caH, 0c8H, 'H?'
CONST	ENDS
;	COMDAT __xmm@3f34b4b53e0080813e34b4b53e008081
CONST	SEGMENT
__xmm@3f34b4b53e0080813e34b4b53e008081 DB 081H, 080H, 00H, '>', 0b5H, 0b4H
	DB	'4>', 081H, 080H, 00H, '>', 0b5H, 0b4H, '4?'
CONST	ENDS
;	COMDAT __xmm@3f34b4b53e0080813e0080813e34b4b5
CONST	SEGMENT
__xmm@3f34b4b53e0080813e0080813e34b4b5 DB 0b5H, 0b4H, '4>', 081H, 080H, 00H
	DB	'>', 081H, 080H, 00H, '>', 0b5H, 0b4H, '4?'
CONST	ENDS
;	COMDAT __xmm@3f2a7efa3f2a7efa3f19999a3f19999a
CONST	SEGMENT
__xmm@3f2a7efa3f2a7efa3f19999a3f19999a DB 09aH, 099H, 019H, '?', 09aH, 099H
	DB	019H, '?', 0faH, '~*?', 0faH, '~*?'
CONST	ENDS
;	COMDAT __xmm@3f2a7efa000000003f80000000000000
CONST	SEGMENT
__xmm@3f2a7efa000000003f80000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 080H
	DB	'?', 00H, 00H, 00H, 00H, 0faH, '~*?'
CONST	ENDS
;	COMDAT __xmm@3f2a7efa000000003ec28f5c00000000
CONST	SEGMENT
__xmm@3f2a7efa000000003ec28f5c00000000 DB 00H, 00H, 00H, 00H, '\', 08fH, 0c2H
	DB	'>', 00H, 00H, 00H, 00H, 0faH, '~*?'
CONST	ENDS
;	COMDAT __xmm@3f20a0a1000000000000000000000000
CONST	SEGMENT
__xmm@3f20a0a1000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 0a1H, 0a0H, ' ?'
CONST	ENDS
;	COMDAT __xmm@3f19999a3f19999a3f0a7efa3d7df3b6
CONST	SEGMENT
__xmm@3f19999a3f19999a3f0a7efa3d7df3b6 DB 0b6H, 0f3H, '}=', 0faH, '~', 0aH
	DB	'?', 09aH, 099H, 019H, '?', 09aH, 099H, 019H, '?'
CONST	ENDS
;	COMDAT __xmm@3f0080813f8000003f34b4b53e70f0f2
CONST	SEGMENT
__xmm@3f0080813f8000003f34b4b53e70f0f2 DB 0f2H, 0f0H, 'p>', 0b5H, 0b4H, '4'
	DB	'?', 00H, 00H, 080H, '?', 081H, 080H, 00H, '?'
CONST	ENDS
;	COMDAT __xmm@3f0080813f8000003f0282833ca0a0a1
CONST	SEGMENT
__xmm@3f0080813f8000003f0282833ca0a0a1 DB 0a1H, 0a0H, 0a0H, '<', 083H, 082H
	DB	02H, '?', 00H, 00H, 080H, '?', 081H, 080H, 00H, '?'
CONST	ENDS
;	COMDAT __xmm@3f0000003f8000003f8000003e800000
CONST	SEGMENT
__xmm@3f0000003f8000003f8000003e800000 DB 00H, 00H, 080H, '>', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 00H, '?'
CONST	ENDS
;	COMDAT __xmm@3f0000003f8000003f8000003d7df3b6
CONST	SEGMENT
__xmm@3f0000003f8000003f8000003d7df3b6 DB 0b6H, 0f3H, '}=', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 00H, '?'
CONST	ENDS
;	COMDAT __xmm@3f0000003f8000003ec28f5c3f2a7efa
CONST	SEGMENT
__xmm@3f0000003f8000003ec28f5c3f2a7efa DB 0faH, '~*?\', 08fH, 0c2H, '>', 00H
	DB	00H, 080H, '?', 00H, 00H, 00H, '?'
CONST	ENDS
;	COMDAT __xmm@3f000000000000000000000000000000
CONST	SEGMENT
__xmm@3f000000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, '?'
CONST	ENDS
;	COMDAT __xmm@3ec8c8ca3f8000003f34b4b53e70f0f2
CONST	SEGMENT
__xmm@3ec8c8ca3f8000003f34b4b53e70f0f2 DB 0f2H, 0f0H, 'p>', 0b5H, 0b4H, '4'
	DB	'?', 00H, 00H, 080H, '?', 0caH, 0c8H, 0c8H, '>'
CONST	ENDS
;	COMDAT __xmm@3ec0c0c23f8000003f8000003f800000
CONST	SEGMENT
__xmm@3ec0c0c23f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 0c2H, 0c0H, 0c0H, '>'
CONST	ENDS
;	COMDAT __xmm@3e8080813f8000003f0282833ca0a0a1
CONST	SEGMENT
__xmm@3e8080813f8000003f0282833ca0a0a1 DB 0a1H, 0a0H, 0a0H, '<', 083H, 082H
	DB	02H, '?', 00H, 00H, 080H, '?', 081H, 080H, 080H, '>'
CONST	ENDS
;	COMDAT __xmm@3e8000003e8000003f2a7efa3f2a7efa
CONST	SEGMENT
__xmm@3e8000003e8000003f2a7efa3f2a7efa DB 0faH, '~*?', 0faH, '~*?', 00H, 00H
	DB	080H, '>', 00H, 00H, 080H, '>'
CONST	ENDS
;	COMDAT __xmm@3e20a0a13ef0f0f23ef0f0f23ef0f0f2
CONST	SEGMENT
__xmm@3e20a0a13ef0f0f23ef0f0f23ef0f0f2 DB 0f2H, 0f0H, 0f0H, '>', 0f2H, 0f0H
	DB	0f0H, '>', 0f2H, 0f0H, 0f0H, '>', 0a1H, 0a0H, ' >'
CONST	ENDS
;	COMDAT __xmm@3e0080813f8000003f8000003f800000
CONST	SEGMENT
__xmm@3e0080813f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 081H, 080H, 00H, '>'
CONST	ENDS
;	COMDAT __xmm@1c5a1c5a1c5a1c5a1c5a1c5a1c5a1c5a
CONST	SEGMENT
__xmm@1c5a1c5a1c5a1c5a1c5a1c5a1c5a1c5a DB 'Z', 01cH, 'Z', 01cH, 'Z', 01cH
	DB	'Z', 01cH, 'Z', 01cH, 'Z', 01cH, 'Z', 01cH, 'Z', 01cH
CONST	ENDS
;	COMDAT __xmm@166f166f166f166f166f166f166f166f
CONST	SEGMENT
__xmm@166f166f166f166f166f166f166f166f DB 'o', 016H, 'o', 016H, 'o', 016H
	DB	'o', 016H, 'o', 016H, 'o', 016H, 'o', 016H, 'o', 016H
CONST	ENDS
;	COMDAT __xmm@12d0046b12d0046b12d0046b12d0046b
CONST	SEGMENT
__xmm@12d0046b12d0046b12d0046b12d0046b DB 'k', 04H, 0d0H, 012H, 'k', 04H, 0d0H
	DB	012H, 'k', 04H, 0d0H, 012H, 'k', 04H, 0d0H, 012H
CONST	ENDS
;	COMDAT __xmm@11c8f9c311c8f9c311c8f9c311c8f9c3
CONST	SEGMENT
__xmm@11c8f9c311c8f9c311c8f9c311c8f9c3 DB 0c3H, 0f9H, 0c8H, 011H, 0c3H, 0f9H
	DB	0c8H, 011H, 0c3H, 0f9H, 0c8H, 011H, 0c3H, 0f9H, 0c8H, 011H
CONST	ENDS
;	COMDAT __xmm@11c8e09e11c8e09e11c8e09e11c8e09e
CONST	SEGMENT
__xmm@11c8e09e11c8e09e11c8e09e11c8e09e DB 09eH, 0e0H, 0c8H, 011H, 09eH, 0e0H
	DB	0c8H, 011H, 09eH, 0e0H, 0c8H, 011H, 09eH, 0e0H, 0c8H, 011H
CONST	ENDS
;	COMDAT __xmm@08a914e808a914e808a914e808a914e8
CONST	SEGMENT
__xmm@08a914e808a914e808a914e808a914e8 DB 0e8H, 014H, 0a9H, 08H, 0e8H, 014H
	DB	0a9H, 08H, 0e8H, 014H, 0a9H, 08H, 0e8H, 014H, 0a9H, 08H
CONST	ENDS
;	COMDAT __xmm@01010000010100000101000001010000
CONST	SEGMENT
__xmm@01010000010100000101000001010000 DB 00H, 00H, 01H, 01H, 00H, 00H, 01H
	DB	01H, 00H, 00H, 01H, 01H, 00H, 00H, 01H, 01H
CONST	ENDS
;	COMDAT __xmm@00ff00ff00ff00ff00ff00ff00ff00ff
CONST	SEGMENT
__xmm@00ff00ff00ff00ff00ff00ff00ff00ff DB 0ffH, 00H, 0ffH, 00H, 0ffH, 00H
	DB	0ffH, 00H, 0ffH, 00H, 0ffH, 00H, 0ffH, 00H, 0ffH, 00H
CONST	ENDS
;	COMDAT __xmm@00080008000800080008000800080008
CONST	SEGMENT
__xmm@00080008000800080008000800080008 DB 08H, 00H, 08H, 00H, 08H, 00H, 08H
	DB	00H, 08H, 00H, 08H, 00H, 08H, 00H, 08H, 00H
CONST	ENDS
;	COMDAT __xmm@00000272000002710000026f00000270
CONST	SEGMENT
__xmm@00000272000002710000026f00000270 DB 'p', 02H, 00H, 00H, 'o', 02H, 00H
	DB	00H, 'q', 02H, 00H, 00H, 'r', 02H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@0000026e0000026d0000026b0000026c
CONST	SEGMENT
__xmm@0000026e0000026d0000026b0000026c DB 'l', 02H, 00H, 00H, 'k', 02H, 00H
	DB	00H, 'm', 02H, 00H, 00H, 'n', 02H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@000002020000020e0000020d0000020c
CONST	SEGMENT
__xmm@000002020000020e0000020d0000020c DB 0cH, 02H, 00H, 00H, 0dH, 02H, 00H
	DB	00H, 0eH, 02H, 00H, 00H, 02H, 02H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000200000002000000020000000200
CONST	SEGMENT
__xmm@00000200000002000000020000000200 DB 00H, 02H, 00H, 00H, 00H, 02H, 00H
	DB	00H, 00H, 02H, 00H, 00H, 00H, 02H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@0000005b0000003d0000002d00000060
CONST	SEGMENT
__xmm@0000005b0000003d0000002d00000060 DB '`', 00H, 00H, 00H, '-', 00H, 00H
	DB	00H, '=', 00H, 00H, 00H, '[', 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@0000003b0000002c0000005c0000005d
CONST	SEGMENT
__xmm@0000003b0000002c0000005c0000005d DB ']', 00H, 00H, 00H, '\', 00H, 00H
	DB	00H, ',', 00H, 00H, 00H, ';', 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000004000000080000000800000008
CONST	SEGMENT
__xmm@00000004000000080000000800000008 DB 08H, 00H, 00H, 00H, 08H, 00H, 00H
	DB	00H, 08H, 00H, 00H, 00H, 04H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000004000000040000000800000008
CONST	SEGMENT
__xmm@00000004000000040000000800000008 DB 08H, 00H, 00H, 00H, 08H, 00H, 00H
	DB	00H, 04H, 00H, 00H, 00H, 04H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000003000000030000000300000003
CONST	SEGMENT
__xmm@00000003000000030000000300000003 DB 03H, 00H, 00H, 00H, 03H, 00H, 00H
	DB	00H, 03H, 00H, 00H, 00H, 03H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000003000000020000000100000000
CONST	SEGMENT
__xmm@00000003000000020000000100000000 DB 00H, 00H, 00H, 00H, 01H, 00H, 00H
	DB	00H, 02H, 00H, 00H, 00H, 03H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000002000000020000000200000002
CONST	SEGMENT
__xmm@00000002000000020000000200000002 DB 02H, 00H, 00H, 00H, 02H, 00H, 00H
	DB	00H, 02H, 00H, 00H, 00H, 02H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000002000000000000000400000000
CONST	SEGMENT
__xmm@00000002000000000000000400000000 DB 00H, 00H, 00H, 00H, 04H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 02H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000002000000000000000100000003
CONST	SEGMENT
__xmm@00000002000000000000000100000003 DB 03H, 00H, 00H, 00H, 01H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 02H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000001000000010000000100000001
CONST	SEGMENT
__xmm@00000001000000010000000100000001 DB 01H, 00H, 00H, 00H, 01H, 00H, 00H
	DB	00H, 01H, 00H, 00H, 00H, 01H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000001000000000000000000000000
CONST	SEGMENT
__xmm@00000001000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 01H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000bf8000000000000000000000
CONST	SEGMENT
__xmm@00000000bf8000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 080H, 0bfH, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000be4cccf90000000000000000
CONST	SEGMENT
__xmm@00000000be4cccf90000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 0f9H, 0ccH, 'L', 0beH, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@000000003f8000000000000000000000
CONST	SEGMENT
__xmm@000000003f8000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 080H, '?', 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@000000003f2a7efa40c0000040c00000
CONST	SEGMENT
__xmm@000000003f2a7efa40c0000040c00000 DB 00H, 00H, 0c0H, '@', 00H, 00H, 0c0H
	DB	'@', 0faH, '~*?', 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@000000003f2a7efa3f8000003f2a7efa
CONST	SEGMENT
__xmm@000000003f2a7efa3f8000003f2a7efa DB 0faH, '~*?', 00H, 00H, 080H, '?'
	DB	0faH, '~*?', 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@000000000000002f0000002e00000027
CONST	SEGMENT
__xmm@000000000000002f0000002e00000027 DB '''', 00H, 00H, 00H, '.', 00H, 00H
	DB	00H, '/', 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@000000000000000f0000000000000000
CONST	SEGMENT
__xmm@000000000000000f0000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 0fH, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000000000070000000000000000
CONST	SEGMENT
__xmm@00000000000000070000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 07H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000000000040000000000000000
CONST	SEGMENT
__xmm@00000000000000040000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 04H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000000000020000000300000001
CONST	SEGMENT
__xmm@00000000000000020000000300000001 DB 01H, 00H, 00H, 00H, 03H, 00H, 00H
	DB	00H, 02H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000000000003f8000003f800000
CONST	SEGMENT
__xmm@00000000000000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000000000003f80000000000000
CONST	SEGMENT
__xmm@00000000000000003f80000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 080H
	DB	'?', 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000000000003f0000003d7df3b6
CONST	SEGMENT
__xmm@00000000000000003f0000003d7df3b6 DB 0b6H, 0f3H, '}=', 00H, 00H, 00H
	DB	'?', 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000000000003ec28f5c00000000
CONST	SEGMENT
__xmm@00000000000000003ec28f5c00000000 DB 00H, 00H, 00H, 00H, '\', 08fH, 0c2H
	DB	'>', 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@0000000000000000000000003f800000
CONST	SEGMENT
__xmm@0000000000000000000000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@ffefffffffffffff
CONST	SEGMENT
__real@ffefffffffffffff DQ 0ffefffffffffffffr	; -1.79769e+308
CONST	ENDS
;	COMDAT __real@ff7fffff
CONST	SEGMENT
__real@ff7fffff DD 0ff7fffffr			; -3.40282e+38
CONST	ENDS
;	COMDAT __real@c87a0000
CONST	SEGMENT
__real@c87a0000 DD 0c87a0000r			; -256000
CONST	ENDS
;	COMDAT __real@c3960000
CONST	SEGMENT
__real@c3960000 DD 0c3960000r			; -300
CONST	ENDS
;	COMDAT __real@c1200000
CONST	SEGMENT
__real@c1200000 DD 0c1200000r			; -10
CONST	ENDS
;	COMDAT __real@c0c00000
CONST	SEGMENT
__real@c0c00000 DD 0c0c00000r			; -6
CONST	ENDS
;	COMDAT __real@c0a00000
CONST	SEGMENT
__real@c0a00000 DD 0c0a00000r			; -5
CONST	ENDS
;	COMDAT __real@c0400000
CONST	SEGMENT
__real@c0400000 DD 0c0400000r			; -3
CONST	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@bf5db3d0
CONST	SEGMENT
__real@bf5db3d0 DD 0bf5db3d0r			; -0.866025
CONST	ENDS
;	COMDAT __real@bf5db22d
CONST	SEGMENT
__real@bf5db22d DD 0bf5db22dr			; -0.866
CONST	ENDS
;	COMDAT __real@bf400000
CONST	SEGMENT
__real@bf400000 DD 0bf400000r			; -0.75
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT __real@beaaaaab
CONST	SEGMENT
__real@beaaaaab DD 0beaaaaabr			; -0.333333
CONST	ENDS
;	COMDAT __real@be800000
CONST	SEGMENT
__real@be800000 DD 0be800000r			; -0.25
CONST	ENDS
;	COMDAT __real@b4000000
CONST	SEGMENT
__real@b4000000 DD 0b4000000r			; -1.19209e-07
CONST	ENDS
;	COMDAT __real@7fefffffffffffff
CONST	SEGMENT
__real@7fefffffffffffff DQ 07fefffffffffffffr	; 1.79769e+308
CONST	ENDS
;	COMDAT __real@7f7fffff
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+38
CONST	ENDS
;	COMDAT __real@5f000000
CONST	SEGMENT
__real@5f000000 DD 05f000000r			; 9.22337e+18
CONST	ENDS
;	COMDAT __real@47efffffe0000000
CONST	SEGMENT
__real@47efffffe0000000 DQ 047efffffe0000000r	; 3.40282e+38
CONST	ENDS
;	COMDAT __real@47800000
CONST	SEGMENT
__real@47800000 DD 047800000r			; 65536
CONST	ENDS
;	COMDAT __real@477fff00
CONST	SEGMENT
__real@477fff00 DD 0477fff00r			; 65535
CONST	ENDS
;	COMDAT __real@46ea6000
CONST	SEGMENT
__real@46ea6000 DD 046ea6000r			; 30000
CONST	ENDS
;	COMDAT __real@45333333
CONST	SEGMENT
__real@45333333 DD 045333333r			; 2867.2
CONST	ENDS
;	COMDAT __real@44b33333
CONST	SEGMENT
__real@44b33333 DD 044b33333r			; 1433.6
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@443b8000
CONST	SEGMENT
__real@443b8000 DD 0443b8000r			; 750
CONST	ENDS
;	COMDAT __real@44333333
CONST	SEGMENT
__real@44333333 DD 044333333r			; 716.8
CONST	ENDS
;	COMDAT __real@44160000
CONST	SEGMENT
__real@44160000 DD 044160000r			; 600
CONST	ENDS
;	COMDAT __real@43fa0000
CONST	SEGMENT
__real@43fa0000 DD 043fa0000r			; 500
CONST	ENDS
;	COMDAT __real@43e0000000000000
CONST	SEGMENT
__real@43e0000000000000 DQ 043e0000000000000r	; 9.22337e+18
CONST	ENDS
;	COMDAT __real@43960000
CONST	SEGMENT
__real@43960000 DD 043960000r			; 300
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@437a0000
CONST	SEGMENT
__real@437a0000 DD 0437a0000r			; 250
CONST	ENDS
;	COMDAT __real@43620000
CONST	SEGMENT
__real@43620000 DD 043620000r			; 226
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@42f60000
CONST	SEGMENT
__real@42f60000 DD 042f60000r			; 123
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@428c0000
CONST	SEGMENT
__real@428c0000 DD 0428c0000r			; 70
CONST	ENDS
;	COMDAT __real@42800000
CONST	SEGMENT
__real@42800000 DD 042800000r			; 64
CONST	ENDS
;	COMDAT __real@427c0000
CONST	SEGMENT
__real@427c0000 DD 0427c0000r			; 63
CONST	ENDS
;	COMDAT __real@42700000
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
CONST	ENDS
;	COMDAT __real@42652ee1
CONST	SEGMENT
__real@42652ee1 DD 042652ee1r			; 57.2958
CONST	ENDS
;	COMDAT __real@42652ee0
CONST	SEGMENT
__real@42652ee0 DD 042652ee0r			; 57.2958
CONST	ENDS
;	COMDAT __real@42580000
CONST	SEGMENT
__real@42580000 DD 042580000r			; 54
CONST	ENDS
;	COMDAT __real@42400000
CONST	SEGMENT
__real@42400000 DD 042400000r			; 48
CONST	ENDS
;	COMDAT __real@42340000
CONST	SEGMENT
__real@42340000 DD 042340000r			; 45
CONST	ENDS
;	COMDAT __real@42000000
CONST	SEGMENT
__real@42000000 DD 042000000r			; 32
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@41d80000
CONST	SEGMENT
__real@41d80000 DD 041d80000r			; 27
CONST	ENDS
;	COMDAT __real@41c00000
CONST	SEGMENT
__real@41c00000 DD 041c00000r			; 24
CONST	ENDS
;	COMDAT __real@41b80000
CONST	SEGMENT
__real@41b80000 DD 041b80000r			; 23
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@419c0000
CONST	SEGMENT
__real@419c0000 DD 0419c0000r			; 19.5
CONST	ENDS
;	COMDAT __real@41900000
CONST	SEGMENT
__real@41900000 DD 041900000r			; 18
CONST	ENDS
;	COMDAT __real@41880000
CONST	SEGMENT
__real@41880000 DD 041880000r			; 17
CONST	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@41600000
CONST	SEGMENT
__real@41600000 DD 041600000r			; 14
CONST	ENDS
;	COMDAT __real@41500000
CONST	SEGMENT
__real@41500000 DD 041500000r			; 13
CONST	ENDS
;	COMDAT __real@41490fdb
CONST	SEGMENT
__real@41490fdb DD 041490fdbr			; 12.5664
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@41100000
CONST	SEGMENT
__real@41100000 DD 041100000r			; 9
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@40e80000
CONST	SEGMENT
__real@40e80000 DD 040e80000r			; 7.25
CONST	ENDS
;	COMDAT __real@40d9999a
CONST	SEGMENT
__real@40d9999a DD 040d9999ar			; 6.8
CONST	ENDS
;	COMDAT __real@40d55555
CONST	SEGMENT
__real@40d55555 DD 040d55555r			; 6.66667
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40c5eb9c
CONST	SEGMENT
__real@40c5eb9c DD 040c5eb9cr			; 6.18501
CONST	ENDS
;	COMDAT __real@40c2c75c
CONST	SEGMENT
__real@40c2c75c DD 040c2c75cr			; 6.08684
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40b00000
CONST	SEGMENT
__real@40b00000 DD 040b00000r			; 5.5
CONST	ENDS
;	COMDAT __real@40afede0
CONST	SEGMENT
__real@40afede0 DD 040afede0r			; 5.49779
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@4099999a
CONST	SEGMENT
__real@4099999a DD 04099999ar			; 4.8
CONST	ENDS
;	COMDAT __real@40900000
CONST	SEGMENT
__real@40900000 DD 040900000r			; 4.5
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@4078800000000000
CONST	SEGMENT
__real@4078800000000000 DQ 04078800000000000r	; 392
CONST	ENDS
;	COMDAT __real@4072000000000000
CONST	SEGMENT
__real@4072000000000000 DQ 04072000000000000r	; 288
CONST	ENDS
;	COMDAT __real@4070000000000000
CONST	SEGMENT
__real@4070000000000000 DQ 04070000000000000r	; 256
CONST	ENDS
;	COMDAT __real@40666666
CONST	SEGMENT
__real@40666666 DD 040666666r			; 3.6
CONST	ENDS
;	COMDAT __real@40600000
CONST	SEGMENT
__real@40600000 DD 040600000r			; 3.5
CONST	ENDS
;	COMDAT __real@40555555
CONST	SEGMENT
__real@40555555 DD 040555555r			; 3.33333
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@4040000000000000
CONST	SEGMENT
__real@4040000000000000 DQ 04040000000000000r	; 32
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@403f5c29
CONST	SEGMENT
__real@403f5c29 DD 0403f5c29r			; 2.99
CONST	ENDS
;	COMDAT __real@4030000000000000
CONST	SEGMENT
__real@4030000000000000 DQ 04030000000000000r	; 16
CONST	ENDS
;	COMDAT __real@40266666
CONST	SEGMENT
__real@40266666 DD 040266666r			; 2.6
CONST	ENDS
;	COMDAT __real@4020000000000000
CONST	SEGMENT
__real@4020000000000000 DQ 04020000000000000r	; 8
CONST	ENDS
;	COMDAT __real@40200000
CONST	SEGMENT
__real@40200000 DD 040200000r			; 2.5
CONST	ENDS
;	COMDAT __real@4019999a
CONST	SEGMENT
__real@4019999a DD 04019999ar			; 2.4
CONST	ENDS
;	COMDAT __real@400ccccd
CONST	SEGMENT
__real@400ccccd DD 0400ccccdr			; 2.2
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe8000000000000
CONST	SEGMENT
__real@3fe8000000000000 DQ 03fe8000000000000r	; 0.75
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fe00000
CONST	SEGMENT
__real@3fe00000 DD 03fe00000r			; 1.75
CONST	ENDS
;	COMDAT __real@3fdd1745c0000000
CONST	SEGMENT
__real@3fdd1745c0000000 DQ 03fdd1745c0000000r	; 0.454545
CONST	ENDS
;	COMDAT __real@3fd9999a
CONST	SEGMENT
__real@3fd9999a DD 03fd9999ar			; 1.7
CONST	ENDS
;	COMDAT __real@3fd55555
CONST	SEGMENT
__real@3fd55555 DD 03fd55555r			; 1.66667
CONST	ENDS
;	COMDAT __real@3fcccccd
CONST	SEGMENT
__real@3fcccccd DD 03fcccccdr			; 1.6
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3fbde44e
CONST	SEGMENT
__real@3fbde44e DD 03fbde44er			; 1.48353
CONST	ENDS
;	COMDAT __real@3fb33333
CONST	SEGMENT
__real@3fb33333 DD 03fb33333r			; 1.4
CONST	ENDS
;	COMDAT __real@3faccccd
CONST	SEGMENT
__real@3faccccd DD 03faccccdr			; 1.35
CONST	ENDS
;	COMDAT __real@3f99999a
CONST	SEGMENT
__real@3f99999a DD 03f99999ar			; 1.2
CONST	ENDS
;	COMDAT __real@3f8f1aa0
CONST	SEGMENT
__real@3f8f1aa0 DD 03f8f1aa0r			; 1.118
CONST	ENDS
;	COMDAT __real@3f8ccccd
CONST	SEGMENT
__real@3f8ccccd DD 03f8ccccdr			; 1.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7ffffe
CONST	SEGMENT
__real@3f7ffffe DD 03f7ffffer			; 1
CONST	ENDS
;	COMDAT __real@3f7fffef
CONST	SEGMENT
__real@3f7fffef DD 03f7fffefr			; 0.999999
CONST	ENDS
;	COMDAT __real@3f7fff58
CONST	SEGMENT
__real@3f7fff58 DD 03f7fff58r			; 0.99999
CONST	ENDS
;	COMDAT __real@3f7d70a4
CONST	SEGMENT
__real@3f7d70a4 DD 03f7d70a4r			; 0.99
CONST	ENDS
;	COMDAT __real@3f68f5c3
CONST	SEGMENT
__real@3f68f5c3 DD 03f68f5c3r			; 0.91
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f5db3d0
CONST	SEGMENT
__real@3f5db3d0 DD 03f5db3d0r			; 0.866025
CONST	ENDS
;	COMDAT __real@3f5db22d
CONST	SEGMENT
__real@3f5db22d DD 03f5db22dr			; 0.866
CONST	ENDS
;	COMDAT __real@3f59999a
CONST	SEGMENT
__real@3f59999a DD 03f59999ar			; 0.85
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f490fdb
CONST	SEGMENT
__real@3f490fdb DD 03f490fdbr			; 0.785398
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f3851ec
CONST	SEGMENT
__real@3f3851ec DD 03f3851ecr			; 0.72
CONST	ENDS
;	COMDAT __real@3f350481
CONST	SEGMENT
__real@3f350481 DD 03f350481r			; 0.7071
CONST	ENDS
;	COMDAT __real@3f333333
CONST	SEGMENT
__real@3f333333 DD 03f333333r			; 0.7
CONST	ENDS
;	COMDAT __real@3f2b851f
CONST	SEGMENT
__real@3f2b851f DD 03f2b851fr			; 0.67
CONST	ENDS
;	COMDAT __real@3f266666
CONST	SEGMENT
__real@3f266666 DD 03f266666r			; 0.65
CONST	ENDS
;	COMDAT __real@3f1b645a
CONST	SEGMENT
__real@3f1b645a DD 03f1b645ar			; 0.607
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3f0ccccd
CONST	SEGMENT
__real@3f0ccccd DD 03f0ccccdr			; 0.55
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3efae148
CONST	SEGMENT
__real@3efae148 DD 03efae148r			; 0.49
CONST	ENDS
;	COMDAT __real@3ee4f8b580000000
CONST	SEGMENT
__real@3ee4f8b580000000 DQ 03ee4f8b580000000r	; 1e-05
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3ec90fdb
CONST	SEGMENT
__real@3ec90fdb DD 03ec90fdbr			; 0.392699
CONST	ENDS
;	COMDAT __real@3eb33333
CONST	SEGMENT
__real@3eb33333 DD 03eb33333r			; 0.35
CONST	ENDS
;	COMDAT __real@3eaaaaab
CONST	SEGMENT
__real@3eaaaaab DD 03eaaaaabr			; 0.333333
CONST	ENDS
;	COMDAT __real@3ea3d70a
CONST	SEGMENT
__real@3ea3d70a DD 03ea3d70ar			; 0.32
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3e851eb8
CONST	SEGMENT
__real@3e851eb8 DD 03e851eb8r			; 0.26
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e6147ae
CONST	SEGMENT
__real@3e6147ae DD 03e6147aer			; 0.22
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3e3851ec
CONST	SEGMENT
__real@3e3851ec DD 03e3851ecr			; 0.18
CONST	ENDS
;	COMDAT __real@3e2aaaab
CONST	SEGMENT
__real@3e2aaaab DD 03e2aaaabr			; 0.166667
CONST	ENDS
;	COMDAT __real@3e19999a
CONST	SEGMENT
__real@3e19999a DD 03e19999ar			; 0.15
CONST	ENDS
;	COMDAT __real@3e0f5c29
CONST	SEGMENT
__real@3e0f5c29 DD 03e0f5c29r			; 0.14
CONST	ENDS
;	COMDAT __real@3e09374c
CONST	SEGMENT
__real@3e09374c DD 03e09374cr			; 0.134
CONST	ENDS
;	COMDAT __real@3e051eb8
CONST	SEGMENT
__real@3e051eb8 DD 03e051eb8r			; 0.13
CONST	ENDS
;	COMDAT __real@3e000000
CONST	SEGMENT
__real@3e000000 DD 03e000000r			; 0.125
CONST	ENDS
;	COMDAT __real@3df5c28f
CONST	SEGMENT
__real@3df5c28f DD 03df5c28fr			; 0.12
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3da3d70a
CONST	SEGMENT
__real@3da3d70a DD 03da3d70ar			; 0.08
CONST	ENDS
;	COMDAT __real@3d8f5c29
CONST	SEGMENT
__real@3d8f5c29 DD 03d8f5c29r			; 0.07
CONST	ENDS
;	COMDAT __real@3d860a92
CONST	SEGMENT
__real@3d860a92 DD 03d860a92r			; 0.0654498
CONST	ENDS
;	COMDAT __real@3d75c28f
CONST	SEGMENT
__real@3d75c28f DD 03d75c28fr			; 0.06
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3d2aaaab
CONST	SEGMENT
__real@3d2aaaab DD 03d2aaaabr			; 0.0416667
CONST	ENDS
;	COMDAT __real@3d23d70a
CONST	SEGMENT
__real@3d23d70a DD 03d23d70ar			; 0.04
CONST	ENDS
;	COMDAT __real@3cf5c28f
CONST	SEGMENT
__real@3cf5c28f DD 03cf5c28fr			; 0.03
CONST	ENDS
;	COMDAT __real@3cdd2f1b
CONST	SEGMENT
__real@3cdd2f1b DD 03cdd2f1br			; 0.027
CONST	ENDS
;	COMDAT __real@3ca72f05
CONST	SEGMENT
__real@3ca72f05 DD 03ca72f05r			; 0.0204082
CONST	ENDS
;	COMDAT __real@3ca3d70a
CONST	SEGMENT
__real@3ca3d70a DD 03ca3d70ar			; 0.02
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT __real@3c888889
CONST	SEGMENT
__real@3c888889 DD 03c888889r			; 0.0166667
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@3c000000
CONST	SEGMENT
__real@3c000000 DD 03c000000r			; 0.0078125
CONST	ENDS
;	COMDAT __real@3b90fdbc
CONST	SEGMENT
__real@3b90fdbc DD 03b90fdbcr			; 0.00442478
CONST	ENDS
;	COMDAT __real@3b808081
CONST	SEGMENT
__real@3b808081 DD 03b808081r			; 0.00392157
CONST	ENDS
;	COMDAT __real@3b800000
CONST	SEGMENT
__real@3b800000 DD 03b800000r			; 0.00390625
CONST	ENDS
;	COMDAT __real@3b05bf37
CONST	SEGMENT
__real@3b05bf37 DD 03b05bf37r			; 0.00204082
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT __real@38800000
CONST	SEGMENT
__real@38800000 DD 038800000r			; 6.10352e-05
CONST	ENDS
;	COMDAT __real@38000000
CONST	SEGMENT
__real@38000000 DD 038000000r			; 3.05176e-05
CONST	ENDS
;	COMDAT __real@37800000
CONST	SEGMENT
__real@37800000 DD 037800000r			; 1.52588e-05
CONST	ENDS
;	COMDAT __real@3727c5ac
CONST	SEGMENT
__real@3727c5ac DD 03727c5acr			; 1e-05
CONST	ENDS
;	COMDAT __real@358637bd
CONST	SEGMENT
__real@358637bd DD 0358637bdr			; 1e-06
CONST	ENDS
;	COMDAT __real@34000000
CONST	SEGMENT
__real@34000000 DD 034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT __real@1e3ce508
CONST	SEGMENT
__real@1e3ce508 DD 01e3ce508r			; 1e-20
CONST	ENDS
;	COMDAT __real@00800000
CONST	SEGMENT
__real@00800000 DD 000800000r			; 1.17549e-38
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8Actor@@QEAA_NU0@@Z DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Actor@@QEAA@XZ DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1PhiveData@Actor@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ConstraintLinkData@PhiveData@Actor@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1RopeLinkData@PhiveData@Actor@@QEAA@XZ DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BymlFile@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1UMii@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ DD 021H
	DD	imagerel $LN119
	DD	imagerel $LN119+35
	DD	imagerel $unwind$??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ DD 020521H
	DD	073405H
	DD	imagerel $LN119
	DD	imagerel $LN119+35
	DD	imagerel $unwind$??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ DD 040a01H
	DD	08640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN321
	DD	imagerel $LN321+21
	DD	imagerel $unwind$?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ DD 020521H
	DD	076405H
	DD	imagerel $LN321
	DD	imagerel $LN321+21
	DD	imagerel $unwind$?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN56
	DD	imagerel $LN56+25
	DD	imagerel $unwind$?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ DD 020521H
	DD	076405H
	DD	imagerel $LN56
	DD	imagerel $LN56+25
	DD	imagerel $unwind$?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN56
	DD	imagerel $LN56+25
	DD	imagerel $unwind$?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ DD 020521H
	DD	076405H
	DD	imagerel $LN56
	DD	imagerel $LN56+25
	DD	imagerel $unwind$?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN55
	DD	imagerel $LN55+21
	DD	imagerel $unwind$?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD 020521H
	DD	076405H
	DD	imagerel $LN55
	DD	imagerel $LN55+21
	DD	imagerel $unwind$?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN53
	DD	imagerel $LN53+21
	DD	imagerel $unwind$?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD 020521H
	DD	077405H
	DD	imagerel $LN53
	DD	imagerel $LN53+21
	DD	imagerel $unwind$?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD 040a01H
	DD	08340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN47
	DD	imagerel $LN47+21
	DD	imagerel $unwind$?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD 020521H
	DD	076405H
	DD	imagerel $LN47
	DD	imagerel $LN47+21
	DD	imagerel $unwind$?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN116
	DD	imagerel $LN116+35
	DD	imagerel $unwind$?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ DD 020521H
	DD	073405H
	DD	imagerel $LN116
	DD	imagerel $LN116+35
	DD	imagerel $unwind$?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ DD 040a01H
	DD	08640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN163
	DD	imagerel $LN163+25
	DD	imagerel $unwind$?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ DD 020521H
	DD	076405H
	DD	imagerel $LN163
	DD	imagerel $LN163+25
	DD	imagerel $unwind$?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ DD 040a01H
	DD	08340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN50
	DD	imagerel $LN50+21
	DD	imagerel $unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD 020521H
	DD	077405H
	DD	imagerel $LN50
	DD	imagerel $LN50+21
	DD	imagerel $unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD 040a01H
	DD	08340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UActor@@@std@@QEAAXQEAUActor@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@URail@Actor@@@std@@QEAAXQEAURail@Actor@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@ULink@Actor@@@std@@QEAAXQEAULink@Actor@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@URailData@PhiveData@Actor@@@std@@QEAAXQEAURailData@PhiveData@Actor@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUReferData@ConstraintLinkData@PhiveData@Actor@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UModelElement@UMii@@@std@@QEAAXQEAUModelElement@UMii@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@VNode@BymlFile@@@std@@QEAAXQEAVNode@BymlFile@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UActor@@@std@@@std@@YAXPEAUActor@@QEAU1@AEAV?$allocator@UActor@@@0@@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z DD 021H
	DD	imagerel $LN30
	DD	imagerel $LN30+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN30
	DD	imagerel $LN30+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z DD 021H
	DD	imagerel $LN30
	DD	imagerel $LN30+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN30
	DD	imagerel $LN30+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z DD 021H
	DD	imagerel $LN29
	DD	imagerel $LN29+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN29
	DD	imagerel $LN29+10
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z DD 020a01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUReferData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@0@@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@0@@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z DD 021H
	DD	imagerel $LN70
	DD	imagerel $LN70+25
	DD	imagerel $unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z DD 020521H
	DD	067405H
	DD	imagerel $LN70
	DD	imagerel $LN70+25
	DD	imagerel $unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z DD 020021H
	DD	067400H
	DD	imagerel $LN106
	DD	imagerel $LN106+27
	DD	imagerel $unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z DD 021H
	DD	imagerel $LN106
	DD	imagerel $LN106+27
	DD	imagerel $unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z DD 020521H
	DD	067405H
	DD	imagerel $LN106
	DD	imagerel $LN106+27
	DD	imagerel $unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z DD 040a01H
	DD	08340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z DD 021H
	DD	imagerel $LN187
	DD	imagerel $LN187+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z DD 020521H
	DD	067405H
	DD	imagerel $LN187
	DD	imagerel $LN187+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z DD 040f01H
	DD	07340fH
	DD	0600b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z DD 021H
	DD	imagerel $LN148
	DD	imagerel $LN148+25
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z DD 060f21H
	DD	04f40fH
	DD	05740aH
	DD	0d6405H
	DD	imagerel $LN148
	DD	imagerel $LN148+25
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z DD 040901H
	DD	0e0055209H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z DD 021H
	DD	imagerel $LN76
	DD	imagerel $LN76+25
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z DD 040a21H
	DD	04740aH
	DD	056405H
	DD	imagerel $LN76
	DD	imagerel $LN76+25
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z DD 040901H
	DD	0e0055209H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@URail@Actor@@@?$_Default_allocator_traits@V?$allocator@URail@Actor@@@std@@@std@@SAXAEAV?$allocator@URail@Actor@@@1@QEAURail@Actor@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@ULink@Actor@@@?$_Default_allocator_traits@V?$allocator@ULink@Actor@@@std@@@std@@SAXAEAV?$allocator@ULink@Actor@@@1@QEAULink@Actor@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@URailData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@URailData@PhiveData@Actor@@@1@QEAURailData@PhiveData@Actor@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@VNode@BymlFile@@@?$_Default_allocator_traits@V?$allocator@VNode@BymlFile@@@std@@@std@@SAXAEAV?$allocator@VNode@BymlFile@@@1@QEAVNode@BymlFile@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@URail@Actor@@@std@@YAXQEAURail@Actor@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Rail@Actor@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@ULink@Actor@@@std@@YAXQEAULink@Actor@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Link@Actor@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@URailData@PhiveData@Actor@@@std@@YAXQEAURailData@PhiveData@Actor@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1RailData@PhiveData@Actor@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1OwnerData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@VNode@BymlFile@@@std@@YAXQEAVNode@BymlFile@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Node@BymlFile@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GActor@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GRail@Actor@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GLink@Actor@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GRailData@PhiveData@Actor@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GReferData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GNode@BymlFile@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN53
	DD	imagerel $LN53+21
	DD	imagerel $unwind$?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD 020521H
	DD	077405H
	DD	imagerel $LN53
	DD	imagerel $LN53+21
	DD	imagerel $unwind$?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ DD 040a01H
	DD	08340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UNode@RailData@PhiveData@Actor@@@std@@QEAAXQEAUNode@RailData@PhiveData@Actor@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@YAXQEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@YAXPEAUNode@RailData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UNode@RailData@PhiveData@Actor@@@0@@Z DD 040f01H
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$pair@$$CBVNode@BymlFile@@I@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z DD 021H
	DD	imagerel $LN88
	DD	imagerel $LN88+25
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z DD 040a21H
	DD	04740aH
	DD	056405H
	DD	imagerel $LN88
	DD	imagerel $LN88+25
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z DD 040901H
	DD	0e0055209H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GNode@RailData@PhiveData@Actor@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RU?$_Tagged@AEAVNode@BymlFile@@$07@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAVNode@BymlFile@@$07@3@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Variant_raw_visit@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@QEAAXXZ@@std@@YAX_KAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@QEAAXXZ@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Visit@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@4@@?$_Variant_raw_visit1@$01@std@@SAX_K$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtr1common
;	COMDAT ?is_constant_evaluated@std@@YA_NXZ
_TEXT	SEGMENT
?is_constant_evaluated@std@@YA_NXZ PROC			; std::is_constant_evaluated, COMDAT

; 174  :     return __builtin_is_constant_evaluated();

	xor	al, al

; 175  : }

	ret	0
?is_constant_evaluated@std@@YA_NXZ ENDP			; std::is_constant_evaluated
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$dead$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 169  :         (void)_Size;
; 170  :         return _Where;

	mov	rax, rdx

; 171  :     }

	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 155  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN13:
	sub	rsp, 40					; 00000028H

; 156  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 157  :     _Bytes += _Non_user_size;

	add	QWORD PTR [rdx], 39			; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rax, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax-8]

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rdx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN7@Adjust_man

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	QWORD PTR [rcx], rdx

; 176  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN7@Adjust_man:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN11@Adjust_man:
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base0@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Orphan_all@_Container_base0@std@@QEAAXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT

; 1168 :     _CONSTEXPR20 void _Orphan_all() noexcept {}

	ret	0
?_Orphan_all@_Container_base0@std@@QEAAXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$unordered_map@V?$vector@EV?$allocator@E@std@@@std@@IUVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$unordered_map@V?$vector@EV?$allocator@E@std@@@std@@IUVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ PROC ; std::unordered_map<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::~unordered_map<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >, COMDAT
	jmp	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
??1?$unordered_map@V?$vector@EV?$allocator@E@std@@@std@@IUVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ ENDP ; std::unordered_map<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::~unordered_map<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Hash<std::_Umap_traits<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,std::_Uhash_compare<std::vector<unsigned char,std::allocator<unsigned char> >,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >,0> >::~_Hash<std::_Umap_traits<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,std::_Uhash_compare<std::vector<unsigned char,std::allocator<unsigned char> >,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >,0> >, COMDAT
$LN87:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 312  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx+24]
	test	rcx, rcx
	je	SHORT $LN6@Hash

; 284  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+40]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN26@Hash

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN23@Hash

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN26@Hash:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 315  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+24], rax

; 316  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+32], rax

; 317  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+40], rax
$LN6@Hash:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	rdx, QWORD PTR [rbx+8]
	call	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx+8]
	mov	edx, 48					; 00000030H
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN23@Hash:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN84@Hash:
??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Hash<std::_Umap_traits<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,std::_Uhash_compare<std::vector<unsigned char,std::allocator<unsigned char> >,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >,0> >::~_Hash<std::_Umap_traits<std::vector<unsigned char,std::allocator<unsigned char> >,unsigned int,std::_Uhash_compare<std::vector<unsigned char,std::allocator<unsigned char> >,BymlFile::VectorHasher,std::equal_to<std::vector<unsigned char,std::allocator<unsigned char> > > >,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$unordered_map@VNode@BymlFile@@IUNodeHasher@2@UNodeEqual@2@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$unordered_map@VNode@BymlFile@@IUNodeHasher@2@UNodeEqual@2@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@QEAA@XZ PROC ; std::unordered_map<BymlFile::Node,unsigned int,BymlFile::NodeHasher,BymlFile::NodeEqual,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::~unordered_map<BymlFile::Node,unsigned int,BymlFile::NodeHasher,BymlFile::NodeEqual,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >, COMDAT
	jmp	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
??1?$unordered_map@VNode@BymlFile@@IUNodeHasher@2@UNodeEqual@2@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@QEAA@XZ ENDP ; std::unordered_map<BymlFile::Node,unsigned int,BymlFile::NodeHasher,BymlFile::NodeEqual,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::~unordered_map<BymlFile::Node,unsigned int,BymlFile::NodeHasher,BymlFile::NodeEqual,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Hash<std::_Umap_traits<BymlFile::Node,unsigned int,std::_Uhash_compare<BymlFile::Node,BymlFile::NodeHasher,BymlFile::NodeEqual>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> >,0> >::~_Hash<std::_Umap_traits<BymlFile::Node,unsigned int,std::_Uhash_compare<BymlFile::Node,BymlFile::NodeHasher,BymlFile::NodeEqual>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> >,0> >, COMDAT
$LN38:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 312  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx+24]
	test	rcx, rcx
	je	SHORT $LN6@Hash

; 284  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+40]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN26@Hash

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN23@Hash

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN26@Hash:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 315  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+24], rax

; 316  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+32], rax

; 317  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+40], rax
$LN6@Hash:
	lea	rcx, QWORD PTR [rbx+8]
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ ; std::list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::~list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >
$LN23@Hash:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN35@Hash:
??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Hash<std::_Umap_traits<BymlFile::Node,unsigned int,std::_Uhash_compare<BymlFile::Node,BymlFile::NodeHasher,BymlFile::NodeEqual>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> >,0> >::~_Hash<std::_Umap_traits<BymlFile::Node,unsigned int,std::_Uhash_compare<BymlFile::Node,BymlFile::NodeHasher,BymlFile::NodeEqual>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Vector3F.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Vector3F.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Vector3F.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Vector3F.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Vector3F.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Vector3F.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp
;	COMDAT ??8Actor@@QEAA_NU0@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 32
this$ = 64
AnotherActor$ = 72
??8Actor@@QEAA_NU0@@Z PROC				; Actor::operator==, COMDAT

; 4    : {

$LN68:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 48					; 00000030H

; 5    : 	return this->ActorType == AnotherActor.ActorType &&

	mov	eax, DWORD PTR [rdx]
	mov	rdi, rdx
	mov	rbx, rcx
	cmp	DWORD PTR [rcx], eax
	jne	$LN3@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rax, QWORD PTR [rdx+24]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp

; 5    : 	return this->ActorType == AnotherActor.ActorType &&

	add	rdx, 8
	add	rcx, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdx+24], 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN10@operator

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN10@operator:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16

; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	r8, QWORD PTR [rcx+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN15@operator

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN15@operator:

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	cmp	r8, rax
	jne	$LN3@operator

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	test	eax, eax
	jne	$LN3@operator
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp

; 5    : 	return this->ActorType == AnotherActor.ActorType &&

	mov	eax, DWORD PTR [rdi+48]
	cmp	DWORD PTR [rbx+48], eax
	jne	$LN3@operator
	mov	rax, QWORD PTR [rdi+40]
	cmp	QWORD PTR [rbx+40], rax
	jne	$LN3@operator
	movsd	xmm1, QWORD PTR [rdi+52]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Vector3F.cpp

; 59   : 	return this->GetRawData()[0] == V.m_Data[0] && this->GetRawData()[1] == V.m_Data[1] && this->GetRawData()[2] == V.m_Data[2];

	movss	xmm0, DWORD PTR [rbx+52]
	ucomiss	xmm0, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp

; 5    : 	return this->ActorType == AnotherActor.ActorType &&

	movsd	QWORD PTR $T3[rsp], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Vector3F.cpp

; 59   : 	return this->GetRawData()[0] == V.m_Data[0] && this->GetRawData()[1] == V.m_Data[1] && this->GetRawData()[2] == V.m_Data[2];

	jp	$LN3@operator
	jne	$LN3@operator
	movss	xmm0, DWORD PTR [rbx+56]
	ucomiss	xmm0, DWORD PTR $T3[rsp+4]
	jp	SHORT $LN3@operator
	jne	SHORT $LN3@operator
	movss	xmm1, DWORD PTR [rbx+60]
	ucomiss	xmm1, DWORD PTR [rdi+60]
	jp	SHORT $LN3@operator
	jne	SHORT $LN3@operator
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp

; 5    : 	return this->ActorType == AnotherActor.ActorType &&

	movsd	xmm1, QWORD PTR [rdi+76]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Vector3F.cpp

; 59   : 	return this->GetRawData()[0] == V.m_Data[0] && this->GetRawData()[1] == V.m_Data[1] && this->GetRawData()[2] == V.m_Data[2];

	movss	xmm0, DWORD PTR [rbx+76]
	ucomiss	xmm0, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp

; 5    : 	return this->ActorType == AnotherActor.ActorType &&

	movsd	QWORD PTR $T2[rsp], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Vector3F.cpp

; 59   : 	return this->GetRawData()[0] == V.m_Data[0] && this->GetRawData()[1] == V.m_Data[1] && this->GetRawData()[2] == V.m_Data[2];

	jp	SHORT $LN3@operator
	jne	SHORT $LN3@operator
	movss	xmm0, DWORD PTR [rbx+80]
	ucomiss	xmm0, DWORD PTR $T2[rsp+4]
	jp	SHORT $LN3@operator
	jne	SHORT $LN3@operator
	movss	xmm1, DWORD PTR [rbx+84]
	ucomiss	xmm1, DWORD PTR [rdi+84]
	jp	SHORT $LN3@operator
	jne	SHORT $LN3@operator
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp

; 5    : 	return this->ActorType == AnotherActor.ActorType &&

	movsd	xmm1, QWORD PTR [rdi+64]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Vector3F.cpp

; 59   : 	return this->GetRawData()[0] == V.m_Data[0] && this->GetRawData()[1] == V.m_Data[1] && this->GetRawData()[2] == V.m_Data[2];

	movss	xmm0, DWORD PTR [rbx+64]
	ucomiss	xmm0, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp

; 5    : 	return this->ActorType == AnotherActor.ActorType &&

	movsd	QWORD PTR $T1[rsp], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Vector3F.cpp

; 59   : 	return this->GetRawData()[0] == V.m_Data[0] && this->GetRawData()[1] == V.m_Data[1] && this->GetRawData()[2] == V.m_Data[2];

	jp	SHORT $LN3@operator
	jne	SHORT $LN3@operator
	movss	xmm0, DWORD PTR [rbx+68]
	ucomiss	xmm0, DWORD PTR $T1[rsp+4]
	jp	SHORT $LN3@operator
	jne	SHORT $LN3@operator
	movss	xmm1, DWORD PTR [rbx+72]
	ucomiss	xmm1, DWORD PTR [rdi+72]
	jp	SHORT $LN3@operator
	jne	SHORT $LN3@operator
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\Actor.cpp

; 5    : 	return this->ActorType == AnotherActor.ActorType &&

	mov	bl, 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	xor	bl, bl
$LN4@operator:
	mov	rcx, rdi
	call	??1Actor@@QEAA@XZ
	movzx	eax, bl

; 6    : 		this->Gyml == AnotherActor.Gyml &&
; 7    : 		this->SRTHash == AnotherActor.SRTHash &&
; 8    : 		this->Hash == AnotherActor.Hash &&
; 9    : 		this->Translate == AnotherActor.Translate &&
; 10   : 		this->Rotate == AnotherActor.Rotate &&
; 11   : 		this->Scale == AnotherActor.Scale;
; 12   : }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??8Actor@@QEAA_NU0@@Z ENDP				; Actor::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1Actor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1Actor@@QEAA@XZ PROC					; Actor::~Actor, COMDAT
$LN156:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	add	rcx, 824				; 00000338H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAXXZ ; std::vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >::_Tidy
	lea	rcx, QWORD PTR [rdi+792]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rdi+760]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rdi+728]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rdi+696]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rdi+608]
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+544]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+504]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+480]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+456]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
	lea	rcx, QWORD PTR [rdi+432]
	call	?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ ; std::vector<Actor,std::allocator<Actor> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rdi+408]
	lea	rdx, QWORD PTR [rdi+408]
	lea	rcx, QWORD PTR [rdi+408]
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rdi+408]
	mov	edx, 112				; 00000070H
	call	??3@YAXPEAX_K@Z				; operator delete
	lea	rcx, QWORD PTR [rdi+200]
	call	??1PhiveData@Actor@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rdi+184]
	lea	rdx, QWORD PTR [rdi+184]
	lea	rcx, QWORD PTR [rdi+184]
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rdi+184]
	mov	edx, 96					; 00000060H
	call	??3@YAXPEAX_K@Z				; operator delete
	lea	rcx, QWORD PTR [rdi+160]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::Rail,std::allocator<Actor::Rail> >::_Tidy
	lea	rcx, QWORD PTR [rdi+136]
	call	?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::Link,std::allocator<Actor::Link> >::_Tidy
	lea	rcx, QWORD PTR [rdi+88]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rdi+8]
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1Actor@@QEAA@XZ ENDP					; Actor::~Actor
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
$LN55:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 96					; 00000060H
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@QEAA@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1PhiveData@Actor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1PhiveData@Actor@@QEAA@XZ PROC			; Actor::PhiveData::~PhiveData, COMDAT
$LN68:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 184				; 000000b8H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >::_Tidy
	lea	rcx, QWORD PTR [rbx+128]
	call	??1RopeLinkData@PhiveData@Actor@@QEAA@XZ
	lea	rcx, QWORD PTR [rbx+72]
	call	??1RopeLinkData@PhiveData@Actor@@QEAA@XZ
	lea	rcx, QWORD PTR [rbx+48]
	call	?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::_Tidy
	lea	rcx, QWORD PTR [rbx+24]
	call	?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rbx]
	mov	rdx, rbx
	mov	rcx, rbx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 96					; 00000060H
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??3@YAXPEAX_K@Z				; operator delete
??1PhiveData@Actor@@QEAA@XZ ENDP			; Actor::PhiveData::~PhiveData
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1ConstraintLinkData@PhiveData@Actor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1ConstraintLinkData@PhiveData@Actor@@QEAA@XZ PROC	; Actor::PhiveData::ConstraintLinkData::~ConstraintLinkData, COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H

; 767  :         _Tidy();

	call	?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::_Tidy
	lea	rcx, QWORD PTR [rbx+8]
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::_Tidy
??1ConstraintLinkData@PhiveData@Actor@@QEAA@XZ ENDP	; Actor::PhiveData::ConstraintLinkData::~ConstraintLinkData
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1RopeLinkData@PhiveData@Actor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1RopeLinkData@PhiveData@Actor@@QEAA@XZ PROC		; Actor::PhiveData::RopeLinkData::~RopeLinkData, COMDAT
$LN65:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	xor	edi, edi
	mov	rcx, QWORD PTR [rcx+32]
	test	rcx, rcx
	je	SHORT $LN6@RopeLinkDa

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+48]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN24@RopeLinkDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN48@RopeLinkDa

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN24@RopeLinkDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+32], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+40], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+48], rdi
$LN6@RopeLinkDa:

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN33@RopeLinkDa

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+24]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN51@RopeLinkDa

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN48@RopeLinkDa

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN51@RopeLinkDa:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+8], rdi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+16], rdi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+24], rdi
$LN33@RopeLinkDa:
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN48@RopeLinkDa:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN62@RopeLinkDa:
??1RopeLinkData@PhiveData@Actor@@QEAA@XZ ENDP		; Actor::PhiveData::RopeLinkData::~RopeLinkData
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@@std@@QEAA@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >, COMDAT
$LN55:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 112				; 00000070H
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@@std@@QEAA@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1BymlFile@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1BymlFile@@QEAA@XZ PROC				; BymlFile::~BymlFile, COMDAT
$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 152				; 00000098H
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbx+88]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbx+48]

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rbx+24]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
??1BymlFile@@QEAA@XZ ENDP				; BymlFile::~BymlFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1UMii@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1UMii@@QEAA@XZ PROC					; UMii::~UMii, COMDAT
$LN19:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	sub	rcx, -128				; ffffffffffffff80H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAXXZ ; std::vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >::_Tidy
	lea	rcx, QWORD PTR [rbx+96]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+64]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1UMii@@QEAA@XZ ENDP					; UMii::~UMii
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@QEAA@XZ PROC ; std::vector<Actor,std::allocator<Actor> >::~vector<Actor,std::allocator<Actor> >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ ; std::vector<Actor,std::allocator<Actor> >::_Tidy
??1?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@QEAA@XZ ENDP ; std::vector<Actor,std::allocator<Actor> >::~vector<Actor,std::allocator<Actor> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >,0> >, COMDAT

; 1080 :     ~_Tree() noexcept {

$LN52:
	push	rbx
	sub	rsp, 32					; 00000020H

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx

; 1080 :     ~_Tree() noexcept {

	mov	rbx, rcx

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 112				; 00000070H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1087 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@QEAA@XZ PROC ; std::vector<Actor::Rail,std::allocator<Actor::Rail> >::~vector<Actor::Rail,std::allocator<Actor::Rail> >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::Rail,std::allocator<Actor::Rail> >::_Tidy
??1?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@QEAA@XZ ENDP ; std::vector<Actor::Rail,std::allocator<Actor::Rail> >::~vector<Actor::Rail,std::allocator<Actor::Rail> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@QEAA@XZ PROC ; std::vector<Actor::Link,std::allocator<Actor::Link> >::~vector<Actor::Link,std::allocator<Actor::Link> >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::Link,std::allocator<Actor::Link> >::_Tidy
??1?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@QEAA@XZ ENDP ; std::vector<Actor::Link,std::allocator<Actor::Link> >::~vector<Actor::Link,std::allocator<Actor::Link> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@QEAA@XZ PROC ; std::vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >::~vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >::_Tidy
??1?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@QEAA@XZ ENDP ; std::vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >::~vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ PROC	; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@_KV?$allocator@_K@std@@@std@@QEAA@XZ ENDP	; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::~vector<unsigned __int64,std::allocator<unsigned __int64> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@QEAA@XZ PROC ; std::vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::~vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::_Tidy
??1?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@QEAA@XZ ENDP ; std::vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::~vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@QEAA@XZ PROC ; std::vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::~vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::_Tidy
??1?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@QEAA@XZ ENDP ; std::vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::~vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >, COMDAT

; 1080 :     ~_Tree() noexcept {

$LN52:
	push	rbx
	sub	rsp, 32					; 00000020H

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx

; 1080 :     ~_Tree() noexcept {

	mov	rbx, rcx

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 96					; 00000060H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1087 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@QEAA@XZ PROC ; std::vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >::~vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAXXZ ; std::vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >::_Tidy
??1?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@QEAA@XZ ENDP ; std::vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >::~vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >, COMDAT

; 321  :     ~_Hash_vec() {

$LN35:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 312  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@Hash_vec

; 284  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN24@Hash_vec

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN21@Hash_vec

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN24@Hash_vec:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 315  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 316  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 317  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@Hash_vec:

; 327  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN21@Hash_vec:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN32@Hash_vec:
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ PROC ; std::list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::~list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >, COMDAT

; 1045 :     ~list() noexcept {

$LN119:
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	rdx, QWORD PTR [rcx]

; 1045 :     ~list() noexcept {

	mov	rsi, rcx

; 325  :         _Head->_Prev->_Next = nullptr;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

	mov	rdi, QWORD PTR [rdx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	test	rdi, rdi
	je	SHORT $LN7@list
	mov	QWORD PTR [rsp+56], rbx
	npad	8
$LL8@list:

; 329  :             _Pnext = _Pnode->_Next;

	mov	rbx, QWORD PTR [rdi]

; 318  :         allocator_traits<_Alnode>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rdi+16]
	call	??1Node@BymlFile@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	mov	rdi, rbx
	test	rbx, rbx
	jne	SHORT $LL8@list
	mov	rbx, QWORD PTR [rsp+56]
$LN7@list:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rsi]
	mov	edx, 112				; 00000070H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1051 :     }

	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@QEAA@XZ ENDP ; std::list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::~list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >, COMDAT

; 321  :     ~_Hash_vec() {

$LN35:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 312  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@Hash_vec

; 284  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN24@Hash_vec

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN21@Hash_vec

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN24@Hash_vec:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 315  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 316  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 317  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@Hash_vec:

; 327  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN21@Hash_vec:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN32@Hash_vec:
??1?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >::~_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??1?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ PROC ; std::list<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::~list<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >, COMDAT

; 1045 :     ~list() noexcept {

$LN52:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	rdx, QWORD PTR [rcx]

; 1045 :     ~list() noexcept {

	mov	rbx, rcx

; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	call	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 48					; 00000030H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1051 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@QEAA@XZ ENDP ; std::list<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::~list<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@QEAA@XZ PROC ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::~vector<BymlFile::Node,std::allocator<BymlFile::Node> >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
??1?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@QEAA@XZ ENDP ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::~vector<BymlFile::Node,std::allocator<BymlFile::Node> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >, COMDAT

; 766  :     _CONSTEXPR20 ~vector() noexcept {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN4@vector

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@vector

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@vector

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@vector:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN4@vector:

; 772  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN30@vector:
??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16
	setae	al

; 2245 :     }

	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
	ret	0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ PROC ; std::vector<Actor,std::allocator<Actor> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN321:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	mov	rdi, rcx
	test	rbx, rbx
	je	SHORT $LN2@Tidy
	mov	QWORD PTR [rsp+56], rsi

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rsi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rsi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
	mov	rcx, rbx
	call	??1Actor@@QEAA@XZ
	add	rbx, 872				; 00000368H
	cmp	rbx, rsi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rdi]
	mov	rdx, -6430974998173972123		; a6c0964fda6c0965H
	mov	rax, QWORD PTR [rdi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rsi, QWORD PTR [rsp+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 872				; 00000368H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN306@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN303@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN306@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rdi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rdi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rdi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN303@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN318@Tidy:
?_Tidy@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAXXZ ENDP ; std::vector<Actor,std::allocator<Actor> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >,0> >::_Get_scary, COMDAT

; 1969 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	rax, rcx

; 1970 :     }

	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >,0> >::_Getal, COMDAT

; 1961 :         return _Mypair._Myval2._Get_first();

	mov	rax, rcx

; 1962 :     }

	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Actor::DynamicData,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ PROC ; std::vector<Actor::Rail,std::allocator<Actor::Rail> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN56:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	mov	rdi, rcx
	test	rbx, rbx
	je	$LN2@Tidy
	mov	QWORD PTR [rsp+56], rsi

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rsi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rsi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+40]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+8]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 72					; 00000048H
	cmp	rbx, rsi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rdi]
	mov	rdx, -8198552921648689607		; 8e38e38e38e38e39H
	mov	rax, QWORD PTR [rdi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rsi, QWORD PTR [rsp+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*8]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN41@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN38@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN41@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rdi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rdi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rdi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN38@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN53@Tidy:
?_Tidy@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAXXZ ENDP ; std::vector<Actor::Rail,std::allocator<Actor::Rail> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ PROC ; std::vector<Actor::Link,std::allocator<Actor::Link> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN56:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	mov	rdi, rcx
	test	rbx, rbx
	je	$LN2@Tidy
	mov	QWORD PTR [rsp+56], rsi

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rsi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rsi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+48]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+16]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 80					; 00000050H
	cmp	rbx, rsi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rdi]
	mov	rdx, -3689348814741910323		; cccccccccccccccdH
	mov	rax, QWORD PTR [rdi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rsi, QWORD PTR [rsp+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rax, rcx
	sar	rax, 4
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 4

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN41@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN38@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN41@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rdi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rdi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rdi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN38@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN53@Tidy:
?_Tidy@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAXXZ ENDP ; std::vector<Actor::Link,std::allocator<Actor::Link> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ PROC ; std::vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN55:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	mov	rdi, rcx
	test	rbx, rbx
	je	SHORT $LN2@Tidy
	mov	QWORD PTR [rsp+56], rsi

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rsi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rsi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR [rbx+8]
	call	?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 64					; 00000040H
	cmp	rbx, rsi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rdi]
	mov	rdx, QWORD PTR [rdi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rsi, QWORD PTR [rsp+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -64				; ffffffffffffffc0H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN40@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN37@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN40@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rdi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rdi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rdi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN37@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN52@Tidy:
?_Tidy@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ENDP ; std::vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@_KV?$allocator@_K@std@@@std@@AEAAXXZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ PROC ; std::vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN53:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	sub	rsp, 32					; 00000020H

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	mov	rsi, rcx
	test	rbx, rbx
	je	SHORT $LN2@Tidy
	mov	QWORD PTR [rsp+56], rdi

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rdi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+8]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 40					; 00000028H
	cmp	rbx, rdi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rsi]
	mov	rdx, -3689348814741910323		; cccccccccccccccdH
	mov	rax, QWORD PTR [rsi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdi, QWORD PTR [rsp+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*4]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN38@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN35@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN38@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rsi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rsi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rsi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN35@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN50@Tidy:
?_Tidy@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ENDP ; std::vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ PROC ; std::vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN47:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	mov	rdi, rcx
	test	rbx, rbx
	je	SHORT $LN2@Tidy
	mov	QWORD PTR [rsp+56], rsi

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rsi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rsi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
	mov	rcx, rbx
	call	??1OwnerData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ
	add	rbx, 200				; 000000c8H
	cmp	rbx, rsi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rdi]
	mov	rdx, -8116567392432202711		; 8f5c28f5c28f5c29H
	mov	rax, QWORD PTR [rdi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rsi, QWORD PTR [rsp+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 200				; 000000c8H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN32@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN29@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN32@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rdi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rdi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rdi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN29@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN44@Tidy:
?_Tidy@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ENDP ; std::vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Get_scary, COMDAT

; 1969 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	rax, rcx

; 1970 :     }

	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Getal, COMDAT

; 1961 :         return _Mypair._Myval2._Get_first();

	mov	rax, rcx

; 1962 :     }

	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAXXZ PROC ; std::vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rax, QWORD PTR [rbx+16]
	mov	rdx, -6148914691236517205		; aaaaaaaaaaaaaaabH
	sub	rax, rcx
	sar	rax, 4
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 4

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAXXZ ENDP ; std::vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >::_Tidy, COMDAT

; 311  :     void _Tidy() noexcept {

$LN32:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 312  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 284  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 315  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 316  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 317  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 319  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN29@Tidy:
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ PROC ; std::list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::_Tidy, COMDAT

; 1497 :     void _Tidy() noexcept {

$LN116:
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1498 :         auto& _Al      = _Getal();
; 1499 :         auto& _My_data = _Mypair._Myval2;
; 1500 :         _My_data._Orphan_all();
; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	rdx, QWORD PTR [rcx]
	mov	rsi, rcx

; 325  :         _Head->_Prev->_Next = nullptr;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

	mov	rdi, QWORD PTR [rdx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	test	rdi, rdi
	je	SHORT $LN5@Tidy
	mov	QWORD PTR [rsp+56], rbx
	npad	8
$LL6@Tidy:

; 329  :             _Pnext = _Pnode->_Next;

	mov	rbx, QWORD PTR [rdi]

; 318  :         allocator_traits<_Alnode>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rdi+16]
	call	??1Node@BymlFile@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	mov	rdi, rbx
	test	rbx, rbx
	jne	SHORT $LL6@Tidy
	mov	rbx, QWORD PTR [rsp+56]
$LN5@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rsi]
	mov	edx, 112				; 00000070H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1503 :     }

	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
?_Tidy@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAXXZ ENDP ; std::list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >::_Tidy, COMDAT

; 311  :     void _Tidy() noexcept {

$LN32:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 312  :         if (_Mypair._Myval2._Myfirst != nullptr) {

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 284  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -8

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash

; 315  :             _Mypair._Myval2._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 316  :             _Mypair._Myval2._Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 317  :             _Mypair._Myval2._Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 319  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN29@Tidy:
?_Tidy@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ?_Tidy@?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@AEAAXXZ PROC ; std::list<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::_Tidy, COMDAT

; 1497 :     void _Tidy() noexcept {

$LN49:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1498 :         auto& _Al      = _Getal();
; 1499 :         auto& _My_data = _Mypair._Myval2;
; 1500 :         _My_data._Orphan_all();
; 1501 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	call	??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 48					; 00000030H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 1503 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
?_Tidy@?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@AEAAXXZ ENDP ; std::list<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ PROC ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN163:
	mov	QWORD PTR [rsp+24], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	mov	rdi, rcx
	test	rbx, rbx
	je	$LN2@Tidy
	mov	QWORD PTR [rsp+56], rsi

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rsi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rsi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR [rbx+64]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 88					; 00000058H
	cmp	rbx, rsi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rdi]
	mov	rdx, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	mov	rax, QWORD PTR [rdi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rsi, QWORD PTR [rsp+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rax, rcx
	sar	rax, 3
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, rax, 88				; 00000058H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN148@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN145@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN148@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rdi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rdi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rdi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN145@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN160@Tidy:
?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ENDP ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN50:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	sub	rsp, 32					; 00000020H

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	mov	rsi, rcx
	test	rbx, rbx
	je	SHORT $LN2@Tidy
	mov	QWORD PTR [rsp+56], rdi

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rdi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 32					; 00000020H
	cmp	rbx, rdi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rsi]
	mov	rdx, QWORD PTR [rsi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdi, QWORD PTR [rsp+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	and	rdx, -32				; ffffffffffffffe0H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN35@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN32@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN35@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rsi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rsi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rsi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN32@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN47@Tidy:
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ PROC	; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN30:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN2@Tidy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN20@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN17@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN20@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN2@Tidy:

; 2053 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN17@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN27@Tidy:
?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ENDP	; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4858 :         return _Mypair._Get_first();

	mov	rax, rcx

; 4859 :     }

	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4829 :     _CONSTEXPR20 void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN32:
	push	rbx
	sub	rsp, 32					; 00000020H

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR [rcx+24]

; 4829 :     _CONSTEXPR20 void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

	mov	rbx, rcx

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rdx, 16

; 4830 :         auto& _My_data = _Mypair._Myval2;
; 4831 :         _My_data._Orphan_all();
; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN10@Tidy_deall
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN22@Tidy_deall

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN19@Tidy_deall

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN22@Tidy_deall:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN10@Tidy_deall:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	mov	QWORD PTR [rbx+16], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR [rbx+24], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR [rbx], 0

; 4845 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@Tidy_deall:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN29@Tidy_deall:
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2285 :         _CONSTEXPR20 ~_Bxty() noexcept {} // user-provided, for fancy pointers

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 8
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16

; 2235 :         const value_type* _Result = _Bx._Buf;
; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN6@Myptr

; 2237 :             _Result = _Unfancy(_Bx._Ptr);
; 2238 :         }
; 2239 : 
; 2240 :         return _Result;

	mov	rax, QWORD PTR [rcx]

; 2241 :     }

	ret	0
$LN6@Myptr:

; 2237 :             _Result = _Unfancy(_Bx._Ptr);
; 2238 :         }
; 2239 : 
; 2240 :         return _Result;

	mov	rax, rcx

; 2241 :     }

	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAAEAV?$allocator@UActor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAAEAV?$allocator@UActor@@@2@XZ PROC ; std::vector<Actor,std::allocator<Actor> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UActor@@V?$allocator@UActor@@@std@@@std@@AEAAAEAV?$allocator@UActor@@@2@XZ ENDP ; std::vector<Actor,std::allocator<Actor> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UActor@@@std@@QEAAXQEAUActor@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UActor@@@std@@QEAAXQEAUActor@@_K@Z PROC ; std::allocator<Actor>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, r8, 872				; 00000368H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UActor@@@std@@QEAAXQEAUActor@@_K@Z ENDP ; std::allocator<Actor>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAAEAV?$allocator@URail@Actor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAAEAV?$allocator@URail@Actor@@@2@XZ PROC ; std::vector<Actor::Rail,std::allocator<Actor::Rail> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@URail@Actor@@V?$allocator@URail@Actor@@@std@@@std@@AEAAAEAV?$allocator@URail@Actor@@@2@XZ ENDP ; std::vector<Actor::Rail,std::allocator<Actor::Rail> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@URail@Actor@@@std@@QEAAXQEAURail@Actor@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@URail@Actor@@@std@@QEAAXQEAURail@Actor@@_K@Z PROC ; std::allocator<Actor::Rail>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8+r8*8]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@URail@Actor@@@std@@QEAAXQEAURail@Actor@@_K@Z ENDP ; std::allocator<Actor::Rail>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAAEAV?$allocator@ULink@Actor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAAEAV?$allocator@ULink@Actor@@@2@XZ PROC ; std::vector<Actor::Link,std::allocator<Actor::Link> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@ULink@Actor@@V?$allocator@ULink@Actor@@@std@@@std@@AEAAAEAV?$allocator@ULink@Actor@@@2@XZ ENDP ; std::vector<Actor::Link,std::allocator<Actor::Link> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@ULink@Actor@@@std@@QEAAXQEAULink@Actor@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@ULink@Actor@@@std@@QEAAXQEAULink@Actor@@_K@Z PROC ; std::allocator<Actor::Link>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8+r8*4]
	shl	rdx, 4

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@ULink@Actor@@@std@@QEAAXQEAULink@Actor@@_K@Z ENDP ; std::allocator<Actor::Link>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@URailData@PhiveData@Actor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@URailData@PhiveData@Actor@@@2@XZ PROC ; std::vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@URailData@PhiveData@Actor@@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@URailData@PhiveData@Actor@@@2@XZ ENDP ; std::vector<Actor::PhiveData::RailData,std::allocator<Actor::PhiveData::RailData> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@URailData@PhiveData@Actor@@@std@@QEAAXQEAURailData@PhiveData@Actor@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@URailData@PhiveData@Actor@@@std@@QEAAXQEAURailData@PhiveData@Actor@@_K@Z PROC ; std::allocator<Actor::PhiveData::RailData>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	shl	r8, 6
	mov	rax, rdx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	r8, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rdx-8]
	add	r8, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, r8
	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@URailData@PhiveData@Actor@@@std@@QEAAXQEAURailData@PhiveData@Actor@@_K@Z ENDP ; std::allocator<Actor::PhiveData::RailData>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ PROC ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@_KV?$allocator@_K@std@@@std@@AEAAAEAV?$allocator@_K@2@XZ ENDP ; std::vector<unsigned __int64,std::allocator<unsigned __int64> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z PROC	; std::allocator<unsigned __int64>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8*8]

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@_K@std@@QEAAXQEA_K_K@Z ENDP	; std::allocator<unsigned __int64>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@2@XZ PROC ; std::vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UReferData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@2@XZ ENDP ; std::vector<Actor::PhiveData::ConstraintLinkData::ReferData,std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUReferData@ConstraintLinkData@PhiveData@Actor@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUReferData@ConstraintLinkData@PhiveData@Actor@@_K@Z PROC ; std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8+r8*4]
	shl	rdx, 3

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUReferData@ConstraintLinkData@PhiveData@Actor@@_K@Z ENDP ; std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@2@XZ PROC ; std::vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UOwnerData@ConstraintLinkData@PhiveData@Actor@@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@2@XZ ENDP ; std::vector<Actor::PhiveData::ConstraintLinkData::OwnerData,std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@_K@Z PROC ; std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, r8, 200				; 000000c8H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@QEAAXQEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@_K@Z ENDP ; std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAAEAV?$allocator@UModelElement@UMii@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAAEAV?$allocator@UModelElement@UMii@@@2@XZ PROC ; std::vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UModelElement@UMii@@V?$allocator@UModelElement@UMii@@@std@@@std@@AEAAAEAV?$allocator@UModelElement@UMii@@@2@XZ ENDP ; std::vector<UMii::ModelElement,std::allocator<UMii::ModelElement> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UModelElement@UMii@@@std@@QEAAXQEAUModelElement@UMii@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UModelElement@UMii@@@std@@QEAAXQEAUModelElement@UMii@@_K@Z PROC ; std::allocator<UMii::ModelElement>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8+r8*2]
	shl	rdx, 4

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UModelElement@UMii@@@std@@QEAAXQEAUModelElement@UMii@@_K@Z ENDP ; std::allocator<UMii::ModelElement>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ?capacity@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >::capacity, COMDAT

; 282  :         // This implementation never has capacity() differ from size(), but the previous implementation could.
; 283  :         // We need to handle that situation gracefully since we may link to old code (See GH-2774).
; 284  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 285  :     }

	ret	0
?capacity@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > > >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@2@_K@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8*8]

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@2@_K@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ?_Getal@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@2@XZ PROC ; std::list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::_Getal, COMDAT

; 1848 :         return _Mypair._Get_first();

	mov	rax, rcx

; 1849 :     }

	ret	0
?_Getal@?$list@U?$pair@$$CBVNode@BymlFile@@I@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@2@XZ ENDP ; std::list<std::pair<BymlFile::Node const ,unsigned int>,std::allocator<std::pair<BymlFile::Node const ,unsigned int> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > >,std::_Vector_val<std::_Simple_types<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xhash
;	COMDAT ?capacity@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?capacity@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ PROC ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >::capacity, COMDAT

; 282  :         // This implementation never has capacity() differ from size(), but the previous implementation could.
; 283  :         // We need to handle that situation gracefully since we may link to old code (See GH-2774).
; 284  :         return static_cast<size_type>(_Mypair._Myval2._Myend - _Mypair._Myval2._Myfirst);

	mov	rax, QWORD PTR [rcx+16]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 285  :     }

	ret	0
?capacity@?$_Hash_vec@V?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@@std@@QEBA_KXZ ENDP ; std::_Hash_vec<std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > > >::capacity
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@2@_K@Z PROC ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8*8]

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@V?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@@std@@QEAAXQEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@2@_K@Z ENDP ; std::allocator<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ?_Getal@?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@2@XZ PROC ; std::list<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::_Getal, COMDAT

; 1848 :         return _Mypair._Get_first();

	mov	rax, rcx

; 1849 :     }

	ret	0
?_Getal@?$list@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@2@XZ ENDP ; std::list<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,std::allocator<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAAEAV?$allocator@VNode@BymlFile@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAAEAV?$allocator@VNode@BymlFile@@@2@XZ PROC ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAAEAV?$allocator@VNode@BymlFile@@@2@XZ ENDP ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@VNode@BymlFile@@@std@@QEAAXQEAVNode@BymlFile@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@VNode@BymlFile@@@std@@QEAAXQEAVNode@BymlFile@@_K@Z PROC ; std::allocator<BymlFile::Node>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	rdx, r8, 88				; 00000058H

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@VNode@BymlFile@@@std@@QEAAXQEAVNode@BymlFile@@_K@Z ENDP ; std::allocator<BymlFile::Node>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	shl	r8, 5
	mov	rax, rdx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	r8, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rdx-8]
	add	r8, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, r8
	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ PROC ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@EV?$allocator@E@std@@@std@@AEAAAEAV?$allocator@E@2@XZ ENDP ; std::vector<unsigned char,std::allocator<unsigned char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z PROC	; std::allocator<unsigned char>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	r8, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rdx-8]
	add	r8, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, r8
	mov	rcx, rax

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);
; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@E@std@@QEAAXQEAE_K@Z ENDP	; std::allocator<unsigned char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer, COMDAT

; 2248 :         // start the lifetime of the array elements
; 2249 : #if _HAS_CXX20
; 2250 :         if (_STD is_constant_evaluated()) {
; 2251 :             for (size_type _Idx = 0; _Idx < _BUF_SIZE; ++_Idx) {
; 2252 :                 _Bx._Buf[_Idx] = value_type();
; 2253 :             }
; 2254 :         }
; 2255 : #endif // _HAS_CXX20
; 2256 :     }

	ret	0
?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Activate_SSO_buffer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	r8, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rdx-8]
	add	r8, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rdx, r8
	mov	rcx, rax

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);
; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 441  : #if _HAS_CXX20
; 442  :         if (_STD is_constant_evaluated()) {
; 443  :             return _Primary_char_traits::assign(_Left, _Right);
; 444  :         }
; 445  : #endif // _HAS_CXX20
; 446  :         _Left = _Right;
; 447  :     }

	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [rcx], al
	ret	0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UActor@@@std@@V?$_Vector_val@U?$_Simple_types@UActor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UActor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UActor@@@std@@V?$_Vector_val@U?$_Simple_types@UActor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UActor@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Actor>,std::_Vector_val<std::_Simple_types<Actor> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UActor@@@std@@V?$_Vector_val@U?$_Simple_types@UActor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UActor@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Actor>,std::_Vector_val<std::_Simple_types<Actor> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@URail@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@URail@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URail@Actor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@URail@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@URail@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URail@Actor@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Actor::Rail>,std::_Vector_val<std::_Simple_types<Actor::Rail> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@URail@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@URail@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URail@Actor@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Actor::Rail>,std::_Vector_val<std::_Simple_types<Actor::Rail> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@ULink@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@ULink@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@ULink@Actor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@ULink@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@ULink@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@ULink@Actor@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Actor::Link>,std::_Vector_val<std::_Simple_types<Actor::Link> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@ULink@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@ULink@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@ULink@Actor@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Actor::Link>,std::_Vector_val<std::_Simple_types<Actor::Link> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@URailData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@URailData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URailData@PhiveData@Actor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@URailData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@URailData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URailData@PhiveData@Actor@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Actor::PhiveData::RailData>,std::_Vector_val<std::_Simple_types<Actor::PhiveData::RailData> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@URailData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@URailData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URailData@PhiveData@Actor@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Actor::PhiveData::RailData>,std::_Vector_val<std::_Simple_types<Actor::PhiveData::RailData> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ PROC ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@_K@std@@V?$_Vector_val@U?$_Simple_types@_K@std@@@2@$00@std@@QEAAAEAV?$allocator@_K@2@XZ ENDP ; std::_Compressed_pair<std::allocator<unsigned __int64>,std::_Vector_val<std::_Simple_types<unsigned __int64> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData>,std::_Vector_val<std::_Simple_types<Actor::PhiveData::ConstraintLinkData::ReferData> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData>,std::_Vector_val<std::_Simple_types<Actor::PhiveData::ConstraintLinkData::ReferData> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData>,std::_Vector_val<std::_Simple_types<Actor::PhiveData::ConstraintLinkData::OwnerData> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData>,std::_Vector_val<std::_Simple_types<Actor::PhiveData::ConstraintLinkData::OwnerData> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UModelElement@UMii@@@std@@V?$_Vector_val@U?$_Simple_types@UModelElement@UMii@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UModelElement@UMii@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UModelElement@UMii@@@std@@V?$_Vector_val@U?$_Simple_types@UModelElement@UMii@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UModelElement@UMii@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<UMii::ModelElement>,std::_Vector_val<std::_Simple_types<UMii::ModelElement> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UModelElement@UMii@@@std@@V?$_Vector_val@U?$_Simple_types@UModelElement@UMii@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UModelElement@UMii@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<UMii::ModelElement>,std::_Vector_val<std::_Simple_types<UMii::ModelElement> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> >,std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@VNode@BymlFile@@@std@@V?$_Vector_val@U?$_Simple_types@VNode@BymlFile@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VNode@BymlFile@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@VNode@BymlFile@@@std@@V?$_Vector_val@U?$_Simple_types@VNode@BymlFile@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VNode@BymlFile@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<BymlFile::Node>,std::_Vector_val<std::_Simple_types<BymlFile::Node> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@VNode@BymlFile@@@std@@V?$_Vector_val@U?$_Simple_types@VNode@BymlFile@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VNode@BymlFile@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<BymlFile::Node>,std::_Vector_val<std::_Simple_types<BymlFile::Node> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAAAEAV?$allocator@E@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAAAEAV?$allocator@E@2@XZ PROC ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@E@std@@V?$_Vector_val@U?$_Simple_types@E@std@@@2@$00@std@@QEAAAEAV?$allocator@E@2@XZ ENDP ; std::_Compressed_pair<std::allocator<unsigned char>,std::_Vector_val<std::_Simple_types<unsigned char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z PROC	; std::_Char_traits<char,int>::assign, COMDAT

; 183  : #if _HAS_CXX20
; 184  :         if (_STD is_constant_evaluated()) {
; 185  :             _STD construct_at(_STD addressof(_Left), _Right);
; 186  :         } else
; 187  : #endif // _HAS_CXX20
; 188  :         {
; 189  :             _Left = _Right;
; 190  :         }
; 191  :     }

	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [rcx], al
	ret	0
?assign@?$_Char_traits@DH@std@@SAXAEADAEBD@Z ENDP	; std::_Char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 5010 :     const basic_string<_Elem, _Traits, _Alloc>& _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) noexcept {

$LN23:
	sub	rsp, 40					; 00000028H

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdx+24], 16

; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rax, QWORD PTR [rdx+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN6@operator

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN6@operator:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16

; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	r8, QWORD PTR [rcx+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN11@operator

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN11@operator:

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	cmp	r8, rax
	jne	SHORT $LN17@operator

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	test	eax, eax
	jne	SHORT $LN17@operator

; 5011 :     return _Left._Equal(_Right);

	mov	al, 1

; 5012 : }

	add	rsp, 40					; 00000028H
	ret	0
$LN17@operator:

; 5011 :     return _Left._Equal(_Right);

	xor	al, al

; 5012 : }

	add	rsp, 40					; 00000028H
	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$ = 56
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >, COMDAT

; 752  :     void _Erase_head(_Alnode& _Al) noexcept {

$LN49:
	push	rbx
	sub	rsp, 32					; 00000020H

; 753  :         this->_Orphan_all();
; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 112				; 00000070H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 756  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$ = 56
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >, COMDAT

; 752  :     void _Erase_head(_Alnode& _Al) noexcept {

$LN49:
	push	rbx
	sub	rsp, 32					; 00000020H

; 753  :         this->_Orphan_all();
; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 96					; 00000060H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 756  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UActor@@@std@@@std@@YAXPEAUActor@@QEAU1@AEAV?$allocator@UActor@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@UActor@@@std@@@std@@YAXPEAUActor@@QEAU1@AEAV?$allocator@UActor@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Actor> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN694:

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN691@Destroy_ra
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	mov	rdi, rdx
	mov	rbx, rcx
$LL4@Destroy_ra:

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {

	mov	rcx, rbx
	call	??1Actor@@QEAA@XZ
	add	rbx, 872				; 00000368H
	cmp	rbx, rdi
	jne	SHORT $LL4@Destroy_ra

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN691@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@UActor@@@std@@@std@@YAXPEAUActor@@QEAU1@AEAV?$allocator@UActor@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Actor> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Actor::Rail> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN30:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN27@Destroy_ra
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rsp+48], rbx
	mov	rdi, rdx
	lea	rbx, QWORD PTR [rcx+8]
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 72					; 00000048H
	lea	rax, QWORD PTR [rbx-8]
	cmp	rax, rdi
	jne	SHORT $LL4@Destroy_ra
	mov	rbx, QWORD PTR [rsp+48]

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	add	rsp, 32					; 00000020H
	pop	rdi
$LN27@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@URail@Actor@@@std@@@std@@YAXPEAURail@Actor@@QEAU12@AEAV?$allocator@URail@Actor@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Actor::Rail> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Actor::Link> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN30:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN27@Destroy_ra
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rsp+48], rbx
	mov	rdi, rdx
	lea	rbx, QWORD PTR [rcx+16]
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 80					; 00000050H
	lea	rax, QWORD PTR [rbx-16]
	cmp	rax, rdi
	jne	SHORT $LL4@Destroy_ra
	mov	rbx, QWORD PTR [rsp+48]

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	add	rsp, 32					; 00000020H
	pop	rdi
$LN27@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@ULink@Actor@@@std@@@std@@YAXPEAULink@Actor@@QEAU12@AEAV?$allocator@ULink@Actor@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Actor::Link> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Actor::PhiveData::RailData> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN29:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN26@Destroy_ra
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rsp+48], rbx
	mov	rdi, rdx
	lea	rbx, QWORD PTR [rcx+8]
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+24]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 64					; 00000040H
	lea	rax, QWORD PTR [rbx-8]
	cmp	rax, rdi
	jne	SHORT $LL4@Destroy_ra
	mov	rbx, QWORD PTR [rsp+48]

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	add	rsp, 32					; 00000020H
	pop	rdi
$LN26@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@YAXPEAURailData@PhiveData@Actor@@QEAU123@AEAV?$allocator@URailData@PhiveData@Actor@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Actor::PhiveData::RailData> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned __int64> >, COMDAT

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {
; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	ret	0
??$_Destroy_range@V?$allocator@_K@std@@@std@@YAXPEA_KQEA_KAEAV?$allocator@_K@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned __int64> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUReferData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUReferData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN27:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN24@Destroy_ra
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	mov	rdi, rdx
	mov	rbx, rcx
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+8]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 40					; 00000028H
	cmp	rbx, rdi
	jne	SHORT $LL4@Destroy_ra

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN24@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUReferData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN21:

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN18@Destroy_ra
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	mov	rdi, rdx
	mov	rbx, rcx
$LL4@Destroy_ra:

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {

	mov	rcx, rbx
	call	??1OwnerData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ
	add	rbx, 200				; 000000c8H
	cmp	rbx, rdi
	jne	SHORT $LL4@Destroy_ra

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN18@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@YAXPEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UModelElement@UMii@@@std@@@std@@YAXPEAUModelElement@UMii@@QEAU12@AEAV?$allocator@UModelElement@UMii@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@UModelElement@UMii@@@std@@@std@@YAXPEAUModelElement@UMii@@QEAU12@AEAV?$allocator@UModelElement@UMii@@@0@@Z PROC ; std::_Destroy_range<std::allocator<UMii::ModelElement> >, COMDAT

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {
; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	ret	0
??$_Destroy_range@V?$allocator@UModelElement@UMii@@@std@@@std@@YAXPEAUModelElement@UMii@@QEAU12@AEAV?$allocator@UModelElement@UMii@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<UMii::ModelElement> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@PEAV12@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@0@QEAV10@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@PEAV12@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@0@QEAV10@@Z PROC ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > *>, COMDAT

; 1094 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1095 :     if constexpr (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 1096 :         for (; _First != _Last; ++_First) {
; 1097 :             _Destroy_in_place(*_First);
; 1098 :         }
; 1099 :     }
; 1100 : }

	ret	0
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@std@@PEAV12@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@@std@@@0@QEAV10@@Z ENDP ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<BymlFile::Node const ,unsigned int> > > > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Head$ = 56
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >, COMDAT

; 324  :         _Alnode& _Al, _Nodeptr _Head) noexcept { // free a list starting at _First and terminated at nullptr

$LN70:
	push	rbx
	sub	rsp, 32					; 00000020H

; 325  :         _Head->_Prev->_Next = nullptr;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rax], 0

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

	mov	rbx, QWORD PTR [rdx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	test	rbx, rbx
	je	SHORT $LN3@Free_non_h
	mov	QWORD PTR [rsp+48], rdi
	npad	2
$LL4@Free_non_h:

; 329  :             _Pnext = _Pnode->_Next;

	mov	rdi, QWORD PTR [rbx]

; 318  :         allocator_traits<_Alnode>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rbx+16]
	call	??1Node@BymlFile@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	mov	rbx, rdi
	test	rdi, rdi
	jne	SHORT $LL4@Free_non_h
	mov	rdi, QWORD PTR [rsp+48]
$LN3@Free_non_h:

; 330  :             _Freenode(_Al, _Pnode);
; 331  :         }
; 332  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >, COMDAT

; 308  :     static void _Freenode0(_Alnode& _Al, _Nodeptr _Ptr) noexcept {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@PEAV12@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@0@QEAV10@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@PEAV12@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@0@QEAV10@@Z PROC ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > *>, COMDAT

; 1094 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1095 :     if constexpr (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 1096 :         for (; _First != _Last; ++_First) {
; 1097 :             _Destroy_in_place(*_First);
; 1098 :         }
; 1099 :     }
; 1100 : }

	ret	0
??$_Destroy_range@PEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@std@@PEAV12@@std@@YAXPEAV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@@std@@@0@QEAV10@@Z ENDP ; std::_Destroy_range<std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > *,std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> > > > *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Head$ = 56
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >, COMDAT

; 324  :         _Alnode& _Al, _Nodeptr _Head) noexcept { // free a list starting at _First and terminated at nullptr

$LN106:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	sub	rsp, 32					; 00000020H

; 325  :         _Head->_Prev->_Next = nullptr;

	mov	rax, QWORD PTR [rdx+8]
	xor	esi, esi
	mov	QWORD PTR [rax], rsi

; 326  : 
; 327  :         auto _Pnode = _Head->_Next;

	mov	rbx, QWORD PTR [rdx]

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	test	rbx, rbx
	je	SHORT $LN97@Free_non_h
	mov	QWORD PTR [rsp+48], rdi
$LL4@Free_non_h:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 329  :             _Pnext = _Pnode->_Next;

	mov	rdi, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	test	rcx, rcx
	je	SHORT $LN21@Free_non_h

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+32]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN39@Free_non_h

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN36@Free_non_h

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN39@Free_non_h:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rbx+16], rsi

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+24], rsi

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+32], rsi
$LN21@Free_non_h:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 48					; 00000030H
	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 328  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	mov	rbx, rdi
	test	rdi, rdi
	jne	SHORT $LL4@Free_non_h
	mov	rdi, QWORD PTR [rsp+48]
$LN97@Free_non_h:

; 332  :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN36@Free_non_h:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN103@Free_non_h:
??$_Free_non_head@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *>::_Free_non_head<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >, COMDAT

; 308  :     static void _Freenode0(_Alnode& _Al, _Nodeptr _Ptr) noexcept {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 48					; 00000030H
	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode0@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z PROC ; std::_Destroy_range<std::allocator<BymlFile::Node> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN187:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN184@Destroy_ra
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	sub	rsp, 32					; 00000020H

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	mov	rsi, rdx

; 1086 :         for (; _First != _Last; ++_First) {

	mov	QWORD PTR [rsp+48], rdi
	mov	rbx, rcx
	npad	6
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR [rbx+64]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbx+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 88					; 00000058H
	cmp	rbx, rsi
	jne	SHORT $LL4@Destroy_ra
	mov	rdi, QWORD PTR [rsp+48]

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rsi
$LN184@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@VNode@BymlFile@@@std@@@std@@YAXPEAVNode@BymlFile@@QEAV12@AEAV?$allocator@VNode@BymlFile@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<BymlFile::Node> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN24:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN21@Destroy_ra
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	mov	rdi, rdx
	mov	rbx, rcx
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 32					; 00000020H
	cmp	rbx, rdi
	jne	SHORT $LL4@Destroy_ra

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN21@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPEAEQEAEAEAV?$allocator@E@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPEAEQEAEAEAV?$allocator@E@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned char> >, COMDAT

; 1083 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1084 :     using _Ty = typename _Alloc::value_type;
; 1085 :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1086 :         for (; _First != _Last; ++_First) {
; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	ret	0
??$_Destroy_range@V?$allocator@E@std@@@std@@YAXPEAEQEAEAEAV?$allocator@E@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 305  :     if constexpr (is_array_v<_Ty>) {
; 306  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 307  :     } else {
; 308  :         _Obj.~_Ty();
; 309  :     }
; 310  : }

	ret	0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 252  : _CONSTEXPR20 void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN20:
	sub	rsp, 40					; 00000028H

; 253  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 254  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 255  :     if (_STD is_constant_evaluated()) {
; 256  :         ::operator delete(_Ptr);
; 257  :     } else
; 258  : #endif // _HAS_CXX20
; 259  :     {
; 260  : #if defined(_M_IX86) || defined(_M_X64)
; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN15@Deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN12@Deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN15@Deallocate:

; 266  :     }
; 267  : }

	add	rsp, 40					; 00000028H

; 262  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 263  :         }
; 264  : #endif // defined(_M_IX86) || defined(_M_X64)
; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN12@Deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN17@Deallocate:
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@D@std@@YAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@D@std@@YAPEADAEAD@Z PROC			; std::addressof<char>, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@D@std@@YAPEADAEAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z PROC	; std::construct_at<char,char const &,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [rcx], al
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@DAEBD$0A@@std@@YAPEADQEADAEBD@Z ENDP	; std::construct_at<char,char const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >::deallocate, COMDAT

; 701  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >::deallocate, COMDAT

; 701  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 48					; 00000030H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@2@QEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal, COMDAT

; 4582 :     _CONSTEXPR20 bool _Equal(const basic_string& _Right) const noexcept {

$LN21:
	sub	rsp, 40					; 00000028H

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rdx+24], 16

; 4583 :         // compare [0, size()) with _Right for equality
; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rax, QWORD PTR [rdx+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN4@Equal

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdx]
$LN4@Equal:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16

; 4583 :         // compare [0, size()) with _Right for equality
; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	r8, QWORD PTR [rcx+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN9@Equal

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN9@Equal:

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	cmp	r8, rax
	jne	SHORT $LN15@Equal

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	test	eax, eax
	jne	SHORT $LN15@Equal

; 4583 :         // compare [0, size()) with _Right for equality
; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	al, 1

; 4585 :             _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
; 4586 :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN15@Equal:

; 4583 :         // compare [0, size()) with _Right for equality
; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	xor	al, al

; 4585 :             _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
; 4586 :     }

	add	rsp, 40					; 00000028H
	ret	0
?_Equal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Equal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 48					; 00000030H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEBD@std@@YAAEBDAEBD@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBD@std@@YAAEBDAEBD@Z PROC			; std::forward<char const &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEBD@std@@YAAEBDAEBD@Z ENDP			; std::forward<char const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z
_TEXT	SEGMENT
this$ = 80
_Al$ = 88
_Rootnode$ = 96
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >, COMDAT

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

$LN148:
	push	rbx
	push	rbp
	push	r14
	sub	rsp, 48					; 00000030H

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [r8+25], 0
	mov	rbx, r8
	mov	r14, rdx
	mov	rbp, rcx
	jne	SHORT $LN3@Erase_tree
	mov	QWORD PTR [rsp+104], rsi
	mov	QWORD PTR [rsp+40], rdi
	mov	QWORD PTR [rsp+32], r15
	lea	r15, OFFSET FLAT:__ImageBase
	npad	1
$LL2@Erase_tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, r14
	mov	rcx, rbp
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rdi+96]
	lea	rcx, QWORD PTR [rdi+64]

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	mov	eax, DWORD PTR $LN140@Erase_tree[r15+rax*4+4]
	add	rax, r15
	jmp	rax
$LN50@Erase_tree:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN71@Erase_tree:
	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Erase_tree
	mov	rdi, QWORD PTR [rsp+40]
	mov	rsi, QWORD PTR [rsp+104]
	mov	r15, QWORD PTR [rsp+32]
$LN3@Erase_tree:

; 749  :     }

	add	rsp, 48					; 00000030H
	pop	r14
	pop	rbp
	pop	rbx
	ret	0
$LN66@Erase_tree:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN145@Erase_tree:
$LN140@Erase_tree:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 749  :     }

	DD	$LN71@Erase_tree
	DD	$LN50@Erase_tree
	DD	$LN71@Erase_tree
	DD	$LN71@Erase_tree
	DD	$LN71@Erase_tree
	DD	$LN71@Erase_tree
	DD	$LN71@Erase_tree
	DD	$LN71@Erase_tree
	DD	$LN71@Erase_tree
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >, COMDAT

; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z
_TEXT	SEGMENT
this$ = 80
_Al$ = 88
_Rootnode$ = 96
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >, COMDAT

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

$LN76:
	push	rbx
	push	rbp
	push	r14
	sub	rsp, 48					; 00000030H

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [r8+25], 0
	mov	rbx, r8
	mov	r14, rdx
	mov	rbp, rcx
	jne	SHORT $LN3@Erase_tree
	mov	QWORD PTR [rsp+40], rsi
	mov	QWORD PTR [rsp+32], rdi
	npad	13
$LL2@Erase_tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, r14
	mov	rcx, rbp
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rsi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
	lea	rcx, QWORD PTR [rsi+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rsi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 96					; 00000060H
	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Erase_tree
	mov	rdi, QWORD PTR [rsp+32]
	mov	rsi, QWORD PTR [rsp+40]
$LN3@Erase_tree:

; 747  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 748  :         }
; 749  :     }

	add	rsp, 48					; 00000030H
	pop	r14
	pop	rbp
	pop	rbx
	ret	0
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >, COMDAT

; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 96					; 00000060H
	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UActor@@@std@@YAPEAUActor@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UActor@@@std@@YAPEAUActor@@PEAU1@@Z PROC	; std::_Unfancy<Actor>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UActor@@@std@@YAPEAUActor@@PEAU1@@Z ENDP	; std::_Unfancy<Actor>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@UActor@@@?$_Default_allocator_traits@V?$allocator@UActor@@@std@@@std@@SAXAEAV?$allocator@UActor@@@1@QEAUActor@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$destroy@UActor@@@?$_Default_allocator_traits@V?$allocator@UActor@@@std@@@std@@SAXAEAV?$allocator@UActor@@@1@QEAUActor@@@Z PROC ; std::_Default_allocator_traits<std::allocator<Actor> >::destroy<Actor>, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	mov	rcx, rdx
	jmp	??1Actor@@QEAA@XZ
??$destroy@UActor@@@?$_Default_allocator_traits@V?$allocator@UActor@@@std@@@std@@SAXAEAV?$allocator@UActor@@@1@QEAUActor@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Actor> >::destroy<Actor>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@URail@Actor@@@std@@YAPEAURail@Actor@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@URail@Actor@@@std@@YAPEAURail@Actor@@PEAU12@@Z PROC ; std::_Unfancy<Actor::Rail>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@URail@Actor@@@std@@YAPEAURail@Actor@@PEAU12@@Z ENDP ; std::_Unfancy<Actor::Rail>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@URail@Actor@@@?$_Default_allocator_traits@V?$allocator@URail@Actor@@@std@@@std@@SAXAEAV?$allocator@URail@Actor@@@1@QEAURail@Actor@@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@URail@Actor@@@?$_Default_allocator_traits@V?$allocator@URail@Actor@@@std@@@std@@SAXAEAV?$allocator@URail@Actor@@@1@QEAURail@Actor@@@Z PROC ; std::_Default_allocator_traits<std::allocator<Actor::Rail> >::destroy<Actor::Rail>, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN19:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+40]
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@URail@Actor@@@?$_Default_allocator_traits@V?$allocator@URail@Actor@@@std@@@std@@SAXAEAV?$allocator@URail@Actor@@@1@QEAURail@Actor@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Actor::Rail> >::destroy<Actor::Rail>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@ULink@Actor@@@std@@YAPEAULink@Actor@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@ULink@Actor@@@std@@YAPEAULink@Actor@@PEAU12@@Z PROC ; std::_Unfancy<Actor::Link>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@ULink@Actor@@@std@@YAPEAULink@Actor@@PEAU12@@Z ENDP ; std::_Unfancy<Actor::Link>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@ULink@Actor@@@?$_Default_allocator_traits@V?$allocator@ULink@Actor@@@std@@@std@@SAXAEAV?$allocator@ULink@Actor@@@1@QEAULink@Actor@@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@ULink@Actor@@@?$_Default_allocator_traits@V?$allocator@ULink@Actor@@@std@@@std@@SAXAEAV?$allocator@ULink@Actor@@@1@QEAULink@Actor@@@Z PROC ; std::_Default_allocator_traits<std::allocator<Actor::Link> >::destroy<Actor::Link>, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN19:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+48]
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@ULink@Actor@@@?$_Default_allocator_traits@V?$allocator@ULink@Actor@@@std@@@std@@SAXAEAV?$allocator@ULink@Actor@@@1@QEAULink@Actor@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Actor::Link> >::destroy<Actor::Link>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@URailData@PhiveData@Actor@@@std@@YAPEAURailData@PhiveData@Actor@@PEAU123@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@URailData@PhiveData@Actor@@@std@@YAPEAURailData@PhiveData@Actor@@PEAU123@@Z PROC ; std::_Unfancy<Actor::PhiveData::RailData>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@URailData@PhiveData@Actor@@@std@@YAPEAURailData@PhiveData@Actor@@PEAU123@@Z ENDP ; std::_Unfancy<Actor::PhiveData::RailData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@URailData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@URailData@PhiveData@Actor@@@1@QEAURailData@PhiveData@Actor@@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@URailData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@URailData@PhiveData@Actor@@@1@QEAURailData@PhiveData@Actor@@@Z PROC ; std::_Default_allocator_traits<std::allocator<Actor::PhiveData::RailData> >::destroy<Actor::PhiveData::RailData>, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN18:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+32]
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Tidy
??$destroy@URailData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@URailData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@URailData@PhiveData@Actor@@@1@QEAURailData@PhiveData@Actor@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Actor::PhiveData::RailData> >::destroy<Actor::PhiveData::RailData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@YAPEAUReferData@ConstraintLinkData@PhiveData@Actor@@PEAU1234@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@YAPEAUReferData@ConstraintLinkData@PhiveData@Actor@@PEAU1234@@Z PROC ; std::_Unfancy<Actor::PhiveData::ConstraintLinkData::ReferData>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@YAPEAUReferData@ConstraintLinkData@PhiveData@Actor@@PEAU1234@@Z ENDP ; std::_Unfancy<Actor::PhiveData::ConstraintLinkData::ReferData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@UReferData@ConstraintLinkData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@1@QEAUReferData@ConstraintLinkData@PhiveData@Actor@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$destroy@UReferData@ConstraintLinkData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@1@QEAUReferData@ConstraintLinkData@PhiveData@Actor@@@Z PROC ; std::_Default_allocator_traits<std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::destroy<Actor::PhiveData::ConstraintLinkData::ReferData>, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	lea	rcx, QWORD PTR [rdx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@UReferData@ConstraintLinkData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@UReferData@ConstraintLinkData@PhiveData@Actor@@@1@QEAUReferData@ConstraintLinkData@PhiveData@Actor@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Actor::PhiveData::ConstraintLinkData::ReferData> >::destroy<Actor::PhiveData::ConstraintLinkData::ReferData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@YAPEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@PEAU1234@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@YAPEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@PEAU1234@@Z PROC ; std::_Unfancy<Actor::PhiveData::ConstraintLinkData::OwnerData>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@YAPEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@PEAU1234@@Z ENDP ; std::_Unfancy<Actor::PhiveData::ConstraintLinkData::OwnerData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@1@QEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$destroy@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@1@QEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@@Z PROC ; std::_Default_allocator_traits<std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::destroy<Actor::PhiveData::ConstraintLinkData::OwnerData>, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	mov	rcx, rdx
	jmp	??1OwnerData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ
??$destroy@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@1@QEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Actor::PhiveData::ConstraintLinkData::OwnerData> >::destroy<Actor::PhiveData::ConstraintLinkData::OwnerData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Ptr$ = 56
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >, COMDAT

; 317  :     static void _Freenode(_Alnode& _Al, _Nodeptr _Ptr) noexcept { // destroy all members in _Ptr and deallocate with _Al

$LN59:
	push	rbx
	sub	rsp, 32					; 00000020H

; 318  :         allocator_traits<_Alnode>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rdx+16]
	mov	rbx, rdx
	call	??1Node@BymlFile@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 320  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@0@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> *>, COMDAT

; 305  :     if constexpr (is_array_v<_Ty>) {
; 306  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 307  :     } else {
; 308  :         _Obj.~_Ty();
; 309  :     }
; 310  : }

	ret	0
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list
;	COMDAT ??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Ptr$ = 56
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >, COMDAT

; 317  :     static void _Freenode(_Alnode& _Al, _Nodeptr _Ptr) noexcept { // destroy all members in _Ptr and deallocate with _Al

$LN93:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdx+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 317  :     static void _Freenode(_Alnode& _Al, _Nodeptr _Ptr) noexcept { // destroy all members in _Ptr and deallocate with _Al

	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	test	rcx, rcx
	je	SHORT $LN16@Freenode

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rdx+32]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN34@Freenode

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN31@Freenode

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN34@Freenode:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+16], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+24], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+32], rax
$LN16@Freenode:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 48					; 00000030H
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\list

; 320  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN31@Freenode:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN90@Freenode:
??$_Freenode@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *>::_Freenode<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@0@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> *>, COMDAT

; 305  :     if constexpr (is_array_v<_Ty>) {
; 306  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 307  :     } else {
; 308  :         _Obj.~_Ty();
; 309  :     }
; 310  : }

	ret	0
??$_Destroy_in_place@PEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@VNode@BymlFile@@@std@@YAPEAVNode@BymlFile@@PEAV12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@VNode@BymlFile@@@std@@YAPEAVNode@BymlFile@@PEAV12@@Z PROC ; std::_Unfancy<BymlFile::Node>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@VNode@BymlFile@@@std@@YAPEAVNode@BymlFile@@PEAV12@@Z ENDP ; std::_Unfancy<BymlFile::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@VNode@BymlFile@@@?$_Default_allocator_traits@V?$allocator@VNode@BymlFile@@@std@@@std@@SAXAEAV?$allocator@VNode@BymlFile@@@1@QEAVNode@BymlFile@@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@VNode@BymlFile@@@?$_Default_allocator_traits@V?$allocator@VNode@BymlFile@@@std@@@std@@SAXAEAV?$allocator@VNode@BymlFile@@@1@QEAVNode@BymlFile@@@Z PROC ; std::_Default_allocator_traits<std::allocator<BymlFile::Node> >::destroy<BymlFile::Node>, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN185:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+64]
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
??$destroy@VNode@BymlFile@@@?$_Default_allocator_traits@V?$allocator@VNode@BymlFile@@@std@@@std@@SAXAEAV?$allocator@VNode@BymlFile@@@1@QEAVNode@BymlFile@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<BymlFile::Node> >::destroy<BymlFile::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z PROC ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ENDP ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z
_TEXT	SEGMENT
_Left$ = 48
_Left_size$ = 56
_Right$ = 64
_Right_size$ = 72
??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z PROC ; std::_Traits_equal<std::char_traits<char> >, COMDAT

; 546  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

$LN9:
	sub	rsp, 40					; 00000028H
	mov	rax, r8

; 547  :     // compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) for equality using _Traits
; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	cmp	rdx, r9
	jne	SHORT $LN3@Traits_equ

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	mov	r8, rdx
	mov	rdx, rax
	call	memcmp

; 547  :     // compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) for equality using _Traits
; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	test	eax, eax
	jne	SHORT $LN3@Traits_equ
	mov	al, 1

; 549  : }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@Traits_equ:

; 547  :     // compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) for equality using _Traits
; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	xor	al, al

; 549  : }

	add	rsp, 40					; 00000028H
	ret	0
??$_Traits_equal@U?$char_traits@D@std@@@std@@YA_NQEBD_K01@Z ENDP ; std::_Traits_equal<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >::deallocate, COMDAT

; 701  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::deallocate, COMDAT

; 701  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 96					; 00000060H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
_TEXT	SEGMENT
_First1$ = 8
_First2$ = 16
_Count$ = 24
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z PROC ; std::_Narrow_char_traits<char,int>::compare, COMDAT

; 379  :         // compare [_First1, _First1 + _Count) with [_First2, ...)
; 380  : #if _HAS_CXX17
; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	jmp	memcmp
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ENDP ; std::_Narrow_char_traits<char,int>::compare
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 96					; 00000060H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@0@AEAPEAU10@0@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@0@AEAPEAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> * &>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@0@AEAPEAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Ptr$ = 56
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >, COMDAT

; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

$LN134:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rdx+96]
	lea	rcx, QWORD PTR [rdx+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN130@Freenode[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN44@Freenode:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN65@Freenode:
	lea	rcx, QWORD PTR [rbx+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 112				; 00000070H
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 384  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN60@Freenode:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN131@Freenode:
	npad	2
$LN130@Freenode:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 384  :     }

	DD	$LN65@Freenode
	DD	$LN44@Freenode
	DD	$LN65@Freenode
	DD	$LN65@Freenode
	DD	$LN65@Freenode
	DD	$LN65@Freenode
	DD	$LN65@Freenode
	DD	$LN65@Freenode
	DD	$LN65@Freenode
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@0@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> *>, COMDAT

; 305  :     if constexpr (is_array_v<_Ty>) {
; 306  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 307  :     } else {
; 308  :         _Obj.~_Ty();
; 309  :     }
; 310  : }

	ret	0
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@AEAPEAU10@0@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@AEAPEAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@AEAPEAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Ptr$ = 56
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >, COMDAT

; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

$LN65:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+64]
	mov	rdi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 96					; 00000060H
	mov	rcx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 384  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *>, COMDAT

; 305  :     if constexpr (is_array_v<_Ty>) {
; 306  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 307  :     } else {
; 308  :         _Obj.~_Ty();
; 309  :     }
; 310  : }

	ret	0
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@UActor@@@std@@YAXQEAUActor@@@Z
_TEXT	SEGMENT
_Location$ = 8
??$destroy_at@UActor@@@std@@YAXQEAUActor@@@Z PROC	; std::destroy_at<Actor>, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

	jmp	??1Actor@@QEAA@XZ
??$destroy_at@UActor@@@std@@YAXQEAUActor@@@Z ENDP	; std::destroy_at<Actor>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@URail@Actor@@@std@@YAXQEAURail@Actor@@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@URail@Actor@@@std@@YAXQEAURail@Actor@@@Z PROC ; std::destroy_at<Actor::Rail>, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@URail@Actor@@@std@@YAXQEAURail@Actor@@@Z ENDP ; std::destroy_at<Actor::Rail>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1Rail@Actor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1Rail@Actor@@QEAA@XZ PROC				; Actor::Rail::~Rail, COMDAT
$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 40					; 00000028H

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+8]
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1Rail@Actor@@QEAA@XZ ENDP				; Actor::Rail::~Rail
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@ULink@Actor@@@std@@YAXQEAULink@Actor@@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@ULink@Actor@@@std@@YAXQEAULink@Actor@@@Z PROC ; std::destroy_at<Actor::Link>, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 48					; 00000030H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@ULink@Actor@@@std@@YAXQEAULink@Actor@@@Z ENDP ; std::destroy_at<Actor::Link>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1Link@Actor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1Link@Actor@@QEAA@XZ PROC				; Actor::Link::~Link, COMDAT
$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 48					; 00000030H

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+16]
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1Link@Actor@@QEAA@XZ ENDP				; Actor::Link::~Link
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@URailData@PhiveData@Actor@@@std@@YAXQEAURailData@PhiveData@Actor@@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@URailData@PhiveData@Actor@@@std@@YAXQEAURailData@PhiveData@Actor@@@Z PROC ; std::destroy_at<Actor::PhiveData::RailData>, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN16:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Tidy
??$destroy_at@URailData@PhiveData@Actor@@@std@@YAXQEAURailData@PhiveData@Actor@@@Z ENDP ; std::destroy_at<Actor::PhiveData::RailData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1RailData@PhiveData@Actor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1RailData@PhiveData@Actor@@QEAA@XZ PROC		; Actor::PhiveData::RailData::~RailData, COMDAT
$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+8]
	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Tidy
??1RailData@PhiveData@Actor@@QEAA@XZ ENDP		; Actor::PhiveData::RailData::~RailData
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@YAXQEAUReferData@ConstraintLinkData@PhiveData@Actor@@@Z
_TEXT	SEGMENT
_Location$ = 8
??$destroy_at@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@YAXQEAUReferData@ConstraintLinkData@PhiveData@Actor@@@Z PROC ; std::destroy_at<Actor::PhiveData::ConstraintLinkData::ReferData>, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

	add	rcx, 8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@UReferData@ConstraintLinkData@PhiveData@Actor@@@std@@YAXQEAUReferData@ConstraintLinkData@PhiveData@Actor@@@Z ENDP ; std::destroy_at<Actor::PhiveData::ConstraintLinkData::ReferData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1ReferData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1ReferData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ PROC ; Actor::PhiveData::ConstraintLinkData::ReferData::~ReferData, COMDAT
	add	rcx, 8

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1ReferData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ ENDP ; Actor::PhiveData::ConstraintLinkData::ReferData::~ReferData
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@YAXQEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@@Z
_TEXT	SEGMENT
_Location$ = 8
??$destroy_at@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@YAXQEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@@Z PROC ; std::destroy_at<Actor::PhiveData::ConstraintLinkData::OwnerData>, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

	jmp	??1OwnerData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ
??$destroy_at@UOwnerData@ConstraintLinkData@PhiveData@Actor@@@std@@YAXQEAUOwnerData@ConstraintLinkData@PhiveData@Actor@@@Z ENDP ; std::destroy_at<Actor::PhiveData::ConstraintLinkData::OwnerData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1OwnerData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1OwnerData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ PROC ; Actor::PhiveData::ConstraintLinkData::OwnerData::~OwnerData, COMDAT
$LN221:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx+184]
	lea	rdx, QWORD PTR [rcx+184]
	mov	rdi, rcx
	add	rcx, 184				; 000000b8H
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rdi+184]
	mov	edx, 96					; 00000060H
	call	??3@YAXPEAX_K@Z				; operator delete
	lea	rcx, QWORD PTR [rdi+152]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rdi+56]
	lea	rdx, QWORD PTR [rdi+56]
	lea	rcx, QWORD PTR [rdi+56]
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rdi+56]
	mov	edx, 160				; 000000a0H
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rdi+16]
	lea	rdx, QWORD PTR [rdi+16]
	lea	rcx, QWORD PTR [rdi+16]
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rdi+16]
	mov	edx, 96					; 00000060H
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rdi]
	mov	rdx, rdi
	mov	rcx, rdi
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rdi]
	mov	edx, 96					; 00000060H
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	??3@YAXPEAX_K@Z				; operator delete
??1OwnerData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ ENDP ; Actor::PhiveData::ConstraintLinkData::OwnerData::~OwnerData
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@@std@@QEAA@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >, COMDAT
$LN55:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 160				; 000000a0H
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@YAPEAU?$pair@$$CBVNode@BymlFile@@I@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@YAPEAU?$pair@$$CBVNode@BymlFile@@I@0@AEAU10@@Z PROC ; std::addressof<std::pair<BymlFile::Node const ,unsigned int> >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@YAPEAU?$pair@$$CBVNode@BymlFile@@I@0@AEAU10@@Z ENDP ; std::addressof<std::pair<BymlFile::Node const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBVNode@BymlFile@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@QEAU?$pair@$$CBVNode@BymlFile@@I@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$destroy@U?$pair@$$CBVNode@BymlFile@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@QEAU?$pair@$$CBVNode@BymlFile@@I@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >::destroy<std::pair<BymlFile::Node const ,unsigned int> >, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	mov	rcx, rdx
	jmp	??1Node@BymlFile@@QEAA@XZ
??$destroy@U?$pair@$$CBVNode@BymlFile@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBVNode@BymlFile@@I@std@@PEAX@std@@@1@QEAU?$pair@$$CBVNode@BymlFile@@I@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<BymlFile::Node const ,unsigned int>,void *> > >::destroy<std::pair<BymlFile::Node const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@YAPEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@YAPEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@0@AEAU10@@Z PROC ; std::addressof<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@YAPEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@0@AEAU10@@Z ENDP ; std::addressof<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >::destroy<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN47:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	test	rcx, rcx
	je	SHORT $LN14@destroy

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rdx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN32@destroy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN29@destroy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN32@destroy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN14@destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN29@destroy:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN44@destroy:
??$destroy@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>,void *> > >::destroy<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@VNode@BymlFile@@@std@@YAXQEAVNode@BymlFile@@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@VNode@BymlFile@@@std@@YAXQEAVNode@BymlFile@@@Z PROC ; std::destroy_at<BymlFile::Node>, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN185:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 64					; 00000040H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
??$destroy_at@VNode@BymlFile@@@std@@YAXQEAVNode@BymlFile@@@Z ENDP ; std::destroy_at<BymlFile::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1Node@BymlFile@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1Node@BymlFile@@QEAA@XZ PROC				; BymlFile::Node::~Node, COMDAT
$LN41:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 64					; 00000040H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rbx]
	test	rcx, rcx
	je	SHORT $LN11@Node

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN29@Node

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN26@Node

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN29@Node:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN11@Node:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN26@Node:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN38@Node:
??1Node@BymlFile@@QEAA@XZ ENDP				; BymlFile::Node::~Node
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
_Location$ = 8
??$destroy_at@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::destroy_at<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::destroy_at<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GActor@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GActor@@QEAAPEAXI@Z PROC				; Actor::`scalar deleting destructor', COMDAT
$LN679:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??1Actor@@QEAA@XZ
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GActor@@QEAAPEAXI@Z ENDP				; Actor::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_GRail@Actor@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GRail@Actor@@QEAAPEAXI@Z PROC			; Actor::Rail::`scalar deleting destructor', COMDAT
$LN15:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 40					; 00000028H

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+8]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GRail@Actor@@QEAAPEAXI@Z ENDP			; Actor::Rail::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_GLink@Actor@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GLink@Actor@@QEAAPEAXI@Z PROC			; Actor::Link::`scalar deleting destructor', COMDAT
$LN15:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 48					; 00000030H

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+16]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GLink@Actor@@QEAAPEAXI@Z ENDP			; Actor::Link::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??_GRailData@PhiveData@Actor@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GRailData@PhiveData@Actor@@QEAAPEAXI@Z PROC		; Actor::PhiveData::RailData::`scalar deleting destructor', COMDAT
$LN14:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, QWORD PTR [rbx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Tidy
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GRailData@PhiveData@Actor@@QEAAPEAXI@Z ENDP		; Actor::PhiveData::RailData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_GReferData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GReferData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z PROC ; Actor::PhiveData::ConstraintLinkData::ReferData::`scalar deleting destructor', COMDAT
$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 8

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GReferData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z ENDP ; Actor::PhiveData::ConstraintLinkData::ReferData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z PROC ; Actor::PhiveData::ConstraintLinkData::OwnerData::`scalar deleting destructor', COMDAT
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??1OwnerData@ConstraintLinkData@PhiveData@Actor@@QEAA@XZ
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GOwnerData@ConstraintLinkData@PhiveData@Actor@@QEAAPEAXI@Z ENDP ; Actor::PhiveData::ConstraintLinkData::OwnerData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??_GNode@BymlFile@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GNode@BymlFile@@QEAAPEAXI@Z PROC			; BymlFile::Node::`scalar deleting destructor', COMDAT
$LN186:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 64					; 00000040H

; 767  :         _Tidy();

	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
	call	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GNode@BymlFile@@QEAAPEAXI@Z ENDP			; BymlFile::Node::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??1?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@QEAA@XZ PROC ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::~vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >, COMDAT

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Tidy
??1?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@QEAA@XZ ENDP ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::~vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >,0> >, COMDAT

; 1080 :     ~_Tree() noexcept {

$LN52:
	push	rbx
	sub	rsp, 32					; 00000020H

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx

; 1080 :     ~_Tree() noexcept {

	mov	rbx, rcx

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 160				; 000000a0H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1087 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ PROC ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Tidy, COMDAT

; 2035 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

$LN53:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	sub	rsp, 32					; 00000020H

; 2036 :         auto& _Al         = _Getal();
; 2037 :         auto& _My_data    = _Mypair._Myval2;
; 2038 :         pointer& _Myfirst = _My_data._Myfirst;
; 2039 :         pointer& _Mylast  = _My_data._Mylast;
; 2040 :         pointer& _Myend   = _My_data._Myend;
; 2041 : 
; 2042 :         _My_data._Orphan_all();
; 2043 : 
; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rbx, QWORD PTR [rcx]
	mov	rsi, rcx
	test	rbx, rbx
	je	SHORT $LN2@Tidy
	mov	QWORD PTR [rsp+56], rdi

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	rdi, QWORD PTR [rcx+8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rbx, rdi
	je	SHORT $LN6@Tidy
$LL7@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 48					; 00000030H
	cmp	rbx, rdi
	jne	SHORT $LL7@Tidy
$LN6@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR [rsi]
	mov	rdx, -6148914691236517205		; aaaaaaaaaaaaaaabH
	mov	rax, QWORD PTR [rsi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdi, QWORD PTR [rsp+56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rax, rcx
	sar	rax, 4
	imul	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rax+rax*2]
	shl	rdx, 4

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN38@Tidy

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN35@Tidy

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN38@Tidy:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rsi], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rsi+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rsi+16], rax
$LN2@Tidy:

; 2053 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
	ret	0
$LN35@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN50@Tidy:
?_Tidy@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAXXZ ENDP ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >,0> >::_Get_scary, COMDAT

; 1969 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	rax, rcx

; 1970 :     }

	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >,0> >::_Getal, COMDAT

; 1961 :         return _Mypair._Myval2._Get_first();

	mov	rax, rcx

; 1962 :     }

	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Getal@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@UNode@RailData@PhiveData@Actor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@UNode@RailData@PhiveData@Actor@@@2@XZ PROC ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Getal, COMDAT

; 2181 :         return _Mypair._Get_first();

	mov	rax, rcx

; 2182 :     }

	ret	0
?_Getal@?$vector@UNode@RailData@PhiveData@Actor@@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@AEAAAEAV?$allocator@UNode@RailData@PhiveData@Actor@@@2@XZ ENDP ; std::vector<Actor::PhiveData::RailData::Node,std::allocator<Actor::PhiveData::RailData::Node> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@UNode@RailData@PhiveData@Actor@@@std@@QEAAXQEAUNode@RailData@PhiveData@Actor@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UNode@RailData@PhiveData@Actor@@@std@@QEAAXQEAUNode@RailData@PhiveData@Actor@@_K@Z PROC ; std::allocator<Actor::PhiveData::RailData::Node>::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN23:
	sub	rsp, 40					; 00000028H
	mov	rax, rdx

; 967  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 968  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8+r8*2]
	shl	rdx, 4

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN17@deallocate

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rax-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN14@deallocate

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, rcx
$LN17@deallocate:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rax

; 970  :     }

	add	rsp, 40					; 00000028H

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN14@deallocate:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN20@deallocate:
?deallocate@?$allocator@UNode@RailData@PhiveData@Actor@@@std@@QEAAXQEAUNode@RailData@PhiveData@Actor@@_K@Z ENDP ; std::allocator<Actor::PhiveData::RailData::Node>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@UNode@RailData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UNode@RailData@PhiveData@Actor@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@UNode@RailData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UNode@RailData@PhiveData@Actor@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Actor::PhiveData::RailData::Node>,std::_Vector_val<std::_Simple_types<Actor::PhiveData::RailData::Node> >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@V?$_Vector_val@U?$_Simple_types@UNode@RailData@PhiveData@Actor@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UNode@RailData@PhiveData@Actor@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Actor::PhiveData::RailData::Node>,std::_Vector_val<std::_Simple_types<Actor::PhiveData::RailData::Node> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@0@AEAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@0@AEAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN88:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rdx+64]
	lea	rcx, QWORD PTR [rdx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN84@destroy[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN42@destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN63@destroy:
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN58@destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN85@destroy:
	npad	1
$LN84@destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	DD	$LN63@destroy
	DD	$LN42@destroy
	DD	$LN63@destroy
	DD	$LN63@destroy
	DD	$LN63@destroy
	DD	$LN63@destroy
	DD	$LN63@destroy
	DD	$LN63@destroy
	DD	$LN63@destroy
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@AEAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN19:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+32]
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@YAXQEAU?$pair@$$CBVNode@BymlFile@@I@0@@Z
_TEXT	SEGMENT
_Location$ = 8
??$destroy_at@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@YAXQEAU?$pair@$$CBVNode@BymlFile@@I@0@@Z PROC ; std::destroy_at<std::pair<BymlFile::Node const ,unsigned int> >, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

	jmp	??1Node@BymlFile@@QEAA@XZ
??$destroy_at@U?$pair@$$CBVNode@BymlFile@@I@std@@@std@@YAXQEAU?$pair@$$CBVNode@BymlFile@@I@0@@Z ENDP ; std::destroy_at<std::pair<BymlFile::Node const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$pair@$$CBVNode@BymlFile@@I@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$pair@$$CBVNode@BymlFile@@I@std@@QEAA@XZ PROC	; std::pair<BymlFile::Node const ,unsigned int>::~pair<BymlFile::Node const ,unsigned int>, COMDAT
	jmp	??1Node@BymlFile@@QEAA@XZ
??1?$pair@$$CBVNode@BymlFile@@I@std@@QEAA@XZ ENDP	; std::pair<BymlFile::Node const ,unsigned int>::~pair<BymlFile::Node const ,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@YAXQEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@0@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@YAXQEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@0@@Z PROC ; std::destroy_at<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN44:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN12@destroy_at

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN30@destroy_at

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN27@destroy_at

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN30@destroy_at:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN12@destroy_at:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN27@destroy_at:

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN41@destroy_at:
??$destroy_at@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@std@@YAXQEAU?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@0@@Z ENDP ; std::destroy_at<std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAA@XZ PROC ; std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>::~pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>, COMDAT
$LN36:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN6@pair

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN24@pair

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN21@pair

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN24@pair:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN6@pair:
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN21@pair:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@pair:
??1?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAA@XZ ENDP ; std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>::~pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$ = 56
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >, COMDAT

; 752  :     void _Erase_head(_Alnode& _Al) noexcept {

$LN49:
	push	rbx
	sub	rsp, 32					; 00000020H

; 753  :         this->_Orphan_all();
; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 160				; 000000a0H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 756  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@YAXPEAUNode@RailData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UNode@RailData@PhiveData@Actor@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$dead$ = 64
??$_Destroy_range@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@YAXPEAUNode@RailData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UNode@RailData@PhiveData@Actor@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Actor::PhiveData::RailData::Node> >, COMDAT

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN27:

; 1086 :         for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN24@Destroy_ra
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1082 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	mov	rdi, rdx
	mov	rbx, rcx
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1086 :         for (; _First != _Last; ++_First) {

	add	rbx, 48					; 00000030H
	cmp	rbx, rdi
	jne	SHORT $LL4@Destroy_ra

; 1087 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1088 :         }
; 1089 :     }
; 1090 : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN24@Destroy_ra:
	ret	0
??$_Destroy_range@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@YAXPEAUNode@RailData@PhiveData@Actor@@QEAU1234@AEAV?$allocator@UNode@RailData@PhiveData@Actor@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Actor::PhiveData::RailData::Node> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$pair@$$CBVNode@BymlFile@@I@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$pair@$$CBVNode@BymlFile@@I@std@@QEAAPEAXI@Z PROC	; std::pair<BymlFile::Node const ,unsigned int>::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??1Node@BymlFile@@QEAA@XZ
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$pair@$$CBVNode@BymlFile@@I@std@@QEAAPEAXI@Z ENDP	; std::pair<BymlFile::Node const ,unsigned int>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??_G?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAAPEAXI@Z PROC ; std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>::`scalar deleting destructor', COMDAT
$LN41:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx]
	test	rcx, rcx
	je	SHORT $LN10@scalar

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN28@scalar

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN25@scalar

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN28@scalar:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+8], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+16], rax
$LN10@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN25@scalar:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN38@scalar:
??_G?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@QEAAPEAXI@Z ENDP ; std::pair<std::vector<unsigned char,std::allocator<unsigned char> > const ,unsigned int>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@0@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@0@@Z PROC ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN85:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+64]

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

	mov	rbx, rcx
	add	rcx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	mov	eax, DWORD PTR $LN81@destroy_at[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN40@destroy_at:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN61@destroy_at:
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN56@destroy_at:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN82@destroy_at:
	npad	1
$LN81@destroy_at:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	DD	$LN61@destroy_at
	DD	$LN40@destroy_at
	DD	$LN61@destroy_at
	DD	$LN61@destroy_at
	DD	$LN61@destroy_at
	DD	$LN61@destroy_at
	DD	$LN61@destroy_at
	DD	$LN61@destroy_at
	DD	$LN61@destroy_at
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@0@@Z ENDP ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAA@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>, COMDAT
$LN77:
	push	rbx
	sub	rsp, 32					; 00000020H

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+64]

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
	mov	eax, DWORD PTR $LN73@pair[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN34@pair:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN55@pair:
	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN50@pair:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN74@pair:
	npad	1
$LN73@pair:
	DD	$LN55@pair
	DD	$LN34@pair
	DD	$LN55@pair
	DD	$LN55@pair
	DD	$LN55@pair
	DD	$LN55@pair
	DD	$LN55@pair
	DD	$LN55@pair
	DD	$LN55@pair
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAA@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??1DynamicData@Actor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1DynamicData@Actor@@QEAA@XZ PROC			; Actor::DynamicData::~DynamicData, COMDAT

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+32]

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN66@DynamicDat[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN31@DynamicDat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN27@DynamicDat:
	ret	0
$LN47@DynamicDat:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN67@DynamicDat:
	npad	2
$LN66@DynamicDat:
	DD	$LN27@DynamicDat
	DD	$LN31@DynamicDat
	DD	$LN27@DynamicDat
	DD	$LN27@DynamicDat
	DD	$LN27@DynamicDat
	DD	$LN27@DynamicDat
	DD	$LN27@DynamicDat
	DD	$LN27@DynamicDat
	DD	$LN27@DynamicDat
??1DynamicData@Actor@@QEAA@XZ ENDP			; Actor::DynamicData::~DynamicData
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??1?$variant@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$variant@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ PROC ; std::variant<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~variant<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>, COMDAT

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+32]

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN62@variant[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN28@variant:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN24@variant:
	ret	0
$LN44@variant:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN63@variant:
	npad	2
$LN62@variant:
	DD	$LN24@variant
	DD	$LN28@variant
	DD	$LN24@variant
	DD	$LN24@variant
	DD	$LN24@variant
	DD	$LN24@variant
	DD	$LN24@variant
	DD	$LN24@variant
	DD	$LN24@variant
??1?$variant@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ENDP ; std::variant<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~variant<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??1?$_Non_trivial_move_assign@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_NH_JI_KMVVector3F@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Non_trivial_move_assign@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_NH_JI_KMVVector3F@@@std@@QEAA@XZ PROC ; std::_Non_trivial_move_assign<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Non_trivial_move_assign<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>, COMDAT

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+32]

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN58@Non_trivia[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN25@Non_trivia:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN21@Non_trivia:
	ret	0
$LN41@Non_trivia:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN59@Non_trivia:
	npad	2
$LN58@Non_trivia:
	DD	$LN21@Non_trivia
	DD	$LN25@Non_trivia
	DD	$LN21@Non_trivia
	DD	$LN21@Non_trivia
	DD	$LN21@Non_trivia
	DD	$LN21@Non_trivia
	DD	$LN21@Non_trivia
	DD	$LN21@Non_trivia
	DD	$LN21@Non_trivia
??1?$_Non_trivial_move_assign@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ENDP ; std::_Non_trivial_move_assign<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Non_trivial_move_assign<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??1?$_Non_trivial_copy_assign@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_NH_JI_KMVVector3F@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Non_trivial_copy_assign@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_NH_JI_KMVVector3F@@@std@@QEAA@XZ PROC ; std::_Non_trivial_copy_assign<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Non_trivial_copy_assign<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>, COMDAT

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+32]

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN54@Non_trivia[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN22@Non_trivia:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN18@Non_trivia:
	ret	0
$LN38@Non_trivia:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN55@Non_trivia:
	npad	2
$LN54@Non_trivia:
	DD	$LN18@Non_trivia
	DD	$LN22@Non_trivia
	DD	$LN18@Non_trivia
	DD	$LN18@Non_trivia
	DD	$LN18@Non_trivia
	DD	$LN18@Non_trivia
	DD	$LN18@Non_trivia
	DD	$LN18@Non_trivia
	DD	$LN18@Non_trivia
??1?$_Non_trivial_copy_assign@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ENDP ; std::_Non_trivial_copy_assign<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Non_trivial_copy_assign<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??1?$_Non_trivial_move@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_NH_JI_KMVVector3F@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Non_trivial_move@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_NH_JI_KMVVector3F@@@std@@QEAA@XZ PROC ; std::_Non_trivial_move<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Non_trivial_move<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>, COMDAT

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+32]

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN50@Non_trivia[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN19@Non_trivia:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN15@Non_trivia:
	ret	0
$LN35@Non_trivia:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN51@Non_trivia:
	npad	2
$LN50@Non_trivia:
	DD	$LN15@Non_trivia
	DD	$LN19@Non_trivia
	DD	$LN15@Non_trivia
	DD	$LN15@Non_trivia
	DD	$LN15@Non_trivia
	DD	$LN15@Non_trivia
	DD	$LN15@Non_trivia
	DD	$LN15@Non_trivia
	DD	$LN15@Non_trivia
??1?$_Non_trivial_move@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ENDP ; std::_Non_trivial_move<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Non_trivial_move<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??1?$_Non_trivial_copy@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Non_trivial_copy@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@QEAA@XZ PROC ; std::_Non_trivial_copy<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> >::~_Non_trivial_copy<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> >, COMDAT

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+32]

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN46@Non_trivia[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN16@Non_trivia:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN12@Non_trivia:
	ret	0
$LN32@Non_trivia:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN47@Non_trivia:
	npad	2
$LN46@Non_trivia:
	DD	$LN12@Non_trivia
	DD	$LN16@Non_trivia
	DD	$LN12@Non_trivia
	DD	$LN12@Non_trivia
	DD	$LN12@Non_trivia
	DD	$LN12@Non_trivia
	DD	$LN12@Non_trivia
	DD	$LN12@Non_trivia
	DD	$LN12@Non_trivia
??1?$_Non_trivial_copy@U?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@QEAA@XZ ENDP ; std::_Non_trivial_copy<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> >::~_Non_trivial_copy<std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z PROC ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@0@@Z ENDP ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAA@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z
_TEXT	SEGMENT
this$ = 80
_Al$ = 88
_Rootnode$ = 96
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >, COMDAT

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

$LN88:
	push	rbx
	push	rbp
	push	r14
	sub	rsp, 48					; 00000030H

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [r8+25], 0
	mov	rbx, r8
	mov	r14, rdx
	mov	rbp, rcx
	jne	SHORT $LN3@Erase_tree
	mov	QWORD PTR [rsp+40], rsi
	mov	QWORD PTR [rsp+32], rdi
	npad	13
$LL2@Erase_tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, r14
	mov	rcx, rbp
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rsi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
	lea	rcx, QWORD PTR [rsi+64]
	call	??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rsi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 160				; 000000a0H
	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Erase_tree
	mov	rdi, QWORD PTR [rsp+32]
	mov	rsi, QWORD PTR [rsp+40]
$LN3@Erase_tree:

; 747  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 748  :         }
; 749  :     }

	add	rsp, 48					; 00000030H
	pop	r14
	pop	rbp
	pop	rbx
	ret	0
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >, COMDAT

; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 160				; 000000a0H
	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Unfancy@UNode@RailData@PhiveData@Actor@@@std@@YAPEAUNode@RailData@PhiveData@Actor@@PEAU1234@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@UNode@RailData@PhiveData@Actor@@@std@@YAPEAUNode@RailData@PhiveData@Actor@@PEAU1234@@Z PROC ; std::_Unfancy<Actor::PhiveData::RailData::Node>, COMDAT

; 37   :     return _Ptr;

	mov	rax, rcx

; 38   : }

	ret	0
??$_Unfancy@UNode@RailData@PhiveData@Actor@@@std@@YAPEAUNode@RailData@PhiveData@Actor@@PEAU1234@@Z ENDP ; std::_Unfancy<Actor::PhiveData::RailData::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@UNode@RailData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@UNode@RailData@PhiveData@Actor@@@1@QEAUNode@RailData@PhiveData@Actor@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$destroy@UNode@RailData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@UNode@RailData@PhiveData@Actor@@@1@QEAUNode@RailData@PhiveData@Actor@@@Z PROC ; std::_Default_allocator_traits<std::allocator<Actor::PhiveData::RailData::Node> >::destroy<Actor::PhiveData::RailData::Node>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@UNode@RailData@PhiveData@Actor@@@?$_Default_allocator_traits@V?$allocator@UNode@RailData@PhiveData@Actor@@@std@@@std@@SAXAEAV?$allocator@UNode@RailData@PhiveData@Actor@@@1@QEAUNode@RailData@PhiveData@Actor@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Actor::PhiveData::RailData::Node> >::destroy<Actor::PhiveData::RailData::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAAPEAXI@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>::`scalar deleting destructor', COMDAT
$LN82:
	push	rbx
	sub	rsp, 32					; 00000020H

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+64]

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
	mov	eax, DWORD PTR $LN78@scalar[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN38@scalar:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN59@scalar:
	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN54@scalar:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN79@scalar:
	npad	1
$LN78@scalar:
	DD	$LN59@scalar
	DD	$LN38@scalar
	DD	$LN59@scalar
	DD	$LN59@scalar
	DD	$LN59@scalar
	DD	$LN59@scalar
	DD	$LN59@scalar
	DD	$LN59@scalar
	DD	$LN59@scalar
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UDynamicData@Actor@@@std@@QEAAPEAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Actor::DynamicData>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAAPEAXI@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor', COMDAT
$LN15:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@QEAAPEAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??1?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ PROC ; std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>, COMDAT

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+32]

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN42@Variant_de[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN13@Variant_de:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN9@Variant_de:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 881  :     }

	ret	0
$LN29@Variant_de:

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN43@Variant_de:
	npad	2
$LN42@Variant_de:

; 881  :     }

	DD	$LN9@Variant_de
	DD	$LN13@Variant_de
	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
??1?$_Variant_destroy_layer_@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ENDP ; std::_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Variant_destroy_layer_<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ PROC ; std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>, COMDAT
	ret	0
??1?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ENDP ; std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >::deallocate, COMDAT

; 701  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 160				; 000000a0H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ PROC ; std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy, COMDAT

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+32]

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN39@Destroy[rdx+rax*4+4]
	add	rax, rdx
	jmp	rax
$LN11@Destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN7@Destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 830  :     }

	ret	0
$LN27@Destroy:

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN40@Destroy:
	npad	2
$LN39@Destroy:

; 830  :     }

	DD	$LN7@Destroy
	DD	$LN11@Destroy
	DD	$LN7@Destroy
	DD	$LN7@Destroy
	DD	$LN7@Destroy
	DD	$LN7@Destroy
	DD	$LN7@Destroy
	DD	$LN7@Destroy
	DD	$LN7@Destroy
?_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ ENDP ; std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$0A@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$0A@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z PROC ; std::_Variant_raw_get<0,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();

	mov	rax, rcx

; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$0A@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ENDP ; std::_Variant_raw_get<0,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$ = 16
??$?RU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@3@@Z PROC ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$?RU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@3@@Z ENDP ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$00AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$00AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z PROC ; std::_Variant_raw_get<1,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();

	mov	rax, rcx

; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$00AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ENDP ; std::_Variant_raw_get<1,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$01AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$01AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z PROC ; std::_Variant_raw_get<2,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();

	mov	rax, rcx

; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$01AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ENDP ; std::_Variant_raw_get<2,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$02AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$02AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z PROC ; std::_Variant_raw_get<3,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();

	mov	rax, rcx

; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$02AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ENDP ; std::_Variant_raw_get<3,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$03AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$03AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z PROC ; std::_Variant_raw_get<4,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();

	mov	rax, rcx

; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$03AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ENDP ; std::_Variant_raw_get<4,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$04AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$04AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z PROC ; std::_Variant_raw_get<5,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();

	mov	rax, rcx

; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$04AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ENDP ; std::_Variant_raw_get<5,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$05AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$05AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z PROC ; std::_Variant_raw_get<6,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();

	mov	rax, rcx

; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$05AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ENDP ; std::_Variant_raw_get<6,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$06AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$06AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z PROC ; std::_Variant_raw_get<7,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();

	mov	rax, rcx

; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$06AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@@Z ENDP ; std::_Variant_raw_get<7,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@$0?0@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@$0?0@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@$0?0@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@$0?0@3@@Z PROC ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &,-1> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@$0?0@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@$0?0@3@@Z ENDP ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &,-1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEA_N$00@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_N$00@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEA_N$00@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_N$00@3@@Z PROC ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<bool &,1> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEA_N$00@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_N$00@3@@Z ENDP ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<bool &,1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAH$01@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAH$01@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEAH$01@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAH$01@3@@Z PROC ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<int &,2> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEAH$01@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAH$01@3@@Z ENDP ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<int &,2> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEA_J$02@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_J$02@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEA_J$02@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_J$02@3@@Z PROC ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<__int64 &,3> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEA_J$02@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_J$02@3@@Z ENDP ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<__int64 &,3> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAI$03@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAI$03@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEAI$03@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAI$03@3@@Z PROC ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<unsigned int &,4> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEAI$03@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAI$03@3@@Z ENDP ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<unsigned int &,4> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEA_K$04@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_K$04@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEA_K$04@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_K$04@3@@Z PROC ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<unsigned __int64 &,5> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEA_K$04@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_K$04@3@@Z ENDP ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<unsigned __int64 &,5> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAM$05@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAM$05@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEAM$05@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAM$05@3@@Z PROC ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<float &,6> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEAM$05@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAM$05@3@@Z ENDP ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<float &,6> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAVVector3F@@$06@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAVVector3F@@$06@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEAVVector3F@@$06@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAVVector3F@@$06@3@@Z PROC ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<Vector3F &,7> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEAVVector3F@@$06@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAVVector3F@@$06@3@@Z ENDP ; `std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<Vector3F &,7> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??1?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ PROC ; std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>, COMDAT

; 422  :         // explicitly non-trivial destructor (which would otherwise be defined as deleted
; 423  :         // since the class has a variant member with a non-trivial destructor)
; 424  :     }

	ret	0
??1?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAA@XZ ENDP ; std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::~_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 160				; 000000a0H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?index@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?index@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEBA_KXZ PROC ; std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::index, COMDAT

; 802  :         // index of the contained alternative or variant_npos if valueless_by_exception
; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+32]

; 804  :     }

	ret	0
?index@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEBA_KXZ ENDP ; std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::index
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Storage@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEGAAAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Storage@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEGAAAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@2@XZ PROC ; std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Storage, COMDAT

; 775  :         return *this;

	mov	rax, rcx

; 776  :     }

	ret	0
?_Storage@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEGAAAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@2@XZ ENDP ; std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Storage
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEGAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEGAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Get, COMDAT

; 444  :         return _Head;

	mov	rax, rcx

; 445  :     }

	ret	0
?_Get@?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEGAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$00_NH_JI_KMVVector3F@@@std@@QEGAAAEA_NXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$00_NH_JI_KMVVector3F@@@std@@QEGAAAEA_NXZ PROC ; std::_Variant_storage_<1,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Get, COMDAT

; 399  :         return _Head;

	mov	rax, rcx

; 400  :     }

	ret	0
?_Get@?$_Variant_storage_@$00_NH_JI_KMVVector3F@@@std@@QEGAAAEA_NXZ ENDP ; std::_Variant_storage_<1,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$00H_JI_KMVVector3F@@@std@@QEGAAAEAHXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$00H_JI_KMVVector3F@@@std@@QEGAAAEAHXZ PROC ; std::_Variant_storage_<1,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Get, COMDAT

; 399  :         return _Head;

	mov	rax, rcx

; 400  :     }

	ret	0
?_Get@?$_Variant_storage_@$00H_JI_KMVVector3F@@@std@@QEGAAAEAHXZ ENDP ; std::_Variant_storage_<1,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$00_JI_KMVVector3F@@@std@@QEGAAAEA_JXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$00_JI_KMVVector3F@@@std@@QEGAAAEA_JXZ PROC ; std::_Variant_storage_<1,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Get, COMDAT

; 399  :         return _Head;

	mov	rax, rcx

; 400  :     }

	ret	0
?_Get@?$_Variant_storage_@$00_JI_KMVVector3F@@@std@@QEGAAAEA_JXZ ENDP ; std::_Variant_storage_<1,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$00I_KMVVector3F@@@std@@QEGAAAEAIXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$00I_KMVVector3F@@@std@@QEGAAAEAIXZ PROC ; std::_Variant_storage_<1,unsigned int,unsigned __int64,float,Vector3F>::_Get, COMDAT

; 399  :         return _Head;

	mov	rax, rcx

; 400  :     }

	ret	0
?_Get@?$_Variant_storage_@$00I_KMVVector3F@@@std@@QEGAAAEAIXZ ENDP ; std::_Variant_storage_<1,unsigned int,unsigned __int64,float,Vector3F>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$00_KMVVector3F@@@std@@QEGAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$00_KMVVector3F@@@std@@QEGAAAEA_KXZ PROC ; std::_Variant_storage_<1,unsigned __int64,float,Vector3F>::_Get, COMDAT

; 399  :         return _Head;

	mov	rax, rcx

; 400  :     }

	ret	0
?_Get@?$_Variant_storage_@$00_KMVVector3F@@@std@@QEGAAAEA_KXZ ENDP ; std::_Variant_storage_<1,unsigned __int64,float,Vector3F>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$00MVVector3F@@@std@@QEGAAAEAMXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$00MVVector3F@@@std@@QEGAAAEAMXZ PROC ; std::_Variant_storage_<1,float,Vector3F>::_Get, COMDAT

; 399  :         return _Head;

	mov	rax, rcx

; 400  :     }

	ret	0
?_Get@?$_Variant_storage_@$00MVVector3F@@@std@@QEGAAAEAMXZ ENDP ; std::_Variant_storage_<1,float,Vector3F>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$00VVector3F@@@std@@QEGAAAEAVVector3F@@XZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$00VVector3F@@@std@@QEGAAAEAVVector3F@@XZ PROC ; std::_Variant_storage_<1,Vector3F>::_Get, COMDAT

; 399  :         return _Head;

	mov	rax, rcx

; 400  :     }

	ret	0
?_Get@?$_Variant_storage_@$00VVector3F@@@std@@QEGAAAEAVVector3F@@XZ ENDP ; std::_Variant_storage_<1,Vector3F>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@0@AEAPEAU10@0@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@0@AEAPEAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> * &>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@0@AEAPEAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Ptr$ = 56
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >, COMDAT

; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

$LN77:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+64]
	mov	rdi, rdx
	call	??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 160				; 000000a0H
	mov	rcx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 384  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@0@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> *>, COMDAT

; 305  :     if constexpr (is_array_v<_Ty>) {
; 306  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 307  :     } else {
; 308  :         _Obj.~_Ty();
; 309  :     }
; 310  : }

	ret	0
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@UNode@RailData@PhiveData@Actor@@@std@@YAXQEAUNode@RailData@PhiveData@Actor@@@Z
_TEXT	SEGMENT
_Location$ = 8
??$destroy_at@UNode@RailData@PhiveData@Actor@@@std@@YAXQEAUNode@RailData@PhiveData@Actor@@@Z PROC ; std::destroy_at<Actor::PhiveData::RailData::Node>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@UNode@RailData@PhiveData@Actor@@@std@@YAXQEAUNode@RailData@PhiveData@Actor@@@Z ENDP ; std::destroy_at<Actor::PhiveData::RailData::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1Node@RailData@PhiveData@Actor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1Node@RailData@PhiveData@Actor@@QEAA@XZ PROC		; Actor::PhiveData::RailData::Node::~Node, COMDAT

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1Node@RailData@PhiveData@Actor@@QEAA@XZ ENDP		; Actor::PhiveData::RailData::Node::~Node
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_visit@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@2@QEAAXXZ@@std@@YAX_KAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@QEAAXXZ@@Z
_TEXT	SEGMENT
_Idx$ = 8
_Obj$ = 16
_Func$dead$ = 24
??$_Variant_raw_visit@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@2@QEAAXXZ@@std@@YAX_KAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@QEAAXXZ@@Z PROC ; std::_Variant_raw_visit<std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &,`std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1> >, COMDAT

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	r8, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN34@Variant_ra[r8+rcx*4+4]
	add	rax, r8
	jmp	rax
$LN7@Variant_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN3@Variant_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 693  : }

	ret	0
$LN23@Variant_ra:

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN35@Variant_ra:
	npad	3
$LN34@Variant_ra:

; 693  : }

	DD	$LN3@Variant_ra
	DD	$LN7@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
??$_Variant_raw_visit@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@V<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@2@QEAAXXZ@@std@@YAX_KAEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@0@QEAAXXZ@@Z ENDP ; std::_Variant_raw_visit<std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &,`std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_GNode@RailData@PhiveData@Actor@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GNode@RailData@PhiveData@Actor@@QEAAPEAXI@Z PROC	; Actor::PhiveData::RailData::Node::`scalar deleting destructor', COMDAT
$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GNode@RailData@PhiveData@Actor@@QEAAPEAXI@Z ENDP	; Actor::PhiveData::RailData::Node::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@0@AEAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@0@AEAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN31:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+32]
	mov	rbx, rdx
	call	??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Visit@V<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@4@@?$_Variant_raw_visit1@$01@std@@SAX_K$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@1@QEAAXXZ@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@1@@Z
_TEXT	SEGMENT
_Idx$ = 8
_Func$dead$ = 16
_Obj$ = 24
??$_Visit@V<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@4@@?$_Variant_raw_visit1@$01@std@@SAX_K$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@1@QEAAXXZ@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@1@@Z PROC ; std::_Variant_raw_visit1<2>::_Visit<`std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>, COMDAT

; 656  :         // dispatch a visitor for a _Variant_storage with at most 4^2 states
; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN31@Visit[rdx+rcx*4]
	add	rax, rdx
	jmp	rax
$LN5@Visit:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, r8
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN1@Visit:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 658  :     }

	ret	0
$LN21@Visit:

; 656  :         // dispatch a visitor for a _Variant_storage with at most 4^2 states
; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN32@Visit:
$LN31@Visit:

; 658  :     }

	DD	$LN1@Visit
	DD	$LN5@Visit
	DD	$LN1@Visit
	DD	$LN1@Visit
	DD	$LN1@Visit
	DD	$LN1@Visit
	DD	$LN1@Visit
	DD	$LN1@Visit
	DD	$LN1@Visit
??$_Visit@V<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@std@@QEAAXXZ@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@4@@?$_Variant_raw_visit1@$01@std@@SAX_K$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@1@QEAAXXZ@AEAV?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NH_JI_KMVVector3F@@@1@@Z ENDP ; std::_Variant_raw_visit1<2>::_Visit<`std::_Variant_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F>::_Destroy'::`3'::<lambda_1>,std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,int,__int64,unsigned int,unsigned __int64,float,Vector3F> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@0@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@0@@Z PROC ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN29:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
	call	??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@0@@Z ENDP ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAA@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >, COMDAT
$LN23:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
	call	??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAA@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ PROC ; std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>, COMDAT
	jmp	??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
??1?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ENDP ; std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Non_trivial_move_assign@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VNode@BymlFile@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Non_trivial_move_assign@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VNode@BymlFile@@@std@@QEAA@XZ PROC ; std::_Non_trivial_move_assign<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Non_trivial_move_assign<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>, COMDAT
	jmp	??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
??1?$_Non_trivial_move_assign@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VNode@BymlFile@@@std@@QEAA@XZ ENDP ; std::_Non_trivial_move_assign<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Non_trivial_move_assign<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Non_trivial_copy_assign@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VNode@BymlFile@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Non_trivial_copy_assign@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VNode@BymlFile@@@std@@QEAA@XZ PROC ; std::_Non_trivial_copy_assign<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Non_trivial_copy_assign<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>, COMDAT
	jmp	??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
??1?$_Non_trivial_copy_assign@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VNode@BymlFile@@@std@@QEAA@XZ ENDP ; std::_Non_trivial_copy_assign<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Non_trivial_copy_assign<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Non_trivial_move@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VNode@BymlFile@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Non_trivial_move@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VNode@BymlFile@@@std@@QEAA@XZ PROC ; std::_Non_trivial_move<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Non_trivial_move<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>, COMDAT
	jmp	??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
??1?$_Non_trivial_move@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VNode@BymlFile@@@std@@QEAA@XZ ENDP ; std::_Non_trivial_move<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Non_trivial_move<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Non_trivial_copy@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Non_trivial_copy@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@QEAA@XZ PROC ; std::_Non_trivial_copy<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >::~_Non_trivial_copy<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >, COMDAT
	jmp	??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
??1?$_Non_trivial_copy@U?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@QEAA@XZ ENDP ; std::_Non_trivial_copy<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >::~_Non_trivial_copy<std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAAPEAXI@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >::`scalar deleting destructor', COMDAT
$LN27:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 32					; 00000020H
	call	??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$variant@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@@std@@QEAAPEAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::variant<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ PROC ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>, COMDAT

; 879  :     _CONSTEXPR20 ~_Variant_destroy_layer_() noexcept { // Destroy contained value, if any

$LN97:
	push	rbx
	sub	rsp, 32					; 00000020H

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+88]

; 879  :     _CONSTEXPR20 ~_Variant_destroy_layer_() noexcept { // Destroy contained value, if any

	mov	rbx, rcx

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN93@Variant_de[rcx+rax*4+4]
	add	rax, rcx
	jmp	rax
$LN20@Variant_de:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 881  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN9@Variant_de:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 881  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN21@Variant_de:
	lea	rcx, QWORD PTR [rbx+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 881  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
$LN29@Variant_de:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN94@Variant_de:
	npad	1
$LN93@Variant_de:

; 881  :     }

	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
	DD	$LN9@Variant_de
	DD	$LN20@Variant_de
	DD	$LN21@Variant_de
??1?$_Variant_destroy_layer_@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ENDP ; std::_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_destroy_layer_<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ PROC ; std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>, COMDAT
	ret	0
??1?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ENDP ; std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ PROC ; std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy, COMDAT

; 821  :     _CONSTEXPR20 void _Destroy() noexcept { // destroy the contained value, if any

$LN139:
	push	rbx
	sub	rsp, 32					; 00000020H

; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+88]

; 821  :     _CONSTEXPR20 void _Destroy() noexcept { // destroy the contained value, if any

	mov	rbx, rcx

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN135@Destroy[rcx+rax*4+4]
	add	rax, rcx
	jmp	rax
$LN18@Destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 830  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN7@Destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 830  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN19@Destroy:
	lea	rcx, QWORD PTR [rbx+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 830  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
$LN27@Destroy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN136@Destroy:
	npad	1
$LN135@Destroy:

; 830  :     }

	DD	$LN7@Destroy
	DD	$LN7@Destroy
	DD	$LN7@Destroy
	DD	$LN7@Destroy
	DD	$LN7@Destroy
	DD	$LN7@Destroy
	DD	$LN7@Destroy
	DD	$LN7@Destroy
	DD	$LN18@Destroy
	DD	$LN19@Destroy
?_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ ENDP ; std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$0A@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$0A@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z PROC ; std::_Variant_raw_get<0,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();

	mov	rax, rcx

; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$0A@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ENDP ; std::_Variant_raw_get<0,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAI$0A@@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAI$0A@@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEAI$0A@@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAI$0A@@3@@Z PROC ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<unsigned int &,0> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEAI$0A@@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAI$0A@@3@@Z ENDP ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<unsigned int &,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$00AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$00AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z PROC ; std::_Variant_raw_get<1,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();

	mov	rax, rcx

; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$00AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ENDP ; std::_Variant_raw_get<1,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$01AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$01AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z PROC ; std::_Variant_raw_get<2,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();

	mov	rax, rcx

; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$01AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ENDP ; std::_Variant_raw_get<2,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$02AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$02AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z PROC ; std::_Variant_raw_get<3,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();

	mov	rax, rcx

; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$02AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ENDP ; std::_Variant_raw_get<3,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$03AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$03AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z PROC ; std::_Variant_raw_get<4,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();

	mov	rax, rcx

; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$03AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ENDP ; std::_Variant_raw_get<4,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$04AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$04AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z PROC ; std::_Variant_raw_get<5,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();

	mov	rax, rcx

; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$04AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ENDP ; std::_Variant_raw_get<5,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$05AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$05AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z PROC ; std::_Variant_raw_get<6,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();

	mov	rax, rcx

; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$05AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ENDP ; std::_Variant_raw_get<6,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$06AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$06AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z PROC ; std::_Variant_raw_get<7,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();

	mov	rax, rcx

; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$06AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ENDP ; std::_Variant_raw_get<7,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$07AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$07AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z PROC ; std::_Variant_raw_get<8,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();
; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(

	mov	rax, rcx

; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$07AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@@Z ENDP ; std::_Variant_raw_get<8,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_get@$0A@AEAV?$_Variant_storage_@$0A@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@VNode@BymlFile@@@0@@Z
_TEXT	SEGMENT
_Obj$ = 8
??$_Variant_raw_get@$0A@AEAV?$_Variant_storage_@$0A@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@VNode@BymlFile@@@0@@Z PROC ; std::_Variant_raw_get<0,std::_Variant_storage_<0,BymlFile::Node> &>, COMDAT

; 517  :     // access the _Idx-th element of a _Variant_storage
; 518  :     if constexpr (_Idx == 0) {
; 519  :         return static_cast<_Storage&&>(_Obj)._Get();

	mov	rax, rcx

; 520  :     } else if constexpr (_Idx == 1) {
; 521  :         return static_cast<_Storage&&>(_Obj)._Tail._Get();
; 522  :     } else if constexpr (_Idx == 2) {
; 523  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Get();
; 524  :     } else if constexpr (_Idx == 3) {
; 525  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Get();
; 526  :     } else if constexpr (_Idx == 4) {
; 527  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Get();
; 528  :     } else if constexpr (_Idx == 5) {
; 529  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Get();
; 530  :     } else if constexpr (_Idx == 6) {
; 531  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 532  :     } else if constexpr (_Idx == 7) {
; 533  :         return static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Get();
; 534  :     } else if constexpr (_Idx < 16) {
; 535  :         return _STD _Variant_raw_get<_Idx - 8>(
; 536  :             static_cast<_Storage&&>(_Obj)._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 537  :     } else if constexpr (_Idx < 32) {
; 538  :         return _STD _Variant_raw_get<_Idx - 16>(
; 539  :             static_cast<_Storage&&>(_Obj)
; 540  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 541  :     } else if constexpr (_Idx < 64) {
; 542  :         return _STD _Variant_raw_get<_Idx - 32>(
; 543  :             static_cast<_Storage&&>(_Obj)
; 544  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 545  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 546  :     } else { // _Idx >= 64
; 547  :         return _STD _Variant_raw_get<_Idx - 64>(
; 548  :             static_cast<_Storage&&>(_Obj)
; 549  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 550  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 551  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail
; 552  :                 ._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail._Tail);
; 553  :     }
; 554  : }

	ret	0
??$_Variant_raw_get@$0A@AEAV?$_Variant_storage_@$0A@VNode@BymlFile@@@std@@@std@@YA?A_TAEAV?$_Variant_storage_@$0A@VNode@BymlFile@@@0@@Z ENDP ; std::_Variant_raw_get<0,std::_Variant_storage_<0,BymlFile::Node> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@$0?0@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@$0?0@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@$0?0@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@$0?0@3@@Z PROC ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &,-1> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@$0?0@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@$0?0@3@@Z ENDP ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &,-1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAH$00@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAH$00@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEAH$00@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAH$00@3@@Z PROC ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<int &,1> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEAH$00@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAH$00@3@@Z ENDP ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<int &,1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEA_K$01@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_K$01@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEA_K$01@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_K$01@3@@Z PROC ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<unsigned __int64 &,2> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEA_K$01@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_K$01@3@@Z ENDP ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<unsigned __int64 &,2> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEA_J$02@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_J$02@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEA_J$02@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_J$02@3@@Z PROC ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<__int64 &,3> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEA_J$02@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_J$02@3@@Z ENDP ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<__int64 &,3> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAM$03@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAM$03@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEAM$03@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAM$03@3@@Z PROC ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<float &,4> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEAM$03@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAM$03@3@@Z ENDP ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<float &,4> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEA_N$04@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_N$04@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEA_N$04@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_N$04@3@@Z PROC ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<bool &,5> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEA_N$04@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEA_N$04@3@@Z ENDP ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<bool &,5> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAN$05@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAN$05@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$dead$ = 16
??$?RU?$_Tagged@AEAN$05@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAN$05@3@@Z PROC ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<double &,6> >, COMDAT

; 824  :                 if constexpr (decltype(_Ref)::_Idx != variant_npos) {
; 825  :                     using _Indexed_value_type = _Remove_cvref_t<decltype(_Ref._Val)>;
; 826  :                     _Ref._Val.~_Indexed_value_type();
; 827  :                 }
; 828  :             });

	ret	0
??$?RU?$_Tagged@AEAN$05@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAN$05@3@@Z ENDP ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<double &,6> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$06@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$06@3@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ref$ = 16
??$?RU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$06@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$06@3@@Z PROC ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,7> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$?RU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$06@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$06@3@@Z ENDP ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,7> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$?RU?$_Tagged@AEAVNode@BymlFile@@$07@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAVNode@BymlFile@@$07@3@@Z
_TEXT	SEGMENT
this$dead$ = 48
_Ref$ = 56
??$?RU?$_Tagged@AEAVNode@BymlFile@@$07@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAVNode@BymlFile@@$07@3@@Z PROC ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<BymlFile::Node &,8> >, COMDAT

; 823  :             _STD _Variant_raw_visit(index(), _Storage(), [](auto _Ref) noexcept {

$LN188:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+64]
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 828  :             });

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
??$?RU?$_Tagged@AEAVNode@BymlFile@@$07@std@@@<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@QEBA?A_PU?$_Tagged@AEAVNode@BymlFile@@$07@3@@Z ENDP ; `std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>::operator()<std::_Tagged<BymlFile::Node &,8> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??1?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ PROC ; std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>, COMDAT

; 422  :         // explicitly non-trivial destructor (which would otherwise be defined as deleted
; 423  :         // since the class has a variant member with a non-trivial destructor)
; 424  :     }

	ret	0
??1?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAA@XZ ENDP ; std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::~_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?index@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?index@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEBA_KXZ PROC ; std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::index, COMDAT

; 802  :         // index of the contained alternative or variant_npos if valueless_by_exception
; 803  :         return static_cast<size_t>(_Which);

	movsx	rax, BYTE PTR [rcx+88]

; 804  :     }

	ret	0
?index@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEBA_KXZ ENDP ; std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::index
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Storage@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Storage@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@XZ PROC ; std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Storage, COMDAT

; 775  :         return *this;

	mov	rax, rcx

; 776  :     }

	ret	0
?_Storage@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@XZ ENDP ; std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Storage
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAIXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAIXZ PROC ; std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get, COMDAT

; 444  :         return _Head;

	mov	rax, rcx

; 445  :     }

	ret	0
?_Get@?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAIXZ ENDP ; std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$0A@H_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAHXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$0A@H_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAHXZ PROC ; std::_Variant_storage_<0,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get, COMDAT

; 444  :         return _Head;

	mov	rax, rcx

; 445  :     }

	ret	0
?_Get@?$_Variant_storage_@$0A@H_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAHXZ ENDP ; std::_Variant_storage_<0,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$0A@_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$0A@_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEA_KXZ PROC ; std::_Variant_storage_<0,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get, COMDAT

; 444  :         return _Head;

	mov	rax, rcx

; 445  :     }

	ret	0
?_Get@?$_Variant_storage_@$0A@_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEA_KXZ ENDP ; std::_Variant_storage_<0,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$0A@_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEA_JXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$0A@_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEA_JXZ PROC ; std::_Variant_storage_<0,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get, COMDAT

; 444  :         return _Head;

	mov	rax, rcx

; 445  :     }

	ret	0
?_Get@?$_Variant_storage_@$0A@_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEA_JXZ ENDP ; std::_Variant_storage_<0,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$0A@M_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAMXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$0A@M_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAMXZ PROC ; std::_Variant_storage_<0,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get, COMDAT

; 444  :         return _Head;

	mov	rax, rcx

; 445  :     }

	ret	0
?_Get@?$_Variant_storage_@$0A@M_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAMXZ ENDP ; std::_Variant_storage_<0,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$0A@_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEA_NXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$0A@_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEA_NXZ PROC ; std::_Variant_storage_<0,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get, COMDAT

; 444  :         return _Head;

	mov	rax, rcx

; 445  :     }

	ret	0
?_Get@?$_Variant_storage_@$0A@_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEA_NXZ ENDP ; std::_Variant_storage_<0,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$0A@NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEANXZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$0A@NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEANXZ PROC ; std::_Variant_storage_<0,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get, COMDAT

; 444  :         return _Head;

	mov	rax, rcx

; 445  :     }

	ret	0
?_Get@?$_Variant_storage_@$0A@NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEANXZ ENDP ; std::_Variant_storage_<0,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get, COMDAT

; 444  :         return _Head;

	mov	rax, rcx

; 445  :     }

	ret	0
?_Get@?$_Variant_storage_@$0A@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEGAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Variant_storage_<0,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ?_Get@?$_Variant_storage_@$0A@VNode@BymlFile@@@std@@QEGAAAEAVNode@BymlFile@@XZ
_TEXT	SEGMENT
this$ = 8
?_Get@?$_Variant_storage_@$0A@VNode@BymlFile@@@std@@QEGAAAEAVNode@BymlFile@@XZ PROC ; std::_Variant_storage_<0,BymlFile::Node>::_Get, COMDAT

; 444  :         return _Head;

	mov	rax, rcx

; 445  :     }

	ret	0
?_Get@?$_Variant_storage_@$0A@VNode@BymlFile@@@std@@QEGAAAEAVNode@BymlFile@@XZ ENDP ; std::_Variant_storage_<0,BymlFile::Node>::_Get
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Variant_raw_visit@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@QEAAXXZ@@std@@YAX_KAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@QEAAXXZ@@Z
_TEXT	SEGMENT
_Idx$ = 48
_Obj$ = 56
_Func$dead$ = 64
??$_Variant_raw_visit@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@QEAAXXZ@@std@@YAX_KAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@QEAAXXZ@@Z PROC ; std::_Variant_raw_visit<std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &,`std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1> >, COMDAT

; 686  :     size_t _Idx, _Storage&& _Obj, _Fn&& _Func) noexcept(_Variant_raw_visit_noexcept<_Fn, _Storage>) {

$LN134:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN130@Variant_ra[rdx+rcx*4+4]
	add	rax, rdx
	jmp	rax
$LN14@Variant_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 693  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN3@Variant_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 693  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN15@Variant_ra:
	lea	rcx, QWORD PTR [rbx+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 693  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
$LN23@Variant_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN131@Variant_ra:
	npad	2
$LN130@Variant_ra:

; 693  : }

	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN3@Variant_ra
	DD	$LN14@Variant_ra
	DD	$LN15@Variant_ra
??$_Variant_raw_visit@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@2@QEAAXXZ@@std@@YAX_KAEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@0@QEAAXXZ@@Z ENDP ; std::_Variant_raw_visit<std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &,`std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant
;	COMDAT ??$_Visit@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@4@@?$_Variant_raw_visit1@$01@std@@SAX_K$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@@Z
_TEXT	SEGMENT
_Idx$ = 48
_Func$dead$ = 56
_Obj$ = 64
??$_Visit@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@4@@?$_Variant_raw_visit1@$01@std@@SAX_K$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@@Z PROC ; std::_Variant_raw_visit1<2>::_Visit<`std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>, COMDAT

; 655  :         size_t _Idx, _Fn&& _Func, _Storage&& _Obj) noexcept(_Variant_raw_visit_noexcept<_Fn, _Storage>) {

$LN131:
	push	rbx
	sub	rsp, 32					; 00000020H

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

	lea	rdx, OFFSET FLAT:__ImageBase
	mov	rbx, r8
	mov	eax, DWORD PTR $LN127@Visit[rdx+rcx*4]
	add	rax, rdx
	jmp	rax
$LN12@Visit:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 658  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN1@Visit:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 658  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN13@Visit:
	lea	rcx, QWORD PTR [r8+64]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 658  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	jmp	?_Tidy@?$vector@EV?$allocator@E@std@@@std@@AEAAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Tidy
$LN21@Visit:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\variant

; 657  :         _STL_STAMP(16, _STL_VISIT_STAMP);

$LN128@Visit:
	npad	2
$LN127@Visit:

; 658  :     }

	DD	$LN1@Visit
	DD	$LN1@Visit
	DD	$LN1@Visit
	DD	$LN1@Visit
	DD	$LN1@Visit
	DD	$LN1@Visit
	DD	$LN1@Visit
	DD	$LN1@Visit
	DD	$LN12@Visit
	DD	$LN13@Visit
??$_Visit@V<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@std@@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@4@@?$_Variant_raw_visit1@$01@std@@SAX_K$$QEAV<lambda_1>@?2??_Destroy@?$_Variant_base@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@QEAAXXZ@AEAV?$_Variant_storage_@$0A@IH_K_JM_NNV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VNode@BymlFile@@@1@@Z ENDP ; std::_Variant_raw_visit1<2>::_Visit<`std::_Variant_base<unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node>::_Destroy'::`3'::<lambda_1>,std::_Variant_storage_<0,unsigned int,int,unsigned __int64,__int64,float,bool,double,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile::Node> &>
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_09CJIDGFMN@MainField@			; `string'
PUBLIC	??_C@_0L@KACADEGK@SkyIslands@			; `string'
PUBLIC	??_C@_0M@MBFDGEBF@NormalStage@			; `string'
PUBLIC	??_C@_0N@KMIGGLHL@SmallDungeon@			; `string'
PUBLIC	??_C@_0N@FJKMLKHD@LargeDungeon@			; `string'
PUBLIC	??_C@_0L@IEAFNKO@MinusField@			; `string'
PUBLIC	??_C@_07GJFEPIJN@Thunder@			; `string'
PUBLIC	??_C@_03MMKGDKGA@001@				; `string'
PUBLIC	??_C@_03MLPIMMCK@E?96@				; `string'
PUBLIC	??_C@_0BC@NINJPBP@StartIslandMerge2@		; `string'
PUBLIC	??_C@_0BC@GLFABGPA@Identifier?5?$CIe?4g?4?5@	; `string'
PUBLIC	??_C@_01PKGAHCOL@?$CJ@				; `string'
PUBLIC	??_C@_0DC@NCOPHBKE@MainField?1Castle?1?6Set_HyruleCas@ ; `string'
PUBLIC	??_C@_0L@IANLICFN@TitleScene@			; `string'
PUBLIC	?Func@PopupLoadScene@@3P6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZEA ; PopupLoadScene::Func
PUBLIC	?IsOpen@PopupLoadScene@@3_NA			; PopupLoadScene::IsOpen
PUBLIC	?SceneType@PopupLoadScene@@3W4Type@SceneMgr@@A	; PopupLoadScene::SceneType
	ALIGN	8

?Func@PopupLoadScene@@3P6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZEA DQ 01H DUP (?) ; PopupLoadScene::Func
?IsOpen@PopupLoadScene@@3_NA DB 01H DUP (?)		; PopupLoadScene::IsOpen
	ALIGN	4

?SceneType@PopupLoadScene@@3W4Type@SceneMgr@@A DD 01H DUP (?) ; PopupLoadScene::SceneType
_BSS	ENDS
;	COMDAT ??_C@_0L@IANLICFN@TitleScene@
CONST	SEGMENT
??_C@_0L@IANLICFN@TitleScene@ DB 'TitleScene', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NCOPHBKE@MainField?1Castle?1?6Set_HyruleCas@
CONST	SEGMENT
??_C@_0DC@NCOPHBKE@MainField?1Castle?1?6Set_HyruleCas@ DB 'MainField/Cast'
	DB	'le/', 0aH, 'Set_HyruleCastle_IslandGround_A', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01PKGAHCOL@?$CJ@
CONST	SEGMENT
??_C@_01PKGAHCOL@?$CJ@ DB ')', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GLFABGPA@Identifier?5?$CIe?4g?4?5@
CONST	SEGMENT
??_C@_0BC@GLFABGPA@Identifier?5?$CIe?4g?4?5@ DB 'Identifier (e.g. ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NINJPBP@StartIslandMerge2@
CONST	SEGMENT
??_C@_0BC@NINJPBP@StartIslandMerge2@ DB 'StartIslandMerge2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03MLPIMMCK@E?96@
CONST	SEGMENT
??_C@_03MLPIMMCK@E?96@ DB 'E-6', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MMKGDKGA@001@
CONST	SEGMENT
??_C@_03MMKGDKGA@001@ DB '001', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07GJFEPIJN@Thunder@
CONST	SEGMENT
??_C@_07GJFEPIJN@Thunder@ DB 'Thunder', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IEAFNKO@MinusField@
CONST	SEGMENT
??_C@_0L@IEAFNKO@MinusField@ DB 'MinusField', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FJKMLKHD@LargeDungeon@
CONST	SEGMENT
??_C@_0N@FJKMLKHD@LargeDungeon@ DB 'LargeDungeon', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KMIGGLHL@SmallDungeon@
CONST	SEGMENT
??_C@_0N@KMIGGLHL@SmallDungeon@ DB 'SmallDungeon', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MBFDGEBF@NormalStage@
CONST	SEGMENT
??_C@_0M@MBFDGEBF@NormalStage@ DB 'NormalStage', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KACADEGK@SkyIslands@
CONST	SEGMENT
??_C@_0L@KACADEGK@SkyIslands@ DB 'SkyIslands', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CJIDGFMN@MainField@
CONST	SEGMENT
??_C@_09CJIDGFMN@MainField@ DB 'MainField', 00H		; `string'
PUBLIC	?Open@PopupLoadScene@@YAXP6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z ; PopupLoadScene::Open
PUBLIC	?Render@PopupLoadScene@@YAXXZ			; PopupLoadScene::Render
PUBLIC	?SceneIdentifier@PopupLoadScene@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; PopupLoadScene::SceneIdentifier
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Open@PopupLoadScene@@YAXP6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z DD imagerel $LN11
	DD	imagerel $LN11+62
	DD	imagerel $unwind$?Open@PopupLoadScene@@YAXP6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Render@PopupLoadScene@@YAXXZ DD imagerel $LN429
	DD	imagerel $LN429+1556
	DD	imagerel $unwind$?Render@PopupLoadScene@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FSceneIdentifier@PopupLoadScene@@YAXXZ DD imagerel ??__FSceneIdentifier@PopupLoadScene@@YAXXZ
	DD	imagerel ??__FSceneIdentifier@PopupLoadScene@@YAXXZ+100
	DD	imagerel $unwind$??__FSceneIdentifier@PopupLoadScene@@YAXXZ
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FSceneIdentifier@PopupLoadScene@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Render@PopupLoadScene@@YAXXZ DB 010H
	DB	0faH
	DB	00H
	DB	0adH, 03H
	DB	02H
	DB	'%', 06H
	DB	04H
	DB	01H, 02H
	DB	06H
	DB	0e2H
	DB	04H
	DB	0cdH, 03H
	DB	02H
	DB	095H, 02H
	DB	00H
	DB	0deH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Render@PopupLoadScene@@YAXXZ DB 06H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	081H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0d0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?Render@PopupLoadScene@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?Render@PopupLoadScene@@YAXXZ
	DD	imagerel $ip2state$?Render@PopupLoadScene@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Render@PopupLoadScene@@YAXXZ DD 0d3319H
	DD	027c425H
	DD	0267425H
	DD	0256425H
	DD	0243425H
	DD	0200125H
	DD	0e017f019H
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?Render@PopupLoadScene@@YAXXZ
	DD	0faH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Open@PopupLoadScene@@YAXP6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z DD 010401H
	DD	04204H
?SceneIdentifier@PopupLoadScene@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; PopupLoadScene::SceneIdentifier
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DQ	0000000000000000H
	DQ	000000000000000fH
?SceneIdentifier$initializer$@PopupLoadScene@@3P6AXXZEA DQ FLAT:??__FSceneIdentifier@PopupLoadScene@@YAXXZ ; PopupLoadScene::SceneIdentifier$initializer$
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
;	COMDAT ??__FSceneIdentifier@PopupLoadScene@@YAXXZ
text$di	SEGMENT
??__FSceneIdentifier@PopupLoadScene@@YAXXZ PROC		; PopupLoadScene::`dynamic atexit destructor for 'SceneIdentifier'', COMDAT

; 8    : std::string PopupLoadScene::SceneIdentifier = "";

	lea	rcx, OFFSET FLAT:??__FSceneIdentifier@PopupLoadScene@@YAXXZ ; PopupLoadScene::`dynamic atexit destructor for 'SceneIdentifier''
	jmp	atexit
??__FSceneIdentifier@PopupLoadScene@@YAXXZ ENDP		; PopupLoadScene::`dynamic atexit destructor for 'SceneIdentifier''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FSceneIdentifier@PopupLoadScene@@YAXXZ
text$yd	SEGMENT
??__FSceneIdentifier@PopupLoadScene@@YAXXZ PROC		; PopupLoadScene::`dynamic atexit destructor for 'SceneIdentifier'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?SceneIdentifier@PopupLoadScene@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?SceneIdentifier@PopupLoadScene@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqa	XMMWORD PTR ?SceneIdentifier@PopupLoadScene@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?SceneIdentifier@PopupLoadScene@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FSceneIdentifier@PopupLoadScene@@YAXXZ ENDP		; PopupLoadScene::`dynamic atexit destructor for 'SceneIdentifier''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_stdlib.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
;	COMDAT ?Render@PopupLoadScene@@YAXXZ
_TEXT	SEGMENT
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 72
$T6 = 104
$T7 = 104
cb_user_data$8 = 136
Example$9 = 160
TypeDropdownItems$10 = 192
__$ArrayPad$ = 248
?Render@PopupLoadScene@@YAXXZ PROC			; PopupLoadScene::Render, COMDAT

; 13   : {

$LN429:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	mov	QWORD PTR [rsp+32], r12
	push	rbp
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-71]
	sub	rsp, 256				; 00000100H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-185], rax
	xor	r12d, r12d

; 14   : 	if (IsOpen)

	cmp	BYTE PTR ?IsOpen@PopupLoadScene@@3_NA, r12b ; PopupLoadScene::IsOpen
	je	$LN4@Render

; 15   : 	{
; 16   : 		UIMapView::RenderSettings.AllowSelectingActor = false;

	mov	BYTE PTR ?RenderSettings@UIMapView@@3URenderingSettingsStruct@1@A+5, r12b
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 8124 :     ImGuiContext& g = *GImGui;

	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui

; 8125 :     IM_ASSERT(cond == 0 || ImIsPowerOfTwo(cond)); // Make sure the user doesn't attempt to combine multiple condition flags.
; 8126 :     g.NextWindowData.Flags |= ImGuiNextWindowDataFlags_HasSize;

	or	DWORD PTR [rax+18680], 2

; 8127 :     g.NextWindowData.SizeVal = size;

	mov	DWORD PTR [rax+18716], 1140981760	; 44020000H
	mov	DWORD PTR [rax+18720], 1122107392	; 42e20000H

; 8128 :     g.NextWindowData.SizeCond = cond ? cond : ImGuiCond_Always;

	mov	DWORD PTR [rax+18688], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 18   : 		ImGui::OpenPopup("Load scene");

	lea	rcx, OFFSET FLAT:??_C@_0L@LNNNJEPH@Load?5scene@
	call	?OpenPopup@ImGui@@YAXPEBDH@Z		; ImGui::OpenPopup

; 19   : 		if (ImGui::BeginPopupModal("Load scene"))

	xor	r8d, r8d
	lea	rcx, OFFSET FLAT:??_C@_0L@LNNNJEPH@Load?5scene@
	call	?BeginPopupModal@ImGui@@YA_NPEBDPEA_NH@Z ; ImGui::BeginPopupModal
	test	al, al
	je	$LN239@Render

; 20   : 		{
; 21   : 			const char* TypeDropdownItems[] = { "SkyIslands", "MainField", "MinusField", "LargeDungeon", "SmallDungeon", "NormalStage", "Custom" };

	lea	rax, OFFSET FLAT:??_C@_0L@KACADEGK@SkyIslands@
	mov	QWORD PTR TypeDropdownItems$10[rbp-185], rax
	lea	rax, OFFSET FLAT:??_C@_09CJIDGFMN@MainField@
	mov	QWORD PTR TypeDropdownItems$10[rbp-177], rax
	lea	rax, OFFSET FLAT:??_C@_0L@IEAFNKO@MinusField@
	mov	QWORD PTR TypeDropdownItems$10[rbp-169], rax
	lea	rax, OFFSET FLAT:??_C@_0N@FJKMLKHD@LargeDungeon@
	mov	QWORD PTR TypeDropdownItems$10[rbp-161], rax
	lea	rax, OFFSET FLAT:??_C@_0N@KMIGGLHL@SmallDungeon@
	mov	QWORD PTR TypeDropdownItems$10[rbp-153], rax
	lea	rax, OFFSET FLAT:??_C@_0M@MBFDGEBF@NormalStage@
	mov	QWORD PTR TypeDropdownItems$10[rbp-145], rax
	lea	rax, OFFSET FLAT:??_C@_06IFGIOHDE@Custom@
	mov	QWORD PTR TypeDropdownItems$10[rbp-137], rax

; 22   : 			ImGui::PushItemWidth(250);

	movss	xmm0, DWORD PTR __real@437a0000
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 1952 :     const bool value_changed = Combo(label, current_item, Items_ArrayGetter, (void*)items, items_count, height_in_items);

	mov	DWORD PTR [rsp+32], 7
	lea	r9, QWORD PTR TypeDropdownItems$10[rbp-185]
	lea	rdx, OFFSET FLAT:?SceneType@PopupLoadScene@@3W4Type@SceneMgr@@A ; PopupLoadScene::SceneType
	lea	rcx, OFFSET FLAT:??_C@_04KOACHJEN@Type@
	call	?Combo@ImGui@@YA_NPEBDPEAHP6A_NPEAXHPEAPEBD@Z2HH@Z ; ImGui::Combo
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	r8, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1926 :     inline T&           back()                              { IM_ASSERT(Size > 0); return Data[Size - 1]; }

	movsxd	rdx, DWORD PTR [r8+512]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10356:     window->DC.ItemWidth = window->DC.ItemWidthStack.back();

	mov	rax, QWORD PTR [r8+520]
	mov	ecx, DWORD PTR [rax+rdx*4-4]
	mov	DWORD PTR [r8+500], ecx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1926 :     inline T&           back()                              { IM_ASSERT(Size > 0); return Data[Size - 1]; }

	lea	eax, DWORD PTR [rdx-1]

; 1939 :     inline void         pop_back()                          { IM_ASSERT(Size > 0); Size--; }

	mov	DWORD PTR [r8+512], eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR Example$9[rbp-185], xmm0

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR Example$9[rbp-169], r12

; 2630 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR Example$9[rbp-161], 15

; 2631 : 
; 2632 :             if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2633 :                 _Traits::assign(_My_data._Bx._Buf, _Count, _Arg);
; 2634 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());
; 2635 :             } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2636 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count);
; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	BYTE PTR Example$9[rbp-185], r12b
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 26   : 			switch (SceneType)

	movsxd	rax, DWORD PTR ?SceneType@PopupLoadScene@@3W4Type@SceneMgr@@A ; PopupLoadScene::SceneType
	cmp	eax, 6
	ja	SHORT $LN2@Render
	lea	rdx, OFFSET FLAT:__ImageBase
	mov	ecx, DWORD PTR $LN422@Render[rdx+rax*4]
	add	rcx, rdx
	jmp	rcx
$LN6@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 17
	lea	rdx, OFFSET FLAT:??_C@_0BC@NINJPBP@StartIslandMerge2@
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 30   : 				break;

	jmp	SHORT $LN424@Render
$LN8@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 3
	lea	rdx, OFFSET FLAT:??_C@_03MLPIMMCK@E?96@
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 36   : 				break;

	jmp	SHORT $LN424@Render
$LN9@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 3
	lea	rdx, OFFSET FLAT:??_C@_03MMKGDKGA@001@
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 39   : 				break;

	jmp	SHORT $LN424@Render
$LN10@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 7
	lea	rdx, OFFSET FLAT:??_C@_07GJFEPIJN@Thunder@
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 42   : 				break;

	jmp	SHORT $LN424@Render
$LN11@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 10
	lea	rdx, OFFSET FLAT:??_C@_0L@IANLICFN@TitleScene@
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 45   : 				break;

	jmp	SHORT $LN424@Render
$LN12@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 49					; 00000031H
	lea	rdx, OFFSET FLAT:??_C@_0DC@NCOPHBKE@MainField?1Castle?1?6Set_HyruleCas@
$LN424@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 50   : 			ImGui::PushItemWidth(250);

	lea	rcx, QWORD PTR Example$9[rbp-185]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN2@Render:
	movss	xmm0, DWORD PTR __real@437a0000
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rcx
	sub	rax, QWORD PTR Example$9[rbp-169]
	cmp	rax, 17
	jb	$LN426@Render

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r15, QWORD PTR Example$9[rbp-185]

; 2236 :         if (_Large_string_engaged()) {

	mov	rsi, QWORD PTR Example$9[rbp-185]
	cmp	QWORD PTR Example$9[rbp-161], 16
	cmovae	r15, rsi
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T5[rbp-185], xmm0
	xorps	xmm1, xmm1

; 2293 :     size_type _Mysize = 0; // current length of string

	movdqu	XMMWORD PTR $T5[rbp-169], xmm1

; 2787 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

	mov	r14, QWORD PTR Example$9[rbp-169]
	add	r14, 17

; 2788 :         size_type _New_capacity = _BUF_SIZE - 1;

	mov	edi, 15

; 2789 :         auto& _My_data          = _Mypair._Myval2;
; 2790 :         _Elem* _Ptr             = _My_data._Bx._Buf;

	lea	rbx, QWORD PTR $T5[rbp-185]

; 2791 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2792 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws
; 2793 : 
; 2794 :         if (_New_capacity < _New_size) {

	cmp	r14, rdi
	jbe	SHORT $LN271@Render

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rdi, r14
	or	rdi, 15
	cmp	rdi, rcx

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN294@Render

; 4716 :             return _Max;

	mov	rdi, rcx
	jmp	SHORT $LN293@Render
$LN294@Render:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	mov	eax, 22
	cmp	rdi, rax
	cmovb	rdi, rax
$LN293@Render:

; 2796 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

	mov	rcx, rdi
	add	rcx, 1
	mov	rax, -1
	cmovb	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 238  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rcx, 4096				; 00001000H
	jb	SHORT $LN303@Render

; 139  :     const size_t _Block_size = _Non_user_size + _Bytes;

	lea	rax, QWORD PTR [rcx+39]

; 140  :     if (_Block_size <= _Bytes) {

	cmp	rax, rcx
	jbe	$LN427@Render

; 87   :         return ::operator new(_Bytes);

	mov	rcx, rax
	call	??2@YAPEAX_K@Z				; operator new

; 145  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	test	rax, rax
	je	$LN203@Render

; 146  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	lea	rbx, QWORD PTR [rax+39]
	and	rbx, -32				; ffffffffffffffe0H

; 147  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	QWORD PTR [rbx-8], rax

; 239  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	jmp	SHORT $LN301@Render
$LN303@Render:

; 240  :         }
; 241  :     }
; 242  : #endif // defined(_M_IX86) || defined(_M_X64)
; 243  : 
; 244  :     if (_Bytes != 0) {

	test	rcx, rcx
	je	SHORT $LN304@Render

; 87   :         return ::operator new(_Bytes);

	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax

; 245  :         return _Traits::_Allocate(_Bytes);

	jmp	SHORT $LN301@Render
$LN304@Render:

; 246  :     }
; 247  : 
; 248  :     return nullptr;

	mov	rbx, r12
$LN301@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2798 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

	mov	QWORD PTR $T5[rbp-185], rbx
$LN271@Render:

; 2799 : 
; 2800 :             _Start_element_lifetimes(_Ptr, _New_capacity + 1);
; 2801 :         }
; 2802 : 
; 2803 :         _My_data._Mysize = _New_size;

	mov	QWORD PTR $T5[rbp-169], r14

; 2804 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T5[rbp-161], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR ??_C@_0BC@GLFABGPA@Identifier?5?$CIe?4g?4?5@
	movups	XMMWORD PTR [rbx], xmm0
	movzx	eax, BYTE PTR ??_C@_0BC@GLFABGPA@Identifier?5?$CIe?4g?4?5@+16
	mov	BYTE PTR [rbx+16], al

; 2806 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

	lea	rcx, QWORD PTR [rbx+17]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, QWORD PTR Example$9[rbp-169]
	mov	rdx, r15
	call	memcpy

; 2807 :         _Traits::assign(_Ptr[_New_size], _Elem());

	mov	BYTE PTR [rbx+r14], 0

; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR $T5[rbp-169]
	mov	rdx, QWORD PTR $T5[rbp-161]
	mov	rax, rdx
	sub	rax, rcx

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rax, 1
	jb	SHORT $LN81@Render

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR $T5[rbp-169], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T5[rbp-185]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR $T5[rbp-185]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	WORD PTR [rax+rcx], 41			; 00000029H

; 3277 :             return *this;

	lea	rax, QWORD PTR $T5[rbp-185]
	jmp	SHORT $LN80@Render
$LN81@Render:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], 1
	lea	r9, OFFSET FLAT:??_C@_01PKGAHCOL@?$CJ@
	mov	edx, 1
	lea	rcx, QWORD PTR $T5[rbp-185]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
$LN80@Render:
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T7[rbp-185], xmm0
	xorps	xmm1, xmm1

; 2293 :     size_type _Mysize = 0; // current length of string

	movdqu	XMMWORD PTR $T7[rbp-169], xmm1

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T7[rbp-185], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T7[rbp-169], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 51   : 			ImGui::InputText(("Identifier (e.g. " + Example + ")").c_str(), &SceneIdentifier);

	mov	QWORD PTR [rax+16], r12
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T7[rbp-185]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T7[rbp-161], 16
	cmovae	rcx, QWORD PTR $T7[rbp-185]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_stdlib.cpp

; 53   :     cb_user_data.Str = str;

	lea	rdi, OFFSET FLAT:?SceneIdentifier@PopupLoadScene@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; PopupLoadScene::SceneIdentifier
	mov	QWORD PTR cb_user_data$8[rbp-185], rdi

; 54   :     cb_user_data.ChainCallback = callback;

	mov	QWORD PTR cb_user_data$8[rbp-177], r12

; 55   :     cb_user_data.ChainCallbackUserData = user_data;

	mov	QWORD PTR cb_user_data$8[rbp-169], r12

; 56   :     return InputText(label, (char*)str->c_str(), str->capacity() + 1, flags, InputTextCallback, &cb_user_data);

	mov	rax, QWORD PTR ?SceneIdentifier@PopupLoadScene@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	lea	r9, QWORD PTR [rax+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	mov	r8, rdi
	cmp	rax, 16
	cmovae	r8, QWORD PTR ?SceneIdentifier@PopupLoadScene@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	QWORD PTR $T2[rbp-185], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 3658 :     return InputTextEx(label, NULL, buf, (int)buf_size, ImVec2(0, 0), flags, callback, user_data);

	lea	rax, QWORD PTR cb_user_data$8[rbp-185]
	mov	QWORD PTR [rsp+56], rax
	lea	rax, OFFSET FLAT:?InputTextCallback@@YAHPEAUImGuiInputTextCallbackData@@@Z ; InputTextCallback
	mov	QWORD PTR [rsp+48], rax
	mov	DWORD PTR [rsp+40], 262144		; 00040000H
	lea	rax, QWORD PTR $T2[rbp-185]
	mov	QWORD PTR [rsp+32], rax
	xor	edx, edx
	call	?InputTextEx@ImGui@@YA_NPEBD0PEADHAEBUImVec2@@HP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z ; ImGui::InputTextEx
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T7[rbp-161]
	cmp	rdx, 16
	jb	SHORT $LN165@Render

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T7[rbp-185]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN177@Render

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN177@Render
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN177@Render:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN165@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T7[rbp-169], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T7[rbp-185], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T5[rbp-161]
	cmp	rdx, 16
	jb	SHORT $LN194@Render

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T5[rbp-185]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN206@Render

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN206@Render
$LN203@Render:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN206@Render:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN194@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T5[rbp-169], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T5[rbp-185], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	r8, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1926 :     inline T&           back()                              { IM_ASSERT(Size > 0); return Data[Size - 1]; }

	movsxd	rdx, DWORD PTR [r8+512]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10356:     window->DC.ItemWidth = window->DC.ItemWidthStack.back();

	mov	rax, QWORD PTR [r8+520]
	mov	ecx, DWORD PTR [rax+rdx*4-4]
	mov	DWORD PTR [r8+500], ecx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 1926 :     inline T&           back()                              { IM_ASSERT(Size > 0); return Data[Size - 1]; }

	lea	eax, DWORD PTR [rdx-1]

; 1939 :     inline void         pop_back()                          { IM_ASSERT(Size > 0); Size--; }

	mov	DWORD PTR [r8+512], eax

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	QWORD PTR $T4[rbp-185], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 723  :     return ButtonEx(label, size_arg, ImGuiButtonFlags_None);

	xor	r8d, r8d
	lea	rdx, QWORD PTR $T4[rbp-185]
	lea	rcx, OFFSET FLAT:??_C@_04IPBPFFEL@Load@
	call	?ButtonEx@ImGui@@YA_NPEBDAEBUImVec2@@H@Z ; ImGui::ButtonEx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 53   : 			if (ImGui::Button("Load"))

	test	al, al
	je	SHORT $LN13@Render

; 54   : 			{
; 55   : 				Func(SceneType, SceneIdentifier);

	mov	rbx, QWORD PTR ?Func@PopupLoadScene@@3P6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZEA ; PopupLoadScene::Func
	mov	rdx, rdi
	lea	rcx, QWORD PTR $T6[rbp-185]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rdx, rax
	mov	ecx, DWORD PTR ?SceneType@PopupLoadScene@@3W4Type@SceneMgr@@A ; PopupLoadScene::SceneType
	call	rbx

; 56   : 				IsOpen = false;

	mov	BYTE PTR ?IsOpen@PopupLoadScene@@3_NA, 0 ; PopupLoadScene::IsOpen

; 57   : 				Func = nullptr;

	mov	QWORD PTR ?Func@PopupLoadScene@@3P6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZEA, r12 ; PopupLoadScene::Func

; 58   : 				SceneType = SceneMgr::Type::SkyIslands;

	mov	DWORD PTR ?SceneType@PopupLoadScene@@3W4Type@SceneMgr@@A, r12d ; PopupLoadScene::SceneType
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	rcx, rdi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN13@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 61   : 			ImGui::SameLine();

	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	QWORD PTR $T3[rbp-185], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 723  :     return ButtonEx(label, size_arg, ImGuiButtonFlags_None);

	xor	r8d, r8d
	lea	rdx, QWORD PTR $T3[rbp-185]
	lea	rcx, OFFSET FLAT:??_C@_06HCFIKKEA@Return@
	call	?ButtonEx@ImGui@@YA_NPEBDAEBUImVec2@@H@Z ; ImGui::ButtonEx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 62   : 			if (ImGui::Button("Return"))

	test	al, al
	je	SHORT $LN14@Render

; 63   : 			{
; 64   : 				IsOpen = false;

	mov	BYTE PTR ?IsOpen@PopupLoadScene@@3_NA, 0 ; PopupLoadScene::IsOpen

; 65   : 				Func = nullptr;

	mov	QWORD PTR ?Func@PopupLoadScene@@3P6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZEA, r12 ; PopupLoadScene::Func

; 66   : 				SceneType = SceneMgr::Type::SkyIslands;

	mov	DWORD PTR ?SceneType@PopupLoadScene@@3W4Type@SceneMgr@@A, r12d ; PopupLoadScene::SceneType
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	rcx, rdi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	npad	1
$LN14@Render:

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR Example$9[rbp-161]
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN239@Render

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rsi

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN251@Render

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rsi, QWORD PTR [rsi-8]
	sub	rax, rsi

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN251@Render
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN251@Render:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rsi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN239@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 70   : 		ImGui::EndPopup();

	call	?EndPopup@ImGui@@YAXXZ			; ImGui::EndPopup
$LN4@Render:

; 72   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-185]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+256]
	mov	rbx, QWORD PTR [r11+32]
	mov	rsi, QWORD PTR [r11+40]
	mov	rdi, QWORD PTR [r11+48]
	mov	r12, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rbp
	ret	0
$LN427@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 141  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
	npad	1
$LN426@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4917 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN423@Render:
	npad	3
$LN422@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 72   : }

	DD	$LN6@Render
	DD	$LN8@Render
	DD	$LN8@Render
	DD	$LN10@Render
	DD	$LN9@Render
	DD	$LN11@Render
	DD	$LN12@Render
?Render@PopupLoadScene@@YAXXZ ENDP			; PopupLoadScene::Render
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 72
$T6 = 104
$T7 = 104
cb_user_data$8 = 136
Example$9 = 160
TypeDropdownItems$10 = 192
__$ArrayPad$ = 248
?dtor$0@?0??Render@PopupLoadScene@@YAXXZ@4HA PROC	; `PopupLoadScene::Render'::`1'::dtor$0
	lea	rcx, QWORD PTR Example$9[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??Render@PopupLoadScene@@YAXXZ@4HA ENDP	; `PopupLoadScene::Render'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 72
$T6 = 104
$T7 = 104
cb_user_data$8 = 136
Example$9 = 160
TypeDropdownItems$10 = 192
__$ArrayPad$ = 248
?dtor$1@?0??Render@PopupLoadScene@@YAXXZ@4HA PROC	; `PopupLoadScene::Render'::`1'::dtor$1
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??Render@PopupLoadScene@@YAXXZ@4HA ENDP	; `PopupLoadScene::Render'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 72
$T6 = 104
$T7 = 104
cb_user_data$8 = 136
Example$9 = 160
TypeDropdownItems$10 = 192
__$ArrayPad$ = 248
?dtor$2@?0??Render@PopupLoadScene@@YAXXZ@4HA PROC	; `PopupLoadScene::Render'::`1'::dtor$2
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??Render@PopupLoadScene@@YAXXZ@4HA ENDP	; `PopupLoadScene::Render'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp
;	COMDAT ?Open@PopupLoadScene@@YAXP6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z
_TEXT	SEGMENT
Callback$dead$ = 48
?Open@PopupLoadScene@@YAXP6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z PROC ; PopupLoadScene::Open, COMDAT

; 75   : {

$LN11:
	sub	rsp, 40					; 00000028H

; 76   : 	Func = Callback;

	lea	rax, OFFSET FLAT:?<lambda_invoker_cdecl>@<lambda_2>@?O@??Render@UI@@YAXXZ@SA@W4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; `UI::Render'::`14'::<lambda_2>::<lambda_invoker_cdecl>

; 77   : 	SceneType = SceneMgr::Type::SkyIslands;

	mov	DWORD PTR ?SceneType@PopupLoadScene@@3W4Type@SceneMgr@@A, 0 ; PopupLoadScene::SceneType
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	xor	r8d, r8d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 76   : 	Func = Callback;

	mov	QWORD PTR ?Func@PopupLoadScene@@3P6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZEA, rax ; PopupLoadScene::Func
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	lea	rcx, OFFSET FLAT:?SceneIdentifier@PopupLoadScene@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; PopupLoadScene::SceneIdentifier
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupLoadScene.cpp

; 79   : 	IsOpen = true;

	mov	BYTE PTR ?IsOpen@PopupLoadScene@@3_NA, 1 ; PopupLoadScene::IsOpen

; 80   : }

	add	rsp, 40					; 00000028H
	ret	0
?Open@PopupLoadScene@@YAXP6AXW4Type@SceneMgr@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z ENDP ; PopupLoadScene::Open
_TEXT	ENDS
END

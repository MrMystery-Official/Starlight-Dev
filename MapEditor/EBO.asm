; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?Delete@EBO@@QEAAXXZ				; EBO::Delete
PUBLIC	?Unbind@EBO@@QEAAXXZ				; EBO::Unbind
PUBLIC	??0EBO@@QEAA@AEAV?$vector@IV?$allocator@I@std@@@std@@@Z ; EBO::EBO
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0EBO@@QEAA@AEAV?$vector@IV?$allocator@I@std@@@std@@@Z DD imagerel $LN7
	DD	imagerel $LN7+86
	DD	imagerel $unwind$??0EBO@@QEAA@AEAV?$vector@IV?$allocator@I@std@@@std@@@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0EBO@@QEAA@AEAV?$vector@IV?$allocator@I@std@@@std@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\EBO.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\EBO.cpp
;	COMDAT ??0EBO@@QEAA@AEAV?$vector@IV?$allocator@I@std@@@std@@@Z
_TEXT	SEGMENT
this$ = 48
indices$ = 56
??0EBO@@QEAA@AEAV?$vector@IV?$allocator@I@std@@@std@@@Z PROC ; EBO::EBO, COMDAT

; 5    : {

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 6    : 	glGenBuffers(1, &ID);

	mov	rdx, rcx
	mov	ecx, 1
	call	QWORD PTR glad_glGenBuffers

; 7    : 	glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, ID);

	mov	edx, DWORD PTR [rdi]
	mov	ecx, 34963				; 00008893H
	call	QWORD PTR glad_glBindBuffer

; 8    : 	glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size() * sizeof(int), indices.data(), GL_STATIC_DRAW);

	mov	r8, QWORD PTR [rbx]
	mov	ecx, 34963				; 00008893H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rdx, QWORD PTR [rbx+8]
	sub	rdx, r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\EBO.cpp

; 8    : 	glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size() * sizeof(int), indices.data(), GL_STATIC_DRAW);

	and	rdx, -4
	lea	r9d, QWORD PTR [rcx+81]
	call	QWORD PTR glad_glBufferData

; 9    : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0EBO@@QEAA@AEAV?$vector@IV?$allocator@I@std@@@std@@@Z ENDP ; EBO::EBO
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\EBO.cpp
;	COMDAT ?Unbind@EBO@@QEAAXXZ
_TEXT	SEGMENT
this$dead$ = 8
?Unbind@EBO@@QEAAXXZ PROC				; EBO::Unbind, COMDAT

; 20   : 	glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);

	xor	edx, edx
	mov	ecx, 34963				; 00008893H
	rex_jmp	QWORD PTR glad_glBindBuffer
?Unbind@EBO@@QEAAXXZ ENDP				; EBO::Unbind
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\EBO.cpp
;	COMDAT ?Delete@EBO@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?Delete@EBO@@QEAAXXZ PROC				; EBO::Delete, COMDAT

; 26   : 	glDeleteBuffers(1, &ID);

	mov	rdx, rcx
	mov	ecx, 1
	rex_jmp	QWORD PTR glad_glDeleteBuffers
?Delete@EBO@@QEAAXXZ ENDP				; EBO::Delete
_TEXT	ENDS
END

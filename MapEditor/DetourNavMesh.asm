; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0DC@NKBGNGNI@idx?5?$DM?5?$CIunsigned?5int?$CJtile?9?$DOheade@ ; `string'
PUBLIC	??_C@_0GN@KHPJFMOE@H?3?2Paul?2switchemulator?2Zelda?5To@ ; `string'
EXTRN	__imp_roundf:PROC
;	COMDAT ??_C@_0GN@KHPJFMOE@H?3?2Paul?2switchemulator?2Zelda?5To@
CONST	SEGMENT
??_C@_0GN@KHPJFMOE@H?3?2Paul?2switchemulator?2Zelda?5To@ DB 'H:\Paul\swit'
	DB	'chemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recast'
	DB	'navigation\detour\DetourNavMesh.cpp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NKBGNGNI@idx?5?$DM?5?$CIunsigned?5int?$CJtile?9?$DOheade@
CONST	SEGMENT
??_C@_0DC@NKBGNGNI@idx?5?$DM?5?$CIunsigned?5int?$CJtile?9?$DOheade@ DB 'i'
	DB	'dx < (unsigned int)tile->header->offMeshConCount', 00H ; `string'
PUBLIC	??$dtAbs@M@@YAMM@Z				; dtAbs<float>
PUBLIC	?isValidPolyRef@dtNavMesh@@QEBA_NI@Z		; dtNavMesh::isValidPolyRef
PUBLIC	?getTileAndPolyByRefUnsafe@dtNavMesh@@QEBAXIPEAPEBUdtMeshTile@@PEAPEBUdtPoly@@@Z ; dtNavMesh::getTileAndPolyByRefUnsafe
PUBLIC	?closestPointOnPoly@dtNavMesh@@AEBAXIPEBMPEAMPEA_N@Z ; dtNavMesh::closestPointOnPoly
PUBLIC	?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z ; dtNavMesh::getPolyHeight
PUBLIC	?dtVlenSqr@@YAMPEBM@Z				; dtVlenSqr
PUBLIC	?dtVlerp@@YAXPEAMPEBM1M@Z			; dtVlerp
PUBLIC	?decodePolyId@dtNavMesh@@QEBAXIAEAI00@Z		; dtNavMesh::decodePolyId
PUBLIC	?dtGetDetailTriEdgeFlags@@YAHEH@Z		; dtGetDetailTriEdgeFlags
PUBLIC	?getType@dtPoly@@QEBAEXZ			; dtPoly::getType
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD imagerel ??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
	DD	imagerel ??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+108
	DD	imagerel $unwind$??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD imagerel ??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+108
	DD	imagerel ??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+958
	DD	imagerel $chain$6$??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD imagerel ??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+958
	DD	imagerel ??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+1068
	DD	imagerel $chain$7$??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD imagerel ??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
	DD	imagerel ??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+124
	DD	imagerel $unwind$??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD imagerel ??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+124
	DD	imagerel ??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+1030
	DD	imagerel $chain$7$??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD imagerel ??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+1030
	DD	imagerel ??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+1141
	DD	imagerel $chain$8$??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?isValidPolyRef@dtNavMesh@@QEBA_NI@Z DD imagerel $LN19
	DD	imagerel $LN19+133
	DD	imagerel $unwind$?isValidPolyRef@dtNavMesh@@QEBA_NI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getTileAndPolyByRefUnsafe@dtNavMesh@@QEBAXIPEAPEBUdtMeshTile@@PEAPEBUdtPoly@@@Z DD imagerel $LN6
	DD	imagerel $LN6+103
	DD	imagerel $unwind$?getTileAndPolyByRefUnsafe@dtNavMesh@@QEBAXIPEAPEBUdtMeshTile@@PEAPEBUdtPoly@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?closestPointOnPoly@dtNavMesh@@AEBAXIPEBMPEAMPEA_N@Z DD imagerel $LN22
	DD	imagerel $LN22+355
	DD	imagerel $unwind$?closestPointOnPoly@dtNavMesh@@AEBAXIPEBMPEAMPEA_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD imagerel $LN100
	DD	imagerel $LN100+431
	DD	imagerel $unwind$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$9$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD imagerel $LN100+431
	DD	imagerel $LN100+1074
	DD	imagerel $chain$9$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$10$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD imagerel $LN100+1074
	DD	imagerel $LN100+1119
	DD	imagerel $chain$10$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$11$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD imagerel $LN100+1119
	DD	imagerel $LN100+1156
	DD	imagerel $chain$11$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$12$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD imagerel $LN100+1156
	DD	imagerel $LN100+1160
	DD	imagerel $chain$12$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?decodePolyId@dtNavMesh@@QEBAXIAEAI00@Z DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$?decodePolyId@dtNavMesh@@QEBAXIAEAI00@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$?decodePolyId@dtNavMesh@@QEBAXIAEAI00@Z DD 060f01H
	DD	03740fH
	DD	02640aH
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$12$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD 021H
	DD	imagerel $LN100
	DD	imagerel $LN100+431
	DD	imagerel $unwind$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$11$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD 0140021H
	DD	0af800H
	DD	0be800H
	DD	0cd800H
	DD	0dc800H
	DD	0eb800H
	DD	0fa800H
	DD	0109800H
	DD	0118800H
	DD	0127800H
	DD	0136800H
	DD	imagerel $LN100
	DD	imagerel $LN100+431
	DD	imagerel $unwind$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$10$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD 021H
	DD	imagerel $LN100
	DD	imagerel $LN100+431
	DD	imagerel $unwind$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$9$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD 0145821H
	DD	0af858H
	DD	0be84fH
	DD	0cd846H
	DD	0dc83dH
	DD	0eb834H
	DD	0fa82bH
	DD	0109822H
	DD	0118819H
	DD	0127810H
	DD	0136808H
	DD	imagerel $LN100
	DD	imagerel $LN100+431
	DD	imagerel $unwind$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD 0b2919H
	DD	0303417H
	DD	0280117H
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?closestPointOnPoly@dtNavMesh@@AEBAXIPEBMPEAMPEA_N@Z DD 0a1801H
	DD	0d6418H
	DD	0c5418H
	DD	0a3418H
	DD	0f0145218H
	DD	07010e012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getTileAndPolyByRefUnsafe@dtNavMesh@@QEBAXIPEAPEBUdtMeshTile@@PEAPEBUdtPoly@@@Z DD 060f01H
	DD	03740fH
	DD	02640aH
	DD	015405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?isValidPolyRef@dtNavMesh@@QEBA_NI@Z DD 020501H
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD 021H
	DD	imagerel ??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
	DD	imagerel ??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+124
	DD	imagerel $unwind$??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD 0103721H
	DD	039837H
	DD	048831H
	DD	05782cH
	DD	066827H
	DD	0113422H
	DD	0c812H
	DD	0fc408H
	DD	0106404H
	DD	imagerel ??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
	DD	imagerel ??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+124
	DD	imagerel $unwind$??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD 0b4f01H
	DD	01b84fH
	DD	02a82aH
	DD	012011aH
	DD	0e011f013H
	DD	0700dd00fH
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD 021H
	DD	imagerel ??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
	DD	imagerel ??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+108
	DD	imagerel $unwind$??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD 0e2a21H
	DD	03982aH
	DD	048825H
	DD	057820H
	DD	06681bH
	DD	0e6416H
	DD	0c809H
	DD	0163404H
	DD	imagerel ??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
	DD	imagerel ??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z+108
	DD	imagerel $unwind$??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z DD 0b4e01H
	DD	01b84eH
	DD	02a822H
	DD	0f015e219H
	DD	0d011e013H
	DD	0700dc00fH
	DD	0500cH
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
;	COMDAT ?getType@dtPoly@@QEBAEXZ
_TEXT	SEGMENT
this$ = 8
?getType@dtPoly@@QEBAEXZ PROC				; dtPoly::getType, COMDAT

; 187  : 	inline unsigned char getType() const { return areaAndtype >> 6; }

	movzx	eax, BYTE PTR [rcx+31]
	shr	al, 6
	ret	0
?getType@dtPoly@@QEBAEXZ ENDP				; dtPoly::getType
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
;	COMDAT ?dtGetDetailTriEdgeFlags@@YAHEH@Z
_TEXT	SEGMENT
triFlags$ = 8
edgeIndex$ = 16
?dtGetDetailTriEdgeFlags@@YAHEH@Z PROC			; dtGetDetailTriEdgeFlags, COMDAT

; 320  : 	return (triFlags >> (edgeIndex * 2)) & 0x3;

	movzx	eax, cl
	add	dl, dl
	movzx	ecx, dl
	shr	eax, cl
	and	eax, 3

; 321  : }

	ret	0
?dtGetDetailTriEdgeFlags@@YAHEH@Z ENDP			; dtGetDetailTriEdgeFlags
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
;	COMDAT ?decodePolyId@dtNavMesh@@QEBAXIAEAI00@Z
_TEXT	SEGMENT
this$ = 8
ref$ = 16
salt$ = 24
it$ = 32
ip$ = 40
?decodePolyId@dtNavMesh@@QEBAXIAEAI00@Z PROC		; dtNavMesh::decodePolyId, COMDAT

; 546  : 	{

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi

; 547  : #ifdef DT_POLYREF64
; 548  : 		const dtPolyRef saltMask = ((dtPolyRef)1<<DT_SALT_BITS)-1;
; 549  : 		const dtPolyRef tileMask = ((dtPolyRef)1<<DT_TILE_BITS)-1;
; 550  : 		const dtPolyRef polyMask = ((dtPolyRef)1<<DT_POLY_BITS)-1;
; 551  : 		salt = (unsigned int)((ref >> (DT_POLY_BITS+DT_TILE_BITS)) & saltMask);
; 552  : 		it = (unsigned int)((ref >> DT_POLY_BITS) & tileMask);
; 553  : 		ip = (unsigned int)(ref & polyMask);
; 554  : #else
; 555  : 		const dtPolyRef saltMask = ((dtPolyRef)1<<m_saltBits)-1;
; 556  : 		const dtPolyRef tileMask = ((dtPolyRef)1<<m_tileBits)-1;
; 557  : 		const dtPolyRef polyMask = ((dtPolyRef)1<<m_polyBits)-1;
; 558  : 		salt = (unsigned int)((ref >> (m_polyBits+m_tileBits)) & saltMask);

	mov	ebx, DWORD PTR [rcx+96]
	mov	esi, edx
	mov	r11d, DWORD PTR [rcx+92]
	mov	rax, rcx
	mov	r10d, edx
	mov	edi, 1
	mov	edx, edi
	lea	ecx, DWORD PTR [r11+rbx]
	shr	r10d, cl
	mov	ecx, DWORD PTR [rax+88]
	mov	eax, edi
	shl	eax, cl
	mov	ecx, r11d
	dec	eax
	shl	edx, cl
	and	r10d, eax

; 559  : 		it = (unsigned int)((ref >> m_polyBits) & tileMask);

	mov	ecx, ebx

; 560  : 		ip = (unsigned int)(ref & polyMask);
; 561  : #endif
; 562  : 	}

	mov	rbx, QWORD PTR [rsp+8]
	mov	eax, esi
	shl	edi, cl
	dec	edx
	shr	eax, cl
	dec	edi
	and	edi, esi
	mov	DWORD PTR [r8], r10d
	mov	rsi, QWORD PTR [rsp+16]
	and	edx, eax
	mov	rax, QWORD PTR ip$[rsp]
	mov	DWORD PTR [r9], edx
	mov	DWORD PTR [rax], edi
	mov	rdi, QWORD PTR [rsp+24]
	ret	0
?decodePolyId@dtNavMesh@@QEBAXIAEAI00@Z ENDP		; dtNavMesh::decodePolyId
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
;	COMDAT ?dtVlerp@@YAXPEAMPEBM1M@Z
_TEXT	SEGMENT
dest$ = 8
v1$ = 16
v2$ = 24
t$ = 32
?dtVlerp@@YAXPEAMPEBM1M@Z PROC				; dtVlerp, COMDAT

; 119  : 	dest[0] = v1[0]+(v2[0]-v1[0])*t;

	movss	xmm1, DWORD PTR [r8]
	subss	xmm1, DWORD PTR [rdx]
	mulss	xmm1, xmm3
	addss	xmm1, DWORD PTR [rdx]
	movss	DWORD PTR [rcx], xmm1

; 120  : 	dest[1] = v1[1]+(v2[1]-v1[1])*t;

	movss	xmm0, DWORD PTR [r8+4]
	subss	xmm0, DWORD PTR [rdx+4]
	mulss	xmm0, xmm3
	addss	xmm0, DWORD PTR [rdx+4]
	movss	DWORD PTR [rcx+4], xmm0

; 121  : 	dest[2] = v1[2]+(v2[2]-v1[2])*t;

	movss	xmm2, DWORD PTR [r8+8]
	subss	xmm2, DWORD PTR [rdx+8]
	mulss	xmm2, xmm3
	addss	xmm2, DWORD PTR [rdx+8]
	movss	DWORD PTR [rcx+8], xmm2

; 122  : }

	ret	0
?dtVlerp@@YAXPEAMPEBM1M@Z ENDP				; dtVlerp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
;	COMDAT ?dtVlenSqr@@YAMPEBM@Z
_TEXT	SEGMENT
v$ = 8
?dtVlenSqr@@YAMPEBM@Z PROC				; dtVlenSqr, COMDAT

; 210  : 	return v[0]*v[0] + v[1]*v[1] + v[2]*v[2];

	movss	xmm1, DWORD PTR [rcx+4]
	movss	xmm0, DWORD PTR [rcx]
	movss	xmm2, DWORD PTR [rcx+8]
	mulss	xmm0, xmm0
	mulss	xmm1, xmm1
	mulss	xmm2, xmm2
	addss	xmm0, xmm1
	addss	xmm0, xmm2

; 211  : }

	ret	0
?dtVlenSqr@@YAMPEBM@Z ENDP				; dtVlenSqr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
;	COMDAT ?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
_TEXT	SEGMENT
height$GSCopy$1$ = 32
pos$GSCopy$1$ = 40
closest$ = 40
verts$ = 64
__$ArrayPad$ = 144
this$dead$ = 384
tile$ = 392
poly$ = 400
pos$ = 408
height$ = 416
?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z PROC ; dtNavMesh::getPolyHeight, COMDAT

; 678  : {

$LN100:
	mov	QWORD PTR [rsp+8], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 320				; 00000140H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rax, QWORD PTR height$[rsp]
	mov	r13, r9
	mov	QWORD PTR height$GSCopy$1$[rsp], rax
	mov	rsi, r8

; 679  : 	// Off-mesh connections do not have detail polys and getting height
; 680  : 	// over them does not make sense.
; 681  : 	if (poly->getType() == DT_POLYTYPE_OFFMESH_CONNECTION)

	movzx	eax, BYTE PTR [r8+31]
	mov	rbx, rdx
	and	al, 192					; 000000c0H
	mov	QWORD PTR pos$GSCopy$1$[rsp], r9
	cmp	al, 64					; 00000040H
	je	$LN70@getPolyHei

; 682  : 		return false;
; 683  : 
; 684  : 	const unsigned int ip = (unsigned int)(poly - tile->polys);
; 685  : 	const dtPolyDetail* pd = &tile->detailMeshes[ip];
; 686  : 	
; 687  : 	float verts[DT_VERTS_PER_POLYGON*3];	
; 688  : 	const int nv = poly->vertCount;

	movzx	edi, BYTE PTR [r8+30]

; 689  : 	for (int i = 0; i < nv; ++i)

	xor	ebp, ebp
	mov	r12, QWORD PTR [rdx+40]
	mov	rax, r8
	sub	rax, QWORD PTR [rdx+16]
	mov	r9d, edi
	sar	rax, 5
	mov	r14d, ebp
	mov	eax, eax
	lea	r15, QWORD PTR [rax+rax*2]
	cmp	rdi, 4
	jb	$LC52@getPolyHei

; 690  : 		dtVcopy(&verts[i*3], &tile->verts[poly->verts[i]*3]);

	mov	rdx, QWORD PTR [rdx+24]
	lea	r11, QWORD PTR [rdi-4]
	shr	r11, 2
	lea	r10, QWORD PTR [r8+6]
	inc	r11
	lea	r8, QWORD PTR verts$[rsp+8]
	lea	r14, QWORD PTR [r11*4]
	npad	1
$LL53@getPolyHei:
	movzx	eax, WORD PTR [r10-2]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 194  : 	dest[2] = a[2];

	lea	r8, QWORD PTR [r8+48]
	lea	r10, QWORD PTR [r10+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 690  : 		dtVcopy(&verts[i*3], &tile->verts[poly->verts[i]*3]);

	lea	rcx, QWORD PTR [rax+rax*2]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 192  : 	dest[0] = a[0];

	mov	eax, DWORD PTR [rdx+rcx*4]
	mov	DWORD PTR [r8-56], eax

; 193  : 	dest[1] = a[1];

	mov	eax, DWORD PTR [rdx+rcx*4+4]
	mov	DWORD PTR [r8-52], eax

; 194  : 	dest[2] = a[2];

	mov	eax, DWORD PTR [rdx+rcx*4+8]
	mov	DWORD PTR [r8-48], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 690  : 		dtVcopy(&verts[i*3], &tile->verts[poly->verts[i]*3]);

	movzx	eax, WORD PTR [r10-8]
	lea	rcx, QWORD PTR [rax+rax*2]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 192  : 	dest[0] = a[0];

	mov	eax, DWORD PTR [rdx+rcx*4]
	mov	DWORD PTR [r8-44], eax

; 193  : 	dest[1] = a[1];

	mov	eax, DWORD PTR [rdx+rcx*4+4]
	mov	DWORD PTR [r8-40], eax

; 194  : 	dest[2] = a[2];

	mov	eax, DWORD PTR [rdx+rcx*4+8]
	mov	DWORD PTR [r8-36], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 690  : 		dtVcopy(&verts[i*3], &tile->verts[poly->verts[i]*3]);

	movzx	eax, WORD PTR [r10-6]
	lea	rcx, QWORD PTR [rax+rax*2]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 192  : 	dest[0] = a[0];

	mov	eax, DWORD PTR [rdx+rcx*4]
	mov	DWORD PTR [r8-32], eax

; 193  : 	dest[1] = a[1];

	mov	eax, DWORD PTR [rdx+rcx*4+4]
	mov	DWORD PTR [r8-28], eax

; 194  : 	dest[2] = a[2];

	mov	eax, DWORD PTR [rdx+rcx*4+8]
	mov	DWORD PTR [r8-24], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 690  : 		dtVcopy(&verts[i*3], &tile->verts[poly->verts[i]*3]);

	movzx	eax, WORD PTR [r10-4]
	lea	rcx, QWORD PTR [rax+rax*2]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 192  : 	dest[0] = a[0];

	mov	eax, DWORD PTR [rdx+rcx*4]
	mov	DWORD PTR [r8-20], eax

; 193  : 	dest[1] = a[1];

	mov	eax, DWORD PTR [rdx+rcx*4+4]
	mov	DWORD PTR [r8-16], eax

; 194  : 	dest[2] = a[2];

	mov	eax, DWORD PTR [rdx+rcx*4+8]
	mov	DWORD PTR [r8-12], eax
	sub	r11, 1
	jne	$LL53@getPolyHei
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 689  : 	for (int i = 0; i < nv; ++i)

	cmp	r14, r9
	jl	SHORT $LN65@getPolyHei
	jmp	SHORT $LN51@getPolyHei
$LC52@getPolyHei:
	test	edi, edi
	je	SHORT $LN51@getPolyHei

; 690  : 		dtVcopy(&verts[i*3], &tile->verts[poly->verts[i]*3]);

	mov	rdx, QWORD PTR [rdx+24]
$LN65@getPolyHei:
	lea	rax, QWORD PTR [r14+r14*2]
	sub	r9, r14
	lea	r8, QWORD PTR verts$[rsp+8]
	lea	r10, QWORD PTR [rsi+4]
	lea	r8, QWORD PTR [r8+rax*4]
	lea	r10, QWORD PTR [r10+r14*2]
$LC61@getPolyHei:
	movzx	eax, WORD PTR [r10]
	lea	r8, QWORD PTR [r8+12]
	lea	r10, QWORD PTR [r10+2]
	lea	rcx, QWORD PTR [rax+rax*2]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 192  : 	dest[0] = a[0];

	mov	eax, DWORD PTR [rdx+rcx*4]
	mov	DWORD PTR [r8-20], eax

; 193  : 	dest[1] = a[1];

	mov	eax, DWORD PTR [rdx+rcx*4+4]
	mov	DWORD PTR [r8-16], eax

; 194  : 	dest[2] = a[2];

	mov	eax, DWORD PTR [rdx+rcx*4+8]
	mov	DWORD PTR [r8-12], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 689  : 	for (int i = 0; i < nv; ++i)

	sub	r9, 1
	jne	SHORT $LC61@getPolyHei
$LN51@getPolyHei:

; 691  : 	
; 692  : 	if (!dtPointInPolygon(pos, verts, nv))

	mov	r8d, edi
	lea	rdx, QWORD PTR verts$[rsp]
	mov	rcx, r13
	call	?dtPointInPolygon@@YA_NPEBM0H@Z		; dtPointInPolygon
	test	al, al
	je	$LN70@getPolyHei

; 694  : 
; 695  : 	if (!height)

	cmp	QWORD PTR height$GSCopy$1$[rsp], rbp
	je	$LN98@getPolyHei

; 699  : 	for (int j = 0; j < pd->triCount; ++j)

	movzx	r11d, BYTE PTR [r12+r15*4+9]
	movaps	XMMWORD PTR [rsp+304], xmm6
	movaps	XMMWORD PTR [rsp+288], xmm7
	movaps	XMMWORD PTR [rsp+272], xmm8
	movaps	XMMWORD PTR [rsp+256], xmm9
	movaps	XMMWORD PTR [rsp+240], xmm10
	movaps	XMMWORD PTR [rsp+224], xmm11
	movaps	XMMWORD PTR [rsp+208], xmm12
	movaps	XMMWORD PTR [rsp+192], xmm13
	movaps	XMMWORD PTR [rsp+176], xmm14
	movaps	XMMWORD PTR [rsp+160], xmm15
	test	r11d, r11d
	je	$LN6@getPolyHei
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 141  : 	dest[0] = v1[0]-v2[0];

	mov	rax, QWORD PTR pos$GSCopy$1$[rsp]
	xorps	xmm10, xmm10
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 701  : 		const unsigned char* t = &tile->detailTris[(pd->triBase+j)*4];

	mov	r14d, DWORD PTR [r12+r15*4+4]
	mov	r13, QWORD PTR [rbx+56]

; 702  : 		const float* v[3];
; 703  : 		for (int k = 0; k < 3; ++k)
; 704  : 		{
; 705  : 			if (t[k] < poly->vertCount)

	movss	xmm12, DWORD PTR __xmm@80000000800000008000000080000000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 141  : 	dest[0] = v1[0]-v2[0];

	movss	xmm14, DWORD PTR [rax]

; 143  : 	dest[2] = v1[2]-v2[2];

	movss	xmm15, DWORD PTR [rax+8]
	npad	10
$LL7@getPolyHei:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 701  : 		const unsigned char* t = &tile->detailTris[(pd->triBase+j)*4];

	lea	eax, DWORD PTR [r14+rbp]
	shl	eax, 2
	mov	r8d, eax

; 702  : 		const float* v[3];
; 703  : 		for (int k = 0; k < 3; ++k)
; 704  : 		{
; 705  : 			if (t[k] < poly->vertCount)

	movzx	eax, BYTE PTR [rax+r13]
	cmp	al, dil
	jae	SHORT $LN14@getPolyHei

; 706  : 				v[k] = &tile->verts[poly->verts[t[k]]*3];

	movzx	ecx, WORD PTR [rsi+rax*2+4]
	mov	rax, QWORD PTR [rbx+24]
	lea	rdx, QWORD PTR [rcx+rcx*2]
	lea	r10, QWORD PTR [rax+rdx*4]
	jmp	SHORT $LN8@getPolyHei
$LN14@getPolyHei:

; 707  : 			else
; 708  : 				v[k] = &tile->detailVerts[(pd->vertBase+(t[k]-poly->vertCount))*3];

	sub	eax, edi
	add	eax, DWORD PTR [r12+r15*4]
	lea	ecx, DWORD PTR [rax+rax*2]
	mov	rax, QWORD PTR [rbx+48]
	lea	r10, QWORD PTR [rax+rcx*4]
$LN8@getPolyHei:

; 702  : 		const float* v[3];
; 703  : 		for (int k = 0; k < 3; ++k)
; 704  : 		{
; 705  : 			if (t[k] < poly->vertCount)

	movzx	eax, BYTE PTR [r8+r13+1]
	cmp	al, dil
	jae	SHORT $LN43@getPolyHei

; 706  : 				v[k] = &tile->verts[poly->verts[t[k]]*3];

	movzx	ecx, WORD PTR [rsi+rax*2+4]
	mov	rax, QWORD PTR [rbx+24]
	lea	rdx, QWORD PTR [rcx+rcx*2]
	lea	r9, QWORD PTR [rax+rdx*4]
	jmp	SHORT $LN44@getPolyHei
$LN43@getPolyHei:

; 707  : 			else
; 708  : 				v[k] = &tile->detailVerts[(pd->vertBase+(t[k]-poly->vertCount))*3];

	sub	eax, edi
	add	eax, DWORD PTR [r12+r15*4]
	lea	ecx, DWORD PTR [rax+rax*2]
	mov	rax, QWORD PTR [rbx+48]
	lea	r9, QWORD PTR [rax+rcx*4]
$LN44@getPolyHei:

; 702  : 		const float* v[3];
; 703  : 		for (int k = 0; k < 3; ++k)
; 704  : 		{
; 705  : 			if (t[k] < poly->vertCount)

	movzx	eax, BYTE PTR [r8+r13+2]
	cmp	al, dil
	jae	SHORT $LN46@getPolyHei

; 706  : 				v[k] = &tile->verts[poly->verts[t[k]]*3];

	movzx	ecx, WORD PTR [rsi+rax*2+4]
	mov	rax, QWORD PTR [rbx+24]
	lea	rdx, QWORD PTR [rcx+rcx*2]
	lea	rcx, QWORD PTR [rax+rdx*4]
	jmp	SHORT $LN47@getPolyHei
$LN46@getPolyHei:

; 707  : 			else
; 708  : 				v[k] = &tile->detailVerts[(pd->vertBase+(t[k]-poly->vertCount))*3];

	sub	eax, edi
	add	eax, DWORD PTR [r12+r15*4]
	lea	ecx, DWORD PTR [rax+rax*2]
	mov	rax, QWORD PTR [rbx+48]
	lea	rcx, QWORD PTR [rax+rcx*4]
$LN47@getPolyHei:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 141  : 	dest[0] = v1[0]-v2[0];

	movss	xmm1, DWORD PTR [r10]

; 143  : 	dest[2] = v1[2]-v2[2];

	movaps	xmm2, xmm15
	movss	xmm0, DWORD PTR [r10+8]

; 141  : 	dest[0] = v1[0]-v2[0];

	movaps	xmm6, xmm14
	movss	xmm7, DWORD PTR [r9]

; 143  : 	dest[2] = v1[2]-v2[2];

	subss	xmm2, xmm0
	movss	xmm3, DWORD PTR [r9+8]
	subss	xmm7, xmm1

; 142  : 	dest[1] = v1[1]-v2[1];

	movss	xmm13, DWORD PTR [r10+4]

; 143  : 	dest[2] = v1[2]-v2[2];

	subss	xmm3, xmm0

; 141  : 	dest[0] = v1[0]-v2[0];

	movss	xmm8, DWORD PTR [rcx]
	subss	xmm6, xmm1

; 143  : 	dest[2] = v1[2]-v2[2];

	movss	xmm9, DWORD PTR [rcx+8]
	subss	xmm8, xmm1
	movss	xmm11, DWORD PTR [rcx+4]
	subss	xmm9, xmm0

; 142  : 	dest[1] = v1[1]-v2[1];

	movss	xmm5, DWORD PTR [r9+4]
	subss	xmm11, xmm13

; 143  : 	dest[2] = v1[2]-v2[2];

	movaps	xmm4, xmm3

; 142  : 	dest[1] = v1[1]-v2[1];

	subss	xmm5, xmm13
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp

; 214  : 	float denom = v0[0] * v1[2] - v0[2] * v1[0];

	movaps	xmm0, xmm7
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 143  : 	dest[2] = v1[2]-v2[2];

	mulss	xmm4, xmm8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp

; 214  : 	float denom = v0[0] * v1[2] - v0[2] * v1[0];

	mulss	xmm0, xmm9
	subss	xmm4, xmm0

; 215  : 	if (fabsf(denom) < EPS)

	movss	xmm0, DWORD PTR __real@358637bd
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h

; 680  :             return (float)fabs(_X);

	movaps	xmm1, xmm4
	andps	xmm1, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp

; 215  : 	if (fabsf(denom) < EPS)

	comiss	xmm0, xmm1
	ja	SHORT $LN25@getPolyHei

; 216  : 		return false;
; 217  : 
; 218  : 	float u = v1[2] * v2[0] - v1[0] * v2[2];
; 219  : 	float v = v0[0] * v2[2] - v0[2] * v2[0];
; 220  : 
; 221  : 	if (denom < 0) {

	comiss	xmm10, xmm4
	mulss	xmm7, xmm2
	mulss	xmm3, xmm6
	mulss	xmm2, xmm8
	mulss	xmm6, xmm9
	subss	xmm3, xmm7
	subss	xmm2, xmm6
	jbe	SHORT $LN24@getPolyHei

; 222  : 		denom = -denom;

	xorps	xmm4, xmm12

; 223  : 		u = -u;

	xorps	xmm3, xmm12

; 224  : 		v = -v;

	xorps	xmm2, xmm12
$LN24@getPolyHei:

; 225  : 	}
; 226  : 
; 227  : 	// If point lies inside the triangle, return interpolated ycoord.
; 228  : 	if (u >= 0.0f && v >= 0.0f && (u + v) <= denom) {

	comiss	xmm3, xmm10
	jb	SHORT $LN25@getPolyHei
	comiss	xmm2, xmm10
	jb	SHORT $LN25@getPolyHei
	movaps	xmm0, xmm2
	addss	xmm0, xmm3
	comiss	xmm4, xmm0
	jae	$LN68@getPolyHei
$LN25@getPolyHei:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 699  : 	for (int j = 0; j < pd->triCount; ++j)

	inc	ebp
	cmp	ebp, r11d
	jl	$LL7@getPolyHei
	mov	r13, QWORD PTR pos$GSCopy$1$[rsp]
$LN6@getPolyHei:

; 715  : 		}
; 716  : 	}
; 717  : 
; 718  : 	// If all triangle checks failed above (can happen with degenerate triangles
; 719  : 	// or larger floating point values) the point is on an edge, so just select
; 720  : 	// closest. This should almost never happen so the extra iteration here is
; 721  : 	// ok.
; 722  : 	float closest[3];
; 723  : 	closestPointOnDetailEdges<false>(tile, poly, pos, closest);

	lea	r9, QWORD PTR closest$[rsp]
	mov	r8, r13
	mov	rdx, rsi
	mov	rcx, rbx
	call	??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z ; `anonymous namespace'::closestPointOnDetailEdges<0>

; 724  : 	*height = closest[1];

	mov	rax, QWORD PTR height$GSCopy$1$[rsp]
	movss	xmm0, DWORD PTR closest$[rsp+4]
	movss	DWORD PTR [rax], xmm0
$LN97@getPolyHei:
	movaps	xmm14, XMMWORD PTR [rsp+176]
	movaps	xmm13, XMMWORD PTR [rsp+192]
	movaps	xmm12, XMMWORD PTR [rsp+208]
	movaps	xmm11, XMMWORD PTR [rsp+224]
	movaps	xmm10, XMMWORD PTR [rsp+240]
	movaps	xmm9, XMMWORD PTR [rsp+256]
	movaps	xmm8, XMMWORD PTR [rsp+272]
	movaps	xmm7, XMMWORD PTR [rsp+288]
	movaps	xmm6, XMMWORD PTR [rsp+304]
	movaps	xmm15, XMMWORD PTR [rsp+160]
$LN98@getPolyHei:

; 725  : 	return true;
; 726  : }

	mov	al, 1
$LN1@getPolyHei:
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+384]
	add	rsp, 320				; 00000140H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN68@getPolyHei:

; 713  : 			*height = h;

	mov	rax, QWORD PTR height$GSCopy$1$[rsp]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp

; 229  : 		h = a[1] + (v0[1] * u + v1[1] * v) / denom;

	mulss	xmm5, xmm2
	mulss	xmm11, xmm3
	addss	xmm5, xmm11
	divss	xmm5, xmm4
	addss	xmm5, xmm13
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 713  : 			*height = h;

	movss	DWORD PTR [rax], xmm5

; 714  : 			return true;

	jmp	$LN97@getPolyHei
$LN70@getPolyHei:

; 693  : 		return false;

	xor	al, al
	jmp	SHORT $LN1@getPolyHei
?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z ENDP ; dtNavMesh::getPolyHeight
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
;	COMDAT ?closestPointOnPoly@dtNavMesh@@AEBAXIPEBMPEAMPEA_N@Z
_TEXT	SEGMENT
this$ = 80
t$1 = 88
ref$ = 88
pos$ = 96
closest$ = 104
posOverPoly$ = 112
?closestPointOnPoly@dtNavMesh@@AEBAXIPEBMPEAMPEA_N@Z PROC ; dtNavMesh::closestPointOnPoly, COMDAT

; 729  : {

$LN22:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 559  : 		it = (unsigned int)((ref >> m_polyBits) & tileMask);

	mov	ebx, DWORD PTR [rcx+96]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 729  : {

	mov	r11, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 556  : 		const dtPolyRef tileMask = ((dtPolyRef)1<<m_tileBits)-1;

	mov	ecx, DWORD PTR [rcx+92]
	mov	edi, 1
	mov	r10d, edi

; 559  : 		it = (unsigned int)((ref >> m_polyBits) & tileMask);

	mov	eax, edx
	shl	r10d, cl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 729  : {

	mov	r14, r9
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 559  : 		it = (unsigned int)((ref >> m_polyBits) & tileMask);

	movzx	ecx, bl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 729  : {

	mov	esi, edx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 559  : 		it = (unsigned int)((ref >> m_polyBits) & tileMask);

	shr	rax, cl
	dec	r10d
	mov	ecx, ebx
	and	r10, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 192  : 	dest[0] = a[0];

	mov	eax, DWORD PTR [r8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 729  : {

	mov	r15, r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 557  : 		const dtPolyRef polyMask = ((dtPolyRef)1<<m_polyBits)-1;

	shl	edi, cl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 1219 : 	*tile = &m_tiles[it];

	imul	rbp, r10, 104				; 00000068H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 557  : 		const dtPolyRef polyMask = ((dtPolyRef)1<<m_polyBits)-1;

	lea	ebx, DWORD PTR [rdi-1]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 1219 : 	*tile = &m_tiles[it];

	add	rbp, QWORD PTR [r11+80]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 193  : 	dest[1] = a[1];

	lea	rdi, QWORD PTR [r9+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 560  : 		ip = (unsigned int)(ref & polyMask);

	and	rbx, rsi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 735  : 	if (getPolyHeight(tile, poly, pos, &closest[1]))

	mov	QWORD PTR [rsp+32], rdi

; 1220 : 	*poly = &m_tiles[it].polys[ip];

	shl	rbx, 5

; 735  : 	if (getPolyHeight(tile, poly, pos, &closest[1]))

	mov	rdx, rbp

; 1220 : 	*poly = &m_tiles[it].polys[ip];

	add	rbx, QWORD PTR [rbp+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 192  : 	dest[0] = a[0];

	mov	DWORD PTR [r9], eax

; 193  : 	dest[1] = a[1];

	mov	eax, DWORD PTR [r8+4]
	mov	DWORD PTR [rdi], eax

; 194  : 	dest[2] = a[2];

	mov	eax, DWORD PTR [r8+8]
	mov	DWORD PTR [r9+8], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 735  : 	if (getPolyHeight(tile, poly, pos, &closest[1]))

	mov	r9, r8
	mov	r8, rbx
	call	?getPolyHeight@dtNavMesh@@AEBA_NPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z ; dtNavMesh::getPolyHeight
	test	al, al
	mov	rax, QWORD PTR posOverPoly$[rsp]
	je	SHORT $LN2@closestPoi

; 736  : 	{
; 737  : 		if (posOverPoly)

	test	rax, rax
	je	$LN1@closestPoi

; 738  : 			*posOverPoly = true;

	mov	BYTE PTR [rax], 1

; 739  : 		return;

	jmp	$LN1@closestPoi
$LN2@closestPoi:

; 740  : 	}
; 741  : 
; 742  : 	if (posOverPoly)

	test	rax, rax
	je	SHORT $LN4@closestPoi

; 743  : 		*posOverPoly = false;

	mov	BYTE PTR [rax], 0
$LN4@closestPoi:

; 744  : 
; 745  : 	// Off-mesh connections don't have detail polygons.
; 746  : 	if (poly->getType() == DT_POLYTYPE_OFFMESH_CONNECTION)

	movzx	eax, BYTE PTR [rbx+31]
	and	al, 192					; 000000c0H
	cmp	al, 64					; 00000040H
	jne	$LN5@closestPoi

; 747  : 	{
; 748  : 		const float* v0 = &tile->verts[poly->verts[0]*3];

	mov	rdx, QWORD PTR [rbp+24]

; 749  : 		const float* v1 = &tile->verts[poly->verts[1]*3];
; 750  : 		float t;
; 751  : 		dtDistancePtSegSqr2D(pos, v0, v1, t);

	lea	r9, QWORD PTR t$1[rsp]
	movzx	eax, WORD PTR [rbx+4]
	lea	rcx, QWORD PTR [rax+rax*2]
	movzx	eax, WORD PTR [rbx+6]
	lea	r10, QWORD PTR [rdx+rcx*4]
	lea	rcx, QWORD PTR [rax+rax*2]
	lea	r8, QWORD PTR [rdx+rcx*4]
	mov	rdx, r10
	mov	rcx, r15
	call	?dtDistancePtSegSqr2D@@YAMPEBM00AEAM@Z	; dtDistancePtSegSqr2D
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 119  : 	dest[0] = v1[0]+(v2[0]-v1[0])*t;

	movss	xmm1, DWORD PTR [r8]
	subss	xmm1, DWORD PTR [r10]
	movss	xmm3, DWORD PTR t$1[rsp]
	mulss	xmm1, xmm3
	addss	xmm1, DWORD PTR [r10]
	movss	DWORD PTR [r14], xmm1

; 120  : 	dest[1] = v1[1]+(v2[1]-v1[1])*t;

	movss	xmm1, DWORD PTR [r8+4]
	subss	xmm1, DWORD PTR [r10+4]
	mulss	xmm1, xmm3
	addss	xmm1, DWORD PTR [r10+4]
	movss	DWORD PTR [rdi], xmm1

; 121  : 	dest[2] = v1[2]+(v2[2]-v1[2])*t;

	movss	xmm0, DWORD PTR [r8+8]
	subss	xmm0, DWORD PTR [r10+8]
	mulss	xmm0, xmm3
	addss	xmm0, DWORD PTR [r10+8]
	movss	DWORD PTR [r14+8], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 753  : 		return;

	jmp	SHORT $LN1@closestPoi
$LN5@closestPoi:

; 754  : 	}
; 755  : 
; 756  : 	// Outside poly that is not an offmesh connection.
; 757  : 	closestPointOnDetailEdges<true>(tile, poly, pos, closest);

	mov	r9, r14
	mov	r8, r15
	mov	rdx, rbx
	mov	rcx, rbp
	call	??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z ; `anonymous namespace'::closestPointOnDetailEdges<1>
$LN1@closestPoi:

; 758  : }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+104]
	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	rdi
	ret	0
?closestPointOnPoly@dtNavMesh@@AEBAXIPEBMPEAMPEA_N@Z ENDP ; dtNavMesh::closestPointOnPoly
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
;	COMDAT ?getTileAndPolyByRefUnsafe@dtNavMesh@@QEBAXIPEAPEBUdtMeshTile@@PEAPEBUdtPoly@@@Z
_TEXT	SEGMENT
this$ = 8
ref$ = 16
tile$ = 24
poly$ = 32
?getTileAndPolyByRefUnsafe@dtNavMesh@@QEBAXIPEAPEBUdtMeshTile@@PEAPEBUdtPoly@@@Z PROC ; dtNavMesh::getTileAndPolyByRefUnsafe, COMDAT

; 1216 : {

$LN6:
	mov	QWORD PTR [rsp+8], rbp
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	mov	r11, rcx
	mov	ebp, edx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 556  : 		const dtPolyRef tileMask = ((dtPolyRef)1<<m_tileBits)-1;

	mov	ecx, DWORD PTR [rcx+92]
	mov	esi, 1
	mov	r10d, esi

; 559  : 		it = (unsigned int)((ref >> m_polyBits) & tileMask);

	mov	eax, edx
	shl	r10d, cl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 1216 : {

	mov	rdi, r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 559  : 		it = (unsigned int)((ref >> m_polyBits) & tileMask);

	movzx	ecx, BYTE PTR [r11+96]
	dec	r10d
	shr	rax, cl
	mov	ecx, DWORD PTR [r11+96]
	and	r10, rax
	shl	esi, cl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 1219 : 	*tile = &m_tiles[it];

	imul	r8, r10, 104				; 00000068H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 557  : 		const dtPolyRef polyMask = ((dtPolyRef)1<<m_polyBits)-1;

	lea	ecx, DWORD PTR [rsi-1]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 1221 : }

	mov	rsi, QWORD PTR [rsp+16]
	add	r8, QWORD PTR [r11+80]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 560  : 		ip = (unsigned int)(ref & polyMask);

	and	rcx, rbp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 1221 : }

	mov	rbp, QWORD PTR [rsp+8]
	shl	rcx, 5
	mov	QWORD PTR [rdi], r8
	add	rcx, QWORD PTR [r8+16]
	mov	rdi, QWORD PTR [rsp+24]
	mov	QWORD PTR [r9], rcx
	ret	0
?getTileAndPolyByRefUnsafe@dtNavMesh@@QEBAXIPEAPEBUdtMeshTile@@PEAPEBUdtPoly@@@Z ENDP ; dtNavMesh::getTileAndPolyByRefUnsafe
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
;	COMDAT ?isValidPolyRef@dtNavMesh@@QEBA_NI@Z
_TEXT	SEGMENT
this$ = 8
ref$ = 16
?isValidPolyRef@dtNavMesh@@QEBA_NI@Z PROC		; dtNavMesh::isValidPolyRef, COMDAT

; 1224 : {

$LN19:
	mov	QWORD PTR [rsp+8], rbx
	mov	r10d, edx
	mov	r11, rcx

; 1225 : 	if (!ref) return false;

	test	edx, edx
	je	SHORT $LN5@isValidPol
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 559  : 		it = (unsigned int)((ref >> m_polyBits) & tileMask);

	mov	ebx, DWORD PTR [rcx+96]
	mov	r8d, 1
	mov	edx, DWORD PTR [rcx+92]
	mov	r9d, r8d
	mov	ecx, edx
	mov	eax, r10d
	shl	r9d, cl
	mov	ecx, ebx
	shr	eax, cl
	dec	r9d
	and	r9d, eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 1228 : 	if (it >= (unsigned int)m_maxTiles) return false;

	cmp	r9d, DWORD PTR [r11+48]
	jae	SHORT $LN5@isValidPol
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 558  : 		salt = (unsigned int)((ref >> (m_polyBits+m_tileBits)) & saltMask);

	lea	ecx, DWORD PTR [rdx+rbx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 1229 : 	if (m_tiles[it].salt != salt || m_tiles[it].header == 0) return false;

	mov	eax, r9d
	imul	r9, rax, 104				; 00000068H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 558  : 		salt = (unsigned int)((ref >> (m_polyBits+m_tileBits)) & saltMask);

	mov	edx, r10d
	mov	eax, r8d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 1229 : 	if (m_tiles[it].salt != salt || m_tiles[it].header == 0) return false;

	add	r9, QWORD PTR [r11+80]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 558  : 		salt = (unsigned int)((ref >> (m_polyBits+m_tileBits)) & saltMask);

	shr	edx, cl
	mov	ecx, DWORD PTR [r11+88]
	shl	eax, cl
	dec	eax
	and	edx, eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 1229 : 	if (m_tiles[it].salt != salt || m_tiles[it].header == 0) return false;

	cmp	DWORD PTR [r9], edx
	jne	SHORT $LN5@isValidPol
	mov	rax, QWORD PTR [r9+8]
	test	rax, rax
	je	SHORT $LN5@isValidPol
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 557  : 		const dtPolyRef polyMask = ((dtPolyRef)1<<m_polyBits)-1;

	mov	ecx, ebx
	shl	r8d, cl
	dec	r8d

; 560  : 		ip = (unsigned int)(ref & polyMask);

	and	r8d, r10d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 1230 : 	if (ip >= (unsigned int)m_tiles[it].header->polyCount) return false;

	cmp	r8d, DWORD PTR [rax+24]
	jae	SHORT $LN5@isValidPol

; 1231 : 	return true;

	mov	al, 1

; 1232 : }

	mov	rbx, QWORD PTR [rsp+8]
	ret	0
$LN5@isValidPol:
	mov	rbx, QWORD PTR [rsp+8]
	xor	al, al
	ret	0
?isValidPolyRef@dtNavMesh@@QEBA_NI@Z ENDP		; dtNavMesh::isValidPolyRef
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
;	COMDAT ??$dtAbs@M@@YAMM@Z
_TEXT	SEGMENT
a$ = 8
??$dtAbs@M@@YAMM@Z PROC					; dtAbs<float>, COMDAT

; 62   : template<class T> inline T dtAbs(T a) { return a < 0 ? -a : a; }

	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
	ret	0
??$dtAbs@M@@YAMM@Z ENDP					; dtAbs<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
;	COMDAT ??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
_TEXT	SEGMENT
$T1 = 192
tile$ = 192
tv2249 = 200
poly$ = 200
pos$ = 208
closest$ = 216
??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z PROC ; `anonymous namespace'::closestPointOnDetailEdges<0>, COMDAT

; 623  : 	{

	mov	r11, rsp
	mov	QWORD PTR [r11+32], r9
	mov	QWORD PTR [r11+24], r8
	push	rbp
	push	rdi
	push	r13
	push	r14
	push	r15
	sub	rsp, 144				; 00000090H

; 624  : 		const unsigned int ip = (unsigned int)(poly - tile->polys);
; 625  : 		const dtPolyDetail* pd = &tile->detailMeshes[ip];

	mov	r10, QWORD PTR [rcx+40]

; 626  : 
; 627  : 		float dmin = FLT_MAX;
; 628  : 		float tmin = 0;
; 629  : 		const float* pmin = 0;

	xor	r14d, r14d
	mov	rax, rdx
	movaps	XMMWORD PTR [rsp+32], xmm10
	sub	rax, QWORD PTR [rcx+16]
	mov	r13, rdx
	movss	xmm10, DWORD PTR __real@7f7fffff
	mov	rdi, rcx
	sar	rax, 5
	xorps	xmm5, xmm5
	mov	eax, eax

; 630  : 		const float* pmax = 0;

	mov	r15d, r14d
	movaps	XMMWORD PTR [rsp+16], xmm11
	mov	ebp, r14d
	xorps	xmm11, xmm11
	lea	rdx, QWORD PTR [rax+rax*2]

; 631  : 
; 632  : 		for (int i = 0; i < pd->triCount; i++)

	movzx	eax, BYTE PTR [r10+rdx*4+9]
	mov	QWORD PTR tv2249[rsp], rdx
	mov	DWORD PTR $T1[rsp], eax
	test	eax, eax
	je	$LN3@closestPoi

; 633  : 		{
; 634  : 			const unsigned char* tris = &tile->detailTris[(pd->triBase + i) * 4];

	mov	eax, DWORD PTR [r10+rdx*4+4]
	mov	QWORD PTR [r11-56], rsi
	mov	QWORD PTR [r11-64], r12

; 635  : 			const int ANY_BOUNDARY_EDGE =
; 636  : 				(DT_DETAIL_EDGE_BOUNDARY << 0) |
; 637  : 				(DT_DETAIL_EDGE_BOUNDARY << 2) |
; 638  : 				(DT_DETAIL_EDGE_BOUNDARY << 4);
; 639  : 			if (onlyBoundary && (tris[3] & ANY_BOUNDARY_EDGE) == 0)
; 640  : 				continue;
; 641  : 
; 642  : 			const float* v[3];
; 643  : 			for (int j = 0; j < 3; ++j)
; 644  : 			{
; 645  : 				if (tris[j] < poly->vertCount)

	movzx	r12d, BYTE PTR [r13+30]
	movaps	XMMWORD PTR [rsp], xmm12
	mov	esi, r12d
	movss	xmm12, DWORD PTR __real@3f800000
	mov	QWORD PTR [r11-48], rbx
	movaps	XMMWORD PTR [rsp+96], xmm6
	movaps	XMMWORD PTR [rsp+80], xmm7
	movaps	XMMWORD PTR [r11-120], xmm8
	movaps	XMMWORD PTR [rsp+48], xmm9
	npad	13
$LL4@closestPoi:

; 633  : 		{
; 634  : 			const unsigned char* tris = &tile->detailTris[(pd->triBase + i) * 4];

	lea	r8d, DWORD PTR [rax+rbp]
	shl	r8d, 2
	add	r8, QWORD PTR [rdi+56]

; 635  : 			const int ANY_BOUNDARY_EDGE =
; 636  : 				(DT_DETAIL_EDGE_BOUNDARY << 0) |
; 637  : 				(DT_DETAIL_EDGE_BOUNDARY << 2) |
; 638  : 				(DT_DETAIL_EDGE_BOUNDARY << 4);
; 639  : 			if (onlyBoundary && (tris[3] & ANY_BOUNDARY_EDGE) == 0)
; 640  : 				continue;
; 641  : 
; 642  : 			const float* v[3];
; 643  : 			for (int j = 0; j < 3; ++j)
; 644  : 			{
; 645  : 				if (tris[j] < poly->vertCount)

	movzx	r9d, BYTE PTR [r8]
	cmp	r9b, r12b
	jae	SHORT $LN12@closestPoi

; 646  : 					v[j] = &tile->verts[poly->verts[tris[j]] * 3];

	movzx	ecx, WORD PTR [r13+r9*2+4]
	mov	rax, QWORD PTR [rdi+24]
	lea	rdx, QWORD PTR [rcx+rcx*2]
	lea	rbx, QWORD PTR [rax+rdx*4]
	mov	rdx, QWORD PTR tv2249[rsp]
	jmp	SHORT $LN5@closestPoi
$LN12@closestPoi:

; 647  : 				else
; 648  : 					v[j] = &tile->detailVerts[(pd->vertBase + (tris[j] - poly->vertCount)) * 3];

	mov	eax, r9d
	sub	eax, esi
	add	eax, DWORD PTR [r10+rdx*4]
	lea	ecx, DWORD PTR [rax+rax*2]
	mov	rax, QWORD PTR [rdi+48]
	lea	rbx, QWORD PTR [rax+rcx*4]
$LN5@closestPoi:

; 635  : 			const int ANY_BOUNDARY_EDGE =
; 636  : 				(DT_DETAIL_EDGE_BOUNDARY << 0) |
; 637  : 				(DT_DETAIL_EDGE_BOUNDARY << 2) |
; 638  : 				(DT_DETAIL_EDGE_BOUNDARY << 4);
; 639  : 			if (onlyBoundary && (tris[3] & ANY_BOUNDARY_EDGE) == 0)
; 640  : 				continue;
; 641  : 
; 642  : 			const float* v[3];
; 643  : 			for (int j = 0; j < 3; ++j)
; 644  : 			{
; 645  : 				if (tris[j] < poly->vertCount)

	movzx	r11d, BYTE PTR [r8+1]
	cmp	r11b, r12b
	jae	SHORT $LN35@closestPoi

; 646  : 					v[j] = &tile->verts[poly->verts[tris[j]] * 3];

	movzx	ecx, WORD PTR [r13+r11*2+4]
	mov	rax, QWORD PTR [rdi+24]
	lea	rdx, QWORD PTR [rcx+rcx*2]
	lea	rsi, QWORD PTR [rax+rdx*4]
	mov	rdx, QWORD PTR tv2249[rsp]
	jmp	SHORT $LN36@closestPoi
$LN35@closestPoi:

; 647  : 				else
; 648  : 					v[j] = &tile->detailVerts[(pd->vertBase + (tris[j] - poly->vertCount)) * 3];

	mov	eax, r11d
	sub	eax, esi
	add	eax, DWORD PTR [r10+rdx*4]
	lea	ecx, DWORD PTR [rax+rax*2]
	mov	rax, QWORD PTR [rdi+48]
	lea	rsi, QWORD PTR [rax+rcx*4]
$LN36@closestPoi:

; 635  : 			const int ANY_BOUNDARY_EDGE =
; 636  : 				(DT_DETAIL_EDGE_BOUNDARY << 0) |
; 637  : 				(DT_DETAIL_EDGE_BOUNDARY << 2) |
; 638  : 				(DT_DETAIL_EDGE_BOUNDARY << 4);
; 639  : 			if (onlyBoundary && (tris[3] & ANY_BOUNDARY_EDGE) == 0)
; 640  : 				continue;
; 641  : 
; 642  : 			const float* v[3];
; 643  : 			for (int j = 0; j < 3; ++j)
; 644  : 			{
; 645  : 				if (tris[j] < poly->vertCount)

	movzx	r10d, BYTE PTR [r8+2]
	cmp	r10b, r12b
	jae	SHORT $LN38@closestPoi

; 646  : 					v[j] = &tile->verts[poly->verts[tris[j]] * 3];

	movzx	ecx, WORD PTR [r13+r10*2+4]
	mov	rax, QWORD PTR [rdi+24]
	lea	rdx, QWORD PTR [rcx+rcx*2]
	lea	rcx, QWORD PTR [rax+rdx*4]
	mov	rdx, QWORD PTR tv2249[rsp]
	jmp	SHORT $LN39@closestPoi
$LN38@closestPoi:

; 647  : 				else
; 648  : 					v[j] = &tile->detailVerts[(pd->vertBase + (tris[j] - poly->vertCount)) * 3];

	mov	rcx, QWORD PTR [rdi+40]
	mov	eax, r10d
	sub	eax, r12d
	add	eax, DWORD PTR [rcx+rdx*4]
	lea	ecx, DWORD PTR [rax+rax*2]
	mov	rax, QWORD PTR [rdi+48]
	lea	rcx, QWORD PTR [rax+rcx*4]
$LN39@closestPoi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.h

; 320  : 	return (triFlags >> (edgeIndex * 2)) & 0x3;

	movzx	eax, BYTE PTR [r8+3]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 653  : 				if ((dtGetDetailTriEdgeFlags(tris[3], j) & DT_DETAIL_EDGE_BOUNDARY) == 0 &&

	test	al, 16
	jne	SHORT $LN55@closestPoi
	cmp	r10b, r9b
	jb	$LN61@closestPoi
$LN55@closestPoi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp

; 172  : 	float pqx = q[0] - p[0];

	movss	xmm6, DWORD PTR [rcx]
	movss	xmm3, DWORD PTR [rbx]

; 173  : 	float pqz = q[2] - p[2];

	movss	xmm7, DWORD PTR [rcx+8]
	subss	xmm3, xmm6
	movss	xmm2, DWORD PTR [rbx+8]

; 174  : 	float dx = pt[0] - p[0];
; 175  : 	float dz = pt[2] - p[2];

	mov	r8, QWORD PTR pos$[rsp]
	subss	xmm2, xmm7

; 176  : 	float d = pqx*pqx + pqz*pqz;

	movaps	xmm0, xmm3
	movss	xmm8, DWORD PTR [r8+8]
	movss	xmm9, DWORD PTR [r8]
	movaps	xmm4, xmm2
	mulss	xmm0, xmm3
	movaps	xmm1, xmm8
	subss	xmm1, xmm7
	mulss	xmm4, xmm2
	addss	xmm4, xmm0
	movaps	xmm0, xmm9
	subss	xmm0, xmm6

; 177  : 	t = pqx*dx + pqz*dz;

	mulss	xmm1, xmm2

; 178  : 	if (d > 0) t /= d;

	comiss	xmm4, xmm5
	mulss	xmm0, xmm3
	addss	xmm1, xmm0
	jbe	SHORT $LN21@closestPoi
	divss	xmm1, xmm4
$LN21@closestPoi:

; 179  : 	if (t < 0) t = 0;

	comiss	xmm5, xmm1
	jbe	SHORT $LN22@closestPoi
	movaps	xmm0, xmm5
	jmp	SHORT $LN24@closestPoi
$LN22@closestPoi:

; 180  : 	else if (t > 1) t = 1;

	movaps	xmm0, xmm12
	minss	xmm0, xmm1
$LN24@closestPoi:

; 181  : 	dx = p[0] + t*pqx - pt[0];
; 182  : 	dz = p[2] + t*pqz - pt[2];

	mulss	xmm2, xmm0
	mulss	xmm3, xmm0
	addss	xmm2, xmm7
	addss	xmm3, xmm6
	subss	xmm2, xmm8
	subss	xmm3, xmm9

; 183  : 	return dx*dx + dz*dz;

	mulss	xmm2, xmm2
	mulss	xmm3, xmm3
	addss	xmm2, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 663  : 				if (d < dmin)

	comiss	xmm10, xmm2
	jbe	SHORT $LN8@closestPoi

; 664  : 				{
; 665  : 					dmin = d;

	movaps	xmm10, xmm2

; 666  : 					tmin = t;

	movaps	xmm11, xmm0

; 667  : 					pmin = v[j];

	mov	r14, rcx

; 668  : 					pmax = v[k];

	mov	r15, rbx
	jmp	SHORT $LN8@closestPoi
$LN61@closestPoi:

; 653  : 				if ((dtGetDetailTriEdgeFlags(tris[3], j) & DT_DETAIL_EDGE_BOUNDARY) == 0 &&

	mov	r8, QWORD PTR pos$[rsp]
$LN8@closestPoi:
	test	al, 1
	jne	SHORT $LN56@closestPoi
	cmp	r9b, r11b
	jb	$LN45@closestPoi
$LN56@closestPoi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp

; 172  : 	float pqx = q[0] - p[0];

	movss	xmm6, DWORD PTR [rbx]
	movss	xmm3, DWORD PTR [rsi]

; 173  : 	float pqz = q[2] - p[2];

	movss	xmm7, DWORD PTR [rbx+8]
	subss	xmm3, xmm6
	movss	xmm2, DWORD PTR [rsi+8]

; 174  : 	float dx = pt[0] - p[0];
; 175  : 	float dz = pt[2] - p[2];

	movss	xmm8, DWORD PTR [r8+8]
	subss	xmm2, xmm7
	movss	xmm9, DWORD PTR [r8]
	movaps	xmm1, xmm8
	subss	xmm1, xmm7

; 176  : 	float d = pqx*pqx + pqz*pqz;

	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
	movaps	xmm4, xmm2
	mulss	xmm4, xmm2

; 177  : 	t = pqx*dx + pqz*dz;

	mulss	xmm1, xmm2
	addss	xmm4, xmm0
	movaps	xmm0, xmm9
	subss	xmm0, xmm6

; 178  : 	if (d > 0) t /= d;

	comiss	xmm4, xmm5
	mulss	xmm0, xmm3
	addss	xmm1, xmm0
	jbe	SHORT $LN42@closestPoi
	divss	xmm1, xmm4
$LN42@closestPoi:

; 179  : 	if (t < 0) t = 0;

	comiss	xmm5, xmm1
	jbe	SHORT $LN43@closestPoi
	movaps	xmm0, xmm5
	jmp	SHORT $LN44@closestPoi
$LN43@closestPoi:

; 180  : 	else if (t > 1) t = 1;

	movaps	xmm0, xmm12
	minss	xmm0, xmm1
$LN44@closestPoi:

; 181  : 	dx = p[0] + t*pqx - pt[0];
; 182  : 	dz = p[2] + t*pqz - pt[2];

	mulss	xmm2, xmm0
	mulss	xmm3, xmm0
	addss	xmm2, xmm7
	addss	xmm3, xmm6
	subss	xmm2, xmm8
	subss	xmm3, xmm9

; 183  : 	return dx*dx + dz*dz;

	mulss	xmm2, xmm2
	mulss	xmm3, xmm3
	addss	xmm2, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 663  : 				if (d < dmin)

	comiss	xmm10, xmm2
	jbe	SHORT $LN45@closestPoi

; 664  : 				{
; 665  : 					dmin = d;

	movaps	xmm10, xmm2

; 666  : 					tmin = t;

	movaps	xmm11, xmm0

; 667  : 					pmin = v[j];

	mov	r14, rbx

; 668  : 					pmax = v[k];

	mov	r15, rsi
$LN45@closestPoi:

; 653  : 				if ((dtGetDetailTriEdgeFlags(tris[3], j) & DT_DETAIL_EDGE_BOUNDARY) == 0 &&

	test	al, 4
	jne	SHORT $LN57@closestPoi
	cmp	r11b, r10b
	jb	$LN51@closestPoi
$LN57@closestPoi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp

; 172  : 	float pqx = q[0] - p[0];

	movss	xmm6, DWORD PTR [rsi]
	movss	xmm3, DWORD PTR [rcx]

; 173  : 	float pqz = q[2] - p[2];

	movss	xmm7, DWORD PTR [rsi+8]
	subss	xmm3, xmm6
	movss	xmm1, DWORD PTR [rcx+8]

; 174  : 	float dx = pt[0] - p[0];
; 175  : 	float dz = pt[2] - p[2];

	movss	xmm8, DWORD PTR [r8+8]
	subss	xmm1, xmm7
	movss	xmm9, DWORD PTR [r8]
	movaps	xmm2, xmm8
	subss	xmm2, xmm7

; 176  : 	float d = pqx*pqx + pqz*pqz;

	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
	movaps	xmm4, xmm1
	mulss	xmm4, xmm1

; 177  : 	t = pqx*dx + pqz*dz;

	mulss	xmm2, xmm1
	addss	xmm4, xmm0
	movaps	xmm0, xmm9
	subss	xmm0, xmm6

; 178  : 	if (d > 0) t /= d;

	comiss	xmm4, xmm5
	mulss	xmm0, xmm3
	addss	xmm2, xmm0
	jbe	SHORT $LN48@closestPoi
	divss	xmm2, xmm4
$LN48@closestPoi:

; 179  : 	if (t < 0) t = 0;

	comiss	xmm5, xmm2
	jbe	SHORT $LN49@closestPoi
	movaps	xmm0, xmm5
	jmp	SHORT $LN50@closestPoi
$LN49@closestPoi:

; 180  : 	else if (t > 1) t = 1;

	movaps	xmm0, xmm12
	minss	xmm0, xmm2
$LN50@closestPoi:

; 181  : 	dx = p[0] + t*pqx - pt[0];
; 182  : 	dz = p[2] + t*pqz - pt[2];

	mulss	xmm1, xmm0
	mulss	xmm3, xmm0
	addss	xmm1, xmm7
	addss	xmm3, xmm6
	subss	xmm1, xmm8
	subss	xmm3, xmm9

; 183  : 	return dx*dx + dz*dz;

	mulss	xmm1, xmm1
	mulss	xmm3, xmm3
	addss	xmm1, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 663  : 				if (d < dmin)

	comiss	xmm10, xmm1
	jbe	SHORT $LN51@closestPoi

; 664  : 				{
; 665  : 					dmin = d;

	movaps	xmm10, xmm1

; 666  : 					tmin = t;

	movaps	xmm11, xmm0

; 667  : 					pmin = v[j];

	mov	r14, rsi

; 668  : 					pmax = v[k];

	mov	r15, rcx
$LN51@closestPoi:

; 631  : 
; 632  : 		for (int i = 0; i < pd->triCount; i++)

	mov	r10, QWORD PTR [rdi+40]
	inc	ebp
	mov	esi, r12d
	mov	eax, DWORD PTR [r10+rdx*4+4]
	cmp	ebp, DWORD PTR $T1[rsp]
	jl	$LL4@closestPoi
	movaps	xmm12, XMMWORD PTR [rsp]
	movaps	xmm9, XMMWORD PTR [rsp+48]
	movaps	xmm8, XMMWORD PTR [rsp+64]
	movaps	xmm7, XMMWORD PTR [rsp+80]
	movaps	xmm6, XMMWORD PTR [rsp+96]
	mov	r12, QWORD PTR [rsp+120]
	mov	rsi, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [rsp+136]
	mov	r9, QWORD PTR closest$[rsp]
$LN3@closestPoi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 119  : 	dest[0] = v1[0]+(v2[0]-v1[0])*t;

	movss	xmm1, DWORD PTR [r15]
	subss	xmm1, DWORD PTR [r14]

; 120  : 	dest[1] = v1[1]+(v2[1]-v1[1])*t;

	movss	xmm0, DWORD PTR [r15+4]
	subss	xmm0, DWORD PTR [r14+4]

; 121  : 	dest[2] = v1[2]+(v2[2]-v1[2])*t;

	movss	xmm2, DWORD PTR [r15+8]
	subss	xmm2, DWORD PTR [r14+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 674  : 	}

	movaps	xmm10, XMMWORD PTR [rsp+32]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 119  : 	dest[0] = v1[0]+(v2[0]-v1[0])*t;

	mulss	xmm1, xmm11

; 120  : 	dest[1] = v1[1]+(v2[1]-v1[1])*t;

	mulss	xmm0, xmm11
	addss	xmm1, DWORD PTR [r14]

; 121  : 	dest[2] = v1[2]+(v2[2]-v1[2])*t;

	mulss	xmm2, xmm11
	addss	xmm0, DWORD PTR [r14+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 674  : 	}

	movaps	xmm11, XMMWORD PTR [rsp+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 121  : 	dest[2] = v1[2]+(v2[2]-v1[2])*t;

	addss	xmm2, DWORD PTR [r14+8]
	movss	DWORD PTR [r9], xmm1
	movss	DWORD PTR [r9+4], xmm0
	movss	DWORD PTR [r9+8], xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 674  : 	}

	add	rsp, 144				; 00000090H
	pop	r15
	pop	r14
	pop	r13
	pop	rdi
	pop	rbp
	ret	0
??$closestPointOnDetailEdges@$0A@@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z ENDP ; `anonymous namespace'::closestPointOnDetailEdges<0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp
;	COMDAT ??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z
_TEXT	SEGMENT
tile$ = 176
poly$ = 184
pos$ = 192
closest$ = 200
??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z PROC ; `anonymous namespace'::closestPointOnDetailEdges<1>, COMDAT

; 623  : 	{

	mov	r11, rsp
	mov	QWORD PTR [r11+32], r9
	mov	QWORD PTR [r11+24], r8
	push	rbp
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 120				; 00000078H

; 624  : 		const unsigned int ip = (unsigned int)(poly - tile->polys);
; 625  : 		const dtPolyDetail* pd = &tile->detailMeshes[ip];
; 626  : 
; 627  : 		float dmin = FLT_MAX;
; 628  : 		float tmin = 0;
; 629  : 		const float* pmin = 0;

	xor	r14d, r14d
	movaps	XMMWORD PTR [rsp+32], xmm10
	movss	xmm10, DWORD PTR __real@7f7fffff
	mov	rax, rdx
	sub	rax, QWORD PTR [rcx+16]
	mov	r13, rdx
	mov	rdx, QWORD PTR [rcx+40]
	mov	rdi, rcx
	sar	rax, 5
	xorps	xmm5, xmm5
	mov	eax, eax

; 630  : 		const float* pmax = 0;

	mov	r15d, r14d
	movaps	XMMWORD PTR [rsp+16], xmm11
	mov	ebp, r14d
	xorps	xmm11, xmm11
	lea	r12, QWORD PTR [rax+rax*2]

; 631  : 
; 632  : 		for (int i = 0; i < pd->triCount; i++)

	movzx	eax, BYTE PTR [rdx+r12*4+9]
	test	eax, eax
	je	$LN3@closestPoi

; 633  : 		{
; 634  : 			const unsigned char* tris = &tile->detailTris[(pd->triBase + i) * 4];

	mov	eax, DWORD PTR [rdx+r12*4+4]
	mov	QWORD PTR [r11+8], rbx
	movaps	XMMWORD PTR [rsp], xmm12
	movss	xmm12, DWORD PTR __real@3f800000
	mov	QWORD PTR [r11-56], rsi
	movaps	XMMWORD PTR [rsp+96], xmm6
	movaps	XMMWORD PTR [rsp+80], xmm7
	movaps	XMMWORD PTR [r11-104], xmm8
	movaps	XMMWORD PTR [r11-120], xmm9
	npad	10
$LL4@closestPoi:
	lea	r8d, DWORD PTR [rax+rbp]
	shl	r8d, 2
	add	r8, QWORD PTR [rdi+56]

; 635  : 			const int ANY_BOUNDARY_EDGE =
; 636  : 				(DT_DETAIL_EDGE_BOUNDARY << 0) |
; 637  : 				(DT_DETAIL_EDGE_BOUNDARY << 2) |
; 638  : 				(DT_DETAIL_EDGE_BOUNDARY << 4);
; 639  : 			if (onlyBoundary && (tris[3] & ANY_BOUNDARY_EDGE) == 0)

	movzx	ebx, BYTE PTR [r8+3]
	test	bl, 21
	je	$LN2@closestPoi

; 640  : 				continue;
; 641  : 
; 642  : 			const float* v[3];
; 643  : 			for (int j = 0; j < 3; ++j)
; 644  : 			{
; 645  : 				if (tris[j] < poly->vertCount)

	movzx	r9d, BYTE PTR [r13+30]
	movzx	eax, BYTE PTR [r8]
	cmp	al, r9b
	jae	SHORT $LN12@closestPoi

; 646  : 					v[j] = &tile->verts[poly->verts[tris[j]] * 3];

	movzx	ecx, WORD PTR [r13+rax*2+4]
	mov	rax, QWORD PTR [rdi+24]
	lea	rdx, QWORD PTR [rcx+rcx*2]
	lea	r11, QWORD PTR [rax+rdx*4]
	mov	rdx, QWORD PTR [rdi+40]
	jmp	SHORT $LN5@closestPoi
$LN12@closestPoi:

; 647  : 				else
; 648  : 					v[j] = &tile->detailVerts[(pd->vertBase + (tris[j] - poly->vertCount)) * 3];

	sub	eax, r9d
	add	eax, DWORD PTR [rdx+r12*4]
	lea	ecx, DWORD PTR [rax+rax*2]
	mov	rax, QWORD PTR [rdi+48]
	lea	r11, QWORD PTR [rax+rcx*4]
$LN5@closestPoi:

; 640  : 				continue;
; 641  : 
; 642  : 			const float* v[3];
; 643  : 			for (int j = 0; j < 3; ++j)
; 644  : 			{
; 645  : 				if (tris[j] < poly->vertCount)

	movzx	eax, BYTE PTR [r8+1]
	cmp	al, r9b
	jae	SHORT $LN34@closestPoi

; 646  : 					v[j] = &tile->verts[poly->verts[tris[j]] * 3];

	movzx	ecx, WORD PTR [r13+rax*2+4]
	mov	rax, QWORD PTR [rdi+24]
	lea	rdx, QWORD PTR [rcx+rcx*2]
	lea	rsi, QWORD PTR [rax+rdx*4]
	mov	rdx, QWORD PTR [rdi+40]
	jmp	SHORT $LN35@closestPoi
$LN34@closestPoi:

; 647  : 				else
; 648  : 					v[j] = &tile->detailVerts[(pd->vertBase + (tris[j] - poly->vertCount)) * 3];

	sub	eax, r9d
	add	eax, DWORD PTR [rdx+r12*4]
	lea	ecx, DWORD PTR [rax+rax*2]
	mov	rax, QWORD PTR [rdi+48]
	lea	rsi, QWORD PTR [rax+rcx*4]
$LN35@closestPoi:

; 640  : 				continue;
; 641  : 
; 642  : 			const float* v[3];
; 643  : 			for (int j = 0; j < 3; ++j)
; 644  : 			{
; 645  : 				if (tris[j] < poly->vertCount)

	movzx	eax, BYTE PTR [r8+2]
	cmp	al, r9b
	jae	SHORT $LN37@closestPoi

; 646  : 					v[j] = &tile->verts[poly->verts[tris[j]] * 3];

	movzx	ecx, WORD PTR [r13+rax*2+4]
	mov	rax, QWORD PTR [rdi+24]
	lea	rdx, QWORD PTR [rcx+rcx*2]
	lea	rcx, QWORD PTR [rax+rdx*4]
	mov	rdx, QWORD PTR [rdi+40]
	jmp	SHORT $LN38@closestPoi
$LN37@closestPoi:

; 647  : 				else
; 648  : 					v[j] = &tile->detailVerts[(pd->vertBase + (tris[j] - poly->vertCount)) * 3];

	sub	eax, r9d
	add	eax, DWORD PTR [rdx+r12*4]
	lea	ecx, DWORD PTR [rax+rax*2]
	mov	rax, QWORD PTR [rdi+48]
	lea	rcx, QWORD PTR [rax+rcx*4]
$LN38@closestPoi:

; 649  : 			}
; 650  : 
; 651  : 			for (int k = 0, j = 2; k < 3; j = k++)
; 652  : 			{
; 653  : 				if ((dtGetDetailTriEdgeFlags(tris[3], j) & DT_DETAIL_EDGE_BOUNDARY) == 0 &&

	mov	r9, QWORD PTR pos$[rsp]
	test	bl, 16
	je	$LN8@closestPoi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp

; 172  : 	float pqx = q[0] - p[0];

	movss	xmm6, DWORD PTR [rcx]
	movss	xmm3, DWORD PTR [r11]

; 173  : 	float pqz = q[2] - p[2];

	movss	xmm7, DWORD PTR [rcx+8]
	subss	xmm3, xmm6
	movss	xmm2, DWORD PTR [r11+8]

; 174  : 	float dx = pt[0] - p[0];
; 175  : 	float dz = pt[2] - p[2];

	movss	xmm8, DWORD PTR [r9+8]
	subss	xmm2, xmm7
	movss	xmm9, DWORD PTR [r9]
	movaps	xmm1, xmm8
	subss	xmm1, xmm7

; 176  : 	float d = pqx*pqx + pqz*pqz;

	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
	movaps	xmm4, xmm2
	mulss	xmm4, xmm2

; 177  : 	t = pqx*dx + pqz*dz;

	mulss	xmm1, xmm2
	addss	xmm4, xmm0
	movaps	xmm0, xmm9
	subss	xmm0, xmm6

; 178  : 	if (d > 0) t /= d;

	comiss	xmm4, xmm5
	mulss	xmm0, xmm3
	addss	xmm1, xmm0
	jbe	SHORT $LN20@closestPoi
	divss	xmm1, xmm4
$LN20@closestPoi:

; 179  : 	if (t < 0) t = 0;

	comiss	xmm5, xmm1
	jbe	SHORT $LN21@closestPoi
	movaps	xmm0, xmm5
	jmp	SHORT $LN23@closestPoi
$LN21@closestPoi:

; 180  : 	else if (t > 1) t = 1;

	movaps	xmm0, xmm12
	minss	xmm0, xmm1
$LN23@closestPoi:

; 181  : 	dx = p[0] + t*pqx - pt[0];
; 182  : 	dz = p[2] + t*pqz - pt[2];

	mulss	xmm2, xmm0
	mulss	xmm3, xmm0
	addss	xmm2, xmm7
	addss	xmm3, xmm6
	subss	xmm2, xmm8
	subss	xmm3, xmm9

; 183  : 	return dx*dx + dz*dz;

	mulss	xmm2, xmm2
	mulss	xmm3, xmm3
	addss	xmm2, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 663  : 				if (d < dmin)

	comiss	xmm10, xmm2
	jbe	SHORT $LN8@closestPoi

; 664  : 				{
; 665  : 					dmin = d;

	movaps	xmm10, xmm2

; 666  : 					tmin = t;

	movaps	xmm11, xmm0

; 667  : 					pmin = v[j];

	mov	r14, rcx

; 668  : 					pmax = v[k];

	mov	r15, r11
$LN8@closestPoi:

; 649  : 			}
; 650  : 
; 651  : 			for (int k = 0, j = 2; k < 3; j = k++)
; 652  : 			{
; 653  : 				if ((dtGetDetailTriEdgeFlags(tris[3], j) & DT_DETAIL_EDGE_BOUNDARY) == 0 &&

	test	bl, 1
	je	$LN43@closestPoi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp

; 172  : 	float pqx = q[0] - p[0];

	movss	xmm6, DWORD PTR [r11]
	movss	xmm3, DWORD PTR [rsi]

; 173  : 	float pqz = q[2] - p[2];

	movss	xmm7, DWORD PTR [r11+8]
	subss	xmm3, xmm6
	movss	xmm2, DWORD PTR [rsi+8]

; 174  : 	float dx = pt[0] - p[0];
; 175  : 	float dz = pt[2] - p[2];

	movss	xmm8, DWORD PTR [r9+8]
	subss	xmm2, xmm7
	movss	xmm9, DWORD PTR [r9]
	movaps	xmm1, xmm8
	subss	xmm1, xmm7

; 176  : 	float d = pqx*pqx + pqz*pqz;

	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
	movaps	xmm4, xmm2
	mulss	xmm4, xmm2

; 177  : 	t = pqx*dx + pqz*dz;

	mulss	xmm1, xmm2
	addss	xmm4, xmm0
	movaps	xmm0, xmm9
	subss	xmm0, xmm6

; 178  : 	if (d > 0) t /= d;

	comiss	xmm4, xmm5
	mulss	xmm0, xmm3
	addss	xmm1, xmm0
	jbe	SHORT $LN40@closestPoi
	divss	xmm1, xmm4
$LN40@closestPoi:

; 179  : 	if (t < 0) t = 0;

	comiss	xmm5, xmm1
	jbe	SHORT $LN41@closestPoi
	movaps	xmm0, xmm5
	jmp	SHORT $LN42@closestPoi
$LN41@closestPoi:

; 180  : 	else if (t > 1) t = 1;

	movaps	xmm0, xmm12
	minss	xmm0, xmm1
$LN42@closestPoi:

; 181  : 	dx = p[0] + t*pqx - pt[0];
; 182  : 	dz = p[2] + t*pqz - pt[2];

	mulss	xmm2, xmm0
	mulss	xmm3, xmm0
	addss	xmm2, xmm7
	addss	xmm3, xmm6
	subss	xmm2, xmm8
	subss	xmm3, xmm9

; 183  : 	return dx*dx + dz*dz;

	mulss	xmm2, xmm2
	mulss	xmm3, xmm3
	addss	xmm2, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 663  : 				if (d < dmin)

	comiss	xmm10, xmm2
	jbe	SHORT $LN43@closestPoi

; 664  : 				{
; 665  : 					dmin = d;

	movaps	xmm10, xmm2

; 666  : 					tmin = t;

	movaps	xmm11, xmm0

; 667  : 					pmin = v[j];

	mov	r14, r11

; 668  : 					pmax = v[k];

	mov	r15, rsi
$LN43@closestPoi:

; 649  : 			}
; 650  : 
; 651  : 			for (int k = 0, j = 2; k < 3; j = k++)
; 652  : 			{
; 653  : 				if ((dtGetDetailTriEdgeFlags(tris[3], j) & DT_DETAIL_EDGE_BOUNDARY) == 0 &&

	test	bl, 4
	je	$LN2@closestPoi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.cpp

; 172  : 	float pqx = q[0] - p[0];

	movss	xmm6, DWORD PTR [rsi]
	movss	xmm3, DWORD PTR [rcx]

; 173  : 	float pqz = q[2] - p[2];

	movss	xmm7, DWORD PTR [rsi+8]
	subss	xmm3, xmm6
	movss	xmm2, DWORD PTR [rcx+8]

; 174  : 	float dx = pt[0] - p[0];
; 175  : 	float dz = pt[2] - p[2];

	movss	xmm8, DWORD PTR [r9+8]
	subss	xmm2, xmm7
	movss	xmm9, DWORD PTR [r9]
	movaps	xmm1, xmm8
	subss	xmm1, xmm7

; 176  : 	float d = pqx*pqx + pqz*pqz;

	movaps	xmm0, xmm3
	mulss	xmm0, xmm3
	movaps	xmm4, xmm2
	mulss	xmm4, xmm2

; 177  : 	t = pqx*dx + pqz*dz;

	mulss	xmm1, xmm2
	addss	xmm4, xmm0
	movaps	xmm0, xmm9
	subss	xmm0, xmm6

; 178  : 	if (d > 0) t /= d;

	comiss	xmm4, xmm5
	mulss	xmm0, xmm3
	addss	xmm1, xmm0
	jbe	SHORT $LN45@closestPoi
	divss	xmm1, xmm4
$LN45@closestPoi:

; 179  : 	if (t < 0) t = 0;

	comiss	xmm5, xmm1
	jbe	SHORT $LN46@closestPoi
	movaps	xmm0, xmm5
	jmp	SHORT $LN47@closestPoi
$LN46@closestPoi:

; 180  : 	else if (t > 1) t = 1;

	movaps	xmm0, xmm12
	minss	xmm0, xmm1
$LN47@closestPoi:

; 181  : 	dx = p[0] + t*pqx - pt[0];
; 182  : 	dz = p[2] + t*pqz - pt[2];

	mulss	xmm2, xmm0
	mulss	xmm3, xmm0
	addss	xmm2, xmm7
	addss	xmm3, xmm6
	subss	xmm2, xmm8
	subss	xmm3, xmm9

; 183  : 	return dx*dx + dz*dz;

	mulss	xmm2, xmm2
	mulss	xmm3, xmm3
	addss	xmm2, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 663  : 				if (d < dmin)

	comiss	xmm10, xmm2
	jbe	SHORT $LN2@closestPoi

; 664  : 				{
; 665  : 					dmin = d;

	movaps	xmm10, xmm2

; 666  : 					tmin = t;

	movaps	xmm11, xmm0

; 667  : 					pmin = v[j];

	mov	r14, rsi

; 668  : 					pmax = v[k];

	mov	r15, rcx
$LN2@closestPoi:

; 631  : 
; 632  : 		for (int i = 0; i < pd->triCount; i++)

	movzx	eax, BYTE PTR [rdx+r12*4+9]
	inc	ebp
	cmp	ebp, eax
	mov	eax, DWORD PTR [rdx+r12*4+4]
	jl	$LL4@closestPoi
	movaps	xmm12, XMMWORD PTR [rsp]
	movaps	xmm9, XMMWORD PTR [rsp+48]
	movaps	xmm8, XMMWORD PTR [rsp+64]
	movaps	xmm7, XMMWORD PTR [rsp+80]
	movaps	xmm6, XMMWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+112]
	mov	rbx, QWORD PTR [rsp+176]
	mov	r9, QWORD PTR closest$[rsp]
$LN3@closestPoi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 119  : 	dest[0] = v1[0]+(v2[0]-v1[0])*t;

	movss	xmm1, DWORD PTR [r15]
	subss	xmm1, DWORD PTR [r14]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 674  : 	}

	movaps	xmm10, XMMWORD PTR [rsp+32]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 119  : 	dest[0] = v1[0]+(v2[0]-v1[0])*t;

	mulss	xmm1, xmm11
	addss	xmm1, DWORD PTR [r14]
	movss	DWORD PTR [r9], xmm1

; 120  : 	dest[1] = v1[1]+(v2[1]-v1[1])*t;

	movss	xmm0, DWORD PTR [r15+4]
	subss	xmm0, DWORD PTR [r14+4]
	mulss	xmm0, xmm11
	addss	xmm0, DWORD PTR [r14+4]
	movss	DWORD PTR [r9+4], xmm0

; 121  : 	dest[2] = v1[2]+(v2[2]-v1[2])*t;

	movss	xmm2, DWORD PTR [r15+8]
	subss	xmm2, DWORD PTR [r14+8]
	mulss	xmm2, xmm11
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 674  : 	}

	movaps	xmm11, XMMWORD PTR [rsp+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourCommon.h

; 121  : 	dest[2] = v1[2]+(v2[2]-v1[2])*t;

	addss	xmm2, DWORD PTR [r14+8]
	movss	DWORD PTR [r9+8], xmm2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\detour\DetourNavMesh.cpp

; 674  : 	}

	add	rsp, 120				; 00000078H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rbp
	ret	0
??$closestPointOnDetailEdges@$00@?A0xa0e3221c@@YAXPEBUdtMeshTile@@PEBUdtPoly@@PEBMPEAM@Z ENDP ; `anonymous namespace'::closestPointOnDetailEdges<1>
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_09HHOLJJJN@?$CD?$CDListBox@		; `string'
PUBLIC	??_C@_06CBCCMFMH@?$CD?$CDName@			; `string'
PUBLIC	??_C@_09GBAPPELN@Search?4?4?4@			; `string'
PUBLIC	??_C@_0O@GIAFECML@Add?5AINB?5node@		; `string'
PUBLIC	??_C@_0CO@MLFKAMKD@Show?5unallowed?5nodes?5?$CIthose?5nod@ ; `string'
PUBLIC	??_C@_08IDKDJODB@Element_@			; `string'
PUBLIC	?Func@PopupAddAINBNode@@3P6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZEA ; PopupAddAINBNode::Func
PUBLIC	?ShowUnallowedNodes@PopupAddAINBNode@@3_NA	; PopupAddAINBNode::ShowUnallowedNodes
PUBLIC	?AINBCategory@PopupAddAINBNode@@3W4CategoryEnum@NodeDef@AINBNodeDefMgr@@A ; PopupAddAINBNode::AINBCategory
PUBLIC	?IsOpen@PopupAddAINBNode@@3_NA			; PopupAddAINBNode::IsOpen
	ALIGN	8

?Func@PopupAddAINBNode@@3P6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZEA DQ 01H DUP (?) ; PopupAddAINBNode::Func
?IsOpen@PopupAddAINBNode@@3_NA DB 01H DUP (?)		; PopupAddAINBNode::IsOpen
_BSS	ENDS
;	COMDAT ??_C@_08IDKDJODB@Element_@
CONST	SEGMENT
??_C@_08IDKDJODB@Element_@ DB 'Element_', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@MLFKAMKD@Show?5unallowed?5nodes?5?$CIthose?5nod@
CONST	SEGMENT
??_C@_0CO@MLFKAMKD@Show?5unallowed?5nodes?5?$CIthose?5nod@ DB 'Show unall'
	DB	'owed nodes (those nodes won''t work)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GIAFECML@Add?5AINB?5node@
CONST	SEGMENT
??_C@_0O@GIAFECML@Add?5AINB?5node@ DB 'Add AINB node', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GBAPPELN@Search?4?4?4@
CONST	SEGMENT
??_C@_09GBAPPELN@Search?4?4?4@ DB 'Search...', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06CBCCMFMH@?$CD?$CDName@
CONST	SEGMENT
??_C@_06CBCCMFMH@?$CD?$CDName@ DB '##Name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HHOLJJJN@?$CD?$CDListBox@
CONST	SEGMENT
??_C@_09HHOLJJJN@?$CD?$CDListBox@ DB '##ListBox', 00H	; `string'
?ShowUnallowedNodes@PopupAddAINBNode@@3_NA DB 01H	; PopupAddAINBNode::ShowUnallowedNodes
?AINBCategory@PopupAddAINBNode@@3W4CategoryEnum@NodeDef@AINBNodeDefMgr@@A DB 01H ; PopupAddAINBNode::AINBCategory
PUBLIC	?Open@PopupAddAINBNode@@YAXP6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z ; PopupAddAINBNode::Open
PUBLIC	?Render@PopupAddAINBNode@@YAXXZ			; PopupAddAINBNode::Render
PUBLIC	?Name@PopupAddAINBNode@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; PopupAddAINBNode::Name
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Open@PopupAddAINBNode@@YAXP6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z DD imagerel $LN54
	DD	imagerel $LN54+197
	DD	imagerel $unwind$?Open@PopupAddAINBNode@@YAXP6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Render@PopupAddAINBNode@@YAXXZ DD imagerel $LN235
	DD	imagerel $LN235+1151
	DD	imagerel $unwind$?Render@PopupAddAINBNode@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??Render@PopupAddAINBNode@@YAXXZ@4HA DD imagerel ?dtor$1@?0??Render@PopupAddAINBNode@@YAXXZ@4HA
	DD	imagerel ?dtor$1@?0??Render@PopupAddAINBNode@@YAXXZ@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??Render@PopupAddAINBNode@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FName@PopupAddAINBNode@@YAXXZ DD imagerel ??__FName@PopupAddAINBNode@@YAXXZ
	DD	imagerel ??__FName@PopupAddAINBNode@@YAXXZ+100
	DD	imagerel $unwind$??__FName@PopupAddAINBNode@@YAXXZ
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FName@PopupAddAINBNode@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??Render@PopupAddAINBNode@@YAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Render@PopupAddAINBNode@@YAXXZ DB 08H
	DB	0dH, 02H
	DB	00H
	DB	'A', 05H
	DB	02H
	DB	0c9H, 02H
	DB	00H
	DB	0b1H, 07H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Render@PopupAddAINBNode@@YAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$1@?0??Render@PopupAddAINBNode@@YAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?Render@PopupAddAINBNode@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?Render@PopupAddAINBNode@@YAXXZ
	DD	imagerel $ip2state$?Render@PopupAddAINBNode@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Render@PopupAddAINBNode@@YAXXZ DD 0d3219H
	DD	0247424H
	DD	0236424H
	DD	0223424H
	DD	01c0124H
	DD	0e016f018H
	DD	0c012d014H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?Render@PopupAddAINBNode@@YAXXZ
	DD	0daH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Open@PopupAddAINBNode@@YAXP6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
?Name@PopupAddAINBNode@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; PopupAddAINBNode::Name
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DQ	0000000000000000H
	DQ	000000000000000fH
?Name$initializer$@PopupAddAINBNode@@3P6AXXZEA DQ FLAT:??__FName@PopupAddAINBNode@@YAXXZ ; PopupAddAINBNode::Name$initializer$
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
;	COMDAT ??__FName@PopupAddAINBNode@@YAXXZ
text$di	SEGMENT
??__FName@PopupAddAINBNode@@YAXXZ PROC			; PopupAddAINBNode::`dynamic atexit destructor for 'Name'', COMDAT

; 10   : std::string PopupAddAINBNode::Name = "";

	lea	rcx, OFFSET FLAT:??__FName@PopupAddAINBNode@@YAXXZ ; PopupAddAINBNode::`dynamic atexit destructor for 'Name''
	jmp	atexit
??__FName@PopupAddAINBNode@@YAXXZ ENDP			; PopupAddAINBNode::`dynamic atexit destructor for 'Name''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FName@PopupAddAINBNode@@YAXXZ
text$yd	SEGMENT
??__FName@PopupAddAINBNode@@YAXXZ PROC			; PopupAddAINBNode::`dynamic atexit destructor for 'Name'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?Name@PopupAddAINBNode@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?Name@PopupAddAINBNode@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqa	XMMWORD PTR ?Name@PopupAddAINBNode@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?Name@PopupAddAINBNode@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FName@PopupAddAINBNode@@YAXXZ ENDP			; PopupAddAINBNode::`dynamic atexit destructor for 'Name''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_stdlib.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
;	COMDAT ?Render@PopupAddAINBNode@@YAXXZ
_TEXT	SEGMENT
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 72
$T6 = 72
$T7 = 72
$T8 = 88
$T9 = 88
$T10 = 120
$T11 = 152
cb_user_data$12 = 184
$T13 = 184
__$ArrayPad$ = 216
?Render@PopupAddAINBNode@@YAXXZ PROC			; PopupAddAINBNode::Render, COMDAT

; 15   : {

$LN235:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-55]
	sub	rsp, 224				; 000000e0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-169], rax
	xor	r13d, r13d
	mov	esi, r13d
	mov	DWORD PTR $T3[rbp-169], r13d

; 16   : 	if (IsOpen)

	cmp	BYTE PTR ?IsOpen@PopupAddAINBNode@@3_NA, r13b ; PopupAddAINBNode::IsOpen
	je	$LN5@Render

; 17   : 	{
; 18   : 		UIMapView::RenderSettings.AllowSelectingActor = false;

	mov	BYTE PTR ?RenderSettings@UIMapView@@3URenderingSettingsStruct@1@A+5, sil
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 8124 :     ImGuiContext& g = *GImGui;

	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui

; 8125 :     IM_ASSERT(cond == 0 || ImIsPowerOfTwo(cond)); // Make sure the user doesn't attempt to combine multiple condition flags.
; 8126 :     g.NextWindowData.Flags |= ImGuiNextWindowDataFlags_HasSize;

	or	DWORD PTR [rax+18680], 2

; 8127 :     g.NextWindowData.SizeVal = size;

	mov	DWORD PTR [rax+18716], 1143603200	; 442a0000H
	mov	DWORD PTR [rax+18720], 1130168320	; 435d0000H

; 8128 :     g.NextWindowData.SizeCond = cond ? cond : ImGuiCond_Always;

	mov	DWORD PTR [rax+18688], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 20   : 		ImGui::OpenPopup("Add AINB node");

	lea	rcx, OFFSET FLAT:??_C@_0O@GIAFECML@Add?5AINB?5node@
	call	?OpenPopup@ImGui@@YAXPEBDH@Z		; ImGui::OpenPopup

; 21   : 		if (ImGui::BeginPopupModal("Add AINB node", NULL, ImGuiWindowFlags_NoResize))

	lea	r8d, QWORD PTR [r13+2]
	lea	rcx, OFFSET FLAT:??_C@_0O@GIAFECML@Add?5AINB?5node@
	call	?BeginPopupModal@ImGui@@YA_NPEBDPEA_NH@Z ; ImGui::BeginPopupModal
	test	al, al
	je	$LN13@Render
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_stdlib.cpp

; 77   :     cb_user_data.Str = str;

	lea	r12, OFFSET FLAT:?Name@PopupAddAINBNode@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; PopupAddAINBNode::Name
	mov	QWORD PTR cb_user_data$12[rbp-169], r12

; 78   :     cb_user_data.ChainCallback = callback;

	mov	QWORD PTR cb_user_data$12[rbp-161], r13

; 79   :     cb_user_data.ChainCallbackUserData = user_data;

	mov	QWORD PTR cb_user_data$12[rbp-153], r13

; 80   :     return InputTextWithHint(label, hint, (char*)str->c_str(), str->capacity() + 1, flags, InputTextCallback, &cb_user_data);

	mov	rax, QWORD PTR ?Name@PopupAddAINBNode@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	lea	r9, QWORD PTR [rax+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	mov	r8, r12
	cmp	rax, 16
	cmovae	r8, QWORD PTR ?Name@PopupAddAINBNode@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	QWORD PTR $T2[rbp-169], rsi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 3669 :     return InputTextEx(label, hint, buf, (int)buf_size, ImVec2(0, 0), flags, callback, user_data);

	lea	rax, QWORD PTR cb_user_data$12[rbp-169]
	mov	QWORD PTR [rsp+56], rax
	lea	rax, OFFSET FLAT:?InputTextCallback@@YAHPEAUImGuiInputTextCallbackData@@@Z ; InputTextCallback
	mov	QWORD PTR [rsp+48], rax
	mov	DWORD PTR [rsp+40], 262144		; 00040000H
	lea	rax, QWORD PTR $T2[rbp-169]
	mov	QWORD PTR [rsp+32], rax
	lea	rdx, OFFSET FLAT:??_C@_09GBAPPELN@Search?4?4?4@
	lea	rcx, OFFSET FLAT:??_C@_06CBCCMFMH@?$CD?$CDName@
	call	?InputTextEx@ImGui@@YA_NPEBD0PEADHAEBUImVec2@@HP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z ; ImGui::InputTextEx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	QWORD PTR $T4[rbp-169], rsi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 27   : 			ImGui::BeginListBox("##ListBox");

	lea	rdx, QWORD PTR $T4[rbp-169]
	lea	rcx, OFFSET FLAT:??_C@_09HHOLJJJN@?$CD?$CDListBox@
	call	?BeginListBox@ImGui@@YA_NPEBDAEBUImVec2@@@Z ; ImGui::BeginListBox
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1847 :         return _Mypair._Myval2._Myfirst;

	mov	r14, QWORD PTR ?NodeDefinitions@AINBNodeDefMgr@@3V?$vector@UNodeDef@AINBNodeDefMgr@@V?$allocator@UNodeDef@AINBNodeDefMgr@@@std@@@std@@A

; 1855 :         return _Mypair._Myval2._Mylast;

	mov	r15, QWORD PTR ?NodeDefinitions@AINBNodeDefMgr@@3V?$vector@UNodeDef@AINBNodeDefMgr@@V?$allocator@UNodeDef@AINBNodeDefMgr@@@std@@@std@@A+8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 28   : 			for (AINBNodeDefMgr::NodeDef& Def : AINBNodeDefMgr::NodeDefinitions)

	cmp	r14, r15
	je	$LN229@Render
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	lea	rbx, QWORD PTR [r14+40]
	npad	7
$LL4@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	rdx, QWORD PTR [rbx+192]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5851 :         _Seek_wrapped(_First, _STD _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

	mov	rcx, QWORD PTR [rbx+184]

; 5836 :     for (; _First != _Last; ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN226@Render
$LL58@Render:

; 5837 :         if (*_First == _Val) {

	movzx	eax, BYTE PTR ?AINBCategory@PopupAddAINBNode@@3W4CategoryEnum@NodeDef@AINBNodeDefMgr@@A ; PopupAddAINBNode::AINBCategory
	cmp	BYTE PTR [rcx], al
	je	SHORT $LN8@Render

; 5836 :     for (; _First != _Last; ++_First) {

	inc	rcx
	cmp	rcx, rdx
	jne	SHORT $LL58@Render
$LN226@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 30   : 				if (std::find(Def.AllowedAINBCategories.begin(), Def.AllowedAINBCategories.end(), AINBCategory) == Def.AllowedAINBCategories.end() && !ShowUnallowedNodes)

	cmp	BYTE PTR ?ShowUnallowedNodes@PopupAddAINBNode@@3_NA, 0 ; PopupAddAINBNode::ShowUnallowedNodes
	jne	SHORT $LN8@Render
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN172@Render

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx]
$LN172@Render:

; 1419 :         const auto _Rightsize = _Right._Mysize;

	cmp	QWORD PTR [rbx+16], 8

; 1420 :         if (_Mysize < _Rightsize) {

	jb	$LN2@Render

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	mov	r8d, 8
	lea	rdx, OFFSET FLAT:??_C@_08IDKDJODB@Element_@
	call	memcmp

; 1423 :         return _Traits::compare(_Mydata, _Right._Mydata, _Rightsize) == 0;

	test	eax, eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 32   : 					if (!Def.DisplayName.starts_with("Element_") || AINBCategory == AINBNodeDefMgr::NodeDef::CategoryEnum::Logic)

	jne	$LN2@Render
	cmp	BYTE PTR ?AINBCategory@PopupAddAINBNode@@3W4CategoryEnum@NodeDef@AINBNodeDefMgr@@A, 1 ; PopupAddAINBNode::AINBCategory
	je	$LN2@Render
$LN8@Render:

; 37   : 				if (Name.length() > 0 && Util::StringToLowerCase(Def.DisplayName).find(Util::StringToLowerCase(Name)) == std::string::npos) continue;

	cmp	QWORD PTR ?Name@PopupAddAINBNode@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, 0
	jbe	SHORT $LN230@Render
	mov	rdx, rbx
	lea	rcx, QWORD PTR $T11[rbp-169]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rdx, rax
	lea	rcx, QWORD PTR $T10[rbp-169]
	call	?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Util::StringToLowerCase
	mov	rdi, rax
	or	esi, 1
	mov	DWORD PTR $T3[rbp-169], esi
	mov	rdx, r12
	lea	rcx, QWORD PTR $T9[rbp-169]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rdx, rax
	lea	rcx, QWORD PTR $T13[rbp-169]
	call	?StringToLowerCase@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Util::StringToLowerCase
	or	esi, 2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4343 :         return static_cast<size_type>(_Traits_find<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off,

	mov	rcx, QWORD PTR [rax+16]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rax+24], 16
	jb	SHORT $LN88@Render

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rax]
$LN88@Render:

; 4343 :         return static_cast<size_type>(_Traits_find<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off,

	mov	rdx, QWORD PTR [rdi+16]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdi+24], 16
	jb	SHORT $LN93@Render

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdi, QWORD PTR [rdi]
$LN93@Render:

; 4343 :         return static_cast<size_type>(_Traits_find<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off,

	mov	QWORD PTR [rsp+32], rcx
	mov	r9, rax
	xor	r8d, r8d
	mov	rcx, rdi
	call	??$_Traits_find@U?$char_traits@D@std@@@std@@YA_KQEBD_K101@Z ; std::_Traits_find<std::char_traits<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 37   : 				if (Name.length() > 0 && Util::StringToLowerCase(Def.DisplayName).find(Util::StringToLowerCase(Name)) == std::string::npos) continue;

	cmp	rax, -1
	jne	SHORT $LN230@Render
	mov	dil, 1
	jmp	SHORT $LN16@Render
$LN230@Render:
	xor	dil, dil
$LN16@Render:
	test	sil, 2
	je	SHORT $LN102@Render
	and	esi, -3
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T13[rbp-145]
	cmp	rdx, 16
	jb	SHORT $LN109@Render

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T13[rbp-169]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN121@Render

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN118@Render
$LN121@Render:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN109@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T13[rbp-153], r13

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T13[rbp-145], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T13[rbp-169], 0
$LN102@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 37   : 				if (Name.length() > 0 && Util::StringToLowerCase(Def.DisplayName).find(Util::StringToLowerCase(Name)) == std::string::npos) continue;

	test	sil, 1
	je	SHORT $LN139@Render
	and	esi, -2
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR $T10[rbp-145]
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN139@Render

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T10[rbp-169]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN151@Render

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN148@Render
$LN151@Render:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN139@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 37   : 				if (Name.length() > 0 && Util::StringToLowerCase(Def.DisplayName).find(Util::StringToLowerCase(Name)) == std::string::npos) continue;

	test	dil, dil
	jne	SHORT $LN2@Render
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	QWORD PTR $T7[rbp-169], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rbx

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rbx+24], 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN227@Render

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx]
$LN227@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 39   : 				if (ImGui::Selectable(Def.DisplayName.c_str()))

	lea	r9, QWORD PTR $T7[rbp-169]
	xor	r8d, r8d
	xor	edx, edx
	call	?Selectable@ImGui@@YA_NPEBD_NHAEBUImVec2@@@Z ; ImGui::Selectable
	test	al, al
	je	SHORT $LN2@Render
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3156 :         if (this == _STD addressof(_Right)) {

	cmp	r12, rbx
	je	SHORT $LN2@Render

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, rbx

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rbx+24], 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN193@Render

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rbx]
$LN193@Render:

; 3192 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, QWORD PTR [rbx+16]
	mov	rcx, r12
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN2@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 28   : 			for (AINBNodeDefMgr::NodeDef& Def : AINBNodeDefMgr::NodeDefinitions)

	add	r14, 248				; 000000f8H
	add	rbx, 248				; 000000f8H
	cmp	r14, r15
	jne	$LL4@Render
$LN229@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5786 :     EndChild();

	call	?EndChild@ImGui@@YAXXZ			; ImGui::EndChild
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 6690 :     EndGroup(); // This is only required to be able to do IsItemXXX query on the whole ListBox including label

	call	?EndGroup@ImGui@@YAXXZ			; ImGui::EndGroup
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 46   : 			ImGui::Checkbox("Show unallowed nodes (those nodes won't work)", &ShowUnallowedNodes);

	lea	rdx, OFFSET FLAT:?ShowUnallowedNodes@PopupAddAINBNode@@3_NA ; PopupAddAINBNode::ShowUnallowedNodes
	lea	rcx, OFFSET FLAT:??_C@_0CO@MLFKAMKD@Show?5unallowed?5nodes?5?$CIthose?5nod@
	call	?Checkbox@ImGui@@YA_NPEBDPEA_N@Z	; ImGui::Checkbox
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	QWORD PTR $T6[rbp-169], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 723  :     return ButtonEx(label, size_arg, ImGuiButtonFlags_None);

	xor	r8d, r8d
	lea	rdx, QWORD PTR $T6[rbp-169]
	lea	rcx, OFFSET FLAT:??_C@_03LDFMNCOE@Add@
	call	?ButtonEx@ImGui@@YA_NPEBDAEBUImVec2@@H@Z ; ImGui::ButtonEx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 48   : 			if (ImGui::Button("Add"))

	test	al, al
	je	SHORT $LN12@Render

; 49   : 			{
; 50   : 				Func(Name);

	mov	rbx, QWORD PTR ?Func@PopupAddAINBNode@@3P6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZEA ; PopupAddAINBNode::Func
	mov	rdx, r12
	lea	rcx, QWORD PTR $T8[rbp-169]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rcx, rax
	call	rbx

; 51   : 				IsOpen = false;

	mov	BYTE PTR ?IsOpen@PopupAddAINBNode@@3_NA, 0 ; PopupAddAINBNode::IsOpen

; 52   : 				Func = nullptr;

	mov	QWORD PTR ?Func@PopupAddAINBNode@@3P6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZEA, r13 ; PopupAddAINBNode::Func
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	rcx, r12
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN12@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 55   : 			ImGui::SameLine();

	movss	xmm1, DWORD PTR __real@bf800000
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	QWORD PTR $T5[rbp-169], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 723  :     return ButtonEx(label, size_arg, ImGuiButtonFlags_None);

	xor	r8d, r8d
	lea	rdx, QWORD PTR $T5[rbp-169]
	lea	rcx, OFFSET FLAT:??_C@_06HCFIKKEA@Return@
	call	?ButtonEx@ImGui@@YA_NPEBDAEBUImVec2@@H@Z ; ImGui::ButtonEx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 56   : 			if (ImGui::Button("Return"))

	test	al, al
	je	SHORT $LN13@Render

; 57   : 			{
; 58   : 				IsOpen = false;

	mov	BYTE PTR ?IsOpen@PopupAddAINBNode@@3_NA, 0 ; PopupAddAINBNode::IsOpen

; 59   : 				Func = nullptr;

	mov	QWORD PTR ?Func@PopupAddAINBNode@@3P6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZEA, r13 ; PopupAddAINBNode::Func
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	rcx, r12
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN13@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 11217:     ImGuiContext& g = *GImGui;

	mov	rbx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui

; 11218:     ImGuiWindow* window = g.CurrentWindow;

	mov	rcx, QWORD PTR [rbx+16408]

; 11219:     IM_ASSERT(window->Flags & ImGuiWindowFlags_Popup);  // Mismatched BeginPopup()/EndPopup() calls
; 11220:     IM_ASSERT(g.BeginPopupStack.Size > 0);
; 11221: 
; 11222:     // Make all menus and popups wrap around for now, may need to expose that policy (e.g. focus scope could include wrap/loop policy flags used by new move requests)
; 11223:     if (g.NavWindow == window)

	cmp	QWORD PTR [rbx+19096], rcx
	jne	SHORT $LN31@Render

; 11908:     if (g.NavWindow == window && g.NavMoveScoringItems && g.NavLayer == ImGuiNavLayer_Main)

	cmp	BYTE PTR [rbx+19217], 0
	je	SHORT $LN31@Render
	cmp	DWORD PTR [rbx+19152], 0
	jne	SHORT $LN31@Render

; 11909:         g.NavMoveFlags = (g.NavMoveFlags & ~ImGuiNavMoveFlags_WrapMask_) | wrap_flags;

	mov	eax, DWORD PTR [rbx+19220]
	and	eax, -14
	or	eax, 2
	mov	DWORD PTR [rbx+19220], eax
$LN31@Render:

; 11228:     if (window->Flags & ImGuiWindowFlags_ChildWindow)

	test	DWORD PTR [rcx+20], 16777216		; 01000000H
	je	SHORT $LN28@Render

; 11229:         g.WithinEndChild = true;

	mov	BYTE PTR [rbx+16258], 1
$LN28@Render:

; 11230:     End();

	call	?End@ImGui@@YAXXZ			; ImGui::End

; 11231:     g.WithinEndChild = false;

	mov	BYTE PTR [rbx+16258], 0
$LN5@Render:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 67   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-169]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+224]
	mov	rbx, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rdi, QWORD PTR [r11+64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
$LN118@Render:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN148@Render:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN232@Render:
?Render@PopupAddAINBNode@@YAXXZ ENDP			; PopupAddAINBNode::Render
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 72
$T6 = 72
$T7 = 72
$T8 = 88
$T9 = 88
$T10 = 120
$T11 = 152
cb_user_data$12 = 184
$T13 = 184
__$ArrayPad$ = 216
?dtor$1@?0??Render@PopupAddAINBNode@@YAXXZ@4HA PROC	; `PopupAddAINBNode::Render'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T3[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN19@dtor$1
	and	DWORD PTR $T3[rbp], -2
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN19@dtor$1:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??Render@PopupAddAINBNode@@YAXXZ@4HA ENDP	; `PopupAddAINBNode::Render'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp
;	COMDAT ?Open@PopupAddAINBNode@@YAXP6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z
_TEXT	SEGMENT
Callback$dead$ = 48
?Open@PopupAddAINBNode@@YAXP6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z PROC ; PopupAddAINBNode::Open, COMDAT

; 70   : {

$LN54:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	xor	r8d, r8d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 71   : 	IsOpen = true;

	mov	BYTE PTR ?IsOpen@PopupAddAINBNode@@3_NA, 1 ; PopupAddAINBNode::IsOpen
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3395 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	lea	rcx, OFFSET FLAT:?Name@PopupAddAINBNode@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; PopupAddAINBNode::Name
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR ?AINB@UIAINBEditor@@3VAINBFile@@A+64, 16

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rbx, OFFSET FLAT:?AINB@UIAINBEditor@@3VAINBFile@@A+40

; 4590 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Ptr, _Traits::length(_Ptr));

	mov	rdi, QWORD PTR ?AINB@UIAINBEditor@@3VAINBFile@@A+56
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 73   : 	Func = Callback;

	lea	rax, OFFSET FLAT:?<lambda_invoker_cdecl>@<lambda_1>@?6??DrawAinbEditorWindow@UIAINBEditor@@YAXXZ@SA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; `UIAINBEditor::DrawAinbEditorWindow'::`7'::<lambda_1>::<lambda_invoker_cdecl>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	mov	rcx, rbx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 73   : 	Func = Callback;

	mov	QWORD PTR ?Func@PopupAddAINBNode@@3P6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@ZEA, rax ; PopupAddAINBNode::Func
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmovae	rcx, QWORD PTR ?AINB@UIAINBEditor@@3VAINBFile@@A+40
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 74   : 	AINBCategory = AINBNodeDefMgr::NodeDef::CategoryEnum::Logic;

	mov	BYTE PTR ?AINBCategory@PopupAddAINBNode@@3W4CategoryEnum@NodeDef@AINBNodeDefMgr@@A, 1 ; PopupAddAINBNode::AINBCategory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	cmp	rdi, 2
	jne	SHORT $LN2@Open

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	mov	r8, rdi
	lea	rdx, OFFSET FLAT:??_C@_02FAFNDFFG@AI@
	call	memcmp

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	test	eax, eax
	jne	SHORT $LN2@Open
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 75   : 	if (UIAINBEditor::AINB.Header.FileCategory == "AI") AINBCategory = AINBNodeDefMgr::NodeDef::CategoryEnum::AI;

	mov	BYTE PTR ?AINBCategory@PopupAddAINBNode@@3W4CategoryEnum@NodeDef@AINBNodeDefMgr@@A, al ; PopupAddAINBNode::AINBCategory

; 77   : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Open:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR ?AINB@UIAINBEditor@@3VAINBFile@@A+64, 16

; 2236 :         if (_Large_string_engaged()) {

	cmovae	rbx, QWORD PTR ?AINB@UIAINBEditor@@3VAINBFile@@A+40

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	cmp	rdi, 8
	jne	SHORT $LN4@Open

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	mov	r8, rdi
	lea	rdx, OFFSET FLAT:??_C@_08DOCONEG@Sequence@
	mov	rcx, rbx
	call	memcmp

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	test	eax, eax
	jne	SHORT $LN4@Open
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\PopupAddAINBNode.cpp

; 76   : 	else if (UIAINBEditor::AINB.Header.FileCategory == "Sequence") AINBCategory = AINBNodeDefMgr::NodeDef::CategoryEnum::Sequence;

	mov	BYTE PTR ?AINBCategory@PopupAddAINBNode@@3W4CategoryEnum@NodeDef@AINBNodeDefMgr@@A, 2 ; PopupAddAINBNode::AINBCategory
$LN4@Open:

; 77   : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Open@PopupAddAINBNode@@YAXP6AXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@Z ENDP ; PopupAddAINBNode::Open
_TEXT	ENDS
END

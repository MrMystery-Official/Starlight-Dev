; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0GG@KMDGDKEI@H?3?2Paul?2switchemulator?2Zelda?5To@ ; `string'
PUBLIC	??_C@_0BK@IKKJIOBC@Log?5message?5was?5truncated@ ; `string'
PUBLIC	??_C@_0EI@FJNBKBB@rcBuildCompactHeightfield?3?5Heig@ ; `string'
PUBLIC	??_C@_0DK@BKKBEIJO@rcBuildCompactHeightfield?3?5Out?5@ ; `string'
PUBLIC	??_C@_0DK@HELMONJH@rcBuildCompactHeightfield?3?5Out?5@ ; `string'
PUBLIC	??_C@_0DK@HMANMLNE@rcBuildCompactHeightfield?3?5Out?5@ ; `string'
PUBLIC	?offset@?1??rcGetDirOffsetY@@YAHH@Z@4QBHB	; `rcGetDirOffsetY'::`2'::offset
PUBLIC	?offset@?1??rcGetDirOffsetX@@YAHH@Z@4QBHB	; `rcGetDirOffsetX'::`2'::offset
;	COMDAT ?offset@?1??rcGetDirOffsetX@@YAHH@Z@4QBHB
CONST	SEGMENT
?offset@?1??rcGetDirOffsetX@@YAHH@Z@4QBHB DD 0ffffffffH	; `rcGetDirOffsetX'::`2'::offset
	DD	00H
	DD	01H
	DD	00H
CONST	ENDS
;	COMDAT ?offset@?1??rcGetDirOffsetY@@YAHH@Z@4QBHB
CONST	SEGMENT
?offset@?1??rcGetDirOffsetY@@YAHH@Z@4QBHB DD 00H	; `rcGetDirOffsetY'::`2'::offset
	DD	01H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ??_C@_0DK@HMANMLNE@rcBuildCompactHeightfield?3?5Out?5@
CONST	SEGMENT
??_C@_0DK@HMANMLNE@rcBuildCompactHeightfield?3?5Out?5@ DB 'rcBuildCompact'
	DB	'Heightfield: Out of memory ''chf.cells'' (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@HELMONJH@rcBuildCompactHeightfield?3?5Out?5@
CONST	SEGMENT
??_C@_0DK@HELMONJH@rcBuildCompactHeightfield?3?5Out?5@ DB 'rcBuildCompact'
	DB	'Heightfield: Out of memory ''chf.spans'' (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@BKKBEIJO@rcBuildCompactHeightfield?3?5Out?5@
CONST	SEGMENT
??_C@_0DK@BKKBEIJO@rcBuildCompactHeightfield?3?5Out?5@ DB 'rcBuildCompact'
	DB	'Heightfield: Out of memory ''chf.areas'' (%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@FJNBKBB@rcBuildCompactHeightfield?3?5Heig@
CONST	SEGMENT
??_C@_0EI@FJNBKBB@rcBuildCompactHeightfield?3?5Heig@ DB 'rcBuildCompactHe'
	DB	'ightfield: Heightfield has too many layers %d (max: %d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IKKJIOBC@Log?5message?5was?5truncated@
CONST	SEGMENT
??_C@_0BK@IKKJIOBC@Log?5message?5was?5truncated@ DB 'Log message was trun'
	DB	'cated', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0GG@KMDGDKEI@H?3?2Paul?2switchemulator?2Zelda?5To@
CONST	SEGMENT
??_C@_0GG@KMDGDKEI@H?3?2Paul?2switchemulator?2Zelda?5To@ DB 'H:\Paul\swit'
	DB	'chemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recast'
	DB	'navigation\recast\Recast.cpp', 00H		; `string'
PUBLIC	??_GrcPolyMesh@@QEAAPEAXI@Z			; rcPolyMesh::`scalar deleting destructor'
PUBLIC	??_GrcHeightfield@@QEAAPEAXI@Z			; rcHeightfield::`scalar deleting destructor'
PUBLIC	??$rcMax@H@@YAHHH@Z				; rcMax<int>
PUBLIC	??$rcAbs@H@@YAHH@Z				; rcAbs<int>
PUBLIC	??$rcMin@I@@YAIII@Z				; rcMin<unsigned int>
PUBLIC	??$rcMax@G@@YAGGG@Z				; rcMax<unsigned short>
PUBLIC	??$rcClamp@H@@YAHHHH@Z				; rcClamp<int>
PUBLIC	??$rcIgnoreUnused@PEAVrcContext@@@@YAXAEBQEAVrcContext@@@Z ; rcIgnoreUnused<rcContext *>
PUBLIC	??$rcSqr@M@@YAMM@Z				; rcSqr<float>
PUBLIC	??$rcMax@M@@YAMMM@Z				; rcMax<float>
PUBLIC	??$rcMin@M@@YAMMM@Z				; rcMin<float>
PUBLIC	?rcGetHeightFieldSpanCount@@YAHPEAVrcContext@@AEBUrcHeightfield@@@Z ; rcGetHeightFieldSpanCount
PUBLIC	??1rcPolyMesh@@QEAA@XZ				; rcPolyMesh::~rcPolyMesh
PUBLIC	??0rcPolyMesh@@QEAA@XZ				; rcPolyMesh::rcPolyMesh
PUBLIC	??1rcContourSet@@QEAA@XZ			; rcContourSet::~rcContourSet
PUBLIC	??0rcContourSet@@QEAA@XZ			; rcContourSet::rcContourSet
PUBLIC	??1rcHeightfieldLayerSet@@QEAA@XZ		; rcHeightfieldLayerSet::~rcHeightfieldLayerSet
PUBLIC	??1rcCompactHeightfield@@QEAA@XZ		; rcCompactHeightfield::~rcCompactHeightfield
PUBLIC	??0rcCompactHeightfield@@QEAA@XZ		; rcCompactHeightfield::rcCompactHeightfield
PUBLIC	??1rcHeightfield@@QEAA@XZ			; rcHeightfield::~rcHeightfield
PUBLIC	??0rcHeightfield@@QEAA@XZ			; rcHeightfield::rcHeightfield
PUBLIC	?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ	; rcContext::log
PUBLIC	?rcSqrt@@YAMM@Z					; rcSqrt
PUBLIC	??3@YAXPEAXAEBUrcNewTag@@0@Z			; operator delete
PUBLIC	??2@YAPEAX_KAEBUrcNewTag@@PEAX@Z		; operator new
PUBLIC	?rcGetDirOffsetY@@YAHH@Z			; rcGetDirOffsetY
PUBLIC	?rcGetDirOffsetX@@YAHH@Z			; rcGetDirOffsetX
PUBLIC	?rcSetCon@@YAXAEAUrcCompactSpan@@HH@Z		; rcSetCon
PUBLIC	?rcVnormalize@@YAXPEAM@Z			; rcVnormalize
PUBLIC	?rcVmax@@YAXPEAMPEBM@Z				; rcVmax
PUBLIC	?rcVmin@@YAXPEAMPEBM@Z				; rcVmin
PUBLIC	?rcVsub@@YAXPEAMPEBM1@Z				; rcVsub
PUBLIC	?rcVcross@@YAXPEAMPEBM1@Z			; rcVcross
PUBLIC	??1rcScopedTimer@@QEAA@XZ			; rcScopedTimer::~rcScopedTimer
PUBLIC	??0rcScopedTimer@@QEAA@PEAVrcContext@@W4rcTimerLabel@@@Z ; rcScopedTimer::rcScopedTimer
PUBLIC	?stopTimer@rcContext@@QEAAXW4rcTimerLabel@@@Z	; rcContext::stopTimer
PUBLIC	?startTimer@rcContext@@QEAAXW4rcTimerLabel@@@Z	; rcContext::startTimer
PUBLIC	?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z ; rcBuildCompactHeightfield
PUBLIC	?rcAllocContourSet@@YAPEAUrcContourSet@@XZ	; rcAllocContourSet
PUBLIC	?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z		; rcFreePolyMesh
PUBLIC	?doResetLog@rcContext@@MEAAXXZ			; rcContext::doResetLog
PUBLIC	?rcCalcGridSize@@YAXPEBM0MPEAH1@Z		; rcCalcGridSize
PUBLIC	?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z ; rcMarkWalkableTriangles
PUBLIC	?rcAllocPolyMesh@@YAPEAUrcPolyMesh@@XZ		; rcAllocPolyMesh
PUBLIC	?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z	; rcFreeHeightField
PUBLIC	?rcCreateHeightfield@@YA_NPEAVrcContext@@AEAUrcHeightfield@@HHPEBM2MM@Z ; rcCreateHeightfield
PUBLIC	?rcAllocHeightfield@@YAPEAUrcHeightfield@@XZ	; rcAllocHeightfield
PUBLIC	?rcAllocCompactHeightfield@@YAPEAUrcCompactHeightfield@@XZ ; rcAllocCompactHeightfield
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GrcPolyMesh@@QEAAPEAXI@Z DD imagerel $LN45
	DD	imagerel $LN45+93
	DD	imagerel $unwind$??_GrcPolyMesh@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GrcHeightfield@@QEAAPEAXI@Z DD imagerel $LN30
	DD	imagerel $LN30+72
	DD	imagerel $unwind$??_GrcHeightfield@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z DD imagerel ??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z
	DD	imagerel ??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z+103
	DD	imagerel $unwind$??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$rcNew@UrcPolyMesh@@@?A0x5b7010ac@@YAPEAUrcPolyMesh@@W4rcAllocHint@@@Z DD imagerel ??$rcNew@UrcPolyMesh@@@?A0x5b7010ac@@YAPEAUrcPolyMesh@@W4rcAllocHint@@@Z
	DD	imagerel ??$rcNew@UrcPolyMesh@@@?A0x5b7010ac@@YAPEAUrcPolyMesh@@W4rcAllocHint@@@Z+83
	DD	imagerel $unwind$??$rcNew@UrcPolyMesh@@@?A0x5b7010ac@@YAPEAUrcPolyMesh@@W4rcAllocHint@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$rcNew@UrcContourSet@@@?A0x5b7010ac@@YAPEAUrcContourSet@@W4rcAllocHint@@@Z DD imagerel ??$rcNew@UrcContourSet@@@?A0x5b7010ac@@YAPEAUrcContourSet@@W4rcAllocHint@@@Z
	DD	imagerel ??$rcNew@UrcContourSet@@@?A0x5b7010ac@@YAPEAUrcContourSet@@W4rcAllocHint@@@Z+66
	DD	imagerel $unwind$??$rcNew@UrcContourSet@@@?A0x5b7010ac@@YAPEAUrcContourSet@@W4rcAllocHint@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$rcNew@UrcCompactHeightfield@@@?A0x5b7010ac@@YAPEAUrcCompactHeightfield@@W4rcAllocHint@@@Z DD imagerel ??$rcNew@UrcCompactHeightfield@@@?A0x5b7010ac@@YAPEAUrcCompactHeightfield@@W4rcAllocHint@@@Z
	DD	imagerel ??$rcNew@UrcCompactHeightfield@@@?A0x5b7010ac@@YAPEAUrcCompactHeightfield@@W4rcAllocHint@@@Z+82
	DD	imagerel $unwind$??$rcNew@UrcCompactHeightfield@@@?A0x5b7010ac@@YAPEAUrcCompactHeightfield@@W4rcAllocHint@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z DD imagerel ??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z
	DD	imagerel ??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z+89
	DD	imagerel $unwind$??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$rcNew@UrcHeightfield@@@?A0x5b7010ac@@YAPEAUrcHeightfield@@W4rcAllocHint@@@Z DD imagerel ??$rcNew@UrcHeightfield@@@?A0x5b7010ac@@YAPEAUrcHeightfield@@W4rcAllocHint@@@Z
	DD	imagerel ??$rcNew@UrcHeightfield@@@?A0x5b7010ac@@YAPEAUrcHeightfield@@W4rcAllocHint@@@Z+67
	DD	imagerel $unwind$??$rcNew@UrcHeightfield@@@?A0x5b7010ac@@YAPEAUrcHeightfield@@W4rcAllocHint@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?calcTriNormal@@YAXPEBM00PEAM@Z DD imagerel ?calcTriNormal@@YAXPEBM00PEAM@Z
	DD	imagerel ?calcTriNormal@@YAXPEBM00PEAM@Z+269
	DD	imagerel $unwind$?calcTriNormal@@YAXPEBM00PEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1rcPolyMesh@@QEAA@XZ DD imagerel $LN40
	DD	imagerel $LN40+95
	DD	imagerel $unwind$??1rcPolyMesh@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1rcContourSet@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+111
	DD	imagerel $unwind$??1rcContourSet@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1rcHeightfieldLayerSet@@QEAA@XZ DD imagerel $LN40
	DD	imagerel $LN40+131
	DD	imagerel $unwind$??1rcHeightfieldLayerSet@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1rcCompactHeightfield@@QEAA@XZ DD imagerel $LN33
	DD	imagerel $LN33+81
	DD	imagerel $unwind$??1rcCompactHeightfield@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1rcHeightfield@@QEAA@XZ DD imagerel $LN25
	DD	imagerel $LN25+69
	DD	imagerel $unwind$??1rcHeightfield@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ DD imagerel $LN12
	DD	imagerel $LN12+57
	DD	imagerel $unwind$?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ DD imagerel $LN12+57
	DD	imagerel $LN12+139
	DD	imagerel $chain$0$?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ DD imagerel $LN12+139
	DD	imagerel $LN12+224
	DD	imagerel $chain$1$?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rcVnormalize@@YAXPEAM@Z DD imagerel $LN15
	DD	imagerel $LN15+158
	DD	imagerel $unwind$?rcVnormalize@@YAXPEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1rcScopedTimer@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+31
	DD	imagerel $unwind$??1rcScopedTimer@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0rcScopedTimer@@QEAA@PEAVrcContext@@W4rcTimerLabel@@@Z DD imagerel $LN9
	DD	imagerel $LN9+46
	DD	imagerel $unwind$??0rcScopedTimer@@QEAA@PEAVrcContext@@W4rcTimerLabel@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z DD imagerel $LN190
	DD	imagerel $LN190+1888
	DD	imagerel $unwind$?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rcAllocContourSet@@YAPEAUrcContourSet@@XZ DD imagerel $LN19
	DD	imagerel $LN19+66
	DD	imagerel $unwind$?rcAllocContourSet@@YAPEAUrcContourSet@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z DD imagerel $LN57
	DD	imagerel $LN57+103
	DD	imagerel $unwind$?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z DD imagerel $LN35
	DD	imagerel $LN35+78
	DD	imagerel $unwind$?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z DD imagerel $LN35+78
	DD	imagerel $LN35+424
	DD	imagerel $chain$5$?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z DD imagerel $LN35+424
	DD	imagerel $LN35+448
	DD	imagerel $chain$6$?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rcAllocPolyMesh@@YAPEAUrcPolyMesh@@XZ DD imagerel $LN19
	DD	imagerel $LN19+83
	DD	imagerel $unwind$?rcAllocPolyMesh@@YAPEAUrcPolyMesh@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z DD imagerel $LN42
	DD	imagerel $LN42+89
	DD	imagerel $unwind$?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rcCreateHeightfield@@YA_NPEAVrcContext@@AEAUrcHeightfield@@HHPEBM2MM@Z DD imagerel $LN16
	DD	imagerel $LN16+151
	DD	imagerel $unwind$?rcCreateHeightfield@@YA_NPEAVrcContext@@AEAUrcHeightfield@@HHPEBM2MM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rcAllocHeightfield@@YAPEAUrcHeightfield@@XZ DD imagerel $LN19
	DD	imagerel $LN19+67
	DD	imagerel $unwind$?rcAllocHeightfield@@YAPEAUrcHeightfield@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rcAllocCompactHeightfield@@YAPEAUrcCompactHeightfield@@XZ DD imagerel $LN19
	DD	imagerel $LN19+82
	DD	imagerel $unwind$?rcAllocCompactHeightfield@@YAPEAUrcCompactHeightfield@@XZ
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rcAllocCompactHeightfield@@YAPEAUrcCompactHeightfield@@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rcAllocHeightfield@@YAPEAUrcHeightfield@@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rcCreateHeightfield@@YA_NPEAVrcContext@@AEAUrcHeightfield@@HHPEBM2MM@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z
	DD	imagerel $ip2state$?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z DD 040f11H
	DD	06340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rcAllocPolyMesh@@YAPEAUrcPolyMesh@@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z DD 021H
	DD	imagerel $LN35
	DD	imagerel $LN35+78
	DD	imagerel $unwind$?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z DD 0c3421H
	DD	039834H
	DD	04882eH
	DD	057828H
	DD	06681fH
	DD	0117412H
	DD	0103408H
	DD	imagerel $LN35
	DD	imagerel $LN35+78
	DD	imagerel $unwind$?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z DD 082901H
	DD	02a829H
	DD	0136410H
	DD	0125410H
	DD	0e00cd210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z
	DD	imagerel $ip2state$?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rcAllocContourSet@@YAPEAUrcContourSet@@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z DB 08H
	DB	0c6H
	DB	00H
	DB	'X'
	DB	02H
	DB	'u', 018H
	DB	0aH
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z DB 0aH
	DB	0aH
	DD	imagerel ??1rcScopedTimer@@QEAA@XZ
	DB	041H
	DB	02H
	DB	040H
	DB	048H
	DB	050H
	DB	05eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z
	DD	imagerel $ip2state$?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z DD 0b1711H
	DD	01d3417H
	DD	0140117H
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0rcScopedTimer@@QEAA@PEAVrcContext@@W4rcTimerLabel@@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1rcScopedTimer@@QEAA@XZ DB 02H
	DB	','
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1rcScopedTimer@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1rcScopedTimer@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1rcScopedTimer@@QEAA@XZ DD 010419H
	DD	04204H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1rcScopedTimer@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rcVnormalize@@YAXPEAM@Z DD 083001H
	DD	028830H
	DD	037817H
	DD	04680bH
	DD	030029206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ DD 021H
	DD	imagerel $LN12
	DD	imagerel $LN12+57
	DD	imagerel $unwind$?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ DD 020421H
	DD	0495404H
	DD	imagerel $LN12
	DD	imagerel $LN12+57
	DD	imagerel $unwind$?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ DD 052719H
	DD	04a0115H
	DD	0600d700eH
	DD	0300cH
	DD	imagerel __GSHandlerCheck
	DD	0230H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1rcHeightfield@@QEAA@XZ DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1rcHeightfield@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1rcHeightfield@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1rcHeightfield@@QEAA@XZ DD 040a19H
	DD	06340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1rcHeightfield@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1rcCompactHeightfield@@QEAA@XZ DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1rcCompactHeightfield@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1rcCompactHeightfield@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1rcCompactHeightfield@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1rcCompactHeightfield@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1rcHeightfieldLayerSet@@QEAA@XZ DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1rcHeightfieldLayerSet@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1rcHeightfieldLayerSet@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1rcHeightfieldLayerSet@@QEAA@XZ DD 060f19H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1rcHeightfieldLayerSet@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1rcContourSet@@QEAA@XZ DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1rcContourSet@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1rcContourSet@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1rcContourSet@@QEAA@XZ DD 060f19H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1rcContourSet@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1rcPolyMesh@@QEAA@XZ DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1rcPolyMesh@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1rcPolyMesh@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1rcPolyMesh@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1rcPolyMesh@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?calcTriNormal@@YAXPEBM00PEAM@Z DD 0a6201H
	DD	029862H
	DD	038854H
	DD	047843H
	DD	056836H
	DD	03002b206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$rcNew@UrcHeightfield@@@?A0x5b7010ac@@YAPEAUrcHeightfield@@W4rcAllocHint@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z
	DD	imagerel $ip2state$??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z DD 040f11H
	DD	06340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$rcNew@UrcCompactHeightfield@@@?A0x5b7010ac@@YAPEAUrcCompactHeightfield@@W4rcAllocHint@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$rcNew@UrcContourSet@@@?A0x5b7010ac@@YAPEAUrcContourSet@@W4rcAllocHint@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$rcNew@UrcPolyMesh@@@?A0x5b7010ac@@YAPEAUrcPolyMesh@@W4rcAllocHint@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z
	DD	imagerel $ip2state$??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GrcHeightfield@@QEAAPEAXI@Z DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GrcHeightfield@@QEAAPEAXI@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_GrcHeightfield@@QEAAPEAXI@Z DB 068H
	DD	imagerel $stateUnwindMap$??_GrcHeightfield@@QEAAPEAXI@Z
	DD	imagerel $ip2state$??_GrcHeightfield@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GrcHeightfield@@QEAAPEAXI@Z DD 040a19H
	DD	06340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_GrcHeightfield@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??_GrcPolyMesh@@QEAAPEAXI@Z DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??_GrcPolyMesh@@QEAAPEAXI@Z DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??_GrcPolyMesh@@QEAAPEAXI@Z DB 068H
	DD	imagerel $stateUnwindMap$??_GrcPolyMesh@@QEAAPEAXI@Z
	DD	imagerel $ip2state$??_GrcPolyMesh@@QEAAPEAXI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GrcPolyMesh@@QEAAPEAXI@Z DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??_GrcPolyMesh@@QEAAPEAXI@Z
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?rcAllocCompactHeightfield@@YAPEAUrcCompactHeightfield@@XZ
_TEXT	SEGMENT
ptr$1 = 48
?rcAllocCompactHeightfield@@YAPEAUrcCompactHeightfield@@XZ PROC ; rcAllocCompactHeightfield, COMDAT

; 123  : {

$LN19:
	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	ecx, 96					; 00000060H
	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 35   : 	T* ptr = (T*)rcAlloc(sizeof(T), allocLifetime);

	mov	QWORD PTR ptr$1[rsp], rax

; 36   : 	::new(rcNewTag(), (void*)ptr) T();

	test	rax, rax
	je	SHORT $LN16@rcAllocCom

; 133  : : width()

	xor	edx, edx

; 134  : , height()
; 135  : , spanCount()
; 136  : , walkableHeight()
; 137  : , walkableClimb()
; 138  : , borderSize()
; 139  : , maxDistance()
; 140  : , maxRegions()
; 141  : , bmin()

	xor	ecx, ecx
	mov	QWORD PTR [rax], rdx
	mov	QWORD PTR [rax+8], rdx
	mov	QWORD PTR [rax+16], rdx
	mov	DWORD PTR [rax+24], edx
	mov	QWORD PTR [rax+28], rcx
	mov	DWORD PTR [rax+36], ecx

; 142  : , bmax()

	mov	QWORD PTR [rax+40], rcx
	mov	QWORD PTR [rax+48], rcx

; 143  : , cs()
; 144  : , ch()

	mov	DWORD PTR [rax+56], edx

; 145  : , cells()

	mov	QWORD PTR [rax+64], rdx

; 146  : , spans()

	mov	QWORD PTR [rax+72], rdx

; 147  : , dist()

	mov	QWORD PTR [rax+80], rdx

; 148  : , areas()

	mov	QWORD PTR [rax+88], rdx
$LN16@rcAllocCom:

; 124  : 	return rcNew<rcCompactHeightfield>(RC_ALLOC_PERM);
; 125  : }

	add	rsp, 40					; 00000028H
	ret	0
?rcAllocCompactHeightfield@@YAPEAUrcCompactHeightfield@@XZ ENDP ; rcAllocCompactHeightfield
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?rcAllocHeightfield@@YAPEAUrcHeightfield@@XZ
_TEXT	SEGMENT
ptr$1 = 48
?rcAllocHeightfield@@YAPEAUrcHeightfield@@XZ PROC	; rcAllocHeightfield, COMDAT

; 87   : {

$LN19:
	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	ecx, 64					; 00000040H
	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 35   : 	T* ptr = (T*)rcAlloc(sizeof(T), allocLifetime);

	mov	QWORD PTR ptr$1[rsp], rax

; 36   : 	::new(rcNewTag(), (void*)ptr) T();

	test	rax, rax
	je	SHORT $LN16@rcAllocHei

; 97   : : width()

	xor	edx, edx

; 98   : , height()
; 99   : , bmin()

	xor	ecx, ecx
	mov	QWORD PTR [rax], rdx
	mov	QWORD PTR [rax+8], rcx
	mov	DWORD PTR [rax+16], ecx

; 100  : , bmax()

	mov	QWORD PTR [rax+20], rcx
	mov	QWORD PTR [rax+28], rcx

; 101  : , cs()
; 102  : , ch()

	mov	DWORD PTR [rax+36], edx

; 103  : , spans()

	mov	QWORD PTR [rax+40], rdx

; 104  : , pools()

	mov	QWORD PTR [rax+48], rdx

; 105  : , freelist()

	mov	QWORD PTR [rax+56], rdx
$LN16@rcAllocHei:

; 88   : 	return rcNew<rcHeightfield>(RC_ALLOC_PERM);
; 89   : }

	add	rsp, 40					; 00000028H
	ret	0
?rcAllocHeightfield@@YAPEAUrcHeightfield@@XZ ENDP	; rcAllocHeightfield
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?rcCreateHeightfield@@YA_NPEAVrcContext@@AEAUrcHeightfield@@HHPEBM2MM@Z
_TEXT	SEGMENT
context$dead$ = 48
heightfield$ = 56
sizeX$ = 64
sizeZ$ = 72
minBounds$ = 80
maxBounds$ = 88
cellSize$ = 96
cellHeight$ = 104
?rcCreateHeightfield@@YA_NPEAVrcContext@@AEAUrcHeightfield@@HHPEBM2MM@Z PROC ; rcCreateHeightfield, COMDAT

; 309  : {

$LN16:
	push	rbx
	sub	rsp, 32					; 00000020H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 774  : 	dest[0] = v[0];

	mov	rcx, QWORD PTR minBounds$[rsp]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 309  : {

	mov	rbx, rdx

; 310  : 	rcIgnoreUnused(context);
; 311  : 
; 312  : 	heightfield.width = sizeX;
; 313  : 	heightfield.height = sizeZ;
; 314  : 	rcVcopy(heightfield.bmin, minBounds);
; 315  : 	rcVcopy(heightfield.bmax, maxBounds);
; 316  : 	heightfield.cs = cellSize;

	movss	xmm0, DWORD PTR cellSize$[rsp]

; 317  : 	heightfield.ch = cellHeight;

	movss	xmm1, DWORD PTR cellHeight$[rsp]
	mov	DWORD PTR [rdx], r8d
	mov	DWORD PTR [rdx+4], r9d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 774  : 	dest[0] = v[0];

	mov	eax, DWORD PTR [rcx]
	mov	DWORD PTR [rdx+8], eax

; 775  : 	dest[1] = v[1];

	mov	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR [rdx+12], eax

; 776  : 	dest[2] = v[2];

	mov	eax, DWORD PTR [rcx+8]

; 774  : 	dest[0] = v[0];

	mov	rcx, QWORD PTR maxBounds$[rsp]

; 776  : 	dest[2] = v[2];

	mov	DWORD PTR [rdx+16], eax

; 774  : 	dest[0] = v[0];

	mov	eax, DWORD PTR [rcx]
	mov	DWORD PTR [rdx+20], eax

; 775  : 	dest[1] = v[1];

	mov	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR [rdx+24], eax

; 776  : 	dest[2] = v[2];

	mov	eax, DWORD PTR [rcx+8]
	mov	DWORD PTR [rdx+28], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 318  : 	heightfield.spans = (rcSpan**)rcAlloc(sizeof(rcSpan*) * heightfield.width * heightfield.height, RC_ALLOC_PERM);

	movsxd	rcx, DWORD PTR [rdx+4]
	movsxd	rax, DWORD PTR [rdx]
	imul	rcx, rax
	movss	DWORD PTR [rdx+32], xmm0
	movss	DWORD PTR [rdx+36], xmm1
	shl	rcx, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 318  : 	heightfield.spans = (rcSpan**)rcAlloc(sizeof(rcSpan*) * heightfield.width * heightfield.height, RC_ALLOC_PERM);

	mov	QWORD PTR [rbx+40], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	rcx, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 319  : 	if (!heightfield.spans)

	test	rax, rax
	jne	SHORT $LN2@rcCreateHe

; 325  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN2@rcCreateHe:

; 320  : 	{
; 321  : 		return false;
; 322  : 	}
; 323  : 	memset(heightfield.spans, 0, sizeof(rcSpan*) * heightfield.width * heightfield.height);

	movsxd	r8, DWORD PTR [rbx+4]
	xor	edx, edx
	movsxd	rax, DWORD PTR [rbx]
	imul	r8, rax
	shl	r8, 3
	call	memset

; 324  : 	return true;

	mov	al, 1

; 325  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?rcCreateHeightfield@@YA_NPEAVrcContext@@AEAUrcHeightfield@@HHPEBM2MM@Z ENDP ; rcCreateHeightfield
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z
_TEXT	SEGMENT
heightfield$ = 48
?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z PROC	; rcFreeHeightField, COMDAT

; 92   : {

$LN42:

; 45   : 	if (ptr)

	test	rcx, rcx
	je	SHORT $LN39@rcFreeHeig
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 92   : {

	mov	rdi, rcx

; 112  : 	rcFree(spans);

	mov	rcx, QWORD PTR [rcx+40]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN35@rcFreeHeig

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN35@rcFreeHeig:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 114  : 	while (pools)

	mov	rcx, QWORD PTR [rdi+48]
	test	rcx, rcx
	je	SHORT $LN11@rcFreeHeig
	npad	6
$LL10@rcFreeHeig:

; 115  : 	{
; 116  : 		rcSpanPool* next = pools->next;

	mov	rbx, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 118  : 		pools = next;

	mov	QWORD PTR [rdi+48], rbx

; 114  : 	while (pools)

	mov	rcx, rbx
	test	rbx, rbx
	jne	SHORT $LL10@rcFreeHeig
$LN11@rcFreeHeig:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 28   : 	free(ptr);

	mov	rcx, rdi
	call	QWORD PTR __imp_free
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 94   : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN39@rcFreeHeig:
	ret	0
?rcFreeHeightField@@YAXPEAUrcHeightfield@@@Z ENDP	; rcFreeHeightField
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?rcAllocPolyMesh@@YAPEAUrcPolyMesh@@XZ
_TEXT	SEGMENT
ptr$1 = 48
?rcAllocPolyMesh@@YAPEAUrcPolyMesh@@XZ PROC		; rcAllocPolyMesh, COMDAT

; 223  : {

$LN19:
	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	ecx, 96					; 00000060H
	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 35   : 	T* ptr = (T*)rcAlloc(sizeof(T), allocLifetime);

	mov	QWORD PTR ptr$1[rsp], rax

; 36   : 	::new(rcNewTag(), (void*)ptr) T();

	test	rax, rax
	je	SHORT $LN16@rcAllocPol

; 233  : : verts()

	xor	edx, edx

; 234  : , polys()
; 235  : , regs()
; 236  : , flags()
; 237  : , areas()
; 238  : , nverts()
; 239  : , npolys()
; 240  : , maxpolys()
; 241  : , nvp()
; 242  : , bmin()

	xor	ecx, ecx
	mov	QWORD PTR [rax], rdx
	mov	QWORD PTR [rax+8], rdx
	mov	QWORD PTR [rax+16], rdx
	mov	QWORD PTR [rax+24], rdx
	mov	QWORD PTR [rax+32], rdx
	mov	QWORD PTR [rax+40], rdx
	mov	QWORD PTR [rax+48], rdx
	mov	QWORD PTR [rax+56], rcx
	mov	DWORD PTR [rax+64], ecx

; 243  : , bmax()

	mov	QWORD PTR [rax+68], rcx
	mov	QWORD PTR [rax+76], rcx

; 244  : , cs()
; 245  : , ch()

	mov	QWORD PTR [rax+84], rdx

; 246  : , borderSize()
; 247  : , maxEdgeError()

	mov	DWORD PTR [rax+92], edx
$LN16@rcAllocPol:

; 224  : 	return rcNew<rcPolyMesh>(RC_ALLOC_PERM);
; 225  : }

	add	rsp, 40					; 00000028H
	ret	0
?rcAllocPolyMesh@@YAPEAUrcPolyMesh@@XZ ENDP		; rcAllocPolyMesh
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z
_TEXT	SEGMENT
context$dead$ = 128
walkableSlopeAngle$ = 136
verts$ = 144
numVerts$dead$ = 152
tris$ = 160
numTris$ = 168
triAreaIDs$ = 176
?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z PROC ; rcMarkWalkableTriangles, COMDAT

; 340  : {

$LN35:
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	r14
	sub	rsp, 112				; 00000070H

; 341  : 	rcIgnoreUnused(context);
; 342  : 	rcIgnoreUnused(numVerts);
; 343  : 
; 344  : 	const float walkableThr = cosf(walkableSlopeAngle / 180.0f * RC_PI);

	divss	xmm1, DWORD PTR __real@43340000
	mov	rbp, QWORD PTR triAreaIDs$[rsp]
	mov	r14, r8
	movaps	XMMWORD PTR [rsp+32], xmm10
	mulss	xmm1, DWORD PTR __real@40490fdb
	movaps	xmm0, xmm1
	call	cosf

; 345  : 
; 346  : 	float norm[3];
; 347  : 
; 348  : 	for (int i = 0; i < numTris; ++i)

	movsxd	rsi, DWORD PTR numTris$[rsp]
	movaps	xmm10, xmm0
	test	rsi, rsi
	jle	$LN3@rcMarkWalk
	mov	QWORD PTR [rsp+128], rbx
	xor	ebx, ebx
	mov	QWORD PTR [rsp+136], rdi
	mov	rdi, QWORD PTR tris$[rsp]
	movaps	XMMWORD PTR [rsp+96], xmm6
	add	rdi, 4
	movaps	XMMWORD PTR [rsp+80], xmm7
	movaps	XMMWORD PTR [rsp+64], xmm8
	movaps	XMMWORD PTR [rsp+48], xmm9
	movss	xmm9, DWORD PTR __real@3f800000
	npad	5
$LL4@rcMarkWalk:

; 351  : 		calcTriNormal(&verts[tri[0] * 3], &verts[tri[1] * 3], &verts[tri[2] * 3], norm);

	mov	eax, DWORD PTR [rdi+4]
	lea	ecx, DWORD PTR [rax+rax*2]
	mov	eax, DWORD PTR [rdi]
	movsxd	r8, ecx
	lea	ecx, DWORD PTR [rax+rax*2]
	mov	eax, DWORD PTR [rdi-4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 746  : 	dest[2] = v1[2]-v2[2];

	movss	xmm2, DWORD PTR [r14+r8*4+8]
	movss	xmm4, DWORD PTR [r14+r8*4]
	movss	xmm7, DWORD PTR [r14+r8*4+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 351  : 		calcTriNormal(&verts[tri[0] * 3], &verts[tri[1] * 3], &verts[tri[2] * 3], norm);

	movsxd	rdx, ecx
	lea	eax, DWORD PTR [rax+rax*2]
	cdqe
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 744  : 	dest[0] = v1[0]-v2[0];

	movss	xmm6, DWORD PTR [r14+rdx*4]

; 746  : 	dest[2] = v1[2]-v2[2];

	subss	xmm2, DWORD PTR [r14+rax*4+8]
	subss	xmm7, DWORD PTR [r14+rax*4+4]
	subss	xmm4, DWORD PTR [r14+rax*4]

; 744  : 	dest[0] = v1[0]-v2[0];

	subss	xmm6, DWORD PTR [r14+rax*4]

; 746  : 	dest[2] = v1[2]-v2[2];

	movss	xmm3, DWORD PTR [r14+rdx*4+8]
	subss	xmm3, DWORD PTR [r14+rax*4+8]
	movss	xmm5, DWORD PTR [r14+rdx*4+4]
	movaps	xmm1, xmm2

; 745  : 	dest[1] = v1[1]-v2[1];

	subss	xmm5, DWORD PTR [r14+rax*4+4]

; 701  : 	dest[0] = v1[1]*v2[2] - v1[2]*v2[1];

	movaps	xmm0, xmm7

; 702  : 	dest[1] = v1[2]*v2[0] - v1[0]*v2[2];

	mulss	xmm2, xmm6
	movaps	xmm8, xmm4
	mulss	xmm7, xmm6
	mulss	xmm8, xmm3

; 746  : 	dest[2] = v1[2]-v2[2];

	mulss	xmm1, xmm5

; 702  : 	dest[1] = v1[2]*v2[0] - v1[0]*v2[2];

	subss	xmm8, xmm2
	mulss	xmm0, xmm3

; 703  : 	dest[2] = v1[0]*v2[1] - v1[1]*v2[0];

	mulss	xmm4, xmm5
	subss	xmm1, xmm0
	xorps	xmm0, xmm0

; 674  : template<class T> inline T rcSqr(T a) { return a * a; }

	movaps	xmm2, xmm8
	mulss	xmm2, xmm8

; 703  : 	dest[2] = v1[0]*v2[1] - v1[1]*v2[0];

	subss	xmm7, xmm4

; 674  : template<class T> inline T rcSqr(T a) { return a * a; }

	mulss	xmm1, xmm1
	mulss	xmm7, xmm7

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	addss	xmm2, xmm1
	addss	xmm2, xmm7
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 55   : 	return sqrtf(x);

	ucomiss	xmm0, xmm2
	ja	SHORT $LN29@rcMarkWalk
	xorps	xmm0, xmm0
	sqrtss	xmm0, xmm2
	jmp	SHORT $LN30@rcMarkWalk
$LN29@rcMarkWalk:
	movaps	xmm0, xmm2
	call	sqrtf
$LN30@rcMarkWalk:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	movaps	xmm1, xmm9
	divss	xmm1, xmm0

; 808  : 	v[0] *= d;

	mulss	xmm1, xmm8

; 809  : 	v[1] *= d;
; 810  : 	v[2] *= d;

	comiss	xmm1, xmm10
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 353  : 		if (norm[1] > walkableThr)

	jbe	SHORT $LN2@rcMarkWalk

; 354  : 		{
; 355  : 			triAreaIDs[i] = RC_WALKABLE_AREA;

	mov	BYTE PTR [rbx+rbp], 63			; 0000003fH
$LN2@rcMarkWalk:

; 345  : 
; 346  : 	float norm[3];
; 347  : 
; 348  : 	for (int i = 0; i < numTris; ++i)

	inc	rbx
	add	rdi, 12
	cmp	rbx, rsi
	jl	$LL4@rcMarkWalk
	movaps	xmm9, XMMWORD PTR [rsp+48]
	movaps	xmm8, XMMWORD PTR [rsp+64]
	movaps	xmm7, XMMWORD PTR [rsp+80]
	movaps	xmm6, XMMWORD PTR [rsp+96]
	mov	rdi, QWORD PTR [rsp+136]
	mov	rbx, QWORD PTR [rsp+128]
$LN3@rcMarkWalk:

; 356  : 		}
; 357  : 	}
; 358  : }

	lea	r11, QWORD PTR [rsp+112]
	mov	rbp, QWORD PTR [r11+32]
	mov	rsi, QWORD PTR [r11+40]
	movaps	xmm10, XMMWORD PTR [r11-80]
	mov	rsp, r11
	pop	r14
	ret	0
?rcMarkWalkableTriangles@@YAXPEAVrcContext@@MPEBMHPEBHHPEAE@Z ENDP ; rcMarkWalkableTriangles
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?rcCalcGridSize@@YAXPEBM0MPEAH1@Z
_TEXT	SEGMENT
minBounds$ = 8
maxBounds$ = 16
cellSize$ = 24
sizeX$ = 32
sizeZ$ = 40
?rcCalcGridSize@@YAXPEBM0MPEAH1@Z PROC			; rcCalcGridSize, COMDAT

; 302  : 	*sizeX = (int)((maxBounds[0] - minBounds[0]) / cellSize + 0.5f);

	movss	xmm0, DWORD PTR [rdx]
	subss	xmm0, DWORD PTR [rcx]
	divss	xmm0, xmm2
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	mov	DWORD PTR [r9], eax

; 303  : 	*sizeZ = (int)((maxBounds[2] - minBounds[2]) / cellSize + 0.5f);

	movss	xmm0, DWORD PTR [rdx+8]
	subss	xmm0, DWORD PTR [rcx+8]
	mov	rax, QWORD PTR sizeZ$[rsp]
	divss	xmm0, xmm2
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si ecx, xmm0
	mov	DWORD PTR [rax], ecx

; 304  : }

	ret	0
?rcCalcGridSize@@YAXPEBM0MPEAH1@Z ENDP			; rcCalcGridSize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?doResetLog@rcContext@@MEAAXXZ
_TEXT	SEGMENT
this$ = 8
?doResetLog@rcContext@@MEAAXXZ PROC			; rcContext::doResetLog, COMDAT

; 83   : 	// Defined out of line to fix the weak v-tables warning
; 84   : }

	ret	0
?doResetLog@rcContext@@MEAAXXZ ENDP			; rcContext::doResetLog
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z
_TEXT	SEGMENT
polyMesh$ = 48
?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z PROC		; rcFreePolyMesh, COMDAT

; 228  : {

$LN57:

; 45   : 	if (ptr)

	test	rcx, rcx
	je	SHORT $LN54@rcFreePoly
	push	rbx
	sub	rsp, 32					; 00000020H

; 228  : {

	mov	rbx, rcx

; 253  : 	rcFree(verts);

	mov	rcx, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN15@rcFreePoly

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN15@rcFreePoly:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 254  : 	rcFree(polys);

	mov	rcx, QWORD PTR [rbx+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN22@rcFreePoly

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN22@rcFreePoly:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 255  : 	rcFree(regs);

	mov	rcx, QWORD PTR [rbx+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN29@rcFreePoly

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN29@rcFreePoly:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 256  : 	rcFree(flags);

	mov	rcx, QWORD PTR [rbx+24]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN36@rcFreePoly

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN36@rcFreePoly:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 257  : 	rcFree(areas);

	mov	rcx, QWORD PTR [rbx+32]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN43@rcFreePoly

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
	npad	1
$LN43@rcFreePoly:
	mov	rcx, rbx
	call	QWORD PTR __imp_free
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 230  : }

	add	rsp, 32					; 00000020H
	pop	rbx
$LN54@rcFreePoly:
	ret	0
?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z ENDP		; rcFreePolyMesh
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?rcAllocContourSet@@YAPEAUrcContourSet@@XZ
_TEXT	SEGMENT
ptr$1 = 48
?rcAllocContourSet@@YAPEAUrcContourSet@@XZ PROC		; rcAllocContourSet, COMDAT

; 189  : {

$LN19:
	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	ecx, 64					; 00000040H
	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 35   : 	T* ptr = (T*)rcAlloc(sizeof(T), allocLifetime);

	mov	QWORD PTR ptr$1[rsp], rax

; 36   : 	::new(rcNewTag(), (void*)ptr) T();

	test	rax, rax
	je	SHORT $LN16@rcAllocCon

; 199  : : conts()

	xor	edx, edx

; 200  : , nconts()
; 201  : , bmin()

	xor	ecx, ecx
	mov	QWORD PTR [rax], rdx
	mov	DWORD PTR [rax+8], edx
	mov	QWORD PTR [rax+12], rcx
	mov	DWORD PTR [rax+20], ecx

; 202  : , bmax()

	mov	QWORD PTR [rax+24], rcx
	mov	QWORD PTR [rax+32], rcx

; 203  : , cs()
; 204  : , ch()

	mov	QWORD PTR [rax+40], rdx

; 205  : , width()
; 206  : , height()

	mov	QWORD PTR [rax+48], rdx

; 207  : , borderSize()
; 208  : , maxError()

	mov	DWORD PTR [rax+56], edx
$LN16@rcAllocCon:

; 190  : 	return rcNew<rcContourSet>(RC_ALLOC_PERM);
; 191  : }

	add	rsp, 40					; 00000028H
	ret	0
?rcAllocContourSet@@YAPEAUrcContourSet@@XZ ENDP		; rcAllocContourSet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z
_TEXT	SEGMENT
shift$2$ = 48
shift$1$ = 48
xSize$1$ = 52
zSize$1$ = 56
x$1$ = 60
z$1$ = 64
dir$1$ = 68
compactHeightfield$GSCopy$1$ = 72
walkableHeight$1$ = 80
walkableClimb$1$ = 84
$T1 = 88
tv2782 = 96
tv2547 = 104
tv2542 = 112
context$GSCopy$1$ = 120
tv2572 = 128
tv2541 = 136
timer$ = 144
context$ = 224
walkableHeight$ = 232
walkableClimb$ = 240
heightfield$ = 248
compactHeightfield$ = 256
?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z PROC ; rcBuildCompactHeightfield, COMDAT

; 405  : {

$LN190:
	mov	QWORD PTR [rsp+16], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 160				; 000000a0H
	mov	r14, r9
	mov	esi, r8d
	mov	DWORD PTR walkableClimb$1$[rsp], r8d
	mov	r15d, edx
	mov	DWORD PTR walkableHeight$1$[rsp], edx
	mov	r13, rcx
	mov	QWORD PTR context$GSCopy$1$[rsp], rcx
	mov	r12, QWORD PTR compactHeightfield$[rsp]
	mov	QWORD PTR compactHeightfield$GSCopy$1$[rsp], r12

; 406  : 	rcAssert(context);

	mov	rax, QWORD PTR ?sRecastAssertFailFunc@@3P6AXPEBD0H@ZEA
	test	rax, rax
	je	SHORT $LN25@rcBuildCom
	test	rcx, rcx
	jne	SHORT $LN25@rcBuildCom
	mov	r8d, 406				; 00000196H
	lea	rdx, OFFSET FLAT:??_C@_0GG@KMDGDKEI@H?3?2Paul?2switchemulator?2Zelda?5To@
	lea	rcx, OFFSET FLAT:??_C@_07JKKCBBMM@context@
	call	rax
$LN25@rcBuildCom:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 202  : 	inline rcScopedTimer(rcContext* ctx, const rcTimerLabel label) : m_ctx(ctx), m_label(label) { m_ctx->startTimer(m_label); }

	mov	QWORD PTR timer$[rsp], r13
	mov	DWORD PTR timer$[rsp+8], 3

; 150  : 	inline void startTimer(const rcTimerLabel label) { if (m_timerEnabled) doStartTimer(label); }

	cmp	BYTE PTR [r13+9], 0
	je	SHORT $LN69@rcBuildCom
	mov	rax, QWORD PTR [r13]
	mov	edx, 3
	mov	rcx, r13
	call	QWORD PTR [rax+32]
	npad	1
$LN69@rcBuildCom:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 410  : 	const int xSize = heightfield.width;

	movsxd	r9, DWORD PTR [r14]
	mov	DWORD PTR xSize$1$[rsp], r9d

; 411  : 	const int zSize = heightfield.height;

	movsxd	r10, DWORD PTR [r14+4]
	mov	DWORD PTR zSize$1$[rsp], r10d

; 388  : 	const int numCols = heightfield.width * heightfield.height;

	mov	edi, r10d
	imul	edi, r9d

; 389  : 	int spanCount = 0;

	xor	r11d, r11d
	mov	ebx, r11d

; 390  : 	for (int columnIndex = 0; columnIndex < numCols; ++columnIndex)

	movsxd	rbp, edi
	test	edi, edi
	jle	SHORT $LN73@rcBuildCom

; 391  : 	{
; 392  : 		for (rcSpan* span = heightfield.spans[columnIndex]; span != NULL; span = span->next)

	mov	rdx, QWORD PTR [r14+40]
	mov	r8, rbp
	npad	5
$LL74@rcBuildCom:
	mov	rcx, QWORD PTR [rdx]
	test	rcx, rcx
	je	SHORT $LN72@rcBuildCom
	npad	8
$LL77@rcBuildCom:
	lea	eax, DWORD PTR [rbx+1]
	cmp	DWORD PTR [rcx], 67108864		; 04000000H
	cmovb	eax, ebx
	mov	ebx, eax
	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	jne	SHORT $LL77@rcBuildCom
$LN72@rcBuildCom:

; 390  : 	for (int columnIndex = 0; columnIndex < numCols; ++columnIndex)

	add	rdx, 8
	sub	r8, 1
	jne	SHORT $LL74@rcBuildCom
$LN73@rcBuildCom:

; 412  : 	const int spanCount = rcGetHeightFieldSpanCount(context, heightfield);
; 413  : 
; 414  : 	// Fill in header.
; 415  : 	compactHeightfield.width = xSize;

	mov	DWORD PTR [r12], r9d

; 416  : 	compactHeightfield.height = zSize;

	mov	DWORD PTR [r12+4], r10d

; 417  : 	compactHeightfield.spanCount = spanCount;

	mov	DWORD PTR [r12+8], ebx

; 418  : 	compactHeightfield.walkableHeight = walkableHeight;

	mov	DWORD PTR [r12+12], r15d

; 419  : 	compactHeightfield.walkableClimb = walkableClimb;

	mov	DWORD PTR [r12+16], esi

; 420  : 	compactHeightfield.maxRegions = 0;

	mov	WORD PTR [r12+26], r11w
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 774  : 	dest[0] = v[0];

	mov	eax, DWORD PTR [r14+8]
	mov	DWORD PTR [r12+28], eax

; 775  : 	dest[1] = v[1];

	mov	eax, DWORD PTR [r14+12]
	mov	DWORD PTR [r12+32], eax

; 776  : 	dest[2] = v[2];

	mov	eax, DWORD PTR [r14+16]
	mov	DWORD PTR [r12+36], eax

; 774  : 	dest[0] = v[0];

	mov	eax, DWORD PTR [r14+20]
	mov	DWORD PTR [r12+40], eax

; 775  : 	dest[1] = v[1];

	mov	eax, DWORD PTR [r14+24]
	mov	DWORD PTR [r12+44], eax

; 776  : 	dest[2] = v[2];

	mov	eax, DWORD PTR [r14+28]
	mov	DWORD PTR [r12+48], eax
	movd	xmm0, r15d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 423  : 	compactHeightfield.bmax[1] += walkableHeight * heightfield.ch;

	cvtdq2ps xmm0, xmm0
	mulss	xmm0, DWORD PTR [r14+36]
	addss	xmm0, DWORD PTR [r12+44]
	movss	DWORD PTR [r12+44], xmm0

; 424  : 	compactHeightfield.cs = heightfield.cs;

	mov	eax, DWORD PTR [r14+32]
	mov	DWORD PTR [r12+52], eax

; 425  : 	compactHeightfield.ch = heightfield.ch;

	mov	eax, DWORD PTR [r14+36]
	mov	DWORD PTR [r12+56], eax

; 426  : 	compactHeightfield.cells = (rcCompactCell*)rcAlloc(sizeof(rcCompactCell) * xSize * zSize, RC_ALLOC_PERM);

	mov	r15, r9
	mov	rsi, r10
	imul	rsi, r9
	shl	rsi, 2
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	rcx, rsi
	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 426  : 	compactHeightfield.cells = (rcCompactCell*)rcAlloc(sizeof(rcCompactCell) * xSize * zSize, RC_ALLOC_PERM);

	mov	QWORD PTR [r12+64], rax

; 427  : 	if (!compactHeightfield.cells)

	test	rax, rax
	jne	SHORT $LN26@rcBuildCom

; 428  : 	{
; 429  : 		context->log(RC_LOG_ERROR, "rcBuildCompactHeightfield: Out of memory 'chf.cells' (%d)", xSize * zSize);

	lea	r8, OFFSET FLAT:??_C@_0DK@HMANMLNE@rcBuildCompactHeightfield?3?5Out?5@
	jmp	SHORT $LN41@rcBuildCom
$LN26@rcBuildCom:

; 430  : 		return false;
; 431  : 	}
; 432  : 	memset(compactHeightfield.cells, 0, sizeof(rcCompactCell) * xSize * zSize);

	mov	r8, rsi
	xor	edx, edx
	mov	rcx, rax
	call	memset

; 433  : 	compactHeightfield.spans = (rcCompactSpan*)rcAlloc(sizeof(rcCompactSpan) * spanCount, RC_ALLOC_PERM);

	movsxd	rdi, ebx
	lea	rsi, QWORD PTR [rdi*8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	rcx, rsi
	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 433  : 	compactHeightfield.spans = (rcCompactSpan*)rcAlloc(sizeof(rcCompactSpan) * spanCount, RC_ALLOC_PERM);

	mov	QWORD PTR [r12+72], rax

; 434  : 	if (!compactHeightfield.spans)

	test	rax, rax
	jne	SHORT $LN27@rcBuildCom

; 435  : 	{
; 436  : 		context->log(RC_LOG_ERROR, "rcBuildCompactHeightfield: Out of memory 'chf.spans' (%d)", spanCount);
; 437  : 		return false;

	lea	r8, OFFSET FLAT:??_C@_0DK@HELMONJH@rcBuildCompactHeightfield?3?5Out?5@
	jmp	SHORT $LN186@rcBuildCom
$LN27@rcBuildCom:

; 438  : 	}
; 439  : 	memset(compactHeightfield.spans, 0, sizeof(rcCompactSpan) * spanCount);

	mov	r8, rsi
	xor	edx, edx
	mov	rcx, rax
	call	memset
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	rcx, rdi
	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 440  : 	compactHeightfield.areas = (unsigned char*)rcAlloc(sizeof(unsigned char) * spanCount, RC_ALLOC_PERM);

	mov	QWORD PTR [r12+88], rax

; 441  : 	if (!compactHeightfield.areas)

	test	rax, rax
	jne	SHORT $LN28@rcBuildCom

; 442  : 	{
; 443  : 		context->log(RC_LOG_ERROR, "rcBuildCompactHeightfield: Out of memory 'chf.areas' (%d)", spanCount);
; 444  : 		return false;

	lea	r8, OFFSET FLAT:??_C@_0DK@BKKBEIJO@rcBuildCompactHeightfield?3?5Out?5@
$LN186@rcBuildCom:
	mov	edi, ebx
$LN41@rcBuildCom:
	mov	rcx, r13
	mov	r9d, edi
	mov	edx, 3
	call	?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ ; rcContext::log
	xor	bl, bl
	jmp	$LN43@rcBuildCom
$LN28@rcBuildCom:

; 445  : 	}
; 446  : 	memset(compactHeightfield.areas, RC_NULL_AREA, sizeof(unsigned char) * spanCount);

	mov	r8, rdi
	xor	edx, edx
	mov	rcx, rax
	call	memset

; 447  : 
; 448  : 	const int MAX_HEIGHT = 0xffff;
; 449  : 
; 450  : 	// Fill in cells and spans.
; 451  : 	int currentCellIndex = 0;

	xor	ebx, ebx
	mov	edi, ebx

; 452  : 	const int numColumns = xSize * zSize;
; 453  : 	for (int columnIndex = 0; columnIndex < numColumns; ++columnIndex)

	test	rbp, rbp
	jle	$LN3@rcBuildCom
	mov	r11d, ebx
	mov	r10d, ebx
	mov	esi, 255				; 000000ffH
	npad	10
$LL4@rcBuildCom:

; 454  : 	{
; 455  : 		const rcSpan* span = heightfield.spans[columnIndex];

	mov	rax, QWORD PTR [r14+40]
	mov	r8, QWORD PTR [rax+r11*8]

; 456  : 			
; 457  : 		// If there are no spans at this cell, just leave the data to index=0, count=0.
; 458  : 		if (span == NULL)

	test	r8, r8
	je	$LN2@rcBuildCom

; 459  : 		{
; 460  : 			continue;
; 461  : 		}
; 462  : 			
; 463  : 		rcCompactCell& cell = compactHeightfield.cells[columnIndex];

	mov	rbx, QWORD PTR [r12+64]

; 464  : 		cell.index = currentCellIndex;

	mov	ecx, DWORD PTR [rbx+r11*4]
	xor	ecx, edi
	and	ecx, 16777215				; 00ffffffH
	xor	DWORD PTR [rbx+r11*4], ecx

; 465  : 		cell.count = 0;

	mov	BYTE PTR [rbx+r11*4+3], 0
	npad	4
$LL7@rcBuildCom:

; 468  : 		{
; 469  : 			if (span->area != RC_NULL_AREA)

	mov	edx, DWORD PTR [r8]
	cmp	edx, 67108864				; 04000000H
	jb	SHORT $LN172@rcBuildCom

; 470  : 			{
; 471  : 				const int bot = (int)span->smax;

	shr	edx, 13
	and	edx, 8191				; 00001fffH

; 472  : 				const int top = span->next ? (int)span->next->smin : MAX_HEIGHT;

	mov	rcx, QWORD PTR [r8+8]
	test	rcx, rcx
	je	SHORT $LN38@rcBuildCom
	mov	ecx, DWORD PTR [rcx]
	and	ecx, 8191				; 00001fffH
	jmp	SHORT $LN39@rcBuildCom
$LN38@rcBuildCom:
	mov	ecx, 65535				; 0000ffffH
$LN39@rcBuildCom:

; 473  : 				compactHeightfield.spans[currentCellIndex].y = (unsigned short)rcClamp(bot, 0, 0xffff);

	mov	rax, QWORD PTR [r12+72]
	mov	WORD PTR [rax+r10*8], dx

; 474  : 				compactHeightfield.spans[currentCellIndex].h = (unsigned char)rcClamp(top - bot, 0, 0xff);

	sub	ecx, edx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 683  : 	return value < minInclusive ? minInclusive: (value > maxInclusive ? maxInclusive : value);

	jns	SHORT $LN96@rcBuildCom
	xor	ecx, ecx
	jmp	SHORT $LN97@rcBuildCom
$LN96@rcBuildCom:
	cmp	ecx, esi
	cmovg	ecx, esi
$LN97@rcBuildCom:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 474  : 				compactHeightfield.spans[currentCellIndex].h = (unsigned char)rcClamp(top - bot, 0, 0xff);

	mov	rax, QWORD PTR [r12+72]
	mov	BYTE PTR [rax+r10*8+7], cl

; 475  : 				compactHeightfield.areas[currentCellIndex] = span->area;

	mov	ecx, DWORD PTR [r8]
	shr	ecx, 26
	mov	rax, QWORD PTR [r12+88]
	mov	BYTE PTR [r10+rax], cl

; 476  : 				currentCellIndex++;

	inc	edi
	inc	r10

; 477  : 				cell.count++;

	inc	BYTE PTR [rbx+r11*4+3]
$LN172@rcBuildCom:

; 466  : 
; 467  : 		for (; span != NULL; span = span->next)

	mov	r8, QWORD PTR [r8+8]
	test	r8, r8
	jne	SHORT $LL7@rcBuildCom
$LN2@rcBuildCom:

; 452  : 	const int numColumns = xSize * zSize;
; 453  : 	for (int columnIndex = 0; columnIndex < numColumns; ++columnIndex)

	inc	r11
	cmp	r11, rbp
	jl	$LL4@rcBuildCom
	xor	ebx, ebx
$LN3@rcBuildCom:

; 478  : 			}
; 479  : 		}
; 480  : 	}
; 481  : 	
; 482  : 	// Find neighbour connections.
; 483  : 	const int MAX_LAYERS = RC_NOT_CONNECTED - 1;
; 484  : 	int maxLayerIndex = 0;

	mov	r11d, ebx
	mov	edx, ebx
	mov	DWORD PTR z$1$[rsp], ebx

; 485  : 	const int zStride = xSize; // for readability
; 486  : 	for (int z = 0; z < zSize; ++z)

	mov	ebp, DWORD PTR zSize$1$[rsp]
	test	ebp, ebp
	jle	$LN36@rcBuildCom

; 510  : 					{
; 511  : 						const rcCompactSpan& neighborSpan = compactHeightfield.spans[k];

	mov	rax, rbx
	mov	QWORD PTR tv2542[rsp], rbx
	lea	rcx, QWORD PTR [r15*4]
	mov	QWORD PTR tv2541[rsp], rcx
	mov	esi, r15d
	npad	3
$LL10@rcBuildCom:

; 487  : 	{
; 488  : 		for (int x = 0; x < xSize; ++x)

	mov	r15d, ebx
	mov	DWORD PTR x$1$[rsp], ebx
	test	esi, esi
	jle	$LN8@rcBuildCom
	mov	rcx, rax
	mov	QWORD PTR tv2547[rsp], rax
	mov	r14, QWORD PTR compactHeightfield$GSCopy$1$[rsp]
	npad	4
$LL13@rcBuildCom:

; 489  : 		{
; 490  : 			const rcCompactCell& cell = compactHeightfield.cells[x + z * zStride];

	mov	rax, QWORD PTR [r14+64]

; 491  : 			for (int i = (int)cell.index, ni = (int)(cell.index + cell.count); i < ni; ++i)

	mov	ecx, DWORD PTR [rcx+rax]
	mov	eax, ecx
	and	eax, 16777215				; 00ffffffH
	mov	r9d, eax
	mov	QWORD PTR $T1[rsp], r9
	shr	ecx, 24
	add	eax, ecx
	mov	QWORD PTR tv2572[rsp], rax
	cmp	r9, rax
	jae	$LN11@rcBuildCom
	npad	4
$LL16@rcBuildCom:

; 492  : 			{
; 493  : 				rcCompactSpan& span = compactHeightfield.spans[i];

	mov	r10, QWORD PTR [r14+72]
	mov	QWORD PTR tv2782[rsp], r10
	mov	edx, ebx
	mov	DWORD PTR dir$1$[rsp], ebx
	mov	ebx, DWORD PTR [r10+r9*8+4]
	npad	12
$LL19@rcBuildCom:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 1235 : 	const unsigned int shift = (unsigned int)direction * 6;

	lea	eax, DWORD PTR [rdx+rdx*2]
	add	eax, eax
	mov	DWORD PTR shift$1$[rsp], eax

; 1237 : 	span.con = (con & ~(0x3f << shift)) | (((unsigned int)neighborIndex & 0x3f) << shift);

	mov	ecx, eax
	mov	eax, 63					; 0000003fH
	shl	eax, cl
	mov	r13d, eax
	not	r13d
	mov	r8d, ebx
	and	r8d, -16777216				; ff000000H
	mov	edi, r13d
	and	edi, ebx
	or	edi, eax
	and	edi, 16777215				; 00ffffffH
	and	ebx, -16777216				; ff000000H
	xor	edi, ebx
	mov	r12d, edi
	mov	DWORD PTR [r10+r9*8+4], edi
	bswap	r8d

; 1256 : 	return offset[direction & 0x03];

	movsxd	rcx, edx
	and	ecx, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 498  : 					const int neighborX = x + rcGetDirOffsetX(dir);

	lea	rbx, OFFSET FLAT:__ImageBase
	mov	edx, DWORD PTR ?offset@?1??rcGetDirOffsetX@@YAHH@Z@4QBHB[rbx+rcx*4]

; 499  : 					const int neighborZ = z + rcGetDirOffsetY(dir);

	mov	eax, DWORD PTR ?offset@?1??rcGetDirOffsetY@@YAHH@Z@4QBHB[rbx+rcx*4]
	mov	ecx, DWORD PTR z$1$[rsp]
	add	ecx, eax

; 498  : 					const int neighborX = x + rcGetDirOffsetX(dir);

	add	edx, r15d

; 500  : 					// First check that the neighbour cell is in bounds.
; 501  : 					if (neighborX < 0 || neighborZ < 0 || neighborX >= xSize || neighborZ >= zSize)

	js	$LN183@rcBuildCom
	test	ecx, ecx
	js	$LN183@rcBuildCom
	cmp	edx, esi
	jge	$LN183@rcBuildCom
	cmp	ecx, ebp
	jge	$LN183@rcBuildCom

; 502  : 					{
; 503  : 						continue;
; 504  : 					}
; 505  : 
; 506  : 					// Iterate over all neighbour spans and check if any of the is
; 507  : 					// accessible from current cell.
; 508  : 					const rcCompactCell& neighborCell = compactHeightfield.cells[neighborX + neighborZ * zStride];

	imul	ecx, esi
	add	ecx, edx
	movsxd	rcx, ecx
	mov	rax, QWORD PTR [r14+64]

; 509  : 					for (int k = (int)neighborCell.index, nk = (int)(neighborCell.index + neighborCell.count); k < nk; ++k)

	mov	edx, DWORD PTR [rax+rcx*4]
	mov	eax, edx
	and	eax, 16777215				; 00ffffffH
	shr	edx, 24
	lea	ecx, DWORD PTR [rdx+rax]
	cmp	eax, ecx
	jae	$LN183@rcBuildCom

; 510  : 					{
; 511  : 						const rcCompactSpan& neighborSpan = compactHeightfield.spans[k];

	mov	rbp, QWORD PTR [r14+72]

; 512  : 						const int bot = rcMax(span.y, neighborSpan.y);

	movzx	esi, WORD PTR [r10+r9*8]

; 513  : 						const int top = rcMin(span.y + span.h, neighborSpan.y + neighborSpan.h);

	movzx	ebx, r8b

; 518  : 						{
; 519  : 							// Mark direction as walkable.
; 520  : 							const int layerIndex = k - (int)neighborCell.index;

	mov	r10d, eax

; 509  : 					for (int k = (int)neighborCell.index, nk = (int)(neighborCell.index + neighborCell.count); k < nk; ++k)

	mov	r14d, ecx
	add	ebx, esi

; 510  : 					{
; 511  : 						const rcCompactSpan& neighborSpan = compactHeightfield.spans[k];

	xor	r8d, r8d
$LL22@rcBuildCom:

; 512  : 						const int bot = rcMax(span.y, neighborSpan.y);

	movzx	r9d, WORD PTR [rbp+r10*8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 664  : template<class T> inline T rcMax(T a, T b) { return a > b ? a : b; }

	movzx	eax, r9w
	cmp	si, r9w
	cmova	ax, si
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 512  : 						const int bot = rcMax(span.y, neighborSpan.y);

	movzx	edx, ax

; 513  : 						const int top = rcMin(span.y + span.h, neighborSpan.y + neighborSpan.h);

	movzx	ecx, BYTE PTR [rbp+r10*8+7]
	add	ecx, r9d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 658  : template<class T> inline T rcMin(T a, T b) { return a < b ? a : b; }

	cmp	ebx, ecx
	cmovb	ecx, ebx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 517  : 						if ((top - bot) >= walkableHeight && rcAbs((int)neighborSpan.y - (int)span.y) <= walkableClimb)

	sub	ecx, edx
	cmp	ecx, DWORD PTR walkableHeight$1$[rsp]
	jl	SHORT $LN20@rcBuildCom
	sub	r9d, esi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 669  : template<class T> inline T rcAbs(T a) { return a < 0 ? -a : a; }

	mov	eax, r9d
	cdq
	xor	eax, edx
	sub	eax, edx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 517  : 						if ((top - bot) >= walkableHeight && rcAbs((int)neighborSpan.y - (int)span.y) <= walkableClimb)

	cmp	eax, DWORD PTR walkableClimb$1$[rsp]
	jg	SHORT $LN20@rcBuildCom

; 521  : 							if (layerIndex < 0 || layerIndex > MAX_LAYERS)

	cmp	r8d, 62					; 0000003eH
	jbe	$LN34@rcBuildCom
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 664  : template<class T> inline T rcMax(T a, T b) { return a > b ? a : b; }

	mov	eax, r8d
	cmp	r11d, r8d
	cmovg	eax, r11d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 523  : 								maxLayerIndex = rcMax(maxLayerIndex, layerIndex);

	mov	r11d, eax
$LN20@rcBuildCom:

; 509  : 					for (int k = (int)neighborCell.index, nk = (int)(neighborCell.index + neighborCell.count); k < nk; ++k)

	inc	r8d
	inc	r10
	cmp	r10, r14
	jl	SHORT $LL22@rcBuildCom
	mov	r9, QWORD PTR $T1[rsp]
	mov	r10, QWORD PTR tv2782[rsp]
	mov	esi, DWORD PTR xSize$1$[rsp]
	mov	r14, QWORD PTR compactHeightfield$GSCopy$1$[rsp]
	mov	ebp, DWORD PTR zSize$1$[rsp]
	mov	r15d, DWORD PTR x$1$[rsp]
$LN183@rcBuildCom:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 1235 : 	const unsigned int shift = (unsigned int)direction * 6;

	mov	eax, DWORD PTR shift$1$[rsp]
$LN17@rcBuildCom:
	add	eax, 6
	mov	DWORD PTR shift$2$[rsp], eax

; 1237 : 	span.con = (con & ~(0x3f << shift)) | (((unsigned int)neighborIndex & 0x3f) << shift);

	mov	ecx, eax
	mov	eax, 63					; 0000003fH
	shl	eax, cl
	mov	r13d, eax
	not	r13d
	mov	r8d, edi
	and	r8d, -16777216				; ff000000H
	mov	ebx, edi
	and	ebx, r13d
	or	ebx, eax
	and	ebx, 16777215				; 00ffffffH
	and	edi, -16777216				; ff000000H
	xor	ebx, edi
	mov	r12d, ebx
	mov	DWORD PTR [r10+r9*8+4], ebx
	bswap	r8d

; 1256 : 	return offset[direction & 0x03];

	movsxd	rcx, DWORD PTR dir$1$[rsp]
	inc	rcx
	and	ecx, 3
	lea	rdi, OFFSET FLAT:__ImageBase
	mov	edx, DWORD PTR ?offset@?1??rcGetDirOffsetX@@YAHH@Z@4QBHB[rdi+rcx*4]

; 1266 : 	return offset[direction & 0x03];

	mov	eax, DWORD PTR ?offset@?1??rcGetDirOffsetY@@YAHH@Z@4QBHB[rdi+rcx*4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 499  : 					const int neighborZ = z + rcGetDirOffsetY(dir);

	mov	ecx, DWORD PTR z$1$[rsp]
	add	ecx, eax

; 498  : 					const int neighborX = x + rcGetDirOffsetX(dir);

	add	edx, r15d

; 500  : 					// First check that the neighbour cell is in bounds.
; 501  : 					if (neighborX < 0 || neighborZ < 0 || neighborX >= xSize || neighborZ >= zSize)

	js	$LN174@rcBuildCom
	test	ecx, ecx
	js	$LN174@rcBuildCom
	cmp	edx, esi
	jge	$LN174@rcBuildCom
	cmp	ecx, ebp
	jge	$LN174@rcBuildCom

; 502  : 					{
; 503  : 						continue;
; 504  : 					}
; 505  : 
; 506  : 					// Iterate over all neighbour spans and check if any of the is
; 507  : 					// accessible from current cell.
; 508  : 					const rcCompactCell& neighborCell = compactHeightfield.cells[neighborX + neighborZ * zStride];

	imul	ecx, esi
	add	ecx, edx
	movsxd	rcx, ecx
	mov	rax, QWORD PTR [r14+64]

; 509  : 					for (int k = (int)neighborCell.index, nk = (int)(neighborCell.index + neighborCell.count); k < nk; ++k)

	mov	edx, DWORD PTR [rax+rcx*4]
	mov	eax, edx
	and	eax, 16777215				; 00ffffffH
	shr	edx, 24
	lea	ecx, DWORD PTR [rdx+rax]
	cmp	eax, ecx
	jae	$LN174@rcBuildCom

; 510  : 					{
; 511  : 						const rcCompactSpan& neighborSpan = compactHeightfield.spans[k];

	mov	rbp, QWORD PTR [r14+72]

; 512  : 						const int bot = rcMax(span.y, neighborSpan.y);

	movzx	esi, WORD PTR [r10+r9*8]

; 513  : 						const int top = rcMin(span.y + span.h, neighborSpan.y + neighborSpan.h);

	movzx	edi, r8b

; 518  : 						{
; 519  : 							// Mark direction as walkable.
; 520  : 							const int layerIndex = k - (int)neighborCell.index;

	mov	r10d, eax

; 509  : 					for (int k = (int)neighborCell.index, nk = (int)(neighborCell.index + neighborCell.count); k < nk; ++k)

	mov	r14d, ecx
	add	edi, esi

; 510  : 					{
; 511  : 						const rcCompactSpan& neighborSpan = compactHeightfield.spans[k];

	xor	r8d, r8d
$LL147@rcBuildCom:

; 512  : 						const int bot = rcMax(span.y, neighborSpan.y);

	movzx	r9d, WORD PTR [rbp+r10*8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 664  : template<class T> inline T rcMax(T a, T b) { return a > b ? a : b; }

	movzx	eax, r9w
	cmp	si, r9w
	cmova	ax, si
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 512  : 						const int bot = rcMax(span.y, neighborSpan.y);

	movzx	edx, ax

; 513  : 						const int top = rcMin(span.y + span.h, neighborSpan.y + neighborSpan.h);

	movzx	ecx, BYTE PTR [rbp+r10*8+7]
	add	ecx, r9d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 658  : template<class T> inline T rcMin(T a, T b) { return a < b ? a : b; }

	cmp	edi, ecx
	cmovb	ecx, edi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 517  : 						if ((top - bot) >= walkableHeight && rcAbs((int)neighborSpan.y - (int)span.y) <= walkableClimb)

	sub	ecx, edx
	cmp	ecx, DWORD PTR walkableHeight$1$[rsp]
	jl	SHORT $LN149@rcBuildCom
	sub	r9d, esi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 669  : template<class T> inline T rcAbs(T a) { return a < 0 ? -a : a; }

	mov	eax, r9d
	cdq
	xor	eax, edx
	sub	eax, edx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 517  : 						if ((top - bot) >= walkableHeight && rcAbs((int)neighborSpan.y - (int)span.y) <= walkableClimb)

	cmp	eax, DWORD PTR walkableClimb$1$[rsp]
	jg	SHORT $LN149@rcBuildCom

; 521  : 							if (layerIndex < 0 || layerIndex > MAX_LAYERS)

	cmp	r8d, 62					; 0000003eH
	jbe	$LN150@rcBuildCom
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 664  : template<class T> inline T rcMax(T a, T b) { return a > b ? a : b; }

	mov	eax, r8d
	cmp	r11d, r8d
	cmovg	eax, r11d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 523  : 								maxLayerIndex = rcMax(maxLayerIndex, layerIndex);

	mov	r11d, eax
$LN149@rcBuildCom:

; 509  : 					for (int k = (int)neighborCell.index, nk = (int)(neighborCell.index + neighborCell.count); k < nk; ++k)

	inc	r8d
	inc	r10
	cmp	r10, r14
	jl	SHORT $LL147@rcBuildCom
	mov	r9, QWORD PTR $T1[rsp]
	mov	r10, QWORD PTR tv2782[rsp]
$LN187@rcBuildCom:

; 494  : 
; 495  : 				for (int dir = 0; dir < 4; ++dir)

	mov	r15d, DWORD PTR x$1$[rsp]
$LN174@rcBuildCom:
	mov	edx, DWORD PTR dir$1$[rsp]
	add	edx, 2
	mov	DWORD PTR dir$1$[rsp], edx
	cmp	edx, 4
	mov	esi, DWORD PTR xSize$1$[rsp]
	mov	r14, QWORD PTR compactHeightfield$GSCopy$1$[rsp]
	mov	ebp, DWORD PTR zSize$1$[rsp]
	jl	$LL19@rcBuildCom

; 491  : 			for (int i = (int)cell.index, ni = (int)(cell.index + cell.count); i < ni; ++i)

	inc	r9
	mov	QWORD PTR $T1[rsp], r9
	cmp	r9, QWORD PTR tv2572[rsp]
	mov	ebx, 0
	jl	$LL16@rcBuildCom
$LN11@rcBuildCom:

; 487  : 	{
; 488  : 		for (int x = 0; x < xSize; ++x)

	inc	r15d
	mov	DWORD PTR x$1$[rsp], r15d
	mov	rcx, QWORD PTR tv2547[rsp]
	add	rcx, 4
	mov	QWORD PTR tv2547[rsp], rcx
	cmp	r15d, esi
	jl	$LL13@rcBuildCom
	mov	edx, DWORD PTR z$1$[rsp]
	mov	rax, QWORD PTR tv2542[rsp]
	mov	rcx, QWORD PTR tv2541[rsp]
$LN8@rcBuildCom:

; 485  : 	const int zStride = xSize; // for readability
; 486  : 	for (int z = 0; z < zSize; ++z)

	inc	edx
	mov	DWORD PTR z$1$[rsp], edx
	add	rax, rcx
	mov	QWORD PTR tv2542[rsp], rax
	cmp	edx, ebp
	jl	$LL10@rcBuildCom

; 524  : 								continue;
; 525  : 							}
; 526  : 							rcSetCon(span, dir, layerIndex);
; 527  : 							break;
; 528  : 						}
; 529  : 					}
; 530  : 				}
; 531  : 			}
; 532  : 		}
; 533  : 	}
; 534  : 
; 535  : 	if (maxLayerIndex > MAX_LAYERS)

	mov	r13, QWORD PTR context$GSCopy$1$[rsp]
	cmp	r11d, 62				; 0000003eH
	jle	SHORT $LN36@rcBuildCom

; 536  : 	{
; 537  : 		context->log(RC_LOG_ERROR, "rcBuildCompactHeightfield: Heightfield has too many layers %d (max: %d)",

	mov	DWORD PTR [rsp+32], 62			; 0000003eH
	mov	r9d, r11d
	lea	r8, OFFSET FLAT:??_C@_0EI@FJNBKBB@rcBuildCompactHeightfield?3?5Heig@
	mov	edx, 3
	mov	rcx, r13
	call	?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ ; rcContext::log
$LN36@rcBuildCom:

; 538  : 		         maxLayerIndex, MAX_LAYERS);
; 539  : 	}
; 540  : 
; 541  : 	return true;

	mov	bl, 1
$LN43@rcBuildCom:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 154  : 	inline void stopTimer(const rcTimerLabel label) { if (m_timerEnabled) doStopTimer(label); }

	cmp	BYTE PTR [r13+9], 0
	je	SHORT $LN177@rcBuildCom
	mov	r8, QWORD PTR [r13]
	mov	edx, 3
	mov	rcx, r13
	call	QWORD PTR [r8+40]
	npad	1
$LN177@rcBuildCom:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 542  : }

	movzx	eax, bl
	mov	rbx, QWORD PTR [rsp+232]
	add	rsp, 160				; 000000a0H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN34@rcBuildCom:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 1237 : 	span.con = (con & ~(0x3f << shift)) | (((unsigned int)neighborIndex & 0x3f) << shift);

	mov	edi, r8d
	and	edi, 63					; 0000003fH
	mov	eax, DWORD PTR shift$1$[rsp]
	mov	ecx, eax
	shl	edi, cl
	and	r13d, r12d
	or	edi, r13d
	and	edi, 16777215				; 00ffffffH
	and	r12d, -16777216				; ff000000H
	xor	edi, r12d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 509  : 					for (int k = (int)neighborCell.index, nk = (int)(neighborCell.index + neighborCell.count); k < nk; ++k)

	mov	r9, QWORD PTR $T1[rsp]
	mov	r10, QWORD PTR tv2782[rsp]
	mov	esi, DWORD PTR xSize$1$[rsp]
	mov	r14, QWORD PTR compactHeightfield$GSCopy$1$[rsp]
	mov	ebp, DWORD PTR zSize$1$[rsp]
	mov	r15d, DWORD PTR x$1$[rsp]
	jmp	$LN17@rcBuildCom
$LN150@rcBuildCom:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 1237 : 	span.con = (con & ~(0x3f << shift)) | (((unsigned int)neighborIndex & 0x3f) << shift);

	mov	ebx, r8d
	and	ebx, 63					; 0000003fH
	mov	ecx, DWORD PTR shift$2$[rsp]
	shl	ebx, cl
	mov	eax, r12d
	and	eax, r13d
	or	ebx, eax
	and	ebx, 16777215				; 00ffffffH
	and	r12d, -16777216				; ff000000H
	xor	ebx, r12d
	mov	r9, QWORD PTR $T1[rsp]
	mov	r10, QWORD PTR tv2782[rsp]
	mov	DWORD PTR [r10+r9*8+4], ebx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 509  : 					for (int k = (int)neighborCell.index, nk = (int)(neighborCell.index + neighborCell.count); k < nk; ++k)

	jmp	$LN187@rcBuildCom
	int	3
?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z ENDP ; rcBuildCompactHeightfield
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
shift$2$ = 48
shift$1$ = 48
xSize$1$ = 52
zSize$1$ = 56
x$1$ = 60
z$1$ = 64
dir$1$ = 68
compactHeightfield$GSCopy$1$ = 72
walkableHeight$1$ = 80
walkableClimb$1$ = 84
$T1 = 88
tv2782 = 96
tv2547 = 104
tv2542 = 112
context$GSCopy$1$ = 120
tv2572 = 128
tv2541 = 136
timer$ = 144
context$ = 224
walkableHeight$ = 232
walkableClimb$ = 240
heightfield$ = 248
compactHeightfield$ = 256
?dtor$0@?0??rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z@4HA PROC ; `rcBuildCompactHeightfield'::`1'::dtor$0
	lea	rcx, QWORD PTR timer$[rdx]
	jmp	??1rcScopedTimer@@QEAA@XZ		; rcScopedTimer::~rcScopedTimer
?dtor$0@?0??rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z@4HA ENDP ; `rcBuildCompactHeightfield'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?startTimer@rcContext@@QEAAXW4rcTimerLabel@@@Z
_TEXT	SEGMENT
this$ = 8
label$ = 16
?startTimer@rcContext@@QEAAXW4rcTimerLabel@@@Z PROC	; rcContext::startTimer, COMDAT

; 150  : 	inline void startTimer(const rcTimerLabel label) { if (m_timerEnabled) doStartTimer(label); }

	cmp	BYTE PTR [rcx+9], 0
	je	SHORT $LN2@startTimer
	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+32]
$LN2@startTimer:
	ret	0
?startTimer@rcContext@@QEAAXW4rcTimerLabel@@@Z ENDP	; rcContext::startTimer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?stopTimer@rcContext@@QEAAXW4rcTimerLabel@@@Z
_TEXT	SEGMENT
this$ = 8
label$ = 16
?stopTimer@rcContext@@QEAAXW4rcTimerLabel@@@Z PROC	; rcContext::stopTimer, COMDAT

; 154  : 	inline void stopTimer(const rcTimerLabel label) { if (m_timerEnabled) doStopTimer(label); }

	cmp	BYTE PTR [rcx+9], 0
	je	SHORT $LN2@stopTimer
	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+40]
$LN2@stopTimer:
	ret	0
?stopTimer@rcContext@@QEAAXW4rcTimerLabel@@@Z ENDP	; rcContext::stopTimer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??0rcScopedTimer@@QEAA@PEAVrcContext@@W4rcTimerLabel@@@Z
_TEXT	SEGMENT
this$ = 48
ctx$ = 56
label$ = 64
??0rcScopedTimer@@QEAA@PEAVrcContext@@W4rcTimerLabel@@@Z PROC ; rcScopedTimer::rcScopedTimer, COMDAT

; 202  : 	inline rcScopedTimer(rcContext* ctx, const rcTimerLabel label) : m_ctx(ctx), m_label(label) { m_ctx->startTimer(m_label); }

$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	QWORD PTR [rcx], rdx
	mov	r9, rdx
	mov	DWORD PTR [rcx+8], r8d
	mov	rbx, rcx

; 150  : 	inline void startTimer(const rcTimerLabel label) { if (m_timerEnabled) doStartTimer(label); }

	cmp	BYTE PTR [rdx+9], 0
	je	SHORT $LN6@rcScopedTi
	mov	rax, QWORD PTR [rdx]
	mov	rcx, r9
	mov	edx, r8d
	call	QWORD PTR [rax+32]
$LN6@rcScopedTi:

; 202  : 	inline rcScopedTimer(rcContext* ctx, const rcTimerLabel label) : m_ctx(ctx), m_label(label) { m_ctx->startTimer(m_label); }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0rcScopedTimer@@QEAA@PEAVrcContext@@W4rcTimerLabel@@@Z ENDP ; rcScopedTimer::rcScopedTimer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??1rcScopedTimer@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1rcScopedTimer@@QEAA@XZ PROC				; rcScopedTimer::~rcScopedTimer, COMDAT

; 203  : 	inline ~rcScopedTimer() { m_ctx->stopTimer(m_label); }

$LN8:
	sub	rsp, 40					; 00000028H
	mov	rdx, rcx
	mov	rcx, QWORD PTR [rcx]

; 154  : 	inline void stopTimer(const rcTimerLabel label) { if (m_timerEnabled) doStopTimer(label); }

	cmp	BYTE PTR [rcx+9], 0
	je	SHORT $LN4@rcScopedTi
	mov	rax, QWORD PTR [rcx]
	mov	edx, DWORD PTR [rdx+8]
	call	QWORD PTR [rax+40]
	npad	1
$LN4@rcScopedTi:

; 203  : 	inline ~rcScopedTimer() { m_ctx->stopTimer(m_label); }

	add	rsp, 40					; 00000028H
	ret	0
??1rcScopedTimer@@QEAA@XZ ENDP				; rcScopedTimer::~rcScopedTimer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?rcVcross@@YAXPEAMPEBM1@Z
_TEXT	SEGMENT
dest$ = 8
v1$ = 16
v2$ = 24
?rcVcross@@YAXPEAMPEBM1@Z PROC				; rcVcross, COMDAT

; 701  : 	dest[0] = v1[1]*v2[2] - v1[2]*v2[1];

	movss	xmm5, DWORD PTR [r8+8]
	movss	xmm0, DWORD PTR [r8+4]
	movaps	xmm1, xmm5
	mulss	xmm1, DWORD PTR [rdx+4]
	mulss	xmm0, DWORD PTR [rdx+8]

; 702  : 	dest[1] = v1[2]*v2[0] - v1[0]*v2[2];

	movss	xmm3, DWORD PTR [r8]
	movss	xmm4, DWORD PTR [rdx]
	subss	xmm1, xmm0
	movaps	xmm0, xmm4

; 703  : 	dest[2] = v1[0]*v2[1] - v1[1]*v2[0];

	mulss	xmm4, DWORD PTR [r8+4]
	mulss	xmm0, xmm5
	movss	DWORD PTR [rcx], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [rdx+8]
	mulss	xmm3, DWORD PTR [rdx+4]
	subss	xmm1, xmm0
	subss	xmm4, xmm3
	movss	DWORD PTR [rcx+4], xmm1
	movss	DWORD PTR [rcx+8], xmm4

; 704  : }

	ret	0
?rcVcross@@YAXPEAMPEBM1@Z ENDP				; rcVcross
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?rcVsub@@YAXPEAMPEBM1@Z
_TEXT	SEGMENT
dest$ = 8
v1$ = 16
v2$ = 24
?rcVsub@@YAXPEAMPEBM1@Z PROC				; rcVsub, COMDAT

; 744  : 	dest[0] = v1[0]-v2[0];

	movss	xmm0, DWORD PTR [rdx]
	subss	xmm0, DWORD PTR [r8]

; 745  : 	dest[1] = v1[1]-v2[1];

	movss	xmm1, DWORD PTR [rdx+4]
	subss	xmm1, DWORD PTR [r8+4]
	movss	DWORD PTR [rcx], xmm0

; 746  : 	dest[2] = v1[2]-v2[2];

	movss	xmm0, DWORD PTR [rdx+8]
	subss	xmm0, DWORD PTR [r8+8]
	movss	DWORD PTR [rcx+4], xmm1
	movss	DWORD PTR [rcx+8], xmm0

; 747  : }

	ret	0
?rcVsub@@YAXPEAMPEBM1@Z ENDP				; rcVsub
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?rcVmin@@YAXPEAMPEBM@Z
_TEXT	SEGMENT
mn$ = 8
v$ = 16
?rcVmin@@YAXPEAMPEBM@Z PROC				; rcVmin, COMDAT

; 658  : template<class T> inline T rcMin(T a, T b) { return a < b ? a : b; }

	movss	xmm0, DWORD PTR [rcx]
	minss	xmm0, DWORD PTR [rdx]
	movss	xmm1, DWORD PTR [rcx+4]
	minss	xmm1, DWORD PTR [rdx+4]

; 754  : 	mn[0] = rcMin(mn[0], v[0]);

	movss	DWORD PTR [rcx], xmm0

; 658  : template<class T> inline T rcMin(T a, T b) { return a < b ? a : b; }

	movss	xmm0, DWORD PTR [rcx+8]
	minss	xmm0, DWORD PTR [rdx+8]

; 755  : 	mn[1] = rcMin(mn[1], v[1]);

	movss	DWORD PTR [rcx+4], xmm1

; 756  : 	mn[2] = rcMin(mn[2], v[2]);

	movss	DWORD PTR [rcx+8], xmm0

; 757  : }

	ret	0
?rcVmin@@YAXPEAMPEBM@Z ENDP				; rcVmin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?rcVmax@@YAXPEAMPEBM@Z
_TEXT	SEGMENT
mx$ = 8
v$ = 16
?rcVmax@@YAXPEAMPEBM@Z PROC				; rcVmax, COMDAT

; 664  : template<class T> inline T rcMax(T a, T b) { return a > b ? a : b; }

	movss	xmm0, DWORD PTR [rcx]
	maxss	xmm0, DWORD PTR [rdx]
	movss	xmm1, DWORD PTR [rcx+4]
	maxss	xmm1, DWORD PTR [rdx+4]

; 764  : 	mx[0] = rcMax(mx[0], v[0]);

	movss	DWORD PTR [rcx], xmm0

; 664  : template<class T> inline T rcMax(T a, T b) { return a > b ? a : b; }

	movss	xmm0, DWORD PTR [rcx+8]
	maxss	xmm0, DWORD PTR [rdx+8]

; 765  : 	mx[1] = rcMax(mx[1], v[1]);

	movss	DWORD PTR [rcx+4], xmm1

; 766  : 	mx[2] = rcMax(mx[2], v[2]);

	movss	DWORD PTR [rcx+8], xmm0

; 767  : }

	ret	0
?rcVmax@@YAXPEAMPEBM@Z ENDP				; rcVmax
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?rcVnormalize@@YAXPEAM@Z
_TEXT	SEGMENT
v$ = 96
?rcVnormalize@@YAXPEAM@Z PROC				; rcVnormalize, COMDAT

; 806  : {

$LN15:
	push	rbx
	sub	rsp, 80					; 00000050H
	movaps	XMMWORD PTR [rsp+64], xmm6
	mov	rbx, rcx

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	movss	xmm6, DWORD PTR [rcx]
	movaps	XMMWORD PTR [rsp+48], xmm7

; 674  : template<class T> inline T rcSqr(T a) { return a * a; }

	movaps	xmm0, xmm6

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	movss	xmm7, DWORD PTR [rcx+4]

; 674  : template<class T> inline T rcSqr(T a) { return a * a; }

	mulss	xmm0, xmm6
	movaps	xmm2, xmm7
	mulss	xmm2, xmm7
	movaps	XMMWORD PTR [rsp+32], xmm8

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	movss	xmm8, DWORD PTR [rcx+8]
	addss	xmm2, xmm0

; 674  : template<class T> inline T rcSqr(T a) { return a * a; }

	movaps	xmm1, xmm8
	mulss	xmm1, xmm8
	xorps	xmm0, xmm0

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	addss	xmm2, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 55   : 	return sqrtf(x);

	ucomiss	xmm0, xmm2
	ja	SHORT $LN11@rcVnormali
	xorps	xmm0, xmm0
	sqrtss	xmm0, xmm2
	jmp	SHORT $LN12@rcVnormali
$LN11@rcVnormali:
	movaps	xmm0, xmm2
	call	sqrtf
$LN12@rcVnormali:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm0

; 808  : 	v[0] *= d;

	mulss	xmm6, xmm1

; 809  : 	v[1] *= d;

	mulss	xmm7, xmm1

; 810  : 	v[2] *= d;

	mulss	xmm8, xmm1
	movss	DWORD PTR [rbx], xmm6

; 811  : }

	movaps	xmm6, XMMWORD PTR [rsp+64]
	movss	DWORD PTR [rbx+4], xmm7
	movaps	xmm7, XMMWORD PTR [rsp+48]
	movss	DWORD PTR [rbx+8], xmm8
	movaps	xmm8, XMMWORD PTR [rsp+32]
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
?rcVnormalize@@YAXPEAM@Z ENDP				; rcVnormalize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?rcSetCon@@YAXAEAUrcCompactSpan@@HH@Z
_TEXT	SEGMENT
span$ = 8
direction$ = 16
neighborIndex$ = 24
?rcSetCon@@YAXAEAUrcCompactSpan@@HH@Z PROC		; rcSetCon, COMDAT

; 1234 : {

	mov	r9, rcx

; 1235 : 	const unsigned int shift = (unsigned int)direction * 6;
; 1236 : 	const unsigned int con = span.con;
; 1237 : 	span.con = (con & ~(0x3f << shift)) | (((unsigned int)neighborIndex & 0x3f) << shift);

	mov	eax, 63					; 0000003fH
	lea	ecx, DWORD PTR [rdx+rdx*2]
	and	r8d, 63					; 0000003fH
	add	ecx, ecx
	shl	eax, cl
	mov	edx, DWORD PTR [r9+4]
	not	eax
	and	eax, edx
	shl	r8d, cl
	or	eax, r8d
	and	edx, -16777216				; ff000000H
	and	eax, 16777215				; 00ffffffH
	xor	eax, edx
	mov	DWORD PTR [r9+4], eax

; 1238 : }

	ret	0
?rcSetCon@@YAXAEAUrcCompactSpan@@HH@Z ENDP		; rcSetCon
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?rcGetDirOffsetX@@YAHH@Z
_TEXT	SEGMENT
direction$ = 8
?rcGetDirOffsetX@@YAHH@Z PROC				; rcGetDirOffsetX, COMDAT

; 1255 : 	static const int offset[4] = { -1, 0, 1, 0, };
; 1256 : 	return offset[direction & 0x03];

	and	ecx, 3
	lea	rax, OFFSET FLAT:?offset@?1??rcGetDirOffsetX@@YAHH@Z@4QBHB ; `rcGetDirOffsetX'::`2'::offset
	mov	eax, DWORD PTR [rax+rcx*4]

; 1257 : }

	ret	0
?rcGetDirOffsetX@@YAHH@Z ENDP				; rcGetDirOffsetX
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?rcGetDirOffsetY@@YAHH@Z
_TEXT	SEGMENT
direction$ = 8
?rcGetDirOffsetY@@YAHH@Z PROC				; rcGetDirOffsetY, COMDAT

; 1265 : 	static const int offset[4] = { 0, 1, 0, -1 };
; 1266 : 	return offset[direction & 0x03];

	and	ecx, 3
	lea	rax, OFFSET FLAT:?offset@?1??rcGetDirOffsetY@@YAHH@Z@4QBHB ; `rcGetDirOffsetY'::`2'::offset
	mov	eax, DWORD PTR [rax+rcx*4]

; 1267 : }

	ret	0
?rcGetDirOffsetY@@YAHH@Z ENDP				; rcGetDirOffsetY
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.h
;	COMDAT ??2@YAPEAX_KAEBUrcNewTag@@PEAX@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
p$ = 24
??2@YAPEAX_KAEBUrcNewTag@@PEAX@Z PROC			; operator new, COMDAT

; 77   : inline void* operator new(size_t, const rcNewTag&, void* p) { return p; }

	mov	rax, r8
	ret	0
??2@YAPEAX_KAEBUrcNewTag@@PEAX@Z ENDP			; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.h
;	COMDAT ??3@YAXPEAXAEBUrcNewTag@@0@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
??3@YAXPEAXAEBUrcNewTag@@0@Z PROC			; operator delete, COMDAT

; 78   : inline void operator delete(void*, const rcNewTag&, void*) {}

	ret	0
??3@YAXPEAXAEBUrcNewTag@@0@Z ENDP			; operator delete
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?rcSqrt@@YAMM@Z
_TEXT	SEGMENT
x$ = 8
?rcSqrt@@YAMM@Z PROC					; rcSqrt, COMDAT

; 54   : {

	xorps	xmm1, xmm1

; 55   : 	return sqrtf(x);

	ucomiss	xmm1, xmm0
	ja	SHORT $LN3@rcSqrt
	sqrtss	xmm0, xmm0

; 56   : }

	ret	0
$LN3@rcSqrt:

; 55   : 	return sqrtf(x);

	jmp	sqrtf
?rcSqrt@@YAMM@Z ENDP					; rcSqrt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ
_TEXT	SEGMENT
msg$ = 48
__$ArrayPad$ = 560
this$ = 624
category$ = 632
format$ = 640
?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ PROC	; rcContext::log, COMDAT

; 59   : {

$LN12:
	mov	r11, rsp
	mov	QWORD PTR [r11+24], r8
	mov	QWORD PTR [r11+32], r9
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 592				; 00000250H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 60   : 	if (!m_logEnabled)

	cmp	BYTE PTR [rcx+8], 0
	mov	rdi, r8
	mov	esi, edx
	mov	rbx, rcx
	je	$LN1@log
	mov	QWORD PTR [r11-32], rbp

; 61   : 	{
; 62   : 		return;
; 63   : 	}
; 64   : 	static const int MSG_SIZE = 512;
; 65   : 	char msg[MSG_SIZE];
; 66   : 	va_list argList;
; 67   : 	va_start(argList, format);

	lea	rbp, QWORD PTR [r11+32]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h

; 1439 :         int const _Result = __stdio_common_vsprintf(

	call	__local_stdio_printf_options
	mov	QWORD PTR [rsp+40], rbp
	lea	rdx, QWORD PTR msg$[rsp]
	mov	r9, rdi
	mov	QWORD PTR [rsp+32], 0
	mov	r8d, 512				; 00000200H
	mov	rcx, QWORD PTR [rax]
	or	rcx, 2
	call	QWORD PTR __imp___stdio_common_vsprintf

; 1440 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1441 :             _Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1442 : 
; 1443 :         return _Result < 0 ? -1 : _Result;

	mov	rbp, QWORD PTR [rsp+584]
	mov	edi, eax
	test	edi, edi
	mov	eax, -1
	cmovs	edi, eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 69   : 	if (len >= MSG_SIZE)

	cmp	edi, 512				; 00000200H
	jl	SHORT $LN3@log

; 70   : 	{
; 71   : 		len = MSG_SIZE - 1;
; 72   : 		msg[MSG_SIZE - 1] = '\0';
; 73   : 
; 74   : 		const char* errorMessage = "Log message was truncated";
; 75   : 		doLog(RC_LOG_ERROR, errorMessage, (int)strlen(errorMessage));

	mov	rax, QWORD PTR [rbx]
	lea	r8, OFFSET FLAT:??_C@_0BK@IKKJIOBC@Log?5message?5was?5truncated@
	mov	r9d, 25
	mov	BYTE PTR msg$[rsp+511], 0
	mov	rcx, rbx
	mov	edi, 511				; 000001ffH
	lea	edx, QWORD PTR [r9-22]
	call	QWORD PTR [rax+16]
$LN3@log:

; 76   : 	}
; 77   : 	va_end(argList);
; 78   : 	doLog(category, msg, len);

	mov	rax, QWORD PTR [rbx]
	lea	r8, QWORD PTR msg$[rsp]
	mov	r9d, edi
	mov	edx, esi
	mov	rcx, rbx
	call	QWORD PTR [rax+16]
$LN1@log:

; 79   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 592				; 00000250H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ ENDP	; rcContext::log
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??0rcHeightfield@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0rcHeightfield@@QEAA@XZ PROC				; rcHeightfield::rcHeightfield, COMDAT

; 97   : : width()

	xor	edx, edx

; 98   : , height()
; 99   : , bmin()

	xor	eax, eax
	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [rcx+8], rax
	mov	DWORD PTR [rcx+16], eax

; 100  : , bmax()

	mov	QWORD PTR [rcx+20], rax
	mov	QWORD PTR [rcx+28], rax

; 107  : }

	mov	rax, rcx
	mov	DWORD PTR [rcx+36], edx
	mov	QWORD PTR [rcx+40], rdx
	mov	QWORD PTR [rcx+48], rdx
	mov	QWORD PTR [rcx+56], rdx
	ret	0
??0rcHeightfield@@QEAA@XZ ENDP				; rcHeightfield::rcHeightfield
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??1rcHeightfield@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1rcHeightfield@@QEAA@XZ PROC				; rcHeightfield::~rcHeightfield, COMDAT

; 110  : {

$LN25:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 111  : 	// Delete span array.
; 112  : 	rcFree(spans);

	mov	rcx, QWORD PTR [rcx+40]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN19@rcHeightfi

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN19@rcHeightfi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 114  : 	while (pools)

	mov	rcx, QWORD PTR [rdi+48]
	test	rcx, rcx
	je	SHORT $LN3@rcHeightfi
$LL2@rcHeightfi:

; 115  : 	{
; 116  : 		rcSpanPool* next = pools->next;

	mov	rbx, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 118  : 		pools = next;

	mov	QWORD PTR [rdi+48], rbx

; 114  : 	while (pools)

	mov	rcx, rbx
	test	rbx, rbx
	jne	SHORT $LL2@rcHeightfi
$LN3@rcHeightfi:

; 119  : 	}
; 120  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1rcHeightfield@@QEAA@XZ ENDP				; rcHeightfield::~rcHeightfield
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??0rcCompactHeightfield@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0rcCompactHeightfield@@QEAA@XZ PROC			; rcCompactHeightfield::rcCompactHeightfield, COMDAT

; 133  : : width()

	xor	edx, edx

; 134  : , height()
; 135  : , spanCount()
; 136  : , walkableHeight()
; 137  : , walkableClimb()
; 138  : , borderSize()
; 139  : , maxDistance()
; 140  : , maxRegions()
; 141  : , bmin()

	xor	eax, eax
	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], rdx
	mov	DWORD PTR [rcx+24], edx
	mov	QWORD PTR [rcx+28], rax
	mov	DWORD PTR [rcx+36], eax

; 142  : , bmax()

	mov	QWORD PTR [rcx+40], rax
	mov	QWORD PTR [rcx+48], rax

; 150  : }

	mov	rax, rcx
	mov	DWORD PTR [rcx+56], edx
	mov	QWORD PTR [rcx+64], rdx
	mov	QWORD PTR [rcx+72], rdx
	mov	QWORD PTR [rcx+80], rdx
	mov	QWORD PTR [rcx+88], rdx
	ret	0
??0rcCompactHeightfield@@QEAA@XZ ENDP			; rcCompactHeightfield::rcCompactHeightfield
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??1rcCompactHeightfield@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1rcCompactHeightfield@@QEAA@XZ PROC			; rcCompactHeightfield::~rcCompactHeightfield, COMDAT

; 153  : {

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 154  : 	rcFree(cells);

	mov	rcx, QWORD PTR [rcx+64]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN6@rcCompactH

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN6@rcCompactH:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 155  : 	rcFree(spans);

	mov	rcx, QWORD PTR [rbx+72]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN13@rcCompactH

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN13@rcCompactH:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 156  : 	rcFree(dist);

	mov	rcx, QWORD PTR [rbx+80]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN20@rcCompactH

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN20@rcCompactH:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 157  : 	rcFree(areas);

	mov	rcx, QWORD PTR [rbx+88]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN27@rcCompactH
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 158  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 28   : 	free(ptr);

	rex_jmp	QWORD PTR __imp_free
$LN27@rcCompactH:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 158  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1rcCompactHeightfield@@QEAA@XZ ENDP			; rcCompactHeightfield::~rcCompactHeightfield
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??1rcHeightfieldLayerSet@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1rcHeightfieldLayerSet@@QEAA@XZ PROC			; rcHeightfieldLayerSet::~rcHeightfieldLayerSet, COMDAT

; 177  : {

$LN40:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 178  : 	for (int i = 0; i < nlayers; ++i)

	xor	esi, esi
	cmp	DWORD PTR [rcx+8], esi
	jle	SHORT $LN3@rcHeightfi
	mov	ebx, esi
	npad	5
$LL4@rcHeightfi:

; 179  : 	{
; 180  : 		rcFree(layers[i].heights);

	mov	rax, QWORD PTR [rdi]
	mov	rcx, QWORD PTR [rbx+rax+64]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN9@rcHeightfi

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN9@rcHeightfi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 181  : 		rcFree(layers[i].areas);

	mov	rax, QWORD PTR [rdi]
	mov	rcx, QWORD PTR [rbx+rax+72]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN16@rcHeightfi

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN16@rcHeightfi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 182  : 		rcFree(layers[i].cons);

	mov	rax, QWORD PTR [rdi]
	mov	rcx, QWORD PTR [rbx+rax+80]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN2@rcHeightfi

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN2@rcHeightfi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 178  : 	for (int i = 0; i < nlayers; ++i)

	inc	esi
	add	rbx, 88					; 00000058H
	cmp	esi, DWORD PTR [rdi+8]
	jl	SHORT $LL4@rcHeightfi
$LN3@rcHeightfi:

; 183  : 	}
; 184  : 	rcFree(layers);

	mov	rcx, QWORD PTR [rdi]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN30@rcHeightfi

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
	npad	1
$LN30@rcHeightfi:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 185  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1rcHeightfieldLayerSet@@QEAA@XZ ENDP			; rcHeightfieldLayerSet::~rcHeightfieldLayerSet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??0rcContourSet@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0rcContourSet@@QEAA@XZ PROC				; rcContourSet::rcContourSet, COMDAT

; 199  : : conts()

	xor	edx, edx

; 200  : , nconts()
; 201  : , bmin()

	xor	eax, eax
	mov	QWORD PTR [rcx], rdx
	mov	DWORD PTR [rcx+8], edx
	mov	QWORD PTR [rcx+12], rax
	mov	DWORD PTR [rcx+20], eax

; 202  : , bmax()

	mov	QWORD PTR [rcx+24], rax
	mov	QWORD PTR [rcx+32], rax

; 210  : }

	mov	rax, rcx
	mov	QWORD PTR [rcx+40], rdx
	mov	QWORD PTR [rcx+48], rdx
	mov	DWORD PTR [rcx+56], edx
	ret	0
??0rcContourSet@@QEAA@XZ ENDP				; rcContourSet::rcContourSet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??1rcContourSet@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1rcContourSet@@QEAA@XZ PROC				; rcContourSet::~rcContourSet, COMDAT

; 213  : {

$LN33:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx

; 214  : 	for (int i = 0; i < nconts; ++i)

	xor	edi, edi
	cmp	DWORD PTR [rcx+8], edi
	jle	SHORT $LN3@rcContourS
	mov	ebx, edi
	npad	5
$LL4@rcContourS:

; 215  : 	{
; 216  : 		rcFree(conts[i].verts);

	mov	rax, QWORD PTR [rsi]
	mov	rcx, QWORD PTR [rbx+rax]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN9@rcContourS

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN9@rcContourS:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 217  : 		rcFree(conts[i].rverts);

	mov	rax, QWORD PTR [rsi]
	mov	rcx, QWORD PTR [rbx+rax+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN2@rcContourS

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN2@rcContourS:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 214  : 	for (int i = 0; i < nconts; ++i)

	inc	edi
	add	rbx, 32					; 00000020H
	cmp	edi, DWORD PTR [rsi+8]
	jl	SHORT $LL4@rcContourS
$LN3@rcContourS:

; 218  : 	}
; 219  : 	rcFree(conts);

	mov	rcx, QWORD PTR [rsi]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN23@rcContourS

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
	npad	1
$LN23@rcContourS:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 220  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1rcContourSet@@QEAA@XZ ENDP				; rcContourSet::~rcContourSet
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??0rcPolyMesh@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0rcPolyMesh@@QEAA@XZ PROC				; rcPolyMesh::rcPolyMesh, COMDAT

; 233  : : verts()

	xor	edx, edx

; 234  : , polys()
; 235  : , regs()
; 236  : , flags()
; 237  : , areas()
; 238  : , nverts()
; 239  : , npolys()
; 240  : , maxpolys()
; 241  : , nvp()
; 242  : , bmin()

	xor	eax, eax
	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [rcx+8], rdx
	mov	QWORD PTR [rcx+16], rdx
	mov	QWORD PTR [rcx+24], rdx
	mov	QWORD PTR [rcx+32], rdx
	mov	QWORD PTR [rcx+40], rdx
	mov	QWORD PTR [rcx+48], rdx
	mov	QWORD PTR [rcx+56], rax
	mov	DWORD PTR [rcx+64], eax

; 243  : , bmax()

	mov	QWORD PTR [rcx+68], rax
	mov	QWORD PTR [rcx+76], rax

; 249  : }

	mov	rax, rcx
	mov	QWORD PTR [rcx+84], rdx
	mov	DWORD PTR [rcx+92], edx
	ret	0
??0rcPolyMesh@@QEAA@XZ ENDP				; rcPolyMesh::rcPolyMesh
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??1rcPolyMesh@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1rcPolyMesh@@QEAA@XZ PROC				; rcPolyMesh::~rcPolyMesh, COMDAT

; 252  : {

$LN40:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 253  : 	rcFree(verts);

	mov	rcx, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN6@rcPolyMesh

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN6@rcPolyMesh:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 254  : 	rcFree(polys);

	mov	rcx, QWORD PTR [rbx+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN13@rcPolyMesh

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN13@rcPolyMesh:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 255  : 	rcFree(regs);

	mov	rcx, QWORD PTR [rbx+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN20@rcPolyMesh

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN20@rcPolyMesh:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 256  : 	rcFree(flags);

	mov	rcx, QWORD PTR [rbx+24]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN27@rcPolyMesh

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN27@rcPolyMesh:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 257  : 	rcFree(areas);

	mov	rcx, QWORD PTR [rbx+32]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN34@rcPolyMesh
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 258  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 28   : 	free(ptr);

	rex_jmp	QWORD PTR __imp_free
$LN34@rcPolyMesh:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 258  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1rcPolyMesh@@QEAA@XZ ENDP				; rcPolyMesh::~rcPolyMesh
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?calcTriNormal@@YAXPEBM00PEAM@Z
_TEXT	SEGMENT
v0$ = 112
v1$ = 120
v2$ = 128
faceNormal$ = 136
?calcTriNormal@@YAXPEBM00PEAM@Z PROC			; calcTriNormal, COMDAT

; 328  : {

	push	rbx
	sub	rsp, 96					; 00000060H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 746  : 	dest[2] = v1[2]-v2[2];

	movss	xmm2, DWORD PTR [r8+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 328  : {

	mov	rbx, r9
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 746  : 	dest[2] = v1[2]-v2[2];

	subss	xmm2, DWORD PTR [rcx+8]
	movss	xmm4, DWORD PTR [r8]
	subss	xmm4, DWORD PTR [rcx]

; 745  : 	dest[1] = v1[1]-v2[1];

	movss	xmm5, DWORD PTR [rdx+4]
	subss	xmm5, DWORD PTR [rcx+4]

; 746  : 	dest[2] = v1[2]-v2[2];

	movss	xmm3, DWORD PTR [rdx+8]
	subss	xmm3, DWORD PTR [rcx+8]
	movaps	XMMWORD PTR [rsp+80], xmm6

; 704  : }
; 705  : 
; 706  : /// Derives the dot product of two vectors. (@p v1 . @p v2)
; 707  : /// @param[in]		v1	A Vector [(x, y, z)]
; 708  : /// @param[in]		v2	A vector [(x, y, z)]
; 709  : /// @return The dot product.
; 710  : inline float rcVdot(const float* v1, const float* v2)
; 711  : {
; 712  : 	return v1[0]*v2[0] + v1[1]*v2[1] + v1[2]*v2[2];
; 713  : }
; 714  : 
; 715  : /// Performs a scaled vector addition. (@p v1 + (@p v2 * @p s))
; 716  : /// @param[out]		dest	The result vector. [(x, y, z)]
; 717  : /// @param[in]		v1		The base vector. [(x, y, z)]
; 718  : /// @param[in]		v2		The vector to scale and add to @p v1. [(x, y, z)]
; 719  : /// @param[in]		s		The amount to scale @p v2 by before adding to @p v1.
; 720  : inline void rcVmad(float* dest, const float* v1, const float* v2, const float s)
; 721  : {
; 722  : 	dest[0] = v1[0]+v2[0]*s;
; 723  : 	dest[1] = v1[1]+v2[1]*s;
; 724  : 	dest[2] = v1[2]+v2[2]*s;
; 725  : }
; 726  : 
; 727  : /// Performs a vector addition. (@p v1 + @p v2)
; 728  : /// @param[out]		dest	The result vector. [(x, y, z)]
; 729  : /// @param[in]		v1		The base vector. [(x, y, z)]
; 730  : /// @param[in]		v2		The vector to add to @p v1. [(x, y, z)]
; 731  : inline void rcVadd(float* dest, const float* v1, const float* v2)
; 732  : {
; 733  : 	dest[0] = v1[0]+v2[0];
; 734  : 	dest[1] = v1[1]+v2[1];
; 735  : 	dest[2] = v1[2]+v2[2];
; 736  : }
; 737  : 
; 738  : /// Performs a vector subtraction. (@p v1 - @p v2)
; 739  : /// @param[out]		dest	The result vector. [(x, y, z)]
; 740  : /// @param[in]		v1		The base vector. [(x, y, z)]
; 741  : /// @param[in]		v2		The vector to subtract from @p v1. [(x, y, z)]
; 742  : inline void rcVsub(float* dest, const float* v1, const float* v2)
; 743  : {
; 744  : 	dest[0] = v1[0]-v2[0];

	movss	xmm6, DWORD PTR [rdx]
	subss	xmm6, DWORD PTR [rcx]
	movaps	XMMWORD PTR [rsp+64], xmm7

; 745  : 	dest[1] = v1[1]-v2[1];

	movss	xmm7, DWORD PTR [r8+4]
	subss	xmm7, DWORD PTR [rcx+4]
	movaps	XMMWORD PTR [rsp+48], xmm8

; 746  : 	dest[2] = v1[2]-v2[2];

	movaps	xmm8, xmm2

; 702  : 	dest[1] = v1[2]*v2[0] - v1[0]*v2[2];

	mulss	xmm2, xmm6
	movaps	XMMWORD PTR [rsp+32], xmm9

; 675  : 
; 676  : /// Clamps the value to the specified range.
; 677  : /// @param[in]		value			The value to clamp.
; 678  : /// @param[in]		minInclusive	The minimum permitted return value.
; 679  : /// @param[in]		maxInclusive	The maximum permitted return value.
; 680  : /// @return The value, clamped to the specified range.
; 681  : template<class T> inline T rcClamp(T value, T minInclusive, T maxInclusive)
; 682  : {
; 683  : 	return value < minInclusive ? minInclusive: (value > maxInclusive ? maxInclusive : value);
; 684  : }
; 685  : 
; 686  : /// Returns the square root of the value.
; 687  : ///  @param[in]		x	The value.
; 688  : ///  @return The square root of the vlaue.
; 689  : float rcSqrt(float x);
; 690  : 
; 691  : /// @}
; 692  : /// @name Vector helper functions.
; 693  : /// @{
; 694  : 
; 695  : /// Derives the cross product of two vectors. (@p v1 x @p v2)
; 696  : /// @param[out]		dest	The cross product. [(x, y, z)]
; 697  : /// @param[in]		v1		A Vector [(x, y, z)]
; 698  : /// @param[in]		v2		A vector [(x, y, z)]
; 699  : inline void rcVcross(float* dest, const float* v1, const float* v2)
; 700  : {
; 701  : 	dest[0] = v1[1]*v2[2] - v1[2]*v2[1];

	movaps	xmm9, xmm4
	movaps	xmm0, xmm7

; 746  : 	dest[2] = v1[2]-v2[2];

	mulss	xmm8, xmm5

; 701  : 	dest[0] = v1[1]*v2[2] - v1[2]*v2[1];

	mulss	xmm0, xmm3
	mulss	xmm9, xmm3
	subss	xmm8, xmm0

; 702  : 	dest[1] = v1[2]*v2[0] - v1[0]*v2[2];

	mulss	xmm7, xmm6
	subss	xmm9, xmm2

; 703  : 	dest[2] = v1[0]*v2[1] - v1[1]*v2[0];

	mulss	xmm4, xmm5

; 674  : template<class T> inline T rcSqr(T a) { return a * a; }

	movaps	xmm0, xmm8

; 703  : 	dest[2] = v1[0]*v2[1] - v1[1]*v2[0];

	subss	xmm7, xmm4

; 674  : template<class T> inline T rcSqr(T a) { return a * a; }

	mulss	xmm0, xmm8
	movaps	xmm2, xmm9
	mulss	xmm2, xmm9
	movaps	xmm1, xmm7
	mulss	xmm1, xmm7

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	addss	xmm2, xmm0
	xorps	xmm0, xmm0
	addss	xmm2, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 55   : 	return sqrtf(x);

	ucomiss	xmm0, xmm2
	ja	SHORT $LN19@calcTriNor
	xorps	xmm0, xmm0
	sqrtss	xmm0, xmm2
	jmp	SHORT $LN20@calcTriNor
$LN19@calcTriNor:
	movaps	xmm0, xmm2
	call	sqrtf
$LN20@calcTriNor:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	movss	xmm1, DWORD PTR __real@3f800000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 334  : }

	movaps	xmm6, XMMWORD PTR [rsp+80]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	divss	xmm1, xmm0

; 808  : 	v[0] *= d;

	mulss	xmm8, xmm1

; 809  : 	v[1] *= d;

	mulss	xmm9, xmm1

; 810  : 	v[2] *= d;

	mulss	xmm7, xmm1
	movss	DWORD PTR [rbx], xmm8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 334  : }

	movaps	xmm8, XMMWORD PTR [rsp+48]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 809  : 	v[1] *= d;

	movss	DWORD PTR [rbx+4], xmm9
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 334  : }

	movaps	xmm9, XMMWORD PTR [rsp+32]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 810  : 	v[2] *= d;

	movss	DWORD PTR [rbx+8], xmm7
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 334  : }

	movaps	xmm7, XMMWORD PTR [rsp+64]
	add	rsp, 96					; 00000060H
	pop	rbx
	ret	0
?calcTriNormal@@YAXPEBM00PEAM@Z ENDP			; calcTriNormal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ?rcGetHeightFieldSpanCount@@YAHPEAVrcContext@@AEBUrcHeightfield@@@Z
_TEXT	SEGMENT
context$dead$ = 8
heightfield$ = 16
?rcGetHeightFieldSpanCount@@YAHPEAVrcContext@@AEBUrcHeightfield@@@Z PROC ; rcGetHeightFieldSpanCount, COMDAT

; 386  : 	rcIgnoreUnused(context);
; 387  : 
; 388  : 	const int numCols = heightfield.width * heightfield.height;

	mov	eax, DWORD PTR [rdx+4]

; 389  : 	int spanCount = 0;

	xor	r8d, r8d
	imul	eax, DWORD PTR [rdx]

; 390  : 	for (int columnIndex = 0; columnIndex < numCols; ++columnIndex)

	movsxd	r9, eax
	test	eax, eax
	jle	SHORT $LN18@rcGetHeigh

; 391  : 	{
; 392  : 		for (rcSpan* span = heightfield.spans[columnIndex]; span != NULL; span = span->next)

	mov	rdx, QWORD PTR [rdx+40]
$LL4@rcGetHeigh:
	mov	rcx, QWORD PTR [rdx]
	test	rcx, rcx
	je	SHORT $LN2@rcGetHeigh
	npad	4
$LL7@rcGetHeigh:
	cmp	DWORD PTR [rcx], 67108864		; 04000000H
	lea	eax, DWORD PTR [r8+1]
	mov	rcx, QWORD PTR [rcx+8]
	cmovb	eax, r8d
	mov	r8d, eax
	test	rcx, rcx
	jne	SHORT $LL7@rcGetHeigh
$LN2@rcGetHeigh:

; 390  : 	for (int columnIndex = 0; columnIndex < numCols; ++columnIndex)

	add	rdx, 8
	sub	r9, 1
	jne	SHORT $LL4@rcGetHeigh
$LN18@rcGetHeigh:

; 393  : 		{
; 394  : 			if (span->area != RC_NULL_AREA)
; 395  : 			{
; 396  : 				spanCount++;
; 397  : 			}
; 398  : 		}
; 399  : 	}
; 400  : 	return spanCount;
; 401  : }

	mov	eax, r8d
	ret	0
?rcGetHeightFieldSpanCount@@YAHPEAVrcContext@@AEBUrcHeightfield@@@Z ENDP ; rcGetHeightFieldSpanCount
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcMin@M@@YAMMM@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
??$rcMin@M@@YAMMM@Z PROC				; rcMin<float>, COMDAT

; 658  : template<class T> inline T rcMin(T a, T b) { return a < b ? a : b; }

	minss	xmm0, xmm1
	ret	0
??$rcMin@M@@YAMMM@Z ENDP				; rcMin<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcMax@M@@YAMMM@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
??$rcMax@M@@YAMMM@Z PROC				; rcMax<float>, COMDAT

; 664  : template<class T> inline T rcMax(T a, T b) { return a > b ? a : b; }

	maxss	xmm0, xmm1
	ret	0
??$rcMax@M@@YAMMM@Z ENDP				; rcMax<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcSqr@M@@YAMM@Z
_TEXT	SEGMENT
a$ = 8
??$rcSqr@M@@YAMM@Z PROC					; rcSqr<float>, COMDAT

; 674  : template<class T> inline T rcSqr(T a) { return a * a; }

	mulss	xmm0, xmm0
	ret	0
??$rcSqr@M@@YAMM@Z ENDP					; rcSqr<float>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??$rcNew@UrcHeightfield@@@?A0x5b7010ac@@YAPEAUrcHeightfield@@W4rcAllocHint@@@Z
_TEXT	SEGMENT
allocLifetime$dead$ = 48
ptr$ = 56
??$rcNew@UrcHeightfield@@@?A0x5b7010ac@@YAPEAUrcHeightfield@@W4rcAllocHint@@@Z PROC ; `anonymous namespace'::rcNew<rcHeightfield>, COMDAT

; 34   : {

	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	ecx, 64					; 00000040H
	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 35   : 	T* ptr = (T*)rcAlloc(sizeof(T), allocLifetime);

	mov	QWORD PTR ptr$[rsp], rax

; 36   : 	::new(rcNewTag(), (void*)ptr) T();

	test	rax, rax
	je	SHORT $LN14@rcNew

; 97   : : width()

	xor	edx, edx

; 98   : , height()
; 99   : , bmin()

	xor	ecx, ecx
	mov	QWORD PTR [rax], rdx
	mov	QWORD PTR [rax+8], rcx
	mov	DWORD PTR [rax+16], ecx

; 100  : , bmax()

	mov	QWORD PTR [rax+20], rcx
	mov	QWORD PTR [rax+28], rcx

; 101  : , cs()
; 102  : , ch()

	mov	DWORD PTR [rax+36], edx

; 103  : , spans()

	mov	QWORD PTR [rax+40], rdx

; 104  : , pools()

	mov	QWORD PTR [rax+48], rdx

; 105  : , freelist()

	mov	QWORD PTR [rax+56], rdx
$LN14@rcNew:

; 37   : 	return ptr;
; 38   : }

	add	rsp, 40					; 00000028H
	ret	0
??$rcNew@UrcHeightfield@@@?A0x5b7010ac@@YAPEAUrcHeightfield@@W4rcAllocHint@@@Z ENDP ; `anonymous namespace'::rcNew<rcHeightfield>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z
_TEXT	SEGMENT
ptr$ = 48
??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z PROC ; `anonymous namespace'::rcDelete<rcHeightfield>, COMDAT

; 45   : 	if (ptr)

	test	rcx, rcx
	je	SHORT $LN37@rcDelete
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 44   : {

	mov	rdi, rcx

; 112  : 	rcFree(spans);

	mov	rcx, QWORD PTR [rcx+40]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN33@rcDelete

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN33@rcDelete:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 114  : 	while (pools)

	mov	rcx, QWORD PTR [rdi+48]
	test	rcx, rcx
	je	SHORT $LN9@rcDelete
	npad	6
$LL8@rcDelete:

; 115  : 	{
; 116  : 		rcSpanPool* next = pools->next;

	mov	rbx, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 118  : 		pools = next;

	mov	QWORD PTR [rdi+48], rbx

; 114  : 	while (pools)

	mov	rcx, rbx
	test	rbx, rbx
	jne	SHORT $LL8@rcDelete
$LN9@rcDelete:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 28   : 	free(ptr);

	mov	rcx, rdi
	call	QWORD PTR __imp_free
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 50   : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
$LN37@rcDelete:
	ret	0
??$rcDelete@UrcHeightfield@@@?A0x5b7010ac@@YAXPEAUrcHeightfield@@@Z ENDP ; `anonymous namespace'::rcDelete<rcHeightfield>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??$rcNew@UrcCompactHeightfield@@@?A0x5b7010ac@@YAPEAUrcCompactHeightfield@@W4rcAllocHint@@@Z
_TEXT	SEGMENT
allocLifetime$dead$ = 48
ptr$ = 56
??$rcNew@UrcCompactHeightfield@@@?A0x5b7010ac@@YAPEAUrcCompactHeightfield@@W4rcAllocHint@@@Z PROC ; `anonymous namespace'::rcNew<rcCompactHeightfield>, COMDAT

; 34   : {

	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	ecx, 96					; 00000060H
	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 35   : 	T* ptr = (T*)rcAlloc(sizeof(T), allocLifetime);

	mov	QWORD PTR ptr$[rsp], rax

; 36   : 	::new(rcNewTag(), (void*)ptr) T();

	test	rax, rax
	je	SHORT $LN14@rcNew

; 133  : : width()

	xor	edx, edx

; 134  : , height()
; 135  : , spanCount()
; 136  : , walkableHeight()
; 137  : , walkableClimb()
; 138  : , borderSize()
; 139  : , maxDistance()
; 140  : , maxRegions()
; 141  : , bmin()

	xor	ecx, ecx
	mov	QWORD PTR [rax], rdx
	mov	QWORD PTR [rax+8], rdx
	mov	QWORD PTR [rax+16], rdx
	mov	DWORD PTR [rax+24], edx
	mov	QWORD PTR [rax+28], rcx
	mov	DWORD PTR [rax+36], ecx

; 142  : , bmax()

	mov	QWORD PTR [rax+40], rcx
	mov	QWORD PTR [rax+48], rcx

; 143  : , cs()
; 144  : , ch()

	mov	DWORD PTR [rax+56], edx

; 145  : , cells()

	mov	QWORD PTR [rax+64], rdx

; 146  : , spans()

	mov	QWORD PTR [rax+72], rdx

; 147  : , dist()

	mov	QWORD PTR [rax+80], rdx

; 148  : , areas()

	mov	QWORD PTR [rax+88], rdx
$LN14@rcNew:

; 37   : 	return ptr;
; 38   : }

	add	rsp, 40					; 00000028H
	ret	0
??$rcNew@UrcCompactHeightfield@@@?A0x5b7010ac@@YAPEAUrcCompactHeightfield@@W4rcAllocHint@@@Z ENDP ; `anonymous namespace'::rcNew<rcCompactHeightfield>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??$rcNew@UrcContourSet@@@?A0x5b7010ac@@YAPEAUrcContourSet@@W4rcAllocHint@@@Z
_TEXT	SEGMENT
allocLifetime$dead$ = 48
ptr$ = 56
??$rcNew@UrcContourSet@@@?A0x5b7010ac@@YAPEAUrcContourSet@@W4rcAllocHint@@@Z PROC ; `anonymous namespace'::rcNew<rcContourSet>, COMDAT

; 34   : {

	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	ecx, 64					; 00000040H
	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 35   : 	T* ptr = (T*)rcAlloc(sizeof(T), allocLifetime);

	mov	QWORD PTR ptr$[rsp], rax

; 36   : 	::new(rcNewTag(), (void*)ptr) T();

	test	rax, rax
	je	SHORT $LN14@rcNew

; 199  : : conts()

	xor	edx, edx

; 200  : , nconts()
; 201  : , bmin()

	xor	ecx, ecx
	mov	QWORD PTR [rax], rdx
	mov	DWORD PTR [rax+8], edx
	mov	QWORD PTR [rax+12], rcx
	mov	DWORD PTR [rax+20], ecx

; 202  : , bmax()

	mov	QWORD PTR [rax+24], rcx
	mov	QWORD PTR [rax+32], rcx

; 203  : , cs()
; 204  : , ch()

	mov	QWORD PTR [rax+40], rdx

; 205  : , width()
; 206  : , height()

	mov	QWORD PTR [rax+48], rdx

; 207  : , borderSize()
; 208  : , maxError()

	mov	DWORD PTR [rax+56], edx
$LN14@rcNew:

; 37   : 	return ptr;
; 38   : }

	add	rsp, 40					; 00000028H
	ret	0
??$rcNew@UrcContourSet@@@?A0x5b7010ac@@YAPEAUrcContourSet@@W4rcAllocHint@@@Z ENDP ; `anonymous namespace'::rcNew<rcContourSet>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??$rcNew@UrcPolyMesh@@@?A0x5b7010ac@@YAPEAUrcPolyMesh@@W4rcAllocHint@@@Z
_TEXT	SEGMENT
allocLifetime$dead$ = 48
ptr$ = 56
??$rcNew@UrcPolyMesh@@@?A0x5b7010ac@@YAPEAUrcPolyMesh@@W4rcAllocHint@@@Z PROC ; `anonymous namespace'::rcNew<rcPolyMesh>, COMDAT

; 34   : {

	sub	rsp, 40					; 00000028H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	ecx, 96					; 00000060H
	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 35   : 	T* ptr = (T*)rcAlloc(sizeof(T), allocLifetime);

	mov	QWORD PTR ptr$[rsp], rax

; 36   : 	::new(rcNewTag(), (void*)ptr) T();

	test	rax, rax
	je	SHORT $LN14@rcNew

; 233  : : verts()

	xor	edx, edx

; 234  : , polys()
; 235  : , regs()
; 236  : , flags()
; 237  : , areas()
; 238  : , nverts()
; 239  : , npolys()
; 240  : , maxpolys()
; 241  : , nvp()
; 242  : , bmin()

	xor	ecx, ecx
	mov	QWORD PTR [rax], rdx
	mov	QWORD PTR [rax+8], rdx
	mov	QWORD PTR [rax+16], rdx
	mov	QWORD PTR [rax+24], rdx
	mov	QWORD PTR [rax+32], rdx
	mov	QWORD PTR [rax+40], rdx
	mov	QWORD PTR [rax+48], rdx
	mov	QWORD PTR [rax+56], rcx
	mov	DWORD PTR [rax+64], ecx

; 243  : , bmax()

	mov	QWORD PTR [rax+68], rcx
	mov	QWORD PTR [rax+76], rcx

; 244  : , cs()
; 245  : , ch()

	mov	QWORD PTR [rax+84], rdx

; 246  : , borderSize()
; 247  : , maxEdgeError()

	mov	DWORD PTR [rax+92], edx
$LN14@rcNew:

; 37   : 	return ptr;
; 38   : }

	add	rsp, 40					; 00000028H
	ret	0
??$rcNew@UrcPolyMesh@@@?A0x5b7010ac@@YAPEAUrcPolyMesh@@W4rcAllocHint@@@Z ENDP ; `anonymous namespace'::rcNew<rcPolyMesh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z
_TEXT	SEGMENT
ptr$ = 48
??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z PROC ; `anonymous namespace'::rcDelete<rcPolyMesh>, COMDAT

; 45   : 	if (ptr)

	test	rcx, rcx
	je	SHORT $LN52@rcDelete
	push	rbx
	sub	rsp, 32					; 00000020H

; 44   : {

	mov	rbx, rcx

; 253  : 	rcFree(verts);

	mov	rcx, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN13@rcDelete

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN13@rcDelete:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 254  : 	rcFree(polys);

	mov	rcx, QWORD PTR [rbx+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN20@rcDelete

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN20@rcDelete:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 255  : 	rcFree(regs);

	mov	rcx, QWORD PTR [rbx+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN27@rcDelete

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN27@rcDelete:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 256  : 	rcFree(flags);

	mov	rcx, QWORD PTR [rbx+24]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN34@rcDelete

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN34@rcDelete:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 257  : 	rcFree(areas);

	mov	rcx, QWORD PTR [rbx+32]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN41@rcDelete

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
	npad	1
$LN41@rcDelete:
	mov	rcx, rbx
	call	QWORD PTR __imp_free
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 50   : }

	add	rsp, 32					; 00000020H
	pop	rbx
$LN52@rcDelete:
	ret	0
??$rcDelete@UrcPolyMesh@@@?A0x5b7010ac@@YAXPEAUrcPolyMesh@@@Z ENDP ; `anonymous namespace'::rcDelete<rcPolyMesh>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcIgnoreUnused@PEAVrcContext@@@@YAXAEBQEAVrcContext@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
??$rcIgnoreUnused@PEAVrcContext@@@@YAXAEBQEAVrcContext@@@Z PROC ; rcIgnoreUnused<rcContext *>, COMDAT

; 26   : template<class T> void rcIgnoreUnused(const T&) { }

	ret	0
??$rcIgnoreUnused@PEAVrcContext@@@@YAXAEBQEAVrcContext@@@Z ENDP ; rcIgnoreUnused<rcContext *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcClamp@H@@YAHHHH@Z
_TEXT	SEGMENT
value$ = 8
minInclusive$ = 16
maxInclusive$ = 24
??$rcClamp@H@@YAHHHH@Z PROC				; rcClamp<int>, COMDAT

; 683  : 	return value < minInclusive ? minInclusive: (value > maxInclusive ? maxInclusive : value);

	cmp	ecx, edx
	jge	SHORT $LN3@rcClamp
	mov	eax, edx

; 684  : }

	ret	0
$LN3@rcClamp:

; 683  : 	return value < minInclusive ? minInclusive: (value > maxInclusive ? maxInclusive : value);

	cmp	ecx, r8d
	cmovg	ecx, r8d
	mov	eax, ecx

; 684  : }

	ret	0
??$rcClamp@H@@YAHHHH@Z ENDP				; rcClamp<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcMax@G@@YAGGG@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
??$rcMax@G@@YAGGG@Z PROC				; rcMax<unsigned short>, COMDAT

; 664  : template<class T> inline T rcMax(T a, T b) { return a > b ? a : b; }

	cmp	cx, dx
	cmova	dx, cx
	movzx	eax, dx
	ret	0
??$rcMax@G@@YAGGG@Z ENDP				; rcMax<unsigned short>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcMin@I@@YAIII@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
??$rcMin@I@@YAIII@Z PROC				; rcMin<unsigned int>, COMDAT

; 658  : template<class T> inline T rcMin(T a, T b) { return a < b ? a : b; }

	cmp	ecx, edx
	cmovb	edx, ecx
	mov	eax, edx
	ret	0
??$rcMin@I@@YAIII@Z ENDP				; rcMin<unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcAbs@H@@YAHH@Z
_TEXT	SEGMENT
a$ = 8
??$rcAbs@H@@YAHH@Z PROC					; rcAbs<int>, COMDAT

; 669  : template<class T> inline T rcAbs(T a) { return a < 0 ? -a : a; }

	mov	eax, ecx
	cdq
	xor	eax, edx
	sub	eax, edx
	ret	0
??$rcAbs@H@@YAHH@Z ENDP					; rcAbs<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcMax@H@@YAHHH@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
??$rcMax@H@@YAHHH@Z PROC				; rcMax<int>, COMDAT

; 664  : template<class T> inline T rcMax(T a, T b) { return a > b ? a : b; }

	cmp	ecx, edx
	cmovg	edx, ecx
	mov	eax, edx
	ret	0
??$rcMax@H@@YAHHH@Z ENDP				; rcMax<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
;	COMDAT ??_GrcHeightfield@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GrcHeightfield@@QEAAPEAXI@Z PROC			; rcHeightfield::`scalar deleting destructor', COMDAT
$LN30:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

; 112  : 	rcFree(spans);

	mov	rcx, QWORD PTR [rcx+40]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN23@scalar

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN23@scalar:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 114  : 	while (pools)

	mov	rcx, QWORD PTR [rdi+48]
	test	rcx, rcx
	je	SHORT $LN27@scalar
$LL5@scalar:

; 115  : 	{
; 116  : 		rcSpanPool* next = pools->next;

	mov	rbx, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 118  : 		pools = next;

	mov	QWORD PTR [rdi+48], rbx

; 114  : 	while (pools)

	mov	rcx, rbx
	test	rbx, rbx
	jne	SHORT $LL5@scalar
$LN27@scalar:
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GrcHeightfield@@QEAAPEAXI@Z ENDP			; rcHeightfield::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
;	COMDAT ??_GrcPolyMesh@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_GrcPolyMesh@@QEAAPEAXI@Z PROC			; rcPolyMesh::`scalar deleting destructor', COMDAT
$LN45:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 253  : 	rcFree(verts);

	mov	rcx, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN10@scalar

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN10@scalar:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 254  : 	rcFree(polys);

	mov	rcx, QWORD PTR [rbx+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN17@scalar

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN17@scalar:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 255  : 	rcFree(regs);

	mov	rcx, QWORD PTR [rbx+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN24@scalar

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN24@scalar:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 256  : 	rcFree(flags);

	mov	rcx, QWORD PTR [rbx+24]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN31@scalar

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN31@scalar:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 257  : 	rcFree(areas);

	mov	rcx, QWORD PTR [rbx+32]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN42@scalar

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
	npad	1
$LN42@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GrcPolyMesh@@QEAAPEAXI@Z ENDP			; rcPolyMesh::`scalar deleting destructor'
_TEXT	ENDS
END

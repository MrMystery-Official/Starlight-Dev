; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?Open@UIActorTool@@3_NA				; UIActorTool::Open
PUBLIC	??_C@_01JLIPDDHJ@?3@				; `string'
PUBLIC	??_C@_0BD@LBOMPJLA@Unknown?5node?5type?5@	; `string'
PUBLIC	??_C@_09DPPIGPDC@ActorTool@			; `string'
PUBLIC	??_C@_0BC@NOCHEKDO@?$CD?$CDActorPackFilter@	; `string'
PUBLIC	??_C@_0BA@KMNGBICD@No?5actor?5named?5@		; `string'
PUBLIC	??_C@_0BB@CDKDJHGN@?$CD?$CDActorPackFiles@	; `string'
PUBLIC	??_C@_0L@CMFHNNEL@NameColumn@			; `string'
PUBLIC	??_C@_0BB@FFKPPMAM@?$CD?$CDActorNameInput@	; `string'
PUBLIC	??_C@_0BE@JGDLLNNG@Load?$CD?$CDActorPackFile@	; `string'
PUBLIC	??_C@_07IJIEEABP@?5loaded@			; `string'
PUBLIC	??_C@_06KDGJBKHO@Actor?5@			; `string'
PUBLIC	??_C@_06HHNIANOB@?5found@			; `string'
PUBLIC	??_C@_0M@NJMHPDHM@?1Pack?1Actor@		; `string'
PUBLIC	??_C@_0N@ELHGMCIJ@?1Pack?1Actor?1@		; `string'
PUBLIC	??_C@_0BI@GMLOOABG@Rename?$CD?$CDActorNameRename@ ; `string'
PUBLIC	??_C@_04IJGFFNHJ@BYML@				; `string'
PUBLIC	??_C@_04CBJODOB@AINB@				; `string'
PUBLIC	??_C@_06NFHLNPAF@Open?$CD?$CD@			; `string'
PUBLIC	?Focused@UIActorTool@@3_NA			; UIActorTool::Focused
?Focused@UIActorTool@@3_NA DB 01H DUP (?)		; UIActorTool::Focused
_BSS	ENDS
;	COMDAT ??_C@_06NFHLNPAF@Open?$CD?$CD@
CONST	SEGMENT
??_C@_06NFHLNPAF@Open?$CD?$CD@ DB 'Open##', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CBJODOB@AINB@
CONST	SEGMENT
??_C@_04CBJODOB@AINB@ DB 'AINB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04IJGFFNHJ@BYML@
CONST	SEGMENT
??_C@_04IJGFFNHJ@BYML@ DB 'BYML', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GMLOOABG@Rename?$CD?$CDActorNameRename@
CONST	SEGMENT
??_C@_0BI@GMLOOABG@Rename?$CD?$CDActorNameRename@ DB 'Rename##ActorNameRe'
	DB	'name', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ELHGMCIJ@?1Pack?1Actor?1@
CONST	SEGMENT
??_C@_0N@ELHGMCIJ@?1Pack?1Actor?1@ DB '/Pack/Actor/', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NJMHPDHM@?1Pack?1Actor@
CONST	SEGMENT
??_C@_0M@NJMHPDHM@?1Pack?1Actor@ DB '/Pack/Actor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HHNIANOB@?5found@
CONST	SEGMENT
??_C@_06HHNIANOB@?5found@ DB ' found', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KDGJBKHO@Actor?5@
CONST	SEGMENT
??_C@_06KDGJBKHO@Actor?5@ DB 'Actor ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07IJIEEABP@?5loaded@
CONST	SEGMENT
??_C@_07IJIEEABP@?5loaded@ DB ' loaded', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JGDLLNNG@Load?$CD?$CDActorPackFile@
CONST	SEGMENT
??_C@_0BE@JGDLLNNG@Load?$CD?$CDActorPackFile@ DB 'Load##ActorPackFile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FFKPPMAM@?$CD?$CDActorNameInput@
CONST	SEGMENT
??_C@_0BB@FFKPPMAM@?$CD?$CDActorNameInput@ DB '##ActorNameInput', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CMFHNNEL@NameColumn@
CONST	SEGMENT
??_C@_0L@CMFHNNEL@NameColumn@ DB 'NameColumn', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CDKDJHGN@?$CD?$CDActorPackFiles@
CONST	SEGMENT
??_C@_0BB@CDKDJHGN@?$CD?$CDActorPackFiles@ DB '##ActorPackFiles', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KMNGBICD@No?5actor?5named?5@
CONST	SEGMENT
??_C@_0BA@KMNGBICD@No?5actor?5named?5@ DB 'No actor named ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NOCHEKDO@?$CD?$CDActorPackFilter@
CONST	SEGMENT
??_C@_0BC@NOCHEKDO@?$CD?$CDActorPackFilter@ DB '##ActorPackFilter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DPPIGPDC@ActorTool@
CONST	SEGMENT
??_C@_09DPPIGPDC@ActorTool@ DB 'ActorTool', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LBOMPJLA@Unknown?5node?5type?5@
CONST	SEGMENT
??_C@_0BD@LBOMPJLA@Unknown?5node?5type?5@ DB 'Unknown node type ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3@ DB ':', 00H			; `string'
?Open@UIActorTool@@3_NA DB 01H				; UIActorTool::Open
PUBLIC	??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>
PUBLIC	??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &,0>
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>
PUBLIC	??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
PUBLIC	??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > ><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
PUBLIC	??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@$$QEAU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >
PUBLIC	??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>
PUBLIC	??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>
PUBLIC	??$forward@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>
PUBLIC	??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@$$QEAU10@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,0>
PUBLIC	??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,0>
PUBLIC	??$forward@AEAPEAUEntry@SarcFile@@@std@@YAAEAPEAUEntry@SarcFile@@AEAPEAU12@@Z ; std::forward<SarcFile::Entry * &>
PUBLIC	??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>
PUBLIC	??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &,0>
PUBLIC	??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
PUBLIC	??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &,0>
PUBLIC	??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
PUBLIC	??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@$$QEAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
PUBLIC	??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &>
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
PUBLIC	??$?0AEAPEAUEntry@SarcFile@@AEAPEAU01@$0A@@?$pair@PEAUEntry@SarcFile@@PEAU12@@std@@QEAA@AEAPEAUEntry@SarcFile@@0@Z ; std::pair<SarcFile::Entry *,SarcFile::Entry *>::pair<SarcFile::Entry *,SarcFile::Entry *><SarcFile::Entry * &,SarcFile::Entry * &,0>
PUBLIC	??$swap@UEntry@SarcFile@@$0A@@std@@YAXAEAUEntry@SarcFile@@0@Z ; std::swap<SarcFile::Entry,0>
PUBLIC	??$_Next_iter@PEAUEntry@SarcFile@@@std@@YAPEAUEntry@SarcFile@@PEAU12@@Z ; std::_Next_iter<SarcFile::Entry *>
PUBLIC	??$_Prev_iter@PEAUEntry@SarcFile@@@std@@YAPEAUEntry@SarcFile@@PEAU12@@Z ; std::_Prev_iter<SarcFile::Entry *>
PUBLIC	??$_Move_backward_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z ; std::_Move_backward_unchecked<SarcFile::Entry *,SarcFile::Entry *>
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAAPEAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::`scalar deleting destructor'
PUBLIC	??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@@Z ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
PUBLIC	??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * const &,0>
PUBLIC	??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *>
PUBLIC	??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * const &,0>
PUBLIC	??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
PUBLIC	??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
PUBLIC	??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
PUBLIC	??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *>
PUBLIC	??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEBQEAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * const &>
PUBLIC	??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &>
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >
PUBLIC	??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
PUBLIC	??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEBQEAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * const &>
PUBLIC	??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
PUBLIC	??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >
PUBLIC	??$forward@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z ; std::forward<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
PUBLIC	??$forward@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z ; std::forward<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > >
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
PUBLIC	??$?0AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &,bool,0>
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
PUBLIC	??$forward@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@AEAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > >
PUBLIC	??$?0AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &,bool,0>
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
PUBLIC	??$forward@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
PUBLIC	??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
PUBLIC	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Allocate
PUBLIC	??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
PUBLIC	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Allocate
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAA@XZ ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAA@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@QEAA@XZ ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAA@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >
PUBLIC	?_Seek_to@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Seek_to
PUBLIC	?_Seek_to@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Seek_to
PUBLIC	??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
PUBLIC	??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
PUBLIC	?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@Z ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >::_Extract
PUBLIC	?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@2@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@2@@Z ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >::_Extract
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAAPEAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::`scalar deleting destructor'
PUBLIC	??$_Get_size_of_n@$0BCA@@std@@YA_K_K@Z		; std::_Get_size_of_n<288>
PUBLIC	??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::nullptr_t>
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
PUBLIC	??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
PUBLIC	??$construct_at@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@AEBV12@$0A@@std@@YAPEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@QEAV10@AEBV10@@Z ; std::construct_at<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > const &,0>
PUBLIC	??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > const &>
PUBLIC	??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * const &>
PUBLIC	??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * const &>
PUBLIC	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>
PUBLIC	??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *>
PUBLIC	??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@@Z ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
PUBLIC	??$move@AEAV?$allocator@UEntry@SarcFile@@@std@@@std@@YA$$QEAV?$allocator@UEntry@SarcFile@@@0@AEAV10@@Z ; std::move<std::allocator<SarcFile::Entry> &>
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
PUBLIC	??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &>
PUBLIC	??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool,0>
PUBLIC	??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * const &,bool,0>
PUBLIC	??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
PUBLIC	??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
PUBLIC	??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >
PUBLIC	??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool,0>
PUBLIC	??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * const &,bool,0>
PUBLIC	??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >
PUBLIC	??$construct_at@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@V12@$0A@@std@@YAPEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@QEAV10@$$QEAV10@@Z ; std::construct_at<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0>
PUBLIC	??$forward@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEAV10@@Z ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
PUBLIC	??$addressof@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YAPEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEAV10@@Z ; std::addressof<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
PUBLIC	??$_Seek_wrapped@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@2@@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@@Z ; std::_Seek_wrapped<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
PUBLIC	??$move@AEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z ; std::move<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
PUBLIC	??$move@AEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
PUBLIC	??$_Seek_wrapped@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@@Z ; std::_Seek_wrapped<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > >
PUBLIC	??$move@AEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z ; std::move<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > &>
PUBLIC	??$move@AEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > &>
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@1@AEB_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool const &,0>
PUBLIC	??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
PUBLIC	??$move@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@AEAU10@@Z ; std::move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > &>
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@1@AEB_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,bool const &,0>
PUBLIC	??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
PUBLIC	??$move@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z ; std::move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>
PUBLIC	??$forward@VBymlFile@@@std@@YA$$QEAVBymlFile@@AEAV1@@Z ; std::forward<BymlFile>
PUBLIC	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > > >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1><>
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@_K@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::deallocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::max_size
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
PUBLIC	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@PEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Max
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@PEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Min
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@_K@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >::deallocate
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::max_size
PUBLIC	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Lrotate
PUBLIC	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Rrotate
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_first
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>::operator--
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base0>::operator++
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base0>::operator--
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
PUBLIC	??0?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >
PUBLIC	??0?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
PUBLIC	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@_K@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::deallocate
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@_K@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocate
PUBLIC	?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Check_grow_by_1
PUBLIC	?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Insert_node
PUBLIC	?_Unwrapped@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Unwrapped
PUBLIC	?_Unwrapped@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@2@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Unwrapped
PUBLIC	??E?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator++
PUBLIC	??F?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator--
PUBLIC	??E?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
PUBLIC	??F?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--
PUBLIC	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Release
PUBLIC	??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
PUBLIC	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Release
PUBLIC	??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
PUBLIC	?__autoclassinit2@?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAX_K@Z ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::__autoclassinit2
PUBLIC	??$_Construct_in_place@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@AEBV12@@std@@YAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEBV10@@Z ; std::_Construct_in_place<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > const &>
PUBLIC	??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
PUBLIC	??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
PUBLIC	??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy<0>
PUBLIC	??$_Pocca@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@0@AEBV10@@Z ; std::_Pocca<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
PUBLIC	??$addressof@$$CBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@@std@@YAPEBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@0@AEBV10@@Z ; std::addressof<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> > const >
PUBLIC	??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> ><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >
PUBLIC	??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@0@AEBV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > const >
PUBLIC	??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@0@AEBV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > const >
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@AEAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
PUBLIC	??$_Pocma@V?$allocator@UEntry@SarcFile@@@std@@@std@@YAXAEAV?$allocator@UEntry@SarcFile@@@0@0@Z ; std::_Pocma<std::allocator<SarcFile::Entry> >
PUBLIC	??$addressof@V?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@@std@@YAPEAV?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@0@AEAV10@@Z ; std::addressof<std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> > >
PUBLIC	??4Entry@SarcFile@@QEAAAEAU01@$$QEAU01@@Z	; SarcFile::Entry::operator=
PUBLIC	??$_Move_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z ; std::_Move_unchecked<SarcFile::Entry *,SarcFile::Entry *>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >
PUBLIC	??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
PUBLIC	??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$_Construct_in_place@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@V12@@std@@YAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@$$QEAV10@@Z ; std::_Construct_in_place<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
PUBLIC	??$move@AEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEAV10@@Z ; std::move<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > &>
PUBLIC	??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::nullptr_t>
PUBLIC	??$_Destroy_in_place@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@@Z ; std::_Destroy_in_place<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
PUBLIC	??$advance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@H@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@H@Z ; std::advance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,int>
PUBLIC	??$_Get_unwrapped_n@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@H@std@@YA?A_T$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@H@Z ; std::_Get_unwrapped_n<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,int>
PUBLIC	??$advance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@H@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@H@Z ; std::advance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,int>
PUBLIC	??$_Get_unwrapped_n@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@H@std@@YA?A_T$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@H@Z ; std::_Get_unwrapped_n<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,int>
PUBLIC	??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>
PUBLIC	??$move@AEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@@std@@YA$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@0@AEAV10@@Z ; std::move<std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile> &>
PUBLIC	??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::insert<0,0>
PUBLIC	??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,std::vector<unsigned char,std::allocator<unsigned char> > &,0>
PUBLIC	??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert<0,0>
PUBLIC	??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,BymlFile,0>
PUBLIC	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBAPEAUEntry@SarcFile@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::_Unwrapped
PUBLIC	??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@@std@@YA?A_TAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > > const &>
PUBLIC	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@PEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Max
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@PEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Min
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@2@$00@std@@QEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>,1>::_Get_first
PUBLIC	??0?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAA@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@@Z ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>::operator++
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::max_size
PUBLIC	?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Alloc_sentinel_and_proxy
PUBLIC	?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getcomp
PUBLIC	?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getcomp
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getal
PUBLIC	?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Extract
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>::_Get_first
PUBLIC	?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Alloc_sentinel_and_proxy
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first
PUBLIC	?_Make@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@SA?AV12@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@Z ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Make
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator*
PUBLIC	?_Unwrapped@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Unwrapped
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*
PUBLIC	?_Take_contents@?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<SarcFile::Entry> >::_Take_contents
PUBLIC	??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >
PUBLIC	??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::operator=
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::max_size
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::find
PUBLIC	?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::extract
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Get_scary
PUBLIC	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Lrotate
PUBLIC	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Rrotate
PUBLIC	?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Orphan_ptr
PUBLIC	??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_scary
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_scary
PUBLIC	?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Orphan_ptr
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAA@PEAUEntry@SarcFile@@PEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::operator++
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::_Compat
PUBLIC	?_Datum@?$_Node_handle_map_base@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEBAAEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@XZ ; std::_Node_handle_map_base<std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Datum
PUBLIC	?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Clear
PUBLIC	?_Getal@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Getal
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator==
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator*
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base0>
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*
PUBLIC	?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@2@AEAU32@@Z ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > *>::pointer_to
PUBLIC	?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@AEAU32@@Z ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> *>::pointer_to
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	?__autoclassinit2@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAX_K@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::__autoclassinit2
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
PUBLIC	?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind
PUBLIC	??4?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::operator=
PUBLIC	?erase@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@@Z ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::erase
PUBLIC	?begin@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@XZ ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::begin
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAA@PEAUEntry@SarcFile@@PEBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >
PUBLIC	?end@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@XZ ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::end
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::begin
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::end
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::size
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::clear
PUBLIC	?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::count
PUBLIC	?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Check_grow_by_1
PUBLIC	?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::extract
PUBLIC	?_Check_node_allocator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAXAEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Check_node_allocator
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Get_scary
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Insert_node
PUBLIC	??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
PUBLIC	??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator=
PUBLIC	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::size
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::clear
PUBLIC	?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::count
PUBLIC	??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAA@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >
PUBLIC	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::operator==
PUBLIC	??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBAPEAUEntry@SarcFile@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::operator->
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAA?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::operator++
PUBLIC	?key@?$_Node_handle_map_base@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Node_handle_map_base<std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::key
PUBLIC	?mapped@?$_Node_handle_map_base@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBAAEAVBymlFile@@XZ ; std::_Node_handle_map_base<std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::mapped
PUBLIC	??0?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
PUBLIC	??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::~_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
PUBLIC	??0?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@$$QEAV01@@Z ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
PUBLIC	?_Getptr@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Getptr
PUBLIC	?empty@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBA_NXZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::empty
PUBLIC	?_Release@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Release
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator->
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator->
PUBLIC	?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAAX_K@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::__autoclassinit2
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >
PUBLIC	?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::__autoclassinit2
PUBLIC	?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAX_K@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::__autoclassinit2
PUBLIC	??1?$_Insert_return_type@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@std@@QEAA@XZ ; std::_Insert_return_type<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile> >::~_Insert_return_type<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile> >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >
PUBLIC	?__autoclassinit2@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAX_K@Z ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::__autoclassinit2
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>
PUBLIC	??4SarcFile@@QEAAAEAV0@$$QEAV0@@Z		; SarcFile::operator=
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert
PUBLIC	?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z ; ReplaceStringInBymlNodes
PUBLIC	?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z	; DisplayBymlNode
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAA@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
PUBLIC	??1ActorPackStruct@UIActorTool@@QEAA@XZ		; UIActorTool::ActorPackStruct::~ActorPackStruct
PUBLIC	??0ActorPackStruct@UIActorTool@@QEAA@XZ		; UIActorTool::ActorPackStruct::ActorPackStruct
PUBLIC	??0SarcFile@@QEAA@XZ				; SarcFile::SarcFile
PUBLIC	?DrawActorToolWindow@UIActorTool@@YAXXZ		; UIActorTool::DrawActorToolWindow
PUBLIC	?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; UIActorTool::Save
PUBLIC	?UpdateActorList@UIActorTool@@YAXXZ		; UIActorTool::UpdateActorList
PUBLIC	?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; UIActorTool::ActorPackFilter
PUBLIC	?ActorPack@UIActorTool@@3UActorPackStruct@1@A	; UIActorTool::ActorPack
PUBLIC	?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A ; UIActorTool::ActorList
?ActorPack@UIActorTool@@3UActorPackStruct@1@A DB 0b0H DUP (?) ; UIActorTool::ActorPack
?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A DB 018H DUP (?) ; UIActorTool::ActorList
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z DD imagerel $LN7
	DD	imagerel $LN7+55
	DD	imagerel $unwind$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z DD imagerel $LN9
	DD	imagerel $LN9+55
	DD	imagerel $unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DD imagerel $LN7
	DD	imagerel $LN7+41
	DD	imagerel $unwind$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DD imagerel $LN13
	DD	imagerel $LN13+40
	DD	imagerel $unwind$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@$$QEAU01@@Z DD imagerel $LN19
	DD	imagerel $LN19+73
	DD	imagerel $unwind$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@$$QEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z DD imagerel $LN7
	DD	imagerel $LN7+55
	DD	imagerel $unwind$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD imagerel $LN71
	DD	imagerel $LN71+134
	DD	imagerel $unwind$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@$$QEAU10@@Z DD imagerel $LN21
	DD	imagerel $LN21+73
	DD	imagerel $unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@$$QEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z DD imagerel $LN9
	DD	imagerel $LN9+55
	DD	imagerel $unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+110
	DD	imagerel $unwind$??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pop_heap_hole_unchecked@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Pop_heap_hole_unchecked@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Pop_heap_hole_unchecked@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+119
	DD	imagerel $unwind$??$_Pop_heap_hole_unchecked@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+29
	DD	imagerel $unwind$??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+29
	DD	imagerel ??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+107
	DD	imagerel $chain$0$??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+107
	DD	imagerel ??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+149
	DD	imagerel $chain$1$??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DD imagerel $LN10
	DD	imagerel $LN10+41
	DD	imagerel $unwind$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+40
	DD	imagerel $unwind$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD imagerel $LN74
	DD	imagerel $LN74+134
	DD	imagerel $unwind$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DD imagerel $LN14
	DD	imagerel $LN14+46
	DD	imagerel $unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DD imagerel $LN20
	DD	imagerel $LN20+40
	DD	imagerel $unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@$$QEAU31@@Z DD imagerel $LN23
	DD	imagerel $LN23+76
	DD	imagerel $unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@$$QEAU31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z DD imagerel $LN11
	DD	imagerel $LN11+63
	DD	imagerel $unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@UEntry@SarcFile@@$0A@@std@@YAXAEAUEntry@SarcFile@@0@Z DD imagerel $LN98
	DD	imagerel $LN98+268
	DD	imagerel $unwind$??$swap@UEntry@SarcFile@@$0A@@std@@YAXAEAUEntry@SarcFile@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+48
	DD	imagerel $unwind$??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+48
	DD	imagerel ??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+182
	DD	imagerel $chain$3$??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+182
	DD	imagerel ??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+198
	DD	imagerel $chain$4$??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+74
	DD	imagerel $unwind$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+74
	DD	imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+238
	DD	imagerel $chain$2$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+238
	DD	imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+320
	DD	imagerel $chain$3$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+320
	DD	imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+345
	DD	imagerel $chain$4$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pop_heap_hole_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Pop_heap_hole_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Pop_heap_hole_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+339
	DD	imagerel $unwind$??$_Pop_heap_hole_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_backward_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z DD imagerel $LN17
	DD	imagerel $LN17+88
	DD	imagerel $unwind$??$_Move_backward_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+23
	DD	imagerel $unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z DD imagerel $LN88
	DD	imagerel $LN88+30
	DD	imagerel $unwind$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z DD imagerel $LN88+30
	DD	imagerel $LN88+163
	DD	imagerel $chain$2$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z DD imagerel $LN88+163
	DD	imagerel $LN88+173
	DD	imagerel $chain$3$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD imagerel $LN77
	DD	imagerel $LN77+134
	DD	imagerel $unwind$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DD imagerel $LN16
	DD	imagerel $LN16+46
	DD	imagerel $unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DD imagerel $LN22
	DD	imagerel $LN22+40
	DD	imagerel $unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DD imagerel $LN70
	DD	imagerel $LN70+165
	DD	imagerel $unwind$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD imagerel $LN54
	DD	imagerel $LN54+141
	DD	imagerel $unwind$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Partition_by_median_guess_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YA?AU?$pair@PEAUEntry@SarcFile@@PEAU12@@0@PEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Partition_by_median_guess_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YA?AU?$pair@PEAUEntry@SarcFile@@PEAU12@@0@PEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Partition_by_median_guess_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YA?AU?$pair@PEAUEntry@SarcFile@@PEAU12@@0@PEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+2387
	DD	imagerel $unwind$??$_Partition_by_median_guess_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YA?AU?$pair@PEAUEntry@SarcFile@@PEAU12@@0@PEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+50
	DD	imagerel $unwind$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+50
	DD	imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+400
	DD	imagerel $chain$5$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+400
	DD	imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+423
	DD	imagerel $chain$6$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+423
	DD	imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+430
	DD	imagerel $chain$7$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+76
	DD	imagerel $unwind$??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+76
	DD	imagerel ??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+708
	DD	imagerel $chain$5$??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+708
	DD	imagerel ??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+733
	DD	imagerel $chain$6$??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Insertion_sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAPEAUEntry@SarcFile@@QEAU12@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Insertion_sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAPEAUEntry@SarcFile@@QEAU12@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Insertion_sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAPEAUEntry@SarcFile@@QEAU12@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+643
	DD	imagerel $unwind$??$_Insertion_sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAPEAUEntry@SarcFile@@QEAU12@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ DD imagerel $LN33
	DD	imagerel $LN33+37
	DD	imagerel $unwind$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ DD imagerel $LN29
	DD	imagerel $LN29+37
	DD	imagerel $unwind$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DD imagerel $LN40
	DD	imagerel $LN40+43
	DD	imagerel $unwind$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z DD imagerel $LN36
	DD	imagerel $LN36+45
	DD	imagerel $unwind$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAAPEAXI@Z DD imagerel $LN27
	DD	imagerel $LN27+83
	DD	imagerel $unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD imagerel $LN31
	DD	imagerel $LN31+79
	DD	imagerel $unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z DD imagerel $LN87
	DD	imagerel $LN87+223
	DD	imagerel $unwind$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z@4HA DD imagerel ?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z@4HA
	DD	imagerel ?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z@4HA+44
	DD	imagerel $unwind$?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@@Z DD imagerel $LN29
	DD	imagerel $LN29+79
	DD	imagerel $unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN77
	DD	imagerel $LN77+106
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DD imagerel $LN59
	DD	imagerel $LN59+143
	DD	imagerel $unwind$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN56
	DD	imagerel $LN56+36
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DD imagerel $LN69
	DD	imagerel $LN69+147
	DD	imagerel $unwind$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DD imagerel $LN144
	DD	imagerel $LN144+321
	DD	imagerel $unwind$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD imagerel $LN149
	DD	imagerel $LN149+308
	DD	imagerel $unwind$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+274
	DD	imagerel $unwind$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+274
	DD	imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+560
	DD	imagerel $chain$0$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+560
	DD	imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+591
	DD	imagerel $chain$1$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+591
	DD	imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+598
	DD	imagerel $chain$2$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+31
	DD	imagerel $unwind$?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ DD imagerel $LN5
	DD	imagerel $LN5+20
	DD	imagerel $unwind$??E?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN43
	DD	imagerel $LN43+57
	DD	imagerel $unwind$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN64
	DD	imagerel $LN64+4
	DD	imagerel $unwind$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN64+4
	DD	imagerel $LN64+33
	DD	imagerel $chain$1$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN64+33
	DD	imagerel $LN64+96
	DD	imagerel $chain$2$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN64+96
	DD	imagerel $LN64+115
	DD	imagerel $chain$3$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN64+115
	DD	imagerel $LN64+134
	DD	imagerel $chain$4$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z DD imagerel $LN29
	DD	imagerel $LN29+36
	DD	imagerel $unwind$??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DD imagerel $LN33
	DD	imagerel $LN33+36
	DD	imagerel $unwind$??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z DD imagerel $LN26
	DD	imagerel $LN26+164
	DD	imagerel $unwind$??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN32
	DD	imagerel $LN32+131
	DD	imagerel $unwind$??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD imagerel $LN31
	DD	imagerel $LN31+79
	DD	imagerel $unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4Entry@SarcFile@@QEAAAEAU01@$$QEAU01@@Z DD imagerel $LN5
	DD	imagerel $LN5+48
	DD	imagerel $unwind$??4Entry@SarcFile@@QEAAAEAU01@$$QEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z DD imagerel $LN17
	DD	imagerel $LN17+88
	DD	imagerel $unwind$??$_Move_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z DD imagerel $LN49
	DD	imagerel $LN49+39
	DD	imagerel $unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z DD imagerel $LN88
	DD	imagerel $LN88+30
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z DD imagerel $LN88+30
	DD	imagerel $LN88+163
	DD	imagerel $chain$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z DD imagerel $LN88+163
	DD	imagerel $LN88+173
	DD	imagerel $chain$3$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN162
	DD	imagerel $LN162+313
	DD	imagerel $unwind$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DD imagerel $LN113
	DD	imagerel $LN113+27
	DD	imagerel $unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DD imagerel $LN113+27
	DD	imagerel $LN113+86
	DD	imagerel $chain$0$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DD imagerel $LN113+86
	DD	imagerel $LN113+106
	DD	imagerel $chain$1$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z DD imagerel $LN67
	DD	imagerel $LN67+24
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z DD imagerel $LN67+24
	DD	imagerel $LN67+86
	DD	imagerel $chain$0$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z DD imagerel $LN67+86
	DD	imagerel $LN67+94
	DD	imagerel $chain$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+40
	DD	imagerel $unwind$??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN20
	DD	imagerel $LN20+115
	DD	imagerel $unwind$??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN151
	DD	imagerel $LN151+303
	DD	imagerel $unwind$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+40
	DD	imagerel $unwind$??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN20
	DD	imagerel $LN20+115
	DD	imagerel $unwind$??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DD imagerel $LN154
	DD	imagerel $LN154+320
	DD	imagerel $unwind$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z DD imagerel $LN7
	DD	imagerel $LN7+54
	DD	imagerel $unwind$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD imagerel $LN159
	DD	imagerel $LN159+307
	DD	imagerel $unwind$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z DD imagerel $LN7
	DD	imagerel $LN7+54
	DD	imagerel $unwind$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD imagerel ??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+48
	DD	imagerel $unwind$??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD imagerel $LN32
	DD	imagerel $LN32+45
	DD	imagerel $unwind$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z DD imagerel $LN156
	DD	imagerel $LN156+435
	DD	imagerel $unwind$?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z DD imagerel $LN156+435
	DD	imagerel $LN156+935
	DD	imagerel $chain$0$?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z DD imagerel $LN156+935
	DD	imagerel $LN156+970
	DD	imagerel $chain$1$?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD imagerel $LN36
	DD	imagerel $LN36+45
	DD	imagerel $unwind$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD imagerel $LN42
	DD	imagerel $LN42+57
	DD	imagerel $unwind$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN34
	DD	imagerel $LN34+25
	DD	imagerel $unwind$??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN34+25
	DD	imagerel $LN34+115
	DD	imagerel $chain$0$??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN34+115
	DD	imagerel $LN34+218
	DD	imagerel $chain$1$??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD imagerel $LN41
	DD	imagerel $LN41+142
	DD	imagerel $unwind$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@@Z DD imagerel $LN13
	DD	imagerel $LN13+29
	DD	imagerel $unwind$?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD imagerel $LN46
	DD	imagerel $LN46+55
	DD	imagerel $unwind$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ DD imagerel $LN79
	DD	imagerel $LN79+28
	DD	imagerel $unwind$?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ DD imagerel $LN79+28
	DD	imagerel $LN79+111
	DD	imagerel $chain$0$?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ DD imagerel $LN79+111
	DD	imagerel $LN79+122
	DD	imagerel $chain$1$?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN10
	DD	imagerel $LN10+75
	DD	imagerel $unwind$??4?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@@Z DD imagerel $LN28
	DD	imagerel $LN28+133
	DD	imagerel $unwind$?erase@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN52
	DD	imagerel $LN52+42
	DD	imagerel $unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD imagerel $LN30
	DD	imagerel $LN30+127
	DD	imagerel $unwind$?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+31
	DD	imagerel $unwind$?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD imagerel $LN69
	DD	imagerel $LN69+155
	DD	imagerel $unwind$?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN46
	DD	imagerel $LN46+57
	DD	imagerel $unwind$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN35
	DD	imagerel $LN35+25
	DD	imagerel $unwind$??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN35+25
	DD	imagerel $LN35+115
	DD	imagerel $chain$0$??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN35+115
	DD	imagerel $LN35+218
	DD	imagerel $chain$1$??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN164
	DD	imagerel $LN164+299
	DD	imagerel $unwind$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN116
	DD	imagerel $LN116+26
	DD	imagerel $unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN116+26
	DD	imagerel $LN116+86
	DD	imagerel $chain$0$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN116+86
	DD	imagerel $LN116+109
	DD	imagerel $chain$1$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD imagerel $LN70
	DD	imagerel $LN70+32
	DD	imagerel $unwind$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD imagerel $LN70+32
	DD	imagerel $LN70+102
	DD	imagerel $chain$0$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD imagerel $LN70+102
	DD	imagerel $LN70+138
	DD	imagerel $chain$1$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD imagerel $LN30
	DD	imagerel $LN30+127
	DD	imagerel $unwind$?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN50
	DD	imagerel $LN50+55
	DD	imagerel $unwind$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN153
	DD	imagerel $LN153+292
	DD	imagerel $unwind$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ DD imagerel $LN82
	DD	imagerel $LN82+28
	DD	imagerel $unwind$??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ DD imagerel $LN82+28
	DD	imagerel $LN82+111
	DD	imagerel $chain$0$??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ DD imagerel $LN82+111
	DD	imagerel $LN82+122
	DD	imagerel $chain$1$??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ DD imagerel $LN39
	DD	imagerel $LN39+97
	DD	imagerel $unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@XZ DD imagerel $LN23
	DD	imagerel $LN23+79
	DD	imagerel $unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4SarcFile@@QEAAAEAV0@$$QEAV0@@Z DD imagerel $LN12
	DD	imagerel $LN12+98
	DD	imagerel $unwind$??4SarcFile@@QEAAAEAV0@$$QEAV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ DD imagerel ?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ
	DD	imagerel ?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ+184
	DD	imagerel $unwind$?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ DD imagerel ??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ
	DD	imagerel ??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ+184
	DD	imagerel $unwind$??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z DD imagerel $LN86
	DD	imagerel $LN86+66
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z DD imagerel $LN86+66
	DD	imagerel $LN86+350
	DD	imagerel $chain$2$?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z DD imagerel $LN86+350
	DD	imagerel $LN86+356
	DD	imagerel $chain$4$?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel ??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel ??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z+511
	DD	imagerel $unwind$??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@AEBUEntry@SarcFile@@0@Z DD imagerel ??R<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@AEBUEntry@SarcFile@@0@Z
	DD	imagerel ??R<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@AEBUEntry@SarcFile@@0@Z+23
	DD	imagerel $unwind$??R<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@AEBUEntry@SarcFile@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z DD imagerel $LN225
	DD	imagerel $LN225+829
	DD	imagerel $unwind$?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z DD imagerel $LN1605
	DD	imagerel $LN1605+5139
	DD	imagerel $unwind$?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN55
	DD	imagerel $LN55+42
	DD	imagerel $unwind$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ActorPackStruct@UIActorTool@@QEAA@XZ DD imagerel $LN128
	DD	imagerel $LN128+140
	DD	imagerel $unwind$??1ActorPackStruct@UIActorTool@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ActorPackStruct@UIActorTool@@QEAA@XZ DD imagerel $LN184
	DD	imagerel $LN184+320
	DD	imagerel $unwind$??0ActorPackStruct@UIActorTool@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FActorPack@UIActorTool@@YAXXZ DD imagerel ??__FActorPack@UIActorTool@@YAXXZ
	DD	imagerel ??__FActorPack@UIActorTool@@YAXXZ+162
	DD	imagerel $unwind$??__FActorPack@UIActorTool@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EActorPack@UIActorTool@@YAXXZ DD imagerel ??__EActorPack@UIActorTool@@YAXXZ
	DD	imagerel ??__EActorPack@UIActorTool@@YAXXZ+279
	DD	imagerel $unwind$??__EActorPack@UIActorTool@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FActorPackFilter@UIActorTool@@YAXXZ DD imagerel ??__FActorPackFilter@UIActorTool@@YAXXZ
	DD	imagerel ??__FActorPackFilter@UIActorTool@@YAXXZ+100
	DD	imagerel $unwind$??__FActorPackFilter@UIActorTool@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DrawActorToolWindow@UIActorTool@@YAXXZ DD imagerel $LN2803
	DD	imagerel $LN2803+7344
	DD	imagerel $unwind$?DrawActorToolWindow@UIActorTool@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN764
	DD	imagerel $LN764+2265
	DD	imagerel $unwind$?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$24@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$24@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$24@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$24@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateActorList@UIActorTool@@YAXXZ DD imagerel $LN1549
	DD	imagerel $LN1549+4604
	DD	imagerel $unwind$?UpdateActorList@UIActorTool@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$90@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA DD imagerel ?dtor$90@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
	DD	imagerel ?dtor$90@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA+46
	DD	imagerel $unwind$?dtor$90@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$125@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA DD imagerel ?dtor$125@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
	DD	imagerel ?dtor$125@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA+46
	DD	imagerel $unwind$?dtor$125@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$37@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA DD imagerel ?dtor$37@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
	DD	imagerel ?dtor$37@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA+38
	DD	imagerel $unwind$?dtor$37@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$65@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA DD imagerel ?dtor$65@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
	DD	imagerel ?dtor$65@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA+43
	DD	imagerel $unwind$?dtor$65@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$100@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA DD imagerel ?dtor$100@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
	DD	imagerel ?dtor$100@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA+46
	DD	imagerel $unwind$?dtor$100@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	0faH
	DW	0126H
	DW	05c3H
	DW	05deH
	DW	0608H
	DW	0623H
	DW	064dH
	DW	0668H
	DW	07afH
	DW	07dbH
	DW	0101aH
	DW	01035H
	DW	0105bH
	DW	01076H
	DW	0109cH
	DW	010b5H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$100@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$65@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$37@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$125@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$90@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?UpdateActorList@UIActorTool@@YAXXZ DB 'J'
	DB	0f2H
	DB	00H
	DB	'8'
	DB	02H
	DB	' '
	DB	04H
	DB	'2'
	DB	06H
	DB	'Q', 07H
	DB	010H
	DB	0cdH, 02H
	DB	014H
	DB	09H, 04H
	DB	010H
	DB	'Y', 02H
	DB	018H
	DB	'e', 02H
	DB	01aH
	DB	'P'
	DB	010H
	DB	'I', 04H
	DB	00H
	DB	')', 02H
	DB	01cH
	DB	' '
	DB	01eH
	DB	'2'
	DB	' '
	DB	'y', 07H
	DB	'*'
	DB	'q', 04H
	DB	'.'
	DB	011H, 07H
	DB	'*'
	DB	099H, 04H
	DB	'2'
	DB	'E', 05H
	DB	'*'
	DB	'M', 02H
	DB	'6'
	DB	'e', 02H
	DB	'8'
	DB	'F'
	DB	'*'
	DB	0bdH, 03H
	DB	00H
	DB	'L'
	DB	'*'
	DB	01eH
	DB	010H
	DB	01eH
	DB	'*'
	DB	','
	DB	06H
	DB	'"'
	DB	010H
	DB	014H
	DB	014H
	DB	','
	DB	018H
	DB	'4'
	DB	010H
	DB	','
	DB	' '
	DB	'"'
	DB	'*'
	DB	014H
	DB	'.'
	DB	','
	DB	'2'
	DB	'4'
	DB	'6'
	DB	'4'
	DB	'*'
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?UpdateActorList@UIActorTool@@YAXXZ DB 038H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	081H
	DB	0bH
	DB	03aH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	081H
	DB	09H
	DB	03aH
	DD	imagerel ??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ
	DB	081H
	DB	0cH
	DB	072H
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	081H
	DB	0cH
	DB	0e2H
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	081H
	DB	0cH
	DB	045H
	DB	02H
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	081H
	DB	0cH
	DB	042H
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	01H
	DB	0dH
	DB	03aH
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	081H
	DB	0dH
	DB	03aH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	041H
	DB	02H
	DB	03eH
	DD	imagerel ?dtor$90@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
	DB	09aH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	081H
	DB	07H
	DB	03eH
	DD	imagerel ?dtor$125@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
	DB	062H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	041H
	DB	04H
	DB	095H
	DB	05H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	081H
	DB	0aH
	DB	042H
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	01H
	DB	0aH
	DB	03aH
	DD	imagerel ??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ
	DB	0c1H
	DB	0cH
	DB	072H
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	0c1H
	DB	0cH
	DB	0eaH
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	0c1H
	DB	0cH
	DB	0d5H
	DB	07H
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	0c1H
	DB	0cH
	DB	042H
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	041H
	DB	0dH
	DB	03aH
	DD	imagerel ??1directory_iterator@filesystem@std@@QEAA@XZ
	DB	0c1H
	DB	0dH
	DB	03aH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	0c1H
	DB	02H
	DB	03eH
	DD	imagerel ?dtor$37@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
	DB	09aH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	041H
	DB	03H
	DB	03eH
	DD	imagerel ?dtor$65@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
	DB	0faH
	DD	imagerel ??1path@filesystem@std@@QEAA@XZ
	DB	01H
	DB	09H
	DB	03eH
	DD	imagerel ?dtor$100@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA
	DB	062H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c1H
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?UpdateActorList@UIActorTool@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?UpdateActorList@UIActorTool@@YAXXZ
	DD	imagerel $ip2state$?UpdateActorList@UIActorTool@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateActorList@UIActorTool@@YAXXZ DD 0d3819H
	DD	0807427H
	DD	07f6427H
	DD	07e3427H
	DD	0780127H
	DD	0e016f018H
	DD	0c012d014H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?UpdateActorList@UIActorTool@@YAXXZ
	DD	03b2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$24@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 01aH
	DB	0b1H, 04H
	DB	02H
	DB	'%', 02H
	DB	04H
	DB	095H, 02H
	DB	02H
	DB	0cdH, 08H
	DB	04H
	DB	0daH
	DB	02H
	DB	'J'
	DB	08H
	DB	'I', 04H
	DB	06H
	DB	'A', 02H
	DB	0aH
	DB	0b4H
	DB	0cH
	DB	085H, 02H
	DB	0aH
	DB	0adH, 03H
	DB	00H
	DB	'L'
	DB	06H
	DB	0cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 0cH
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	081H
	DB	03H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	081H
	DB	02H
	DB	076H
	DD	imagerel ?dtor$24@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02cH
	DD	imagerel ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
	DB	01H
	DB	03H
	DB	062H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	081H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0d3219H
	DD	0277424H
	DD	0266424H
	DD	0253424H
	DD	01e0124H
	DD	0e016f018H
	DD	0c012d014H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	0eaH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DrawActorToolWindow@UIActorTool@@YAXXZ DB 08cH
	DB	0dcH
	DB	00H
	DB	0e5H, 03H
	DB	02H
	DB	'f'
	DB	00H
	DB	09eH
	DB	04H
	DB	'z'
	DB	06H
	DB	'j'
	DB	04H
	DB	'B'
	DB	00H
	DB	'=', 02H
	DB	08H
	DB	' '
	DB	0aH
	DB	'0'
	DB	08H
	DB	'h'
	DB	00H
	DB	'0'
	DB	0cH
	DB	'\'
	DB	00H
	DB	'T'
	DB	02H
	DB	'2'
	DB	0eH
	DB	'('
	DB	02H
	DB	018H
	DB	00H
	DB	'N'
	DB	02H
	DB	'2'
	DB	0eH
	DB	'('
	DB	02H
	DB	018H
	DB	00H
	DB	0e0H
	DB	010H
	DB	'8'
	DB	00H
	DB	0bdH, 05H
	DB	012H
	DB	0edH, 03H
	DB	014H
	DB	09dH, 02H
	DB	012H
	DB	09aH
	DB	00H
	DB	'U', 04H
	DB	010H
	DB	0ceH
	DB	016H
	DB	0d0H
	DB	018H
	DB	'*'
	DB	01aH
	DB	'.'
	DB	01cH
	DB	'*'
	DB	' '
	DB	'I', 02H
	DB	'&'
	DB	'E', 02H
	DB	'('
	DB	'e', 05H
	DB	'*'
	DB	'.'
	DB	'.'
	DB	0d0H
	DB	'0'
	DB	'D'
	DB	'2'
	DB	01eH
	DB	'4'
	DB	'('
	DB	'6'
	DB	' '
	DB	'8'
	DB	'*'
	DB	':'
	DB	'.'
	DB	'<'
	DB	'T'
	DB	':'
	DB	0bcH
	DB	'0'
	DB	'v'
	DB	'>'
	DB	'X'
	DB	'0'
	DB	'P'
	DB	'.'
	DB	' '
	DB	'@'
	DB	0b8H
	DB	'B'
	DB	0a5H, 03H
	DB	'D'
	DB	0a5H, 02H
	DB	'B'
	DB	08eH
	DB	'.'
	DB	0bdH, 06H
	DB	'F'
	DB	01H, 03H
	DB	'H'
	DB	't'
	DB	'F'
	DB	'=', 06H
	DB	'.'
	DB	019H, 02H
	DB	00H
	DB	'M', 012H
	DB	010H
	DB	'N'
	DB	00H
	DB	095H, 06H
	DB	014H
	DB	0cH
	DB	012H
	DB	0cH
	DB	'D'
	DB	0cH
	DB	'B'
	DB	0cH
	DB	'H'
	DB	0cH
	DB	'F'
	DB	018H
	DB	'&'
	DB	0cH
	DB	010H
	DB	0cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DrawActorToolWindow@UIActorTool@@YAXXZ DB 048H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0f0H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
	DB	032H
	DD	imagerel ??1Result@ZStdFile@@QEAA@XZ
	DB	0e1H
	DB	0fH
	DB	0a2H
	DD	imagerel ??1BymlFile@@QEAA@XZ
	DB	0c1H
	DB	09H
	DB	03aH
	DD	imagerel ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@XZ
	DB	0c1H
	DB	05H
	DB	025H
	DB	02H
	DD	imagerel ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
	DB	0a1H
	DB	02H
	DB	099H
	DB	02H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
	DB	015H
	DB	03H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	061H
	DB	0eH
	DB	095H
	DB	03H
	DD	imagerel ??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ
	DB	0e1H
	DB	0dH
	DB	044H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
	DB	0b2H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0f0H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	041H
	DB	0dH
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e1H
	DB	0dH
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	061H
	DB	0fH
	DB	0a2H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	061H
	DB	0fH
	DB	025H
	DB	02H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	061H
	DB	0fH
	DB	05H
	DB	03H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	061H
	DB	0fH
	DB	0e5H
	DB	04H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	061H
	DB	0fH
	DB	042H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e1H
	DB	0eH
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	04H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	081H
	DB	010H
	DB	0aaH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	081H
	DB	010H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	041H
	DB	0dH
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	03H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	05H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	04H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e1H
	DB	0dH
	DB	05H
	DB	03H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	03H
	DB	0f5H
	DB	03H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	02H
	DB	075H
	DB	04H
	DD	imagerel ??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ
	DB	0e1H
	DB	0fH
	DB	044H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
	DB	055H
	DB	05H
	DD	imagerel ??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ
	DB	0e1H
	DB	0dH
	DB	044H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	081H
	DB	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?DrawActorToolWindow@UIActorTool@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?DrawActorToolWindow@UIActorTool@@YAXXZ
	DD	imagerel $ip2state$?DrawActorToolWindow@UIActorTool@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DrawActorToolWindow@UIActorTool@@YAXXZ DD 0114019H
	DD	046882fH
	DD	047682aH
	DD	0987426H
	DD	0976426H
	DD	0963426H
	DD	0900126H
	DD	0e016f018H
	DD	0c012d014H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?DrawActorToolWindow@UIActorTool@@YAXXZ
	DD	045aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FActorPackFilter@UIActorTool@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??__EActorPack@UIActorTool@@YAXXZ DB 0aH
	DB	'.'
	DB	00H
	DB	'X'
	DB	02H
	DB	'6'
	DB	04H
	DB	'`'
	DB	06H
	DB	'\'
	DB	08H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??__EActorPack@UIActorTool@@YAXXZ DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???__EActorPack@UIActorTool@@YAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???__EActorPack@UIActorTool@@YAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???__EActorPack@UIActorTool@@YAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???__EActorPack@UIActorTool@@YAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??__EActorPack@UIActorTool@@YAXXZ DB 028H
	DD	imagerel $stateUnwindMap$??__EActorPack@UIActorTool@@YAXXZ
	DD	imagerel $ip2state$??__EActorPack@UIActorTool@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EActorPack@UIActorTool@@YAXXZ DD 020611H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??__EActorPack@UIActorTool@@YAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FActorPack@UIActorTool@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ActorPackStruct@UIActorTool@@QEAA@XZ DB 0aH
	DB	084H
	DB	00H
	DB	'^'
	DB	02H
	DB	'2'
	DB	04H
	DB	'`'
	DB	06H
	DB	'\'
	DB	08H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ActorPackStruct@UIActorTool@@QEAA@XZ DB 08H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
	DB	036H
	DD	imagerel ?dtor$1@?0???0ActorPackStruct@UIActorTool@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0ActorPackStruct@UIActorTool@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0ActorPackStruct@UIActorTool@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ActorPackStruct@UIActorTool@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0ActorPackStruct@UIActorTool@@QEAA@XZ
	DD	imagerel $ip2state$??0ActorPackStruct@UIActorTool@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ActorPackStruct@UIActorTool@@QEAA@XZ DD 040f11H
	DD	08340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ActorPackStruct@UIActorTool@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ActorPackStruct@UIActorTool@@QEAA@XZ DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z DB 084H
	DB	09dH, 02H
	DB	00H
	DB	':'
	DB	02H
	DB	094H
	DB	00H
	DB	0a2H
	DB	04H
	DB	084H
	DB	06H
	DB	'r'
	DB	08H
	DB	'*'
	DB	0aH
	DB	'@'
	DB	08H
	DB	09eH
	DB	00H
	DB	'<'
	DB	0cH
	DB	080H
	DB	0eH
	DB	0f2H
	DB	010H
	DB	'$'
	DB	012H
	DB	'Z'
	DB	010H
	DB	'i', 06H
	DB	00H
	DB	'<'
	DB	014H
	DB	'~'
	DB	016H
	DB	0e6H
	DB	018H
	DB	'$'
	DB	01aH
	DB	'Z'
	DB	018H
	DB	'a', 05H
	DB	00H
	DB	'<'
	DB	01cH
	DB	'~'
	DB	01eH
	DB	0e6H
	DB	' '
	DB	'$'
	DB	'"'
	DB	'Z'
	DB	' '
	DB	'a', 05H
	DB	00H
	DB	'<'
	DB	'$'
	DB	'~'
	DB	'&'
	DB	0e6H
	DB	'('
	DB	'$'
	DB	'*'
	DB	'`'
	DB	'('
	DB	'm', 05H
	DB	00H
	DB	'<'
	DB	','
	DB	'~'
	DB	'.'
	DB	0e6H
	DB	'0'
	DB	'*'
	DB	'2'
	DB	'l'
	DB	'0'
	DB	011H, 03H
	DB	00H
	DB	'<'
	DB	'4'
	DB	084H
	DB	'6'
	DB	'r'
	DB	'8'
	DB	'*'
	DB	':'
	DB	'l'
	DB	'8'
	DB	05H, 03H
	DB	00H
	DB	'>'
	DB	02H
	DB	'6'
	DB	'<'
	DB	084H
	DB	'>'
	DB	'r'
	DB	'@'
	DB	'*'
	DB	'B'
	DB	'H'
	DB	'@'
	DB	'!', 02H
	DB	02H
	DB	'"'
	DB	00H
	DB	0a2H
	DB	'D'
	DB	0a2H
	DB	'F'
	DB	'd'
	DB	'D'
	DB	' '
	DB	00H
	DB	011H, 05H
	DB	'<'
	DB	0cH
	DB	00H
	DB	0cH
	DB	04H
	DB	0cH
	DB	0cH
	DB	0cH
	DB	014H
	DB	0cH
	DB	01cH
	DB	0cH
	DB	'$'
	DB	0cH
	DB	','
	DB	0cH
	DB	'4'
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z DB 046H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	041H
	DB	0fH
	DB	042H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c1H
	DB	0eH
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c1H
	DB	0dH
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	09H
	DB	035H
	DB	02H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	09H
	DB	042H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0d0H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	04H
	DB	0e5H
	DB	03H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	0aH
	DB	042H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	04H
	DB	0a5H
	DB	05H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	0aH
	DB	042H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	02H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	05H
	DB	065H
	DB	07H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	0bH
	DB	042H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	03H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	05H
	DB	025H
	DB	09H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	0bH
	DB	042H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	03H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	06H
	DB	0e5H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	0cH
	DB	042H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	07H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	06H
	DB	095H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	0dH
	DB	042H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	041H
	DB	0eH
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	021H
	DB	07H
	DB	065H
	DB	0eH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a1H
	DB	0cH
	DB	044H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z DB 028H
	DD	imagerel $stateUnwindMap$?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z
	DD	imagerel $ip2state$?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z DD 0b3019H
	DD	08a341fH
	DD	080011fH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z
	DD	03f2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z DB 014H
	DB	'~'
	DB	04H
	DB	'^'
	DB	06H
	DB	0fdH, 02H
	DB	04H
	DB	01H, 04H
	DB	08H
	DB	'Y', 02H
	DB	04H
	DB	'`'
	DB	02H
	DB	'0'
	DB	00H
	DB	'@'
	DB	08H
	DB	0cH
	DB	04H
	DB	0cH
	DB	06H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z DB 08H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0b0H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0c0H
	DB	064H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z DB 028H
	DD	imagerel $stateUnwindMap$?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z
	DD	imagerel $ip2state$?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z DD 0b2a19H
	DD	01d341cH
	DD	012011cH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z
	DD	082H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@AEBUEntry@SarcFile@@0@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 06H
	DB	'1', 04H
	DB	02H
	DB	0f9H, 02H
	DB	00H
	DB	'^'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0b0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0a2719H
	DD	0156418H
	DD	0145418H
	DD	0123418H
	DD	0f014d218H
	DD	07010e012H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	062H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z DD 060021H
	DD	0126400H
	DD	0115400H
	DD	0103400H
	DD	imagerel $LN86
	DD	imagerel $LN86+66
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z DD 061c21H
	DD	012641cH
	DD	0115414H
	DD	0103408H
	DD	imagerel $LN86
	DD	imagerel $LN86+66
	DD	imagerel $unwind$?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z DD 060e01H
	DD	0f00a920eH
	DD	0d006e008H
	DD	07002c004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ DB 06H
	DB	'V'
	DB	00H
	DB	'R'
	DB	02H
	DB	'>'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ DB 02H
	DB	0aH
	DD	imagerel ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ
	DD	imagerel $ip2state$??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ DD 020611H
	DD	030027206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ DB 06H
	DB	'V'
	DB	00H
	DB	'R'
	DB	02H
	DB	'>'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ DB 02H
	DB	0aH
	DD	imagerel ??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ DB 028H
	DD	imagerel $stateUnwindMap$?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ
	DD	imagerel $ip2state$?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ DD 020611H
	DD	030027206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4SarcFile@@QEAAAEAV0@$$QEAV0@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@XZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ DD 021H
	DD	imagerel $LN82
	DD	imagerel $LN82+28
	DD	imagerel $unwind$??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ DD 020521H
	DD	073405H
	DD	imagerel $LN82
	DD	imagerel $LN82+28
	DD	imagerel $unwind$??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ DD 040a01H
	DD	08640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 06H
	DB	0b5H, 02H
	DB	02H
	DB	'('
	DB	04H
	DB	0baH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	imagerel $ip2state$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0a1811H
	DD	0116418H
	DD	0105418H
	DD	0f3418H
	DD	0f0149218H
	DD	07010e012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD 021H
	DD	imagerel $LN70
	DD	imagerel $LN70+32
	DD	imagerel $unwind$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD 020521H
	DD	077405H
	DD	imagerel $LN70
	DD	imagerel $LN70+32
	DD	imagerel $unwind$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD 061001H
	DD	096410H
	DD	083410H
	DD	0e00c3210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD 021H
	DD	imagerel $LN116
	DD	imagerel $LN116+26
	DD	imagerel $unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD 020521H
	DD	077405H
	DD	imagerel $LN116
	DD	imagerel $LN116+26
	DD	imagerel $unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD 040a01H
	DD	08340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 08H
	DB	0b5H, 02H
	DB	02H
	DB	'8'
	DB	04H
	DB	014H
	DB	06H
	DB	0a4H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	imagerel $ip2state$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0a1811H
	DD	0116418H
	DD	0105418H
	DD	0f3418H
	DD	0f0149218H
	DD	07010e012H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z DD 021H
	DD	imagerel $LN35
	DD	imagerel $LN35+25
	DD	imagerel $unwind$??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN35
	DD	imagerel $LN35+25
	DD	imagerel $unwind$??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z DD 040a01H
	DD	07640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 081001H
	DD	0c3410H
	DD	0f00c3210H
	DD	07008e00aH
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@@Z DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ DD 021H
	DD	imagerel $LN79
	DD	imagerel $LN79+28
	DD	imagerel $unwind$?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ DD 020521H
	DD	073405H
	DD	imagerel $LN79
	DD	imagerel $LN79+28
	DD	imagerel $unwind$?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ DD 040a01H
	DD	08640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD 021H
	DD	imagerel $LN34
	DD	imagerel $LN34+25
	DD	imagerel $unwind$??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD 020521H
	DD	063405H
	DD	imagerel $LN34
	DD	imagerel $LN34+25
	DD	imagerel $unwind$??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD 040a01H
	DD	07640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z DD 021H
	DD	imagerel $LN156
	DD	imagerel $LN156+435
	DD	imagerel $unwind$?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z DD 020521H
	DD	073405H
	DD	imagerel $LN156
	DD	imagerel $LN156+435
	DD	imagerel $unwind$?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z DD 040a01H
	DD	08640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z DB 04H
	DB	'*'
	DB	00H
	DB	01aH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z
	DD	imagerel $ip2state$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 08H
	DB	0d1H, 02H
	DB	02H
	DB	'8'
	DB	04H
	DB	01cH
	DB	06H
	DB	09eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
	DD	imagerel $ip2state$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD 080f11H
	DD	0f00b920fH
	DD	0c007e009H
	DD	060047005H
	DD	030025003H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z DB 04H
	DB	'*'
	DB	00H
	DB	01aH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z
	DD	imagerel $ip2state$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DB 06H
	DB	0d1H, 02H
	DB	02H
	DB	'('
	DB	04H
	DB	0e4H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
	DD	imagerel $ip2state$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DD 080f11H
	DD	0f00b920fH
	DD	0c007e009H
	DD	060047005H
	DD	030025003H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 06H
	DB	0d9H, 02H
	DB	02H
	DB	'('
	DB	04H
	DB	0beH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	imagerel $ip2state$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0a1611H
	DD	0135416H
	DD	0123416H
	DD	0f0129216H
	DD	0c00ee010H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z DD 021H
	DD	imagerel $LN67
	DD	imagerel $LN67+24
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z DD 020521H
	DD	0b7405H
	DD	imagerel $LN67
	DD	imagerel $LN67+24
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z DD 040801H
	DD	060043208H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DD 021H
	DD	imagerel $LN113
	DD	imagerel $LN113+27
	DD	imagerel $unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DD 020521H
	DD	0a7405H
	DD	imagerel $LN113
	DD	imagerel $LN113+27
	DD	imagerel $unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DD 040801H
	DD	060043208H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 08H
	DB	0e5H, 02H
	DB	02H
	DB	'8'
	DB	04H
	DB	014H
	DB	06H
	DB	0a8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	imagerel $ip2state$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0a1611H
	DD	0135416H
	DD	0123416H
	DD	0f0129216H
	DD	0c00ee010H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z DD 021H
	DD	imagerel $LN88
	DD	imagerel $LN88+30
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z DD 060f21H
	DD	04740fH
	DD	05640aH
	DD	0d5405H
	DD	imagerel $LN88
	DD	imagerel $LN88+30
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z DD 040a01H
	DD	0f006520aH
	DD	03002e004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4Entry@SarcFile@@QEAAAEAU01@$$QEAU01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD 021H
	DD	imagerel $LN64
	DD	imagerel $LN64+4
	DD	imagerel $unwind$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD 021H
	DD	imagerel $LN64+4
	DD	imagerel $LN64+33
	DD	imagerel $chain$1$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD 020521H
	DD	073405H
	DD	imagerel $LN64+4
	DD	imagerel $LN64+33
	DD	imagerel $chain$1$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD 040d21H
	DD	04740dH
	DD	086405H
	DD	imagerel $LN64
	DD	imagerel $LN64+4
	DD	imagerel $unwind$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 020021H
	DD	01bd400H
	DD	imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+274
	DD	imagerel $unwind$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 021H
	DD	imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+274
	DD	imagerel $unwind$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 020821H
	DD	01bd408H
	DD	imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+274
	DD	imagerel $unwind$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 082119H
	DD	0f00bf212H
	DD	0c007e009H
	DD	060047005H
	DD	030025003H
	DD	imagerel __GSHandlerCheck
	DD	078H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 08H
	DB	0e5H, 02H
	DB	02H
	DB	'8'
	DB	04H
	DB	01cH
	DB	06H
	DB	096H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 06H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
	DD	imagerel $ip2state$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD 080f11H
	DD	0f00b920fH
	DD	0c007e009H
	DD	060047005H
	DD	030025003H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DB 06H
	DB	0e5H, 02H
	DB	02H
	DB	'('
	DB	04H
	DB	0dcH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03aH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
	DD	imagerel $ip2state$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DD 080f11H
	DD	0f00b920fH
	DD	0c007e009H
	DD	060047005H
	DD	030025003H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 04H
	DB	'V'
	DB	02H
	DB	'0'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03cH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
	DD	imagerel $ip2state$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DD 081411H
	DD	0b6414H
	DD	0a5414H
	DD	093414H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU01@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 06H
	DB	'P'
	DB	02H
	DB	':'
	DB	04H
	DB	014H
	DB	06H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 06H
	DB	0cH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03cH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
	DD	imagerel $ip2state$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DD 060f11H
	DD	0a640fH
	DD	09340fH
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@@Z DD 060f01H
	DD	08640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z@4HA DD 020a01H
	DD	05006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z DB 0aH
	DB	08aH
	DB	02H
	DB	'F'
	DB	04H
	DB	01cH
	DB	02H
	DB	'b'
	DB	06H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z DB 02H
	DB	04H
	DB	04H
	DB	06H
	DD	imagerel $handlerMap$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z DB 08H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	060H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
	DB	068H
	DB	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z
	DD	imagerel $tryMap$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z
	DD	imagerel $ip2state$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z DD 0a1719H
	DD	0116417H
	DD	0103417H
	DD	0f0137217H
	DD	0d00fe011H
	DD	0700bc00dH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z DB 02H
	DB	'6'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z
	DD	imagerel $ip2state$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DB 02H
	DB	'2'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
	DD	imagerel $ip2state$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Insertion_sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAPEAUEntry@SarcFile@@QEAU12@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 0c2e19H
	DD	019641fH
	DD	018541fH
	DD	017341fH
	DD	0f018f21fH
	DD	0d014e016H
	DD	07010c012H
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 021H
	DD	imagerel ??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+76
	DD	imagerel $unwind$??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 0c2021H
	DD	010f420H
	DD	011d418H
	DD	0127414H
	DD	0136410H
	DD	014540cH
	DD	01a3404H
	DD	imagerel ??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+76
	DD	imagerel $unwind$??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 041d19H
	DD	015010eH
	DD	0c005e007H
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 0c0021H
	DD	0ef400H
	DD	0fe400H
	DD	010d400H
	DD	011c400H
	DD	0127400H
	DD	0186400H
	DD	imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+50
	DD	imagerel $unwind$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 021H
	DD	imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+50
	DD	imagerel $unwind$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 0c3621H
	DD	0127436H
	DD	0ef428H
	DD	0fe41eH
	DD	010d410H
	DD	011c40cH
	DD	0186404H
	DD	imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+50
	DD	imagerel $unwind$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 041b19H
	DD	013010cH
	DD	030045005H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Partition_by_median_guess_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YA?AU?$pair@PEAUEntry@SarcFile@@PEAU12@@0@PEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 0a2819H
	DD	01b341aH
	DD	0f010f21aH
	DD	0d00ce00eH
	DD	07008c00aH
	DD	050066007H
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 06H
	DB	'R'
	DB	02H
	DB	'0'
	DB	04H
	DB	01cH
	DB	06H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 06H
	DB	0cH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03cH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
	DD	imagerel $ip2state$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD 060d11H
	DD	0b340dH
	DD	0e009520dH
	DD	060067007H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DB 04H
	DB	'X'
	DB	02H
	DB	'&'
	DB	04H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DB 04H
	DB	0cH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	03cH
	DD	imagerel ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
	DD	imagerel $ip2state$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z DD 081211H
	DD	0c5412H
	DD	0b3412H
	DD	0e00e5212H
	DD	0600b700cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 04H
	DB	'0'
	DB	00H
	DB	014H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	080H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
	DD	imagerel $ip2state$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 06H
	DB	'Z'
	DB	02H
	DB	'D'
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
	DD	imagerel $ip2state$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD 081411H
	DD	0d6414H
	DD	0c5414H
	DD	0a3414H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z DD 021H
	DD	imagerel $LN88
	DD	imagerel $LN88+30
	DD	imagerel $unwind$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z DD 060f21H
	DD	04740fH
	DD	05640aH
	DD	0d5405H
	DD	imagerel $LN88
	DD	imagerel $LN88+30
	DD	imagerel $unwind$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z DD 040a01H
	DD	0f006520aH
	DD	03002e004H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_backward_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pop_heap_hole_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 091101H
	DD	0f00d6211H
	DD	0d009e00bH
	DD	07005c007H
	DD	050036004H
	DD	03002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 021H
	DD	imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+74
	DD	imagerel $unwind$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 020021H
	DD	0ef400H
	DD	imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+74
	DD	imagerel $unwind$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 061921H
	DD	0ef419H
	DD	0f7410H
	DD	0166404H
	DD	imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+74
	DD	imagerel $unwind$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 041d19H
	DD	0e007f20eH
	DD	030045005H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 021H
	DD	imagerel ??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+48
	DD	imagerel $unwind$??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 081f21H
	DD	04741fH
	DD	0a6416H
	DD	09540dH
	DD	083405H
	DD	imagerel ??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+48
	DD	imagerel $unwind$??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 030801H
	DD	0f0044208H
	DD	0e002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@UEntry@SarcFile@@$0A@@std@@YAXAEAUEntry@SarcFile@@0@Z DD 061b19H
	DD	012340cH
	DD	07008b20cH
	DD	050066007H
	DD	imagerel __GSHandlerCheck
	DD	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z DB 04H
	DB	'@'
	DB	00H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z
	DD	imagerel $ip2state$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@$$QEAU31@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DB 04H
	DB	'*'
	DB	00H
	DB	014H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
	DD	imagerel $ip2state$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 06H
	DB	'Z'
	DB	02H
	DB	'D'
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
	DD	imagerel $ip2state$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD 081411H
	DD	0d6414H
	DD	0c5414H
	DD	0a3414H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DB 04H
	DB	' '
	DB	00H
	DB	014H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
	DD	imagerel $ip2state$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 021H
	DD	imagerel ??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+29
	DD	imagerel $unwind$??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 020521H
	DD	0c6405H
	DD	imagerel ??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
	DD	imagerel ??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z+29
	DD	imagerel $unwind$??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 060c01H
	DD	0f008320cH
	DD	07004e006H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pop_heap_hole_unchecked@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z DD 040801H
	DD	070043208H
	DD	030026003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z DB 04H
	DB	'*'
	DB	00H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z
	DD	imagerel $ip2state$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z DD 040a11H
	DD	07340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@$$QEAU10@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 06H
	DB	'Z'
	DB	02H
	DB	'D'
	DB	04H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
	DB	040H
	DB	034H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
	DD	imagerel $ip2state$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z DD 081411H
	DD	0d6414H
	DD	0b5414H
	DD	0a3414H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z DB 04H
	DB	'*'
	DB	00H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z
	DD	imagerel $ip2state$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@$$QEAU01@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DB 04H
	DB	' '
	DB	00H
	DB	014H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
	DD	imagerel $ip2state$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z DB 04H
	DB	'@'
	DB	00H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z
	DD	imagerel $ip2state$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z DB 04H
	DB	'*'
	DB	00H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z
	DD	imagerel $ip2state$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z DD 040a11H
	DD	07340aH
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z DB 04H
	DB	'*'
	DB	00H
	DB	01cH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z DB 02H
	DB	0cH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z
	DD	imagerel $ip2state$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z DD 040f11H
	DD	07340fH
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z
	ORG $+4
?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 00H ; UIActorTool::ActorPackFilter
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DQ	0000000000000000H
	DQ	000000000000000fH
?ActorPackFilter$initializer$@UIActorTool@@3P6AXXZEA DQ FLAT:??__FActorPackFilter@UIActorTool@@YAXXZ ; UIActorTool::ActorPackFilter$initializer$
?ActorPack$initializer$@UIActorTool@@3P6AXXZEA DQ FLAT:??__EActorPack@UIActorTool@@YAXXZ ; UIActorTool::ActorPack$initializer$
?ActorList$initializer$@UIActorTool@@3P6AXXZEA DQ FLAT:??__FActorList@UIActorTool@@YAXXZ ; UIActorTool::ActorList$initializer$
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
;	COMDAT ?UpdateActorList@UIActorTool@@YAXXZ
_TEXT	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?UpdateActorList@UIActorTool@@YAXXZ PROC		; UIActorTool::UpdateActorList, COMDAT

; 123  : {

$LN1549:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-704]
	sub	rsp, 960				; 000003c0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	xor	r13d, r13d
	mov	r15d, r13d
	mov	DWORD PTR $T4[rsp], r13d

; 124  : 	ActorList.clear();

	lea	rcx, OFFSET FLAT:?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A ; UIActorTool::ActorList
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T31[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T31[rbp-240], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T31[rbp-232], r13

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	r8d, QWORD PTR [r13+10]
	lea	rdx, OFFSET FLAT:??_C@_0L@KDDAMAHG@Pack?1Actor@
	lea	rcx, QWORD PTR $T31[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 125  : 	for (const auto& DirEntry : std::filesystem::directory_iterator(Editor::GetRomFSFile("Pack/Actor", false)))

	xor	r8d, r8d
	lea	rdx, QWORD PTR $T31[rbp-256]
	lea	rcx, QWORD PTR $T39[rbp-256]
	call	?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z ; Editor::GetRomFSFile
	npad	1
	mov	rdx, rax
	lea	rcx, QWORD PTR $T36[rbp-256]
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@path@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@W4format@012@@Z ; std::filesystem::path::path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>
	npad	1
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1470 :     element_type* _Ptr{nullptr};

	movdqa	XMMWORD PTR $S8$41[rbp-256], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2619 :             const auto _Error = _Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path);

	lea	rdx, QWORD PTR $T36[rbp-256]
	lea	rcx, QWORD PTR $S8$41[rbp-256]
	call	??$_Initialize_dir_enum@U_Dir_enum_impl@filesystem@std@@@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@2@AEBVpath@12@W4directory_options@12@@Z ; std::filesystem::_Dir_enum_impl::_Initialize_dir_enum<std::filesystem::_Dir_enum_impl>

; 2620 :             if (_Error != __std_win_error::_Success) {

	test	eax, eax
	jne	$LN1546@UpdateActo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T36[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T39[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	xorps	xmm0, xmm0
	movups	XMMWORD PTR <begin>$L0$43[rbp-256], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1396 :         if (_Rep) {

	mov	rcx, QWORD PTR $S8$41[rbp-248]
	test	rcx, rcx
	je	SHORT $LN1484@UpdateActo

; 1169 :         _MT_INCR(_Uses);

	lock inc DWORD PTR [rcx+8]
	mov	r15d, DWORD PTR $T4[rsp]
$LN1484@UpdateActo:

; 1345 :         _Ptr = _Right._Ptr;

	movdqa	xmm1, XMMWORD PTR $S8$41[rbp-256]
	movdqa	XMMWORD PTR <begin>$L0$43[rbp-256], xmm1
	movups	XMMWORD PTR <end>$L0$45[rbp-256], xmm0

; 1396 :         if (_Rep) {

	mov	rcx, QWORD PTR $S8$41[rbp-248]
	test	rcx, rcx
	je	SHORT $LN1344@UpdateActo

; 1169 :         _MT_INCR(_Uses);

	lock inc DWORD PTR [rcx+8]
	movdqa	xmm1, XMMWORD PTR $S8$41[rbp-256]
	mov	r15d, DWORD PTR $T4[rsp]
$LN1344@UpdateActo:

; 1357 :         _Ptr = _Other._Ptr;

	movdqa	XMMWORD PTR $T27[rbp-256], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 125  : 	for (const auto& DirEntry : std::filesystem::directory_iterator(Editor::GetRomFSFile("Pack/Actor", false)))

	lea	rdx, QWORD PTR $T27[rbp-256]
	lea	rcx, QWORD PTR <end>$L0$45[rbp-256]
	call	?end@filesystem@std@@YA?AVdirectory_iterator@12@V312@@Z ; std::filesystem::end
	npad	1
	npad	13
$LL419@UpdateActo:
	mov	rbx, QWORD PTR <begin>$L0$43[rbp-256]
	cmp	rbx, QWORD PTR <end>$L0$45[rbp-256]
	je	$LN3@UpdateActo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2381 :             const auto _Result = _Get_any_status(_Status_stats_flags);

	mov	r8d, 3
	lea	rdx, QWORD PTR _Result$25[rbp-256]
	mov	rcx, rbx
	call	?_Get_any_status@directory_entry@filesystem@std@@AEBA?AU_File_status_and_error@23@W4__std_fs_stats_flags@@@Z ; std::filesystem::directory_entry::_Get_any_status

; 2065 :             return _Error != __std_win_error::_Success && _Status.type() != file_type::not_found

	mov	rax, QWORD PTR _Result$25[rbp-256]
	mov	edx, DWORD PTR _Result$25[rbp-248]
	test	edx, edx
	je	SHORT $LN428@UpdateActo
	lea	ecx, DWORD PTR [rax-1]
	test	ecx, -9					; fffffff7H
	jne	$LN1513@UpdateActo
$LN428@UpdateActo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 127  : 		if (!DirEntry.is_regular_file()) continue;

	cmp	eax, 2
	jne	$LN2@UpdateActo

; 128  : 		if (!DirEntry.path().filename().string().ends_with(".pack.zs")) continue;

	lea	r12, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, r12

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r12+24], 8
	jb	SHORT $LN709@UpdateActo

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r12]
$LN709@UpdateActo:

; 4041 :         return basic_string_view<_Elem, _Traits>{_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize};

	lea	r13, QWORD PTR [r12+16]
	mov	rax, QWORD PTR [r13]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 497  :         const auto _Last     = _First + _Str.size();

	lea	rbx, QWORD PTR [rcx+rax*2]

; 498  :         const auto _Filename = _Find_filename(_First, _Last);

	mov	rsi, rbx

; 435  :         return _STD find_if_not(_Find_root_name_end(_First, _Last), _Last, _Is_slash);

	mov	rdx, rbx
	call	?_Find_root_name_end@filesystem@std@@YAPEB_WQEB_W0@Z ; std::filesystem::_Find_root_name_end
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rax, rbx
	je	SHORT $LN719@UpdateActo
	npad	7
$LL726@UpdateActo:

; 371  :         if (!_Pred(*_UFirst)) {

	movzx	ecx, WORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, 92					; 0000005cH
	je	SHORT $LN1521@UpdateActo
	cmp	cx, 47					; 0000002fH
	jne	SHORT $LN1522@UpdateActo
$LN1521@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	add	rax, 2
	cmp	rax, rbx
	jne	SHORT $LL726@UpdateActo
$LN1522@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 487  :         while (_Relative_path != _Last && !_Is_slash(_Last[-1])) {

	cmp	rax, rbx
	je	SHORT $LN719@UpdateActo
	npad	3
$LL718@UpdateActo:
	lea	rdx, QWORD PTR [rsi-2]
	movzx	ecx, WORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, 92					; 0000005cH
	je	SHORT $LN719@UpdateActo
	cmp	cx, 47					; 0000002fH
	je	SHORT $LN719@UpdateActo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 488  :             --_Last;

	mov	rsi, rdx

; 487  :         while (_Relative_path != _Last && !_Is_slash(_Last[-1])) {

	cmp	rax, rdx
	jne	SHORT $LL718@UpdateActo
$LN719@UpdateActo:

; 499  :         return wstring_view(_Filename, static_cast<size_t>(_Last - _Filename));

	sub	rbx, rsi
	sar	rbx, 1
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T18[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	edi, edi
	mov	QWORD PTR $T18[rbp-240], rdi

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T18[rbp-232], rdi
	mov	rax, 9223372036854775806		; 7ffffffffffffffeH
	cmp	rbx, rax

; 2620 :         if (_Count > max_size()) {

	ja	$LN1397@UpdateActo

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T18[rbp-232], 7
	cmp	rbx, 8
	jae	SHORT $LN768@UpdateActo

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T18[rbp-240], rbx

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	add	rbx, rbx
	mov	r8, rbx
	mov	rdx, rsi
	lea	rcx, QWORD PTR $T18[rbp-256]
	call	memcpy

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	WORD PTR $T18[rbp+rbx-256], di

; 2638 :             } else { // _Strat == _Construct_strategy::_From_string
; 2639 : #ifdef _INSERT_STRING_ANNOTATION
; 2640 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2641 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2642 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2643 : #endif // !_INSERT_STRING_ANNOTATION
; 2644 :             }
; 2645 : 
; 2646 :             _Proxy._Release();
; 2647 :             return;

	jmp	SHORT $LN766@UpdateActo
$LN768@UpdateActo:

; 2648 :         }
; 2649 : 
; 2650 :         _My_data._Myres               = _BUF_SIZE - 1;

	mov	r14, rbx
	or	r14, 7

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	cmp	r14, rax

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN779@UpdateActo

; 4716 :             return _Max;

	mov	r14, rax
	jmp	SHORT $LN778@UpdateActo
$LN779@UpdateActo:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	r14, 10
	mov	eax, 10
	cmovb	r14, rax
$LN778@UpdateActo:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	lea	rdx, QWORD PTR [r14+1]
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
	mov	rdi, rax

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T18[rbp-256], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T18[rbp-240], rbx

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T18[rbp-232], r14

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	add	rbx, rbx
	mov	r8, rbx
	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy

; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

	xor	ecx, ecx
	mov	WORD PTR [rdi+rbx], cx
$LN766@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1109 :             return _Parse_filename(_Text);

	or	r15d, 114688				; 0001c000H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rsi, QWORD PTR $T18[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T18[rbp-232], 8
	cmovae	rsi, QWORD PTR $T18[rbp-256]

; 1209 :         : _Mydata(_Cts), _Mysize(_Count) {

	mov	rdi, QWORD PTR $T18[rbp-240]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	call	__std_fs_code_page
	mov	r14d, eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T21[rbp-256], xmm0

; 4821 :         _My_data._Mysize = 0;

	xor	eax, eax
	mov	ecx, eax
	mov	QWORD PTR $T21[rbp-240], rax

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	ebx, 15
	mov	QWORD PTR $T21[rbp-232], rbx

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T21[rbp-256], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 80   :     return _Output;

	bts	r15d, 20
	mov	DWORD PTR $T4[rsp], r15d
	test	rdi, rdi

; 54   :     }
; 55   : 
; 56   :     return _Result._Len;
; 57   : }
; 58   : 
; 59   : template <class _Traits, class _Alloc>
; 60   : _NODISCARD basic_string<typename _Traits::char_type, _Traits, _Alloc> _Convert_wide_to_narrow(
; 61   :     const __std_code_page _Code_page, const wstring_view _Input, const _Alloc& _Al) {
; 62   :     basic_string<typename _Traits::char_type, _Traits, _Alloc> _Output(_Al);
; 63   : 
; 64   :     if (!_Input.empty()) {

	je	SHORT $LN957@UpdateActo

; 65   :         if (_Input.size() > static_cast<size_t>(INT_MAX)) {

	cmp	rdi, 2147483647				; 7fffffffH
	ja	$LN1398@UpdateActo

; 67   :         }
; 68   : 
; 69   :         const int _Len = _Check_convert_result(

	mov	DWORD PTR [rsp+32], eax
	xor	r9d, r9d
	mov	r8d, edi
	mov	rdx, rsi
	mov	ecx, r14d
	call	__std_fs_convert_wide_to_narrow
	mov	rbx, rax
	mov	QWORD PTR $T11[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN1399@UpdateActo

; 72   :         _Output.resize(static_cast<size_t>(_Len));

	movsxd	rdx, ebx
	lea	rcx, QWORD PTR $T21[rbp-256]
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	r9, QWORD PTR $T21[rbp-256]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T21[rbp-232], 16
	cmovae	r9, QWORD PTR $T21[rbp-256]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 76   :         (void) _Check_convert_result(__std_fs_convert_wide_to_narrow(

	mov	DWORD PTR [rsp+32], ebx
	mov	r8d, edi
	mov	rdx, rsi
	mov	ecx, r14d
	call	__std_fs_convert_wide_to_narrow
	mov	QWORD PTR $T10[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN1400@UpdateActo
	mov	rbx, QWORD PTR $T21[rbp-232]
	mov	rcx, QWORD PTR $T21[rbp-240]
$LN957@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	btr	r15d, 20

; 934  :             return string<char>();

	or	r15d, 917504				; 000e0000H
	mov	DWORD PTR $T4[rsp], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T21[rbp-256]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rbx, 16
	setae	r14b

; 2236 :         if (_Large_string_engaged()) {

	mov	rsi, QWORD PTR $T21[rbp-256]
	cmovae	rax, rsi

; 1435 :         const auto _Rightsize = _Right._Mysize;

	cmp	rcx, 8

; 1436 :         if (_Mysize < _Rightsize) {

	jae	SHORT $LN819@UpdateActo

; 1437 :             return false;

	xor	dil, dil
	jmp	SHORT $LN818@UpdateActo
$LN819@UpdateActo:

; 1438 :         }
; 1439 :         return _Traits::compare(_Mydata + (_Mysize - _Rightsize), _Right._Mydata, _Rightsize) == 0;

	add	rax, -8
	add	rcx, rax

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	mov	r8d, 8
	lea	rdx, OFFSET FLAT:??_C@_08KPEPEALH@?4pack?4zs@
	call	memcmp

; 1439 :         return _Traits::compare(_Mydata + (_Mysize - _Rightsize), _Right._Mydata, _Rightsize) == 0;

	test	eax, eax
	sete	dil
$LN818@UpdateActo:

; 4832 :         if (_My_data._Large_string_engaged()) {

	test	r14b, r14b
	je	SHORT $LN799@UpdateActo

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	lea	r8, QWORD PTR [rbx+1]
	mov	rdx, rsi
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN799@UpdateActo:

; 4841 :         _My_data._Mysize = 0;

	xor	ecx, ecx
	mov	QWORD PTR $T21[rbp-240], rcx

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T21[rbp-232], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T21[rbp-256], cl

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T18[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 128  : 		if (!DirEntry.path().filename().string().ends_with(".pack.zs")) continue;

	test	dil, dil
	je	$LN1540@UpdateActo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r12+24], 8
	jb	SHORT $LN1280@UpdateActo

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r12, QWORD PTR [r12]
$LN1280@UpdateActo:

; 4041 :         return basic_string_view<_Elem, _Traits>{_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize};

	mov	rax, QWORD PTR [r13]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 497  :         const auto _Last     = _First + _Str.size();

	lea	r10, QWORD PTR [r12+rax*2]

; 498  :         const auto _Filename = _Find_filename(_First, _Last);

	mov	rdx, r10
	mov	rcx, r12
	call	?_Find_filename@filesystem@std@@YAPEB_WQEB_WPEB_W@Z ; std::filesystem::_Find_filename
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 1209 :         : _Mydata(_Cts), _Mysize(_Count) {

	mov	QWORD PTR $T28[rbp-256], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 499  :         return wstring_view(_Filename, static_cast<size_t>(_Last - _Filename));

	sub	r10, rax
	sar	r10, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 1209 :         : _Mydata(_Cts), _Mysize(_Count) {

	mov	QWORD PTR $T28[rbp-248], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1109 :             return _Parse_filename(_Text);

	lea	rdx, QWORD PTR $T28[rbp-256]
	lea	rcx, QWORD PTR $T32[rbp-256]
	call	??$?0V?$basic_string_view@_WU?$char_traits@_W@std@@@std@@$0A@@path@filesystem@std@@QEAA@AEBV?$basic_string_view@_WU?$char_traits@_W@std@@@2@W4format@012@@Z ; std::filesystem::path::path<std::basic_string_view<wchar_t,std::char_traits<wchar_t> >,0>
	bts	r15d, 30
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rsi, QWORD PTR $T32[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T32[rbp-232], 8
	cmovae	rsi, QWORD PTR $T32[rbp-256]

; 1209 :         : _Mydata(_Cts), _Mysize(_Count) {

	mov	rdi, QWORD PTR $T32[rbp-240]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	call	__std_fs_code_page
	mov	r14d, eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T22[rbp-256], xmm0

; 4821 :         _My_data._Mysize = 0;

	xor	r13d, r13d
	mov	QWORD PTR $T22[rbp-240], r13

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T22[rbp-232], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T22[rbp-256], r13b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 80   :     return _Output;

	bts	r15d, 29
	mov	DWORD PTR $T4[rsp], r15d
	test	rdi, rdi

; 54   :     }
; 55   : 
; 56   :     return _Result._Len;
; 57   : }
; 58   : 
; 59   : template <class _Traits, class _Alloc>
; 60   : _NODISCARD basic_string<typename _Traits::char_type, _Traits, _Alloc> _Convert_wide_to_narrow(
; 61   :     const __std_code_page _Code_page, const wstring_view _Input, const _Alloc& _Al) {
; 62   :     basic_string<typename _Traits::char_type, _Traits, _Alloc> _Output(_Al);
; 63   : 
; 64   :     if (!_Input.empty()) {

	je	SHORT $LN1268@UpdateActo

; 65   :         if (_Input.size() > static_cast<size_t>(INT_MAX)) {

	cmp	rdi, 2147483647				; 7fffffffH
	ja	$LN1401@UpdateActo

; 67   :         }
; 68   : 
; 69   :         const int _Len = _Check_convert_result(

	mov	DWORD PTR [rsp+32], r13d
	xor	r9d, r9d
	mov	r8d, edi
	mov	rdx, rsi
	mov	ecx, eax
	call	__std_fs_convert_wide_to_narrow
	mov	rbx, rax
	mov	QWORD PTR $T9[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN1402@UpdateActo

; 72   :         _Output.resize(static_cast<size_t>(_Len));

	movsxd	rdx, ebx
	lea	rcx, QWORD PTR $T22[rbp-256]
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	r9, QWORD PTR $T22[rbp-256]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T22[rbp-232], 16
	cmovae	r9, QWORD PTR $T22[rbp-256]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 76   :         (void) _Check_convert_result(__std_fs_convert_wide_to_narrow(

	mov	DWORD PTR [rsp+32], ebx
	mov	r8d, edi
	mov	rdx, rsi
	mov	ecx, r14d
	call	__std_fs_convert_wide_to_narrow
	mov	QWORD PTR $T8[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN1403@UpdateActo
$LN1268@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	btr	r15d, 29

; 934  :             return string<char>();

	or	r15d, 469762048				; 1c000000H
	mov	DWORD PTR $T4[rsp], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rdx, QWORD PTR ?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A+8
	cmp	rdx, QWORD PTR ?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A+16
	je	SHORT $LN1144@UpdateActo
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rdx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR [rdx+16], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rdx+24], r13

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR $T22[rbp-256]
	movups	XMMWORD PTR [rdx], xmm0
	movups	xmm1, XMMWORD PTR $T22[rbp-240]
	movups	XMMWORD PTR [rdx+16], xmm1

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T22[rbp-240], r13

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T22[rbp-232], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T22[rbp-256], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 806  :         ++_Mylast;

	add	QWORD PTR ?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A+8, 32 ; 00000020H

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	jmp	SHORT $LN1143@UpdateActo
$LN1144@UpdateActo:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR $T22[rbp-256]
	lea	rcx, OFFSET FLAT:?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A ; UIActorTool::ActorList
	call	??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	npad	1
$LN1143@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T22[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T32[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 128  : 		if (!DirEntry.path().filename().string().ends_with(".pack.zs")) continue;

	jmp	SHORT $LN2@UpdateActo
$LN1540@UpdateActo:
	xor	r13d, r13d
$LN2@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2656 :             const auto _Error = _Dir_enum_impl::_Advance_and_reset_if_no_more_files(_Impl);

	lea	rcx, QWORD PTR <begin>$L0$43[rbp-256]
	call	?_Advance_and_reset_if_no_more_files@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@3@@Z ; std::filesystem::_Dir_enum_impl::_Advance_and_reset_if_no_more_files

; 2657 :             if (_Error != __std_win_error::_Success) {

	test	eax, eax
	jne	$LN1396@UpdateActo
	jmp	$LL419@UpdateActo
$LN3@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1402 :         if (_Rep) {

	mov	esi, -1
	mov	rcx, QWORD PTR <end>$L0$45[rbp-248]
	test	rcx, rcx
	je	SHORT $LN390@UpdateActo

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN1527@UpdateActo

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR <end>$L0$45[rbp-248]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rbx+12], eax
	cmp	eax, 1
	jne	SHORT $LN1527@UpdateActo

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR <end>$L0$45[rbp-248]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN1527@UpdateActo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 131  : 	}

	mov	r15d, DWORD PTR $T4[rsp]
$LN390@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1402 :         if (_Rep) {

	mov	rcx, QWORD PTR <begin>$L0$43[rbp-248]
	test	rcx, rcx
	je	SHORT $LN362@UpdateActo

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN1528@UpdateActo

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR <begin>$L0$43[rbp-248]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rbx+12], eax
	cmp	eax, 1
	jne	SHORT $LN1528@UpdateActo

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR <begin>$L0$43[rbp-248]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN1528@UpdateActo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 131  : 	}

	mov	r15d, DWORD PTR $T4[rsp]
$LN362@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1402 :         if (_Rep) {

	mov	rcx, QWORD PTR $S8$41[rbp-248]
	test	rcx, rcx
	je	SHORT $LN376@UpdateActo

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN1529@UpdateActo

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR $S8$41[rbp-248]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rbx+12], eax
	cmp	eax, 1
	jne	SHORT $LN1529@UpdateActo

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR $S8$41[rbp-248]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN1529@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	mov	r15d, DWORD PTR $T4[rsp]
$LN376@UpdateActo:
	xorps	xmm0, xmm0
	movups	XMMWORD PTR $T33[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T33[rbp-240], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T33[rbp-232], r13

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 15
	lea	rdx, OFFSET FLAT:??_C@_0BA@FFIMANGF@Save?1Pack?1Actor@
	lea	rcx, QWORD PTR $T33[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 133  : 	if (Util::FileExists(Editor::GetWorkingDirFile("Save/Pack/Actor")))

	lea	rdx, QWORD PTR $T33[rbp-256]
	lea	rcx, QWORD PTR $T40[rbp-256]
	call	?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Editor::GetWorkingDirFile
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rax

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rax+24], 16
	jb	SHORT $LN409@UpdateActo

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rax]
$LN409@UpdateActo:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\sys\stat.h

; 241  :             return _stat64i32(_FileName, (struct _stat64i32*)_Stat);

	lea	rdx, QWORD PTR buffer$47[rbp-256]
	call	QWORD PTR __imp__stat64i32
	mov	ebx, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 133  : 	if (Util::FileExists(Editor::GetWorkingDirFile("Save/Pack/Actor")))

	test	ebx, ebx
	jne	$LN103@UpdateActo
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T34[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T34[rbp-240], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T34[rbp-232], r13

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	lea	r8d, QWORD PTR [rbx+15]
	lea	rdx, OFFSET FLAT:??_C@_0BA@FFIMANGF@Save?1Pack?1Actor@
	lea	rcx, QWORD PTR $T34[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 135  : 		for (const auto& DirEntry : std::filesystem::directory_iterator(Editor::GetWorkingDirFile("Save/Pack/Actor")))

	lea	rdx, QWORD PTR $T34[rbp-256]
	lea	rcx, QWORD PTR $T38[rbp-256]
	call	?GetWorkingDirFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@@Z ; Editor::GetWorkingDirFile
	npad	1
	mov	rdx, rax
	lea	rcx, QWORD PTR $T37[rbp-256]
	call	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@path@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@W4format@012@@Z ; std::filesystem::path::path<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>
	npad	1
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1470 :     element_type* _Ptr{nullptr};

	movdqa	XMMWORD PTR $S9$42[rbp-256], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2619 :             const auto _Error = _Dir_enum_impl::_Initialize_dir_enum(_Impl, _Path);

	lea	rdx, QWORD PTR $T37[rbp-256]
	lea	rcx, QWORD PTR $S9$42[rbp-256]
	call	??$_Initialize_dir_enum@U_Dir_enum_impl@filesystem@std@@@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@2@AEBVpath@12@W4directory_options@12@@Z ; std::filesystem::_Dir_enum_impl::_Initialize_dir_enum<std::filesystem::_Dir_enum_impl>

; 2620 :             if (_Error != __std_win_error::_Success) {

	test	eax, eax
	jne	$LN1547@UpdateActo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T37[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
	npad	1

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	r8, QWORD PTR $T38[rbp-232]
	cmp	r8, 16
	jb	SHORT $LN835@UpdateActo

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR $T38[rbp-256]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN835@UpdateActo:
	xorps	xmm0, xmm0
	movups	XMMWORD PTR <begin>$L1$44[rbp-256], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1396 :         if (_Rep) {

	mov	rcx, QWORD PTR $S9$42[rbp-248]
	test	rcx, rcx
	je	SHORT $LN1485@UpdateActo

; 1169 :         _MT_INCR(_Uses);

	lock inc DWORD PTR [rcx+8]
	mov	r15d, DWORD PTR $T4[rsp]
$LN1485@UpdateActo:

; 1345 :         _Ptr = _Right._Ptr;

	movdqa	xmm1, XMMWORD PTR $S9$42[rbp-256]
	movdqa	XMMWORD PTR <begin>$L1$44[rbp-256], xmm1
	movups	XMMWORD PTR <end>$L1$46[rbp-256], xmm0

; 1396 :         if (_Rep) {

	mov	rcx, QWORD PTR $S9$42[rbp-248]
	test	rcx, rcx
	je	SHORT $LN902@UpdateActo

; 1169 :         _MT_INCR(_Uses);

	lock inc DWORD PTR [rcx+8]
	movdqa	xmm1, XMMWORD PTR $S9$42[rbp-256]
	mov	r15d, DWORD PTR $T4[rsp]
$LN902@UpdateActo:

; 1357 :         _Ptr = _Other._Ptr;

	movdqa	XMMWORD PTR $T29[rbp-256], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 135  : 		for (const auto& DirEntry : std::filesystem::directory_iterator(Editor::GetWorkingDirFile("Save/Pack/Actor")))

	lea	rdx, QWORD PTR $T29[rbp-256]
	lea	rcx, QWORD PTR <end>$L1$46[rbp-256]
	call	?end@filesystem@std@@YA?AVdirectory_iterator@12@V312@@Z ; std::filesystem::end
	npad	1
	npad	8
$LL48@UpdateActo:
	mov	rbx, QWORD PTR <begin>$L1$44[rbp-256]
	cmp	rbx, QWORD PTR <end>$L1$46[rbp-256]
	je	$LN6@UpdateActo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2381 :             const auto _Result = _Get_any_status(_Status_stats_flags);

	mov	r8d, 3
	lea	rdx, QWORD PTR _Result$26[rbp-256]
	mov	rcx, rbx
	call	?_Get_any_status@directory_entry@filesystem@std@@AEBA?AU_File_status_and_error@23@W4__std_fs_stats_flags@@@Z ; std::filesystem::directory_entry::_Get_any_status

; 2065 :             return _Error != __std_win_error::_Success && _Status.type() != file_type::not_found

	mov	rax, QWORD PTR _Result$26[rbp-256]
	mov	edx, DWORD PTR _Result$26[rbp-248]
	test	edx, edx
	je	SHORT $LN58@UpdateActo
	lea	ecx, DWORD PTR [rax-1]
	test	ecx, -9					; fffffff7H
	jne	$LN1515@UpdateActo
$LN58@UpdateActo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 137  : 			if (!DirEntry.is_regular_file()) continue;

	cmp	eax, 2
	jne	$LN5@UpdateActo

; 138  : 			if (!DirEntry.path().filename().string().ends_with(".pack.zs")) continue;

	lea	rax, QWORD PTR [rbx+32]
	mov	QWORD PTR $T24[rbp-256], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rax

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rax+24], 8
	jb	SHORT $LN260@UpdateActo

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rax]
$LN260@UpdateActo:

; 4041 :         return basic_string_view<_Elem, _Traits>{_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize};

	add	rax, 16
	mov	QWORD PTR tv7032[rsp], rax
	mov	rax, QWORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 497  :         const auto _Last     = _First + _Str.size();

	lea	rbx, QWORD PTR [rcx+rax*2]

; 498  :         const auto _Filename = _Find_filename(_First, _Last);

	mov	rsi, rbx

; 435  :         return _STD find_if_not(_Find_root_name_end(_First, _Last), _Last, _Is_slash);

	mov	rdx, rbx
	call	?_Find_root_name_end@filesystem@std@@YAPEB_WQEB_W0@Z ; std::filesystem::_Find_root_name_end
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rax, rbx
	je	SHORT $LN270@UpdateActo
	npad	2
$LL277@UpdateActo:

; 371  :         if (!_Pred(*_UFirst)) {

	movzx	ecx, WORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, 92					; 0000005cH
	je	SHORT $LN1519@UpdateActo
	cmp	cx, 47					; 0000002fH
	jne	SHORT $LN1523@UpdateActo
$LN1519@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	add	rax, 2
	cmp	rax, rbx
	jne	SHORT $LL277@UpdateActo
$LN1523@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 487  :         while (_Relative_path != _Last && !_Is_slash(_Last[-1])) {

	cmp	rax, rbx
	je	SHORT $LN270@UpdateActo
	npad	3
$LL269@UpdateActo:
	lea	rdx, QWORD PTR [rsi-2]
	movzx	ecx, WORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, 92					; 0000005cH
	je	SHORT $LN270@UpdateActo
	cmp	cx, 47					; 0000002fH
	je	SHORT $LN270@UpdateActo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 488  :             --_Last;

	mov	rsi, rdx

; 487  :         while (_Relative_path != _Last && !_Is_slash(_Last[-1])) {

	cmp	rax, rdx
	jne	SHORT $LL269@UpdateActo
$LN270@UpdateActo:

; 499  :         return wstring_view(_Filename, static_cast<size_t>(_Last - _Filename));

	sub	rbx, rsi
	sar	rbx, 1
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T19[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T19[rbp-240], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T19[rbp-232], r13
	mov	r12, 9223372036854775806		; 7ffffffffffffffeH
	cmp	rbx, r12

; 2620 :         if (_Count > max_size()) {

	ja	$LN1409@UpdateActo

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T19[rbp-232], 7
	cmp	rbx, 8
	jae	SHORT $LN319@UpdateActo

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T19[rbp-240], rbx

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	add	rbx, rbx
	mov	r8, rbx
	mov	rdx, rsi
	lea	rcx, QWORD PTR $T19[rbp-256]
	call	memcpy

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	WORD PTR $T19[rbp+rbx-256], r13w

; 2638 :             } else { // _Strat == _Construct_strategy::_From_string
; 2639 : #ifdef _INSERT_STRING_ANNOTATION
; 2640 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2641 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2642 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2643 : #endif // !_INSERT_STRING_ANNOTATION
; 2644 :             }
; 2645 : 
; 2646 :             _Proxy._Release();
; 2647 :             return;

	jmp	SHORT $LN317@UpdateActo
$LN319@UpdateActo:

; 2648 :         }
; 2649 : 
; 2650 :         _My_data._Myres               = _BUF_SIZE - 1;

	mov	r14, rbx
	or	r14, 7

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	cmp	r14, r12

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN330@UpdateActo

; 4716 :             return _Max;

	mov	r14, r12
	jmp	SHORT $LN329@UpdateActo
$LN330@UpdateActo:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	r14, 10
	mov	eax, 10
	cmovb	r14, rax
$LN329@UpdateActo:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	lea	rdx, QWORD PTR [r14+1]
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
	mov	rdi, rax

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T19[rbp-256], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T19[rbp-240], rbx

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T19[rbp-232], r14

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	add	rbx, rbx
	mov	r8, rbx
	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy

; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

	mov	WORD PTR [rdi+rbx], r13w
$LN317@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1109 :             return _Parse_filename(_Text);

	or	r15d, 112				; 00000070H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r12, QWORD PTR $T19[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T19[rbp-232], 8
	cmovae	r12, QWORD PTR $T19[rbp-256]

; 1209 :         : _Mydata(_Cts), _Mysize(_Count) {

	mov	r14, QWORD PTR $T19[rbp-240]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	call	__std_fs_code_page
	mov	r13d, eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T17[rsp], xmm0

; 4821 :         _My_data._Mysize = 0;

	xor	eax, eax
	mov	ecx, eax
	mov	QWORD PTR $T17[rbp-240], rax

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	edi, 15
	mov	QWORD PTR $T17[rbp-232], rdi

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T17[rsp], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 80   :     return _Output;

	or	r15d, 8
	mov	DWORD PTR $T4[rsp], r15d
	test	r14, r14

; 54   :     }
; 55   : 
; 56   :     return _Result._Len;
; 57   : }
; 58   : 
; 59   : template <class _Traits, class _Alloc>
; 60   : _NODISCARD basic_string<typename _Traits::char_type, _Traits, _Alloc> _Convert_wide_to_narrow(
; 61   :     const __std_code_page _Code_page, const wstring_view _Input, const _Alloc& _Al) {
; 62   :     basic_string<typename _Traits::char_type, _Traits, _Alloc> _Output(_Al);
; 63   : 
; 64   :     if (!_Input.empty()) {

	je	$LN248@UpdateActo

; 65   :         if (_Input.size() > static_cast<size_t>(INT_MAX)) {

	cmp	r14, 2147483647				; 7fffffffH
	ja	$LN1410@UpdateActo

; 67   :         }
; 68   : 
; 69   :         const int _Len = _Check_convert_result(

	mov	DWORD PTR [rsp+32], eax
	xor	r9d, r9d
	mov	r8d, r14d
	mov	rdx, r12
	mov	ecx, r13d
	call	__std_fs_convert_wide_to_narrow
	mov	rbx, rax
	mov	QWORD PTR $T15[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN1411@UpdateActo

; 72   :         _Output.resize(static_cast<size_t>(_Len));

	movsxd	rcx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4140 :         if (_New_size <= _Old_size) {

	mov	rdx, QWORD PTR $T17[rbp-240]
	cmp	rcx, rdx
	ja	SHORT $LN207@UpdateActo

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T17[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T17[rbp-232], 16
	cmovae	rax, QWORD PTR $T17[rsp]

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR $T17[rbp-240], rcx
	mov	BYTE PTR [rax+rcx], 0

; 4142 :         } else {

	jmp	SHORT $LN217@UpdateActo
$LN207@UpdateActo:

; 4143 :             append(_New_size - _Old_size, _Ch);

	mov	rsi, rcx
	sub	rsi, rdx
	mov	r8, QWORD PTR $T17[rbp-232]
	mov	rax, r8
	sub	rax, rdx

; 3298 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rsi, rax
	ja	SHORT $LN218@UpdateActo

; 3299 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3300 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	mov	QWORD PTR $T17[rbp-240], rcx

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rdi, QWORD PTR $T17[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	r8, 16
	cmovae	rdi, QWORD PTR $T17[rsp]

; 3302 :             _Traits::assign(_Old_ptr + _Old_size, _Count, _Ch);

	add	rdi, rdx

; 437  :         return static_cast<_Elem*>(_CSTD memset(_First, _Ch, _Count));

	mov	r8, rsi
	xor	edx, edx
	mov	rcx, rdi
	call	memset

; 3303 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rdi+rsi], 0

; 3304 :             return *this;

	jmp	SHORT $LN217@UpdateActo
$LN218@UpdateActo:

; 3305 :         }
; 3306 : 
; 3307 :         return _Reallocate_grow_by(

	mov	r9, rsi
	mov	rdx, rsi
	lea	rcx, QWORD PTR $T17[rsp]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,unsigned __int64,char>
$LN217@UpdateActo:

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	r9, QWORD PTR $T17[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T17[rbp-232], 16
	cmovae	r9, QWORD PTR $T17[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 76   :         (void) _Check_convert_result(__std_fs_convert_wide_to_narrow(

	mov	DWORD PTR [rsp+32], ebx
	mov	r8d, r14d
	mov	rdx, r12
	mov	ecx, r13d
	call	__std_fs_convert_wide_to_narrow
	mov	QWORD PTR $T14[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN1412@UpdateActo
	mov	rdi, QWORD PTR $T17[rbp-232]
	mov	rcx, QWORD PTR $T17[rbp-240]
$LN248@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	and	r15d, -9

; 934  :             return string<char>();

	or	r15d, 7
	mov	DWORD PTR $T4[rsp], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T17[rsp]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	rdi, 16
	setae	r14b

; 2236 :         if (_Large_string_engaged()) {

	mov	rbx, QWORD PTR $T17[rsp]
	cmovae	rax, rbx

; 1435 :         const auto _Rightsize = _Right._Mysize;

	cmp	rcx, 8

; 1436 :         if (_Mysize < _Rightsize) {

	jae	SHORT $LN156@UpdateActo

; 1437 :             return false;

	xor	sil, sil
	jmp	SHORT $LN155@UpdateActo
$LN156@UpdateActo:

; 1438 :         }
; 1439 :         return _Traits::compare(_Mydata + (_Mysize - _Rightsize), _Right._Mydata, _Rightsize) == 0;

	add	rax, -8
	add	rcx, rax

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	mov	r8d, 8
	lea	rdx, OFFSET FLAT:??_C@_08KPEPEALH@?4pack?4zs@
	call	memcmp

; 1439 :         return _Traits::compare(_Mydata + (_Mysize - _Rightsize), _Right._Mydata, _Rightsize) == 0;

	test	eax, eax
	sete	sil
$LN155@UpdateActo:

; 4832 :         if (_My_data._Large_string_engaged()) {

	test	r14b, r14b
	je	SHORT $LN123@UpdateActo

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	lea	rdx, QWORD PTR [rdi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rbx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN135@UpdateActo

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rbx, QWORD PTR [rbx-8]
	sub	rax, rbx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN132@UpdateActo
$LN135@UpdateActo:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rbx
	call	??3@YAXPEAX_K@Z				; operator delete
$LN123@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	xor	r13d, r13d
	mov	QWORD PTR $T17[rbp-240], r13

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T17[rbp-232], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T17[rsp], r13b

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T19[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 138  : 			if (!DirEntry.path().filename().string().ends_with(".pack.zs")) continue;

	test	sil, sil
	je	$LN5@UpdateActo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rax, QWORD PTR $T24[rbp-256]
	mov	rcx, rax

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rax+24], 8
	jb	SHORT $LN511@UpdateActo

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rax]
$LN511@UpdateActo:

; 4041 :         return basic_string_view<_Elem, _Traits>{_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize};

	mov	rax, QWORD PTR tv7032[rsp]
	mov	rax, QWORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 497  :         const auto _Last     = _First + _Str.size();

	lea	rbx, QWORD PTR [rcx+rax*2]

; 498  :         const auto _Filename = _Find_filename(_First, _Last);

	mov	rsi, rbx

; 435  :         return _STD find_if_not(_Find_root_name_end(_First, _Last), _Last, _Is_slash);

	mov	rdx, rbx
	call	?_Find_root_name_end@filesystem@std@@YAPEB_WQEB_W0@Z ; std::filesystem::_Find_root_name_end
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	cmp	rax, rbx
	je	SHORT $LN521@UpdateActo
$LL528@UpdateActo:

; 371  :         if (!_Pred(*_UFirst)) {

	movzx	ecx, WORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, 92					; 0000005cH
	je	SHORT $LN1517@UpdateActo
	cmp	cx, 47					; 0000002fH
	jne	SHORT $LN1524@UpdateActo
$LN1517@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 370  :     for (; _UFirst != _ULast; ++_UFirst) {

	add	rax, 2
	cmp	rax, rbx
	jne	SHORT $LL528@UpdateActo
$LN1524@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 487  :         while (_Relative_path != _Last && !_Is_slash(_Last[-1])) {

	cmp	rax, rbx
	je	SHORT $LN521@UpdateActo
$LL520@UpdateActo:
	lea	rdx, QWORD PTR [rsi-2]
	movzx	ecx, WORD PTR [rdx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xfilesystem_abi.h

; 384  :         return _Ch == L'\\' || _Ch == L'/';

	cmp	cx, 92					; 0000005cH
	je	SHORT $LN521@UpdateActo
	cmp	cx, 47					; 0000002fH
	je	SHORT $LN521@UpdateActo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 488  :             --_Last;

	mov	rsi, rdx

; 487  :         while (_Relative_path != _Last && !_Is_slash(_Last[-1])) {

	cmp	rax, rdx
	jne	SHORT $LL520@UpdateActo
$LN521@UpdateActo:

; 499  :         return wstring_view(_Filename, static_cast<size_t>(_Last - _Filename));

	sub	rbx, rsi
	sar	rbx, 1
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T20[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T20[rbp-240], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T20[rbp-232], r13
	mov	rax, 9223372036854775806		; 7ffffffffffffffeH
	cmp	rbx, rax

; 2620 :         if (_Count > max_size()) {

	ja	$LN1413@UpdateActo

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T20[rbp-232], 7
	cmp	rbx, 8
	jae	SHORT $LN570@UpdateActo

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T20[rbp-240], rbx

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	add	rbx, rbx
	mov	r8, rbx
	mov	rdx, rsi
	lea	rcx, QWORD PTR $T20[rbp-256]
	call	memcpy

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	WORD PTR $T20[rbp+rbx-256], r13w

; 2638 :             } else { // _Strat == _Construct_strategy::_From_string
; 2639 : #ifdef _INSERT_STRING_ANNOTATION
; 2640 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2641 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2642 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2643 : #endif // !_INSERT_STRING_ANNOTATION
; 2644 :             }
; 2645 : 
; 2646 :             _Proxy._Release();
; 2647 :             return;

	jmp	SHORT $LN568@UpdateActo
$LN570@UpdateActo:

; 2648 :         }
; 2649 : 
; 2650 :         _My_data._Myres               = _BUF_SIZE - 1;

	mov	r14, rbx
	or	r14, 7

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	cmp	r14, rax

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN581@UpdateActo

; 4716 :             return _Max;

	mov	r14, rax
	jmp	SHORT $LN580@UpdateActo
$LN581@UpdateActo:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	r14, 10
	mov	eax, 10
	cmovb	r14, rax
$LN580@UpdateActo:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	lea	rdx, QWORD PTR [r14+1]
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
	mov	rdi, rax

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T20[rbp-256], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T20[rbp-240], rbx

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T20[rbp-232], r14

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	add	rbx, rbx
	mov	r8, rbx
	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy

; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

	mov	WORD PTR [rdi+rbx], r13w
$LN568@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1109 :             return _Parse_filename(_Text);

	or	r15d, 896				; 00000380H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r12, QWORD PTR $T20[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T20[rbp-232], 8
	cmovae	r12, QWORD PTR $T20[rbp-256]

; 1209 :         : _Mydata(_Cts), _Mysize(_Count) {

	mov	r14, QWORD PTR $T20[rbp-240]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	call	__std_fs_code_page
	mov	DWORD PTR $T12[rsp], eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T16[rsp], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T16[rsp+16], r13

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	esi, 15
	mov	QWORD PTR $T16[rsp+24], rsi

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T16[rsp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 80   :     return _Output;

	bts	r15d, 13
	mov	DWORD PTR $T4[rsp], r15d
	test	r14, r14

; 54   :     }
; 55   : 
; 56   :     return _Result._Len;
; 57   : }
; 58   : 
; 59   : template <class _Traits, class _Alloc>
; 60   : _NODISCARD basic_string<typename _Traits::char_type, _Traits, _Alloc> _Convert_wide_to_narrow(
; 61   :     const __std_code_page _Code_page, const wstring_view _Input, const _Alloc& _Al) {
; 62   :     basic_string<typename _Traits::char_type, _Traits, _Alloc> _Output(_Al);
; 63   : 
; 64   :     if (!_Input.empty()) {

	je	$LN685@UpdateActo

; 65   :         if (_Input.size() > static_cast<size_t>(INT_MAX)) {

	cmp	r14, 2147483647				; 7fffffffH
	ja	$LN1414@UpdateActo

; 67   :         }
; 68   : 
; 69   :         const int _Len = _Check_convert_result(

	xor	ecx, ecx
	mov	DWORD PTR [rsp+32], ecx
	xor	r9d, r9d
	mov	r8d, r14d
	mov	rdx, r12
	mov	ecx, eax
	call	__std_fs_convert_wide_to_narrow
	mov	rbx, rax
	mov	QWORD PTR $T7[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN1415@UpdateActo

; 72   :         _Output.resize(static_cast<size_t>(_Len));

	movsxd	rcx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4140 :         if (_New_size <= _Old_size) {

	mov	rdx, QWORD PTR $T16[rsp+16]
	cmp	rcx, rdx
	ja	SHORT $LN644@UpdateActo

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T16[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T16[rsp+24], 16
	cmovae	rax, QWORD PTR $T16[rsp]

; 4815 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _New_size], _Elem());

	mov	QWORD PTR $T16[rsp+16], rcx
	mov	BYTE PTR [rax+rcx], 0

; 4142 :         } else {

	jmp	SHORT $LN654@UpdateActo
$LN644@UpdateActo:

; 4143 :             append(_New_size - _Old_size, _Ch);

	mov	rsi, rcx
	sub	rsi, rdx
	mov	r8, QWORD PTR $T16[rsp+24]
	mov	rax, r8
	sub	rax, rdx

; 3298 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rsi, rax
	ja	SHORT $LN655@UpdateActo

; 3299 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3300 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	mov	QWORD PTR $T16[rsp+16], rcx

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rdi, QWORD PTR $T16[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	r8, 16
	cmovae	rdi, QWORD PTR $T16[rsp]

; 3302 :             _Traits::assign(_Old_ptr + _Old_size, _Count, _Ch);

	add	rdi, rdx

; 437  :         return static_cast<_Elem*>(_CSTD memset(_First, _Ch, _Count));

	mov	r8, rsi
	xor	edx, edx
	mov	rcx, rdi
	call	memset

; 3303 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rsi+rdi], 0

; 3304 :             return *this;

	jmp	SHORT $LN654@UpdateActo
$LN655@UpdateActo:

; 3305 :         }
; 3306 : 
; 3307 :         return _Reallocate_grow_by(

	mov	r9, rsi
	mov	rdx, rsi
	lea	rcx, QWORD PTR $T16[rsp]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,unsigned __int64,char>
$LN654@UpdateActo:

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	r9, QWORD PTR $T16[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T16[rsp+24], 16
	cmovae	r9, QWORD PTR $T16[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 76   :         (void) _Check_convert_result(__std_fs_convert_wide_to_narrow(

	mov	DWORD PTR [rsp+32], ebx
	mov	r8d, r14d
	mov	rdx, r12
	mov	ecx, DWORD PTR $T12[rsp]
	call	__std_fs_convert_wide_to_narrow
	mov	QWORD PTR $T13[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN1416@UpdateActo
	mov	rsi, QWORD PTR $T16[rsp+24]
	mov	r13, QWORD PTR $T16[rsp+16]
$LN685@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	btr	r15d, 13

; 934  :             return string<char>();

	or	r15d, 7168				; 00001c00H
	mov	DWORD PTR $T4[rsp], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	r14, QWORD PTR ?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A+8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5851 :         _Seek_wrapped(_First, _STD _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

	mov	rbx, QWORD PTR ?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A

; 5836 :     for (; _First != _Last; ++_First) {

	mov	rdi, QWORD PTR $T16[rsp]
	cmp	rbx, r14
	je	SHORT $LN1514@UpdateActo
	npad	12
$LL438@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR $T16[rsp]

; 2236 :         if (_Large_string_engaged()) {

	cmp	rsi, 16
	cmovae	rdx, rdi

; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	r8, QWORD PTR [rbx+16]

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN451@UpdateActo

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx]
$LN451@UpdateActo:

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	cmp	r8, r13
	jne	SHORT $LN457@UpdateActo

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	test	eax, eax
	je	SHORT $LN1514@UpdateActo
$LN457@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5836 :     for (; _First != _Last; ++_First) {

	add	rbx, 32					; 00000020H
	cmp	rbx, r14
	jne	SHORT $LL438@UpdateActo
$LN1514@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	cmp	rsi, 16
	jb	SHORT $LN481@UpdateActo

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	lea	rdx, QWORD PTR [rsi+1]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rdi

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN493@UpdateActo

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rdi, QWORD PTR [rdi-8]
	sub	rax, rdi

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN490@UpdateActo
$LN493@UpdateActo:

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN481@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	xor	r13d, r13d
	mov	QWORD PTR $T16[rsp+16], r13

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T16[rsp+24], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T16[rsp], r13b

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T20[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 139  : 			if (std::find(ActorList.begin(), ActorList.end(), DirEntry.path().filename().string()) != ActorList.end()) continue;

	cmp	rbx, r14
	jne	$LN5@UpdateActo
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	mov	rcx, QWORD PTR $T24[rbp-256]
	cmp	QWORD PTR [rcx+24], 8
	jb	SHORT $LN981@UpdateActo

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN981@UpdateActo:

; 4041 :         return basic_string_view<_Elem, _Traits>{_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize};

	mov	rax, QWORD PTR tv7032[rsp]
	mov	rax, QWORD PTR [rax]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 497  :         const auto _Last     = _First + _Str.size();

	lea	r10, QWORD PTR [rcx+rax*2]

; 498  :         const auto _Filename = _Find_filename(_First, _Last);

	mov	rdx, r10
	call	?_Find_filename@filesystem@std@@YAPEB_WQEB_WPEB_W@Z ; std::filesystem::_Find_filename
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 1209 :         : _Mydata(_Cts), _Mysize(_Count) {

	mov	QWORD PTR $T30[rbp-256], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 499  :         return wstring_view(_Filename, static_cast<size_t>(_Last - _Filename));

	sub	r10, rax
	sar	r10, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 1209 :         : _Mydata(_Cts), _Mysize(_Count) {

	mov	QWORD PTR $T30[rbp-248], r10
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 1109 :             return _Parse_filename(_Text);

	lea	rdx, QWORD PTR $T30[rbp-256]
	lea	rcx, QWORD PTR $T35[rbp-256]
	call	??$?0V?$basic_string_view@_WU?$char_traits@_W@std@@@std@@$0A@@path@filesystem@std@@QEAA@AEBV?$basic_string_view@_WU?$char_traits@_W@std@@@2@W4format@012@@Z ; std::filesystem::path::path<std::basic_string_view<wchar_t,std::char_traits<wchar_t> >,0>
	bts	r15d, 21
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rsi, QWORD PTR $T35[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T35[rbp-232], 8
	cmovae	rsi, QWORD PTR $T35[rbp-256]

; 1209 :         : _Mydata(_Cts), _Mysize(_Count) {

	mov	rdi, QWORD PTR $T35[rbp-240]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	call	__std_fs_code_page
	mov	r14d, eax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T23[rbp-256], xmm0

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T23[rbp-240], r13

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T23[rbp-232], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T23[rbp-256], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 80   :     return _Output;

	bts	r15d, 25
	mov	DWORD PTR $T4[rsp], r15d
	test	rdi, rdi

; 54   :     }
; 55   : 
; 56   :     return _Result._Len;
; 57   : }
; 58   : 
; 59   : template <class _Traits, class _Alloc>
; 60   : _NODISCARD basic_string<typename _Traits::char_type, _Traits, _Alloc> _Convert_wide_to_narrow(
; 61   :     const __std_code_page _Code_page, const wstring_view _Input, const _Alloc& _Al) {
; 62   :     basic_string<typename _Traits::char_type, _Traits, _Alloc> _Output(_Al);
; 63   : 
; 64   :     if (!_Input.empty()) {

	je	SHORT $LN1045@UpdateActo

; 65   :         if (_Input.size() > static_cast<size_t>(INT_MAX)) {

	cmp	rdi, 2147483647				; 7fffffffH
	ja	$LN1417@UpdateActo

; 67   :         }
; 68   : 
; 69   :         const int _Len = _Check_convert_result(

	mov	DWORD PTR [rsp+32], r13d
	xor	r9d, r9d
	mov	r8d, edi
	mov	rdx, rsi
	mov	ecx, eax
	call	__std_fs_convert_wide_to_narrow
	mov	rbx, rax
	mov	QWORD PTR $T6[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN1418@UpdateActo

; 72   :         _Output.resize(static_cast<size_t>(_Len));

	movsxd	rdx, ebx
	lea	rcx, QWORD PTR $T23[rbp-256]
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	r9, QWORD PTR $T23[rbp-256]

; 2227 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T23[rbp-232], 16
	cmovae	r9, QWORD PTR $T23[rbp-256]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 76   :         (void) _Check_convert_result(__std_fs_convert_wide_to_narrow(

	mov	DWORD PTR [rsp+32], ebx
	mov	r8d, edi
	mov	rdx, rsi
	mov	ecx, r14d
	call	__std_fs_convert_wide_to_narrow
	mov	QWORD PTR $T5[rsp], rax
	shr	rax, 32					; 00000020H
	test	eax, eax

; 52   :     if (_Result._Err != __std_win_error::_Success) {

	jne	$LN1419@UpdateActo
$LN1045@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 152  :             return _Convert_wide_to_narrow<_Traits>(__std_fs_code_page(), _Input, _Al);

	btr	r15d, 25

; 934  :             return string<char>();

	or	r15d, 29360128				; 01c00000H
	mov	DWORD PTR $T4[rsp], r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 781  :         if (_Mylast != _My_data._Myend) {

	mov	rdx, QWORD PTR ?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A+8
	cmp	rdx, QWORD PTR ?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A+16
	je	SHORT $LN1062@UpdateActo
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR [rdx], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR [rdx+16], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR [rdx+24], r13

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR $T23[rbp-256]
	movups	XMMWORD PTR [rdx], xmm0
	movups	xmm1, XMMWORD PTR $T23[rbp-240]
	movups	XMMWORD PTR [rdx+16], xmm1

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T23[rbp-240], r13

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T23[rbp-232], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T23[rbp-256], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 806  :         ++_Mylast;

	add	QWORD PTR ?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A+8, 32 ; 00000020H

; 782  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	jmp	SHORT $LN1061@UpdateActo
$LN1062@UpdateActo:

; 783  :         }
; 784  : 
; 785  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	lea	r8, QWORD PTR $T23[rbp-256]
	lea	rcx, OFFSET FLAT:?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A ; UIActorTool::ActorList
	call	??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QEAV21@$$QEAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	npad	1
$LN1061@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T23[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T35[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy_deallocate
$LN5@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2656 :             const auto _Error = _Dir_enum_impl::_Advance_and_reset_if_no_more_files(_Impl);

	lea	rcx, QWORD PTR <begin>$L1$44[rbp-256]
	call	?_Advance_and_reset_if_no_more_files@_Dir_enum_impl@filesystem@std@@SA?AW4__std_win_error@@AEAV?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@3@@Z ; std::filesystem::_Dir_enum_impl::_Advance_and_reset_if_no_more_files

; 2657 :             if (_Error != __std_win_error::_Success) {

	test	eax, eax
	jne	$LN1408@UpdateActo
	jmp	$LL48@UpdateActo
$LN132@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN490@UpdateActo:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN6@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\memory

; 1402 :         if (_Rep) {

	mov	rcx, QWORD PTR <end>$L1$46[rbp-248]
	mov	esi, -1
	test	rcx, rcx
	je	SHORT $LN1530@UpdateActo

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN1530@UpdateActo

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR <end>$L1$46[rbp-248]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rbx+12], eax
	cmp	eax, 1
	jne	SHORT $LN1530@UpdateActo

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR <end>$L1$46[rbp-248]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN1530@UpdateActo:

; 1402 :         if (_Rep) {

	mov	rcx, QWORD PTR <begin>$L1$44[rbp-248]
	test	rcx, rcx
	je	SHORT $LN1531@UpdateActo

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN1531@UpdateActo

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR <begin>$L1$44[rbp-248]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rbx+12], eax
	cmp	eax, 1
	jne	SHORT $LN1531@UpdateActo

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR <begin>$L1$44[rbp-248]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	npad	1
$LN1531@UpdateActo:

; 1402 :         if (_Rep) {

	mov	rcx, QWORD PTR $S9$42[rbp-248]
	test	rcx, rcx
	je	SHORT $LN103@UpdateActo

; 1177 :         if (_MT_DECR(_Uses) == 0) {

	mov	eax, esi
	lock xadd DWORD PTR [rcx+8], eax
	cmp	eax, 1
	jne	SHORT $LN103@UpdateActo

; 1178 :             _Destroy();

	mov	rbx, QWORD PTR $S9$42[rbp-248]
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax]

; 1184 :         if (_MT_DECR(_Weaks) == 0) {

	lock xadd DWORD PTR [rbx+12], esi
	cmp	esi, 1
	jne	SHORT $LN103@UpdateActo

; 1185 :             _Delete_this();

	mov	rcx, QWORD PTR $S9$42[rbp-248]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN103@UpdateActo:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 144  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+960]
	mov	rbx, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rdi, QWORD PTR [r11+64]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
$LN1409@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2621 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN1396@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2658 :                 _Throw_fs_error("directory_iterator::operator++", _Error);

	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0BP@DPMCMHCK@directory_iterator?3?3operator?$CL?$CL@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@@Z ; std::filesystem::_Throw_fs_error
	npad	1
$LN1408@UpdateActo:
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0BP@DPMCMHCK@directory_iterator?3?3operator?$CL?$CL@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@@Z ; std::filesystem::_Throw_fs_error
	npad	1
$LN1546@UpdateActo:

; 2621 :                 _Throw_fs_error("directory_iterator::directory_iterator", _Error, _Path);

	lea	r8, QWORD PTR $T36[rbp-256]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0CH@GANCNKKD@directory_iterator?3?3directory_i@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	npad	1
$LN1513@UpdateActo:

; 2383 :                 _Throw_fs_error("directory_entry::status", _Result._Error, _Path);

	lea	r8, QWORD PTR [rbx+32]
	lea	rcx, OFFSET FLAT:??_C@_0BI@LBKDNGFK@directory_entry?3?3status@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	npad	1
$LN1400@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 53   :         _Throw_system_error_from_std_win_error(_Result._Err);

	mov	ecx, DWORD PTR $T10[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN1399@UpdateActo:
	mov	ecx, DWORD PTR $T11[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN1398@UpdateActo:

; 66   :             _Throw_system_error(errc::invalid_argument);

	call	?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
	npad	1
$LN1403@UpdateActo:

; 53   :         _Throw_system_error_from_std_win_error(_Result._Err);

	mov	ecx, DWORD PTR $T8[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN1402@UpdateActo:
	mov	ecx, DWORD PTR $T9[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN1401@UpdateActo:

; 66   :             _Throw_system_error(errc::invalid_argument);

	call	?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
	npad	1
$LN1397@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2621 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN1547@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\filesystem

; 2621 :                 _Throw_fs_error("directory_iterator::directory_iterator", _Error, _Path);

	lea	r8, QWORD PTR $T37[rbp-256]
	mov	edx, eax
	lea	rcx, OFFSET FLAT:??_C@_0CH@GANCNKKD@directory_iterator?3?3directory_i@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	npad	1
$LN1515@UpdateActo:

; 2383 :                 _Throw_fs_error("directory_entry::status", _Result._Error, _Path);

	lea	r8, QWORD PTR [rbx+32]
	lea	rcx, OFFSET FLAT:??_C@_0BI@LBKDNGFK@directory_entry?3?3status@
	call	?_Throw_fs_error@filesystem@std@@YAXPEBDW4__std_win_error@@AEBVpath@12@@Z ; std::filesystem::_Throw_fs_error
	npad	1
$LN1412@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\chrono

; 53   :         _Throw_system_error_from_std_win_error(_Result._Err);

	mov	ecx, DWORD PTR $T14[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN1411@UpdateActo:
	mov	ecx, DWORD PTR $T15[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN1410@UpdateActo:

; 66   :             _Throw_system_error(errc::invalid_argument);

	call	?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
	npad	1
$LN1416@UpdateActo:

; 53   :         _Throw_system_error_from_std_win_error(_Result._Err);

	mov	ecx, DWORD PTR $T13[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN1415@UpdateActo:
	mov	ecx, DWORD PTR $T7[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN1414@UpdateActo:

; 66   :             _Throw_system_error(errc::invalid_argument);

	call	?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
	npad	1
$LN1419@UpdateActo:

; 53   :         _Throw_system_error_from_std_win_error(_Result._Err);

	mov	ecx, DWORD PTR $T5[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN1418@UpdateActo:
	mov	ecx, DWORD PTR $T6[rsp+4]
	call	?_Throw_system_error_from_std_win_error@std@@YAXW4__std_win_error@@@Z ; std::_Throw_system_error_from_std_win_error
	int	3
$LN1417@UpdateActo:

; 66   :             _Throw_system_error(errc::invalid_argument);

	call	?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
	npad	1
$LN1413@UpdateActo:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2621 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN1541@UpdateActo:
?UpdateActorList@UIActorTool@@YAXXZ ENDP		; UIActorTool::UpdateActorList
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$1@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC	; `UIActorTool::UpdateActorList'::`1'::dtor$1
	lea	rcx, QWORD PTR $T39[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP	; `UIActorTool::UpdateActorList'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$2@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC	; `UIActorTool::UpdateActorList'::`1'::dtor$2
	lea	rcx, QWORD PTR $T36[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$2@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP	; `UIActorTool::UpdateActorList'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$132@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$132
	lea	rcx, QWORD PTR $S8$41[rdx]
	jmp	??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ ; std::shared_ptr<std::filesystem::_Dir_enum_impl>::~shared_ptr<std::filesystem::_Dir_enum_impl>
?dtor$132@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$132
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$3@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC	; `UIActorTool::UpdateActorList'::`1'::dtor$3
	lea	rcx, QWORD PTR $S8$41[rdx]
	jmp	??1directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::directory_iterator::~directory_iterator
?dtor$3@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP	; `UIActorTool::UpdateActorList'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$5@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC	; `UIActorTool::UpdateActorList'::`1'::dtor$5
	lea	rcx, QWORD PTR <begin>$L0$43[rdx]
	jmp	??1directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::directory_iterator::~directory_iterator
?dtor$5@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP	; `UIActorTool::UpdateActorList'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$7@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC	; `UIActorTool::UpdateActorList'::`1'::dtor$7
	lea	rcx, QWORD PTR <end>$L0$45[rdx]
	jmp	??1directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::directory_iterator::~directory_iterator
?dtor$7@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP	; `UIActorTool::UpdateActorList'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$8@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC	; `UIActorTool::UpdateActorList'::`1'::dtor$8
	lea	rcx, QWORD PTR $T18[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$8@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP	; `UIActorTool::UpdateActorList'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$90@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$90
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T4[rbp]
	and	eax, 1048576				; 00100000H
	test	eax, eax
	je	SHORT $LN929@dtor$90
	and	DWORD PTR $T4[rbp], -1048577		; ffffffffffefffffH
	lea	rcx, QWORD PTR $T21[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN929@dtor$90:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$90@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$90
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$10@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$10
	lea	rcx, QWORD PTR $T32[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$10@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$125@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$125
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T4[rbp]
	and	eax, 536870912				; 20000000H
	test	eax, eax
	je	SHORT $LN1240@dtor$125
	and	DWORD PTR $T4[rbp], -536870913		; ffffffffdfffffffH
	lea	rcx, QWORD PTR $T22[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1240@dtor$125:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$125@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$125
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$11@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$11
	lea	rcx, QWORD PTR $T22[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$11@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$15@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$15
	lea	rcx, QWORD PTR $T38[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$15@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$16@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$16
	lea	rcx, QWORD PTR $T37[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$16@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$76@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$76
	lea	rcx, QWORD PTR $S9$42[rdx]
	jmp	??1?$shared_ptr@U_Dir_enum_impl@filesystem@std@@@std@@QEAA@XZ ; std::shared_ptr<std::filesystem::_Dir_enum_impl>::~shared_ptr<std::filesystem::_Dir_enum_impl>
?dtor$76@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$76
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$17@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$17
	lea	rcx, QWORD PTR $S9$42[rdx]
	jmp	??1directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::directory_iterator::~directory_iterator
?dtor$17@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$19@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$19
	lea	rcx, QWORD PTR <begin>$L1$44[rdx]
	jmp	??1directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::directory_iterator::~directory_iterator
?dtor$19@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$19
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$21@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$21
	lea	rcx, QWORD PTR <end>$L1$46[rdx]
	jmp	??1directory_iterator@filesystem@std@@QEAA@XZ ; std::filesystem::directory_iterator::~directory_iterator
?dtor$21@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$21
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$22@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$22
	lea	rcx, QWORD PTR $T19[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$22@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$37@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$37
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T4[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN186@dtor$37
	and	DWORD PTR $T4[rbp], -9
	lea	rcx, QWORD PTR $T17[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN186@dtor$37:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$37@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$37
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$24@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$24
	lea	rcx, QWORD PTR $T20[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$24@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$24
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$65@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$65
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T4[rbp]
	and	eax, 8192				; 00002000H
	test	eax, eax
	je	SHORT $LN623@dtor$65
	and	DWORD PTR $T4[rbp], -8193		; ffffffffffffdfffH
	lea	rcx, QWORD PTR $T16[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN623@dtor$65:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$65@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$65
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$26@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$26
	lea	rcx, QWORD PTR $T35[rdx]
	jmp	??1path@filesystem@std@@QEAA@XZ		; std::filesystem::path::~path
?dtor$26@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$26
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$100@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$100
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T4[rbp]
	and	eax, 33554432				; 02000000H
	test	eax, eax
	je	SHORT $LN1017@dtor$100
	and	DWORD PTR $T4[rbp], -33554433		; fffffffffdffffffH
	lea	rcx, QWORD PTR $T23[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1017@dtor$100:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$100@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$100
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T4 = 48
$T5 = 56
$T6 = 56
$T7 = 56
tv7032 = 64
$T8 = 64
$T9 = 64
$T10 = 64
$T11 = 64
$T12 = 72
$T13 = 72
$T14 = 72
$T15 = 72
$T16 = 80
$T17 = 112
$T18 = 144
$T19 = 176
$T20 = 208
$T21 = 240
$T22 = 272
$T23 = 304
$T24 = 336
_Result$25 = 344
_Result$26 = 360
$T27 = 384
$T28 = 400
$T29 = 416
$T30 = 432
$T31 = 448
$T32 = 480
$T33 = 512
$T34 = 544
$T35 = 576
$T36 = 608
$T37 = 640
$T38 = 672
$T39 = 736
$T40 = 768
$S8$41 = 800
$S9$42 = 816
<begin>$L0$43 = 832
<begin>$L1$44 = 848
<end>$L0$45 = 864
<end>$L1$46 = 880
buffer$47 = 896
__$ArrayPad$ = 944
?dtor$27@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::UpdateActorList'::`1'::dtor$27
	lea	rcx, QWORD PTR $T23[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$27@?0??UpdateActorList@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::UpdateActorList'::`1'::dtor$27
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\ZStdFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\ZStdFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\ZStdFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\ZStdFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\ZStdFile.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
;	COMDAT ?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T6 = 64
$T7 = 64
$T8 = 88
$T9 = 96
$T10 = 128
$T11 = 128
$T12 = 160
$T13 = 160
$T14 = 160
$T15 = 192
$T16 = 200
Path$GSCopy$ = 224
__$ArrayPad$ = 232
Path$ = 288
?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; UIActorTool::Save, COMDAT

; 400  : {

$LN764:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-55]
	sub	rsp, 240				; 000000f0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-185], rax
	mov	r12, rcx
	mov	QWORD PTR Path$GSCopy$[rbp-185], rcx
	mov	DWORD PTR $T8[rbp-185], 0

; 401  : 	if (!Focused) return;

	cmp	BYTE PTR ?Focused@UIActorTool@@3_NA, 0	; UIActorTool::Focused
	je	$LN110@Save

; 402  : 
; 403  : 	if (ActorPack.Pack.Loaded)

	cmp	BYTE PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+144, 0
	je	$LN110@Save

; 405  : 		for (SarcFile::Entry& Entry : ActorPack.Pack.GetEntries())

	mov	rbx, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+152
	mov	r13, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+160
	cmp	rbx, r13
	je	$LN9@Save
	lea	r15, QWORD PTR [rbx+32]
	npad	11
$LL4@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	mov	rdi, QWORD PTR [rsi+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN499@Save
$LL498@Save:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rbx
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN500@Save

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rdi, QWORD PTR [rdi+16]

; 1620 :             } else {

	jmp	SHORT $LN501@Save
$LN500@Save:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rsi, rdi

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rdi, QWORD PTR [rdi]
$LN501@Save:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	je	SHORT $LL498@Save
$LN499@Save:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rsi+25], 0
	jne	$LN753@Save
	lea	rdx, QWORD PTR [rsi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rbx
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	$LN753@Save

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+80
	mov	rdi, QWORD PTR [rsi+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN638@Save
$LL637@Save:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rbx
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN639@Save

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rdi, QWORD PTR [rdi+16]

; 1620 :             } else {

	jmp	SHORT $LN640@Save
$LN639@Save:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rsi, rdi

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rdi, QWORD PTR [rdi]
$LN640@Save:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	je	SHORT $LL637@Save
$LN638@Save:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rsi+25], 0
	jne	$LN6@Save
	lea	rdx, QWORD PTR [rsi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rbx
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	$LN6@Save
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 411  : 					bool NodesSame = ActorPack.OriginalBymls[Entry.Name].GetNodes().size() == ActorPack.Bymls[Entry.Name].GetNodes().size();

	mov	rdx, rbx
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rsi, QWORD PTR [rax+8]
	mov	rdi, QWORD PTR [rax]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 411  : 					bool NodesSame = ActorPack.OriginalBymls[Entry.Name].GetNodes().size() == ActorPack.Bymls[Entry.Name].GetNodes().size();

	mov	rdx, rbx
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+80
	call	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rax+8]
	sub	rcx, QWORD PTR [rax]
	sub	rsi, rdi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 412  : 					if (NodesSame)

	cmp	rcx, rsi
	jne	$LN6@Save

; 414  : 						for (int i = 0; i < ActorPack.Bymls[Entry.Name].GetNodes().size(); i++)

	xor	r14d, r14d
	mov	rdx, rbx
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rax+8]
	sub	rcx, QWORD PTR [rax]
	sar	rcx, 3
	mov	rax, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	imul	rcx, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 414  : 						for (int i = 0; i < ActorPack.Bymls[Entry.Name].GetNodes().size(); i++)

	test	rcx, rcx
	je	$LN2@Save
	xor	edi, edi
$LL7@Save:

; 416  : 							if (BymlFile::NodeHasher::GenerateNodeHash(ActorPack.Bymls[Entry.Name].GetNodes()[i]) != BymlFile::NodeHasher::GenerateNodeHash(ActorPack.OriginalBymls[Entry.Name].GetNodes()[i]))

	mov	rdx, rbx
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+80
	call	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	imul	rdi, rdi, 88				; 00000058H
	mov	rdx, QWORD PTR [rax]
	add	rdx, rdi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 416  : 							if (BymlFile::NodeHasher::GenerateNodeHash(ActorPack.Bymls[Entry.Name].GetNodes()[i]) != BymlFile::NodeHasher::GenerateNodeHash(ActorPack.OriginalBymls[Entry.Name].GetNodes()[i]))

	lea	rcx, QWORD PTR $T14[rbp-185]
	call	?GenerateNodeHash@NodeHasher@BymlFile@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVNode@2@@Z ; BymlFile::NodeHasher::GenerateNodeHash
	mov	rsi, rax
	mov	rdx, rbx
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rdx, QWORD PTR [rax]
	add	rdx, rdi
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 416  : 							if (BymlFile::NodeHasher::GenerateNodeHash(ActorPack.Bymls[Entry.Name].GetNodes()[i]) != BymlFile::NodeHasher::GenerateNodeHash(ActorPack.OriginalBymls[Entry.Name].GetNodes()[i]))

	lea	rcx, QWORD PTR $T11[rbp-185]
	call	?GenerateNodeHash@NodeHasher@BymlFile@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVNode@2@@Z ; BymlFile::NodeHasher::GenerateNodeHash
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rcx, QWORD PTR [rsi+16]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rsi+24], 16
	jb	SHORT $LN588@Save

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rsi, QWORD PTR [rsi]
$LN588@Save:

; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	r8, QWORD PTR [rax+16]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rax+24], 16
	jb	SHORT $LN593@Save

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [rax]
$LN593@Save:

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	cmp	r8, rcx
	jne	SHORT $LN743@Save

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	mov	rdx, rsi
	mov	rcx, rax
	call	memcmp

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	test	eax, eax
	jne	SHORT $LN743@Save
	xor	dil, dil
	jmp	SHORT $LN600@Save
$LN743@Save:
	mov	dil, 1
$LN600@Save:

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T11[rbp-161]
	cmp	rdx, 16
	jb	SHORT $LN564@Save

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T11[rbp-185]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN576@Save

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN573@Save
$LN576@Save:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN564@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T11[rbp-169], 0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T11[rbp-161], 15

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T11[rbp-185], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T14[rbp-161]
	cmp	rdx, 16
	jb	SHORT $LN615@Save

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T14[rbp-185]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN627@Save

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN624@Save
$LN627@Save:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN615@Save:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 416  : 							if (BymlFile::NodeHasher::GenerateNodeHash(ActorPack.Bymls[Entry.Name].GetNodes()[i]) != BymlFile::NodeHasher::GenerateNodeHash(ActorPack.OriginalBymls[Entry.Name].GetNodes()[i]))

	test	dil, dil
	jne	SHORT $LN6@Save

; 414  : 						for (int i = 0; i < ActorPack.Bymls[Entry.Name].GetNodes().size(); i++)

	inc	r14d
	mov	rdx, rbx
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rax+8]
	sub	rcx, QWORD PTR [rax]
	sar	rcx, 3
	mov	rax, 3353953467947191203		; 2e8ba2e8ba2e8ba3H
	imul	rcx, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 414  : 						for (int i = 0; i < ActorPack.Bymls[Entry.Name].GetNodes().size(); i++)

	movsxd	rdi, r14d
	cmp	rdi, rcx
	jb	$LL7@Save
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 99   :                 if (_First1 == _Src) {

	jmp	$LN2@Save
$LN6@Save:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 427  : 				Entry.Bytes = ActorPack.Bymls[Entry.Name].ToBinary(BymlFile::TableGeneration::Auto);

	mov	rdx, rbx
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T7[rbp-185]
	mov	rcx, rax
	call	?ToBinary@BymlFile@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@W4TableGeneration@1@@Z ; BymlFile::ToBinary
	mov	rdx, rax
	mov	rcx, r15
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR $T7[rbp-185]
	test	rcx, rcx
	je	SHORT $LN753@Save

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR $T7[rbp-169]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN544@Save

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN541@Save
$LN544@Save:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN753@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+96
	mov	rdi, QWORD PTR [rsi+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN479@Save
	npad	6
$LL478@Save:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rbx
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN480@Save

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rdi, QWORD PTR [rdi+16]

; 1620 :             } else {

	jmp	SHORT $LN481@Save
$LN480@Save:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rsi, rdi

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rdi, QWORD PTR [rdi]
$LN481@Save:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	je	SHORT $LL478@Save
$LN479@Save:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rsi+25], 0
	jne	SHORT $LN2@Save
	lea	rdx, QWORD PTR [rsi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rbx
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN2@Save
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 431  : 				Entry.Bytes = ActorPack.AINBs[Entry.Name];

	mov	rdx, rbx
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+96
	call	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1483 :         if (this == _STD addressof(_Right)) {

	cmp	r15, rax
	je	SHORT $LN2@Save

; 1484 :             return *this;
; 1485 :         }
; 1486 : 
; 1487 :         auto& _Al       = _Getal();
; 1488 :         auto& _Right_al = _Right._Getal();
; 1489 :         if constexpr (_Choose_pocca_v<_Alty>) {
; 1490 :             if (_Al != _Right_al) {
; 1491 :                 _Tidy();
; 1492 :                 _Mypair._Myval2._Reload_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Al), _GET_PROXY_ALLOCATOR(_Alty, _Right_al));
; 1493 :             }
; 1494 :         }
; 1495 : 
; 1496 :         _Pocca(_Al, _Right_al);
; 1497 :         auto& _Right_data = _Right._Mypair._Myval2;
; 1498 :         _Assign_counted_range(_Right_data._Myfirst, static_cast<size_type>(_Right_data._Mylast - _Right_data._Myfirst));

	mov	rdx, QWORD PTR [rax]
	mov	r8, QWORD PTR [rax+8]
	sub	r8, rdx
	mov	rcx, r15
	call	??$_Assign_counted_range@PEAE@?$vector@EV?$allocator@E@std@@@std@@AEAAXPEAE_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Assign_counted_range<unsigned char *>
$LN2@Save:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 405  : 		for (SarcFile::Entry& Entry : ActorPack.Pack.GetEntries())

	add	rbx, 56					; 00000038H
	add	r15, 56					; 00000038H
	cmp	rbx, r13
	jne	$LL4@Save
	mov	r13, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+160
	mov	rbx, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+152

; 435  : 		for (std::vector<SarcFile::Entry>::iterator Iter = ActorPack.Pack.GetEntries().begin(); Iter != ActorPack.Pack.GetEntries().end(); )

	cmp	rbx, r13
	je	$LN9@Save
	mov	r14, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+120
	npad	3
$LL8@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5851 :         _Seek_wrapped(_First, _STD _Find_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Val));

	mov	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+112

; 5836 :     for (; _First != _Last; ++_First) {

	cmp	rsi, r14
	je	SHORT $LN742@Save
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdi, QWORD PTR [rbx+24]

; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	r15, QWORD PTR [rbx+16]
$LL48@Save:

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	rdi, 16
	jb	SHORT $LN56@Save

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rbx]
$LN56@Save:

; 4584 :         return _Traits_equal<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	r8, QWORD PTR [rsi+16]

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rsi

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rsi+24], 16
	jb	SHORT $LN61@Save

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rsi]
$LN61@Save:

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	cmp	r8, r15
	jne	SHORT $LN725@Save

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 548  :     return _Left_size == _Right_size && _Traits::compare(_Left, _Right, _Left_size) == 0;

	test	eax, eax
	je	SHORT $LN742@Save
$LN725@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 5836 :     for (; _First != _Last; ++_First) {

	add	rsi, 32					; 00000020H
	cmp	rsi, r14
	jne	SHORT $LL48@Save
$LN742@Save:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 437  : 			if (std::find(ActorPack.DeletedFiles.begin(), ActorPack.DeletedFiles.end(), Iter->Name) != ActorPack.DeletedFiles.end())

	lea	rdi, QWORD PTR [rbx+56]
	cmp	rsi, r14
	je	SHORT $LN19@Save
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4898 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	cmp	rdi, r13
	je	SHORT $LN459@Save
	npad	10
$LL460@Save:
	lea	rcx, QWORD PTR [rdi-56]
	mov	rdx, rdi
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rdi+32]
	lea	rcx, QWORD PTR [rdi-24]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	add	rdi, 56					; 00000038H
	cmp	rdi, r13
	jne	SHORT $LL460@Save
	mov	r13, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+160
$LN459@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1730 :         _Alty_traits::destroy(_Getal(), _Unfancy(_Mylast - 1));

	lea	rcx, QWORD PTR [r13-56]
	call	??1Entry@SarcFile@@QEAA@XZ

; 1731 :         _ASAN_VECTOR_MODIFY(-1);
; 1732 :         --_Mylast;

	mov	r13, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+160
	sub	r13, 56					; 00000038H
	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+160, r13
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 440  : 			}

	mov	r14, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+120
	jmp	SHORT $LN454@Save
$LN573@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	npad	1
$LN624@Save:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN541@Save:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN19@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 79   :         ++_Ptr;

	mov	rbx, rdi
$LN454@Save:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 435  : 		for (std::vector<SarcFile::Entry>::iterator Iter = ActorPack.Pack.GetEntries().begin(); Iter != ActorPack.Pack.GetEntries().end(); )

	cmp	rbx, r13
	jne	$LL8@Save
$LN9@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4938 :     const auto _Left_size  = _Left.size();

	mov	rcx, QWORD PTR [r12+16]

; 4939 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 4940 :     if (_Left.max_size() - _Left_size < _Right_size) {

	mov	rsi, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rsi
	sub	rax, rcx
	cmp	rax, 11
	jb	$LN761@Save

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	r9, r12

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r12+24], 16
	jb	SHORT $LN744@Save

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r9, QWORD PTR [r12]
$LN744@Save:

; 4944 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right, _Right_size};

	mov	QWORD PTR [rsp+48], 11
	lea	rax, OFFSET FLAT:??_C@_0M@NJMHPDHM@?1Pack?1Actor@
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], rcx
	lea	rcx, QWORD PTR $T13[rbp-185]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 447  : 		Util::CreateDir(Path + "/Pack/Actor");

	lea	rcx, QWORD PTR $T13[rbp-185]
	call	?CreateDir@Util@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Util::CreateDir

; 449  : 		ZStdFile::Compress(ActorPack.Pack.ToBinary(), ZStdFile::Dictionary::Pack).WriteToFile(Path + "/Pack/Actor/" + ActorPack.Name + ".pack.zs");

	lea	rdx, QWORD PTR $T16[rbp-185]
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+144
	call	?ToBinary@SarcFile@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ ; SarcFile::ToBinary
	mov	rdi, rax
	mov	QWORD PTR $T15[rbp-185], rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	movdqu	XMMWORD PTR $T6[rbp-185], xmm0
	xor	r15d, r15d
	mov	QWORD PTR $T6[rbp-169], r15
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\ZStdFile.cpp

; 207  : 	return Result;

	mov	DWORD PTR $T8[rbp-185], 24
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	rcx, QWORD PTR [rax+8]
	sub	rcx, QWORD PTR [rax]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\ZStdFile.cpp

; 174  : 	Result.Data.resize(ZSTD_compressBound(Bytes.size()));

	call	ZSTD_compressBound
	mov	r8, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR $T6[rbp-177]
	mov	rcx, r9
	mov	rdx, QWORD PTR $T6[rbp-185]
	sub	rcx, rdx

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rax, rcx
	jae	SHORT $LN314@Save

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	add	rax, rdx
	mov	QWORD PTR $T6[rbp-177], rax

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;
; 1564 :             return;

	jmp	SHORT $LN315@Save
$LN314@Save:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN315@Save

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR $T6[rbp-169]
	sub	rax, rdx

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	r8, rax
	jbe	SHORT $LN316@Save

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, r8
	lea	rcx, QWORD PTR $T6[rbp-185]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@EV?$allocator@E@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN315@Save
$LN316@Save:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	r8, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

	lea	rbx, QWORD PTR [r8+r9]

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	xor	edx, edx
	mov	rcx, r9
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	QWORD PTR $T6[rbp-177], rbx
$LN315@Save:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\ZStdFile.cpp

; 193  : 			CompressionDict = m_CompressDictPack;

	mov	rbx, QWORD PTR ?m_CompressDictPack@@3PEAUZSTD_CDict_s@@EA ; m_CompressDictPack

; 194  : 			break;
; 195  : 		case ZStdFile::Dictionary::BcettByaml:
; 196  : 			CompressionDict = m_CompressDictBcettByaml;
; 197  : 			break;
; 198  : 		}
; 199  : 
; 200  : 		ZSTD_CCtx* cctx = ZSTD_createCCtx();

	call	ZSTD_createCCtx
	mov	r14, rax

; 201  : 		ZSTD_CCtx_setParameter(cctx, ZSTD_c_compressionLevel, 16); //16 = compression level

	mov	edx, 100				; 00000064H
	lea	r8d, QWORD PTR [rdx-84]
	mov	rcx, rax
	call	ZSTD_CCtx_setParameter
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1869 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	r9, QWORD PTR [rdi]
	mov	rcx, QWORD PTR [rdi+8]
	sub	rcx, r9
	mov	r8, QWORD PTR $T6[rbp-177]
	mov	rdx, QWORD PTR $T6[rbp-185]
	sub	r8, rdx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\ZStdFile.cpp

; 202  : 		const size_t CompSize = ZSTD_compress_usingCDict(cctx, (void*)Result.Data.data(), Result.Data.size(), Bytes.data(), Bytes.size(), CompressionDict);

	mov	QWORD PTR [rsp+40], rbx
	mov	QWORD PTR [rsp+32], rcx
	mov	rcx, r14
	call	ZSTD_compress_usingCDict
	mov	r8, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1557 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	r9, QWORD PTR $T6[rbp-177]
	mov	rcx, r9
	mov	rdx, QWORD PTR $T6[rbp-185]
	sub	rcx, rdx

; 1558 :         if (_Newsize < _Oldsize) { // trim

	cmp	rax, rcx
	jae	SHORT $LN376@Save

; 1559 :             const pointer _Newlast = _Myfirst + _Newsize;

	add	rax, rdx
	mov	QWORD PTR $T6[rbp-177], rax

; 1560 :             _Orphan_range(_Newlast, _Mylast);
; 1561 :             _Destroy_range(_Newlast, _Mylast, _Al);
; 1562 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1563 :             _Mylast = _Newlast;
; 1564 :             return;

	jmp	SHORT $LN377@Save
$LN376@Save:

; 1565 :         }
; 1566 : 
; 1567 :         if (_Newsize > _Oldsize) { // append

	jbe	SHORT $LN377@Save

; 1568 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	rax, QWORD PTR $T6[rbp-169]
	sub	rax, rdx

; 1569 :             if (_Newsize > _Oldcapacity) { // reallocate

	cmp	r8, rax
	jbe	SHORT $LN378@Save

; 1570 :                 _Resize_reallocate(_Newsize, _Val);

	mov	rdx, r8
	lea	rcx, QWORD PTR $T6[rbp-185]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@EV?$allocator@E@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Resize_reallocate<std::_Value_init_tag>

; 1571 :                 return;

	jmp	SHORT $LN377@Save
$LN378@Save:

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	sub	r8, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 2035 :             _Zero_range(_PFirst, _PFirst + _Count);

	lea	rbx, QWORD PTR [r8+r9]

; 2020 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	xor	edx, edx
	mov	rcx, r9
	call	memset
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1580 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	QWORD PTR $T6[rbp-177], rbx
$LN377@Save:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\ZStdFile.cpp

; 204  : 		ZSTD_freeCCtx(cctx);

	mov	rcx, r14
	call	ZSTD_freeCCtx
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rdi]
	test	rcx, rcx
	je	SHORT $LN403@Save

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rdi+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN421@Save

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	$LN149@Save

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN421@Save:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	mov	QWORD PTR [rdi], r15

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rdi+8], r15

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rdi+16], r15
$LN403@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4938 :     const auto _Left_size  = _Left.size();

	mov	rax, QWORD PTR [r12+16]

; 4939 :     const auto _Right_size = _Convert_size<_Size_type>(_Traits::length(_Right));
; 4940 :     if (_Left.max_size() - _Left_size < _Right_size) {

	sub	rsi, rax
	cmp	rsi, 12
	jb	$LN762@Save

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	r9, r12

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r12+24], 16
	jb	SHORT $LN93@Save

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r9, QWORD PTR [r12]
$LN93@Save:

; 4944 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right, _Right_size};

	mov	QWORD PTR [rsp+48], 12
	lea	rcx, OFFSET FLAT:??_C@_0N@ELHGMCIJ@?1Pack?1Actor?1@
	mov	QWORD PTR [rsp+40], rcx
	mov	QWORD PTR [rsp+32], rax
	lea	rcx, QWORD PTR $T12[rbp-185]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ebx, 25
	mov	DWORD PTR $T8[rbp-185], ebx

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+32

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+56, 16
	cmovae	rdx, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+32

; 3241 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+48
	lea	rcx, QWORD PTR $T12[rbp-185]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T9[rbp-185], xmm0
	xorps	xmm1, xmm1

; 2293 :     size_type _Mysize = 0; // current length of string

	movdqu	XMMWORD PTR $T9[rbp-169], xmm1

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T9[rbp-185], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T9[rbp-169], xmm1

; 4967 :     return _STD move(_Left.append(_Right));

	mov	QWORD PTR [rax+16], r15
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
	or	ebx, 4
	mov	DWORD PTR $T8[rbp-185], ebx

; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR $T9[rbp-169]
	mov	rdx, QWORD PTR $T9[rbp-161]
	mov	rax, rdx
	sub	rax, rcx

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rax, 8
	jb	SHORT $LN195@Save

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR $T9[rbp-169], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T9[rbp-185]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR $T9[rbp-185]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, 8321014300284121134		; 737a2e6b6361702eH
	mov	QWORD PTR [rax+rcx], rdx

; 3276 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

	mov	BYTE PTR [rax+rcx+8], 0

; 3277 :             return *this;

	lea	rax, QWORD PTR $T9[rbp-185]
	jmp	SHORT $LN194@Save
$LN195@Save:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], 8
	lea	r9, OFFSET FLAT:??_C@_08KPEPEALH@?4pack?4zs@
	mov	edx, 8
	lea	rcx, QWORD PTR $T9[rbp-185]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
$LN194@Save:
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T10[rbp-185], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T10[rbp-169], r15

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T10[rbp-161], r15

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T10[rbp-185], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T10[rbp-169], xmm1

; 4998 :     return _STD move(_Left.append(_Right));

	mov	QWORD PTR [rax+16], r15
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
	or	ebx, 2
	mov	DWORD PTR $T8[rbp-185], ebx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 449  : 		ZStdFile::Compress(ActorPack.Pack.ToBinary(), ZStdFile::Dictionary::Pack).WriteToFile(Path + "/Pack/Actor/" + ActorPack.Name + ".pack.zs");

	lea	rdx, QWORD PTR $T10[rbp-185]
	lea	rcx, QWORD PTR $T6[rbp-185]
	call	?WriteToFile@Result@ZStdFile@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; ZStdFile::Result::WriteToFile
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T9[rbp-161]
	cmp	rdx, 16
	jb	SHORT $LN169@Save

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T9[rbp-185]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN181@Save

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN181@Save
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN181@Save:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN169@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T9[rbp-169], xmm0

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T9[rbp-185], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T12[rbp-161]
	cmp	rdx, 16
	jb	SHORT $LN140@Save

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T12[rbp-185]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN152@Save

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN152@Save
$LN149@Save:
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN152@Save:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN140@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T12[rbp-169], xmm0

; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T12[rbp-185], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR $T6[rbp-185]
	test	rcx, rcx
	je	SHORT $LN110@Save

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR $T6[rbp-169]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN122@Save

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN122@Save
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN122@Save:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN110@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, r12
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 451  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-185]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+240]
	mov	rbx, QWORD PTR [r11+56]
	mov	rsi, QWORD PTR [r11+64]
	mov	rdi, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
$LN762@Save:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4941 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN761@Save:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN758@Save:
?Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; UIActorTool::Save
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T6 = 64
$T7 = 64
$T8 = 88
$T9 = 96
$T10 = 128
$T11 = 128
$T12 = 160
$T13 = 160
$T14 = 160
$T15 = 192
$T16 = 200
Path$GSCopy$ = 224
__$ArrayPad$ = 232
Path$ = 288
?dtor$0@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `UIActorTool::Save'::`1'::dtor$0
	mov	rcx, QWORD PTR Path$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `UIActorTool::Save'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T6 = 64
$T7 = 64
$T8 = 88
$T9 = 96
$T10 = 128
$T11 = 128
$T12 = 160
$T13 = 160
$T14 = 160
$T15 = 192
$T16 = 200
Path$GSCopy$ = 224
__$ArrayPad$ = 232
Path$ = 288
?dtor$1@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `UIActorTool::Save'::`1'::dtor$1
	lea	rcx, QWORD PTR $T14[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `UIActorTool::Save'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T6 = 64
$T7 = 64
$T8 = 88
$T9 = 96
$T10 = 128
$T11 = 128
$T12 = 160
$T13 = 160
$T14 = 160
$T15 = 192
$T16 = 200
Path$GSCopy$ = 224
__$ArrayPad$ = 232
Path$ = 288
?dtor$24@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `UIActorTool::Save'::`1'::dtor$24
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T8[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN299@dtor$24
	and	DWORD PTR $T8[rbp], -9
	lea	rcx, QWORD PTR $T6[rbp]
	call	??1Result@ZStdFile@@QEAA@XZ
$LN299@dtor$24:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$24@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `UIActorTool::Save'::`1'::dtor$24
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T6 = 64
$T7 = 64
$T8 = 88
$T9 = 96
$T10 = 128
$T11 = 128
$T12 = 160
$T13 = 160
$T14 = 160
$T15 = 192
$T16 = 200
Path$GSCopy$ = 224
__$ArrayPad$ = 232
Path$ = 288
?dtor$23@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `UIActorTool::Save'::`1'::dtor$23
	mov	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
?dtor$23@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `UIActorTool::Save'::`1'::dtor$23
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T6 = 64
$T7 = 64
$T8 = 88
$T9 = 96
$T10 = 128
$T11 = 128
$T12 = 160
$T13 = 160
$T14 = 160
$T15 = 192
$T16 = 200
Path$GSCopy$ = 224
__$ArrayPad$ = 232
Path$ = 288
?dtor$7@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `UIActorTool::Save'::`1'::dtor$7
	lea	rcx, QWORD PTR $T12[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$7@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `UIActorTool::Save'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T6 = 64
$T7 = 64
$T8 = 88
$T9 = 96
$T10 = 128
$T11 = 128
$T12 = 160
$T13 = 160
$T14 = 160
$T15 = 192
$T16 = 200
Path$GSCopy$ = 224
__$ArrayPad$ = 232
Path$ = 288
?dtor$8@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `UIActorTool::Save'::`1'::dtor$8
	lea	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$8@?0??Save@UIActorTool@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `UIActorTool::Save'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_tables.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_tables.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_tables.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_tables.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_tables.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
;	COMDAT ?DrawActorToolWindow@UIActorTool@@YAXXZ
_TEXT	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?DrawActorToolWindow@UIActorTool@@YAXXZ PROC		; UIActorTool::DrawActorToolWindow, COMDAT

; 147  : {

$LN2803:
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rsi
	mov	QWORD PTR [rax+24], rdi
	push	rbp
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rax-936]
	sub	rsp, 1152				; 00000480H
	movaps	XMMWORD PTR [rax-56], xmm6
	movaps	XMMWORD PTR [rax-72], xmm8
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	xor	r12d, r12d
	mov	DWORD PTR $T19[rsp], r12d
	mov	r14d, r12d
	mov	DWORD PTR $T20[rsp], r12d

; 148  : 	if (!Open) return;

	cmp	BYTE PTR ?Open@UIActorTool@@3_NA, r12b	; UIActorTool::Open
	je	$LN1@DrawActorT

; 149  : 
; 150  : 	Focused = ImGui::Begin("Actor Tool", &Open);

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:?Open@UIActorTool@@3_NA ; UIActorTool::Open
	lea	rcx, OFFSET FLAT:??_C@_0L@EFKEPFFN@Actor?5Tool@
	call	?Begin@ImGui@@YA_NPEBDPEA_NH@Z		; ImGui::Begin
	mov	BYTE PTR ?Focused@UIActorTool@@3_NA, al	; UIActorTool::Focused
	test	al, al

; 151  : 
; 152  : 	if (Focused)

	je	$LN247@DrawActorT

; 153  : 	{
; 154  : 		Focused = true;

	mov	BYTE PTR ?Focused@UIActorTool@@3_NA, 1	; UIActorTool::Focused
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 7951 :     ImGuiWindow* window = GImGui->CurrentWindow;

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]

; 7952 :     return window->Size.x;

	movss	xmm0, DWORD PTR [rax+88]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 155  : 		ImGui::PushItemWidth((ImGui::GetWindowWidth() - ImGui::GetStyle().ItemSpacing.x) * 0.75f);

	subss	xmm0, DWORD PTR [rcx+14628]
	movss	xmm6, DWORD PTR __real@3f400000
	mulss	xmm0, xmm6
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth

; 156  : 		ImGui::InputTextWithHint("##ActorPackFilter", "Search...", &ActorPackFilter);

	lea	r8, OFFSET FLAT:?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; UIActorTool::ActorPackFilter
	lea	rdx, OFFSET FLAT:??_C@_09GBAPPELN@Search?4?4?4@
	lea	rcx, OFFSET FLAT:??_C@_0BC@NOCHEKDO@?$CD?$CDActorPackFilter@
	call	?InputTextWithHint@ImGui@@YA_NPEBD0PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z ; ImGui::InputTextWithHint

; 157  : 		ImGui::PopItemWidth();

	call	?PopItemWidth@ImGui@@YAXXZ		; ImGui::PopItemWidth

; 158  : 		ImGui::SameLine();

	movss	xmm8, DWORD PTR __real@bf800000
	movaps	xmm1, xmm8
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 3085 :     return GImGui->Style;

	mov	rdx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui

; 7951 :     ImGuiWindow* window = GImGui->CurrentWindow;

	mov	rax, QWORD PTR [rdx+16408]

; 7952 :     return window->Size.x;

	movss	xmm2, DWORD PTR [rax+88]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 159  : 		if (ImGui::Button("Load##ActorPackFile", ImVec2((ImGui::GetWindowWidth() - ImGui::GetStyle().ItemSpacing.x * 2 - ImGui::GetStyle().FramePadding.x * 2) * 0.25f, 0)))

	movss	xmm0, DWORD PTR [rdx+14628]
	movss	xmm1, DWORD PTR [rdx+14612]
	addss	xmm0, xmm0
	subss	xmm2, xmm0
	addss	xmm1, xmm1
	subss	xmm2, xmm1
	mulss	xmm2, DWORD PTR __real@3e800000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR $T5[rsp], xmm2
	mov	DWORD PTR $T5[rsp+4], r12d
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 159  : 		if (ImGui::Button("Load##ActorPackFile", ImVec2((ImGui::GetWindowWidth() - ImGui::GetStyle().ItemSpacing.x * 2 - ImGui::GetStyle().FramePadding.x * 2) * 0.25f, 0)))

	lea	rdx, QWORD PTR $T5[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0BE@JGDLLNNG@Load?$CD?$CDActorPackFile@
	call	?Button@ImGui@@YA_NPEBDAEBUImVec2@@@Z	; ImGui::Button
	lea	r13, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+32
	test	al, al
	je	$LN2530@DrawActorT

; 161  : 			if (Util::FileExists(Editor::GetRomFSFile("Pack/Actor/" + ActorPackFilter + ".pack.zs")))

	lea	r8, OFFSET FLAT:?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; UIActorTool::ActorPackFilter
	lea	rdx, OFFSET FLAT:??_C@_0M@KLNJNMKE@Pack?1Actor?1@
	lea	rcx, QWORD PTR $T27[rsp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	r8, OFFSET FLAT:??_C@_08KPEPEALH@?4pack?4zs@
	mov	rdx, rax
	lea	rcx, QWORD PTR $T70[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	r8b, 1
	mov	rdx, rax
	lea	rcx, QWORD PTR $T52[rbp-256]
	call	?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z ; Editor::GetRomFSFile
	mov	rcx, rax
	call	?FileExists@Util@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Util::FileExists
	movzx	ebx, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T27[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 161  : 			if (Util::FileExists(Editor::GetRomFSFile("Pack/Actor/" + ActorPackFilter + ".pack.zs")))

	test	bl, bl
	je	$LN38@DrawActorT

; 162  : 			{
; 163  : 				ActorPack.DeletedFiles.clear();

	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+112
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear

; 164  : 				ActorPack.Bymls.clear();

	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::clear

; 165  : 				ActorPack.AINBs.clear();

	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+96
	call	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::clear

; 166  : 				ActorPack.Pack = SarcFile(ZStdFile::Decompress(Editor::GetRomFSFile("Pack/Actor/" + ActorPackFilter + ".pack.zs"), ZStdFile::Dictionary::Pack).Data);

	lea	r8, OFFSET FLAT:?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; UIActorTool::ActorPackFilter
	lea	rdx, OFFSET FLAT:??_C@_0M@KLNJNMKE@Pack?1Actor?1@
	lea	rcx, QWORD PTR $T18[rsp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	r8, OFFSET FLAT:??_C@_08KPEPEALH@?4pack?4zs@
	mov	rdx, rax
	lea	rcx, QWORD PTR $T69[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	r8b, 1
	mov	rdx, rax
	lea	rcx, QWORD PTR $T51[rbp-256]
	call	?GetRomFSFile@Editor@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@_N@Z ; Editor::GetRomFSFile
	lea	r8d, QWORD PTR [r12+1]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T76[rbp-256]
	call	?Decompress@ZStdFile@@YA?AUResult@1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4Dictionary@1@@Z ; ZStdFile::Decompress
	npad	1
	mov	rdx, rax
	lea	rcx, QWORD PTR $T62[rbp-256]
	call	??0?$vector@EV?$allocator@E@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
	mov	rdx, rax
	lea	rcx, QWORD PTR $T26[rsp]
	call	??0SarcFile@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z ; SarcFile::SarcFile
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+144
	call	??4SarcFile@@QEAAAEAV0@$$QEAV0@@Z
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, QWORD PTR $T26[rbp-248]
	call	?_Tidy@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@AEAAXXZ ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::_Tidy
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 166  : 				ActorPack.Pack = SarcFile(ZStdFile::Decompress(Editor::GetRomFSFile("Pack/Actor/" + ActorPackFilter + ".pack.zs"), ZStdFile::Dictionary::Pack).Data);

	lea	rcx, QWORD PTR $T76[rbp-256]
	call	??1Result@ZStdFile@@QEAA@XZ
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T18[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 167  : 				ActorPack.Name = ActorPackFilter;

	lea	rdx, OFFSET FLAT:?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; UIActorTool::ActorPackFilter
	mov	rcx, r13
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 168  : 				ActorPack.OriginalName = ActorPackFilter;

	lea	rdx, OFFSET FLAT:?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; UIActorTool::ActorPackFilter
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A ; UIActorTool::ActorPack
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 169  : 				ActorPack.Replace = false; //false is default value, still set it for reading

	mov	BYTE PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+136, r12b

; 170  : 
; 171  : 				std::sort(ActorPack.Pack.GetEntries().begin(), ActorPack.Pack.GetEntries().end(), [](const SarcFile::Entry& a, const SarcFile::Entry& b)

	mov	rdx, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+160
	mov	rcx, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+152
	call	??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >

; 172  : 					{
; 173  : 						return a.Name < b.Name;
; 174  : 					});
; 175  : 
; 176  : 				for (SarcFile::Entry& Entry : ActorPack.Pack.GetEntries())

	mov	rdi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+152
	mov	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+160
	cmp	rdi, rsi
	je	$LN3@DrawActorT

; 162  : 			{
; 163  : 				ActorPack.DeletedFiles.clear();

	lea	rbx, QWORD PTR [rdi+32]
	npad	7
$LL4@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rbx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 178  : 					if ((Entry.Bytes[0] == 'Y' && Entry.Bytes[1] == 'B') || (Entry.Bytes[0] == 'B' && Entry.Bytes[1] == 'Y')) //Is Byml?

	movzx	ecx, BYTE PTR [rax]
	cmp	cl, 89					; 00000059H
	jne	SHORT $LN2775@DrawActorT
	cmp	BYTE PTR [rax+1], 66			; 00000042H
	je	SHORT $LN2774@DrawActorT
	jmp	SHORT $LN40@DrawActorT
$LN2775@DrawActorT:
	cmp	cl, 66					; 00000042H
	jne	SHORT $LN40@DrawActorT
	cmp	BYTE PTR [rax+1], 89			; 00000059H
	jne	SHORT $LN40@DrawActorT
$LN2774@DrawActorT:

; 179  : 					{
; 180  : 						ActorPack.Bymls.insert({ Entry.Name, BymlFile(Entry.Bytes) });

	mov	rdx, rbx
	lea	rcx, QWORD PTR $T17[rsp]
	call	??0?$vector@EV?$allocator@E@std@@@std@@QEAA@AEBV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
	mov	rdx, rax
	lea	rcx, QWORD PTR $T41[rbp-256]
	call	??0BymlFile@@QEAA@V?$vector@EV?$allocator@E@std@@@std@@@Z ; BymlFile::BymlFile
	npad	1
	mov	r8, rax
	mov	rdx, rdi
	lea	rcx, QWORD PTR $T40[rbp-256]
	call	??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,BymlFile,0>
	npad	1
	lea	r8, QWORD PTR $T40[rbp-256]
	lea	rdx, QWORD PTR $T61[rbp-256]
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert<0,0>
	npad	1
	lea	rcx, QWORD PTR $T40[rbp-256]
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR $T41[rbp-256]
	call	??1BymlFile@@QEAA@XZ
$LN40@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	rax, QWORD PTR [rbx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 182  : 					if (Entry.Bytes[0] == 'A' && Entry.Bytes[1] == 'I' && Entry.Bytes[2] == 'B')

	cmp	BYTE PTR [rax], 65			; 00000041H
	jne	SHORT $LN2@DrawActorT
	cmp	BYTE PTR [rax+1], 73			; 00000049H
	jne	SHORT $LN2@DrawActorT
	cmp	BYTE PTR [rax+2], 66			; 00000042H
	jne	SHORT $LN2@DrawActorT

; 183  : 					{
; 184  : 						ActorPack.AINBs.insert({ Entry.Name, Entry.Bytes });

	mov	r8, rbx
	mov	rdx, rdi
	lea	rcx, QWORD PTR $T33[rbp-256]
	call	??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,std::vector<unsigned char,std::allocator<unsigned char> > &,0>
	npad	1
	lea	r8, QWORD PTR $T33[rbp-256]
	lea	rdx, QWORD PTR $T75[rbp-256]
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+96
	call	??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::insert<0,0>
	npad	1
	lea	rcx, QWORD PTR $T33[rbp-256]
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
$LN2@DrawActorT:

; 172  : 					{
; 173  : 						return a.Name < b.Name;
; 174  : 					});
; 175  : 
; 176  : 				for (SarcFile::Entry& Entry : ActorPack.Pack.GetEntries())

	add	rdi, 56					; 00000038H
	add	rbx, 56					; 00000038H
	cmp	rdi, rsi
	jne	$LL4@DrawActorT
$LN3@DrawActorT:

; 185  : 					}
; 186  : 				}
; 187  : 
; 188  : 				ActorPack.OriginalBymls = ActorPack.Bymls;

	lea	rdx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+80
	call	??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator=

; 189  : 
; 190  : 				Logger::Info("ActorTool", "Actor " + ActorPackFilter + " loaded");

	lea	rax, QWORD PTR $T68[rbp-256]
	mov	QWORD PTR $T9[rsp], rax
	lea	r8, OFFSET FLAT:?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; UIActorTool::ActorPackFilter
	lea	rdx, OFFSET FLAT:??_C@_06KDGJBKHO@Actor?5@
	lea	rcx, QWORD PTR $T25[rsp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	r8, OFFSET FLAT:??_C@_07IJIEEABP@?5loaded@
	mov	rdx, rax
	lea	rcx, QWORD PTR $T68[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	rbx, rax
	lea	rdx, OFFSET FLAT:??_C@_09DPPIGPDC@ActorTool@
	lea	rcx, QWORD PTR $T50[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	rdx, rbx
	mov	rcx, rax
	call	?Info@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Info
	npad	1

; 191  : 			}

	jmp	SHORT $LN2799@DrawActorT
$LN38@DrawActorT:

; 192  : 			else
; 193  : 			{
; 194  : 				Logger::Error("ActorTool", "No actor named " + ActorPackFilter + " found");

	lea	rax, QWORD PTR $T67[rbp-256]
	mov	QWORD PTR $T8[rsp], rax
	lea	r8, OFFSET FLAT:?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; UIActorTool::ActorPackFilter
	lea	rdx, OFFSET FLAT:??_C@_0BA@KMNGBICD@No?5actor?5named?5@
	lea	rcx, QWORD PTR $T24[rsp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	r8, OFFSET FLAT:??_C@_06HHNIANOB@?5found@
	mov	rdx, rax
	lea	rcx, QWORD PTR $T67[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	rbx, rax
	lea	rdx, OFFSET FLAT:??_C@_09DPPIGPDC@ActorTool@
	lea	rcx, QWORD PTR $T49[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	rdx, rbx
	mov	rcx, rax
	call	?Error@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Error
	npad	1
$LN2799@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 7951 :     ImGuiWindow* window = GImGui->CurrentWindow;

	lea	rcx, QWORD PTR $T24[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN2530@DrawActorT:
	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]

; 7952 :     return window->Size.x;

	movss	xmm0, DWORD PTR [rax+88]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 198  : 		ImGui::PushItemWidth(ImGui::GetWindowWidth() - ImGui::GetStyle().FramePadding.x);

	subss	xmm0, DWORD PTR [rcx+14612]
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	QWORD PTR $T4[rsp], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 199  : 		if (ImGui::BeginListBox("##ActorPackFiles"))

	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0BB@CDKDJHGN@?$CD?$CDActorPackFiles@
	call	?BeginListBox@ImGui@@YA_NPEBDAEBUImVec2@@@Z ; ImGui::BeginListBox
	test	al, al
	je	SHORT $LN44@DrawActorT

; 215  : 			for (std::string ActorName : ActorList)

	mov	rbx, QWORD PTR ?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A
	mov	rdi, QWORD PTR ?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A+8
	cmp	rbx, rdi
	je	SHORT $LN6@DrawActorT
	npad	5
$LL7@DrawActorT:
	mov	rdx, rbx
	lea	rcx, QWORD PTR ActorName$66[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 216  : 			{
; 217  : 				DisplayActorFile(ActorName);

	lea	rdx, QWORD PTR ActorName$66[rbp-256]
	lea	rcx, QWORD PTR $T48[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rdx, rax
	call	??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; `UIActorTool::DrawActorToolWindow'::`28'::<lambda_2>::operator()
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR ActorName$66[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 215  : 			for (std::string ActorName : ActorList)

	add	rbx, 32					; 00000020H
	cmp	rbx, rdi
	jne	SHORT $LL7@DrawActorT
$LN6@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 5786 :     EndChild();

	call	?EndChild@ImGui@@YAXXZ			; ImGui::EndChild
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 6690 :     EndGroup(); // This is only required to be able to do IsItemXXX query on the whole ListBox including label

	call	?EndGroup@ImGui@@YAXXZ			; ImGui::EndGroup
$LN44@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 222  : 		ImGui::PopItemWidth();

	call	?PopItemWidth@ImGui@@YAXXZ		; ImGui::PopItemWidth

; 223  : 
; 224  : 		if (ActorPack.Pack.Loaded)

	cmp	BYTE PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+144, 0
	je	$LN247@DrawActorT

; 225  : 		{
; 226  : 			ImGui::Separator();

	call	?Separator@ImGui@@YAXXZ			; ImGui::Separator

; 227  : 
; 228  : 			ImGui::Columns(2, "NameColumn");

	lea	rdx, OFFSET FLAT:??_C@_0L@CMFHNNEL@NameColumn@
	mov	ecx, 2
	call	?Columns@ImGui@@YAXHPEBD_N@Z		; ImGui::Columns

; 229  : 			ImGui::Text("Name");

	lea	rcx, OFFSET FLAT:??_C@_04FABLJDN@Name@
	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text

; 230  : 			ImGui::NextColumn();

	call	?NextColumn@ImGui@@YAXXZ		; ImGui::NextColumn

; 231  : 			ImGui::PushItemWidth((ImGui::GetColumnWidth() - ImGui::GetStyle().ItemSpacing.x * 2) * 0.75f);

	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	movss	xmm2, DWORD PTR [rax+14628]
	mov	rbx, -1
	mov	ecx, ebx
	call	?GetColumnWidth@ImGui@@YAMH@Z		; ImGui::GetColumnWidth
	addss	xmm2, xmm2
	subss	xmm0, xmm2
	mulss	xmm0, xmm6
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth

; 232  : 			ImGui::InputText("##ActorNameInput", &ActorPack.Name);

	mov	rdx, r13
	lea	rcx, OFFSET FLAT:??_C@_0BB@FFKPPMAM@?$CD?$CDActorNameInput@
	call	?InputText@ImGui@@YA_NPEBDPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z ; ImGui::InputText

; 233  : 			ImGui::PopItemWidth();

	call	?PopItemWidth@ImGui@@YAXXZ		; ImGui::PopItemWidth

; 234  : 			ImGui::SameLine();

	movaps	xmm1, xmm8
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 3085 :     return GImGui->Style;

	mov	rdx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 235  : 			if (ImGui::Button("Rename##ActorNameRename", ImVec2((ImGui::GetColumnWidth() - ImGui::GetStyle().ItemSpacing.x * 2 - ImGui::GetStyle().FramePadding.x * 2) * 0.25f, 0)))

	movss	xmm2, DWORD PTR [rdx+14628]
	movss	xmm3, DWORD PTR [rdx+14612]
	mov	ecx, ebx
	call	?GetColumnWidth@ImGui@@YAMH@Z		; ImGui::GetColumnWidth
	addss	xmm2, xmm2
	subss	xmm0, xmm2
	addss	xmm3, xmm3
	subss	xmm0, xmm3
	mulss	xmm0, DWORD PTR __real@3e800000
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	movss	DWORD PTR $T3[rsp], xmm0
	mov	DWORD PTR $T3[rsp+4], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 235  : 			if (ImGui::Button("Rename##ActorNameRename", ImVec2((ImGui::GetColumnWidth() - ImGui::GetStyle().ItemSpacing.x * 2 - ImGui::GetStyle().FramePadding.x * 2) * 0.25f, 0)))

	lea	rdx, QWORD PTR $T3[rsp]
	lea	rcx, OFFSET FLAT:??_C@_0BI@GMLOOABG@Rename?$CD?$CDActorNameRename@
	call	?Button@ImGui@@YA_NPEBDAEBUImVec2@@@Z	; ImGui::Button
	test	al, al
	je	$LN2063@DrawActorT

; 236  : 			{
; 237  : 				if (ActorPack.Name.length() > 1)

	mov	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+48
	cmp	rsi, 1
	jbe	$LN2063@DrawActorT

; 238  : 				{
; 239  : 					//Rename native files
; 240  : 					for (SarcFile::Entry& Entry : ActorPack.Pack.GetEntries())

	mov	r15, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+152
	mov	QWORD PTR <begin>$L4$1$[rbp-256], r15
	mov	rdi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+160
	mov	QWORD PTR <end>$L4$1$[rsp], rdi
	cmp	r15, rdi
	je	$LN2788@DrawActorT
$LL10@DrawActorT:

; 241  : 					{
; 242  : 						if (ActorPack.Bymls.count(Entry.Name))

	mov	rdx, r15
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::count
	test	rax, rax
	je	$LN48@DrawActorT

; 243  : 						{
; 244  : 							auto NodeHandler = ActorPack.Bymls.extract(Entry.Name);

	lea	rcx, QWORD PTR NodeHandler$60[rbp-256]
	call	?__autoclassinit2@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAX_K@Z
	mov	r8, r15
	lea	rdx, QWORD PTR NodeHandler$60[rbp-256]
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::extract
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 48   :         auto& _Data       = _Self._Getptr()->_Myval;

	mov	rbx, QWORD PTR NodeHandler$60[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 245  : 							Util::ReplaceString(NodeHandler.key(), ActorPack.OriginalName, ActorPack.Name);

	mov	r8, r13
	lea	rdx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A ; UIActorTool::ActorPack
	lea	rcx, QWORD PTR [rbx+32]
	call	?ReplaceString@Util@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@1@Z ; Util::ReplaceString

; 246  : 
; 247  : 							for (BymlFile::Node& Node : NodeHandler.mapped().GetNodes())

	mov	r14, QWORD PTR [rbx+64]
	mov	r12, QWORD PTR [rbx+72]
	cmp	r14, r12
	je	$LN12@DrawActorT
	npad	10
$LL13@DrawActorT:

; 249  : 								ReplaceStringInBymlNodes(&Node, ActorPack.OriginalName, ActorPack.Name);

	lea	rax, QWORD PTR $T74[rbp-256]
	mov	QWORD PTR $T7[rsp], rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T74[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	ecx, ecx
	mov	QWORD PTR $T74[rbp-240], rcx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T74[rbp-232], rcx

; 2492 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rdi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+48

; 2236 :         if (_Large_string_engaged()) {

	mov	rsi, r13
	cmp	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+56, 16
	cmovae	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+32

; 2620 :         if (_Count > max_size()) {

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	rdi, rax
	ja	$LN2581@DrawActorT

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T74[rbp-232], 15
	cmp	rdi, 16
	jae	SHORT $LN2257@DrawActorT

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T74[rbp-240], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [rsi]
	movups	XMMWORD PTR $T74[rbp-256], xmm0

; 2647 :             return;

	jmp	SHORT $LN2265@DrawActorT
$LN2257@DrawActorT:

; 2651 :         const size_type _New_capacity = _Calculate_growth(_Count);

	mov	rdx, rdi
	lea	rcx, QWORD PTR $T74[rbp-256]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	rbx, rax

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rax
	add	rdx, 1
	mov	rax, -1
	cmovb	rdx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T74[rbp-256], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T74[rbp-240], rdi

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T74[rbp-232], rbx

; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	lea	r8, QWORD PTR [rdi+1]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy
	xor	ecx, ecx
$LN2265@DrawActorT:
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T16[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T16[rsp+16], rcx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T16[rsp+24], rcx

; 2492 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rdi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+16

; 2236 :         if (_Large_string_engaged()) {

	lea	rsi, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A ; UIActorTool::ActorPack
	cmp	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+24, 16
	cmovae	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A

; 2620 :         if (_Count > max_size()) {

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	rdi, rax
	ja	$LN2582@DrawActorT

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T16[rsp+24], 15
	cmp	rdi, 16
	jae	SHORT $LN2289@DrawActorT

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T16[rsp+16], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [rsi]
	movups	XMMWORD PTR $T16[rsp], xmm0

; 2647 :             return;

	jmp	SHORT $LN2297@DrawActorT
$LN2289@DrawActorT:

; 2651 :         const size_type _New_capacity = _Calculate_growth(_Count);

	mov	rdx, rdi
	lea	rcx, QWORD PTR $T16[rsp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	rbx, rax

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rax
	add	rdx, 1
	mov	rax, -1
	cmovb	rdx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T16[rsp], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T16[rsp+16], rdi

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T16[rsp+24], rbx

; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	lea	r8, QWORD PTR [rdi+1]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy
	npad	1
$LN2297@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 249  : 								ReplaceStringInBymlNodes(&Node, ActorPack.OriginalName, ActorPack.Name);

	lea	r8, QWORD PTR $T74[rbp-256]
	lea	rdx, QWORD PTR $T16[rsp]
	mov	rcx, r14
	call	?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z ; ReplaceStringInBymlNodes

; 246  : 
; 247  : 							for (BymlFile::Node& Node : NodeHandler.mapped().GetNodes())

	add	r14, 88					; 00000058H
	cmp	r14, r12
	jne	$LL13@DrawActorT
	mov	rdi, QWORD PTR <end>$L4$1$[rsp]
$LN12@DrawActorT:

; 250  : 							}
; 251  : 
; 252  : 							ActorPack.Bymls.insert(std::move(NodeHandler));

	lea	r8, QWORD PTR NodeHandler$60[rbp-256]
	lea	rdx, QWORD PTR $T65[rbp-256]
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert
	lea	rcx, QWORD PTR $T65[rbp-240]
	call	??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::~_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
	npad	1

; 253  : 						}

	lea	rcx, QWORD PTR NodeHandler$60[rbp-256]
	call	??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::~_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
$LN48@DrawActorT:

; 254  : 
; 255  : 						Util::ReplaceString(Entry.Name, ActorPack.OriginalName, ActorPack.Name);

	mov	r8, r13
	lea	rdx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A ; UIActorTool::ActorPack
	mov	rcx, r15
	call	?ReplaceString@Util@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@1@Z ; Util::ReplaceString

; 238  : 				{
; 239  : 					//Rename native files
; 240  : 					for (SarcFile::Entry& Entry : ActorPack.Pack.GetEntries())

	add	r15, 56					; 00000038H
	cmp	r15, rdi
	jne	$LL10@DrawActorT
	mov	rdi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+160
	mov	QWORD PTR <end>$L4$1$[rsp], rdi
	mov	r15, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+152
	mov	QWORD PTR <begin>$L4$1$[rbp-256], r15
	mov	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+48
	mov	r14d, DWORD PTR $T20[rsp]
	xor	r12d, r12d
$LN2788@DrawActorT:

; 256  : 					}
; 257  : 					uint32_t Count = 0;

	mov	DWORD PTR Count$1$[rbp-256], r12d

; 259  : 					for (SarcFile::Entry& Entry : ActorPack.Pack.GetEntries())

	cmp	r15, rdi
	je	$LN2792@DrawActorT
	npad	5
$LL16@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	mov	r9, r13
	cmp	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+56, 16
	cmovae	r9, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+32

; 4343 :         return static_cast<size_type>(_Traits_find<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off,

	mov	rbx, QWORD PTR [r15+16]

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, r15

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdi, QWORD PTR [r15+24]

; 2236 :         if (_Large_string_engaged()) {

	cmp	rdi, 16
	jb	SHORT $LN2776@DrawActorT

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r15]
$LN2776@DrawActorT:

; 4343 :         return static_cast<size_type>(_Traits_find<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off,

	mov	QWORD PTR [rsp+32], rsi
	xor	r8d, r8d
	mov	rdx, rbx
	call	??$_Traits_find@U?$char_traits@D@std@@@std@@YA_KQEBD_K101@Z ; std::_Traits_find<std::char_traits<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 261  : 						if (Entry.Name.find(ActorPack.Name) == std::string::npos)

	cmp	rax, -1
	jne	$LN14@DrawActorT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, r15

; 2236 :         if (_Large_string_engaged()) {

	cmp	rdi, 16
	jb	SHORT $LN2777@DrawActorT

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r15]
$LN2777@DrawActorT:

; 4400 :         return static_cast<size_type>(

	mov	r9b, 46					; 0000002eH
	mov	rdx, rbx
	call	??$_Traits_rfind_ch@U?$char_traits@D@std@@@std@@YA_KQEBD_K1D@Z ; std::_Traits_rfind_ch<std::char_traits<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 263  : 							std::string Extension = Entry.Name.substr(Entry.Name.rfind('.') + 1);

	inc	rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR Extension$64[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	esi, esi
	mov	QWORD PTR Extension$64[rbp-240], rsi

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR Extension$64[rbp-232], rsi

; 2260 :         if (_Mysize < _Off) {

	cmp	rbx, rax
	jb	$LN2592@DrawActorT

; 2278 :         return (_STD min)(_Size, _Mysize - _Off);

	sub	rbx, rax
	mov	r8, -1
	cmp	rbx, r8
	cmovb	r8, rbx

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, r15

; 2236 :         if (_Large_string_engaged()) {

	cmp	rdi, 16
	jb	SHORT $LN2778@DrawActorT

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r15]
$LN2778@DrawActorT:

; 2511 :         _Construct<_Construct_strategy::_From_ptr>(

	lea	rdx, QWORD PTR [rax+rcx]
	lea	rcx, QWORD PTR Extension$64[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>

; 4572 :         return basic_string{*this, _Off, _Count};

	or	r14d, 16

; 4363 :         return static_cast<size_type>(

	mov	rbx, QWORD PTR [r15+16]

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, r15

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdi, QWORD PTR [r15+24]

; 2236 :         if (_Large_string_engaged()) {

	cmp	rdi, 16
	jb	SHORT $LN2779@DrawActorT

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r15]
$LN2779@DrawActorT:

; 4363 :         return static_cast<size_type>(

	mov	r9b, 46					; 0000002eH
	xor	r8d, r8d
	mov	rdx, rbx
	call	??$_Traits_find_ch@U?$char_traits@D@std@@@std@@YA_KQEBD_K1D@Z ; std::_Traits_find_ch<std::char_traits<char> >
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T23[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T23[rbp-240], rsi

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T23[rbp-232], rsi

; 2260 :         if (_Mysize < _Off) {

	cmp	rbx, rax
	jb	$LN2593@DrawActorT

; 2278 :         return (_STD min)(_Size, _Mysize - _Off);

	sub	rbx, rax
	mov	r8, -1
	cmp	rbx, r8
	cmovb	r8, rbx

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, r15

; 2236 :         if (_Large_string_engaged()) {

	cmp	rdi, 16
	jb	SHORT $LN2780@DrawActorT

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r15]
$LN2780@DrawActorT:

; 2511 :         _Construct<_Construct_strategy::_From_ptr>(

	lea	rdx, QWORD PTR [rax+rcx]
	lea	rcx, QWORD PTR $T23[rsp]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\string

; 500  :     _Elem* const _RNext    = _UIntegral_to_buff(_Buff_end, _Val);

	mov	edx, r12d
	lea	rcx, QWORD PTR _Buff$79[rbp-235]
	call	??$_UIntegral_to_buff@DI@std@@YAPEADPEADI@Z ; std::_UIntegral_to_buff<char,unsigned int>
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T47[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T47[rbp-240], rsi

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T47[rbp-232], rsi

; 2574 :         if (_UFirst == _ULast) {

	lea	rcx, QWORD PTR _Buff$79[rbp-235]
	cmp	rax, rcx
	jne	SHORT $LN2386@DrawActorT

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T47[rbp-240], rsi

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T47[rbp-232], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T47[rbp-256], 0

; 2577 :         } else {

	jmp	SHORT $LN2387@DrawActorT
$LN2386@DrawActorT:

; 2578 :             if constexpr (_Is_elem_cptr<decltype(_UFirst)>::value) {
; 2579 :                 _Construct<_Construct_strategy::_From_ptr>(

	lea	r8, QWORD PTR _Buff$79[rbp-235]
	sub	r8, rax
	mov	rdx, rax
	lea	rcx, QWORD PTR $T47[rbp-256]
	call	??$_Construct@$00PEAD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char *>
	npad	1
$LN2387@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 264  : 							std::string UnprefixedName = ActorPack.Name + "_" + std::to_string(Count) + Entry.Name.substr(Entry.Name.find('.'));

	lea	r8, OFFSET FLAT:??_C@_01IDAFKMJL@_@
	mov	rdx, r13
	lea	rcx, QWORD PTR $T15[rsp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	r8, QWORD PTR $T47[rbp-256]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T59[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	r8, QWORD PTR $T23[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR UnprefixedName$72[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T59[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T15[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T47[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T23[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 265  : 							std::string UnprefixedOldName = Entry.Name.substr(Entry.Name.find_last_of("/") + 1);

	lea	rdx, OFFSET FLAT:??_C@_01KMDKNFGN@?1@
	mov	rcx, r15
	call	?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_of
	inc	rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR UnprefixedOldName$71[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR UnprefixedOldName$71[rbp-240], rsi

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR UnprefixedOldName$71[rbp-232], rsi

; 2260 :         if (_Mysize < _Off) {

	mov	rcx, QWORD PTR [r15+16]
	cmp	rcx, rax
	jb	$LN2594@DrawActorT

; 2278 :         return (_STD min)(_Size, _Mysize - _Off);

	sub	rcx, rax
	mov	rdi, -1
	mov	r8, rdi
	cmp	rcx, rdi
	cmovb	r8, rcx

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, r15

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r15+24], 16
	jb	SHORT $LN2094@DrawActorT

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r15]
$LN2094@DrawActorT:

; 2511 :         _Construct<_Construct_strategy::_From_ptr>(

	lea	rdx, QWORD PTR [rax+rcx]
	lea	rcx, QWORD PTR UnprefixedOldName$71[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR UnprefixedName$72[rbp-256]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR UnprefixedName$72[rbp-232], 16
	setae	r10b

; 2236 :         if (_Large_string_engaged()) {

	mov	r9, QWORD PTR UnprefixedName$72[rbp-256]
	cmovae	rcx, r9

; 648  :     if (_Hay_size != 0) { // room for match, look for it

	mov	rdx, QWORD PTR UnprefixedName$72[rbp-240]
	test	rdx, rdx
	je	SHORT $LN2584@DrawActorT

; 649  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	lea	rax, QWORD PTR [rdx-1]
	mov	r8, rdi
	cmp	rax, rdi
	cmovb	r8, rax
	add	r8, rcx

; 650  :             if (_Traits::eq(*_Match_try, _Ch)) {

	cmp	BYTE PTR [r8], 46			; 0000002eH
	je	SHORT $LN2583@DrawActorT
$LL2231@DrawActorT:

; 652  :             }
; 653  : 
; 654  :             if (_Match_try == _Haystack) {

	cmp	r8, rcx
	je	SHORT $LN2584@DrawActorT

; 649  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	dec	r8

; 650  :             if (_Traits::eq(*_Match_try, _Ch)) {

	cmp	BYTE PTR [r8], 46			; 0000002eH
	jne	SHORT $LL2231@DrawActorT
$LN2583@DrawActorT:

; 651  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

	sub	r8, rcx
	jmp	SHORT $LN2228@DrawActorT
$LN2584@DrawActorT:

; 655  :                 break; // at beginning, no more chance for match
; 656  :             }
; 657  :         }
; 658  :     }
; 659  : 
; 660  :     return static_cast<size_t>(-1); // no match

	mov	r8, rdi
$LN2228@DrawActorT:
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T46[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T46[rbp-240], rsi

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T46[rbp-232], rsi

; 2278 :         return (_STD min)(_Size, _Mysize - _Off);

	cmp	rdx, r8
	cmovb	r8, rdx

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR UnprefixedName$72[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	test	r10b, r10b
	cmovne	rdx, r9

; 2511 :         _Construct<_Construct_strategy::_From_ptr>(

	lea	rcx, QWORD PTR $T46[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>

; 2981 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR UnprefixedName$72[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR $T46[rbp-256]
	movups	XMMWORD PTR UnprefixedName$72[rbp-256], xmm0
	movups	xmm1, XMMWORD PTR $T46[rbp-240]
	movups	XMMWORD PTR UnprefixedName$72[rbp-240], xmm1

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T46[rbp-240], rsi

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T46[rbp-232], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T46[rbp-256], 0

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T46[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR UnprefixedOldName$71[rbp-256]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR UnprefixedOldName$71[rbp-232], 16
	setae	r10b

; 2236 :         if (_Large_string_engaged()) {

	mov	r9, QWORD PTR UnprefixedOldName$71[rbp-256]
	cmovae	rcx, r9

; 648  :     if (_Hay_size != 0) { // room for match, look for it

	mov	rdx, QWORD PTR UnprefixedOldName$71[rbp-240]
	test	rdx, rdx
	je	SHORT $LN2586@DrawActorT

; 649  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	lea	rax, QWORD PTR [rdx-1]
	mov	r8, rdi
	cmp	rax, rdi
	cmovb	r8, rax
	add	r8, rcx

; 650  :             if (_Traits::eq(*_Match_try, _Ch)) {

	cmp	BYTE PTR [r8], 46			; 0000002eH
	je	SHORT $LN2585@DrawActorT
$LL2159@DrawActorT:

; 652  :             }
; 653  : 
; 654  :             if (_Match_try == _Haystack) {

	cmp	r8, rcx
	je	SHORT $LN2586@DrawActorT

; 649  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	dec	r8

; 650  :             if (_Traits::eq(*_Match_try, _Ch)) {

	cmp	BYTE PTR [r8], 46			; 0000002eH
	jne	SHORT $LL2159@DrawActorT
$LN2585@DrawActorT:

; 651  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

	sub	r8, rcx
	jmp	SHORT $LN2156@DrawActorT
$LN2586@DrawActorT:

; 655  :                 break; // at beginning, no more chance for match
; 656  :             }
; 657  :         }
; 658  :     }
; 659  : 
; 660  :     return static_cast<size_t>(-1); // no match

	mov	r8, rdi
$LN2156@DrawActorT:
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T45[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T45[rbp-240], rsi

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T45[rbp-232], rsi

; 2278 :         return (_STD min)(_Size, _Mysize - _Off);

	cmp	rdx, r8
	cmovb	r8, rdx

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR UnprefixedOldName$71[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	test	r10b, r10b
	cmovne	rdx, r9

; 2511 :         _Construct<_Construct_strategy::_From_ptr>(

	lea	rcx, QWORD PTR $T45[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>

; 4572 :         return basic_string{*this, _Off, _Count};

	or	r14d, 238				; 000000eeH
	mov	DWORD PTR $T20[rsp], r14d

; 2981 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR UnprefixedOldName$71[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR $T45[rbp-256]
	movups	XMMWORD PTR UnprefixedOldName$71[rbp-256], xmm0
	movups	xmm1, XMMWORD PTR $T45[rbp-240]
	movups	XMMWORD PTR UnprefixedOldName$71[rbp-240], xmm1

; 4821 :         _My_data._Mysize = 0;

	mov	QWORD PTR $T45[rbp-240], rsi

; 4822 :         _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T45[rbp-232], 15

; 4823 :         _My_data._Activate_SSO_buffer();
; 4824 : 
; 4825 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4826 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T45[rbp-256], 0

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T45[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 268  : 							std::string NewName = Entry.Name.substr(0, Entry.Name.find_last_of('/') + 1) + UnprefixedName;

	mov	dl, 47					; 0000002fH
	mov	rcx, r15
	call	?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_of
	lea	r9, QWORD PTR [rax+1]
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T37[rbp-256]
	mov	rcx, r15
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	npad	1
	lea	r8, QWORD PTR UnprefixedName$72[rbp-256]
	mov	rdx, rax
	lea	rcx, QWORD PTR NewName$78[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T37[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 270  : 							std::size_t CategoryStart = UnprefixedOldName.find("__");

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_02FKHNAOPL@__@
	lea	rcx, QWORD PTR UnprefixedOldName$71[rbp-256]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	rbx, rax

; 271  : 
; 272  : 							if (CategoryStart != std::string::npos)

	cmp	rax, -1
	je	$LN2453@DrawActorT

; 273  : 							{
; 274  : 								CategoryStart += 2;

	add	rbx, 2

; 275  : 								std::size_t DotStart = UnprefixedOldName.find('.', CategoryStart);

	mov	r8, rbx
	mov	dl, 46					; 0000002eH
	lea	rcx, QWORD PTR UnprefixedOldName$71[rbp-256]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find

; 276  : 								if (DotStart != std::string::npos)

	cmp	rax, -1
	je	$LN2453@DrawActorT

; 277  : 								{
; 278  : 									std::string Category = UnprefixedOldName.substr(CategoryStart, DotStart - CategoryStart);

	sub	rax, rbx
	mov	r9, rax
	mov	r8, rbx
	lea	rdx, QWORD PTR Category$44[rbp-256]
	lea	rcx, QWORD PTR UnprefixedOldName$71[rbp-256]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	npad	1

; 279  : 									UnprefixedName = ActorPack.Name + "_" + std::to_string(Count) + "__" + Category + Entry.Name.substr(Entry.Name.find('.'));

	xor	r8d, r8d
	mov	dl, 46					; 0000002eH
	mov	rcx, r15
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	r8, rax
	mov	r9, rdi
	lea	rdx, QWORD PTR $T32[rbp-256]
	mov	rcx, r15
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	rdi, rax
	mov	edx, r12d
	lea	rcx, QWORD PTR $T36[rbp-256]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::to_string
	mov	rbx, rax
	lea	r8, OFFSET FLAT:??_C@_01IDAFKMJL@_@
	mov	rdx, r13
	lea	rcx, QWORD PTR $T39[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r8, rbx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T38[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	r8, OFFSET FLAT:??_C@_02FKHNAOPL@__@
	mov	rdx, rax
	lea	rcx, QWORD PTR $T14[rsp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	r8, QWORD PTR Category$44[rbp-256]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T58[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r8, rdi
	mov	rdx, rax
	lea	rcx, QWORD PTR $T22[rsp]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	rdx, rax
	lea	rcx, QWORD PTR UnprefixedName$72[rbp-256]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T22[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T58[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T14[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T38[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T39[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T36[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T32[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 280  : 									UnprefixedName = UnprefixedName.substr(0, UnprefixedName.find_last_of('.'));

	mov	dl, 46					; 0000002eH
	lea	rcx, QWORD PTR UnprefixedName$72[rbp-256]
	call	?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_of
	mov	r9, rax
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T31[rbp-256]
	lea	rcx, QWORD PTR UnprefixedName$72[rbp-256]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	rdx, rax
	lea	rcx, QWORD PTR UnprefixedName$72[rbp-256]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T31[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 281  : 									NewName = Entry.Name.substr(0, Entry.Name.find_last_of('/') + 1) + UnprefixedName;

	mov	dl, 47					; 0000002fH
	mov	rcx, r15
	call	?find_last_of@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find_last_of
	lea	r9, QWORD PTR [rax+1]
	xor	r8d, r8d
	lea	rdx, QWORD PTR $T35[rbp-256]
	mov	rcx, r15
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	npad	1
	lea	r8, QWORD PTR UnprefixedName$72[rbp-256]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T30[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	mov	rdx, rax
	lea	rcx, QWORD PTR NewName$78[rbp-256]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T30[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T35[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR Category$44[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN2453@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 284  : 							NewName += "." + Extension;

	lea	r8, QWORD PTR Extension$64[rbp-256]
	lea	rdx, OFFSET FLAT:??_C@_01LFCBOECM@?4@
	lea	rcx, QWORD PTR $T29[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	rdx, rax
	lea	rcx, QWORD PTR NewName$78[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T29[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 286  : 							if (ActorPack.Bymls.count(Entry.Name))

	mov	rdx, r15
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::count
	test	rax, rax
	je	$LN2011@DrawActorT

; 287  : 							{
; 288  : 								auto NodeHandler = ActorPack.Bymls.extract(Entry.Name);

	lea	rcx, QWORD PTR NodeHandler$73[rbp-256]
	call	?__autoclassinit2@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAX_K@Z
	mov	r8, r15
	lea	rdx, QWORD PTR NodeHandler$73[rbp-256]
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::extract
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 48   :         auto& _Data       = _Self._Getptr()->_Myval;

	mov	rbx, QWORD PTR NodeHandler$73[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 289  : 								NodeHandler.key() = NewName;

	lea	rdx, QWORD PTR NewName$78[rbp-256]
	lea	rcx, QWORD PTR [rbx+32]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 290  : 
; 291  : 								for (BymlFile::Node& Node : NodeHandler.mapped().GetNodes())

	mov	r14, QWORD PTR [rbx+64]
	mov	r12, QWORD PTR [rbx+72]
	cmp	r14, r12
	je	$LN18@DrawActorT
	npad	12
$LL19@DrawActorT:

; 293  : 									ReplaceStringInBymlNodes(&Node, UnprefixedOldName, UnprefixedName);

	lea	rax, QWORD PTR $T57[rbp-256]
	mov	QWORD PTR $T6[rsp], rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T57[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T57[rbp-240], rsi

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T57[rbp-232], rsi

; 2492 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rdi, QWORD PTR UnprefixedName$72[rbp-240]

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rsi, QWORD PTR UnprefixedName$72[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR UnprefixedName$72[rbp-232], 16
	cmovae	rsi, QWORD PTR UnprefixedName$72[rbp-256]

; 2620 :         if (_Count > max_size()) {

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	rdi, rax
	ja	$LN2587@DrawActorT

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T57[rbp-232], 15
	cmp	rdi, 16
	jae	SHORT $LN1958@DrawActorT

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T57[rbp-240], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [rsi]
	movups	XMMWORD PTR $T57[rbp-256], xmm0

; 2647 :             return;

	jmp	SHORT $LN1966@DrawActorT
$LN1958@DrawActorT:

; 2651 :         const size_type _New_capacity = _Calculate_growth(_Count);

	mov	rdx, rdi
	lea	rcx, QWORD PTR $T57[rbp-256]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	rbx, rax

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rax
	add	rdx, 1
	mov	rax, -1
	cmovb	rdx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T57[rbp-256], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T57[rbp-240], rdi

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T57[rbp-232], rbx

; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	lea	r8, QWORD PTR [rdi+1]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy
	npad	1
$LN1966@DrawActorT:
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T13[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	eax, eax
	mov	QWORD PTR $T13[rsp+16], rax

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T13[rsp+24], rax

; 2492 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rdi, QWORD PTR UnprefixedOldName$71[rbp-240]

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rsi, QWORD PTR UnprefixedOldName$71[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR UnprefixedOldName$71[rbp-232], 16
	cmovae	rsi, QWORD PTR UnprefixedOldName$71[rbp-256]

; 2620 :         if (_Count > max_size()) {

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	rdi, rax
	ja	$LN2588@DrawActorT

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T13[rsp+24], 15
	cmp	rdi, 16
	jae	SHORT $LN1990@DrawActorT

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T13[rsp+16], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [rsi]
	movups	XMMWORD PTR $T13[rsp], xmm0

; 2647 :             return;

	jmp	SHORT $LN1998@DrawActorT
$LN1990@DrawActorT:

; 2651 :         const size_type _New_capacity = _Calculate_growth(_Count);

	mov	rdx, rdi
	lea	rcx, QWORD PTR $T13[rsp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	rbx, rax

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rax
	add	rdx, 1
	mov	rax, -1
	cmovb	rdx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T13[rsp], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T13[rsp+16], rdi

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T13[rsp+24], rbx

; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	lea	r8, QWORD PTR [rdi+1]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy
	npad	1
$LN1998@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 293  : 									ReplaceStringInBymlNodes(&Node, UnprefixedOldName, UnprefixedName);

	lea	r8, QWORD PTR $T57[rbp-256]
	lea	rdx, QWORD PTR $T13[rsp]
	mov	rcx, r14
	call	?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z ; ReplaceStringInBymlNodes

; 290  : 
; 291  : 								for (BymlFile::Node& Node : NodeHandler.mapped().GetNodes())

	add	r14, 88					; 00000058H
	cmp	r14, r12
	mov	esi, 0
	jne	$LL19@DrawActorT
$LN18@DrawActorT:

; 294  : 								}
; 295  : 
; 296  : 								ActorPack.Bymls.insert(std::move(NodeHandler));

	lea	r8, QWORD PTR NodeHandler$73[rbp-256]
	lea	rdx, QWORD PTR $T28[rbp-256]
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert
	lea	rcx, QWORD PTR $T28[rbp-240]
	call	??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::~_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 82   :         if (_Ptr != nullptr) {

	mov	rbx, QWORD PTR NodeHandler$73[rbp-256]
	test	rbx, rbx
	je	SHORT $LN2011@DrawActorT

; 83   :             _Alloc& _Al = _Getal();
; 84   :             _Alty_traits::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 726  :         _STD destroy_at(_Ptr);

	call	??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@@Z ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >

; 710  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	edx, 288				; 00000120H
	mov	rcx, rbx
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 88   :             _Ptr = nullptr;

	mov	QWORD PTR NodeHandler$73[rbp-256], rsi
$LN2011@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 299  : 							for (SarcFile::Entry& RefEntry : ActorPack.Pack.GetEntries())

	mov	r12, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+152
	mov	rax, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+160
	mov	QWORD PTR <end>$L6$1$[rsp], rax
	cmp	r12, rax
	je	$LN21@DrawActorT
	npad	4
$LL22@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1412 :             return _Lower_bound_duplicate(_Find_lower_bound(_Keyval)._Bound, _Keyval);

	mov	r8, r12
	lea	rdx, QWORD PTR $T54[rbp-256]
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	rdx, QWORD PTR [rax+16]

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdx+25], 0
	jne	$LN20@DrawActorT
	add	rdx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, r12
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	$LN20@DrawActorT
	xorps	xmm0, xmm0
	movups	XMMWORD PTR NodeHandler$56[rbp-256], xmm0

; 1368 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

	mov	r8, r12
	lea	rdx, QWORD PTR _Loc$10[rsp]
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	mov	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	mov	rbx, QWORD PTR _Loc$10[rsp+16]
	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN2773@DrawActorT
	lea	rdx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, r12
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN2773@DrawActorT

; 1745 :         if (_Where == end()) {

	cmp	rbx, rsi
	je	SHORT $LN2773@DrawActorT

; 1738 :         const auto _Ptr = _Scary->_Extract(_Where._Unwrapped());

	mov	rdx, rbx
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Extract
	mov	r15, rax
	mov	QWORD PTR NodeHandler$56[rbp-256], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 93   :         : _Ptr{_Ptr_} { // Initialize a _Node_handle that holds the specified node

	mov	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	xor	ebx, ebx
	jmp	SHORT $LN1869@DrawActorT
$LN2773@DrawActorT:

; 77   :     _Nodeptr _Ptr{};

	xor	ebx, ebx
	mov	r15d, ebx
	mov	QWORD PTR NodeHandler$56[rbp-256], rbx
	xor	eax, eax
	mov	BYTE PTR NodeHandler$56[rbp-248], al
$LN1869@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 304  : 									for (BymlFile::Node& Node : NodeHandler.mapped().GetNodes())

	mov	r14, QWORD PTR [r15+64]
	mov	rax, QWORD PTR [r15+72]
	mov	QWORD PTR <end>$L7$1$[rbp-256], rax
	cmp	r14, rax
	je	$LN24@DrawActorT
	npad	6
$LL25@DrawActorT:

; 306  : 										ReplaceStringInBymlNodes(&Node, UnprefixedOldName, UnprefixedName);

	lea	rax, QWORD PTR $T21[rsp]
	mov	QWORD PTR $T34[rbp-256], rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T21[rsp], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T21[rbp-240], rbx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T21[rbp-232], rbx

; 2492 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rdi, QWORD PTR UnprefixedName$72[rbp-240]

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rsi, QWORD PTR UnprefixedName$72[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR UnprefixedName$72[rbp-232], 16
	cmovae	rsi, QWORD PTR UnprefixedName$72[rbp-256]

; 2620 :         if (_Count > max_size()) {

	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
	cmp	rdi, rcx
	ja	$LN2589@DrawActorT

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T21[rbp-232], 15
	cmp	rdi, 16
	jae	SHORT $LN334@DrawActorT

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T21[rbp-240], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [rsi]
	movups	XMMWORD PTR $T21[rsp], xmm0

; 2647 :             return;

	jmp	SHORT $LN350@DrawActorT
$LN334@DrawActorT:

; 2648 :         }
; 2649 : 
; 2650 :         _My_data._Myres               = _BUF_SIZE - 1;

	mov	rbx, rdi
	or	rbx, 15

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	cmp	rbx, rcx

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN345@DrawActorT

; 4716 :             return _Max;

	mov	rbx, rcx
	jmp	SHORT $LN344@DrawActorT
$LN345@DrawActorT:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	rbx, 22
	mov	eax, 22
	cmovb	rbx, rax
$LN344@DrawActorT:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rbx
	add	rdx, 1
	mov	rax, -1
	cmovb	rdx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T21[rsp], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T21[rbp-240], rdi

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T21[rbp-232], rbx

; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	lea	r8, QWORD PTR [rdi+1]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy
	xor	ebx, ebx
	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
$LN350@DrawActorT:
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T43[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T43[rbp-240], rbx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T43[rbp-232], rbx

; 2492 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rdi, QWORD PTR UnprefixedOldName$71[rbp-240]

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rsi, QWORD PTR UnprefixedOldName$71[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR UnprefixedOldName$71[rbp-232], 16
	cmovae	rsi, QWORD PTR UnprefixedOldName$71[rbp-256]

; 2620 :         if (_Count > max_size()) {

	cmp	rdi, rcx
	ja	$LN2590@DrawActorT

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T43[rbp-232], 15
	cmp	rdi, 16
	jae	SHORT $LN374@DrawActorT

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T43[rbp-240], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [rsi]
	movups	XMMWORD PTR $T43[rbp-256], xmm0

; 2647 :             return;

	jmp	SHORT $LN390@DrawActorT
$LN374@DrawActorT:

; 2648 :         }
; 2649 : 
; 2650 :         _My_data._Myres               = _BUF_SIZE - 1;

	mov	rbx, rdi
	or	rbx, 15

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	cmp	rbx, rcx

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN385@DrawActorT

; 4716 :             return _Max;

	mov	rbx, rcx
	jmp	SHORT $LN384@DrawActorT
$LN385@DrawActorT:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	rbx, 22
	mov	eax, 22
	cmovb	rbx, rax
$LN384@DrawActorT:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rbx
	add	rdx, 1
	mov	rax, -1
	cmovb	rdx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T43[rbp-256], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T43[rbp-240], rdi

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T43[rbp-232], rbx

; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	lea	r8, QWORD PTR [rdi+1]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy
	xor	ebx, ebx
$LN390@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 306  : 										ReplaceStringInBymlNodes(&Node, UnprefixedOldName, UnprefixedName);

	lea	r8, QWORD PTR $T21[rsp]
	lea	rdx, QWORD PTR $T43[rbp-256]
	mov	rcx, r14
	call	?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z ; ReplaceStringInBymlNodes

; 304  : 									for (BymlFile::Node& Node : NodeHandler.mapped().GetNodes())

	add	r14, 88					; 00000058H
	cmp	r14, QWORD PTR <end>$L7$1$[rbp-256]
	jne	$LL25@DrawActorT
	mov	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
$LN24@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1766 :         if (_Handle.empty()) {

	test	r15, r15
	jne	SHORT $LN253@DrawActorT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR $T42[rbp-256], rsi

; 1770 :                 return _Insert_return_type<iterator, node_type>{end(), false, {}};

	mov	BYTE PTR $T42[rbp-248], r15b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 77   :     _Nodeptr _Ptr{};

	mov	QWORD PTR $T42[rbp-240], rbx
	xor	eax, eax
	mov	BYTE PTR $T42[rbp-232], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1770 :                 return _Insert_return_type<iterator, node_type>{end(), false, {}};

	jmp	$LN2800@DrawActorT
$LN253@DrawActorT:

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbx, QWORD PTR [rsi+8]
	mov	QWORD PTR $T12[rsp], rbx
	xor	r14d, r14d
	mov	DWORD PTR $T12[rsp+8], r14d
	mov	rdi, rsi

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r14b
	jne	SHORT $LN275@DrawActorT
	npad	5
$LL274@DrawActorT:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR $T12[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rdx, QWORD PTR [r15+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN276@DrawActorT

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR $T12[rsp+8], r14d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN277@DrawActorT
$LN276@DrawActorT:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR $T12[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN277@DrawActorT:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r14b
	je	SHORT $LL274@DrawActorT
$LN275@DrawActorT:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r14b
	jne	SHORT $LN254@DrawActorT
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rcx, QWORD PTR [r15+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN254@DrawActorT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR $T42[rbp-256], rdi

; 1784 :                 return _Insert_return_type<iterator, node_type>{

	mov	BYTE PTR $T42[rbp-248], r14b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 106  :     _Node_handle(_Node_handle&& _That) noexcept : _Ptr{_That._Ptr} { // steal node and allocator (if any) from _That

	mov	QWORD PTR $T42[rbp-240], r15

; 107  :         if (_Ptr != nullptr) {
; 108  :             _That._Ptr       = nullptr;

	mov	QWORD PTR NodeHandler$56[rbp-256], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1784 :                 return _Insert_return_type<iterator, node_type>{

	jmp	SHORT $LN2800@DrawActorT
$LN254@DrawActorT:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 64051194700380387			; 00e38e38e38e38e3H
	cmp	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+72, rax
	je	$LN2591@DrawActorT

; 1793 :         _Attempt_node->_Left = _Scary->_Myhead;

	mov	QWORD PTR [r15], rsi

; 1794 :         // _Attempt_node->_Parent handled in _Insert_node
; 1795 :         _Attempt_node->_Right = _Scary->_Myhead;

	mov	rax, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	mov	QWORD PTR [r15+16], rax

; 1796 :         _Attempt_node->_Color = _Red;

	mov	BYTE PTR [r15+24], r14b

; 1798 :         const auto _Inserted = _Scary->_Insert_node(_Loc._Location, _Handle._Release());

	movups	xmm0, XMMWORD PTR $T12[rsp]
	movaps	XMMWORD PTR $T11[rsp], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR NodeHandler$56[rbp-256], r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1798 :         const auto _Inserted = _Scary->_Insert_node(_Loc._Location, _Handle._Release());

	mov	r8, r15
	lea	rdx, QWORD PTR $T11[rsp]
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Insert_node
	mov	QWORD PTR $T42[rbp-256], rax

; 1799 :         if constexpr (_Multi) {
; 1800 :             return iterator(_Inserted, _Scary);
; 1801 :         } else {
; 1802 :             return _Insert_return_type<iterator, node_type>{iterator(_Inserted, _Scary), true, _STD move(_Handle)};

	mov	BYTE PTR $T42[rbp-248], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 106  :     _Node_handle(_Node_handle&& _That) noexcept : _Ptr{_That._Ptr} { // steal node and allocator (if any) from _That

	mov	QWORD PTR $T42[rbp-240], r14
$LN2800@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 310  : 								}

	mov	r13d, DWORD PTR $T19[rsp]
	or	r13d, 2
	mov	DWORD PTR $T19[rsp], r13d
	lea	rcx, QWORD PTR $T42[rbp-240]
	call	??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::~_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
	npad	1
$LN20@DrawActorT:

; 299  : 							for (SarcFile::Entry& RefEntry : ActorPack.Pack.GetEntries())

	add	r12, 56					; 00000038H
	cmp	r12, QWORD PTR <end>$L6$1$[rsp]
	jne	$LL22@DrawActorT
	mov	r15, QWORD PTR <begin>$L4$1$[rbp-256]
	lea	r13, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+32
$LN21@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3156 :         if (this == _STD addressof(_Right)) {

	lea	rax, QWORD PTR NewName$78[rbp-256]
	cmp	r15, rax
	je	SHORT $LN1760@DrawActorT

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR NewName$78[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR NewName$78[rbp-232], 16
	cmovae	rdx, QWORD PTR NewName$78[rbp-256]

; 3192 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, QWORD PTR NewName$78[rbp-240]
	mov	rcx, r15
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN1760@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 313  : 							Count++;

	mov	r12d, DWORD PTR Count$1$[rbp-256]
	inc	r12d
	mov	DWORD PTR Count$1$[rbp-256], r12d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR NewName$78[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR UnprefixedOldName$71[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR UnprefixedName$72[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR Extension$64[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rsi, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+48
$LN14@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 259  : 					for (SarcFile::Entry& Entry : ActorPack.Pack.GetEntries())

	add	r15, 56					; 00000038H
	mov	QWORD PTR <begin>$L4$1$[rbp-256], r15
	cmp	r15, QWORD PTR <end>$L4$1$[rsp]
	je	SHORT $LN2792@DrawActorT
	mov	r14d, DWORD PTR $T20[rsp]
	jmp	$LL16@DrawActorT
$LN2792@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+56, 16
	cmovae	r13, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+32

; 3192 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, rsi
	mov	rdx, r13
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A ; UIActorTool::ActorPack
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	xor	r12d, r12d
$LN2063@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_tables.cpp

; 4128 :     ImGuiOldColumns* columns = window->DC.CurrentColumns;

	mov	rcx, QWORD PTR [rax+480]

; 4129 :     if (columns != NULL && columns->Count == columns_count && columns->Flags == flags)

	test	rcx, rcx
	je	SHORT $LN2046@DrawActorT
	cmp	DWORD PTR [rcx+16], 1
	jne	SHORT $LN2045@DrawActorT
	cmp	DWORD PTR [rcx+4], 0
	je	SHORT $LN2046@DrawActorT
$LN2045@DrawActorT:

; 4130 :         return;
; 4131 : 
; 4132 :     if (columns != NULL)
; 4133 :         EndColumns();

	call	?EndColumns@ImGui@@YAXXZ		; ImGui::EndColumns
$LN2046@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 321  : 			ImGui::SeparatorText("BYML");

	lea	rcx, OFFSET FLAT:??_C@_04IJGFFNHJ@BYML@
	call	?SeparatorText@ImGui@@YAXPEBD@Z		; ImGui::SeparatorText

; 322  : 			int Id = 0;

	mov	DWORD PTR Id$77[rbp-256], r12d

; 323  : 
; 324  : 			for (int i = 0; i < ActorPack.Bymls.size(); i++)

	mov	esi, r12d
	cmp	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+72, 0
	jbe	$LN27@DrawActorT
	npad	6
$LL28@DrawActorT:

; 327  : 				std::advance(Iter, i);

	mov	r10d, esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rbx, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	mov	rbx, QWORD PTR [rbx]
	mov	QWORD PTR _UWhere$53[rbp-256], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1404 :             for (; _Off < 0; ++_Off) {

	test	esi, esi
	jns	$LN1807@DrawActorT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 327  : 				std::advance(Iter, i);

	mov	eax, esi
	neg	eax
	mov	ecx, eax
	lea	r10d, DWORD PTR [rsi+rax]
$LL1808@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 72   :         if (_Ptr->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LN1828@DrawActorT

; 73   :             _Ptr = _Ptr->_Right; // end() ==> rightmost

	mov	rbx, QWORD PTR [rbx+16]
	jmp	SHORT $LN1836@DrawActorT
$LN1828@DrawActorT:

; 74   :         } else if (_Ptr->_Left->_Isnil) { // climb looking for left subtree

	mov	rax, QWORD PTR [rbx]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LN1830@DrawActorT

; 75   :             _Nodeptr _Pnode;
; 76   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Left) {

	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN1827@DrawActorT
$LL1826@DrawActorT:
	cmp	rbx, QWORD PTR [rax]
	jne	SHORT $LN1827@DrawActorT

; 77   :                 _Ptr = _Pnode; // ==> parent while left subtree

	mov	rbx, rax
	mov	QWORD PTR _UWhere$53[rbp-256], rax

; 75   :             _Nodeptr _Pnode;
; 76   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Left) {

	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL1826@DrawActorT
$LN1827@DrawActorT:

; 78   :             }
; 79   : 
; 80   :             if (!_Ptr->_Isnil) { // decrement non-begin()

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN1806@DrawActorT

; 81   :                 _Ptr = _Pnode; // ==> parent if not head

	mov	rbx, rax
	mov	QWORD PTR _UWhere$53[rbp-256], rax

; 82   :             }
; 83   :         } else {

	jmp	SHORT $LN1806@DrawActorT
$LN1830@DrawActorT:

; 84   :             _Ptr = _Mytree::_Max(_Ptr->_Left); // ==> largest of left subtree

	mov	rbx, rax

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN1836@DrawActorT
	npad	3
$LL1835@DrawActorT:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rbx, rax

; 187  :     }
; 188  : 
; 189  :     _NODISCARD pointer operator->() const noexcept {
; 190  :         return pointer_traits<pointer>::pointer_to(**this);
; 191  :     }
; 192  : 
; 193  :     _Tree_const_iterator& operator++() noexcept {
; 194  : #if _ITERATOR_DEBUG_LEVEL == 2
; 195  :         _STL_VERIFY(this->_Getcont(), "cannot increment value-initialized map/set iterator");
; 196  :         _STL_VERIFY(!this->_Ptr->_Isnil, "cannot increment end map/set iterator");
; 197  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 198  : 
; 199  :         _Mybase::operator++();
; 200  :         return *this;
; 201  :     }
; 202  : 
; 203  :     _Tree_const_iterator operator++(int) noexcept {
; 204  :         _Tree_const_iterator _Tmp = *this;
; 205  :         ++*this;
; 206  :         return _Tmp;
; 207  :     }
; 208  : 
; 209  :     _Tree_const_iterator& operator--() noexcept {
; 210  : #if _ITERATOR_DEBUG_LEVEL == 2
; 211  :         _STL_ASSERT(this->_Getcont(), "cannot decrement value-initialized map/set iterator");
; 212  :         _Nodeptr _Ptrsav = this->_Ptr;
; 213  :         _Mybase::operator--();
; 214  :         _STL_VERIFY(_Ptrsav != this->_Ptr, "cannot decrement begin map/set iterator");
; 215  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 216  :         _Mybase::operator--();
; 217  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 218  : 
; 219  :         return *this;
; 220  :     }
; 221  : 
; 222  :     _Tree_const_iterator operator--(int) noexcept {
; 223  :         _Tree_const_iterator _Tmp = *this;
; 224  :         --*this;
; 225  :         return _Tmp;
; 226  :     }
; 227  : 
; 228  :     _NODISCARD bool operator==(const _Tree_const_iterator& _Right) const noexcept {
; 229  : #if _ITERATOR_DEBUG_LEVEL == 2
; 230  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "map/set iterators incompatible");
; 231  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 232  : 
; 233  :         return this->_Ptr == _Right._Ptr;
; 234  :     }
; 235  : 
; 236  : #if !_HAS_CXX20
; 237  :     _NODISCARD bool operator!=(const _Tree_const_iterator& _Right) const noexcept {
; 238  :         return !(*this == _Right);
; 239  :     }
; 240  : #endif // !_HAS_CXX20
; 241  : 
; 242  : #if _ITERATOR_DEBUG_LEVEL == 2
; 243  :     friend void _Verify_range(const _Tree_const_iterator& _First, const _Tree_const_iterator& _Last) noexcept {
; 244  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "map/set iterators in range are from different containers");
; 245  :     }
; 246  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 247  : 
; 248  :     using _Prevent_inheriting_unwrap = _Tree_const_iterator;
; 249  : 
; 250  :     _NODISCARD _Tree_unchecked_const_iterator<_Mytree> _Unwrapped() const noexcept {
; 251  :         return _Tree_unchecked_const_iterator<_Mytree>(this->_Ptr, static_cast<const _Mytree*>(this->_Getcont()));
; 252  :     }
; 253  : 
; 254  :     void _Seek_to(const _Tree_unchecked_const_iterator<_Mytree> _It) noexcept {
; 255  :         this->_Ptr = _It._Ptr;
; 256  :     }
; 257  : };
; 258  : 
; 259  : template <class _Mytree>
; 260  : class _Tree_iterator : public _Tree_const_iterator<_Mytree> {
; 261  : public:
; 262  :     using _Mybase           = _Tree_const_iterator<_Mytree>;
; 263  :     using iterator_category = bidirectional_iterator_tag;
; 264  : 
; 265  :     using _Nodeptr        = typename _Mytree::_Nodeptr;
; 266  :     using value_type      = typename _Mytree::value_type;
; 267  :     using difference_type = typename _Mytree::difference_type;
; 268  : 
; 269  :     using pointer   = typename _Mytree::pointer;
; 270  :     using reference = value_type&;
; 271  : 
; 272  :     using _Mybase::_Mybase;
; 273  : 
; 274  :     _NODISCARD reference operator*() const noexcept {
; 275  :         return const_cast<reference>(_Mybase::operator*());
; 276  :     }
; 277  : 
; 278  :     _NODISCARD pointer operator->() const noexcept {
; 279  :         return pointer_traits<pointer>::pointer_to(**this);
; 280  :     }
; 281  : 
; 282  :     _Tree_iterator& operator++() noexcept {
; 283  :         _Mybase::operator++();
; 284  :         return *this;
; 285  :     }
; 286  : 
; 287  :     _Tree_iterator operator++(int) noexcept {
; 288  :         _Tree_iterator _Tmp = *this;
; 289  :         _Mybase::operator++();
; 290  :         return _Tmp;
; 291  :     }
; 292  : 
; 293  :     _Tree_iterator& operator--() noexcept {
; 294  :         _Mybase::operator--();
; 295  :         return *this;
; 296  :     }
; 297  : 
; 298  :     _Tree_iterator operator--(int) noexcept {
; 299  :         _Tree_iterator _Tmp = *this;
; 300  :         _Mybase::operator--();
; 301  :         return _Tmp;
; 302  :     }
; 303  : 
; 304  :     using _Prevent_inheriting_unwrap = _Tree_iterator;
; 305  : 
; 306  :     _NODISCARD _Tree_unchecked_iterator<_Mytree> _Unwrapped() const noexcept {
; 307  :         return _Tree_unchecked_iterator<_Mytree>(this->_Ptr, static_cast<const _Mytree*>(this->_Getcont()));
; 308  :     }
; 309  : };
; 310  : 
; 311  : template <class _Value_type, class _Size_type, class _Difference_type, class _Pointer, class _Const_pointer,
; 312  :     class _Reference, class _Const_reference, class _Nodeptr_type>
; 313  : struct _Tree_iter_types {
; 314  :     using value_type      = _Value_type;
; 315  :     using size_type       = _Size_type;
; 316  :     using difference_type = _Difference_type;
; 317  :     using pointer         = _Pointer;
; 318  :     using const_pointer   = _Const_pointer;
; 319  :     using _Nodeptr        = _Nodeptr_type;
; 320  : };
; 321  : 
; 322  : template <class _Value_type, class _Voidptr>
; 323  : struct _Tree_node {
; 324  :     using _Nodeptr   = _Rebind_pointer_t<_Voidptr, _Tree_node>;
; 325  :     using value_type = _Value_type;
; 326  :     _Nodeptr _Left; // left subtree, or smallest element if head
; 327  :     _Nodeptr _Parent; // parent, or root of tree if head
; 328  :     _Nodeptr _Right; // right subtree, or largest element if head
; 329  :     char _Color; // _Red or _Black, _Black if head
; 330  :     char _Isnil; // true only if head (also nil) node; TRANSITION, should be bool
; 331  :     value_type _Myval = // the stored value, unused if head
; 332  :         _Returns_exactly<value_type>(); // fake a viable constructor to workaround GH-2749
; 333  : 
; 334  :     enum _Redbl { // colors for link to parent
; 335  :         _Red,
; 336  :         _Black
; 337  :     };
; 338  : 
; 339  :     _Tree_node()                             = default;
; 340  :     _Tree_node(const _Tree_node&)            = delete;
; 341  :     _Tree_node& operator=(const _Tree_node&) = delete;
; 342  : 
; 343  :     template <class _Alloc>
; 344  :     static _Nodeptr _Buyheadnode(_Alloc& _Al) {
; 345  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Buyheadnode call");
; 346  :         const auto _Pnode = _Al.allocate(1);
; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);
; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);
; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);
; 350  :         _Pnode->_Color = _Black;
; 351  :         _Pnode->_Isnil = true;
; 352  :         return _Pnode;
; 353  :     }
; 354  : 
; 355  :     template <class _Alloc, class... _Valty>
; 356  :     static _Nodeptr _Buynode(_Alloc& _Al, _Nodeptr _Myhead, _Valty&&... _Val) {
; 357  :         // allocate a node with defaults and set links and value
; 358  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Buynode call");
; 359  :         _Alloc_construct_ptr<_Alloc> _Newnode(_Al);
; 360  :         _Newnode._Allocate();
; 361  :         allocator_traits<_Alloc>::construct(_Al, _STD addressof(_Newnode._Ptr->_Myval), _STD forward<_Valty>(_Val)...);
; 362  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);
; 363  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);
; 364  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);
; 365  :         _Newnode._Ptr->_Color = _Red;
; 366  :         _Newnode._Ptr->_Isnil = false;
; 367  :         return _Newnode._Release();
; 368  :     }
; 369  : 
; 370  :     template <class _Alloc>
; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {
; 372  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode0 call");
; 373  :         _Destroy_in_place(_Ptr->_Left);
; 374  :         _Destroy_in_place(_Ptr->_Parent);
; 375  :         _Destroy_in_place(_Ptr->_Right);
; 376  :         allocator_traits<_Alloc>::deallocate(_Al, _Ptr, 1);
; 377  :     }
; 378  : 
; 379  :     template <class _Alloc>
; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {
; 381  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode call");
; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));
; 383  :         _Freenode0(_Al, _Ptr);
; 384  :     }
; 385  : };
; 386  : 
; 387  : template <class _Ty>
; 388  : struct _Tree_simple_types : _Simple_types<_Ty> {
; 389  :     using _Node    = _Tree_node<_Ty, void*>;
; 390  :     using _Nodeptr = _Node*;
; 391  : };
; 392  : 
; 393  : enum class _Tree_child {
; 394  :     _Right, // perf note: compare with _Right rather than _Left where possible for comparison with zero
; 395  :     _Left,
; 396  :     _Unused // indicates that tree child should never be used for insertion
; 397  : };
; 398  : 
; 399  : template <class _Nodeptr>
; 400  : struct _Tree_id {
; 401  :     _Nodeptr _Parent; // the leaf node under which a new node should be inserted
; 402  :     _Tree_child _Child;
; 403  : };
; 404  : 
; 405  : template <class _Nodeptr>
; 406  : struct _Tree_find_result {
; 407  :     _Tree_id<_Nodeptr> _Location;
; 408  :     _Nodeptr _Bound;
; 409  : };
; 410  : 
; 411  : template <class _Nodeptr>
; 412  : struct _Tree_find_hint_result {
; 413  :     _Tree_id<_Nodeptr> _Location;
; 414  :     bool _Duplicate;
; 415  : };
; 416  : 
; 417  : [[noreturn]] inline void _Throw_tree_length_error() {
; 418  :     _Xlength_error("map/set too long");
; 419  : }
; 420  : 
; 421  : template <class _Val_types>
; 422  : class _Tree_val : public _Container_base {
; 423  : public:
; 424  :     using _Nodeptr = typename _Val_types::_Nodeptr;
; 425  : 
; 426  :     using value_type      = typename _Val_types::value_type;
; 427  :     using size_type       = typename _Val_types::size_type;
; 428  :     using difference_type = typename _Val_types::difference_type;
; 429  :     using pointer         = typename _Val_types::pointer;
; 430  :     using const_pointer   = typename _Val_types::const_pointer;
; 431  :     using reference       = value_type&;
; 432  :     using const_reference = const value_type&;
; 433  : 
; 434  :     using _Unchecked_const_iterator = _Tree_unchecked_const_iterator<_Tree_val>;
; 435  :     using const_iterator            = _Tree_const_iterator<_Tree_val>;
; 436  : 
; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}
; 438  : 
; 439  :     enum _Redbl { // colors for link to parent
; 440  :         _Red,
; 441  :         _Black
; 442  :     };
; 443  : 
; 444  :     static _Nodeptr _Max(_Nodeptr _Pnode) noexcept { // return rightmost node in subtree at _Pnode
; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL1835@DrawActorT
$LN1836@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1404 :             for (; _Off < 0; ++_Off) {

	mov	QWORD PTR _UWhere$53[rbp-256], rbx
$LN1806@DrawActorT:
	sub	rcx, 1
	jne	SHORT $LL1808@DrawActorT
$LN1807@DrawActorT:

; 1409 :         for (; 0 < _Off; --_Off) {

	test	r10d, r10d
	jle	SHORT $LN1810@DrawActorT
	npad	1
$LL1811@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 143  :         _Mybase::operator++();

	lea	rcx, QWORD PTR _UWhere$53[rbp-256]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>::operator++
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1409 :         for (; 0 < _Off; --_Off) {

	dec	r10d
	test	r10d, r10d
	jg	SHORT $LL1811@DrawActorT
	mov	rbx, QWORD PTR _UWhere$53[rbp-256]
$LN1810@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 186  :         return this->_Ptr->_Myval;

	lea	rdi, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rdi

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdi+24], 16
	jb	SHORT $LN2781@DrawActorT

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rdi]
$LN2781@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 329  : 				if (ImGui::CollapsingHeader(Iter->first.c_str()))

	xor	edx, edx
	call	?CollapsingHeader@ImGui@@YA_NPEBDH@Z	; ImGui::CollapsingHeader
	test	al, al
	je	$LN26@DrawActorT
	xorps	xmm0, xmm0

; 330  : 				{
; 331  : 					ImGui::Indent();

	call	?Indent@ImGui@@YAXM@Z			; ImGui::Indent
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdi+24], 16
	jb	SHORT $LN1924@DrawActorT

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdi, QWORD PTR [rdi]
$LN1924@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_tables.cpp

; 4128 :     ImGuiOldColumns* columns = window->DC.CurrentColumns;

	mov	rcx, QWORD PTR [rax+480]

; 4129 :     if (columns != NULL && columns->Count == columns_count && columns->Flags == flags)

	test	rcx, rcx
	je	SHORT $LN1930@DrawActorT
	cmp	DWORD PTR [rcx+16], 2
	jne	SHORT $LN1929@DrawActorT
	cmp	DWORD PTR [rcx+4], 0
	je	SHORT $LN1931@DrawActorT
$LN1929@DrawActorT:

; 4130 :         return;
; 4131 : 
; 4132 :     if (columns != NULL)
; 4133 :         EndColumns();

	call	?EndColumns@ImGui@@YAXXZ		; ImGui::EndColumns
$LN1930@DrawActorT:

; 4134 : 
; 4135 :     if (columns_count != 1)
; 4136 :         BeginColumns(id, columns_count, flags);

	xor	r8d, r8d
	lea	edx, QWORD PTR [r8+2]
	mov	rcx, rdi
	call	?BeginColumns@ImGui@@YAXPEBDHH@Z	; ImGui::BeginColumns
$LN1931@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 337  : 					ImGui::AlignTextToFramePadding();

	call	?AlignTextToFramePadding@ImGui@@YAXXZ	; ImGui::AlignTextToFramePadding

; 338  : 					for (BymlFile::Node& Node : Iter->second.GetNodes())

	mov	rdi, QWORD PTR [rbx+72]

; 337  : 					ImGui::AlignTextToFramePadding();

	mov	rbx, QWORD PTR [rbx+64]

; 338  : 					for (BymlFile::Node& Node : Iter->second.GetNodes())

	cmp	rbx, rdi
	je	SHORT $LN30@DrawActorT
	npad	9
$LL31@DrawActorT:

; 339  : 					{
; 340  : 						DisplayBymlNode(&Node, Id);

	lea	rdx, QWORD PTR Id$77[rbp-256]
	mov	rcx, rbx
	call	?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z ; DisplayBymlNode

; 341  : 						ImGui::NextColumn();

	call	?NextColumn@ImGui@@YAXXZ		; ImGui::NextColumn

; 338  : 					for (BymlFile::Node& Node : Iter->second.GetNodes())

	add	rbx, 88					; 00000058H
	cmp	rbx, rdi
	jne	SHORT $LL31@DrawActorT
$LN30@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_tables.cpp

; 4128 :     ImGuiOldColumns* columns = window->DC.CurrentColumns;

	mov	rcx, QWORD PTR [rax+480]

; 4129 :     if (columns != NULL && columns->Count == columns_count && columns->Flags == flags)

	test	rcx, rcx
	je	SHORT $LN497@DrawActorT
	cmp	DWORD PTR [rcx+16], 1
	jne	SHORT $LN496@DrawActorT
	cmp	DWORD PTR [rcx+4], 0
	je	SHORT $LN497@DrawActorT
$LN496@DrawActorT:

; 4130 :         return;
; 4131 : 
; 4132 :     if (columns != NULL)
; 4133 :         EndColumns();

	call	?EndColumns@ImGui@@YAXXZ		; ImGui::EndColumns
$LN497@DrawActorT:
	xorps	xmm0, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 344  : 					ImGui::Unindent();

	call	?Unindent@ImGui@@YAXM@Z			; ImGui::Unindent
$LN26@DrawActorT:

; 323  : 
; 324  : 			for (int i = 0; i < ActorPack.Bymls.size(); i++)

	inc	esi
	movsxd	rax, esi
	cmp	rax, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+72
	jb	$LL28@DrawActorT
$LN27@DrawActorT:

; 345  : #ifdef ADVANCED_MODE
; 346  : 					if (DeleteByml)
; 347  : 					{
; 348  : 						ActorPack.DeletedFiles.push_back(Iter->first);
; 349  : 						ActorPack.Bymls.erase(Iter);
; 350  : 					}
; 351  : #endif
; 352  : 				}
; 353  : 			}
; 354  : 			ImGui::NewLine();

	call	?NewLine@ImGui@@YAXXZ			; ImGui::NewLine
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	r11, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [r11+16408]
	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [r11+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 1529 :     if (window->SkipItems)

	lea	rbx, OFFSET FLAT:??_C@_04CBJODOB@AINB@
	cmp	BYTE PTR [rax+240], 0
	jne	SHORT $LN1794@DrawActorT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 3327 :     const char* text_display_end = text;

	mov	r8, rbx

; 3328 :     if (!text_end)
; 3329 :         text_end = (const char*)-1;
; 3330 : 
; 3331 :     while (text_display_end < text_end && *text_display_end != '\0' && (text_display_end[0] != '#' || text_display_end[1] != '#'))

	cmp	rbx, -1
	jae	SHORT $LN1801@DrawActorT
	npad	6
$LL1800@DrawActorT:
	movzx	ecx, BYTE PTR [r8]
	test	cl, cl
	je	SHORT $LN1801@DrawActorT
	cmp	cl, 35					; 00000023H
	jne	SHORT $LN2782@DrawActorT
	cmp	BYTE PTR [r8+1], cl
	je	SHORT $LN1801@DrawActorT
$LN2782@DrawActorT:
	inc	r8
	cmp	r8, -1
	jb	SHORT $LL1800@DrawActorT
$LN1801@DrawActorT:
	xorps	xmm3, xmm3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 1538 :     SeparatorTextEx(0, label, FindRenderedTextEnd(label), 0.0f);

	mov	rdx, rbx
	call	?SeparatorTextEx@ImGui@@YAXIPEBD0M@Z	; ImGui::SeparatorTextEx
$LN1794@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_tables.cpp

; 4128 :     ImGuiOldColumns* columns = window->DC.CurrentColumns;

	mov	r8, QWORD PTR [rax+480]

; 4129 :     if (columns != NULL && columns->Count == columns_count && columns->Flags == flags)

	test	r8, r8
	je	SHORT $LN1789@DrawActorT
	cmp	DWORD PTR [r8+16], 2
	jne	SHORT $LN1788@DrawActorT
	cmp	DWORD PTR [r8+4], 0
	je	SHORT $LN1790@DrawActorT
$LN1788@DrawActorT:

; 4130 :         return;
; 4131 : 
; 4132 :     if (columns != NULL)
; 4133 :         EndColumns();

	call	?EndColumns@ImGui@@YAXXZ		; ImGui::EndColumns
$LN1789@DrawActorT:

; 4134 : 
; 4135 :     if (columns_count != 1)
; 4136 :         BeginColumns(id, columns_count, flags);

	xor	r8d, r8d
	lea	edx, QWORD PTR [r8+2]
	mov	rcx, rbx
	call	?BeginColumns@ImGui@@YAXPEBDHH@Z	; ImGui::BeginColumns
$LN1790@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 359  : 			for (int i = 0; i < ActorPack.AINBs.size(); i++)

	mov	r15d, r12d
	cmp	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+104, 0
	jbe	$LN33@DrawActorT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	QWORD PTR $T2[rsp], 0
	lea	r13, OFFSET FLAT:?AINB@UIAINBEditor@@3VAINBFile@@A+632
	movss	xmm6, DWORD PTR __real@3f800000
	npad	6
$LL34@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 362  : 				std::advance(Iter, i);

	mov	edx, r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rbx, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+96
	mov	rbx, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1404 :             for (; _Off < 0; ++_Off) {

	test	r15d, r15d
	jns	SHORT $LN155@DrawActorT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 362  : 				std::advance(Iter, i);

	mov	eax, r15d
	neg	eax
	mov	ecx, eax
	lea	edx, DWORD PTR [r15+rax]
	npad	3
$LL156@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 72   :         if (_Ptr->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LN176@DrawActorT

; 73   :             _Ptr = _Ptr->_Right; // end() ==> rightmost

	mov	rbx, QWORD PTR [rbx+16]
	jmp	SHORT $LN154@DrawActorT
$LN176@DrawActorT:

; 74   :         } else if (_Ptr->_Left->_Isnil) { // climb looking for left subtree

	mov	rax, QWORD PTR [rbx]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LN178@DrawActorT

; 75   :             _Nodeptr _Pnode;
; 76   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Left) {

	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN175@DrawActorT
	npad	1
$LL174@DrawActorT:
	cmp	rbx, QWORD PTR [rax]
	jne	SHORT $LN175@DrawActorT

; 77   :                 _Ptr = _Pnode; // ==> parent while left subtree

	mov	rbx, rax

; 75   :             _Nodeptr _Pnode;
; 76   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Left) {

	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL174@DrawActorT
$LN175@DrawActorT:

; 78   :             }
; 79   : 
; 80   :             if (!_Ptr->_Isnil) { // decrement non-begin()

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN154@DrawActorT

; 81   :                 _Ptr = _Pnode; // ==> parent if not head

	mov	rbx, rax

; 82   :             }
; 83   :         } else {

	jmp	SHORT $LN154@DrawActorT
$LN178@DrawActorT:

; 84   :             _Ptr = _Mytree::_Max(_Ptr->_Left); // ==> largest of left subtree

	mov	rbx, rax

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN154@DrawActorT
	npad	6
$LL183@DrawActorT:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rbx, rax

; 187  :     }
; 188  : 
; 189  :     _NODISCARD pointer operator->() const noexcept {
; 190  :         return pointer_traits<pointer>::pointer_to(**this);
; 191  :     }
; 192  : 
; 193  :     _Tree_const_iterator& operator++() noexcept {
; 194  : #if _ITERATOR_DEBUG_LEVEL == 2
; 195  :         _STL_VERIFY(this->_Getcont(), "cannot increment value-initialized map/set iterator");
; 196  :         _STL_VERIFY(!this->_Ptr->_Isnil, "cannot increment end map/set iterator");
; 197  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 198  : 
; 199  :         _Mybase::operator++();
; 200  :         return *this;
; 201  :     }
; 202  : 
; 203  :     _Tree_const_iterator operator++(int) noexcept {
; 204  :         _Tree_const_iterator _Tmp = *this;
; 205  :         ++*this;
; 206  :         return _Tmp;
; 207  :     }
; 208  : 
; 209  :     _Tree_const_iterator& operator--() noexcept {
; 210  : #if _ITERATOR_DEBUG_LEVEL == 2
; 211  :         _STL_ASSERT(this->_Getcont(), "cannot decrement value-initialized map/set iterator");
; 212  :         _Nodeptr _Ptrsav = this->_Ptr;
; 213  :         _Mybase::operator--();
; 214  :         _STL_VERIFY(_Ptrsav != this->_Ptr, "cannot decrement begin map/set iterator");
; 215  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 216  :         _Mybase::operator--();
; 217  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 218  : 
; 219  :         return *this;
; 220  :     }
; 221  : 
; 222  :     _Tree_const_iterator operator--(int) noexcept {
; 223  :         _Tree_const_iterator _Tmp = *this;
; 224  :         --*this;
; 225  :         return _Tmp;
; 226  :     }
; 227  : 
; 228  :     _NODISCARD bool operator==(const _Tree_const_iterator& _Right) const noexcept {
; 229  : #if _ITERATOR_DEBUG_LEVEL == 2
; 230  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "map/set iterators incompatible");
; 231  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 232  : 
; 233  :         return this->_Ptr == _Right._Ptr;
; 234  :     }
; 235  : 
; 236  : #if !_HAS_CXX20
; 237  :     _NODISCARD bool operator!=(const _Tree_const_iterator& _Right) const noexcept {
; 238  :         return !(*this == _Right);
; 239  :     }
; 240  : #endif // !_HAS_CXX20
; 241  : 
; 242  : #if _ITERATOR_DEBUG_LEVEL == 2
; 243  :     friend void _Verify_range(const _Tree_const_iterator& _First, const _Tree_const_iterator& _Last) noexcept {
; 244  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "map/set iterators in range are from different containers");
; 245  :     }
; 246  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 247  : 
; 248  :     using _Prevent_inheriting_unwrap = _Tree_const_iterator;
; 249  : 
; 250  :     _NODISCARD _Tree_unchecked_const_iterator<_Mytree> _Unwrapped() const noexcept {
; 251  :         return _Tree_unchecked_const_iterator<_Mytree>(this->_Ptr, static_cast<const _Mytree*>(this->_Getcont()));
; 252  :     }
; 253  : 
; 254  :     void _Seek_to(const _Tree_unchecked_const_iterator<_Mytree> _It) noexcept {
; 255  :         this->_Ptr = _It._Ptr;
; 256  :     }
; 257  : };
; 258  : 
; 259  : template <class _Mytree>
; 260  : class _Tree_iterator : public _Tree_const_iterator<_Mytree> {
; 261  : public:
; 262  :     using _Mybase           = _Tree_const_iterator<_Mytree>;
; 263  :     using iterator_category = bidirectional_iterator_tag;
; 264  : 
; 265  :     using _Nodeptr        = typename _Mytree::_Nodeptr;
; 266  :     using value_type      = typename _Mytree::value_type;
; 267  :     using difference_type = typename _Mytree::difference_type;
; 268  : 
; 269  :     using pointer   = typename _Mytree::pointer;
; 270  :     using reference = value_type&;
; 271  : 
; 272  :     using _Mybase::_Mybase;
; 273  : 
; 274  :     _NODISCARD reference operator*() const noexcept {
; 275  :         return const_cast<reference>(_Mybase::operator*());
; 276  :     }
; 277  : 
; 278  :     _NODISCARD pointer operator->() const noexcept {
; 279  :         return pointer_traits<pointer>::pointer_to(**this);
; 280  :     }
; 281  : 
; 282  :     _Tree_iterator& operator++() noexcept {
; 283  :         _Mybase::operator++();
; 284  :         return *this;
; 285  :     }
; 286  : 
; 287  :     _Tree_iterator operator++(int) noexcept {
; 288  :         _Tree_iterator _Tmp = *this;
; 289  :         _Mybase::operator++();
; 290  :         return _Tmp;
; 291  :     }
; 292  : 
; 293  :     _Tree_iterator& operator--() noexcept {
; 294  :         _Mybase::operator--();
; 295  :         return *this;
; 296  :     }
; 297  : 
; 298  :     _Tree_iterator operator--(int) noexcept {
; 299  :         _Tree_iterator _Tmp = *this;
; 300  :         _Mybase::operator--();
; 301  :         return _Tmp;
; 302  :     }
; 303  : 
; 304  :     using _Prevent_inheriting_unwrap = _Tree_iterator;
; 305  : 
; 306  :     _NODISCARD _Tree_unchecked_iterator<_Mytree> _Unwrapped() const noexcept {
; 307  :         return _Tree_unchecked_iterator<_Mytree>(this->_Ptr, static_cast<const _Mytree*>(this->_Getcont()));
; 308  :     }
; 309  : };
; 310  : 
; 311  : template <class _Value_type, class _Size_type, class _Difference_type, class _Pointer, class _Const_pointer,
; 312  :     class _Reference, class _Const_reference, class _Nodeptr_type>
; 313  : struct _Tree_iter_types {
; 314  :     using value_type      = _Value_type;
; 315  :     using size_type       = _Size_type;
; 316  :     using difference_type = _Difference_type;
; 317  :     using pointer         = _Pointer;
; 318  :     using const_pointer   = _Const_pointer;
; 319  :     using _Nodeptr        = _Nodeptr_type;
; 320  : };
; 321  : 
; 322  : template <class _Value_type, class _Voidptr>
; 323  : struct _Tree_node {
; 324  :     using _Nodeptr   = _Rebind_pointer_t<_Voidptr, _Tree_node>;
; 325  :     using value_type = _Value_type;
; 326  :     _Nodeptr _Left; // left subtree, or smallest element if head
; 327  :     _Nodeptr _Parent; // parent, or root of tree if head
; 328  :     _Nodeptr _Right; // right subtree, or largest element if head
; 329  :     char _Color; // _Red or _Black, _Black if head
; 330  :     char _Isnil; // true only if head (also nil) node; TRANSITION, should be bool
; 331  :     value_type _Myval = // the stored value, unused if head
; 332  :         _Returns_exactly<value_type>(); // fake a viable constructor to workaround GH-2749
; 333  : 
; 334  :     enum _Redbl { // colors for link to parent
; 335  :         _Red,
; 336  :         _Black
; 337  :     };
; 338  : 
; 339  :     _Tree_node()                             = default;
; 340  :     _Tree_node(const _Tree_node&)            = delete;
; 341  :     _Tree_node& operator=(const _Tree_node&) = delete;
; 342  : 
; 343  :     template <class _Alloc>
; 344  :     static _Nodeptr _Buyheadnode(_Alloc& _Al) {
; 345  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Buyheadnode call");
; 346  :         const auto _Pnode = _Al.allocate(1);
; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);
; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);
; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);
; 350  :         _Pnode->_Color = _Black;
; 351  :         _Pnode->_Isnil = true;
; 352  :         return _Pnode;
; 353  :     }
; 354  : 
; 355  :     template <class _Alloc, class... _Valty>
; 356  :     static _Nodeptr _Buynode(_Alloc& _Al, _Nodeptr _Myhead, _Valty&&... _Val) {
; 357  :         // allocate a node with defaults and set links and value
; 358  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Buynode call");
; 359  :         _Alloc_construct_ptr<_Alloc> _Newnode(_Al);
; 360  :         _Newnode._Allocate();
; 361  :         allocator_traits<_Alloc>::construct(_Al, _STD addressof(_Newnode._Ptr->_Myval), _STD forward<_Valty>(_Val)...);
; 362  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);
; 363  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);
; 364  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);
; 365  :         _Newnode._Ptr->_Color = _Red;
; 366  :         _Newnode._Ptr->_Isnil = false;
; 367  :         return _Newnode._Release();
; 368  :     }
; 369  : 
; 370  :     template <class _Alloc>
; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {
; 372  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode0 call");
; 373  :         _Destroy_in_place(_Ptr->_Left);
; 374  :         _Destroy_in_place(_Ptr->_Parent);
; 375  :         _Destroy_in_place(_Ptr->_Right);
; 376  :         allocator_traits<_Alloc>::deallocate(_Al, _Ptr, 1);
; 377  :     }
; 378  : 
; 379  :     template <class _Alloc>
; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {
; 381  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode call");
; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));
; 383  :         _Freenode0(_Al, _Ptr);
; 384  :     }
; 385  : };
; 386  : 
; 387  : template <class _Ty>
; 388  : struct _Tree_simple_types : _Simple_types<_Ty> {
; 389  :     using _Node    = _Tree_node<_Ty, void*>;
; 390  :     using _Nodeptr = _Node*;
; 391  : };
; 392  : 
; 393  : enum class _Tree_child {
; 394  :     _Right, // perf note: compare with _Right rather than _Left where possible for comparison with zero
; 395  :     _Left,
; 396  :     _Unused // indicates that tree child should never be used for insertion
; 397  : };
; 398  : 
; 399  : template <class _Nodeptr>
; 400  : struct _Tree_id {
; 401  :     _Nodeptr _Parent; // the leaf node under which a new node should be inserted
; 402  :     _Tree_child _Child;
; 403  : };
; 404  : 
; 405  : template <class _Nodeptr>
; 406  : struct _Tree_find_result {
; 407  :     _Tree_id<_Nodeptr> _Location;
; 408  :     _Nodeptr _Bound;
; 409  : };
; 410  : 
; 411  : template <class _Nodeptr>
; 412  : struct _Tree_find_hint_result {
; 413  :     _Tree_id<_Nodeptr> _Location;
; 414  :     bool _Duplicate;
; 415  : };
; 416  : 
; 417  : [[noreturn]] inline void _Throw_tree_length_error() {
; 418  :     _Xlength_error("map/set too long");
; 419  : }
; 420  : 
; 421  : template <class _Val_types>
; 422  : class _Tree_val : public _Container_base {
; 423  : public:
; 424  :     using _Nodeptr = typename _Val_types::_Nodeptr;
; 425  : 
; 426  :     using value_type      = typename _Val_types::value_type;
; 427  :     using size_type       = typename _Val_types::size_type;
; 428  :     using difference_type = typename _Val_types::difference_type;
; 429  :     using pointer         = typename _Val_types::pointer;
; 430  :     using const_pointer   = typename _Val_types::const_pointer;
; 431  :     using reference       = value_type&;
; 432  :     using const_reference = const value_type&;
; 433  : 
; 434  :     using _Unchecked_const_iterator = _Tree_unchecked_const_iterator<_Tree_val>;
; 435  :     using const_iterator            = _Tree_const_iterator<_Tree_val>;
; 436  : 
; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}
; 438  : 
; 439  :     enum _Redbl { // colors for link to parent
; 440  :         _Red,
; 441  :         _Black
; 442  :     };
; 443  : 
; 444  :     static _Nodeptr _Max(_Nodeptr _Pnode) noexcept { // return rightmost node in subtree at _Pnode
; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL183@DrawActorT
$LN154@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1404 :             for (; _Off < 0; ++_Off) {

	sub	rcx, 1
	jne	SHORT $LL156@DrawActorT
$LN155@DrawActorT:

; 1409 :         for (; 0 < _Off; --_Off) {

	test	edx, edx
	jle	SHORT $LN158@DrawActorT
	npad	9
$LL159@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

	mov	rax, QWORD PTR [rbx+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LN191@DrawActorT

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

	mov	rax, QWORD PTR [rbx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN190@DrawActorT
$LL189@DrawActorT:
	cmp	rbx, QWORD PTR [rax+16]
	jne	SHORT $LN190@DrawActorT

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

	mov	rbx, rax

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL189@DrawActorT
$LN190@DrawActorT:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())

	mov	rbx, rax

; 58   :         } else {

	jmp	SHORT $LN157@DrawActorT
$LN191@DrawActorT:

; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

	mov	rbx, rax

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [rax]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN157@DrawActorT
	npad	8
$LL195@DrawActorT:

; 454  :             _Pnode = _Pnode->_Left;

	mov	rbx, rcx

; 447  :         }
; 448  : 
; 449  :         return _Pnode;
; 450  :     }
; 451  : 
; 452  :     static _Nodeptr _Min(_Nodeptr _Pnode) noexcept { // return leftmost node in subtree at _Pnode
; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rax, QWORD PTR [rcx]
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL195@DrawActorT
$LN157@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1409 :         for (; 0 < _Off; --_Off) {

	dec	edx
	test	edx, edx
	jg	SHORT $LL159@DrawActorT
$LN158@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 364  : 				if (i > 0)

	test	r15d, r15d
	jle	SHORT $LN55@DrawActorT
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 1465 :     ImGuiWindow* window = g.CurrentWindow;

	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rax+16408]

; 1466 :     if (window->SkipItems)

	cmp	BYTE PTR [rax+240], 0
	jne	SHORT $LN478@DrawActorT

; 1467 :         return;
; 1468 : 
; 1469 :     // Those flags should eventually be configurable by the user
; 1470 :     // FIXME: We cannot g.Style.SeparatorTextBorderSize for thickness as it relates to SeparatorText() which is a decorated separator, not defaulting to 1.0f.
; 1471 :     ImGuiSeparatorFlags flags = (window->DC.LayoutType == ImGuiLayoutType_Horizontal) ? ImGuiSeparatorFlags_Vertical : ImGuiSeparatorFlags_Horizontal;
; 1472 :     flags |= ImGuiSeparatorFlags_SpanAllColumns; // NB: this only applies to legacy Columns() api as they relied on Separator() a lot.

	mov	eax, DWORD PTR [rax+492]
	neg	eax
	sbb	ecx, ecx
	add	ecx, 6

; 1473 :     SeparatorEx(flags, 1.0f);

	movaps	xmm1, xmm6
	call	?SeparatorEx@ImGui@@YAXHM@Z		; ImGui::SeparatorEx
$LN478@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 367  : 					ImGui::NextColumn();

	call	?NextColumn@ImGui@@YAXXZ		; ImGui::NextColumn
$LN55@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 186  :         return this->_Ptr->_Myval;

	lea	r14, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, r14

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r14+24], 16
	jb	SHORT $LN2783@DrawActorT

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r14]
$LN2783@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 370  : 				ImGui::Text(Iter->first.c_str());

	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text

; 371  : 				ImGui::NextColumn();

	call	?NextColumn@ImGui@@YAXXZ		; ImGui::NextColumn
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [r14+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	mov	rsi, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rsi
	sub	rax, rcx
	cmp	rax, 6
	jb	$LN2597@DrawActorT

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rax, r14

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r14+24], 16
	jb	SHORT $LN2784@DrawActorT

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rax, QWORD PTR [r14]
$LN2784@DrawActorT:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 6
	lea	r9, OFFSET FLAT:??_C@_06NFHLNPAF@Open?$CD?$CD@
	lea	rcx, QWORD PTR $T63[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T63[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T63[rbp-232], 16
	cmovae	rcx, QWORD PTR $T63[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_widgets.cpp

; 723  :     return ButtonEx(label, size_arg, ImGuiButtonFlags_None);

	xor	r8d, r8d
	lea	rdx, QWORD PTR $T2[rsp]
	call	?ButtonEx@ImGui@@YA_NPEBDAEBUImVec2@@H@Z ; ImGui::ButtonEx
	movzx	edi, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR $T63[rbp-232]
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN128@DrawActorT

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T63[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN140@DrawActorT

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN137@DrawActorT
$LN140@DrawActorT:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN128@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 372  : 				if (ImGui::Button(("Open##" + Iter->first).c_str()))

	test	dil, dil
	je	$LN1715@DrawActorT
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	movdqu	XMMWORD PTR $T55[rbp-256], xmm0
	mov	QWORD PTR $T55[rbp-240], r12

; 685  :         const auto _Count       = static_cast<size_type>(_Right_data._Mylast - _Right_data._Myfirst);

	mov	rdx, QWORD PTR [rbx+72]
	sub	rdx, QWORD PTR [rbx+64]

; 2065 :         if (_Count != 0) {

	je	SHORT $LN1754@DrawActorT

; 2006 :         if (_Newcapacity > max_size()) {

	cmp	rdx, rsi
	ja	$LN2598@DrawActorT

; 2008 :         }
; 2009 : 
; 2010 :         _Buy_raw(_Newcapacity);

	lea	rcx, QWORD PTR $T55[rbp-256]
	call	?_Buy_raw@?$vector@EV?$allocator@E@std@@@std@@AEAAX_K@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::_Buy_raw

; 2074 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

	mov	rsi, QWORD PTR $T55[rbp-256]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1825 :     auto _UFirst = _RANGES _Unwrap_iter<_Se>(_STD move(_First));

	mov	rdi, QWORD PTR [rbx+64]

; 1826 :     auto _ULast  = _RANGES _Unwrap_sent<_InIt>(_STD move(_Last));

	mov	rbx, QWORD PTR [rbx+72]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4533 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	r8, rbx
	sub	r8, rdi

; 4534 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rdi
	mov	rcx, rsi
	call	memmove
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2074 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

	sub	rsi, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1844 :                 _Dest += _ULast - _UFirst;

	add	rsi, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2074 :                 _My_data._Mylast = _Uninitialized_copy(_STD forward<_Valty>(_Val)..., _My_data._Myfirst, _Al);

	mov	QWORD PTR $T55[rbp-248], rsi
$LN1754@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 374  : 					UIAINBEditor::LoadAINBFile(Iter->second);

	lea	rcx, QWORD PTR $T55[rbp-256]
	call	?LoadAINBFile@UIAINBEditor@@YAXV?$vector@EV?$allocator@E@std@@@std@@@Z ; UIAINBEditor::LoadAINBFile
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3156 :         if (this == _STD addressof(_Right)) {

	cmp	r13, r14
	je	SHORT $LN487@DrawActorT

; 3157 :             return *this;
; 3158 :         }
; 3159 : 
; 3160 :         auto& _Al             = _Getal();
; 3161 :         const auto& _Right_al = _Right._Getal();
; 3162 :         if constexpr (_Choose_pocca_v<_Alty>) {
; 3163 :             if (_Al != _Right_al) {
; 3164 :                 auto&& _Alproxy       = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 3165 :                 auto&& _Right_alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Right_al);
; 3166 :                 _Container_proxy_ptr<_Alty> _New_proxy(_Right_alproxy, _Leave_proxy_unbound{}); // throws
; 3167 : 
; 3168 :                 if (_Right._Mypair._Myval2._Large_string_engaged()) {
; 3169 :                     const auto _New_size     = _Right._Mypair._Myval2._Mysize;
; 3170 :                     const auto _New_capacity = _Calculate_growth(_New_size, 0, _Right.max_size());
; 3171 :                     auto _Right_al_non_const = _Right_al;
; 3172 :                     const auto _New_ptr      = _Right_al_non_const.allocate(_New_capacity + 1); // throws
; 3173 : 
; 3174 :                     _Start_element_lifetimes(_Unfancy(_New_ptr), _New_size + 1);
; 3175 : 
; 3176 :                     _Traits::copy(_Unfancy(_New_ptr), _Unfancy(_Right._Mypair._Myval2._Bx._Ptr), _New_size + 1);
; 3177 :                     _Tidy_deallocate();
; 3178 :                     _Mypair._Myval2._Bx._Ptr = _New_ptr;
; 3179 :                     _Mypair._Myval2._Mysize  = _New_size;
; 3180 :                     _Mypair._Myval2._Myres   = _New_capacity;
; 3181 :                 } else {
; 3182 :                     _Copy_assign_val_from_small(_Right);
; 3183 :                 }
; 3184 : 
; 3185 :                 _Pocca(_Al, _Right_al);
; 3186 :                 _New_proxy._Bind(_Alproxy, _STD addressof(_Mypair._Myval2));
; 3187 :                 return *this;
; 3188 :             }
; 3189 :         }
; 3190 : 
; 3191 :         _Pocca(_Al, _Right_al);
; 3192 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, QWORD PTR [r14+16]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [r14+24], 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN491@DrawActorT

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r14, QWORD PTR [r14]
$LN491@DrawActorT:

; 3192 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rdx, r14
	mov	rcx, r13
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN487@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 376  : 					UIAINBEditor::SaveCallback = []()

	lea	rax, OFFSET FLAT:?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ ; `UIActorTool::DrawActorToolWindow'::`100'::<lambda_3>::<lambda_invoker_cdecl>
	mov	QWORD PTR ?SaveCallback@UIAINBEditor@@3P6AXXZEA, rax ; UIAINBEditor::SaveCallback
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 8102 :         if (ImGuiWindow* window = FindWindowByName(name))

	lea	rcx, OFFSET FLAT:??_C@_0M@KACDDJKN@AINB?5Editor@
	call	?FindWindowByName@ImGui@@YAPEAUImGuiWindow@@PEBD@Z ; ImGui::FindWindowByName
	test	rax, rax
	je	SHORT $LN1715@DrawActorT

; 8103 :             FocusWindow(window);

	xor	edx, edx
	mov	rcx, rax
	call	?FocusWindow@ImGui@@YAXPEAUImGuiWindow@@H@Z ; ImGui::FocusWindow
$LN1715@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 383  : 				ImGui::SameLine();

	movaps	xmm1, xmm8
	xorps	xmm0, xmm0
	call	?SameLine@ImGui@@YAXMM@Z		; ImGui::SameLine

; 359  : 			for (int i = 0; i < ActorPack.AINBs.size(); i++)

	inc	r15d
	movsxd	rax, r15d
	cmp	rax, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+104
	jb	$LL34@DrawActorT
$LN33@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_tables.cpp

; 4128 :     ImGuiOldColumns* columns = window->DC.CurrentColumns;

	mov	rax, QWORD PTR [rcx+16408]
	mov	rcx, QWORD PTR [rax+480]

; 4129 :     if (columns != NULL && columns->Count == columns_count && columns->Flags == flags)

	test	rcx, rcx
	je	SHORT $LN247@DrawActorT
	cmp	DWORD PTR [rcx+16], 1
	jne	SHORT $LN246@DrawActorT
	cmp	DWORD PTR [rcx+4], 0
	je	SHORT $LN247@DrawActorT
$LN246@DrawActorT:

; 4130 :         return;
; 4131 : 
; 4132 :     if (columns != NULL)
; 4133 :         EndColumns();

	call	?EndColumns@ImGui@@YAXXZ		; ImGui::EndColumns
$LN247@DrawActorT:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 396  : 	ImGui::End();

	call	?End@ImGui@@YAXXZ			; ImGui::End
$LN1@DrawActorT:

; 397  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+1152]
	mov	rbx, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rdi, QWORD PTR [r11+64]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm8, XMMWORD PTR [r11-32]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rbp
	ret	0
$LN137@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN2598@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2007 :             _Xlength();

	call	?_Xlength@?$vector@EV?$allocator@E@std@@@std@@CAXXZ ; std::vector<unsigned char,std::allocator<unsigned char> >::_Xlength
	int	3
$LN2597@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4917 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN2582@DrawActorT:

; 2621 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN2581@DrawActorT:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN2588@DrawActorT:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN2587@DrawActorT:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN2590@DrawActorT:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN2589@DrawActorT:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN2591@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	npad	1
$LN2594@DrawActorT:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2261 :             _Xran();

	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
	npad	1
$LN2593@DrawActorT:
	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
	npad	1
$LN2592@DrawActorT:
	call	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
	int	3
$LN2798@DrawActorT:
?DrawActorToolWindow@UIActorTool@@YAXXZ ENDP		; UIActorTool::DrawActorToolWindow
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$0@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$0
	lea	rcx, QWORD PTR $T27[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$3@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$3
	lea	rcx, QWORD PTR $T18[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$6@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$6
	lea	rcx, QWORD PTR $T76[rdx]
	jmp	??1Result@ZStdFile@@QEAA@XZ
?dtor$6@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$10@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$10
	lea	rcx, QWORD PTR $T41[rdx]
	jmp	??1BymlFile@@QEAA@XZ
?dtor$10@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$11@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$11
	lea	rcx, QWORD PTR $T40[rdx]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@XZ
?dtor$11@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$12@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$12
	lea	rcx, QWORD PTR $T33[rdx]
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
?dtor$12@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$13@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$13
	lea	rcx, QWORD PTR $T25[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$13@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$14@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$14
	mov	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$14@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$16@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$16
	lea	rcx, QWORD PTR $T24[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$16@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$17@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$17
	mov	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$17@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$19@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$19
	lea	rcx, QWORD PTR ActorName$66[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$19@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$19
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$21@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$21
	lea	rcx, QWORD PTR NodeHandler$60[rdx]
	jmp	??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::~_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
?dtor$21@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$21
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$22@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$22
	mov	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$22@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$25@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$25
	lea	rcx, QWORD PTR Extension$64[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$25@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$25
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$26@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$26
	lea	rcx, QWORD PTR $T23[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$26@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$26
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$27@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$27
	lea	rcx, QWORD PTR $T47[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$27@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$27
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$28@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$28
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$28@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$28
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$29@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$29
	lea	rcx, QWORD PTR $T59[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$29@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$29
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$30@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$30
	lea	rcx, QWORD PTR UnprefixedName$72[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$30@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$30
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$31@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$31
	lea	rcx, QWORD PTR UnprefixedOldName$71[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$31@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$31
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$34@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$34
	lea	rcx, QWORD PTR $T37[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$34@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$34
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$35@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$35
	lea	rcx, QWORD PTR NewName$78[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$35@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$35
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$36@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$36
	lea	rcx, QWORD PTR Category$44[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$36@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$36
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$37@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$37
	lea	rcx, QWORD PTR $T32[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$37@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$37
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$38@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$38
	lea	rcx, QWORD PTR $T36[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$38@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$38
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$39@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$39
	lea	rcx, QWORD PTR $T39[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$39@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$39
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$40@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$40
	lea	rcx, QWORD PTR $T38[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$40@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$40
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$41@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$41
	lea	rcx, QWORD PTR $T14[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$41@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$41
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$42@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$42
	lea	rcx, QWORD PTR $T58[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$42@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$42
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$45@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$45
	lea	rcx, QWORD PTR $T35[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$45@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$45
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$47@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$47
	lea	rcx, QWORD PTR $T29[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$47@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$47
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$48@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$48
	lea	rcx, QWORD PTR NodeHandler$73[rdx]
	jmp	??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::~_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
?dtor$48@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$48
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$49@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$49
	mov	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$49@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$49
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$52@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$52
	lea	rcx, QWORD PTR NodeHandler$56[rdx]
	jmp	??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::~_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
?dtor$52@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$52
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$53@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$53
	mov	rcx, QWORD PTR $T34[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$53@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$53
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
<end>$L4$1$ = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
<end>$L6$1$ = 72
$T6 = 72
$T7 = 72
$T8 = 72
$T9 = 72
_Loc$10 = 80
$T11 = 80
$T12 = 80
$T13 = 80
$T14 = 80
$T15 = 80
$T16 = 80
$T17 = 80
$T18 = 80
$T19 = 112
$T20 = 116
$T21 = 120
$T22 = 120
$T23 = 120
$T24 = 120
$T25 = 120
$T26 = 120
$T27 = 120
<end>$L7$1$ = 152
<begin>$L4$1$ = 160
$T28 = 168
$T29 = 168
$T30 = 168
$T31 = 168
$T32 = 168
$T33 = 168
$T34 = 224
$T35 = 232
$T36 = 232
$T37 = 264
$T38 = 296
$T39 = 328
$T40 = 368
$T41 = 624
$T42 = 848
$T43 = 848
Category$44 = 848
$T45 = 848
$T46 = 848
$T47 = 848
$T48 = 848
$T49 = 848
$T50 = 848
$T51 = 848
$T52 = 848
Count$1$ = 880
_UWhere$53 = 880
$T54 = 888
$T55 = 888
NodeHandler$56 = 888
$T57 = 888
$T58 = 888
$T59 = 888
NodeHandler$60 = 888
$T61 = 888
$T62 = 888
$T63 = 920
Extension$64 = 920
$T65 = 920
ActorName$66 = 920
$T67 = 920
$T68 = 920
$T69 = 920
$T70 = 920
UnprefixedOldName$71 = 952
UnprefixedName$72 = 984
NodeHandler$73 = 1016
$T74 = 1016
$T75 = 1016
$T76 = 1016
Id$77 = 1048
NewName$78 = 1056
_Buff$79 = 1088
__$ArrayPad$ = 1112
?dtor$56@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA PROC ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$56
	lea	rcx, QWORD PTR $T63[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$56@?0??DrawActorToolWindow@UIActorTool@@YAXXZ@4HA ENDP ; `UIActorTool::DrawActorToolWindow'::`1'::dtor$56
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\SARC.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\SARC.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\SARC.h
;	COMDAT ??0SarcFile@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0SarcFile@@QEAA@XZ PROC				; SarcFile::SarcFile, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\SARC.h

; 23   : 	bool Loaded = false;

	mov	BYTE PTR [rcx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	QWORD PTR [rcx+24], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\SARC.h

; 33   : 	SarcFile() {}

	mov	rax, rcx
	ret	0
??0SarcFile@@QEAA@XZ ENDP				; SarcFile::SarcFile
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
;	COMDAT ??__FActorPackFilter@UIActorTool@@YAXXZ
text$di	SEGMENT
??__FActorPackFilter@UIActorTool@@YAXXZ PROC		; UIActorTool::`dynamic atexit destructor for 'ActorPackFilter'', COMDAT

; 17   : std::string UIActorTool::ActorPackFilter = "";

	lea	rcx, OFFSET FLAT:??__FActorPackFilter@UIActorTool@@YAXXZ ; UIActorTool::`dynamic atexit destructor for 'ActorPackFilter''
	jmp	atexit
??__FActorPackFilter@UIActorTool@@YAXXZ ENDP		; UIActorTool::`dynamic atexit destructor for 'ActorPackFilter''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??__FActorPackFilter@UIActorTool@@YAXXZ
text$yd	SEGMENT
??__FActorPackFilter@UIActorTool@@YAXXZ PROC		; UIActorTool::`dynamic atexit destructor for 'ActorPackFilter'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR ?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN15@dynamic
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR ?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN27@dynamic

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN24@dynamic

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN27@dynamic:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN15@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqa	XMMWORD PTR ?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16, xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR ?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A, 0
	add	rsp, 40					; 00000028H
	ret	0
$LN24@dynamic:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN33@dynamic:
??__FActorPackFilter@UIActorTool@@YAXXZ ENDP		; UIActorTool::`dynamic atexit destructor for 'ActorPackFilter''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\SARC.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
;	COMDAT ??__EActorPack@UIActorTool@@YAXXZ
text$di	SEGMENT
??__EActorPack@UIActorTool@@YAXXZ PROC			; UIActorTool::`dynamic initializer for 'ActorPack'', COMDAT

; 18   : UIActorTool::ActorPackStruct UIActorTool::ActorPack;

	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A ; UIActorTool::ActorPack
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+32, xmm0
	xorps	xmm1, xmm1

; 2293 :     size_type _Mysize = 0; // current length of string

	movdqa	XMMWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+48, xmm1

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+32
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	ebx, ebx
	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64, rbx
	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+72, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64, rax

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+80, rbx
	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+88, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+80, rax

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+96, rbx
	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+104, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rbx+88]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+96, rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	movdqa	XMMWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+112, xmm0
	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+128, rbx
	mov	BYTE PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+136, bl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\SARC.h

; 23   : 	bool Loaded = false;

	mov	BYTE PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+144, bl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+152, rbx
	movdqa	XMMWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+160, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 18   : UIActorTool::ActorPackStruct UIActorTool::ActorPack;

	lea	rcx, OFFSET FLAT:??__FActorPack@UIActorTool@@YAXXZ ; UIActorTool::`dynamic atexit destructor for 'ActorPack''
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	atexit
??__EActorPack@UIActorTool@@YAXXZ ENDP			; UIActorTool::`dynamic initializer for 'ActorPack''
text$di	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
?dtor$0@?0???__EActorPack@UIActorTool@@YAXXZ@4HA PROC	; `UIActorTool::`dynamic initializer for 'ActorPack'''::`1'::dtor$0
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A ; UIActorTool::ActorPack
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???__EActorPack@UIActorTool@@YAXXZ@4HA ENDP	; `UIActorTool::`dynamic initializer for 'ActorPack'''::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
?dtor$1@?0???__EActorPack@UIActorTool@@YAXXZ@4HA PROC	; `UIActorTool::`dynamic initializer for 'ActorPack'''::`1'::dtor$1
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A ; UIActorTool::ActorPack
	add	rcx, 32					; 00000020H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???__EActorPack@UIActorTool@@YAXXZ@4HA ENDP	; `UIActorTool::`dynamic initializer for 'ActorPack'''::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
?dtor$2@?0???__EActorPack@UIActorTool@@YAXXZ@4HA PROC	; `UIActorTool::`dynamic initializer for 'ActorPack'''::`1'::dtor$2
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A ; UIActorTool::ActorPack
	add	rcx, 64					; 00000040H
	jmp	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ
?dtor$2@?0???__EActorPack@UIActorTool@@YAXXZ@4HA ENDP	; `UIActorTool::`dynamic initializer for 'ActorPack'''::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
?dtor$3@?0???__EActorPack@UIActorTool@@YAXXZ@4HA PROC	; `UIActorTool::`dynamic initializer for 'ActorPack'''::`1'::dtor$3
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A ; UIActorTool::ActorPack
	add	rcx, 80					; 00000050H
	jmp	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ
?dtor$3@?0???__EActorPack@UIActorTool@@YAXXZ@4HA ENDP	; `UIActorTool::`dynamic initializer for 'ActorPack'''::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??__FActorPack@UIActorTool@@YAXXZ
text$yd	SEGMENT
??__FActorPack@UIActorTool@@YAXXZ PROC			; UIActorTool::`dynamic atexit destructor for 'ActorPack'', COMDAT
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+152
	call	?_Tidy@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@AEAAXXZ ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::_Tidy
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+112
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+96
	call	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+80
	lea	rdx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+80
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+80
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+80
	mov	edx, 288				; 00000120H
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	lea	rdx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64
	mov	edx, 288				; 00000120H
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+32
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A ; UIActorTool::ActorPack
	add	rsp, 40					; 00000028H
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??__FActorPack@UIActorTool@@YAXXZ ENDP			; UIActorTool::`dynamic atexit destructor for 'ActorPack''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\SARC.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0ActorPackStruct@UIActorTool@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 48
this$ = 48
??0ActorPackStruct@UIActorTool@@QEAA@XZ PROC		; UIActorTool::ActorPackStruct::ActorPackStruct, COMDAT
$LN184:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	lea	rdi, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A ; UIActorTool::ActorPack
	mov	QWORD PTR this$[rsp], rdi
	xorps	xmm0, xmm0
	movups	XMMWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A, xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	xor	ebx, ebx
	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+16, rbx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+24, rbx

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	rcx, rdi
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+32, xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+48, rbx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+56, rbx

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+32
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64, rbx
	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+72, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+64, rax

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+80, rbx
	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+88, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+80, rax

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+96, rbx
	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+104, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rbx+88]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+96, rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	movdqa	XMMWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+112, xmm0
	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+128, rbx
	mov	BYTE PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+136, bl
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\SARC.h

; 23   : 	bool Loaded = false;

	mov	BYTE PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+144, bl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+152, rbx
	movdqa	XMMWORD PTR ?ActorPack@UIActorTool@@3UActorPackStruct@1@A+160, xmm0
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0ActorPackStruct@UIActorTool@@QEAA@XZ ENDP		; UIActorTool::ActorPackStruct::ActorPackStruct
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$dead$ = 48
this$ = 48
?dtor$0@?0???0ActorPackStruct@UIActorTool@@QEAA@XZ@4HA PROC ; `UIActorTool::ActorPackStruct::ActorPackStruct'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0ActorPackStruct@UIActorTool@@QEAA@XZ@4HA ENDP ; `UIActorTool::ActorPackStruct::ActorPackStruct'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$dead$ = 48
this$ = 48
?dtor$1@?0???0ActorPackStruct@UIActorTool@@QEAA@XZ@4HA PROC ; `UIActorTool::ActorPackStruct::ActorPackStruct'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 32					; 00000020H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???0ActorPackStruct@UIActorTool@@QEAA@XZ@4HA ENDP ; `UIActorTool::ActorPackStruct::ActorPackStruct'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$dead$ = 48
this$ = 48
?dtor$2@?0???0ActorPackStruct@UIActorTool@@QEAA@XZ@4HA PROC ; `UIActorTool::ActorPackStruct::ActorPackStruct'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 64					; 00000040H
	jmp	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ
?dtor$2@?0???0ActorPackStruct@UIActorTool@@QEAA@XZ@4HA ENDP ; `UIActorTool::ActorPackStruct::ActorPackStruct'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$dead$ = 48
this$ = 48
?dtor$3@?0???0ActorPackStruct@UIActorTool@@QEAA@XZ@4HA PROC ; `UIActorTool::ActorPackStruct::ActorPackStruct'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 80					; 00000050H
	jmp	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ
?dtor$3@?0???0ActorPackStruct@UIActorTool@@QEAA@XZ@4HA ENDP ; `UIActorTool::ActorPackStruct::ActorPackStruct'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1ActorPackStruct@UIActorTool@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1ActorPackStruct@UIActorTool@@QEAA@XZ PROC		; UIActorTool::ActorPackStruct::~ActorPackStruct, COMDAT
$LN128:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	add	rcx, 152				; 00000098H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@AEAAXXZ ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::_Tidy
	lea	rcx, QWORD PTR [rdi+112]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+96]
	call	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rdi+80]
	lea	rdx, QWORD PTR [rdi+80]
	lea	rcx, QWORD PTR [rdi+80]
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rdi+80]
	mov	edx, 288				; 00000120H
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rdi+64]
	lea	rdx, QWORD PTR [rdi+64]
	lea	rcx, QWORD PTR [rdi+64]
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rdi+64]
	mov	edx, 288				; 00000120H
	call	??3@YAXPEAX_K@Z				; operator delete
	lea	rcx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rcx, rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1ActorPackStruct@UIActorTool@@QEAA@XZ ENDP		; UIActorTool::ActorPackStruct::~ActorPackStruct
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >, COMDAT
$LN55:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 288				; 00000120H
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAA@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >, COMDAT
	jmp	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
;	COMDAT ??__FActorList@UIActorTool@@YAXXZ
text$di	SEGMENT
??__FActorList@UIActorTool@@YAXXZ PROC			; UIActorTool::`dynamic atexit destructor for 'ActorList'', COMDAT

; 19   : std::vector<std::string> UIActorTool::ActorList;

	lea	rcx, OFFSET FLAT:??__FActorList@UIActorTool@@YAXXZ ; UIActorTool::`dynamic atexit destructor for 'ActorList''
	jmp	atexit
??__FActorList@UIActorTool@@YAXXZ ENDP			; UIActorTool::`dynamic atexit destructor for 'ActorList''
text$di	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??__FActorList@UIActorTool@@YAXXZ
text$yd	SEGMENT
??__FActorList@UIActorTool@@YAXXZ PROC			; UIActorTool::`dynamic atexit destructor for 'ActorList'', COMDAT

; 767  :         _Tidy();

	lea	rcx, OFFSET FLAT:?ActorList@UIActorTool@@3V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@A ; UIActorTool::ActorList
	jmp	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
??__FActorList@UIActorTool@@YAXXZ ENDP			; UIActorTool::`dynamic atexit destructor for 'ActorList''
text$yd	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
;	COMDAT ?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z
_TEXT	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z PROC	; DisplayBymlNode, COMDAT

; 22   : {

$LN1605:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-768]
	sub	rsp, 1024				; 00000400H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	rsi, rdx
	mov	r14, rcx
	xor	r13d, r13d

; 23   : 	ImGui::Text((Node->GetKey() + ((Node->GetType() == BymlFile::Type::Dictionary || Node->GetType() == BymlFile::Type::Array) ? ":" : "")).c_str());

	movzx	eax, BYTE PTR [rcx+24]
	add	al, 64					; 00000040H
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	lea	rcx, OFFSET FLAT:??_C@_01JLIPDDHJ@?3@
	cmp	al, 1
	cmovbe	rdx, rcx
	lea	rbx, QWORD PTR [r14+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4938 :     const auto _Left_size  = _Left.size();

	mov	r8, QWORD PTR [rbx+16]

; 400  :             return __builtin_strlen(_First);

	mov	rcx, -1
$LL1590@DisplayBym:
	inc	rcx
	cmp	BYTE PTR [rdx+rcx], r13b
	jne	SHORT $LL1590@DisplayBym

; 4940 :     if (_Left.max_size() - _Left_size < _Right_size) {

	mov	rdi, 9223372036854775807		; 7fffffffffffffffH
	mov	rax, rdi
	sub	rax, r8
	cmp	rax, rcx
	jb	$LN1595@DisplayBym

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	r9, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN1586@DisplayBym

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r9, QWORD PTR [rbx]
$LN1586@DisplayBym:

; 4944 :     return {_String_constructor_concat_tag{}, _Left, _Left.c_str(), _Left_size, _Right, _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rdx
	mov	QWORD PTR [rsp+32], r8
	lea	rcx, QWORD PTR $T39[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T39[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T39[rbp-232], 16
	cmovae	rcx, QWORD PTR $T39[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 23   : 	ImGui::Text((Node->GetKey() + ((Node->GetType() == BymlFile::Type::Dictionary || Node->GetType() == BymlFile::Type::Array) ? ":" : "")).c_str());

	call	?Text@ImGui@@YAXPEBDZZ			; ImGui::Text
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T39[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN99@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T39[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN111@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN111@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN111@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN99@DisplayBym:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 25   : 	ImGui::NextColumn();

	call	?NextColumn@ImGui@@YAXXZ		; ImGui::NextColumn

; 26   : 
; 27   : 	switch (Node->GetType())

	movzx	edx, BYTE PTR [r14+24]
	lea	eax, DWORD PTR [rdx-160]
	cmp	eax, 54					; 00000036H
	ja	$LN1460@DisplayBym
	cdqe
	lea	r8, OFFSET FLAT:__ImageBase
	movzx	eax, BYTE PTR $LN1588@DisplayBym[r8+rax]
	mov	ecx, DWORD PTR $LN1589@DisplayBym[r8+rax*4]
	add	rcx, r8
	jmp	rcx
$LN9@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1889 :         return _My_data._Myfirst[_Pos];

	mov	r15, QWORD PTR [r14]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 36   : 		ImGui::Checkbox(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), reinterpret_cast<bool*>(&Node->m_Value[0]));

	mov	edx, DWORD PTR [rsi]
	lea	eax, DWORD PTR [rdx+1]
	mov	DWORD PTR [rsi], eax
	lea	rcx, QWORD PTR $T37[rbp-256]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	mov	r12, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	sub	rdi, rcx
	cmp	rdi, 2
	jb	$LN1596@DisplayBym

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN1391@DisplayBym

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rbx]
$LN1391@DisplayBym:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rbx
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T35[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 3292 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 1
	lea	rdx, OFFSET FLAT:??_C@_01IDAFKMJL@_@
	lea	rcx, QWORD PTR $T35[rbp-256]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T8[rsp], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T8[rsp+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 36   : 		ImGui::Checkbox(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), reinterpret_cast<bool*>(&Node->m_Value[0]));

	mov	QWORD PTR [rax+16], r13
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, r12
	lea	r8, QWORD PTR $T8[rsp]
	lea	rcx, QWORD PTR $T25[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T25[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T25[rbp-232], 16
	cmovae	rcx, QWORD PTR $T25[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 36   : 		ImGui::Checkbox(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), reinterpret_cast<bool*>(&Node->m_Value[0]));

	mov	rdx, r15
	call	?Checkbox@ImGui@@YA_NPEBDPEA_N@Z	; ImGui::Checkbox
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T25[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T8[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T35[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	lea	rcx, QWORD PTR $T37[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 37   : 		break;

	jmp	$DisplayChilds$1606
$LN10@DisplayBym:

; 38   : 	}
; 39   : 	case BymlFile::Type::Float:
; 40   : 	{
; 41   : 		ImGui::PushItemWidth(ImGui::GetColumnWidth() - ImGui::GetStyle().FramePadding.x);

	mov	ecx, -1
	call	?GetColumnWidth@ImGui@@YAMH@Z		; ImGui::GetColumnWidth
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	subss	xmm0, DWORD PTR [rax+14612]
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth

; 42   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_Float, Node->m_Value.data());

	mov	r15, QWORD PTR [r14]
	mov	edx, DWORD PTR [rsi]
	lea	eax, DWORD PTR [rdx+1]
	mov	DWORD PTR [rsi], eax
	lea	rcx, QWORD PTR $T26[rbp-256]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	mov	r12, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	sub	rdi, rcx
	cmp	rdi, 2
	jb	$LN1597@DisplayBym

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN213@DisplayBym

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rbx]
$LN213@DisplayBym:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rbx
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T10[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR $T10[rsp+16]
	mov	rdx, QWORD PTR $T10[rbp-232]
	mov	rax, rdx
	sub	rax, rcx

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rax, 1
	jb	SHORT $LN226@DisplayBym

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR $T10[rsp+16], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T10[rsp]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR $T10[rsp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	WORD PTR [rax+rcx], 95			; 0000005fH

; 3277 :             return *this;

	lea	rax, QWORD PTR $T10[rsp]
	jmp	SHORT $LN225@DisplayBym
$LN226@DisplayBym:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], 1
	lea	r9, OFFSET FLAT:??_C@_01IDAFKMJL@_@
	mov	edx, 1
	lea	rcx, QWORD PTR $T10[rsp]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
$LN225@DisplayBym:

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T7[rsp], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T7[rsp+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 42   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_Float, Node->m_Value.data());

	mov	QWORD PTR [rax+16], r13
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, r12
	lea	r8, QWORD PTR $T7[rsp]
	lea	rcx, QWORD PTR $T15[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T15[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T15[rbp-232], 16
	cmovae	rcx, QWORD PTR $T15[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 42   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_Float, Node->m_Value.data());

	mov	DWORD PTR [rsp+48], r13d
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], r13
	xor	r9d, r9d
	mov	r8, r15
	lea	edx, QWORD PTR [r9+8]
	call	?InputScalar@ImGui@@YA_NPEBDHPEAXPEBX20H@Z ; ImGui::InputScalar
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T15[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN301@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T15[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN313@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN313@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN313@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN301@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T15[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T15[rbp-256], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T7[rsp+24]
	cmp	rdx, 16
	jb	SHORT $LN330@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T7[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN342@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN342@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN342@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN330@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T10[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN359@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T10[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN371@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN371@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN371@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN359@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T10[rsp+16], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T10[rsp], 0

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR $T26[rbp-232]
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN388@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T26[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN400@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN400@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN400@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN388@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T26[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T26[rbp-256], 0
$LN1593@DisplayBym:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	r8, QWORD PTR [rcx+16408]
	movsxd	rdx, DWORD PTR [r8+512]
	mov	rax, QWORD PTR [r8+520]
	mov	ecx, DWORD PTR [rax+rdx*4-4]
	mov	DWORD PTR [r8+500], ecx
	lea	eax, DWORD PTR [rdx-1]
	mov	DWORD PTR [r8+512], eax
	jmp	$DisplayChilds$1606
$LN11@DisplayBym:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 48   : 		ImGui::PushItemWidth(ImGui::GetColumnWidth() - ImGui::GetStyle().FramePadding.x);

	mov	ecx, -1
	call	?GetColumnWidth@ImGui@@YAMH@Z		; ImGui::GetColumnWidth
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	subss	xmm0, DWORD PTR [rax+14612]
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth

; 49   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_Double, Node->m_Value.data());

	mov	r15, QWORD PTR [r14]
	mov	edx, DWORD PTR [rsi]
	lea	eax, DWORD PTR [rdx+1]
	mov	DWORD PTR [rsi], eax
	lea	rcx, QWORD PTR $T27[rbp-256]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	mov	r12, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	sub	rdi, rcx
	cmp	rdi, 2
	jb	$LN1598@DisplayBym

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN425@DisplayBym

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rbx]
$LN425@DisplayBym:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rbx
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T11[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR $T11[rbp-240]
	mov	rdx, QWORD PTR $T11[rbp-232]
	mov	rax, rdx
	sub	rax, rcx

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rax, 1
	jb	SHORT $LN438@DisplayBym

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR $T11[rbp-240], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T11[rbp-256]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR $T11[rbp-256]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	WORD PTR [rax+rcx], 95			; 0000005fH

; 3277 :             return *this;

	lea	rax, QWORD PTR $T11[rbp-256]
	jmp	SHORT $LN437@DisplayBym
$LN438@DisplayBym:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], 1
	lea	r9, OFFSET FLAT:??_C@_01IDAFKMJL@_@
	mov	edx, 1
	lea	rcx, QWORD PTR $T11[rbp-256]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
$LN437@DisplayBym:

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T6[rsp], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T6[rsp+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 49   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_Double, Node->m_Value.data());

	mov	QWORD PTR [rax+16], r13
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, r12
	lea	r8, QWORD PTR $T6[rsp]
	lea	rcx, QWORD PTR $T16[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T16[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T16[rbp-232], 16
	cmovae	rcx, QWORD PTR $T16[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 49   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_Double, Node->m_Value.data());

	mov	DWORD PTR [rsp+48], r13d
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], r13
	xor	r9d, r9d
	mov	r8, r15
	lea	edx, QWORD PTR [r9+9]
	call	?InputScalar@ImGui@@YA_NPEBDHPEAXPEBX20H@Z ; ImGui::InputScalar
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T16[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN513@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T16[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN525@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN525@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN525@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN513@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T16[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T16[rbp-256], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T6[rsp+24]
	cmp	rdx, 16
	jb	SHORT $LN542@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T6[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN554@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN554@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN554@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN542@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T11[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN571@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T11[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN583@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN583@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN583@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN571@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T11[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T11[rbp-256], 0

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR $T27[rbp-232]
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN600@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T27[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN612@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN612@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN612@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN600@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T27[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T27[rbp-256], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 51   : 		break;

	jmp	$LN1593@DisplayBym
$LN12@DisplayBym:

; 52   : 	}
; 53   : 	case BymlFile::Type::Int32:
; 54   : 	{
; 55   : 		ImGui::PushItemWidth(ImGui::GetColumnWidth() - ImGui::GetStyle().FramePadding.x);

	mov	ecx, -1
	call	?GetColumnWidth@ImGui@@YAMH@Z		; ImGui::GetColumnWidth
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	subss	xmm0, DWORD PTR [rax+14612]
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth

; 56   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_S32, Node->m_Value.data());

	mov	r15, QWORD PTR [r14]
	mov	edx, DWORD PTR [rsi]
	lea	eax, DWORD PTR [rdx+1]
	mov	DWORD PTR [rsi], eax
	lea	rcx, QWORD PTR $T28[rbp-256]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	mov	r12, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	sub	rdi, rcx
	cmp	rdi, 2
	jb	$LN1599@DisplayBym

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN637@DisplayBym

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rbx]
$LN637@DisplayBym:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rbx
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T12[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR $T12[rbp-240]
	mov	rdx, QWORD PTR $T12[rbp-232]
	mov	rax, rdx
	sub	rax, rcx

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rax, 1
	jb	SHORT $LN650@DisplayBym

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR $T12[rbp-240], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T12[rbp-256]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR $T12[rbp-256]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	WORD PTR [rax+rcx], 95			; 0000005fH

; 3277 :             return *this;

	lea	rax, QWORD PTR $T12[rbp-256]
	jmp	SHORT $LN649@DisplayBym
$LN650@DisplayBym:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], 1
	lea	r9, OFFSET FLAT:??_C@_01IDAFKMJL@_@
	mov	edx, 1
	lea	rcx, QWORD PTR $T12[rbp-256]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
$LN649@DisplayBym:

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T5[rsp], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T5[rsp+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 56   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_S32, Node->m_Value.data());

	mov	QWORD PTR [rax+16], r13
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, r12
	lea	r8, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR $T17[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T17[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T17[rbp-232], 16
	cmovae	rcx, QWORD PTR $T17[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 56   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_S32, Node->m_Value.data());

	mov	DWORD PTR [rsp+48], r13d
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], r13
	xor	r9d, r9d
	mov	r8, r15
	lea	edx, QWORD PTR [r9+4]
	call	?InputScalar@ImGui@@YA_NPEBDHPEAXPEBX20H@Z ; ImGui::InputScalar
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T17[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN725@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T17[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN737@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN737@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN737@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN725@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T17[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T17[rbp-256], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T5[rsp+24]
	cmp	rdx, 16
	jb	SHORT $LN754@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T5[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN766@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN766@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN766@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN754@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T12[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN783@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T12[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN795@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN795@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN795@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN783@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T12[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T12[rbp-256], 0

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR $T28[rbp-232]
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN812@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T28[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN824@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN824@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN824@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN812@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T28[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T28[rbp-256], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 58   : 		break;

	jmp	$LN1593@DisplayBym
$LN13@DisplayBym:

; 59   : 	}
; 60   : 	case BymlFile::Type::UInt32:
; 61   : 	{
; 62   : 		ImGui::PushItemWidth(ImGui::GetColumnWidth() - ImGui::GetStyle().FramePadding.x);

	mov	ecx, -1
	call	?GetColumnWidth@ImGui@@YAMH@Z		; ImGui::GetColumnWidth
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	subss	xmm0, DWORD PTR [rax+14612]
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth

; 63   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_U32, Node->m_Value.data());

	mov	r15, QWORD PTR [r14]
	mov	edx, DWORD PTR [rsi]
	lea	eax, DWORD PTR [rdx+1]
	mov	DWORD PTR [rsi], eax
	lea	rcx, QWORD PTR $T29[rbp-256]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	mov	r12, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	sub	rdi, rcx
	cmp	rdi, 2
	jb	$LN1600@DisplayBym

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN849@DisplayBym

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rbx]
$LN849@DisplayBym:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rbx
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T13[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR $T13[rbp-240]
	mov	rdx, QWORD PTR $T13[rbp-232]
	mov	rax, rdx
	sub	rax, rcx

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rax, 1
	jb	SHORT $LN862@DisplayBym

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR $T13[rbp-240], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T13[rbp-256]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR $T13[rbp-256]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	WORD PTR [rax+rcx], 95			; 0000005fH

; 3277 :             return *this;

	lea	rax, QWORD PTR $T13[rbp-256]
	jmp	SHORT $LN861@DisplayBym
$LN862@DisplayBym:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], 1
	lea	r9, OFFSET FLAT:??_C@_01IDAFKMJL@_@
	mov	edx, 1
	lea	rcx, QWORD PTR $T13[rbp-256]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
$LN861@DisplayBym:

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T4[rsp], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T4[rsp+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 63   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_U32, Node->m_Value.data());

	mov	QWORD PTR [rax+16], r13
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, r12
	lea	r8, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR $T18[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T18[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T18[rbp-232], 16
	cmovae	rcx, QWORD PTR $T18[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 63   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_U32, Node->m_Value.data());

	mov	DWORD PTR [rsp+48], r13d
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], r13
	xor	r9d, r9d
	mov	r8, r15
	lea	edx, QWORD PTR [r9+5]
	call	?InputScalar@ImGui@@YA_NPEBDHPEAXPEBX20H@Z ; ImGui::InputScalar
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T18[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN937@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T18[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN949@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN949@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN949@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN937@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T18[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T18[rbp-256], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T4[rsp+24]
	cmp	rdx, 16
	jb	SHORT $LN966@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T4[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN978@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN978@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN978@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN966@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T13[rbp-232]
	cmp	rdx, 16
	jb	SHORT $LN995@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T13[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN1007@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN1007@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN1007@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN995@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T13[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T13[rbp-256], 0

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR $T29[rbp-232]
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN1024@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T29[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN1036@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN1036@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN1036@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN1024@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T29[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T29[rbp-256], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 65   : 		break;

	jmp	$LN1593@DisplayBym
$LN14@DisplayBym:

; 66   : 	}
; 67   : 	case BymlFile::Type::Int64:
; 68   : 	{
; 69   : 		ImGui::PushItemWidth(ImGui::GetColumnWidth() - ImGui::GetStyle().FramePadding.x);

	mov	ecx, -1
	call	?GetColumnWidth@ImGui@@YAMH@Z		; ImGui::GetColumnWidth
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	subss	xmm0, DWORD PTR [rax+14612]
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth

; 70   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_S64, Node->m_Value.data());

	mov	r15, QWORD PTR [r14]
	mov	edx, DWORD PTR [rsi]
	lea	eax, DWORD PTR [rdx+1]
	mov	DWORD PTR [rsi], eax
	lea	rcx, QWORD PTR $T30[rbp-256]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	mov	r12, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	sub	rdi, rcx
	cmp	rdi, 2
	jb	$LN1601@DisplayBym

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN1061@DisplayBym

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rbx]
$LN1061@DisplayBym:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rbx
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T14[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 3270 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

	mov	rcx, QWORD PTR $T14[rbp-240]
	mov	rdx, QWORD PTR $T14[rbp-232]
	mov	rax, rdx
	sub	rax, rcx

; 3271 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

	cmp	rax, 1
	jb	SHORT $LN1074@DisplayBym

; 3272 :             _ASAN_STRING_MODIFY(*this, _Old_size, _Old_size + _Count);
; 3273 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

	lea	rax, QWORD PTR [rcx+1]
	mov	QWORD PTR $T14[rbp-240], rax

; 2226 :         value_type* _Result = _Bx._Buf;

	lea	rax, QWORD PTR $T14[rbp-256]

; 2227 :         if (_Large_string_engaged()) {

	cmp	rdx, 16
	cmovae	rax, QWORD PTR $T14[rbp-256]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

	mov	WORD PTR [rax+rcx], 95			; 0000005fH

; 3277 :             return *this;

	lea	rax, QWORD PTR $T14[rbp-256]
	jmp	SHORT $LN1073@DisplayBym
$LN1074@DisplayBym:

; 3278 :         }
; 3279 : 
; 3280 :         return _Reallocate_grow_by(

	mov	QWORD PTR [rsp+32], 1
	lea	r9, OFFSET FLAT:??_C@_01IDAFKMJL@_@
	mov	edx, 1
	lea	rcx, QWORD PTR $T14[rbp-256]
	call	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
$LN1073@DisplayBym:

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T3[rsp], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T3[rsp+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 70   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_S64, Node->m_Value.data());

	mov	QWORD PTR [rax+16], r13
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, r12
	lea	r8, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR $T19[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T19[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T19[rbp-232], 16
	cmovae	rcx, QWORD PTR $T19[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 70   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_S64, Node->m_Value.data());

	mov	DWORD PTR [rsp+48], r13d
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], r13
	xor	r9d, r9d
	mov	r8, r15
	lea	edx, QWORD PTR [r9+6]
	call	?InputScalar@ImGui@@YA_NPEBDHPEAXPEBX20H@Z ; ImGui::InputScalar
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	r8, QWORD PTR $T19[rbp-232]
	cmp	r8, 16
	jb	SHORT $LN1141@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR $T19[rbp-256]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN1141@DisplayBym:

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T19[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T19[rbp-256], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	r8, QWORD PTR $T3[rsp+24]
	cmp	r8, 16
	jb	SHORT $LN1149@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR $T3[rsp]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
	npad	1
$LN1149@DisplayBym:

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	r8, QWORD PTR $T14[rbp-232]
	cmp	r8, 16
	jb	SHORT $LN1157@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR $T14[rbp-256]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN1157@DisplayBym:

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T14[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T14[rbp-256], 0

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	r8, QWORD PTR $T30[rbp-232]
	cmp	r8, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN1165@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR $T30[rbp-256]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN1165@DisplayBym:

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T30[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T30[rbp-256], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 72   : 		break;

	jmp	$LN1593@DisplayBym
$LN15@DisplayBym:

; 73   : 	}
; 74   : 	case BymlFile::Type::UInt64:
; 75   : 	{
; 76   : 		ImGui::PushItemWidth(ImGui::GetColumnWidth() - ImGui::GetStyle().FramePadding.x);

	mov	ecx, -1
	call	?GetColumnWidth@ImGui@@YAMH@Z		; ImGui::GetColumnWidth
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	subss	xmm0, DWORD PTR [rax+14612]
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth

; 77   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_U64, Node->m_Value.data());

	mov	r15, QWORD PTR [r14]
	mov	edx, DWORD PTR [rsi]
	lea	eax, DWORD PTR [rdx+1]
	mov	DWORD PTR [rsi], eax
	lea	rcx, QWORD PTR $T31[rbp-256]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	mov	r12, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	sub	rdi, rcx
	cmp	rdi, 2
	jb	$LN1602@DisplayBym

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN1189@DisplayBym

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rbx]
$LN1189@DisplayBym:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rbx
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T22[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 3292 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 1
	lea	rdx, OFFSET FLAT:??_C@_01IDAFKMJL@_@
	lea	rcx, QWORD PTR $T22[rbp-256]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T2[rsp], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T2[rsp+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 77   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_U64, Node->m_Value.data());

	mov	QWORD PTR [rax+16], r13
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, r12
	lea	r8, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR $T20[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T20[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T20[rbp-232], 16
	cmovae	rcx, QWORD PTR $T20[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 77   : 		ImGui::InputScalar(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), ImGuiDataType_::ImGuiDataType_U64, Node->m_Value.data());

	mov	DWORD PTR [rsp+48], r13d
	mov	QWORD PTR [rsp+40], r13
	mov	QWORD PTR [rsp+32], r13
	xor	r9d, r9d
	mov	r8, r15
	lea	edx, QWORD PTR [r9+7]
	call	?InputScalar@ImGui@@YA_NPEBDHPEAXPEBX20H@Z ; ImGui::InputScalar
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	r8, QWORD PTR $T20[rbp-232]
	cmp	r8, 16
	jb	SHORT $LN1361@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR $T20[rbp-256]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN1361@DisplayBym:

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T20[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T20[rbp-256], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	r8, QWORD PTR $T2[rsp+24]
	cmp	r8, 16
	jb	SHORT $LN1248@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR $T2[rsp]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
	npad	1
$LN1248@DisplayBym:

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	r8, QWORD PTR $T22[rbp-232]
	cmp	r8, 16
	jb	SHORT $LN1256@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR $T22[rbp-256]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN1256@DisplayBym:

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T22[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T22[rbp-256], 0

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	r8, QWORD PTR $T31[rbp-232]
	cmp	r8, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN1264@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR $T31[rbp-256]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN1264@DisplayBym:

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T31[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T31[rbp-256], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 79   : 		break;

	jmp	$LN1593@DisplayBym
$LN16@DisplayBym:

; 80   : 	}
; 81   : 	case BymlFile::Type::StringIndex:
; 82   : 	{
; 83   : 		std::string Data = Node->GetValue<std::string>();

	lea	rdx, QWORD PTR Data$38[rbp-256]
	mov	rcx, r14
	call	??$GetValue@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Node@BymlFile@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; BymlFile::Node::GetValue<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	npad	1

; 84   : 		ImGui::PushItemWidth(ImGui::GetColumnWidth() - ImGui::GetStyle().FramePadding.x);

	mov	ecx, -1
	call	?GetColumnWidth@ImGui@@YAMH@Z		; ImGui::GetColumnWidth
	mov	rax, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	subss	xmm0, DWORD PTR [rax+14612]
	call	?PushItemWidth@ImGui@@YAXM@Z		; ImGui::PushItemWidth

; 85   : 		ImGui::InputText(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), &Data);

	mov	edx, DWORD PTR [rsi]
	lea	eax, DWORD PTR [rdx+1]
	mov	DWORD PTR [rsi], eax
	lea	rcx, QWORD PTR $T34[rbp-256]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	mov	r15, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4915 :     const auto _Right_size = _Right.size();

	mov	rcx, QWORD PTR [rbx+16]

; 4916 :     if (_Right.max_size() - _Right_size < _Left_size) {

	sub	rdi, rcx
	cmp	rdi, 2
	jb	$LN1603@DisplayBym

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rbx+24], 16
	jb	SHORT $LN1288@DisplayBym

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rbx, QWORD PTR [rbx]
$LN1288@DisplayBym:

; 4920 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], rbx
	mov	QWORD PTR [rsp+32], 2
	lea	r9, OFFSET FLAT:??_C@_02IEBMKJDF@?$CD?$CD@
	lea	rcx, QWORD PTR $T36[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEBV01@QEBD_K23@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 3292 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 1
	lea	rdx, OFFSET FLAT:??_C@_01IDAFKMJL@_@
	lea	rcx, QWORD PTR $T36[rbp-256]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T1[rsp], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T1[rsp+16], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 85   : 		ImGui::InputText(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), &Data);

	mov	QWORD PTR [rax+16], r13
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4980 :     return {_String_constructor_concat_tag{}, _Left, _Right};

	mov	r9, r15
	lea	r8, QWORD PTR $T1[rsp]
	lea	rcx, QWORD PTR $T21[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@U_String_constructor_concat_tag@1@AEAV01@1@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR $T21[rbp-256]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR $T21[rbp-232], 16
	cmovae	rcx, QWORD PTR $T21[rbp-256]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 85   : 		ImGui::InputText(("##" + Node->GetKey() + "_" + std::to_string(Id++)).c_str(), &Data);

	lea	rdx, QWORD PTR Data$38[rbp-256]
	call	?InputText@ImGui@@YA_NPEBDPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HP6AHPEAUImGuiInputTextCallbackData@@@ZPEAX@Z ; ImGui::InputText
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	r8, QWORD PTR $T21[rbp-232]
	cmp	r8, 16
	jb	SHORT $LN1345@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR $T21[rbp-256]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN1345@DisplayBym:

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T21[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T21[rbp-256], 0

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	r8, QWORD PTR $T1[rsp+24]
	cmp	r8, 16
	jb	SHORT $LN1353@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR $T1[rsp]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
	npad	1
$LN1353@DisplayBym:

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR $T36[rbp-256]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	r8, QWORD PTR $T34[rbp-232]
	cmp	r8, 16
	jb	SHORT $LN1369@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR $T34[rbp-256]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN1369@DisplayBym:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 86   : 		ImGui::PopItemWidth();

	call	?PopItemWidth@ImGui@@YAXXZ		; ImGui::PopItemWidth

; 87   : 		Node->SetValue<std::string>(Data);

	lea	rdx, QWORD PTR Data$38[rbp-256]
	lea	rcx, QWORD PTR $T33[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rdx, rax
	mov	rcx, r14
	call	??$SetValue@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Node@BymlFile@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; BymlFile::Node::SetValue<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	r8, QWORD PTR Data$38[rbp-232]
	cmp	r8, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN1377@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	r8
	mov	rdx, QWORD PTR Data$38[rbp-256]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN1377@DisplayBym:

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR Data$38[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR Data$38[rbp-256], 0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 88   : 		break;

	jmp	$DisplayChilds$1606
$LN1460@DisplayBym:

; 92   : 		Logger::Warning("ActorTool", "Unknown node type " + std::to_string((int)Node->GetType()));

	lea	rbx, QWORD PTR $T23[rbp-256]
	mov	QWORD PTR $T9[rsp], rbx
	lea	rcx, QWORD PTR $T32[rbp-256]
	call	?to_string@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::to_string
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3537 :         return insert(_Off, _Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r9d, 18
	lea	r8, OFFSET FLAT:??_C@_0BD@LBOMPJLA@Unknown?5node?5type?5@
	mov	rcx, rax
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T23[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T23[rbp-240], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T23[rbp-232], r13

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rax]
	movups	XMMWORD PTR $T23[rbp-256], xmm0
	movups	xmm1, XMMWORD PTR [rax+16]
	movups	XMMWORD PTR $T23[rbp-240], xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 92   : 		Logger::Warning("ActorTool", "Unknown node type " + std::to_string((int)Node->GetType()));

	mov	QWORD PTR [rax+16], r13
	mov	QWORD PTR [rax+24], 15
	mov	BYTE PTR [rax], 0
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T24[rbp-256], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T24[rbp-240], r13

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T24[rbp-232], r13

; 2540 :         _Construct<_Construct_strategy::_From_ptr>(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

	mov	r8d, 9
	lea	rdx, OFFSET FLAT:??_C@_09DPPIGPDC@ActorTool@
	lea	rcx, QWORD PTR $T24[rbp-256]
	call	??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct<1,char const *>
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 92   : 		Logger::Warning("ActorTool", "Unknown node type " + std::to_string((int)Node->GetType()));

	mov	rdx, rbx
	lea	rcx, QWORD PTR $T24[rbp-256]
	call	?Warning@Logger@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Logger::Warning
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	rdx, QWORD PTR $T32[rbp-232]
	cmp	rdx, 16

; 4832 :         if (_My_data._Large_string_engaged()) {

	jb	SHORT $LN184@DisplayBym

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T32[rbp-256]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN196@DisplayBym

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN196@DisplayBym
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN196@DisplayBym:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN184@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4841 :         _My_data._Mysize = 0;

	movdqa	xmm0, XMMWORD PTR __xmm@000000000000000f0000000000000000
	movdqu	XMMWORD PTR $T32[rbp-240], xmm0

; 4842 :         _My_data._Myres  = _BUF_SIZE - 1;
; 4843 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4844 :         _Traits::assign(_My_data._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T32[rbp-256], 0
$DisplayChilds$1606:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10308:     window->DC.Indent.x += (indent_w != 0.0f) ? indent_w : g.Style.IndentSpacing;

	movss	xmm0, DWORD PTR [rcx+14660]
	addss	xmm0, DWORD PTR [rax+380]
	movss	DWORD PTR [rax+380], xmm0

; 10309:     window->DC.CursorPos.x = window->Pos.x + window->DC.Indent.x + window->DC.ColumnsOffset.x;

	addss	xmm0, DWORD PTR [rax+80]
	addss	xmm0, DWORD PTR [rax+384]
	movss	DWORD PTR [rax+312], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 100  : 	for (BymlFile::Node& Child : Node->GetChildren())

	mov	rdi, QWORD PTR [r14+72]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10308:     window->DC.Indent.x += (indent_w != 0.0f) ? indent_w : g.Style.IndentSpacing;

	mov	rbx, QWORD PTR [r14+64]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 100  : 	for (BymlFile::Node& Child : Node->GetChildren())

	cmp	rbx, rdi
	je	SHORT $LN5@DisplayBym
	npad	7
$LL6@DisplayBym:

; 101  : 	{
; 102  : 		ImGui::NextColumn();

	call	?NextColumn@ImGui@@YAXXZ		; ImGui::NextColumn

; 103  : 		DisplayBymlNode(&Child, Id);

	mov	rdx, rsi
	mov	rcx, rbx
	call	?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z ; DisplayBymlNode

; 100  : 	for (BymlFile::Node& Child : Node->GetChildren())

	add	rbx, 88					; 00000058H
	cmp	rbx, rdi
	jne	SHORT $LL6@DisplayBym
$LN5@DisplayBym:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui_internal.h

; 3023 :     inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }

	mov	rcx, QWORD PTR ?GImGui@@3PEAUImGuiContext@@EA ; GImGui
	mov	rax, QWORD PTR [rcx+16408]
	mov	BYTE PTR [rax+237], 1
	mov	rax, QWORD PTR [rcx+16408]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.cpp

; 10316:     window->DC.Indent.x -= (indent_w != 0.0f) ? indent_w : g.Style.IndentSpacing;

	movss	xmm0, DWORD PTR [rax+380]
	subss	xmm0, DWORD PTR [rcx+14660]
	movss	DWORD PTR [rax+380], xmm0

; 10317:     window->DC.CursorPos.x = window->Pos.x + window->DC.Indent.x + window->DC.ColumnsOffset.x;

	addss	xmm0, DWORD PTR [rax+80]
	addss	xmm0, DWORD PTR [rax+384]
	movss	DWORD PTR [rax+312], xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 106  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+1104]
	add	rsp, 1024				; 00000400H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN1603@DisplayBym:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4917 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN1595@DisplayBym:

; 4941 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN1596@DisplayBym:

; 4917 :         _Xlen_string();

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN1597@DisplayBym:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN1598@DisplayBym:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN1599@DisplayBym:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN1600@DisplayBym:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN1601@DisplayBym:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN1602@DisplayBym:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN1592@DisplayBym:
	npad	2
$LN1589@DisplayBym:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 106  : }

	DD	$LN16@DisplayBym
	DD	$DisplayChilds$1606
	DD	$LN9@DisplayBym
	DD	$LN12@DisplayBym
	DD	$LN10@DisplayBym
	DD	$LN13@DisplayBym
	DD	$LN14@DisplayBym
	DD	$LN15@DisplayBym
	DD	$LN11@DisplayBym
	DD	$LN1460@DisplayBym
$LN1588@DisplayBym:
	DB	0
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	1
	DB	1
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
?DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z ENDP	; DisplayBymlNode
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$0@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$0
	lea	rcx, QWORD PTR $T39[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$1@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$1
	lea	rcx, QWORD PTR $T37[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$2@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$2
	lea	rcx, QWORD PTR $T35[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$3@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$3
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$4@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$4
	lea	rcx, QWORD PTR $T25[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$5@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$5
	lea	rcx, QWORD PTR $T26[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$6@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$6
	lea	rcx, QWORD PTR $T10[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$6@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$7@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$7
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$7@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$8@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$8
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$8@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$9@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$9
	lea	rcx, QWORD PTR $T27[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$9@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$10@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$10
	lea	rcx, QWORD PTR $T11[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$10@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$11@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$11
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$11@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$12@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$12
	lea	rcx, QWORD PTR $T16[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$12@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$13@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$13
	lea	rcx, QWORD PTR $T28[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$13@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$14@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$14
	lea	rcx, QWORD PTR $T12[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$14@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$15@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$15
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$15@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$16@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$16
	lea	rcx, QWORD PTR $T17[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$16@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$17@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$17
	lea	rcx, QWORD PTR $T29[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$17@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$18@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$18
	lea	rcx, QWORD PTR $T13[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$18@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$19@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$19
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$19@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$19
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$20@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$20
	lea	rcx, QWORD PTR $T18[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$20@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$21@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$21
	lea	rcx, QWORD PTR $T30[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$21@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$21
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$22@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$22
	lea	rcx, QWORD PTR $T14[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$22@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$23@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$23
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$23@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$23
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$24@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$24
	lea	rcx, QWORD PTR $T19[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$24@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$24
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$25@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$25
	lea	rcx, QWORD PTR $T31[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$25@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$25
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$26@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$26
	lea	rcx, QWORD PTR $T22[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$26@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$26
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$27@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$27
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$27@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$27
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$28@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$28
	lea	rcx, QWORD PTR $T20[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$28@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$28
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$29@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$29
	lea	rcx, QWORD PTR Data$38[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$29@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$29
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$30@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$30
	lea	rcx, QWORD PTR $T34[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$30@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$30
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$31@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$31
	lea	rcx, QWORD PTR $T36[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$31@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$31
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$32@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$32
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$32@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$32
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$33@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$33
	lea	rcx, QWORD PTR $T21[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$33@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$33
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$35@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$35
	lea	rcx, QWORD PTR $T32[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$35@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$35
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 64
$T2 = 64
$T3 = 64
$T4 = 64
$T5 = 64
$T6 = 64
$T7 = 64
$T8 = 64
$T9 = 96
$T10 = 104
$T11 = 136
$T12 = 168
$T13 = 200
$T14 = 232
$T15 = 264
$T16 = 296
$T17 = 328
$T18 = 360
$T19 = 392
$T20 = 424
$T21 = 456
$T22 = 488
$T23 = 520
$T24 = 552
$T25 = 584
$T26 = 616
$T27 = 648
$T28 = 680
$T29 = 712
$T30 = 744
$T31 = 776
$T32 = 808
$T33 = 840
$T34 = 840
$T35 = 880
$T36 = 912
$T37 = 944
Data$38 = 976
$T39 = 976
__$ArrayPad$ = 1008
Node$ = 1088
Id$ = 1096
?dtor$36@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA PROC ; `DisplayBymlNode'::`1'::dtor$36
	mov	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$36@?0??DisplayBymlNode@@YAXPEAVNode@BymlFile@@AEAH@Z@4HA ENDP ; `DisplayBymlNode'::`1'::dtor$36
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
;	COMDAT ?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 64
Search$GSCopy$ = 80
Replace$GSCopy$ = 88
$T4 = 96
Value$5 = 96
__$ArrayPad$ = 128
Node$ = 208
Search$ = 216
Replace$ = 224
?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z PROC ; ReplaceStringInBymlNodes, COMDAT

; 108  : void ReplaceStringInBymlNodes(BymlFile::Node* Node, std::string Search, std::string Replace) {

$LN225:
	mov	QWORD PTR [rsp+32], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-39]
	sub	rsp, 144				; 00000090H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-105], rax
	mov	r15, r8
	mov	r14, rdx
	mov	rdi, rcx
	mov	QWORD PTR Search$GSCopy$[rbp-105], rdx
	mov	QWORD PTR Replace$GSCopy$[rbp-105], r8

; 109  : 	Util::ReplaceString(Node->GetKey(), Search, Replace);

	add	rcx, 32					; 00000020H
	call	?ReplaceString@Util@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@1@Z ; Util::ReplaceString

; 110  : 	if (Node->GetType() == BymlFile::Type::StringIndex)

	xor	ebx, ebx
	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
	lea	edx, QWORD PTR [rbx+22]
	lea	r8, QWORD PTR [rbx-1]
	cmp	BYTE PTR [rdi+24], 160			; 000000a0H
	jne	$LN152@ReplaceStr

; 111  : 	{
; 112  : 		std::string Value = Node->GetValue<std::string>();

	lea	rdx, QWORD PTR Value$5[rbp-105]
	mov	rcx, rdi
	call	??$GetValue@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Node@BymlFile@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; BymlFile::Node::GetValue<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	npad	1

; 113  : 		Util::ReplaceString(Value, Search, Replace);

	mov	r8, r15
	mov	rdx, r14
	lea	rcx, QWORD PTR Value$5[rbp-105]
	call	?ReplaceString@Util@@YA_NAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@1@Z ; Util::ReplaceString
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T2[rbp-105], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T2[rbp-89], rbx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T2[rbp-81], rbx

; 2492 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rsi, QWORD PTR Value$5[rbp-89]

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	r12, QWORD PTR Value$5[rbp-105]

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR Value$5[rbp-81], 16
	cmovae	r12, QWORD PTR Value$5[rbp-105]

; 2620 :         if (_Count > max_size()) {

	mov	rax, 9223372036854775807		; 7fffffffffffffffH
	cmp	rsi, rax
	ja	$LN223@ReplaceStr

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T2[rbp-81], 15
	cmp	rsi, 16
	jae	SHORT $LN117@ReplaceStr

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T2[rbp-89], rsi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [r12]
	movups	XMMWORD PTR $T2[rbp-105], xmm0

; 2647 :             return;

	jmp	SHORT $LN133@ReplaceStr
$LN117@ReplaceStr:

; 2648 :         }
; 2649 : 
; 2650 :         _My_data._Myres               = _BUF_SIZE - 1;

	mov	rbx, rsi
	or	rbx, 15

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	cmp	rbx, rax

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN128@ReplaceStr

; 4716 :             return _Max;

	mov	rbx, rax
	jmp	SHORT $LN127@ReplaceStr
$LN128@ReplaceStr:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	rbx, 22
	mov	eax, 22
	cmovb	rbx, rax
$LN127@ReplaceStr:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rbx
	add	rdx, 1
	mov	rax, -1
	cmovb	rdx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T2[rbp-105], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T2[rbp-89], rsi

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T2[rbp-81], rbx

; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	lea	r8, QWORD PTR [rsi+1]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, r12
	mov	rcx, rax
	call	memcpy
	xor	ebx, ebx
$LN133@ReplaceStr:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 114  : 		Node->SetValue<std::string>(Value);

	lea	rdx, QWORD PTR $T2[rbp-105]
	mov	rcx, rdi
	call	??$SetValue@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Node@BymlFile@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; BymlFile::Node::SetValue<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR Value$5[rbp-81]
	cmp	rdx, 16
	jb	SHORT $LN220@ReplaceStr

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR Value$5[rbp-105]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN164@ReplaceStr

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN164@ReplaceStr
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN164@ReplaceStr:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN220@ReplaceStr:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 117  : 	for (BymlFile::Node& Child : Node->GetChildren()) {

	mov	r8, -1
	lea	edx, QWORD PTR [r8+23]
	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
$LN152@ReplaceStr:
	mov	r12, QWORD PTR [rdi+64]
	mov	r13, QWORD PTR [rdi+72]
	cmp	r12, r13
	je	$LN3@ReplaceStr
$LL4@ReplaceStr:

; 118  : 		ReplaceStringInBymlNodes(&Child, Search, Replace);

	lea	rax, QWORD PTR $T1[rbp-105]
	mov	QWORD PTR $T3[rbp-105], rax
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T1[rbp-105], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T1[rbp-89], rbx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T1[rbp-81], rbx

; 2492 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rdi, QWORD PTR [r15+16]

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rsi, r15

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r15+24], 16
	jb	SHORT $LN24@ReplaceStr

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rsi, QWORD PTR [r15]
$LN24@ReplaceStr:

; 2620 :         if (_Count > max_size()) {

	cmp	rdi, rcx
	ja	$LN176@ReplaceStr

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T1[rbp-81], 15
	cmp	rdi, 16
	jae	SHORT $LN30@ReplaceStr

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T1[rbp-89], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [rsi]
	movups	XMMWORD PTR $T1[rbp-105], xmm0

; 2647 :             return;

	jmp	SHORT $LN46@ReplaceStr
$LN30@ReplaceStr:

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rbx, rdi
	or	rbx, 15
	cmp	rbx, rcx

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN41@ReplaceStr

; 4716 :             return _Max;

	mov	rbx, rcx
	jmp	SHORT $LN40@ReplaceStr
$LN41@ReplaceStr:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	rbx, 22
	cmovb	rbx, rdx
$LN40@ReplaceStr:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rbx
	add	rdx, 1
	cmovb	rdx, r8
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T1[rbp-105], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T1[rbp-89], rdi

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T1[rbp-81], rbx

; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	lea	r8, QWORD PTR [rdi+1]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy
	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
	xor	ebx, ebx
$LN46@ReplaceStr:
	xorps	xmm0, xmm0

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T4[rbp-105], xmm0

; 2293 :     size_type _Mysize = 0; // current length of string

	mov	QWORD PTR $T4[rbp-89], rbx

; 2294 :     size_type _Myres  = 0; // current storage reserved for string

	mov	QWORD PTR $T4[rbp-81], rbx

; 2492 :         _Construct<_Construct_strategy::_From_string>(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	rdi, QWORD PTR [r14+16]

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rsi, r14

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [r14+24], 16
	jb	SHORT $LN65@ReplaceStr

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rsi, QWORD PTR [r14]
$LN65@ReplaceStr:

; 2620 :         if (_Count > max_size()) {

	cmp	rdi, rcx
	ja	$LN177@ReplaceStr

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	mov	QWORD PTR $T4[rbp-81], 15
	cmp	rdi, 16
	jae	SHORT $LN71@ReplaceStr

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T4[rbp-89], rdi

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	movups	xmm0, XMMWORD PTR [rsi]
	movups	XMMWORD PTR $T4[rbp-105], xmm0

; 2647 :             return;

	jmp	SHORT $LN87@ReplaceStr
$LN71@ReplaceStr:

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rbx, rdi
	or	rbx, 15
	cmp	rbx, rcx

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	jbe	SHORT $LN82@ReplaceStr

; 4716 :             return _Max;

	mov	rbx, rcx
	jmp	SHORT $LN81@ReplaceStr
$LN82@ReplaceStr:

; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	cmp	rbx, 22
	mov	eax, 22
	cmovb	rbx, rax
$LN81@ReplaceStr:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rbx
	add	rdx, 1
	mov	rax, -1
	cmovb	rdx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T4[rbp-105], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T4[rbp-89], rdi

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T4[rbp-81], rbx

; 2659 :         if constexpr (_Strat == _Construct_strategy::_From_char) {
; 2660 :             _Traits::assign(_Unfancy(_New_ptr), _Count, _Arg);
; 2661 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2662 :         } else if constexpr (_Strat == _Construct_strategy::_From_ptr) {
; 2663 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count);
; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());
; 2665 :         } else { // _Strat == _Construct_strategy::_From_string
; 2666 :             _Traits::copy(_Unfancy(_New_ptr), _Arg, _Count + 1);

	lea	r8, QWORD PTR [rdi+1]

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	rdx, rsi
	mov	rcx, rax
	call	memcpy
	xor	ebx, ebx
$LN87@ReplaceStr:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 118  : 		ReplaceStringInBymlNodes(&Child, Search, Replace);

	lea	r8, QWORD PTR $T1[rbp-105]
	lea	rdx, QWORD PTR $T4[rbp-105]
	mov	rcx, r12
	call	?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z ; ReplaceStringInBymlNodes

; 117  : 	for (BymlFile::Node& Child : Node->GetChildren()) {

	add	r12, 88					; 00000058H
	cmp	r12, r13
	mov	rcx, 9223372036854775807		; 7fffffffffffffffH
	mov	edx, 22
	lea	r8, QWORD PTR [rdx-23]
	jne	$LL4@ReplaceStr
$LN3@ReplaceStr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, r14
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	npad	1
	mov	rcx, r15
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 120  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-105]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+232]
	add	rsp, 144				; 00000090H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN177@ReplaceStr:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2621 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN176@ReplaceStr:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN223@ReplaceStr:
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	int	3
$LN221@ReplaceStr:
?ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z ENDP ; ReplaceStringInBymlNodes
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 64
Search$GSCopy$ = 80
Replace$GSCopy$ = 88
$T4 = 96
Value$5 = 96
__$ArrayPad$ = 128
Node$ = 208
Search$ = 216
Replace$ = 224
?dtor$0@?0??ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z@4HA PROC ; `ReplaceStringInBymlNodes'::`1'::dtor$0
	mov	rcx, QWORD PTR Replace$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z@4HA ENDP ; `ReplaceStringInBymlNodes'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 64
Search$GSCopy$ = 80
Replace$GSCopy$ = 88
$T4 = 96
Value$5 = 96
__$ArrayPad$ = 128
Node$ = 208
Search$ = 216
Replace$ = 224
?dtor$1@?0??ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z@4HA PROC ; `ReplaceStringInBymlNodes'::`1'::dtor$1
	mov	rcx, QWORD PTR Search$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z@4HA ENDP ; `ReplaceStringInBymlNodes'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 64
Search$GSCopy$ = 80
Replace$GSCopy$ = 88
$T4 = 96
Value$5 = 96
__$ArrayPad$ = 128
Node$ = 208
Search$ = 216
Replace$ = 224
?dtor$2@?0??ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z@4HA PROC ; `ReplaceStringInBymlNodes'::`1'::dtor$2
	lea	rcx, QWORD PTR Value$5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z@4HA ENDP ; `ReplaceStringInBymlNodes'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 64
Search$GSCopy$ = 80
Replace$GSCopy$ = 88
$T4 = 96
Value$5 = 96
__$ArrayPad$ = 128
Node$ = 208
Search$ = 216
Replace$ = 224
?dtor$4@?0??ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z@4HA PROC ; `ReplaceStringInBymlNodes'::`1'::dtor$4
	mov	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??ReplaceStringInBymlNodes@@YAXPEAVNode@BymlFile@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@1@Z@4HA ENDP ; `ReplaceStringInBymlNodes'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
;	COMDAT ??R<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@AEBUEntry@SarcFile@@0@Z
_TEXT	SEGMENT
this$dead$ = 48
a$ = 56
b$ = 64
??R<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@AEBUEntry@SarcFile@@0@Z PROC ; `UIActorTool::DrawActorToolWindow'::`13'::<lambda_1>::operator(), COMDAT

; 172  : 					{

	sub	rsp, 40					; 00000028H
	mov	rcx, rdx

; 173  : 						return a.Name < b.Name;

	mov	rdx, r8
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	shr	al, 7
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 174  : 					});

	add	rsp, 40					; 00000028H
	ret	0
??R<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@AEBUEntry@SarcFile@@0@Z ENDP ; `UIActorTool::DrawActorToolWindow'::`13'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
;	COMDAT ??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 56
Name$GSCopy$ = 88
__$ArrayPad$ = 96
this$dead$ = 144
Name$ = 152
??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; `UIActorTool::DrawActorToolWindow'::`28'::<lambda_2>::operator(), COMDAT

; 201  : 			auto DisplayActorFile = [](std::string Name) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 112				; 00000070H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rdx
	mov	QWORD PTR Name$GSCopy$[rsp], rdx

; 202  : 				if (ActorPackFilter.length() > 0)

	lea	r15, OFFSET FLAT:?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; UIActorTool::ActorPackFilter
	mov	rax, QWORD PTR ?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+16
	test	rax, rax
	je	SHORT $LN138@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	mov	r9, r15
	cmp	QWORD PTR ?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A+24, 16
	cmovae	r9, QWORD PTR ?ActorPackFilter@UIActorTool@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rdx

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdx+24], 16
	jb	SHORT $LN139@operator

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rdx]
$LN139@operator:

; 4343 :         return static_cast<size_type>(_Traits_find<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off,

	mov	QWORD PTR [rsp+32], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR [rdx+16]
	call	??$_Traits_find@U?$char_traits@D@std@@@std@@YA_KQEBD_K101@Z ; std::_Traits_find<std::char_traits<char> >
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 204  : 					if (Name.find(ActorPackFilter) == std::string::npos)

	cmp	rax, -1
	je	$LN114@operator
$LN138@operator:

; 208  : 				Name = Name.substr(0, Name.length() - 8);

	mov	rax, QWORD PTR [rdi+16]
	lea	rsi, QWORD PTR [rax-8]
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2284 :         _CONSTEXPR20 _Bxty() noexcept : _Buf() {} // user-provided, for fancy pointers

	movups	XMMWORD PTR $T2[rsp], xmm0

; 2278 :         return (_STD min)(_Size, _Mysize - _Off);

	cmp	rax, rsi
	cmovb	rsi, rax

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	r14, rdi

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdi+24], 16
	jb	SHORT $LN140@operator

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	r14, QWORD PTR [rdi]
$LN140@operator:

; 2620 :         if (_Count > max_size()) {

	mov	rbp, 9223372036854775807		; 7fffffffffffffffH
	cmp	rsi, rbp
	ja	$LN145@operator

; 2622 :         }
; 2623 : 
; 2624 :         auto& _Al       = _Getal();
; 2625 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Al);
; 2626 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);
; 2627 : 
; 2628 :         if (_Count < _BUF_SIZE) {

	cmp	rsi, 16
	jae	SHORT $LN52@operator

; 2629 :             _My_data._Mysize = _Count;

	mov	QWORD PTR $T2[rsp+16], rsi

; 2630 :             _My_data._Myres  = _BUF_SIZE - 1;

	mov	QWORD PTR $T2[rsp+24], 15

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rsi
	mov	rdx, r14
	lea	rcx, QWORD PTR $T2[rsp]
	call	memcpy

; 2637 :                 _Traits::assign(_My_data._Bx._Buf[_Count], _Elem());

	mov	BYTE PTR $T2[rsp+rsi], 0

; 2638 :             } else { // _Strat == _Construct_strategy::_From_string
; 2639 : #ifdef _INSERT_STRING_ANNOTATION
; 2640 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _Count + 1);
; 2641 : #else // ^^^ _INSERT_STRING_ANNOTATION / !_INSERT_STRING_ANNOTATION vvv
; 2642 :                 _Traits::copy(_My_data._Bx._Buf, _Arg, _BUF_SIZE);
; 2643 : #endif // !_INSERT_STRING_ANNOTATION
; 2644 :             }
; 2645 : 
; 2646 :             _Proxy._Release();
; 2647 :             return;

	jmp	SHORT $LN50@operator
$LN52@operator:

; 4714 :         const size_type _Masked = _Requested | _ALLOC_MASK;

	mov	rax, rsi
	or	rax, 15
	cmp	rax, rbp

; 4715 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

	ja	SHORT $LN62@operator

; 4716 :             return _Max;
; 4717 :         }
; 4718 : 
; 4719 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows
; 4720 :             return _Max;
; 4721 :         }
; 4722 : 
; 4723 :         return (_STD max)(_Masked, _Old + _Old / 2);

	mov	rbp, rax
	mov	ecx, 22
	cmp	rax, rcx
	cmovb	rbp, rcx
$LN62@operator:

; 2652 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

	mov	rdx, rbp
	add	rdx, 1
	mov	rax, -1
	cmovb	rdx, rax
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	rbx, rax

; 2653 :         _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

	mov	QWORD PTR $T2[rsp], rax

; 2654 : 
; 2655 :         _Start_element_lifetimes(_Unfancy(_New_ptr), _New_capacity + 1);
; 2656 : 
; 2657 :         _My_data._Mysize = _Count;

	mov	QWORD PTR $T2[rsp+16], rsi

; 2658 :         _My_data._Myres  = _New_capacity;

	mov	QWORD PTR $T2[rsp+24], rbp

; 66   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

	mov	r8, rsi
	mov	rdx, r14
	mov	rcx, rax
	call	memcpy

; 2664 :             _Traits::assign(_Unfancy(_New_ptr)[_Count], _Elem());

	mov	BYTE PTR [rbx+rsi], 0
$LN50@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 208  : 				Name = Name.substr(0, Name.length() - 8);

	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rdi
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4832 :         if (_My_data._Large_string_engaged()) {

	mov	rdx, QWORD PTR $T2[rsp+24]
	cmp	rdx, 16
	jb	SHORT $LN88@operator

; 4833 :             _ASAN_STRING_REMOVE(*this);
; 4834 :             const pointer _Ptr = _My_data._Bx._Ptr;
; 4835 :             auto& _Al          = _Getal();
; 4836 :             _Destroy_in_place(_My_data._Bx._Ptr);
; 4837 :             _My_data._Activate_SSO_buffer();
; 4838 :             _Al.deallocate(_Ptr, _My_data._Myres + 1);

	inc	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rcx, QWORD PTR $T2[rsp]
	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN100@operator

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN100@operator
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN100@operator:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN88@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\imgui\imgui.h

; 270  :     constexpr ImVec2(float _x, float _y)    : x(_x), y(_y) { }

	mov	QWORD PTR $T1[rsp], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rdi

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdi+24], 16
	jb	SHORT $LN141@operator

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rdi]
$LN141@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 209  : 				if(ImGui::Selectable(Name.c_str()))

	lea	r9, QWORD PTR $T1[rsp]
	xor	r8d, r8d
	xor	edx, edx
	call	?Selectable@ImGui@@YA_NPEBD_NHAEBUImVec2@@@Z ; ImGui::Selectable
	test	al, al
	je	SHORT $LN114@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3156 :         if (this == _STD addressof(_Right)) {

	cmp	r15, rdi
	je	SHORT $LN114@operator

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, rdi

; 2236 :         if (_Large_string_engaged()) {

	cmp	QWORD PTR [rdi+24], 16
	jb	SHORT $LN118@operator

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdi]
$LN118@operator:

; 3192 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

	mov	r8, QWORD PTR [rdi+16]
	mov	rcx, r15
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	npad	1
$LN114@operator:

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 213  : 			};

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+112]
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
	ret	0
$LN145@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2621 :             _Xlen_string(); // result too long

	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
	npad	1
$LN143@operator:
??R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; `UIActorTool::DrawActorToolWindow'::`28'::<lambda_2>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 56
Name$GSCopy$ = 88
__$ArrayPad$ = 96
this$dead$ = 144
Name$ = 152
?dtor$0@?0???R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; ``UIActorTool::DrawActorToolWindow'::`28'::<lambda_2>::operator()'::`1'::dtor$0
	mov	rcx, QWORD PTR Name$GSCopy$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???R<lambda_2>@?BM@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; ``UIActorTool::DrawActorToolWindow'::`28'::<lambda_2>::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 48
this$ = 128
__$ReturnUdt$ = 136
_Handle$ = 144
?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert, COMDAT

; 1765 :     auto insert(node_type&& _Handle) {

$LN86:
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 168  :         return _Ptr == nullptr;

	mov	r12, QWORD PTR [r8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1765 :     auto insert(node_type&& _Handle) {

	xor	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 168  :         return _Ptr == nullptr;

	mov	r15, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1765 :     auto insert(node_type&& _Handle) {

	mov	r14, r8
	mov	rdi, rdx
	mov	r13, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 168  :         return _Ptr == nullptr;

	test	r12, r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1766 :         if (_Handle.empty()) {

	jne	SHORT $LN2@insert

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rdx], r15

; 1767 :             if constexpr (_Multi) {
; 1768 :                 return end();
; 1769 :             } else {
; 1770 :                 return _Insert_return_type<iterator, node_type>{end(), false, {}};

	mov	BYTE PTR [rdx+8], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 77   :     _Nodeptr _Ptr{};

	mov	QWORD PTR [rdx+16], rax
	mov	BYTE PTR [rdx+24], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1804 :     }

	mov	rax, rdx
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
$LN2@insert:
	mov	QWORD PTR [rsp+128], rbx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbx, QWORD PTR [r15+8]
	mov	QWORD PTR [rsp+136], rbp
	mov	QWORD PTR [rsp+144], rsi
	mov	rsi, r15
	mov	QWORD PTR $T2[rsp], rbx
	mov	DWORD PTR $T2[rsp+8], eax

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], al
	jne	SHORT $LN24@insert
	npad	1
$LL23@insert:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
	mov	QWORD PTR $T2[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rdx, QWORD PTR [r12+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN25@insert

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]
	mov	DWORD PTR $T2[rsp+8], 0

; 1620 :             } else {

	jmp	SHORT $LN26@insert
$LN25@insert:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rsi, rbx
	mov	DWORD PTR $T2[rsp+8], 1

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN26@insert:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL23@insert
$LN24@insert:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rsi+25], 0
	jne	SHORT $LN3@insert
	lea	rdx, QWORD PTR [rsi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	lea	rcx, QWORD PTR [r12+32]
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	js	SHORT $LN3@insert

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rdi], rsi

; 1771 :             }
; 1772 :         }
; 1773 : 
; 1774 :         _Check_node_allocator(_Handle);
; 1775 :         const auto _Scary        = _Get_scary();
; 1776 :         const auto _Attempt_node = _Handle._Getptr();
; 1777 :         const auto& _Keyval      = _Traits::_Kfn(_Attempt_node->_Myval);
; 1778 :         _Tree_find_result<_Nodeptr> _Loc;
; 1779 :         if constexpr (_Multi) {
; 1780 :             _Loc = _Find_upper_bound(_Keyval);
; 1781 :         } else {
; 1782 :             _Loc = _Find_lower_bound(_Keyval);
; 1783 :             if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {
; 1784 :                 return _Insert_return_type<iterator, node_type>{

	mov	BYTE PTR [rdi+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 106  :     _Node_handle(_Node_handle&& _That) noexcept : _Ptr{_That._Ptr} { // steal node and allocator (if any) from _That

	mov	rax, QWORD PTR [r14]
	mov	QWORD PTR [rdi+16], rax

; 107  :         if (_Ptr != nullptr) {

	test	rax, rax
	je	SHORT $LN64@insert

; 108  :             _That._Ptr       = nullptr;

	mov	QWORD PTR [r14], 0
	jmp	SHORT $LN64@insert
$LN3@insert:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 64051194700380387			; 00e38e38e38e38e3H
	cmp	QWORD PTR [r13+8], rax
	je	SHORT $LN84@insert

; 1785 :                     iterator(_Loc._Bound, _Scary), false, _STD move(_Handle)};
; 1786 :             }
; 1787 :         }
; 1788 : 
; 1789 :         _Check_grow_by_1();
; 1790 : 
; 1791 :         // nothrow hereafter
; 1792 : 
; 1793 :         _Attempt_node->_Left = _Scary->_Myhead;

	movups	xmm0, XMMWORD PTR $T2[rsp]
	mov	QWORD PTR [r12], r15

; 1798 :         const auto _Inserted = _Scary->_Insert_node(_Loc._Location, _Handle._Release());

	lea	rdx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [r13]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	ebx, ebx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1795 :         _Attempt_node->_Right = _Scary->_Myhead;

	mov	QWORD PTR [r12+16], rax

; 1798 :         const auto _Inserted = _Scary->_Insert_node(_Loc._Location, _Handle._Release());

	mov	rcx, r13
	mov	BYTE PTR [r12+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [r14]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r14], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1798 :         const auto _Inserted = _Scary->_Insert_node(_Loc._Location, _Handle._Release());

	movaps	XMMWORD PTR $T1[rsp], xmm0
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Insert_node

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rdi], rax

; 1799 :         if constexpr (_Multi) {
; 1800 :             return iterator(_Inserted, _Scary);
; 1801 :         } else {
; 1802 :             return _Insert_return_type<iterator, node_type>{iterator(_Inserted, _Scary), true, _STD move(_Handle)};

	mov	BYTE PTR [rdi+8], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 106  :     _Node_handle(_Node_handle&& _That) noexcept : _Ptr{_That._Ptr} { // steal node and allocator (if any) from _That

	mov	rax, QWORD PTR [r14]
	mov	QWORD PTR [rdi+16], rax

; 107  :         if (_Ptr != nullptr) {

	test	rax, rax
	je	SHORT $LN64@insert

; 108  :             _That._Ptr       = nullptr;

	mov	QWORD PTR [r14], rbx
$LN64@insert:
	mov	rbp, QWORD PTR [rsp+136]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1804 :     }

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+128]
	mov	rsi, QWORD PTR [rsp+144]
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
$LN84@insert:

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN81@insert:
?insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
;	COMDAT ??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ
_TEXT	SEGMENT
$T1 = 32
this$dead$ = 80
??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ PROC ; `UIActorTool::DrawActorToolWindow'::`100'::<lambda_3>::operator(), COMDAT

; 377  : 						{

	push	rbx
	sub	rsp, 64					; 00000040H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	lea	rdx, OFFSET FLAT:?AINB@UIAINBEditor@@3VAINBFile@@A+632
	cmp	QWORD PTR ?AINB@UIAINBEditor@@3VAINBFile@@A+656, 16
	cmovae	rdx, QWORD PTR ?AINB@UIAINBEditor@@3VAINBFile@@A+632

; 5187 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	mov	r8, QWORD PTR ?AINB@UIAINBEditor@@3VAINBFile@@A+648
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 378  : 							std::cout << UIAINBEditor::AINB.EditorFileName << std::endl;

	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 379  : 							ActorPack.AINBs[UIAINBEditor::AINB.EditorFileName] = UIAINBEditor::AINB.ToBinary();

	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, OFFSET FLAT:?AINB@UIAINBEditor@@3VAINBFile@@A ; UIAINBEditor::AINB
	call	?ToBinary@AINBFile@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ ; AINBFile::ToBinary
	mov	rbx, rax
	lea	rdx, OFFSET FLAT:?AINB@UIAINBEditor@@3VAINBFile@@A+632
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+96
	call	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]
	mov	rcx, rax
	mov	rdx, rbx
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR $T1[rsp]
	test	rcx, rcx
	je	SHORT $LN22@operator

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR $T1[rsp+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN34@operator

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN34@operator
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN34@operator:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN22@operator:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 380  : 						};

	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
$LN40@operator:
??R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ ENDP ; `UIActorTool::DrawActorToolWindow'::`100'::<lambda_3>::operator()
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$dead$ = 80
?dtor$0@?0???R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ@4HA PROC ; ``UIActorTool::DrawActorToolWindow'::`100'::<lambda_3>::operator()'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
?dtor$0@?0???R<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@QEBA@XZ@4HA ENDP ; ``UIActorTool::DrawActorToolWindow'::`100'::<lambda_3>::operator()'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
;	COMDAT ?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ
_TEXT	SEGMENT
$T1 = 32
?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ PROC ; `UIActorTool::DrawActorToolWindow'::`100'::<lambda_3>::<lambda_invoker_cdecl>, COMDAT

; 380  : 						};

	push	rbx
	sub	rsp, 64					; 00000040H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	lea	rdx, OFFSET FLAT:?AINB@UIAINBEditor@@3VAINBFile@@A+632
	cmp	QWORD PTR ?AINB@UIAINBEditor@@3VAINBFile@@A+656, 16
	cmovae	rdx, QWORD PTR ?AINB@UIAINBEditor@@3VAINBFile@@A+632

; 5187 :     return _Insert_string(_Ostr, _Str.data(), _Str.size());

	mov	r8, QWORD PTR ?AINB@UIAINBEditor@@3VAINBFile@@A+648
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 378  : 							std::cout << UIAINBEditor::AINB.EditorFileName << std::endl;

	lea	rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 379  : 							ActorPack.AINBs[UIAINBEditor::AINB.EditorFileName] = UIAINBEditor::AINB.ToBinary();

	lea	rdx, QWORD PTR $T1[rsp]
	lea	rcx, OFFSET FLAT:?AINB@UIAINBEditor@@3VAINBFile@@A ; UIAINBEditor::AINB
	call	?ToBinary@AINBFile@@QEAA?AV?$vector@EV?$allocator@E@std@@@std@@XZ ; AINBFile::ToBinary
	mov	rbx, rax
	lea	rdx, OFFSET FLAT:?AINB@UIAINBEditor@@3VAINBFile@@A+632
	lea	rcx, OFFSET FLAT:?ActorPack@UIActorTool@@3UActorPackStruct@1@A+96
	call	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]
	mov	rcx, rax
	mov	rdx, rbx
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR $T1[rsp]
	test	rcx, rcx
	je	SHORT $LN24@

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR $T1[rsp+16]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN36@

; 157  :     _Bytes += _Non_user_size;

	add	rdx, 39					; 00000027H

; 158  : 
; 159  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);
; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN36@
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN36@:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
$LN24@:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 380  : 						};

	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
$LN43@:
?<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ ENDP ; `UIActorTool::DrawActorToolWindow'::`100'::<lambda_3>::<lambda_invoker_cdecl>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
?dtor$0@?0??<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ@4HA PROC ; ``UIActorTool::DrawActorToolWindow'::`100'::<lambda_3>::<lambda_invoker_cdecl>'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$vector@EV?$allocator@E@std@@@std@@QEAA@XZ ; std::vector<unsigned char,std::allocator<unsigned char> >::~vector<unsigned char,std::allocator<unsigned char> >
?dtor$0@?0??<lambda_invoker_cdecl>@<lambda_3>@?GE@??DrawActorToolWindow@UIActorTool@@YAXXZ@SA@XZ@4HA ENDP ; ``UIActorTool::DrawActorToolWindow'::`100'::<lambda_3>::<lambda_invoker_cdecl>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??4SarcFile@@QEAAAEAV0@$$QEAV0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??4SarcFile@@QEAAAEAV0@$$QEAV0@@Z PROC			; SarcFile::operator=, COMDAT
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	movzx	eax, BYTE PTR [rdx]
	lea	rdi, QWORD PTR [rdx+8]
	lea	rsi, QWORD PTR [rcx+8]
	mov	BYTE PTR [rcx], al
	mov	rbx, rcx

; 737  :         if (this == _STD addressof(_Right)) {

	cmp	rsi, rdi
	je	SHORT $LN8@operator

; 738  :             return *this;
; 739  :         }
; 740  : 
; 741  :         _Alty& _Al                = _Getal();
; 742  :         _Alty& _Right_al          = _Right._Getal();
; 743  :         constexpr auto _Pocma_val = _Choose_pocma_v<_Alty>;
; 744  :         if constexpr (_Pocma_val == _Pocma_values::_No_propagate_allocators) {
; 745  :             if (_Al != _Right_al) {
; 746  :                 _Move_assign_unequal_alloc(_Right);
; 747  :                 return *this;
; 748  :             }
; 749  :         }
; 750  : 
; 751  :         _Tidy();

	mov	rcx, rsi
	call	?_Tidy@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@AEAAXXZ ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::_Tidy

; 412  :         _Myfirst = _Right._Myfirst;

	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rsi], rax

; 413  :         _Mylast  = _Right._Mylast;

	mov	rax, QWORD PTR [rdi+8]
	mov	QWORD PTR [rsi+8], rax

; 414  :         _Myend   = _Right._Myend;

	mov	rax, QWORD PTR [rdi+16]
	mov	QWORD PTR [rsi+16], rax

; 415  : 
; 416  :         _Right._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rdi], rax

; 417  :         _Right._Mylast  = nullptr;

	mov	QWORD PTR [rdi+8], rax

; 418  :         _Right._Myend   = nullptr;

	mov	QWORD PTR [rdi+16], rax
$LN8@operator:
	mov	rsi, QWORD PTR [rsp+56]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4SarcFile@@QEAAAEAV0@$$QEAV0@@Z ENDP			; SarcFile::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>, COMDAT
$LN23:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	add	rcx, 184				; 000000b8H
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+120]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+56]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >, COMDAT
$LN39:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR [rcx+32]
	test	rcx, rcx
	je	SHORT $LN6@pair

; 2045 :             _Destroy_range(_Myfirst, _Mylast, _Al);
; 2046 :             _ASAN_VECTOR_REMOVE;
; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR [rbx+48]
	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN24@pair

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	r8, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	sub	rcx, r8

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	lea	rax, QWORD PTR [rcx-8]
	cmp	rax, 31
	ja	SHORT $LN21@pair

; 175  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rcx, r8
$LN24@pair:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2049 :             _Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rbx+32], rax

; 2050 :             _Mylast  = nullptr;

	mov	QWORD PTR [rbx+40], rax

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR [rbx+48], rax
$LN6@pair:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN21@pair:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN36@pair:
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAX_K@Z PROC ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::__autoclassinit2, COMDAT
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [rcx], xmm0
	ret	0
?__autoclassinit2@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAX_K@Z ENDP ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__param0$ = 16
__param1$dead$ = 24
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Insert_return_type@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Insert_return_type@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@std@@QEAA@XZ PROC ; std::_Insert_return_type<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile> >::~_Insert_return_type<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile> >, COMDAT
	add	rcx, 16
	jmp	??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::~_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
??1?$_Insert_return_type@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@std@@QEAA@XZ ENDP ; std::_Insert_return_type<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile> >::~_Insert_return_type<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__param0$ = 16
__param1$dead$ = 24
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@XZ
_TEXT	SEGMENT
this$ = 8
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator->, COMDAT

; 186  :         return this->_Ptr->_Myval;

	mov	rax, QWORD PTR [rcx]
	add	rax, 32					; 00000020H

; 279  :         return pointer_traits<pointer>::pointer_to(**this);
; 280  :     }

	ret	0
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator->
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@XZ
_TEXT	SEGMENT
this$ = 8
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator->, COMDAT

; 186  :         return this->_Ptr->_Myval;

	mov	rax, QWORD PTR [rcx]
	add	rax, 32					; 00000020H

; 279  :         return pointer_traits<pointer>::pointer_to(**this);
; 280  :     }

	ret	0
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Pnode$ = 16
_Plist$dead$ = 24
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rcx], rdx

; 39   :         this->_Adopt(_Plist);
; 40   :     }

	mov	rax, rcx
	ret	0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ?_Release@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@XZ PROC ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rcx]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rcx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 175  :     }

	ret	0
?_Release@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@XZ ENDP ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ?empty@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBA_NXZ PROC ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::empty, COMDAT

; 168  :         return _Ptr == nullptr;

	cmp	QWORD PTR [rcx], 0
	sete	al

; 169  :     }

	ret	0
?empty@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBA_NXZ ENDP ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ?_Getptr@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getptr@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@XZ PROC ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Getptr, COMDAT

; 147  :         return _Ptr;

	mov	rax, QWORD PTR [rcx]

; 148  :     }

	ret	0
?_Getptr@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@XZ ENDP ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Getptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ??0?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 8
_That$ = 16
??0?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>, COMDAT

; 106  :     _Node_handle(_Node_handle&& _That) noexcept : _Ptr{_That._Ptr} { // steal node and allocator (if any) from _That

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax

; 107  :         if (_Ptr != nullptr) {

	test	rax, rax
	mov	rax, rcx
	je	SHORT $LN2@Node_handl

; 108  :             _That._Ptr       = nullptr;

	mov	QWORD PTR [rdx], 0
$LN2@Node_handl:

; 109  :             _Alloc& _That_al = _That._Getal();
; 110  :             _Construct_in_place(_Getal(), _STD move(_That_al));
; 111  :             _Destroy_in_place(_That_al);
; 112  :         }
; 113  :     }

	ret	0
??0?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ PROC ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::~_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>, COMDAT

; 102  :     ~_Node_handle() noexcept {

$LN82:
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 82   :         if (_Ptr != nullptr) {

	mov	rdi, QWORD PTR [rcx]

; 102  :     ~_Node_handle() noexcept {

	mov	rsi, rcx

; 82   :         if (_Ptr != nullptr) {

	test	rdi, rdi
	je	SHORT $LN4@Node_handl
	lea	rcx, QWORD PTR [rdi+216]
	mov	QWORD PTR [rsp+56], rbx
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+152]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+112]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+88]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+64]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rsi]
	mov	edx, 288				; 00000120H
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 88   :             _Ptr = nullptr;

	mov	rbx, QWORD PTR [rsp+56]
	mov	QWORD PTR [rsi], 0
$LN4@Node_handl:

; 103  :         _Clear();
; 104  :     }

	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??1?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ ENDP ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::~_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ??0?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ PROC ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>, COMDAT

; 77   :     _Nodeptr _Ptr{};

	xor	eax, eax
	mov	QWORD PTR [rcx], 0
	mov	BYTE PTR [rcx+8], al

; 100  :     constexpr _Node_handle() noexcept : _Alloc_storage{} {}

	mov	rax, rcx
	ret	0
??0?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAA@XZ ENDP ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ?mapped@?$_Node_handle_map_base@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBAAEAVBymlFile@@XZ
_TEXT	SEGMENT
this$ = 8
?mapped@?$_Node_handle_map_base@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBAAEAVBymlFile@@XZ PROC ; std::_Node_handle_map_base<std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::mapped, COMDAT

; 41   :         return _Datum().second;

	mov	rax, QWORD PTR [rcx]
	add	rax, 64					; 00000040H

; 42   :     }

	ret	0
?mapped@?$_Node_handle_map_base@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBAAEAVBymlFile@@XZ ENDP ; std::_Node_handle_map_base<std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::mapped
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ?key@?$_Node_handle_map_base@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
?key@?$_Node_handle_map_base@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Node_handle_map_base<std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::key, COMDAT

; 48   :         auto& _Data       = _Self._Getptr()->_Myval;

	mov	rax, QWORD PTR [rcx]
	add	rax, 32					; 00000020H

; 38   :         return _Datum().first;
; 39   :     }

	ret	0
?key@?$_Node_handle_map_base@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Node_handle_map_base<std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::key
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAA?AV01@H@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
__formal$dead$ = 24
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAA?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::operator++, COMDAT

; 289  :         _Vector_iterator _Tmp = *this;

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 79   :         ++_Ptr;

	add	rax, 56					; 00000038H
	mov	QWORD PTR [rcx], rax

; 290  :         _Mybase::operator++();
; 291  :         return _Tmp;

	mov	rax, rdx

; 292  :     }

	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAA?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBAPEAUEntry@SarcFile@@XZ
_TEXT	SEGMENT
this$ = 8
??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBAPEAUEntry@SarcFile@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::operator->, COMDAT

; 272  : #if _ITERATOR_DEBUG_LEVEL != 0
; 273  :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());
; 274  :         _STL_VERIFY(this->_Ptr, "can't dereference value-initialized vector iterator");
; 275  :         _STL_VERIFY(_Mycont, "can't dereference invalidated vector iterator");
; 276  :         _STL_VERIFY(_Mycont->_Myfirst <= this->_Ptr && this->_Ptr < _Mycont->_Mylast,
; 277  :             "can't dereference out of range vector iterator");
; 278  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 279  : 
; 280  :         return this->_Ptr;

	mov	rax, QWORD PTR [rcx]

; 281  :     }

	ret	0
??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBAPEAUEntry@SarcFile@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::operator->
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::operator==, COMDAT

; 162  :         _Compat(_Right);
; 163  :         return _Ptr == _Right._Ptr;

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	sete	al

; 164  :     }

	ret	0
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
this$ = 112
_Keyval$ = 120
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[], COMDAT

; 346  :     mapped_type& operator[](const key_type& _Keyval) {

$LN153:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rsi, rdx
	mov	r14, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbp, QWORD PTR [rcx]
	mov	rbx, QWORD PTR [rbp+8]
	mov	QWORD PTR _Loc$1[rsp], rbx
	xor	r15d, r15d
	mov	DWORD PTR _Loc$1[rsp+8], r15d
	mov	rdi, rbp

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r15b
	jne	SHORT $LN9@operator
	npad	5
$LL8@operator:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR _Loc$1[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN10@operator

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR _Loc$1[rsp+8], r15d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN11@operator
$LN10@operator:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR _Loc$1[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN11@operator:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r15b
	je	SHORT $LL8@operator
$LN9@operator:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r15b
	jne	SHORT $LN4@operator
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	jns	SHORT $LN3@operator
$LN4@operator:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH
	cmp	QWORD PTR [r14+8], rax
	je	$LN151@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T4[rsp], r14

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T4[rsp+8], r15

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T4[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, rsi
	lea	rcx, QWORD PTR [rax+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rdi+64], r15
	mov	QWORD PTR [rdi+72], r15
	mov	QWORD PTR [rdi+80], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 212  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$1[rsp]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	mov	r8, rdi
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, r14
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Insert_node
	mov	rdi, rax
$LN3@operator:

; 347  :         return _Try_emplace(_Keyval).first->_Myval.second;

	lea	rax, QWORD PTR [rdi+64]

; 348  :     }

	lea	r11, QWORD PTR [rsp+80]
	mov	rbx, QWORD PTR [r11+40]
	mov	rbp, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
	ret	0
$LN151@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN149@operator:
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
this$ = 112
_Keyval$ = 120
?dtor$2@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]'::`1'::dtor$2
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
?dtor$2@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
this$ = 112
_Keyval$ = 120
?dtor$1@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]'::`1'::dtor$1
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$1@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAAAEAV?$vector@EV?$allocator@E@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::operator[]'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAA@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >, COMDAT

; 107  :     map() : _Mybase(key_compare()) {}

$LN50:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 107  :     map() : _Mybase(key_compare()) {}

	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+88]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 107  :     map() : _Mybase(key_compare()) {}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Keyval$ = 56
?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::count, COMDAT

; 1406 :     _NODISCARD size_type count(const key_type& _Keyval) const {

$LN30:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rdi, QWORD PTR [rcx]

; 1406 :     _NODISCARD size_type count(const key_type& _Keyval) const {

	mov	rsi, rdx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbx, QWORD PTR [rdi+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN5@count
	npad	1
$LL4@count:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN6@count

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN7@count
$LN6@count:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN7@count:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL4@count
$LN5@count:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN15@count
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	js	SHORT $LN15@count

; 1407 :         if constexpr (_Multi) {
; 1408 :             const auto _Ans = _Eqrange(_Keyval);
; 1409 :             return static_cast<size_type>(_STD distance(
; 1410 :                 _Unchecked_const_iterator(_Ans.first, nullptr), _Unchecked_const_iterator(_Ans.second, nullptr)));
; 1411 :         } else {
; 1412 :             return _Lower_bound_duplicate(_Find_lower_bound(_Keyval)._Bound, _Keyval);

	mov	eax, 1

; 1413 :         }
; 1414 :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN15@count:
	mov	rbx, QWORD PTR [rsp+48]
	xor	eax, eax
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::count
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::clear, COMDAT

; 1354 :     void clear() noexcept {

$LN70:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	r14
	sub	rsp, 32					; 00000020H

; 1355 :         const auto _Scary = _Get_scary();
; 1356 :         _Scary->_Orphan_ptr(nullptr);
; 1357 :         auto _Head = _Scary->_Myhead;

	mov	rsi, QWORD PTR [rcx]
	mov	r14, rcx

; 1358 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

	mov	rbx, QWORD PTR [rsi+8]

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN5@clear
	mov	QWORD PTR [rsp+56], rdi
	npad	11
$LL4@clear:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, r14
	mov	rcx, r14
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rdi+32]
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL4@clear
	mov	rdi, QWORD PTR [rsp+56]
$LN5@clear:

; 1359 :         _Head->_Parent  = _Head;
; 1360 :         _Head->_Left    = _Head;
; 1361 :         _Head->_Right   = _Head;
; 1362 :         _Scary->_Mysize = 0;
; 1363 :     }

	mov	rbx, QWORD PTR [rsp+64]
	mov	QWORD PTR [rsi+8], rsi
	mov	QWORD PTR [rsi], rsi
	mov	QWORD PTR [rsi+16], rsi
	mov	rsi, QWORD PTR [rsp+72]
	mov	QWORD PTR [r14+8], 0
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::size, COMDAT

; 1194 :         return _Get_scary()->_Mysize;

	mov	rax, QWORD PTR [rcx+8]

; 1195 :     }

	ret	0
?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin, COMDAT

; 1126 :         const auto _Scary = _Get_scary();
; 1127 :         return iterator(_Scary->_Myhead->_Left, _Scary);

	mov	rax, QWORD PTR [rcx]

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rcx, QWORD PTR [rax]

; 1126 :         const auto _Scary = _Get_scary();
; 1127 :         return iterator(_Scary->_Myhead->_Left, _Scary);

	mov	rax, rdx

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rdx], rcx

; 1128 :     }

	ret	0
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >, COMDAT

; 1080 :     ~_Tree() noexcept {

$LN116:
	mov	QWORD PTR [rsp+24], rbx
	push	rsi
	sub	rsp, 32					; 00000020H

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	rbx, QWORD PTR [rcx]

; 1080 :     ~_Tree() noexcept {

	mov	rsi, rcx

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	rbx, QWORD PTR [rbx+8]

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN7@Tree
	mov	QWORD PTR [rsp+56], rdi
	npad	1
$LL6@Tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, rsi
	mov	rcx, rsi
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rdi+32]
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL6@Tree
	mov	rdi, QWORD PTR [rsp+56]
$LN7@Tree:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rsi]
	mov	edx, 88					; 00000058H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1087 :     }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
$T5 = 72
this$ = 112
_Keyval$ = 120
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[], COMDAT

; 346  :     mapped_type& operator[](const key_type& _Keyval) {

$LN164:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rsi, rdx
	mov	r14, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbp, QWORD PTR [rcx]
	mov	rbx, QWORD PTR [rbp+8]
	mov	QWORD PTR _Loc$1[rsp], rbx
	xor	r15d, r15d
	mov	DWORD PTR _Loc$1[rsp+8], r15d
	mov	rdi, rbp

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r15b
	jne	SHORT $LN9@operator
	npad	5
$LL8@operator:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR _Loc$1[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN10@operator

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR _Loc$1[rsp+8], r15d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN11@operator
$LN10@operator:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR _Loc$1[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN11@operator:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r15b
	je	SHORT $LL8@operator
$LN9@operator:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r15b
	jne	SHORT $LN4@operator
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	jns	SHORT $LN3@operator
$LN4@operator:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 64051194700380387			; 00e38e38e38e38e3H
	cmp	QWORD PTR [r14+8], rax
	je	$LN162@operator
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T4[rsp], r14

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T4[rsp+8], r15

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T4[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 806  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T5[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, rsi
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	call	??0BymlFile@@QEAA@XZ			; BymlFile::BymlFile
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 212  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$1[rsp]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	mov	r8, rdi
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, r14
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Insert_node
	mov	rdi, rax
$LN3@operator:

; 347  :         return _Try_emplace(_Keyval).first->_Myval.second;

	lea	rax, QWORD PTR [rdi+64]

; 348  :     }

	lea	r11, QWORD PTR [rsp+80]
	mov	rbx, QWORD PTR [r11+40]
	mov	rbp, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
	ret	0
$LN162@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN160@operator:
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
$T5 = 72
this$ = 112
_Keyval$ = 120
?dtor$2@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]'::`1'::dtor$2
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
?dtor$2@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
$T5 = 72
this$ = 112
_Keyval$ = 120
?dtor$1@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]'::`1'::dtor$1
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$1@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
$T4 = 32
_Loc$1 = 48
$T5 = 72
this$ = 112
_Keyval$ = 120
?dtor$4@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]'::`1'::dtor$4
	mov	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0???A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAVBymlFile@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator[]'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator=, COMDAT

; 161  :     map& operator=(const map& _Right) {

$LN35:
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx
	mov	rdi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1091 :         if (this == _STD addressof(_Right)) {

	cmp	rcx, rdx
	je	$LN28@operator
	mov	QWORD PTR [rsp+48], rbx

; 1358 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

	mov	rdx, rcx
	mov	rbx, QWORD PTR [rcx]
	mov	r8, QWORD PTR [rbx+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >

; 1359 :         _Head->_Parent  = _Head;

	mov	QWORD PTR [rbx+8], rbx

; 1640 :         _Scary->_Myhead->_Parent = _Copy_nodes<_Strat>(_Right_scary->_Myhead->_Parent, _Scary->_Myhead);

	mov	rcx, rdi

; 1360 :         _Head->_Left    = _Head;

	mov	QWORD PTR [rbx], rbx

; 1361 :         _Head->_Right   = _Head;

	mov	QWORD PTR [rbx+16], rbx

; 1640 :         _Scary->_Myhead->_Parent = _Copy_nodes<_Strat>(_Right_scary->_Myhead->_Parent, _Scary->_Myhead);

	mov	r8, QWORD PTR [rdi]

; 1362 :         _Scary->_Mysize = 0;

	mov	QWORD PTR [rdi+8], 0

; 1640 :         _Scary->_Myhead->_Parent = _Copy_nodes<_Strat>(_Right_scary->_Myhead->_Parent, _Scary->_Myhead);

	mov	rdx, QWORD PTR [rsi]
	mov	rdx, QWORD PTR [rdx+8]
	call	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>
	mov	rcx, QWORD PTR [rdi]

; 1641 :         _Scary->_Mysize          = _Right_scary->_Mysize;
; 1642 :         if (!_Scary->_Myhead->_Parent->_Isnil) { // nonempty tree, look for new smallest and largest

	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rcx+8], rax
	mov	r8, QWORD PTR [rdi]
	mov	rax, QWORD PTR [rsi+8]
	mov	QWORD PTR [rdi+8], rax
	mov	rdx, QWORD PTR [r8+8]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN9@operator

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [rdx]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN14@operator
	npad	4
$LL13@operator:
	mov	rax, QWORD PTR [rcx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	rdx, rcx
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL13@operator
$LN14@operator:

; 1643 :             _Scary->_Myhead->_Left  = _Scary_val::_Min(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [r8], rdx

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	rdx, QWORD PTR [rdi]
	mov	rcx, QWORD PTR [rdx+8]

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN18@operator
$LL17@operator:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rcx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL17@operator
$LN18@operator:

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [rdx+16], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 164  :     }

	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN9@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1646 :             _Scary->_Myhead->_Left  = _Scary->_Myhead;

	mov	QWORD PTR [r8], r8

; 1647 :             _Scary->_Myhead->_Right = _Scary->_Myhead;

	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rax+16], rax
$LN28@operator:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 164  :     }

	mov	rsi, QWORD PTR [rsp+56]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >, COMDAT

; 107  :     map() : _Mybase(key_compare()) {}

$LN46:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 107  :     map() : _Mybase(key_compare()) {}

	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 107  :     map() : _Mybase(key_compare()) {}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@QEAA@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU32@@Z
_TEXT	SEGMENT
this$ = 8
_Loc$ = 16
_Newnode$ = 24
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Insert_node, COMDAT

; 647  :         ++_Mysize;

	inc	QWORD PTR [rcx+8]
	mov	r9, r8

; 648  :         const auto _Head  = _Myhead;

	mov	r11, QWORD PTR [rcx]
	mov	r10, rcx

; 649  :         _Newnode->_Parent = _Loc._Parent;

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [r8+8], rax

; 650  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

	cmp	rax, r11
	jne	SHORT $LN5@Insert_nod

; 651  :             _Head->_Left     = _Newnode;

	mov	QWORD PTR [r11], r8

; 712  :         return _Newnode;
; 713  :     }

	mov	rax, r8
	mov	QWORD PTR [r11+8], r8
	mov	QWORD PTR [r11+16], r8
	mov	BYTE PTR [r8+24], 1
	ret	0
$LN5@Insert_nod:

; 652  :             _Head->_Parent   = _Newnode;
; 653  :             _Head->_Right    = _Newnode;
; 654  :             _Newnode->_Color = _Black; // the root is black
; 655  :             return _Newnode;
; 656  :         }
; 657  : 
; 658  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 659  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

	cmp	DWORD PTR [rdx+8], 0
	jne	SHORT $LN6@Insert_nod

; 660  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 661  :             _Loc._Parent->_Right = _Newnode;

	mov	QWORD PTR [rax+16], r9

; 662  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

	cmp	rax, QWORD PTR [r11+16]
	jne	SHORT $LN9@Insert_nod

; 663  :                 _Head->_Right = _Newnode;

	mov	QWORD PTR [r11+16], r9

; 664  :             }
; 665  :         } else { // add to left of _Loc._Parent

	jmp	SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 666  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 667  :             _Loc._Parent->_Left = _Newnode;

	mov	QWORD PTR [rax], r9

; 668  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

	cmp	rax, QWORD PTR [r11]
	jne	SHORT $LN9@Insert_nod

; 669  :                 _Head->_Left = _Newnode;

	mov	QWORD PTR [r11], r9
$LN9@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

	mov	rcx, QWORD PTR [r8+8]
	mov	rax, r9
	cmp	BYTE PTR [rcx+24], 0
	jne	$LN3@Insert_nod
	npad	1
$LL2@Insert_nod:

; 674  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

	mov	rdx, QWORD PTR [rax+8]
	mov	r8, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [r8]
	cmp	rdx, rcx
	jne	$LN10@Insert_nod

; 675  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

	mov	rcx, QWORD PTR [r8+16]

; 676  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

	cmp	BYTE PTR [rcx+24], 0
	jne	SHORT $LN12@Insert_nod

; 677  :                     _Pnode->_Parent->_Color          = _Black;

	mov	BYTE PTR [rdx+24], 1

; 678  :                     _Parent_sibling->_Color          = _Black;

	mov	BYTE PTR [rcx+24], 1

; 679  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	mov	BYTE PTR [rdx+24], 0

; 680  :                     _Pnode                           = _Pnode->_Parent->_Parent;

	mov	rcx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rcx+8]

; 681  :                 } else { // parent's sibling has red and black children

	jmp	$LN46@Insert_nod
$LN12@Insert_nod:

; 682  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

	mov	r8, QWORD PTR [rdx+16]
	cmp	rax, r8
	jne	SHORT $LN51@Insert_nod

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	rcx, QWORD PTR [r8]

; 683  :                         _Pnode = _Pnode->_Parent;

	mov	rax, rdx

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	QWORD PTR [rdx+16], rcx

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [r8]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN20@Insert_nod

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

	mov	QWORD PTR [rcx+8], rdx
$LN20@Insert_nod:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rcx

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rcx, QWORD PTR [r10]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN21@Insert_nod

; 471  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rcx+8], r8
	jmp	SHORT $LN24@Insert_nod
$LN21@Insert_nod:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

	mov	rcx, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rcx]
	jne	SHORT $LN23@Insert_nod

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rcx], r8

; 474  :         } else {

	jmp	SHORT $LN24@Insert_nod
$LN23@Insert_nod:

; 475  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rcx+16], r8
$LN24@Insert_nod:

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

	mov	QWORD PTR [r8], rdx

; 479  :         _Wherenode->_Parent = _Pnode;

	mov	QWORD PTR [rdx+8], r8
$LN51@Insert_nod:

; 684  :                         _Lrotate(_Pnode);
; 685  :                     }
; 686  : 
; 687  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+24], 1

; 688  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	mov	BYTE PTR [rdx+24], 0

; 689  :                     _Rrotate(_Pnode->_Parent->_Parent);

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]

; 483  :         _Nodeptr _Pnode   = _Wherenode->_Left;

	mov	r8, QWORD PTR [rdx]

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	rcx, QWORD PTR [r8+16]
	mov	QWORD PTR [rdx], rcx

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

	mov	rcx, QWORD PTR [r8+16]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN27@Insert_nod

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

	mov	QWORD PTR [rcx+8], rdx
$LN27@Insert_nod:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rcx

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rcx, QWORD PTR [r10]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN28@Insert_nod

; 493  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rcx+8], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [r8+16], rdx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

	jmp	$LN53@Insert_nod
$LN28@Insert_nod:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

	mov	rcx, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rcx+16]
	jne	SHORT $LN30@Insert_nod

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rcx+16], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [r8+16], rdx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

	jmp	$LN53@Insert_nod
$LN30@Insert_nod:

; 497  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rcx], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [r8+16], rdx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

	jmp	$LN53@Insert_nod
$LN10@Insert_nod:

; 692  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 693  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

	cmp	BYTE PTR [rcx+24], 0
	jne	SHORT $LN15@Insert_nod

; 694  :                     _Pnode->_Parent->_Color          = _Black;

	mov	BYTE PTR [rdx+24], 1

; 695  :                     _Parent_sibling->_Color          = _Black;

	mov	BYTE PTR [rcx+24], 1

; 696  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	mov	BYTE PTR [rdx+24], 0

; 697  :                     _Pnode                           = _Pnode->_Parent->_Parent;

	mov	rcx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rcx+8]

; 698  :                 } else { // parent's sibling has red and black children

	jmp	$LN46@Insert_nod
$LN15@Insert_nod:

; 699  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

	mov	r8, QWORD PTR [rdx]
	cmp	rax, r8
	jne	SHORT $LN39@Insert_nod

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	rcx, QWORD PTR [r8+16]

; 700  :                         _Pnode = _Pnode->_Parent;

	mov	rax, rdx

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	QWORD PTR [rdx], rcx

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

	mov	rcx, QWORD PTR [r8+16]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN34@Insert_nod

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

	mov	QWORD PTR [rcx+8], rdx
$LN34@Insert_nod:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rcx

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rcx, QWORD PTR [r10]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN35@Insert_nod

; 493  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rcx+8], r8
	jmp	SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

	mov	rcx, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rcx+16]
	jne	SHORT $LN37@Insert_nod

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rcx+16], r8

; 496  :         } else {

	jmp	SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 497  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rcx], r8
$LN38@Insert_nod:

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [r8+16], rdx

; 501  :         _Wherenode->_Parent = _Pnode;

	mov	QWORD PTR [rdx+8], r8
$LN39@Insert_nod:

; 701  :                         _Rrotate(_Pnode);
; 702  :                     }
; 703  : 
; 704  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+24], 1

; 705  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	mov	BYTE PTR [rdx+24], 0

; 706  :                     _Lrotate(_Pnode->_Parent->_Parent);

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]

; 461  :         _Nodeptr _Pnode    = _Wherenode->_Right;

	mov	r8, QWORD PTR [rdx+16]

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	rcx, QWORD PTR [r8]
	mov	QWORD PTR [rdx+16], rcx

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [r8]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN41@Insert_nod

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

	mov	QWORD PTR [rcx+8], rdx
$LN41@Insert_nod:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rcx

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rcx, QWORD PTR [r10]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN42@Insert_nod

; 471  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rcx+8], r8
	jmp	SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

	mov	rcx, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rcx]
	jne	SHORT $LN44@Insert_nod

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rcx], r8

; 474  :         } else {

	jmp	SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 475  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rcx+16], r8
$LN45@Insert_nod:

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

	mov	QWORD PTR [r8], rdx
$LN53@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

	mov	QWORD PTR [rdx+8], r8
$LN46@Insert_nod:
	mov	rcx, QWORD PTR [rax+8]
	cmp	BYTE PTR [rcx+24], 0
	je	$LL2@Insert_nod
$LN3@Insert_nod:

; 707  :                 }
; 708  :             }
; 709  :         }
; 710  : 
; 711  :         _Head->_Parent->_Color = _Black; // root is always black

	mov	rax, QWORD PTR [r11+8]
	mov	BYTE PTR [rax+24], 1

; 712  :         return _Newnode;
; 713  :     }

	mov	rax, r9
	ret	0
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Get_scary, COMDAT

; 1969 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	rax, rcx

; 1970 :     }

	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Check_node_allocator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAXAEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Handle$dead$ = 16
?_Check_node_allocator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAXAEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Check_node_allocator, COMDAT

; 1932 :         (void) _Handle;
; 1933 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1934 :         _STL_VERIFY(get_allocator() == _Handle._Getal(), "node handle allocator incompatible for insert");
; 1935 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1936 :     }

	ret	0
?_Check_node_allocator@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAXAEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Check_node_allocator
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
this$ = 80
__$ReturnUdt$ = 88
_Keyval$ = 96
?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::extract, COMDAT

; 1743 :     node_type extract(const key_type& _Keyval) {

$LN69:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H

; 1612 :         const auto _Scary = _Get_scary();

	mov	r14, QWORD PTR [rcx]

; 1743 :     node_type extract(const key_type& _Keyval) {

	mov	rbp, r8
	mov	rsi, rdx
	mov	r15, rcx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbx, r14
	mov	rdi, QWORD PTR [r14+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN13@extract
	npad	7
$LL12@extract:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN14@extract

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rdi, QWORD PTR [rdi+16]

; 1620 :             } else {

	jmp	SHORT $LN15@extract
$LN14@extract:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rbx, rdi

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rdi, QWORD PTR [rdi]
$LN15@extract:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rdi+25], 0
	je	SHORT $LL12@extract
$LN13@extract:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	xor	edi, edi
	cmp	BYTE PTR [rbx+25], dil
	jne	SHORT $LN60@extract
	lea	rdx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	js	SHORT $LN60@extract

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	cmp	rbx, r14

; 1744 :         const const_iterator _Where = find(_Keyval);
; 1745 :         if (_Where == end()) {

	je	SHORT $LN60@extract

; 1738 :         const auto _Ptr = _Scary->_Extract(_Where._Unwrapped());

	mov	rdx, rbx
	mov	rcx, r15
	call	?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Extract
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 93   :         : _Ptr{_Ptr_} { // Initialize a _Node_handle that holds the specified node

	mov	QWORD PTR [rsi], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1749 :         return extract(_Where);

	jmp	SHORT $LN66@extract
$LN60@extract:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 77   :     _Nodeptr _Ptr{};

	xor	eax, eax
	mov	QWORD PTR [rsi], rdi
	mov	BYTE PTR [rsi+8], al
$LN66@extract:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1750 :     }

	mov	rbx, QWORD PTR [rsp+96]
	mov	rax, rsi
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::extract
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Check_grow_by_1, COMDAT

; 1630 :     void _Check_grow_by_1() {

$LN7:
	sub	rsp, 40					; 00000028H

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 64051194700380387			; 00e38e38e38e38e3H
	cmp	QWORD PTR [rcx+8], rax
	je	SHORT $LN6@Check_grow

; 1633 :         }
; 1634 :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN6@Check_grow:

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN4@Check_grow:
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Check_grow_by_1
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Keyval$ = 56
?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::count, COMDAT

; 1406 :     _NODISCARD size_type count(const key_type& _Keyval) const {

$LN30:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rdi, QWORD PTR [rcx]

; 1406 :     _NODISCARD size_type count(const key_type& _Keyval) const {

	mov	rsi, rdx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbx, QWORD PTR [rdi+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN5@count
	npad	1
$LL4@count:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN6@count

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN7@count
$LN6@count:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN7@count:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL4@count
$LN5@count:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN15@count
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	js	SHORT $LN15@count

; 1407 :         if constexpr (_Multi) {
; 1408 :             const auto _Ans = _Eqrange(_Keyval);
; 1409 :             return static_cast<size_type>(_STD distance(
; 1410 :                 _Unchecked_const_iterator(_Ans.first, nullptr), _Unchecked_const_iterator(_Ans.second, nullptr)));
; 1411 :         } else {
; 1412 :             return _Lower_bound_duplicate(_Find_lower_bound(_Keyval)._Bound, _Keyval);

	mov	eax, 1

; 1413 :         }
; 1414 :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN15@count:
	mov	rbx, QWORD PTR [rsp+48]
	xor	eax, eax
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?count@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::count
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::clear, COMDAT

; 1354 :     void clear() noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1355 :         const auto _Scary = _Get_scary();
; 1356 :         _Scary->_Orphan_ptr(nullptr);
; 1357 :         auto _Head = _Scary->_Myhead;

	mov	rbx, QWORD PTR [rcx]

; 1358 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

	mov	rdx, rcx
	mov	rdi, rcx
	mov	r8, QWORD PTR [rbx+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >

; 1359 :         _Head->_Parent  = _Head;

	mov	QWORD PTR [rbx+8], rbx

; 1360 :         _Head->_Left    = _Head;

	mov	QWORD PTR [rbx], rbx

; 1361 :         _Head->_Right   = _Head;

	mov	QWORD PTR [rbx+16], rbx

; 1362 :         _Scary->_Mysize = 0;
; 1363 :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+8], 0
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::size, COMDAT

; 1194 :         return _Get_scary()->_Mysize;

	mov	rax, QWORD PTR [rcx+8]

; 1195 :     }

	ret	0
?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::end, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 1136 :         const auto _Scary = _Get_scary();
; 1137 :         return iterator(_Scary->_Myhead, _Scary);

	mov	rax, rdx

; 1138 :     }

	ret	0
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::begin, COMDAT

; 1126 :         const auto _Scary = _Get_scary();
; 1127 :         return iterator(_Scary->_Myhead->_Left, _Scary);

	mov	rax, QWORD PTR [rcx]

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rcx, QWORD PTR [rax]

; 1126 :         const auto _Scary = _Get_scary();
; 1127 :         return iterator(_Scary->_Myhead->_Left, _Scary);

	mov	rax, rdx

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rdx], rcx

; 1128 :     }

	ret	0
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >, COMDAT

; 1080 :     ~_Tree() noexcept {

$LN52:
	push	rbx
	sub	rsp, 32					; 00000020H

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rdx, rcx

; 1080 :     ~_Tree() noexcept {

	mov	rbx, rcx

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 288				; 00000120H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1087 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?end@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@XZ PROC ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::end, COMDAT

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	rax, QWORD PTR [rcx+8]
	mov	QWORD PTR [rdx], rax

; 1805 :         auto& _My_data = _Mypair._Myval2;
; 1806 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

	mov	rax, rdx

; 1807 :     }

	ret	0
?end@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@XZ ENDP ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAA@PEAUEntry@SarcFile@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
__param0$ = 16
__param1$dead$ = 24
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAA@PEAUEntry@SarcFile@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >, COMDAT

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAA@PEAUEntry@SarcFile@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?begin@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?begin@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@XZ PROC ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::begin, COMDAT

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 1795 :         auto& _My_data = _Mypair._Myval2;
; 1796 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	rax, rdx

; 1797 :     }

	ret	0
?begin@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@XZ ENDP ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?erase@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Where$ = 64
?erase@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@@Z PROC ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::erase, COMDAT

; 1717 :         is_nothrow_move_assignable_v<value_type>) /* strengthened */ {

$LN28:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H

; 1718 :         const pointer _Whereptr = _Where._Ptr;
; 1719 :         auto& _My_data          = _Mypair._Myval2;
; 1720 :         pointer& _Mylast        = _My_data._Mylast;
; 1721 : 
; 1722 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1723 :         _STL_VERIFY(
; 1724 :             _Where._Getcont() == _STD addressof(_My_data) && _Whereptr >= _My_data._Myfirst && _Mylast > _Whereptr,
; 1725 :             "vector erase iterator outside range");
; 1726 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1727 : 
; 1728 :         _Orphan_range(_Whereptr, _Mylast);
; 1729 :         _STD _Move_unchecked(_Whereptr + 1, _Mylast, _Whereptr);

	mov	rbp, QWORD PTR [rcx+8]
	lea	rdi, QWORD PTR [r8+56]
	mov	rbx, r8
	mov	r14, rdx
	mov	rsi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4898 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	cmp	rdi, rbp
	je	SHORT $LN5@erase
$LL6@erase:
	lea	rcx, QWORD PTR [rdi-56]
	mov	rdx, rdi
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rdi+32]
	lea	rcx, QWORD PTR [rdi-24]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	add	rdi, 56					; 00000038H
	cmp	rdi, rbp
	jne	SHORT $LL6@erase
$LN5@erase:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 1730 :         _Alty_traits::destroy(_Getal(), _Unfancy(_Mylast - 1));

	mov	rcx, QWORD PTR [rsi+8]
	sub	rcx, 56					; 00000038H
	call	??1Entry@SarcFile@@QEAA@XZ

; 1731 :         _ASAN_VECTOR_MODIFY(-1);
; 1732 :         --_Mylast;

	add	QWORD PTR [rsi+8], -56			; ffffffffffffffc8H

; 1733 :         return iterator(_Whereptr, _STD addressof(_My_data));

	mov	rax, r14

; 1734 :     }

	mov	rsi, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+72]

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	QWORD PTR [r14], rbx

; 1734 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?erase@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@2@@Z ENDP ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??4?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::operator=, COMDAT

; 736  :         _Choose_pocma_v<_Alty> != _Pocma_values::_No_propagate_allocators) {

$LN10:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx

; 737  :         if (this == _STD addressof(_Right)) {

	cmp	rcx, rdx
	je	SHORT $LN7@operator

; 738  :             return *this;
; 739  :         }
; 740  : 
; 741  :         _Alty& _Al                = _Getal();
; 742  :         _Alty& _Right_al          = _Right._Getal();
; 743  :         constexpr auto _Pocma_val = _Choose_pocma_v<_Alty>;
; 744  :         if constexpr (_Pocma_val == _Pocma_values::_No_propagate_allocators) {
; 745  :             if (_Al != _Right_al) {
; 746  :                 _Move_assign_unequal_alloc(_Right);
; 747  :                 return *this;
; 748  :             }
; 749  :         }
; 750  : 
; 751  :         _Tidy();

	call	?_Tidy@?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@AEAAXXZ ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::_Tidy

; 412  :         _Myfirst = _Right._Myfirst;

	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rbx], rax

; 413  :         _Mylast  = _Right._Mylast;

	mov	rax, QWORD PTR [rdi+8]
	mov	QWORD PTR [rbx+8], rax

; 414  :         _Myend   = _Right._Myend;

	mov	rax, QWORD PTR [rdi+16]
	mov	QWORD PTR [rbx+16], rax

; 415  : 
; 416  :         _Right._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rdi], rax

; 417  :         _Right._Mylast  = nullptr;

	mov	QWORD PTR [rdi+8], rax

; 418  :         _Right._Myend   = nullptr;

	mov	QWORD PTR [rdi+16], rax
$LN7@operator:

; 752  : #if _ITERATOR_DEBUG_LEVEL != 0
; 753  :         if constexpr (_Pocma_val == _Pocma_values::_Propagate_allocators) {
; 754  :             if (_Al != _Right_al) {
; 755  :                 // intentionally slams into noexcept on OOM, TRANSITION, VSO-466800
; 756  :                 _Mypair._Myval2._Reload_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Al), _GET_PROXY_ALLOCATOR(_Alty, _Right_al));
; 757  :             }
; 758  :         }
; 759  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 760  : 
; 761  :         _Pocma(_Al, _Right_al);
; 762  :         _Mypair._Myval2._Take_contents(_Right._Mypair._Myval2);
; 763  :         return *this;
; 764  :     }

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z
_TEXT	SEGMENT
this$ = 8
_Ch$dead$ = 16
_Off$dead$ = 24
?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind, COMDAT

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rcx+24], 16

; 4399 :         // look for _Ch before _Off
; 4400 :         return static_cast<size_type>(

	mov	rdx, QWORD PTR [rcx+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN4@rfind

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rcx]
$LN4@rfind:

; 648  :     if (_Hay_size != 0) { // room for match, look for it

	test	rdx, rdx
	je	SHORT $LN22@rfind

; 649  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	dec	rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	mov	rax, -1
	cmp	rdx, rax
	cmovb	rax, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 649  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	add	rax, rcx

; 450  :         return _Left == _Right;

	cmp	BYTE PTR [rax], 46			; 0000002eH

; 650  :             if (_Traits::eq(*_Match_try, _Ch)) {

	je	SHORT $LN21@rfind
	npad	4
$LL11@rfind:

; 652  :             }
; 653  : 
; 654  :             if (_Match_try == _Haystack) {

	cmp	rax, rcx
	je	SHORT $LN22@rfind

; 649  :         for (auto _Match_try = _Haystack + (_STD min)(_Start_at, _Hay_size - 1);; --_Match_try) {

	dec	rax

; 450  :         return _Left == _Right;

	cmp	BYTE PTR [rax], 46			; 0000002eH

; 650  :             if (_Traits::eq(*_Match_try, _Ch)) {

	jne	SHORT $LL11@rfind
$LN21@rfind:

; 651  :                 return static_cast<size_t>(_Match_try - _Haystack); // found a match

	sub	rax, rcx

; 4401 :             _Traits_rfind_ch<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off, _Ch));
; 4402 :     }

	ret	0
$LN22@rfind:

; 4399 :         // look for _Ch before _Off
; 4400 :         return static_cast<size_type>(

	mov	rax, -1

; 4401 :             _Traits_rfind_ch<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize, _Off, _Ch));
; 4402 :     }

	ret	0
?rfind@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::rfind
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__param0$ = 16
__param1$dead$ = 24
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__param0$ = 16
__param1$dead$ = 24
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@AEAU32@@Z
_TEXT	SEGMENT
_Val$ = 8
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@AEAU32@@Z PROC ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> *>::pointer_to, COMDAT

; 306  :         return _STD addressof(_Val);

	mov	rax, rcx

; 307  :     }

	ret	0
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@AEAU32@@Z ENDP ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@2@AEAU32@@Z
_TEXT	SEGMENT
_Val$ = 8
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@2@AEAU32@@Z PROC ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > *>::pointer_to, COMDAT

; 306  :         return _STD addressof(_Val);

	mov	rax, rcx

; 307  :     }

	ret	0
?pointer_to@?$pointer_traits@PEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@SAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@2@AEAU32@@Z ENDP ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*, COMDAT

; 186  :         return this->_Ptr->_Myval;

	mov	rax, QWORD PTR [rcx]
	add	rax, 32					; 00000020H

; 275  :         return const_cast<reference>(_Mybase::operator*());
; 276  :     }

	ret	0
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Pnode$ = 16
_Plist$dead$ = 24
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base0>, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rcx], rdx

; 39   :         this->_Adopt(_Plist);
; 40   :     }

	mov	rax, rcx
	ret	0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator*, COMDAT

; 186  :         return this->_Ptr->_Myval;

	mov	rax, QWORD PTR [rcx]
	add	rax, 32					; 00000020H

; 275  :         return const_cast<reference>(_Mybase::operator*());
; 276  :     }

	ret	0
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator==, COMDAT

; 229  : #if _ITERATOR_DEBUG_LEVEL == 2
; 230  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "map/set iterators incompatible");
; 231  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 232  : 
; 233  :         return this->_Ptr == _Right._Ptr;

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	sete	al

; 234  :     }

	ret	0
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ?_Getal@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@XZ PROC ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Getal, COMDAT

; 151  :         return reinterpret_cast<_Alloc&>(_Alloc_storage);

	lea	rax, QWORD PTR [rcx+8]

; 152  :     }

	ret	0
?_Getal@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@QEAAAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@XZ ENDP ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ PROC ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Clear, COMDAT

; 81   :     void _Clear() noexcept { // destroy any contained node and return to the empty state

$LN79:
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 82   :         if (_Ptr != nullptr) {

	mov	rdi, QWORD PTR [rcx]
	mov	rsi, rcx
	test	rdi, rdi
	je	SHORT $LN2@Clear
	lea	rcx, QWORD PTR [rdi+216]
	mov	QWORD PTR [rsp+56], rbx
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+152]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+112]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+88]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+64]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rsi]
	mov	edx, 288				; 00000120H
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 88   :             _Ptr = nullptr;

	mov	rbx, QWORD PTR [rsp+56]
	mov	QWORD PTR [rsi], 0
$LN2@Clear:

; 89   :         }
; 90   :     }

	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Clear@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAAXXZ ENDP ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ?_Datum@?$_Node_handle_map_base@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEBAAEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Datum@?$_Node_handle_map_base@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEBAAEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@XZ PROC ; std::_Node_handle_map_base<std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Datum, COMDAT

; 47   :         const auto& _Self = static_cast<const _Derived_type&>(*this);
; 48   :         auto& _Data       = _Self._Getptr()->_Myval;

	mov	rax, QWORD PTR [rcx]
	add	rax, 32					; 00000020H

; 49   :         // NB: Node handle requires formally-undefined behavior *somewhere*, this
; 50   :         // implementation chooses to type-pun pair<const K, T> as pair<K, T>.
; 51   :         return reinterpret_cast<_Pair_type&>(_Data);
; 52   :     }

	ret	0
?_Datum@?$_Node_handle_map_base@V?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEBAAEAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@XZ ENDP ; std::_Node_handle_map_base<std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Datum
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Right$dead$ = 16
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::_Compat, COMDAT

; 195  :         // test for compatible iterator pair
; 196  : #if _ITERATOR_DEBUG_LEVEL == 0
; 197  :         (void) _Right;
; 198  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 / _ITERATOR_DEBUG_LEVEL != 0 vvv
; 199  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "vector iterators incompatible");
; 200  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 201  :     }

	ret	0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::operator++, COMDAT

; 72   : #if _ITERATOR_DEBUG_LEVEL != 0
; 73   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());
; 74   :         _STL_VERIFY(_Ptr, "can't increment value-initialized vector iterator");
; 75   :         _STL_VERIFY(_Mycont, "can't increment invalidated vector iterator");
; 76   :         _STL_VERIFY(_Ptr < _Mycont->_Mylast, "can't increment vector iterator past end");
; 77   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 78   : 
; 79   :         ++_Ptr;

	add	QWORD PTR [rcx], 56			; 00000038H

; 80   :         return *this;

	mov	rax, rcx

; 81   :     }

	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAA@PEAUEntry@SarcFile@@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 8
_Parg$ = 16
_Pvector$dead$ = 24
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAA@PEAUEntry@SarcFile@@PEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >, COMDAT

; 43   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	mov	QWORD PTR [rcx], rdx

; 44   :         this->_Adopt(_Pvector);
; 45   :     }

	mov	rax, rcx
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEAA@PEAUEntry@SarcFile@@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$dead$ = 16
?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Orphan_ptr, COMDAT

; 716  : #if _ITERATOR_DEBUG_LEVEL == 2
; 717  :         _Lockit _Lock(_LOCK_DEBUG);
; 718  :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;
; 719  :         while (*_Pnext) {
; 720  :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;
; 721  :             if (_Pnextptr == _Myhead || (_Ptr != nullptr && _Pnextptr != _Ptr)) {
; 722  :                 _Pnext = &(*_Pnext)->_Mynextiter;
; 723  :             } else { // orphan the iterator
; 724  :                 (*_Pnext)->_Myproxy = nullptr;
; 725  :                 *_Pnext             = (*_Pnext)->_Mynextiter;
; 726  :             }
; 727  :         }
; 728  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 729  :         (void) _Ptr;
; 730  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 731  :     }

	ret	0
?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Orphan_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_scary, COMDAT

; 1973 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	rax, rcx

; 1974 :     }

	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_scary, COMDAT

; 1969 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	rax, rcx

; 1970 :     }

	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal, COMDAT

; 1961 :         return _Mypair._Myval2._Get_first();

	mov	rax, rcx

; 1962 :     }

	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$dead$ = 56
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >, COMDAT

; 882  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t{}, _Parg, _Zero_then_variadic_args_t{}) {

$LN46:
	push	rbx
	sub	rsp, 32					; 00000020H

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax

; 882  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t{}, _Parg, _Zero_then_variadic_args_t{}) {

	mov	rbx, rcx

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+88]
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax

; 883  :         _Alloc_sentinel_and_proxy();
; 884  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$dead$ = 16
?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Orphan_ptr, COMDAT

; 716  : #if _ITERATOR_DEBUG_LEVEL == 2
; 717  :         _Lockit _Lock(_LOCK_DEBUG);
; 718  :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;
; 719  :         while (*_Pnext) {
; 720  :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;
; 721  :             if (_Pnextptr == _Myhead || (_Ptr != nullptr && _Pnextptr != _Ptr)) {
; 722  :                 _Pnext = &(*_Pnext)->_Mynextiter;
; 723  :             } else { // orphan the iterator
; 724  :                 (*_Pnext)->_Myproxy = nullptr;
; 725  :                 *_Pnext             = (*_Pnext)->_Mynextiter;
; 726  :             }
; 727  :         }
; 728  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 / _ITERATOR_DEBUG_LEVEL != 2 vvv
; 729  :         (void) _Ptr;
; 730  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 731  :     }

	ret	0
?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Orphan_ptr
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z
_TEXT	SEGMENT
this$ = 8
_Wherenode$ = 16
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Rrotate, COMDAT

; 483  :         _Nodeptr _Pnode   = _Wherenode->_Left;

	mov	r8, QWORD PTR [rdx]

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	rax, QWORD PTR [r8+16]
	mov	QWORD PTR [rdx], rax

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [r8+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN2@Rrotate

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

	mov	QWORD PTR [rax+8], rdx
$LN2@Rrotate:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rax

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rax, QWORD PTR [rcx]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN3@Rrotate

; 493  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rax+8], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;
; 501  :         _Wherenode->_Parent = _Pnode;
; 502  :     }

	mov	QWORD PTR [r8+16], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
$LN3@Rrotate:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN5@Rrotate

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rax+16], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;
; 501  :         _Wherenode->_Parent = _Pnode;
; 502  :     }

	mov	QWORD PTR [r8+16], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
$LN5@Rrotate:

; 496  :         } else {
; 497  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rax], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;
; 501  :         _Wherenode->_Parent = _Pnode;
; 502  :     }

	mov	QWORD PTR [r8+16], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z
_TEXT	SEGMENT
this$ = 8
_Wherenode$ = 16
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Lrotate, COMDAT

; 461  :         _Nodeptr _Pnode    = _Wherenode->_Right;

	mov	r8, QWORD PTR [rdx+16]

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx+16], rax

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN2@Lrotate

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

	mov	QWORD PTR [rax+8], rdx
$LN2@Lrotate:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rax

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rax, QWORD PTR [rcx]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN3@Lrotate

; 471  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rax+8], r8

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;
; 479  :         _Wherenode->_Parent = _Pnode;
; 480  :     }

	mov	QWORD PTR [r8], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
$LN3@Lrotate:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rax]
	jne	SHORT $LN5@Lrotate

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rax], r8

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;
; 479  :         _Wherenode->_Parent = _Pnode;
; 480  :     }

	mov	QWORD PTR [r8], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
$LN5@Lrotate:

; 474  :         } else {
; 475  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rax+16], r8

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;
; 479  :         _Wherenode->_Parent = _Pnode;
; 480  :     }

	mov	QWORD PTR [r8], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Get_scary, COMDAT

; 1973 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	rax, rcx

; 1974 :     }

	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getal, COMDAT

; 1961 :         return _Mypair._Myval2._Get_first();

	mov	rax, rcx

; 1962 :     }

	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Where$ = 64
?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::extract, COMDAT

; 1732 :     node_type extract(const const_iterator _Where) {

$LN13:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 1733 :         const auto _Scary = _Get_scary();
; 1734 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1735 :         _STL_VERIFY(_Where._Getcont() == _Scary && !_Where._Ptr->_Isnil, "map/set erase iterator outside range");
; 1736 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1737 : 
; 1738 :         const auto _Ptr = _Scary->_Extract(_Where._Unwrapped());

	mov	rdx, r8
	call	?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Extract
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h

; 93   :         : _Ptr{_Ptr_} { // Initialize a _Node_handle that holds the specified node

	mov	QWORD PTR [rbx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1740 :         return node_type::_Make(_Ptr, _Getal());

	mov	rax, rbx

; 1741 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?extract@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::extract
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Keyval$ = 64
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::find, COMDAT

; 1377 :     _NODISCARD iterator find(const key_type& _Keyval) {

$LN41:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	r14, QWORD PTR [rcx]

; 1377 :     _NODISCARD iterator find(const key_type& _Keyval) {

	mov	rbp, r8
	mov	rsi, rdx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rdi, r14
	mov	rbx, QWORD PTR [r14+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN8@find
$LL7@find:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN9@find

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN10@find
$LN9@find:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN10@find:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL7@find
$LN8@find:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN4@find
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	js	SHORT $LN4@find

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rsi], rdi

; 1370 :             return _Loc._Bound;

	jmp	SHORT $LN38@find
$LN4@find:

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rsi], r14
$LN38@find:

; 1378 :         return iterator(_Find(_Keyval), _Get_scary());
; 1379 :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::find
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::max_size, COMDAT

; 1198 :         return (_STD min)(

	mov	rax, 64051194700380387			; 00e38e38e38e38e3H

; 1199 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alnode_traits::max_size(_Getal()));
; 1200 :     }

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEBA_KXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::operator=, COMDAT

; 1090 :     _Tree& operator=(const _Tree& _Right) {

$LN34:
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx
	mov	rdi, rcx

; 1091 :         if (this == _STD addressof(_Right)) {

	cmp	rcx, rdx
	je	$LN27@operator
	mov	QWORD PTR [rsp+48], rbx

; 1358 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

	mov	rdx, rcx
	mov	rbx, QWORD PTR [rcx]
	mov	r8, QWORD PTR [rbx+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >

; 1359 :         _Head->_Parent  = _Head;

	mov	QWORD PTR [rbx+8], rbx

; 1640 :         _Scary->_Myhead->_Parent = _Copy_nodes<_Strat>(_Right_scary->_Myhead->_Parent, _Scary->_Myhead);

	mov	rcx, rdi

; 1360 :         _Head->_Left    = _Head;

	mov	QWORD PTR [rbx], rbx

; 1361 :         _Head->_Right   = _Head;

	mov	QWORD PTR [rbx+16], rbx

; 1640 :         _Scary->_Myhead->_Parent = _Copy_nodes<_Strat>(_Right_scary->_Myhead->_Parent, _Scary->_Myhead);

	mov	r8, QWORD PTR [rdi]

; 1362 :         _Scary->_Mysize = 0;

	mov	QWORD PTR [rdi+8], 0

; 1640 :         _Scary->_Myhead->_Parent = _Copy_nodes<_Strat>(_Right_scary->_Myhead->_Parent, _Scary->_Myhead);

	mov	rdx, QWORD PTR [rsi]
	mov	rdx, QWORD PTR [rdx+8]
	call	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>
	mov	rcx, QWORD PTR [rdi]

; 1641 :         _Scary->_Mysize          = _Right_scary->_Mysize;
; 1642 :         if (!_Scary->_Myhead->_Parent->_Isnil) { // nonempty tree, look for new smallest and largest

	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rcx+8], rax
	mov	r8, QWORD PTR [rdi]
	mov	rax, QWORD PTR [rsi+8]
	mov	QWORD PTR [rdi+8], rax
	mov	rdx, QWORD PTR [r8+8]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN7@operator

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [rdx]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN12@operator
	npad	4
$LL11@operator:
	mov	rax, QWORD PTR [rcx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	rdx, rcx
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL11@operator
$LN12@operator:

; 1643 :             _Scary->_Myhead->_Left  = _Scary_val::_Min(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [r8], rdx

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	rdx, QWORD PTR [rdi]
	mov	rcx, QWORD PTR [rdx+8]

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN16@operator
$LL15@operator:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rcx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL15@operator
$LN16@operator:

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [rdx+16], rcx

; 1092 :             return *this;
; 1093 :         }
; 1094 : 
; 1095 :         auto& _Al       = _Getal();
; 1096 :         auto& _Right_al = _Right._Getal();
; 1097 :         if constexpr (_Choose_pocca_v<_Alnode>) {
; 1098 :             if (_Al != _Right_al) {
; 1099 :                 clear();
; 1100 :                 const auto _Scary = _Get_scary();
; 1101 :                 _Scary->_Orphan_all();
; 1102 :                 auto&& _Alproxy       = _GET_PROXY_ALLOCATOR(_Alnode, _Al);
; 1103 :                 auto&& _Right_alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Right_al);
; 1104 :                 _Container_proxy_ptr<_Alty> _Proxy(_Right_alproxy, _Leave_proxy_unbound{});
; 1105 :                 auto _Right_al_non_const = _Right_al;
; 1106 :                 auto _Newhead            = _Node::_Buyheadnode(_Right_al_non_const);
; 1107 :                 _Node::_Freenode0(_Al, _Scary->_Myhead);
; 1108 :                 _Pocca(_Al, _Right_al);
; 1109 :                 _Scary->_Myhead = _Newhead;
; 1110 :                 _Proxy._Bind(_Alproxy, _Scary);
; 1111 :                 _Getcomp() = _Right._Getcomp();
; 1112 :                 _Copy<_Strategy::_Copy>(_Right);
; 1113 :                 return *this;
; 1114 :             }
; 1115 :         }
; 1116 : 
; 1117 :         clear();
; 1118 :         _Getcomp() = _Right._Getcomp();
; 1119 :         _Pocca(_Al, _Right_al);
; 1120 :         _Copy<_Strategy::_Copy>(_Right);
; 1121 : 
; 1122 :         return *this;
; 1123 :     }

	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN7@operator:

; 1646 :             _Scary->_Myhead->_Left  = _Scary->_Myhead;

	mov	QWORD PTR [r8], r8

; 1647 :             _Scary->_Myhead->_Right = _Scary->_Myhead;

	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rax+16], rax
$LN27@operator:

; 1092 :             return *this;
; 1093 :         }
; 1094 : 
; 1095 :         auto& _Al       = _Getal();
; 1096 :         auto& _Right_al = _Right._Getal();
; 1097 :         if constexpr (_Choose_pocca_v<_Alnode>) {
; 1098 :             if (_Al != _Right_al) {
; 1099 :                 clear();
; 1100 :                 const auto _Scary = _Get_scary();
; 1101 :                 _Scary->_Orphan_all();
; 1102 :                 auto&& _Alproxy       = _GET_PROXY_ALLOCATOR(_Alnode, _Al);
; 1103 :                 auto&& _Right_alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Right_al);
; 1104 :                 _Container_proxy_ptr<_Alty> _Proxy(_Right_alproxy, _Leave_proxy_unbound{});
; 1105 :                 auto _Right_al_non_const = _Right_al;
; 1106 :                 auto _Newhead            = _Node::_Buyheadnode(_Right_al_non_const);
; 1107 :                 _Node::_Freenode0(_Al, _Scary->_Myhead);
; 1108 :                 _Pocca(_Al, _Right_al);
; 1109 :                 _Scary->_Myhead = _Newhead;
; 1110 :                 _Proxy._Bind(_Alproxy, _Scary);
; 1111 :                 _Getcomp() = _Right._Getcomp();
; 1112 :                 _Copy<_Strategy::_Copy>(_Right);
; 1113 :                 return *this;
; 1114 :             }
; 1115 :         }
; 1116 : 
; 1117 :         clear();
; 1118 :         _Getcomp() = _Right._Getcomp();
; 1119 :         _Pocca(_Al, _Right_al);
; 1120 :         _Copy<_Strategy::_Copy>(_Right);
; 1121 : 
; 1122 :         return *this;
; 1123 :     }

	mov	rsi, QWORD PTR [rsp+56]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$dead$ = 56
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >, COMDAT

; 882  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t{}, _Parg, _Zero_then_variadic_args_t{}) {

$LN42:
	push	rbx
	sub	rsp, 32					; 00000020H

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax

; 882  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t{}, _Parg, _Zero_then_variadic_args_t{}) {

	mov	rbx, rcx

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax

; 883  :         _Alloc_sentinel_and_proxy();
; 884  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Take_contents@?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?_Take_contents@?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_val<std::_Simple_types<SarcFile::Entry> >::_Take_contents, COMDAT

; 411  :         this->_Swap_proxy_and_iterators(_Right);
; 412  :         _Myfirst = _Right._Myfirst;

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax

; 413  :         _Mylast  = _Right._Mylast;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [rcx+8], rax

; 414  :         _Myend   = _Right._Myend;

	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax

; 415  : 
; 416  :         _Right._Myfirst = nullptr;

	xor	eax, eax
	mov	QWORD PTR [rdx], rax

; 417  :         _Right._Mylast  = nullptr;

	mov	QWORD PTR [rdx+8], rax

; 418  :         _Right._Myend   = nullptr;

	mov	QWORD PTR [rdx+16], rax

; 419  :     }

	ret	0
?_Take_contents@?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_val<std::_Simple_types<SarcFile::Entry> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*, COMDAT

; 180  : #if _ITERATOR_DEBUG_LEVEL == 2
; 181  :         const auto _Mycont = static_cast<const _Mytree*>(this->_Getcont());
; 182  :         _STL_ASSERT(_Mycont, "cannot dereference value-initialized map/set iterator");
; 183  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot dereference end map/set iterator");
; 184  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 185  : 
; 186  :         return this->_Ptr->_Myval;

	mov	rax, QWORD PTR [rcx]
	add	rax, 32					; 00000020H

; 187  :     }

	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Unwrapped@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?_Unwrapped@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Unwrapped, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 251  :         return _Tree_unchecked_const_iterator<_Mytree>(this->_Ptr, static_cast<const _Mytree*>(this->_Getcont()));

	mov	rax, rdx

; 252  :     }

	ret	0
?_Unwrapped@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator*, COMDAT

; 180  : #if _ITERATOR_DEBUG_LEVEL == 2
; 181  :         const auto _Mycont = static_cast<const _Mytree*>(this->_Getcont());
; 182  :         _STL_ASSERT(_Mycont, "cannot dereference value-initialized map/set iterator");
; 183  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot dereference end map/set iterator");
; 184  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 185  : 
; 186  :         return this->_Ptr->_Myval;

	mov	rax, QWORD PTR [rcx]
	add	rax, 32					; 00000020H

; 187  :     }

	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBAAEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ?_Make@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@SA?AV12@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Ptr$ = 16
_Al$dead$ = 24
?_Make@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@SA?AV12@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@Z PROC ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Make, COMDAT

; 93   :         : _Ptr{_Ptr_} { // Initialize a _Node_handle that holds the specified node

	mov	QWORD PTR [rcx], rdx

; 203  :         // initialize a _Node_handle that holds _Ptr and _Al
; 204  :         // pre: _Al can release _Ptr
; 205  :         _STL_INTERNAL_CHECK(_Ptr != nullptr);
; 206  :         return _Node_handle{_Ptr, _Al};

	mov	rax, rcx

; 207  :     }

	ret	0
?_Make@?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@SA?AV12@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@Z ENDP ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Make
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Alloc_sentinel_and_proxy, COMDAT

; 1939 :     void _Alloc_sentinel_and_proxy() {

$LN36:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1940 :         const auto _Scary = _Get_scary();
; 1941 :         auto&& _Alproxy   = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());
; 1942 :         _Container_proxy_ptr<_Alnode> _Proxy(_Alproxy, *_Scary);
; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax

; 1944 :         _Proxy._Release();
; 1945 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Alloc_sentinel_and_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Where$ = 56
?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Extract, COMDAT

; 504  :     _Nodeptr _Extract(_Unchecked_const_iterator _Where) noexcept {

$LN156:
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

	mov	rax, QWORD PTR [rdx+16]
	lea	r11, QWORD PTR [rdx+16]

; 504  :     _Nodeptr _Extract(_Unchecked_const_iterator _Where) noexcept {

	mov	rdi, rcx

; 505  :         _Nodeptr _Erasednode = _Where._Ptr; // node to erase

	mov	rsi, rdx

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LN49@Extract

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

	mov	rax, QWORD PTR [rdx+8]
	lea	r8, QWORD PTR [rdx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN50@Extract
	npad	4
$LL47@Extract:
	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN50@Extract

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

	mov	rdx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL47@Extract

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())
; 58   :         } else {

	jmp	SHORT $LN50@Extract
$LN49@Extract:

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rdx, QWORD PTR [rax]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN54@Extract
	npad	2
$LL53@Extract:
	mov	rcx, QWORD PTR [rdx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	rax, rdx
	mov	rdx, rcx
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL53@Extract
$LN54@Extract:

; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

	lea	r8, QWORD PTR [rsi+8]
$LN50@Extract:

; 506  :         ++_Where; // save successor iterator for return
; 507  : 
; 508  :         _Nodeptr _Fixnode; // the node to recolor as needed
; 509  :         _Nodeptr _Fixnodeparent; // parent of _Fixnode (which may be nil)
; 510  :         _Nodeptr _Pnode = _Erasednode;
; 511  : 
; 512  :         if (_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [rsi]
	mov	r10, QWORD PTR [r11]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN104@Extract

; 513  :             _Fixnode = _Pnode->_Right; // stitch up right subtree
; 514  :         } else if (_Pnode->_Right->_Isnil) {

	cmp	BYTE PTR [r10+25], 0
	je	SHORT $LN7@Extract

; 515  :             _Fixnode = _Pnode->_Left; // stitch up left subtree

	mov	r10, rcx

; 516  :         } else { // two subtrees, must lift successor node to replace erased

	jmp	SHORT $LN104@Extract
$LN7@Extract:

; 517  :             _Pnode   = _Where._Ptr; // _Pnode is successor node
; 518  :             _Fixnode = _Pnode->_Right; // _Fixnode is only subtree

	mov	r10, QWORD PTR [rax+16]

; 519  :         }
; 520  : 
; 521  :         if (_Pnode == _Erasednode) { // at most one subtree, relink it

	cmp	rax, rsi
	jne	$LN9@Extract
$LN104@Extract:

; 522  :             _Fixnodeparent = _Erasednode->_Parent;
; 523  :             if (!_Fixnode->_Isnil) {

	cmp	BYTE PTR [r10+25], 0
	mov	r9, QWORD PTR [r8]
	jne	SHORT $LN11@Extract

; 524  :                 _Fixnode->_Parent = _Fixnodeparent; // link up

	mov	QWORD PTR [r10+8], r9
$LN11@Extract:

; 525  :             }
; 526  : 
; 527  :             if (_Myhead->_Parent == _Erasednode) {

	mov	rax, QWORD PTR [rdi]
	cmp	QWORD PTR [rax+8], rsi
	jne	SHORT $LN12@Extract

; 528  :                 _Myhead->_Parent = _Fixnode; // link down from root

	mov	QWORD PTR [rax+8], r10
	jmp	SHORT $LN15@Extract
$LN12@Extract:

; 529  :             } else if (_Fixnodeparent->_Left == _Erasednode) {

	cmp	QWORD PTR [r9], rsi
	jne	SHORT $LN14@Extract

; 530  :                 _Fixnodeparent->_Left = _Fixnode; // link down to left

	mov	QWORD PTR [r9], r10

; 531  :             } else {

	jmp	SHORT $LN15@Extract
$LN14@Extract:

; 532  :                 _Fixnodeparent->_Right = _Fixnode; // link down to right

	mov	QWORD PTR [r9+16], r10
$LN15@Extract:

; 533  :             }
; 534  : 
; 535  :             if (_Myhead->_Left == _Erasednode) {

	mov	r8, QWORD PTR [rdi]
	cmp	QWORD PTR [r8], rsi
	jne	SHORT $LN16@Extract

; 536  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

	cmp	BYTE PTR [r10+25], 0
	je	SHORT $LN42@Extract
	mov	rdx, r9
	jmp	SHORT $LN58@Extract
$LN42@Extract:

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [r10]

; 536  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

	mov	rdx, r10

; 453  :         while (!_Pnode->_Left->_Isnil) {

	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN58@Extract
	npad	13
$LL57@Extract:
	mov	rax, QWORD PTR [rcx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	rdx, rcx
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL57@Extract
$LN58@Extract:

; 536  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

	mov	QWORD PTR [r8], rdx
$LN16@Extract:

; 537  :                                                   : _Min(_Fixnode); // smallest in relinked subtree
; 538  :             }
; 539  : 
; 540  :             if (_Myhead->_Right == _Erasednode) {

	mov	rdx, QWORD PTR [rdi]
	cmp	QWORD PTR [rdx+16], rsi
	jne	$LN65@Extract

; 541  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

	cmp	BYTE PTR [r10+25], 0
	je	SHORT $LN44@Extract
	mov	rcx, r9
	mov	QWORD PTR [rdx+16], rcx

; 542  :                                                    : _Max(_Fixnode); // largest in relinked subtree
; 543  :             }
; 544  :         } else { // erased has two subtrees, _Pnode is successor to erased

	jmp	$LN65@Extract
$LN44@Extract:

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [r10+16]

; 541  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

	mov	rcx, r10

; 445  :         while (!_Pnode->_Right->_Isnil) {

	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN62@Extract
	npad	1
$LL61@Extract:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rcx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL61@Extract
$LN62@Extract:

; 541  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

	mov	QWORD PTR [rdx+16], rcx

; 542  :                                                    : _Max(_Fixnode); // largest in relinked subtree
; 543  :             }
; 544  :         } else { // erased has two subtrees, _Pnode is successor to erased

	jmp	SHORT $LN65@Extract
$LN9@Extract:

; 545  :             _Erasednode->_Left->_Parent = _Pnode; // link left up

	mov	QWORD PTR [rcx+8], rax

; 546  :             _Pnode->_Left               = _Erasednode->_Left; // link successor down

	mov	rcx, QWORD PTR [rsi]
	mov	QWORD PTR [rax], rcx

; 547  : 
; 548  :             if (_Pnode == _Erasednode->_Right) {

	cmp	rax, QWORD PTR [r11]
	jne	SHORT $LN18@Extract

; 549  :                 _Fixnodeparent = _Pnode; // successor is next to erased

	mov	r9, rax

; 550  :             } else { // successor further down, link in place of erased

	jmp	SHORT $LN19@Extract
$LN18@Extract:

; 551  :                 _Fixnodeparent = _Pnode->_Parent; // parent is successor's
; 552  :                 if (!_Fixnode->_Isnil) {

	cmp	BYTE PTR [r10+25], 0
	mov	r9, QWORD PTR [rax+8]
	jne	SHORT $LN20@Extract

; 553  :                     _Fixnode->_Parent = _Fixnodeparent; // link fix up

	mov	QWORD PTR [r10+8], r9
$LN20@Extract:

; 554  :                 }
; 555  : 
; 556  :                 _Fixnodeparent->_Left        = _Fixnode; // link fix down

	mov	QWORD PTR [r9], r10

; 557  :                 _Pnode->_Right               = _Erasednode->_Right; // link next down

	mov	rcx, QWORD PTR [r11]
	mov	QWORD PTR [rax+16], rcx

; 558  :                 _Erasednode->_Right->_Parent = _Pnode; // right up

	mov	rcx, QWORD PTR [r11]
	mov	QWORD PTR [rcx+8], rax
$LN19@Extract:

; 559  :             }
; 560  : 
; 561  :             if (_Myhead->_Parent == _Erasednode) {

	mov	rcx, QWORD PTR [rdi]
	cmp	QWORD PTR [rcx+8], rsi
	jne	SHORT $LN21@Extract

; 562  :                 _Myhead->_Parent = _Pnode; // link down from root

	mov	QWORD PTR [rcx+8], rax
	jmp	SHORT $LN24@Extract
$LN21@Extract:

; 563  :             } else if (_Erasednode->_Parent->_Left == _Erasednode) {

	mov	rcx, QWORD PTR [r8]
	cmp	QWORD PTR [rcx], rsi
	jne	SHORT $LN23@Extract

; 564  :                 _Erasednode->_Parent->_Left = _Pnode; // link down to left

	mov	QWORD PTR [rcx], rax

; 565  :             } else {

	jmp	SHORT $LN24@Extract
$LN23@Extract:

; 566  :                 _Erasednode->_Parent->_Right = _Pnode; // link down to right

	mov	QWORD PTR [rcx+16], rax
$LN24@Extract:

; 569  :             _Pnode->_Parent = _Erasednode->_Parent; // link successor up

	mov	rcx, QWORD PTR [r8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 99   :     _Ty _Tmp = _STD move(_Left);

	movzx	edx, BYTE PTR [rax+24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 569  :             _Pnode->_Parent = _Erasednode->_Parent; // link successor up

	mov	QWORD PTR [rax+8], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 100  :     _Left    = _STD move(_Right);

	movzx	ecx, BYTE PTR [rsi+24]
	mov	BYTE PTR [rax+24], cl

; 101  :     _Right   = _STD move(_Tmp);

	mov	BYTE PTR [rsi+24], dl
$LN65@Extract:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 573  :         if (_Erasednode->_Color == _Black) { // erasing black link, must recolor/rebalance tree

	cmp	BYTE PTR [rsi+24], 1
	jne	$LN25@Extract

; 574  :             for (; _Fixnode != _Myhead->_Parent && _Fixnode->_Color == _Black; _Fixnodeparent = _Fixnode->_Parent) {

	mov	rax, QWORD PTR [rdi]
	cmp	r10, QWORD PTR [rax+8]
	je	$LN3@Extract
	mov	QWORD PTR [rsp+56], rbx
	npad	8
$LL4@Extract:
	cmp	BYTE PTR [r10+24], 1
	mov	rbx, r9
	jne	$LN152@Extract

; 575  :                 if (_Fixnode == _Fixnodeparent->_Left) { // fixup left subtree

	mov	rdx, QWORD PTR [r9]
	cmp	r10, rdx
	jne	$LN26@Extract

; 576  :                     _Pnode = _Fixnodeparent->_Right;

	mov	rdx, QWORD PTR [r9+16]

; 577  :                     if (_Pnode->_Color == _Red) { // rotate red up from right subtree

	cmp	BYTE PTR [rdx+24], 0
	jne	SHORT $LN105@Extract

; 578  :                         _Pnode->_Color         = _Black;

	mov	BYTE PTR [rdx+24], 1

; 461  :         _Nodeptr _Pnode    = _Wherenode->_Right;

	mov	rdx, QWORD PTR [r9+16]

; 579  :                         _Fixnodeparent->_Color = _Red;

	mov	BYTE PTR [r9+24], 0

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [r9+16], rax

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

	mov	rax, QWORD PTR [rdx]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN67@Extract

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

	mov	QWORD PTR [rax+8], r9
$LN67@Extract:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rax, QWORD PTR [r9+8]
	lea	rcx, QWORD PTR [r9+8]
	mov	QWORD PTR [rdx+8], rax

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rax, QWORD PTR [rdi]
	cmp	r9, QWORD PTR [rax+8]
	jne	SHORT $LN68@Extract

; 471  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rax+8], rdx

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

	mov	QWORD PTR [rdx], r9

; 479  :         _Wherenode->_Parent = _Pnode;

	mov	QWORD PTR [rcx], rdx

; 580  :                         _Lrotate(_Fixnodeparent);
; 581  :                         _Pnode = _Fixnodeparent->_Right;

	mov	rdx, QWORD PTR [r9+16]
	jmp	SHORT $LN96@Extract
$LN68@Extract:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

	mov	rax, QWORD PTR [rcx]
	cmp	r9, QWORD PTR [rax]
	jne	SHORT $LN70@Extract

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rax], rdx

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

	mov	QWORD PTR [rdx], r9

; 479  :         _Wherenode->_Parent = _Pnode;

	mov	QWORD PTR [rcx], rdx

; 580  :                         _Lrotate(_Fixnodeparent);
; 581  :                         _Pnode = _Fixnodeparent->_Right;

	mov	rdx, QWORD PTR [r9+16]
	jmp	SHORT $LN96@Extract
$LN70@Extract:

; 475  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rax+16], rdx

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

	mov	QWORD PTR [rdx], r9

; 479  :         _Wherenode->_Parent = _Pnode;

	mov	QWORD PTR [rcx], rdx

; 580  :                         _Lrotate(_Fixnodeparent);
; 581  :                         _Pnode = _Fixnodeparent->_Right;

	mov	rdx, QWORD PTR [r9+16]
	jmp	SHORT $LN96@Extract
$LN105@Extract:
	lea	rcx, QWORD PTR [r9+8]
$LN96@Extract:

; 582  :                     }
; 583  : 
; 584  :                     if (_Pnode->_Isnil) {

	cmp	BYTE PTR [rdx+25], 0
	jne	$LN2@Extract

; 585  :                         _Fixnode = _Fixnodeparent; // shouldn't happen
; 586  :                     } else if (_Pnode->_Left->_Color == _Black
; 587  :                                && _Pnode->_Right->_Color == _Black) { // redden right subtree with black children

	mov	r11, QWORD PTR [rdx]
	cmp	BYTE PTR [r11+24], 1
	jne	SHORT $LN107@Extract
	mov	rax, QWORD PTR [rdx+16]
	cmp	BYTE PTR [rax+24], 1
	je	$LN153@Extract
$LN107@Extract:

; 588  :                         _Pnode->_Color = _Red;
; 589  :                         _Fixnode       = _Fixnodeparent;
; 590  :                     } else { // must rearrange right subtree
; 591  :                         if (_Pnode->_Right->_Color == _Black) { // rotate red up from left sub-subtree

	mov	rax, QWORD PTR [rdx+16]
	cmp	BYTE PTR [rax+24], 1
	jne	SHORT $LN33@Extract

; 592  :                             _Pnode->_Left->_Color = _Black;

	mov	BYTE PTR [r11+24], 1

; 593  :                             _Pnode->_Color        = _Red;
; 594  :                             _Rrotate(_Pnode);

	mov	rcx, rdi
	mov	BYTE PTR [rdx+24], 0
	call	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Rrotate

; 595  :                             _Pnode = _Fixnodeparent->_Right;

	mov	rdx, QWORD PTR [r9+16]
$LN33@Extract:

; 596  :                         }
; 597  : 
; 598  :                         _Pnode->_Color         = _Fixnodeparent->_Color;

	movzx	eax, BYTE PTR [r9+24]

; 599  :                         _Fixnodeparent->_Color = _Black;
; 600  :                         _Pnode->_Right->_Color = _Black;
; 601  :                         _Lrotate(_Fixnodeparent);

	mov	rcx, rdi
	mov	BYTE PTR [rdx+24], al
	mov	BYTE PTR [r9+24], 1
	mov	rax, QWORD PTR [rdx+16]
	mov	rdx, r9
	mov	BYTE PTR [rax+24], 1
	call	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Lrotate

; 602  :                         break; // tree now recolored/rebalanced

	jmp	$LN152@Extract
$LN26@Extract:

; 603  :                     }
; 604  :                 } else { // fixup right subtree
; 605  :                     _Pnode = _Fixnodeparent->_Left;
; 606  :                     if (_Pnode->_Color == _Red) { // rotate red up from left subtree

	cmp	BYTE PTR [rdx+24], 0
	jne	SHORT $LN106@Extract

; 607  :                         _Pnode->_Color         = _Black;

	mov	BYTE PTR [rdx+24], 1

; 483  :         _Nodeptr _Pnode   = _Wherenode->_Left;

	mov	rdx, QWORD PTR [r9]

; 608  :                         _Fixnodeparent->_Color = _Red;

	mov	BYTE PTR [r9+24], 0

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [r9], rax

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rdx+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN74@Extract

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

	mov	QWORD PTR [rax+8], r9
$LN74@Extract:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rax, QWORD PTR [r9+8]
	lea	rcx, QWORD PTR [r9+8]
	mov	QWORD PTR [rdx+8], rax

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rax, QWORD PTR [rdi]
	cmp	r9, QWORD PTR [rax+8]
	jne	SHORT $LN75@Extract

; 493  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rax+8], rdx

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [rdx+16], r9

; 501  :         _Wherenode->_Parent = _Pnode;

	mov	QWORD PTR [rcx], rdx

; 609  :                         _Rrotate(_Fixnodeparent);
; 610  :                         _Pnode = _Fixnodeparent->_Left;

	mov	rdx, QWORD PTR [r9]
	jmp	SHORT $LN95@Extract
$LN75@Extract:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

	mov	rax, QWORD PTR [rcx]
	cmp	r9, QWORD PTR [rax+16]
	jne	SHORT $LN77@Extract

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rax+16], rdx

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [rdx+16], r9

; 501  :         _Wherenode->_Parent = _Pnode;

	mov	QWORD PTR [rcx], rdx

; 609  :                         _Rrotate(_Fixnodeparent);
; 610  :                         _Pnode = _Fixnodeparent->_Left;

	mov	rdx, QWORD PTR [r9]
	jmp	SHORT $LN95@Extract
$LN77@Extract:

; 497  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rax], rdx

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [rdx+16], r9

; 501  :         _Wherenode->_Parent = _Pnode;

	mov	QWORD PTR [rcx], rdx

; 609  :                         _Rrotate(_Fixnodeparent);
; 610  :                         _Pnode = _Fixnodeparent->_Left;

	mov	rdx, QWORD PTR [r9]
	jmp	SHORT $LN95@Extract
$LN106@Extract:
	lea	rcx, QWORD PTR [r9+8]
$LN95@Extract:

; 611  :                     }
; 612  : 
; 613  :                     if (_Pnode->_Isnil) {

	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN2@Extract

; 614  :                         _Fixnode = _Fixnodeparent; // shouldn't happen
; 615  :                     } else if (_Pnode->_Right->_Color == _Black
; 616  :                                && _Pnode->_Left->_Color == _Black) { // redden left subtree with black children

	mov	r8, QWORD PTR [rdx+16]
	cmp	BYTE PTR [r8+24], 1
	jne	SHORT $LN108@Extract
	mov	rax, QWORD PTR [rdx]
	cmp	BYTE PTR [rax+24], 1
	jne	SHORT $LN108@Extract
$LN153@Extract:

; 574  :             for (; _Fixnode != _Myhead->_Parent && _Fixnode->_Color == _Black; _Fixnodeparent = _Fixnode->_Parent) {

	mov	BYTE PTR [rdx+24], 0
$LN2@Extract:
	mov	rax, QWORD PTR [rdi]
	mov	r10, rbx
	mov	r9, QWORD PTR [rcx]
	cmp	rbx, QWORD PTR [rax+8]
	jne	$LL4@Extract
	jmp	SHORT $LN152@Extract
$LN108@Extract:

; 617  :                         _Pnode->_Color = _Red;
; 618  :                         _Fixnode       = _Fixnodeparent;
; 619  :                     } else { // must rearrange left subtree
; 620  :                         if (_Pnode->_Left->_Color == _Black) { // rotate red up from right sub-subtree

	mov	rax, QWORD PTR [rdx]
	cmp	BYTE PTR [rax+24], 1
	jne	SHORT $LN39@Extract

; 621  :                             _Pnode->_Right->_Color = _Black;

	mov	BYTE PTR [r8+24], 1

; 622  :                             _Pnode->_Color         = _Red;
; 623  :                             _Lrotate(_Pnode);

	mov	rcx, rdi
	mov	BYTE PTR [rdx+24], 0
	call	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Lrotate

; 624  :                             _Pnode = _Fixnodeparent->_Left;

	mov	rdx, QWORD PTR [r9]
$LN39@Extract:

; 625  :                         }
; 626  : 
; 627  :                         _Pnode->_Color         = _Fixnodeparent->_Color;

	movzx	eax, BYTE PTR [r9+24]

; 628  :                         _Fixnodeparent->_Color = _Black;
; 629  :                         _Pnode->_Left->_Color  = _Black;
; 630  :                         _Rrotate(_Fixnodeparent);

	mov	rcx, rdi
	mov	BYTE PTR [rdx+24], al
	mov	BYTE PTR [r9+24], 1
	mov	rax, QWORD PTR [rdx]
	mov	rdx, r9
	mov	BYTE PTR [rax+24], 1
	call	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Rrotate
$LN152@Extract:
	mov	rbx, QWORD PTR [rsp+56]
$LN3@Extract:

; 631  :                         break; // tree now recolored/rebalanced
; 632  :                     }
; 633  :                 }
; 634  :             }
; 635  : 
; 636  :             _Fixnode->_Color = _Black; // stopping node is black

	mov	BYTE PTR [r10+24], 1
$LN25@Extract:

; 637  :         }
; 638  : 
; 639  :         if (0 < _Mysize) {

	mov	rcx, QWORD PTR [rdi+8]
	mov	rax, rsi
	test	rcx, rcx
	je	SHORT $LN40@Extract

; 640  :             --_Mysize;

	dec	rcx
	mov	QWORD PTR [rdi+8], rcx
$LN40@Extract:

; 641  :         }
; 642  : 
; 643  :         return _Erasednode;
; 644  :     }

	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Extract
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getal, COMDAT

; 1965 :         return _Mypair._Myval2._Get_first();

	mov	rax, rcx

; 1966 :     }

	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getcomp, COMDAT

; 1957 :         return _Mypair._Get_first();

	mov	rax, rcx

; 1958 :     }

	ret	0
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getcomp, COMDAT

; 1953 :         return _Mypair._Get_first();

	mov	rax, rcx

; 1954 :     }

	ret	0
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Alloc_sentinel_and_proxy, COMDAT

; 1939 :     void _Alloc_sentinel_and_proxy() {

$LN32:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 1940 :         const auto _Scary = _Get_scary();
; 1941 :         auto&& _Alproxy   = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());
; 1942 :         _Container_proxy_ptr<_Alnode> _Proxy(_Alproxy, *_Scary);
; 1943 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	QWORD PTR [rbx], rax

; 1944 :         _Proxy._Release();
; 1945 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Alloc_sentinel_and_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 64051194700380387			; 00e38e38e38e38e3H

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>::operator++, COMDAT

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

	mov	rdx, QWORD PTR [rcx]
	mov	r8, rcx
	mov	r9, QWORD PTR [rdx+16]
	cmp	BYTE PTR [r9+25], 0
	je	SHORT $LN4@operator

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN3@operator
	npad	5
$LL2@operator:
	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN3@operator

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

	mov	QWORD PTR [rcx], rax
	mov	rdx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL2@operator
$LN3@operator:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())
; 58   :         } else {
; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 60   :         }
; 61   : 
; 62   :         return *this;

	mov	QWORD PTR [rcx], rax

; 63   :     }

	mov	rax, r8
	ret	0
$LN4@operator:

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [r9]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN9@operator
	npad	10
$LL8@operator:
	mov	rax, QWORD PTR [rcx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	r9, rcx
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL8@operator
$LN9@operator:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())
; 58   :         } else {
; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 60   :         }
; 61   : 
; 62   :         return *this;

	mov	QWORD PTR [r8], r9

; 63   :     }

	mov	rax, r8
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xnode_handle.h
;	COMDAT ??0?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAA@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr_$ = 16
_Al$dead$ = 24
??0?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAA@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@@Z PROC ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>, COMDAT

; 93   :         : _Ptr{_Ptr_} { // Initialize a _Node_handle that holds the specified node

	mov	QWORD PTR [rcx], rdx

; 94   :                         // pre: _Alloc can release _Ptr
; 95   :         _STL_INTERNAL_CHECK(_Ptr_ != nullptr);
; 96   :         _Construct_in_place(_Getal(), _Al);
; 97   :     }

	mov	rax, rcx
	ret	0
??0?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@AEAA@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@@Z ENDP ; std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@2@$00@std@@QEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@2@$00@std@@QEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>,1>::_Get_first, COMDAT

; 1523 :         return *this;

	mov	rax, rcx

; 1524 :     }

	ret	0
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@2@$00@std@@QEAAAEAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@PEAU32@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@PEAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Min, COMDAT

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rdx, QWORD PTR [rcx]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN9@Min
	npad	7
$LL2@Min:
	mov	rcx, QWORD PTR [rdx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	rax, rdx
	mov	rdx, rcx
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL2@Min

; 458  :     }

	ret	0
$LN9@Min:

; 455  :         }
; 456  : 
; 457  :         return _Pnode;

	mov	rax, rcx

; 458  :     }

	ret	0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@PEAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Min
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@PEAU32@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@PEAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Max, COMDAT

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rdx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN9@Max
	npad	6
$LL2@Max:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rax, rdx
	mov	rdx, QWORD PTR [rdx+16]
	cmp	BYTE PTR [rdx+25], 0
	je	SHORT $LL2@Max

; 450  :     }

	ret	0
$LN9@Max:

; 447  :         }
; 448  : 
; 449  :         return _Pnode;

	mov	rax, rcx

; 450  :     }

	ret	0
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@PEAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Max
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Pred$dead$ = 64
$T1 = 64
??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 8063 : _CONSTEXPR20 void sort(const _RanIt _First, const _RanIt _Last, _Pr _Pred) { // order [_First, _Last)

	mov	BYTE PTR [rsp+24], r8b
	sub	rsp, 40					; 00000028H

; 8064 :     _Adl_verify_range(_First, _Last);
; 8065 :     const auto _UFirst = _Get_unwrapped(_First);
; 8066 :     const auto _ULast  = _Get_unwrapped(_Last);
; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

	movzx	r9d, BYTE PTR $T1[rsp]
	mov	r8, rdx
	sub	r8, rcx
	mov	rax, 7905747460161236407		; 6db6db6db6db6db7H
	sar	r8, 3
	imul	r8, rax

; 8068 : }

	add	rsp, 40					; 00000028H

; 8064 :     _Adl_verify_range(_First, _Last);
; 8065 :     const auto _UFirst = _Get_unwrapped(_First);
; 8066 :     const auto _ULast  = _Get_unwrapped(_Last);
; 8067 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

	jmp	??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Sort_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
??$sort@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@@std@@YA?A_TAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 8
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@@std@@YA?A_TAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > > const &>, COMDAT

; 1156 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1157 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1158 :         return _It + 0;
; 1159 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1160 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rax, QWORD PTR [rcx]

; 1161 :     } else {
; 1162 :         return static_cast<_Iter&&>(_It);
; 1163 :     }
; 1164 : }

	ret	0
??$_Get_unwrapped@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@@std@@YA?A_TAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBAPEAUEntry@SarcFile@@XZ
_TEXT	SEGMENT
this$ = 8
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBAPEAUEntry@SarcFile@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::_Unwrapped, COMDAT

; 342  :         return _Unfancy(this->_Ptr);

	mov	rax, QWORD PTR [rcx]

; 343  :     }

	ret	0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@QEBAPEAUEntry@SarcFile@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Pass_fn@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YA?A_PAEAV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Func$dead$ = 16
??$_Pass_fn@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YA?A_PAEAV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::_Pass_fn<`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 556  :     constexpr bool _Pass_by_value = conjunction_v<bool_constant<sizeof(_Fn) <= sizeof(void*)>,
; 557  :         is_trivially_copy_constructible<_Fn>, is_trivially_destructible<_Fn>>;
; 558  :     if constexpr (_Pass_by_value) {
; 559  :         return _Func;

	mov	rax, rcx

; 560  :     } else {
; 561  :         return _Ref_fn<_Fn>{_Func}; // pass functor by "reference"
; 562  :     }
; 563  : }

	ret	0
??$_Pass_fn@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YA?A_PAEAV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::_Pass_fn<`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,BymlFile,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

$LN7:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	rdi, rcx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rdi+32]
	mov	rdx, rbx
	call	??0BymlFile@@QEAA@$$QEAV0@@Z
	npad	1

; 243  :     }

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,BymlFile,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z@4HA PROC ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,BymlFile,0>'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEAVBymlFile@@@Z@4HA ENDP ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,BymlFile,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
$T4 = 72
this$ = 144
__$ReturnUdt$ = 152
_Val$ = 160
??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert<0,0>, COMDAT

; 1230 :     pair<iterator, bool> insert(value_type&& _Val) {

$LN159:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rsi, r8
	mov	r14, rdx
	mov	r15, rcx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbp, QWORD PTR [rcx]
	mov	rbx, QWORD PTR [rbp+8]
	mov	QWORD PTR $T3[rsp], rbx
	xor	r12d, r12d
	mov	DWORD PTR $T3[rsp+8], r12d
	mov	rdi, rbp

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	jne	SHORT $LN9@insert
	npad	11
$LL8@insert:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR $T3[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN10@insert

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR $T3[rsp+8], r12d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN11@insert
$LN10@insert:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR $T3[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN11@insert:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	je	SHORT $LL8@insert
$LN9@insert:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r12b
	jne	SHORT $LN4@insert
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN4@insert
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	xor	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1004 :                 return {_Loc._Bound, false};

	jmp	$LN141@insert
$LN4@insert:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 64051194700380387			; 00e38e38e38e38e3H
	cmp	QWORD PTR [r15+8], rax
	je	$LN157@insert
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T2[rsp], r15

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T2[rsp+8], r12

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T2[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 806  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T4[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 246  :     pair(pair&&)      = default;

	mov	rdx, rsi
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [rsi+32]
	call	??0BymlFile@@QEAA@$$QEAV0@@Z
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0

; 1027 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR $T3[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	r8, rdi
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r15
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Insert_node
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	al, 1
$LN141@insert:
	mov	QWORD PTR [r14], rdi
	mov	BYTE PTR [r14+8], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1232 :         return {iterator(_Result.first, _Get_scary()), _Result.second};

	mov	rax, r14

; 1233 :     }

	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN157@insert:

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN155@insert:
??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert<0,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
$T4 = 72
this$ = 144
__$ReturnUdt$ = 152
_Val$ = 160
?dtor$2@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert<0,0>'::`1'::dtor$2
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
?dtor$2@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert<0,0>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
$T4 = 72
this$ = 144
__$ReturnUdt$ = 152
_Val$ = 160
?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert<0,0>'::`1'::dtor$1
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert<0,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
$T4 = 72
this$ = 144
__$ReturnUdt$ = 152
_Val$ = 160
?dtor$3@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert<0,0>'::`1'::dtor$3
	mov	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::insert<0,0>'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,std::vector<unsigned char,std::allocator<unsigned char> > &,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

$LN7:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, r8
	mov	rdi, rcx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rdi+32]
	mov	rdx, rbx
	call	??0?$vector@EV?$allocator@E@std@@@std@@QEAA@AEBV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::vector<unsigned char,std::allocator<unsigned char> >
	npad	1

; 243  :     }

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,std::vector<unsigned char,std::allocator<unsigned char> > &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z@4HA PROC ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,std::vector<unsigned char,std::allocator<unsigned char> > &,0>'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@EV?$allocator@E@std@@@1@$0A@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEAV?$vector@EV?$allocator@E@std@@@1@@Z@4HA ENDP ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > &,std::vector<unsigned char,std::allocator<unsigned char> > &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
this$ = 144
__$ReturnUdt$ = 152
_Val$ = 160
??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::insert<0,0>, COMDAT

; 1230 :     pair<iterator, bool> insert(value_type&& _Val) {

$LN154:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rsi, r8
	mov	r14, rdx
	mov	r15, rcx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbp, QWORD PTR [rcx]
	mov	rbx, QWORD PTR [rbp+8]
	mov	QWORD PTR $T3[rsp], rbx
	xor	r12d, r12d
	mov	DWORD PTR $T3[rsp+8], r12d
	mov	rdi, rbp

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	jne	SHORT $LN9@insert
	npad	11
$LL8@insert:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR $T3[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN10@insert

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR $T3[rsp+8], r12d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN11@insert
$LN10@insert:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR $T3[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN11@insert:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	je	SHORT $LL8@insert
$LN9@insert:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r12b
	jne	SHORT $LN4@insert
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN4@insert
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	xor	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1004 :                 return {_Loc._Bound, false};

	jmp	$LN135@insert
$LN4@insert:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH
	cmp	QWORD PTR [r15+8], rax
	je	$LN152@insert
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T2[rsp], r15

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T2[rsp+8], r12

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T2[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 246  :     pair(pair&&)      = default;

	mov	rdx, rsi
	lea	rcx, QWORD PTR [rax+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rsi+48]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rsi+48], r12

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rsi+40]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rsi+40], r12

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rsi+32]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rsi+32], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rdi+64], rax
	mov	QWORD PTR [rdi+72], rdx
	mov	QWORD PTR [rdi+80], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0

; 1027 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR $T3[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	r8, rdi
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r15
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Insert_node
	mov	rdi, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	al, 1
$LN135@insert:
	mov	QWORD PTR [r14], rdi
	mov	BYTE PTR [r14+8], al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1232 :         return {iterator(_Result.first, _Get_scary()), _Result.second};

	mov	rax, r14

; 1233 :     }

	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN152@insert:

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN150@insert:
??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::insert<0,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
this$ = 144
__$ReturnUdt$ = 152
_Val$ = 160
?dtor$2@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::insert<0,0>'::`1'::dtor$2
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
?dtor$2@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::insert<0,0>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
this$ = 144
__$ReturnUdt$ = 152
_Val$ = 160
?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::insert<0,0>'::`1'::dtor$1
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::insert<0,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@@std@@YA$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@@std@@YA$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@0@AEAV10@@Z PROC ; std::move<std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile> &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@std@@@std@@YA$$QEAV?$_Node_handle@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@U_Node_handle_map_base@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@VBymlFile@@@0@AEAV10@@Z ENDP ; std::move<std::_Node_handle<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::_Node_handle_map_base,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z PROC ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>, COMDAT

; 68   :         return _Val.first;

	mov	rax, rcx

; 69   :     }

	ret	0
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ENDP ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Keyval$ = 64
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1611 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

$LN20:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1612 :         const auto _Scary = _Get_scary();
; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rax, QWORD PTR [rcx]
	mov	rsi, r8
	mov	rdi, rdx
	mov	DWORD PTR [rdx+8], 0
	mov	QWORD PTR [rdx+16], rax
	mov	rbx, QWORD PTR [rax+8]
	mov	QWORD PTR [rdx], rbx

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN14@Find_lower
$LL2@Find_lower:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
	mov	QWORD PTR [rdi], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN4@Find_lower

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]
	xor	eax, eax

; 1620 :             } else {

	jmp	SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	QWORD PTR [rdi+16], rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	eax, 1
	mov	rbx, QWORD PTR [rbx]
$LN5@Find_lower:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	mov	DWORD PTR [rdi+8], eax
	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Find_lower
$LN14@Find_lower:

; 1624 :             }
; 1625 :         }
; 1626 : 
; 1627 :         return _Result;
; 1628 :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
this$dead$ = 48
_Bound$ = 56
_Keyval$ = 64
??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1606 :     bool _Lower_bound_duplicate(const _Nodeptr _Bound, const _Keyty& _Keyval) const {

$LN11:
	sub	rsp, 40					; 00000028H

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN3@Lower_boun
	add	rdx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, r8
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	js	SHORT $LN3@Lower_boun
	mov	al, 1

; 1608 :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@Lower_boun:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	xor	al, al

; 1608 :     }

	add	rsp, 40					; 00000028H
	ret	0
??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped_n@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@H@std@@YA?A_T$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_It$ = 16
_Off$dead$ = 24
??$_Get_unwrapped_n@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@H@std@@YA?A_T$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@H@Z PROC ; std::_Get_unwrapped_n<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,int>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1239 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rax, rcx

; 1240 :     } else {
; 1241 :         // pass through iterator that doesn't participate in checking
; 1242 :         return static_cast<_Iter&&>(_It);
; 1243 :     }
; 1244 : }

	ret	0
??$_Get_unwrapped_n@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@H@std@@YA?A_T$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@H@Z ENDP ; std::_Get_unwrapped_n<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$advance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@H@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@H@Z
_TEXT	SEGMENT
_Where$ = 8
_Off$ = 16
??$advance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@H@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@H@Z PROC ; std::advance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,int>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1392 : _CONSTEXPR17 void advance(_InIt& _Where, _Diff _Off) { // increment iterator by offset

	mov	r8d, edx
	mov	r9, rcx

; 1404 :             for (; _Off < 0; ++_Off) {

	test	edx, edx
	jns	SHORT $LN3@advance

; 1392 : _CONSTEXPR17 void advance(_InIt& _Where, _Diff _Off) { // increment iterator by offset

	neg	r8d
	mov	edx, r8d
$LL4@advance:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 72   :         if (_Ptr->_Isnil) {

	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LN24@advance

; 73   :             _Ptr = _Ptr->_Right; // end() ==> rightmost

	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN2@advance
$LN24@advance:

; 74   :         } else if (_Ptr->_Left->_Isnil) { // climb looking for left subtree

	mov	rcx, QWORD PTR [rax]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LN26@advance

; 75   :             _Nodeptr _Pnode;
; 76   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Left) {

	mov	rcx, QWORD PTR [rax+8]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN23@advance
$LL22@advance:
	cmp	rax, QWORD PTR [rcx]
	jne	SHORT $LN23@advance

; 77   :                 _Ptr = _Pnode; // ==> parent while left subtree

	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL22@advance
$LN23@advance:

; 78   :             }
; 79   : 
; 80   :             if (!_Ptr->_Isnil) { // decrement non-begin()

	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN2@advance

; 81   :                 _Ptr = _Pnode; // ==> parent if not head

	mov	rax, rcx

; 82   :             }
; 83   :         } else {

	jmp	SHORT $LN2@advance
$LN26@advance:

; 84   :             _Ptr = _Mytree::_Max(_Ptr->_Left); // ==> largest of left subtree

	mov	rax, rcx

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rcx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN2@advance
	npad	4
$LL31@advance:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL31@advance
$LN2@advance:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1404 :             for (; _Off < 0; ++_Off) {

	sub	rdx, 1
	jne	SHORT $LL4@advance

; 1410 :             ++_UWhere;
; 1411 :         }
; 1412 : 
; 1413 :         if constexpr (_Need_rewrap) {
; 1414 :             _Seek_wrapped(_Where, _STD move(_UWhere));

	mov	QWORD PTR [r9], rax

; 1415 :         }
; 1416 :     }
; 1417 : }

	ret	0
$LN3@advance:

; 1409 :         for (; 0 < _Off; --_Off) {

	test	r8d, r8d
	jle	SHORT $LN70@advance
	npad	4
$LL7@advance:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

	mov	rcx, QWORD PTR [rax+16]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LN39@advance

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

	mov	rcx, QWORD PTR [rax+8]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN38@advance
$LL37@advance:
	cmp	rax, QWORD PTR [rcx+16]
	jne	SHORT $LN38@advance

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL37@advance
$LN38@advance:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())

	mov	rax, rcx

; 58   :         } else {

	jmp	SHORT $LN5@advance
$LN39@advance:

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rdx, QWORD PTR [rcx]

; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

	mov	rax, rcx

; 453  :         while (!_Pnode->_Left->_Isnil) {

	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN5@advance
	npad	8
$LL43@advance:
	mov	rcx, QWORD PTR [rdx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	rax, rdx
	mov	rdx, rcx
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL43@advance
$LN5@advance:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1409 :         for (; 0 < _Off; --_Off) {

	dec	r8d
	test	r8d, r8d
	jg	SHORT $LL7@advance

; 1410 :             ++_UWhere;
; 1411 :         }
; 1412 : 
; 1413 :         if constexpr (_Need_rewrap) {
; 1414 :             _Seek_wrapped(_Where, _STD move(_UWhere));

	mov	QWORD PTR [r9], rax

; 1415 :         }
; 1416 :     }
; 1417 : }

	ret	0
$LN70@advance:

; 1410 :             ++_UWhere;
; 1411 :         }
; 1412 : 
; 1413 :         if constexpr (_Need_rewrap) {
; 1414 :             _Seek_wrapped(_Where, _STD move(_UWhere));

	mov	QWORD PTR [rcx], rax

; 1415 :         }
; 1416 :     }
; 1417 : }

	ret	0
??$advance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@H@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@H@Z ENDP ; std::advance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Get_unwrapped_n@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@H@std@@YA?A_T$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@H@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_It$ = 16
_Off$dead$ = 24
??$_Get_unwrapped_n@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@H@std@@YA?A_T$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@H@Z PROC ; std::_Get_unwrapped_n<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,int>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1239 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	rax, rcx

; 1240 :     } else {
; 1241 :         // pass through iterator that doesn't participate in checking
; 1242 :         return static_cast<_Iter&&>(_It);
; 1243 :     }
; 1244 : }

	ret	0
??$_Get_unwrapped_n@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@H@std@@YA?A_T$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@H@Z ENDP ; std::_Get_unwrapped_n<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$advance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@H@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@H@Z
_TEXT	SEGMENT
_Where$ = 8
_Off$ = 16
??$advance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@H@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@H@Z PROC ; std::advance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,int>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1392 : _CONSTEXPR17 void advance(_InIt& _Where, _Diff _Off) { // increment iterator by offset

	mov	r8d, edx
	mov	r9, rcx

; 1404 :             for (; _Off < 0; ++_Off) {

	test	edx, edx
	jns	SHORT $LN3@advance

; 1392 : _CONSTEXPR17 void advance(_InIt& _Where, _Diff _Off) { // increment iterator by offset

	neg	r8d
	mov	edx, r8d
$LL4@advance:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 72   :         if (_Ptr->_Isnil) {

	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LN24@advance

; 73   :             _Ptr = _Ptr->_Right; // end() ==> rightmost

	mov	rax, QWORD PTR [rax+16]
	jmp	SHORT $LN2@advance
$LN24@advance:

; 74   :         } else if (_Ptr->_Left->_Isnil) { // climb looking for left subtree

	mov	rcx, QWORD PTR [rax]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LN26@advance

; 75   :             _Nodeptr _Pnode;
; 76   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Left) {

	mov	rcx, QWORD PTR [rax+8]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN23@advance
$LL22@advance:
	cmp	rax, QWORD PTR [rcx]
	jne	SHORT $LN23@advance

; 77   :                 _Ptr = _Pnode; // ==> parent while left subtree

	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL22@advance
$LN23@advance:

; 78   :             }
; 79   : 
; 80   :             if (!_Ptr->_Isnil) { // decrement non-begin()

	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN2@advance

; 81   :                 _Ptr = _Pnode; // ==> parent if not head

	mov	rax, rcx

; 82   :             }
; 83   :         } else {

	jmp	SHORT $LN2@advance
$LN26@advance:

; 84   :             _Ptr = _Mytree::_Max(_Ptr->_Left); // ==> largest of left subtree

	mov	rax, rcx

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rcx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN2@advance
	npad	4
$LL31@advance:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL31@advance
$LN2@advance:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1404 :             for (; _Off < 0; ++_Off) {

	sub	rdx, 1
	jne	SHORT $LL4@advance

; 1410 :             ++_UWhere;
; 1411 :         }
; 1412 : 
; 1413 :         if constexpr (_Need_rewrap) {
; 1414 :             _Seek_wrapped(_Where, _STD move(_UWhere));

	mov	QWORD PTR [r9], rax

; 1415 :         }
; 1416 :     }
; 1417 : }

	ret	0
$LN3@advance:

; 1409 :         for (; 0 < _Off; --_Off) {

	test	r8d, r8d
	jle	SHORT $LN70@advance
	npad	4
$LL7@advance:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

	mov	rcx, QWORD PTR [rax+16]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LN39@advance

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

	mov	rcx, QWORD PTR [rax+8]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN38@advance
$LL37@advance:
	cmp	rax, QWORD PTR [rcx+16]
	jne	SHORT $LN38@advance

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

	mov	rax, rcx
	mov	rcx, QWORD PTR [rcx+8]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL37@advance
$LN38@advance:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())

	mov	rax, rcx

; 58   :         } else {

	jmp	SHORT $LN5@advance
$LN39@advance:

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rdx, QWORD PTR [rcx]

; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

	mov	rax, rcx

; 453  :         while (!_Pnode->_Left->_Isnil) {

	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN5@advance
	npad	8
$LL43@advance:
	mov	rcx, QWORD PTR [rdx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	rax, rdx
	mov	rdx, rcx
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL43@advance
$LN5@advance:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 1409 :         for (; 0 < _Off; --_Off) {

	dec	r8d
	test	r8d, r8d
	jg	SHORT $LL7@advance

; 1410 :             ++_UWhere;
; 1411 :         }
; 1412 : 
; 1413 :         if constexpr (_Need_rewrap) {
; 1414 :             _Seek_wrapped(_Where, _STD move(_UWhere));

	mov	QWORD PTR [r9], rax

; 1415 :         }
; 1416 :     }
; 1417 : }

	ret	0
$LN70@advance:

; 1410 :             ++_UWhere;
; 1411 :         }
; 1412 : 
; 1413 :         if constexpr (_Need_rewrap) {
; 1414 :             _Seek_wrapped(_Where, _STD move(_UWhere));

	mov	QWORD PTR [rcx], rax

; 1415 :         }
; 1416 :     }
; 1417 : }

	ret	0
??$advance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@H@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@H@Z ENDP ; std::advance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_in_place@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
??$_Destroy_in_place@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@@Z PROC ; std::_Destroy_in_place<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >, COMDAT

; 305  :     if constexpr (is_array_v<_Ty>) {
; 306  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 307  :     } else {
; 308  :         _Obj.~_Ty();
; 309  :     }
; 310  : }

	ret	0
??$_Destroy_in_place@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@@Z ENDP ; std::_Destroy_in_place<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::nullptr_t>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEAV10@@Z PROC ; std::move<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEAV10@@Z ENDP ; std::move<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Construct_in_place@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@V12@@std@@YAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@$$QEAV10@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
<_Args_0>$dead$ = 16
??$_Construct_in_place@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@V12@@std@@YAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@$$QEAV10@@Z PROC ; std::_Construct_in_place<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >, COMDAT

; 248  : #if _HAS_CXX20
; 249  :     if (_STD is_constant_evaluated()) {
; 250  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 251  :     } else
; 252  : #endif // _HAS_CXX20
; 253  :     {
; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 255  :     }
; 256  : }

	ret	0
??$_Construct_in_place@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@V12@@std@@YAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@$$QEAV10@@Z ENDP ; std::_Construct_in_place<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 48
this$ = 128
__$ReturnUdt$ = 136
_Keyval$ = 144
??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 197  :     pair<_Nodeptr, bool> _Try_emplace(_Keyty&& _Keyval, _Mappedty&&... _Mapval) {

$LN151:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rbp, r8
	mov	rsi, rdx
	mov	r14, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	r15, QWORD PTR [rcx]
	mov	rbx, QWORD PTR [r15+8]
	mov	QWORD PTR _Loc$[rsp], rbx
	xor	r12d, r12d
	mov	DWORD PTR _Loc$[rsp+8], r12d
	mov	rdi, r15

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	jne	SHORT $LN7@Try_emplac
	npad	4
$LL6@Try_emplac:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR _Loc$[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN8@Try_emplac

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR _Loc$[rsp+8], r12d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN9@Try_emplac
$LN8@Try_emplac:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR _Loc$[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN9@Try_emplac:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	je	SHORT $LL6@Try_emplac
$LN7@Try_emplac:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r12b
	jne	SHORT $LN2@Try_emplac
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN2@Try_emplac
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [rsi], rdi
	mov	BYTE PTR [rsi+8], r12b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 200  :             return {_Loc._Bound, false};

	jmp	SHORT $LN147@Try_emplac
$LN2@Try_emplac:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH
	cmp	QWORD PTR [r14+8], rax
	je	$LN149@Try_emplac
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T2[rsp], r14

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T2[rsp+8], r12

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T2[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, rbp
	lea	rcx, QWORD PTR [rax+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rdi+64], r12
	mov	QWORD PTR [rdi+72], r12
	mov	QWORD PTR [rdi+80], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], r15

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], r15

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], r15

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 212  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	r8, rdi
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r14
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Insert_node
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [rsi], rax
	mov	BYTE PTR [rsi+8], 1
$LN147@Try_emplac:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 213  :     }

	mov	rax, rsi
	lea	r11, QWORD PTR [rsp+80]
	mov	rbx, QWORD PTR [r11+64]
	mov	rbp, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
$LN149@Try_emplac:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN146@Try_emplac:
??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 48
this$ = 128
__$ReturnUdt$ = 136
_Keyval$ = 144
?dtor$2@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$2
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
?dtor$2@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 48
this$ = 128
__$ReturnUdt$ = 136
_Keyval$ = 144
?dtor$1@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$1
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$1@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Keyval$ = 64
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1611 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

$LN20:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1612 :         const auto _Scary = _Get_scary();
; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rax, QWORD PTR [rcx]
	mov	rsi, r8
	mov	rdi, rdx
	mov	DWORD PTR [rdx+8], 0
	mov	QWORD PTR [rdx+16], rax
	mov	rbx, QWORD PTR [rax+8]
	mov	QWORD PTR [rdx], rbx

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN14@Find_lower
$LL2@Find_lower:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
	mov	QWORD PTR [rdi], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN4@Find_lower

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]
	xor	eax, eax

; 1620 :             } else {

	jmp	SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	QWORD PTR [rdi+16], rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	eax, 1
	mov	rbx, QWORD PTR [rbx]
$LN5@Find_lower:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	mov	DWORD PTR [rdi+8], eax
	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Find_lower
$LN14@Find_lower:

; 1624 :             }
; 1625 :         }
; 1626 : 
; 1627 :         return _Result;
; 1628 :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Find_lower_bound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Find_lower_bound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
this$dead$ = 48
_Bound$ = 56
_Keyval$ = 64
??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1606 :     bool _Lower_bound_duplicate(const _Nodeptr _Bound, const _Keyty& _Keyval) const {

$LN11:
	sub	rsp, 40					; 00000028H

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN3@Lower_boun
	add	rdx, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, r8
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	js	SHORT $LN3@Lower_boun
	mov	al, 1

; 1608 :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN3@Lower_boun:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	xor	al, al

; 1608 :     }

	add	rsp, 40					; 00000028H
	ret	0
??$_Lower_bound_duplicate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Lower_bound_duplicate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z
_TEXT	SEGMENT
this$ = 64
_Al$ = 72
_Rootnode$ = 80
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >, COMDAT

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

$LN67:
	push	rbx
	push	rbp
	push	rsi
	sub	rsp, 32					; 00000020H

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [r8+25], 0
	mov	rbx, r8
	mov	rbp, rdx
	mov	rsi, rcx
	jne	SHORT $LN3@Erase_tree
	mov	QWORD PTR [rsp+88], rdi
	npad	3
$LL2@Erase_tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, rbp
	mov	rcx, rsi
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rdi+32]
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Erase_tree
	mov	rdi, QWORD PTR [rsp+88]
$LN3@Erase_tree:

; 747  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 748  :         }
; 749  :     }

	add	rsp, 32					; 00000020H
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 64
_Al$ = 72
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >, COMDAT

; 752  :     void _Erase_head(_Alnode& _Al) noexcept {

$LN113:
	push	rbx
	push	rbp
	push	rsi
	sub	rsp, 32					; 00000020H

; 753  :         this->_Orphan_all();
; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	rbx, QWORD PTR [rcx]
	mov	rbp, rdx
	mov	rsi, rcx
	mov	rbx, QWORD PTR [rbx+8]

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN5@Erase_head
	mov	QWORD PTR [rsp+80], rdi
$LL4@Erase_head:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, rbp
	mov	rcx, rsi
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdi, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rdi+32]
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL4@Erase_head
	mov	rdi, QWORD PTR [rsp+80]
$LN5@Erase_head:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rsi]
	mov	edx, 88					; 00000058H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 756  :     }

	add	rsp, 32					; 00000020H
	pop	rsi
	pop	rbp
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 48
$T3 = 72
this$ = 128
__$ReturnUdt$ = 136
_Keyval$ = 144
??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 197  :     pair<_Nodeptr, bool> _Try_emplace(_Keyty&& _Keyval, _Mappedty&&... _Mapval) {

$LN162:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rbp, r8
	mov	rsi, rdx
	mov	r14, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	r15, QWORD PTR [rcx]
	mov	rbx, QWORD PTR [r15+8]
	mov	QWORD PTR _Loc$[rsp], rbx
	xor	r12d, r12d
	mov	DWORD PTR _Loc$[rsp+8], r12d
	mov	rdi, r15

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	jne	SHORT $LN7@Try_emplac
	npad	4
$LL6@Try_emplac:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR _Loc$[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN8@Try_emplac

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR _Loc$[rsp+8], r12d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN9@Try_emplac
$LN8@Try_emplac:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR _Loc$[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN9@Try_emplac:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	je	SHORT $LL6@Try_emplac
$LN7@Try_emplac:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r12b
	jne	SHORT $LN2@Try_emplac
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rbp
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN2@Try_emplac
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [rsi], rdi
	mov	BYTE PTR [rsi+8], r12b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 200  :             return {_Loc._Bound, false};

	jmp	$LN158@Try_emplac
$LN2@Try_emplac:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 64051194700380387			; 00e38e38e38e38e3H
	cmp	QWORD PTR [r14+8], rax
	je	$LN160@Try_emplac
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T2[rsp], r14

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T2[rsp+8], r12

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T2[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 806  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T3[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, rbp
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	call	??0BymlFile@@QEAA@XZ			; BymlFile::BymlFile
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], r15

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], r15

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], r15

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 212  :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR _Loc$[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	r8, rdi
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r14
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Insert_node
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [rsi], rax
	mov	BYTE PTR [rsi+8], 1
$LN158@Try_emplac:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map

; 213  :     }

	mov	rax, rsi
	lea	r11, QWORD PTR [rsp+80]
	mov	rbx, QWORD PTR [r11+64]
	mov	rbp, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
$LN160@Try_emplac:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN157@Try_emplac:
??$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 48
$T3 = 72
this$ = 128
__$ReturnUdt$ = 136
_Keyval$ = 144
?dtor$2@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$2
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
?dtor$2@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 48
$T3 = 72
this$ = 128
__$ReturnUdt$ = 136
_Keyval$ = 144
?dtor$1@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$1
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$1@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
_Loc$ = 48
$T3 = 72
this$ = 128
__$ReturnUdt$ = 136
_Keyval$ = 144
?dtor$4@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$4
	mov	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0???$_Try_emplace@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$V@?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@@std@@AEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z
_TEXT	SEGMENT
this$ = 80
_Al$ = 88
_Rootnode$ = 96
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >, COMDAT

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

$LN88:
	push	rbx
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [r8+25], 0
	mov	rbx, r8
	mov	r15, rdx
	mov	r14, rcx
	jne	$LN3@Erase_tree
	mov	QWORD PTR [rsp+104], rbp
	mov	QWORD PTR [rsp+40], rsi
	mov	QWORD PTR [rsp+32], rdi
	npad	3
$LL2@Erase_tree:

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, r15
	mov	rcx, r14
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rbp, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
	lea	rcx, QWORD PTR [rbp+216]
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp+152]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp+112]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rbp+88]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rbp+64]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbp+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 288				; 00000120H
	mov	rcx, rbp
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Erase_tree
	mov	rdi, QWORD PTR [rsp+32]
	mov	rsi, QWORD PTR [rsp+40]
	mov	rbp, QWORD PTR [rsp+104]
$LN3@Erase_tree:

; 747  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 748  :         }
; 749  :     }

	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	rbx
	ret	0
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$ = 56
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >, COMDAT

; 752  :     void _Erase_head(_Alnode& _Al) noexcept {

$LN49:
	push	rbx
	sub	rsp, 32					; 00000020H

; 753  :         this->_Orphan_all();
; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	r8, QWORD PTR [rcx]
	mov	rbx, rcx
	mov	r8, QWORD PTR [r8+8]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	rcx, QWORD PTR [rbx]
	mov	edx, 288				; 00000120H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 756  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Move_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Move_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z PROC ; std::_Move_unchecked<SarcFile::Entry *,SarcFile::Entry *>, COMDAT

; 4886 : _CONSTEXPR20 _OutIt _Move_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

$LN17:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbx, rcx

; 4887 :     // move [_First, _Last) to [_Dest, ...)
; 4888 :     // note: _Move_unchecked has callers other than the move family
; 4889 :     if constexpr (_Iter_move_cat<_InIt, _OutIt>::_Bitcopy_assignable) {
; 4890 : #if _HAS_CXX20
; 4891 :         if (!_STD is_constant_evaluated())
; 4892 : #endif // _HAS_CXX20
; 4893 :         {
; 4894 :             return _Copy_memmove(_First, _Last, _Dest);
; 4895 :         }
; 4896 :     }
; 4897 : 
; 4898 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

	cmp	rcx, rdx
	je	SHORT $LN12@Move_unche
	npad	3
$LL4@Move_unche:
	mov	rdx, rbx
	mov	rcx, rdi
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rbx+32]
	lea	rcx, QWORD PTR [rdi+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	add	rdi, 56					; 00000038H
	add	rbx, 56					; 00000038H
	cmp	rbx, rsi
	jne	SHORT $LL4@Move_unche
$LN12@Move_unche:

; 4899 :         *_Dest = _STD move(*_First);
; 4900 :     }
; 4901 : 
; 4902 :     return _Dest;
; 4903 : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Move_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z ENDP ; std::_Move_unchecked<SarcFile::Entry *,SarcFile::Entry *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??4Entry@SarcFile@@QEAAAEAU01@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??4Entry@SarcFile@@QEAAAEAU01@$$QEAU01@@Z PROC		; SarcFile::Entry::operator=, COMDAT
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rbx+32]
	lea	rcx, QWORD PTR [rdi+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??4Entry@SarcFile@@QEAAAEAU01@$$QEAU01@@Z ENDP		; SarcFile::Entry::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@@std@@YAPEAV?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@@std@@YAPEAV?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@std@@@std@@YAPEAV?$vector@UEntry@SarcFile@@V?$allocator@UEntry@SarcFile@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::vector<SarcFile::Entry,std::allocator<SarcFile::Entry> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@UEntry@SarcFile@@@std@@@std@@YAXAEAV?$allocator@UEntry@SarcFile@@@0@0@Z
_TEXT	SEGMENT
_Left$dead$ = 8
_Right$dead$ = 16
??$_Pocma@V?$allocator@UEntry@SarcFile@@@std@@@std@@YAXAEAV?$allocator@UEntry@SarcFile@@@0@0@Z PROC ; std::_Pocma<std::allocator<SarcFile::Entry> >, COMDAT

; 1067 :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 1068 :         _Left = _STD move(_Right);
; 1069 :     }
; 1070 : }

	ret	0
??$_Pocma@V?$allocator@UEntry@SarcFile@@@std@@@std@@YAXAEAV?$allocator@UEntry@SarcFile@@@0@0@Z ENDP ; std::_Pocma<std::allocator<SarcFile::Entry> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@AEAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@AEAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN31:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+184]
	mov	rdi, rdx
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+120]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+56]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >, COMDAT

; 962  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	mov	rax, rcx
	ret	0
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAA@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >, COMDAT

; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 288				; 00000120H
	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > const >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > const >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
<_Val2_0>$dead$ = 32
??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > const >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > const >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> ><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >, COMDAT

; 962  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	mov	rax, rcx
	ret	0
??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> ><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Keyval$ = 56
??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 1367 :     _NODISCARD _Nodeptr _Find(const _Other& _Keyval) const {

$LN32:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbp, QWORD PTR [rcx]

; 1367 :     _NODISCARD _Nodeptr _Find(const _Other& _Keyval) const {

	mov	rsi, rdx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rdi, rbp
	mov	rbx, QWORD PTR [rbp+8]

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	jne	SHORT $LN6@Find
	npad	9
$LL5@Find:

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	jns	SHORT $LN7@Find

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;
; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN8@Find
$LN7@Find:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;
; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN8@Find:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL5@Find
$LN6@Find:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], 0
	jne	SHORT $LN2@Find
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1370 :             return _Loc._Bound;

	mov	rax, rdi

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	jns	SHORT $LN1@Find
$LN2@Find:

; 1371 :         }
; 1372 : 
; 1373 :         return _Get_scary()->_Myhead;

	mov	rax, rbp
$LN1@Find:

; 1374 :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Find@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@AEBAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@$$CBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@@std@@YAPEBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@$$CBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@@std@@YAPEBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> > const >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@$$CBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@@std@@YAPEBV?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> > const >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Left$dead$ = 8
_Right$dead$ = 16
??$_Pocca@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@0@AEBV10@@Z PROC ; std::_Pocca<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >, COMDAT

; 1060 :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 1061 :         _Left = _Right;
; 1062 :     }
; 1063 : }

	ret	0
??$_Pocca@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@0@AEBV10@@Z ENDP ; std::_Pocca<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy<0>, COMDAT

; 1637 :     void _Copy(const _Tree& _Right) { // copy or move entire tree from _Right

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 1638 :         const auto _Scary        = _Get_scary();
; 1639 :         const auto _Right_scary  = _Right._Get_scary();
; 1640 :         _Scary->_Myhead->_Parent = _Copy_nodes<_Strat>(_Right_scary->_Myhead->_Parent, _Scary->_Myhead);

	mov	r8, QWORD PTR [rcx]
	mov	rbx, rdx
	mov	rdx, QWORD PTR [rdx]
	mov	rdi, rcx
	mov	rdx, QWORD PTR [rdx+8]
	call	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>
	mov	r8, QWORD PTR [rdi]
	mov	QWORD PTR [r8+8], rax

; 1641 :         _Scary->_Mysize          = _Right_scary->_Mysize;
; 1642 :         if (!_Scary->_Myhead->_Parent->_Isnil) { // nonempty tree, look for new smallest and largest

	mov	r8, QWORD PTR [rdi]
	mov	rax, QWORD PTR [rbx+8]
	mov	QWORD PTR [rdi+8], rax
	mov	rdx, QWORD PTR [r8+8]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN2@Copy

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [rdx]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN7@Copy
	npad	12
$LL6@Copy:
	mov	rax, QWORD PTR [rcx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	rdx, rcx
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL6@Copy
$LN7@Copy:

; 1643 :             _Scary->_Myhead->_Left  = _Scary_val::_Min(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [r8], rdx

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	rdx, QWORD PTR [rdi]
	mov	rcx, QWORD PTR [rdx+8]

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN11@Copy
$LL10@Copy:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rcx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL10@Copy
$LN11@Copy:

; 1644 :             _Scary->_Myhead->_Right = _Scary_val::_Max(_Scary->_Myhead->_Parent);

	mov	QWORD PTR [rdx+16], rcx

; 1645 :         } else { // empty tree, just tidy head pointers
; 1646 :             _Scary->_Myhead->_Left  = _Scary->_Myhead;
; 1647 :             _Scary->_Myhead->_Right = _Scary->_Myhead;
; 1648 :         }
; 1649 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@Copy:
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [r8], r8
	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rax+16], rax
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAXAEBV01@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy<0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
_Val1$dead$ = 24
<_Val2_0>$dead$ = 32
??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1520 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >, COMDAT

; 344  :     static _Nodeptr _Buyheadnode(_Alloc& _Al) {

$LN33:
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 351  :         _Pnode->_Isnil = true;
; 352  :         return _Pnode;
; 353  :     }

	add	rsp, 40					; 00000028H
	ret	0
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >, COMDAT

; 344  :     static _Nodeptr _Buyheadnode(_Alloc& _Al) {

$LN29:
	sub	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	mov	QWORD PTR [rax], rax

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	mov	QWORD PTR [rax+8], rax

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	mov	QWORD PTR [rax+16], rax

; 350  :         _Pnode->_Color = _Black;

	mov	WORD PTR [rax+24], 257			; 00000101H

; 351  :         _Pnode->_Isnil = true;
; 352  :         return _Pnode;
; 353  :     }

	add	rsp, 40					; 00000028H
	ret	0
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Construct_in_place@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@AEBV12@@std@@YAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
<_Args_0>$dead$ = 16
??$_Construct_in_place@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@AEBV12@@std@@YAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEBV10@@Z PROC ; std::_Construct_in_place<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > const &>, COMDAT

; 248  : #if _HAS_CXX20
; 249  :     if (_STD is_constant_evaluated()) {
; 250  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 251  :     } else
; 252  : #endif // _HAS_CXX20
; 253  :     {
; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 255  :     }
; 256  : }

	ret	0
??$_Construct_in_place@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@AEBV12@@std@@YAXAEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEBV10@@Z ENDP ; std::_Construct_in_place<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?__autoclassinit2@?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 8
classSize$dead$ = 16
?__autoclassinit2@?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::__autoclassinit2, COMDAT
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	ret	0
?__autoclassinit2@?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >, COMDAT

; 818  :     ~_Tree_temp_node() {

$LN64:
	sub	rsp, 40					; 00000028H
	mov	QWORD PTR [rsp+64], rsi
	mov	rsi, rcx
	mov	QWORD PTR [rsp+32], rdi

; 819  :         if (this->_Ptr) {

	mov	rdi, QWORD PTR [rcx+8]
	test	rdi, rdi
	je	SHORT $LN9@Tree_temp_
	lea	rcx, QWORD PTR [rdi+216]
	mov	QWORD PTR [rsp+56], rbx
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+152]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+112]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+88]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+64]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rbx, QWORD PTR [rsp+56]
$LN9@Tree_temp_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1156 :         if (_Ptr) {

	mov	rcx, QWORD PTR [rsi+8]
	mov	rdi, QWORD PTR [rsp+32]
	mov	rsi, QWORD PTR [rsp+64]
	test	rcx, rcx
	je	SHORT $LN42@Tree_temp_

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 288				; 00000120H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 825  :     }

	add	rsp, 40					; 00000028H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN42@Tree_temp_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 825  :     }

	add	rsp, 40					; 00000028H
	ret	0
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rcx+8]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rcx+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1148 :     }

	ret	0
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >, COMDAT

; 818  :     ~_Tree_temp_node() {

$LN43:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 819  :         if (this->_Ptr) {

	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN9@Tree_temp_

; 820  :             _Destroy_in_place(this->_Ptr->_Left);
; 821  :             _Destroy_in_place(this->_Ptr->_Parent);
; 822  :             _Destroy_in_place(this->_Ptr->_Right);
; 823  :             _Alnode_traits::destroy(this->_Al, _STD addressof(this->_Ptr->_Myval));

	add	rcx, 32					; 00000020H
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
$LN9@Tree_temp_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1156 :         if (_Ptr) {

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN21@Tree_temp_

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 825  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN21@Tree_temp_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 825  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rcx+8]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rcx+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1148 :     }

	ret	0
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Release
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??F?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??F?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--, COMDAT

; 72   :         if (_Ptr->_Isnil) {

	mov	rdx, QWORD PTR [rcx]

; 153  :     _Tree_unchecked_iterator& operator--() noexcept {

	mov	r8, rcx

; 72   :         if (_Ptr->_Isnil) {

	cmp	BYTE PTR [rdx+25], 0
	je	SHORT $LN6@operator

; 73   :             _Ptr = _Ptr->_Right; // end() ==> rightmost

	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx], rax

; 154  :         _Mybase::operator--();
; 155  :         return *this;
; 156  :     }

	mov	rax, rcx
	ret	0
$LN6@operator:

; 74   :         } else if (_Ptr->_Left->_Isnil) { // climb looking for left subtree

	mov	rcx, QWORD PTR [rdx]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LN8@operator

; 75   :             _Nodeptr _Pnode;
; 76   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Left) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN5@operator
	mov	rcx, rdx
	mov	r9, rdx
$LL4@operator:
	mov	r10, rax
	mov	r11, rax
	mov	rdx, r9
	cmp	rcx, QWORD PTR [rax]
	jne	SHORT $LN5@operator
	mov	rcx, rax

; 77   :                 _Ptr = _Pnode; // ==> parent while left subtree

	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rax+8]
	mov	r9, rcx
	mov	rdx, rcx
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL4@operator
$LN5@operator:

; 78   :             }
; 79   : 
; 80   :             if (!_Ptr->_Isnil) { // decrement non-begin()

	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN26@operator

; 81   :                 _Ptr = _Pnode; // ==> parent if not head

	mov	QWORD PTR [r8], rax

; 154  :         _Mybase::operator--();
; 155  :         return *this;
; 156  :     }

	mov	rax, r8
	ret	0
$LN8@operator:

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN14@operator
	npad	5
$LL13@operator:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rcx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL13@operator
$LN14@operator:

; 84   :             _Ptr = _Mytree::_Max(_Ptr->_Left); // ==> largest of left subtree

	mov	QWORD PTR [r8], rcx
$LN26@operator:

; 154  :         _Mybase::operator--();
; 155  :         return *this;
; 156  :     }

	mov	rax, r8
	ret	0
??F?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator--
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??E?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++, COMDAT

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

	mov	rdx, QWORD PTR [rcx]

; 142  :     _Tree_unchecked_iterator& operator++() noexcept {

	mov	r8, rcx

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

	mov	r9, QWORD PTR [rdx+16]
	cmp	BYTE PTR [r9+25], 0
	je	SHORT $LN6@operator

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN5@operator
	npad	5
$LL4@operator:
	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN5@operator

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

	mov	QWORD PTR [rcx], rax
	mov	rdx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL4@operator
$LN5@operator:

; 143  :         _Mybase::operator++();
; 144  :         return *this;

	mov	QWORD PTR [rcx], rax

; 145  :     }

	mov	rax, r8
	ret	0
$LN6@operator:

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [r9]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN11@operator
	npad	10
$LL10@operator:
	mov	rax, QWORD PTR [rcx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	r9, rcx
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL10@operator
$LN11@operator:

; 143  :         _Mybase::operator++();
; 144  :         return *this;

	mov	QWORD PTR [r8], r9

; 145  :     }

	mov	rax, r8
	ret	0
??E?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??F?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??F?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator--, COMDAT

; 72   :         if (_Ptr->_Isnil) {

	mov	rdx, QWORD PTR [rcx]

; 153  :     _Tree_unchecked_iterator& operator--() noexcept {

	mov	r8, rcx

; 72   :         if (_Ptr->_Isnil) {

	cmp	BYTE PTR [rdx+25], 0
	je	SHORT $LN6@operator

; 73   :             _Ptr = _Ptr->_Right; // end() ==> rightmost

	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx], rax

; 154  :         _Mybase::operator--();
; 155  :         return *this;
; 156  :     }

	mov	rax, rcx
	ret	0
$LN6@operator:

; 74   :         } else if (_Ptr->_Left->_Isnil) { // climb looking for left subtree

	mov	rcx, QWORD PTR [rdx]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LN8@operator

; 75   :             _Nodeptr _Pnode;
; 76   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Left) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN5@operator
	mov	rcx, rdx
	mov	r9, rdx
$LL4@operator:
	mov	r10, rax
	mov	r11, rax
	mov	rdx, r9
	cmp	rcx, QWORD PTR [rax]
	jne	SHORT $LN5@operator
	mov	rcx, rax

; 77   :                 _Ptr = _Pnode; // ==> parent while left subtree

	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rax+8]
	mov	r9, rcx
	mov	rdx, rcx
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL4@operator
$LN5@operator:

; 78   :             }
; 79   : 
; 80   :             if (!_Ptr->_Isnil) { // decrement non-begin()

	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN26@operator

; 81   :                 _Ptr = _Pnode; // ==> parent if not head

	mov	QWORD PTR [r8], rax

; 154  :         _Mybase::operator--();
; 155  :         return *this;
; 156  :     }

	mov	rax, r8
	ret	0
$LN8@operator:

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN14@operator
	npad	5
$LL13@operator:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rcx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL13@operator
$LN14@operator:

; 84   :             _Ptr = _Mytree::_Max(_Ptr->_Left); // ==> largest of left subtree

	mov	QWORD PTR [r8], rcx
$LN26@operator:

; 154  :         _Mybase::operator--();
; 155  :         return *this;
; 156  :     }

	mov	rax, r8
	ret	0
??F?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator--
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??E?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 48
??E?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator++, COMDAT

; 142  :     _Tree_unchecked_iterator& operator++() noexcept {

$LN5:
	sub	rsp, 40					; 00000028H
	mov	r10, rcx

; 143  :         _Mybase::operator++();

	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>::operator++

; 144  :         return *this;

	mov	rax, r10

; 145  :     }

	add	rsp, 40					; 00000028H
	ret	0
??E?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Unwrapped@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?_Unwrapped@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Unwrapped, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 307  :         return _Tree_unchecked_iterator<_Mytree>(this->_Ptr, static_cast<const _Mytree*>(this->_Getcont()));

	mov	rax, rdx

; 308  :     }

	ret	0
?_Unwrapped@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Unwrapped@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?_Unwrapped@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Unwrapped, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax

; 307  :         return _Tree_unchecked_iterator<_Mytree>(this->_Ptr, static_cast<const _Mytree*>(this->_Getcont()));

	mov	rax, rdx

; 308  :     }

	ret	0
?_Unwrapped@?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@QEAU32@@Z
_TEXT	SEGMENT
this$ = 8
_Loc$ = 16
_Newnode$ = 24
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@QEAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Insert_node, COMDAT

; 647  :         ++_Mysize;

	inc	QWORD PTR [rcx+8]
	mov	r9, r8

; 648  :         const auto _Head  = _Myhead;

	mov	r11, QWORD PTR [rcx]
	mov	r10, rcx

; 649  :         _Newnode->_Parent = _Loc._Parent;

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [r8+8], rax

; 650  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

	cmp	rax, r11
	jne	SHORT $LN5@Insert_nod

; 651  :             _Head->_Left     = _Newnode;

	mov	QWORD PTR [r11], r8

; 712  :         return _Newnode;
; 713  :     }

	mov	rax, r8
	mov	QWORD PTR [r11+8], r8
	mov	QWORD PTR [r11+16], r8
	mov	BYTE PTR [r8+24], 1
	ret	0
$LN5@Insert_nod:

; 652  :             _Head->_Parent   = _Newnode;
; 653  :             _Head->_Right    = _Newnode;
; 654  :             _Newnode->_Color = _Black; // the root is black
; 655  :             return _Newnode;
; 656  :         }
; 657  : 
; 658  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 659  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

	cmp	DWORD PTR [rdx+8], 0
	jne	SHORT $LN6@Insert_nod

; 660  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 661  :             _Loc._Parent->_Right = _Newnode;

	mov	QWORD PTR [rax+16], r9

; 662  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

	cmp	rax, QWORD PTR [r11+16]
	jne	SHORT $LN9@Insert_nod

; 663  :                 _Head->_Right = _Newnode;

	mov	QWORD PTR [r11+16], r9

; 664  :             }
; 665  :         } else { // add to left of _Loc._Parent

	jmp	SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 666  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 667  :             _Loc._Parent->_Left = _Newnode;

	mov	QWORD PTR [rax], r9

; 668  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

	cmp	rax, QWORD PTR [r11]
	jne	SHORT $LN9@Insert_nod

; 669  :                 _Head->_Left = _Newnode;

	mov	QWORD PTR [r11], r9
$LN9@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

	mov	rcx, QWORD PTR [r8+8]
	mov	rax, r9
	cmp	BYTE PTR [rcx+24], 0
	jne	$LN3@Insert_nod
	npad	1
$LL2@Insert_nod:

; 674  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

	mov	rdx, QWORD PTR [rax+8]
	mov	r8, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [r8]
	cmp	rdx, rcx
	jne	$LN10@Insert_nod

; 675  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

	mov	rcx, QWORD PTR [r8+16]

; 676  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

	cmp	BYTE PTR [rcx+24], 0
	jne	SHORT $LN12@Insert_nod

; 677  :                     _Pnode->_Parent->_Color          = _Black;

	mov	BYTE PTR [rdx+24], 1

; 678  :                     _Parent_sibling->_Color          = _Black;

	mov	BYTE PTR [rcx+24], 1

; 679  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	mov	BYTE PTR [rdx+24], 0

; 680  :                     _Pnode                           = _Pnode->_Parent->_Parent;

	mov	rcx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rcx+8]

; 681  :                 } else { // parent's sibling has red and black children

	jmp	$LN46@Insert_nod
$LN12@Insert_nod:

; 682  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

	mov	r8, QWORD PTR [rdx+16]
	cmp	rax, r8
	jne	SHORT $LN51@Insert_nod

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	rcx, QWORD PTR [r8]

; 683  :                         _Pnode = _Pnode->_Parent;

	mov	rax, rdx

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	QWORD PTR [rdx+16], rcx

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [r8]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN20@Insert_nod

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

	mov	QWORD PTR [rcx+8], rdx
$LN20@Insert_nod:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rcx

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rcx, QWORD PTR [r10]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN21@Insert_nod

; 471  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rcx+8], r8
	jmp	SHORT $LN24@Insert_nod
$LN21@Insert_nod:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

	mov	rcx, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rcx]
	jne	SHORT $LN23@Insert_nod

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rcx], r8

; 474  :         } else {

	jmp	SHORT $LN24@Insert_nod
$LN23@Insert_nod:

; 475  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rcx+16], r8
$LN24@Insert_nod:

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

	mov	QWORD PTR [r8], rdx

; 479  :         _Wherenode->_Parent = _Pnode;

	mov	QWORD PTR [rdx+8], r8
$LN51@Insert_nod:

; 684  :                         _Lrotate(_Pnode);
; 685  :                     }
; 686  : 
; 687  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+24], 1

; 688  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	mov	BYTE PTR [rdx+24], 0

; 689  :                     _Rrotate(_Pnode->_Parent->_Parent);

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]

; 483  :         _Nodeptr _Pnode   = _Wherenode->_Left;

	mov	r8, QWORD PTR [rdx]

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	rcx, QWORD PTR [r8+16]
	mov	QWORD PTR [rdx], rcx

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

	mov	rcx, QWORD PTR [r8+16]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN27@Insert_nod

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

	mov	QWORD PTR [rcx+8], rdx
$LN27@Insert_nod:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rcx

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rcx, QWORD PTR [r10]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN28@Insert_nod

; 493  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rcx+8], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [r8+16], rdx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

	jmp	$LN53@Insert_nod
$LN28@Insert_nod:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

	mov	rcx, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rcx+16]
	jne	SHORT $LN30@Insert_nod

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rcx+16], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [r8+16], rdx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

	jmp	$LN53@Insert_nod
$LN30@Insert_nod:

; 497  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rcx], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [r8+16], rdx

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

	jmp	$LN53@Insert_nod
$LN10@Insert_nod:

; 692  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 693  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

	cmp	BYTE PTR [rcx+24], 0
	jne	SHORT $LN15@Insert_nod

; 694  :                     _Pnode->_Parent->_Color          = _Black;

	mov	BYTE PTR [rdx+24], 1

; 695  :                     _Parent_sibling->_Color          = _Black;

	mov	BYTE PTR [rcx+24], 1

; 696  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	mov	BYTE PTR [rdx+24], 0

; 697  :                     _Pnode                           = _Pnode->_Parent->_Parent;

	mov	rcx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rcx+8]

; 698  :                 } else { // parent's sibling has red and black children

	jmp	$LN46@Insert_nod
$LN15@Insert_nod:

; 699  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

	mov	r8, QWORD PTR [rdx]
	cmp	rax, r8
	jne	SHORT $LN39@Insert_nod

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	rcx, QWORD PTR [r8+16]

; 700  :                         _Pnode = _Pnode->_Parent;

	mov	rax, rdx

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	QWORD PTR [rdx], rcx

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

	mov	rcx, QWORD PTR [r8+16]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN34@Insert_nod

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

	mov	QWORD PTR [rcx+8], rdx
$LN34@Insert_nod:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rcx

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rcx, QWORD PTR [r10]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN35@Insert_nod

; 493  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rcx+8], r8
	jmp	SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

	mov	rcx, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rcx+16]
	jne	SHORT $LN37@Insert_nod

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rcx+16], r8

; 496  :         } else {

	jmp	SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 497  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rcx], r8
$LN38@Insert_nod:

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

	mov	QWORD PTR [r8+16], rdx

; 501  :         _Wherenode->_Parent = _Pnode;

	mov	QWORD PTR [rdx+8], r8
$LN39@Insert_nod:

; 701  :                         _Rrotate(_Pnode);
; 702  :                     }
; 703  : 
; 704  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

	mov	rcx, QWORD PTR [rax+8]
	mov	BYTE PTR [rcx+24], 1

; 705  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]
	mov	BYTE PTR [rdx+24], 0

; 706  :                     _Lrotate(_Pnode->_Parent->_Parent);

	mov	rcx, QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rcx+8]

; 461  :         _Nodeptr _Pnode    = _Wherenode->_Right;

	mov	r8, QWORD PTR [rdx+16]

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	rcx, QWORD PTR [r8]
	mov	QWORD PTR [rdx+16], rcx

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [r8]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN41@Insert_nod

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

	mov	QWORD PTR [rcx+8], rdx
$LN41@Insert_nod:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rcx, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rcx

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rcx, QWORD PTR [r10]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN42@Insert_nod

; 471  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rcx+8], r8
	jmp	SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

	mov	rcx, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rcx]
	jne	SHORT $LN44@Insert_nod

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rcx], r8

; 474  :         } else {

	jmp	SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 475  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rcx+16], r8
$LN45@Insert_nod:

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

	mov	QWORD PTR [r8], rdx
$LN53@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

	mov	QWORD PTR [rdx+8], r8
$LN46@Insert_nod:
	mov	rcx, QWORD PTR [rax+8]
	cmp	BYTE PTR [rcx+24], 0
	je	$LL2@Insert_nod
$LN3@Insert_nod:

; 707  :                 }
; 708  :             }
; 709  :         }
; 710  : 
; 711  :         _Head->_Parent->_Color = _Black; // root is always black

	mov	rax, QWORD PTR [r11+8]
	mov	BYTE PTR [rax+24], 1

; 712  :         return _Newnode;
; 713  :     }

	mov	rax, r9
	ret	0
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@QEAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp, COMDAT

; 1957 :         return _Mypair._Get_first();

	mov	rax, rcx

; 1958 :     }

	ret	0
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Check_grow_by_1, COMDAT

; 1630 :     void _Check_grow_by_1() {

$LN7:
	sub	rsp, 40					; 00000028H

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH
	cmp	QWORD PTR [rcx+8], rax
	je	SHORT $LN6@Check_grow

; 1633 :         }
; 1634 :     }

	add	rsp, 40					; 00000028H
	ret	0
$LN6@Check_grow:

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN4@Check_grow:
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAAXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Check_grow_by_1
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Count$dead$ = 16
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocate, COMDAT

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	jmp	??2@YAPEAX_K@Z				; operator new
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::deallocate, COMDAT

; 701  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 288				; 00000120H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Count$dead$ = 16
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >::allocate, COMDAT

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	jmp	??2@YAPEAX_K@Z				; operator new
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >, COMDAT

; 1156 :         if (_Ptr) {

	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN10@Tree_temp_

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 288				; 00000120H
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN10@Tree_temp_:
	ret	0
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >, COMDAT

; 1156 :         if (_Ptr) {

	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN10@Tree_temp_

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN10@Tree_temp_:
	ret	0
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__param0$ = 16
__param1$dead$ = 24
??0?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__param0$ = 16
__param1$dead$ = 24
??0?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >, COMDAT

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	ret	0
??0?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >, COMDAT

; 1156 :         if (_Ptr) {

	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN8@Alloc_cons

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 288				; 00000120H
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN8@Alloc_cons:

; 1157 :             _Al.deallocate(_Ptr, 1);
; 1158 :         }
; 1159 :     }

	ret	0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >, COMDAT

; 1156 :         if (_Ptr) {

	mov	rcx, QWORD PTR [rcx+8]
	test	rcx, rcx
	je	SHORT $LN8@Alloc_cons

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	jmp	??3@YAXPEAX_K@Z				; operator delete
$LN8@Alloc_cons:

; 1157 :             _Al.deallocate(_Ptr, 1);
; 1158 :         }
; 1159 :     }

	ret	0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base0>::operator--, COMDAT

; 72   :         if (_Ptr->_Isnil) {

	mov	rdx, QWORD PTR [rcx]
	mov	r8, rcx
	cmp	BYTE PTR [rdx+25], 0
	je	SHORT $LN4@operator

; 73   :             _Ptr = _Ptr->_Right; // end() ==> rightmost

	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx], rax

; 85   :         }
; 86   : 
; 87   :         return *this;
; 88   :     }

	mov	rax, rcx
	ret	0
$LN4@operator:

; 74   :         } else if (_Ptr->_Left->_Isnil) { // climb looking for left subtree

	mov	rcx, QWORD PTR [rdx]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LN6@operator

; 75   :             _Nodeptr _Pnode;
; 76   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Left) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN3@operator
	mov	rcx, rdx
	mov	r9, rdx
$LL2@operator:
	mov	r10, rax
	mov	r11, rax
	mov	rdx, r9
	cmp	rcx, QWORD PTR [rax]
	jne	SHORT $LN3@operator
	mov	rcx, rax

; 77   :                 _Ptr = _Pnode; // ==> parent while left subtree

	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rax+8]
	mov	r9, rcx
	mov	rdx, rcx
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL2@operator
$LN3@operator:

; 78   :             }
; 79   : 
; 80   :             if (!_Ptr->_Isnil) { // decrement non-begin()

	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN24@operator

; 81   :                 _Ptr = _Pnode; // ==> parent if not head

	mov	QWORD PTR [r8], rax

; 85   :         }
; 86   : 
; 87   :         return *this;
; 88   :     }

	mov	rax, r8
	ret	0
$LN6@operator:

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN12@operator
	npad	5
$LL11@operator:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rcx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL11@operator
$LN12@operator:

; 82   :             }
; 83   :         } else {
; 84   :             _Ptr = _Mytree::_Max(_Ptr->_Left); // ==> largest of left subtree

	mov	QWORD PTR [r8], rcx
$LN24@operator:

; 85   :         }
; 86   : 
; 87   :         return *this;
; 88   :     }

	mov	rax, r8
	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base0>::operator++, COMDAT

; 51   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

	mov	rdx, QWORD PTR [rcx]
	mov	r8, rcx
	mov	r9, QWORD PTR [rdx+16]
	cmp	BYTE PTR [r9+25], 0
	je	SHORT $LN4@operator

; 52   :             _Nodeptr _Pnode;
; 53   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN3@operator
	npad	5
$LL2@operator:
	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN3@operator

; 54   :                 _Ptr = _Pnode; // ==> parent while right subtree

	mov	QWORD PTR [rcx], rax
	mov	rdx, rax
	mov	rax, QWORD PTR [rax+8]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL2@operator
$LN3@operator:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())
; 58   :         } else {
; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 60   :         }
; 61   : 
; 62   :         return *this;

	mov	QWORD PTR [rcx], rax

; 63   :     }

	mov	rax, r8
	ret	0
$LN4@operator:

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rcx, QWORD PTR [r9]
	cmp	BYTE PTR [rcx+25], 0
	jne	SHORT $LN9@operator
	npad	10
$LL8@operator:
	mov	rax, QWORD PTR [rcx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	r9, rcx
	mov	rcx, rax
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL8@operator
$LN9@operator:

; 55   :             }
; 56   : 
; 57   :             _Ptr = _Pnode; // ==> parent (head if end())
; 58   :         } else {
; 59   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 60   :         }
; 61   : 
; 62   :         return *this;

	mov	QWORD PTR [r8], r9

; 63   :     }

	mov	rax, r8
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>::operator--, COMDAT

; 72   :         if (_Ptr->_Isnil) {

	mov	rdx, QWORD PTR [rcx]
	mov	r8, rcx
	cmp	BYTE PTR [rdx+25], 0
	je	SHORT $LN4@operator

; 73   :             _Ptr = _Ptr->_Right; // end() ==> rightmost

	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx], rax

; 85   :         }
; 86   : 
; 87   :         return *this;
; 88   :     }

	mov	rax, rcx
	ret	0
$LN4@operator:

; 74   :         } else if (_Ptr->_Left->_Isnil) { // climb looking for left subtree

	mov	rcx, QWORD PTR [rdx]
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LN6@operator

; 75   :             _Nodeptr _Pnode;
; 76   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Left) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN3@operator
	mov	rcx, rdx
	mov	r9, rdx
$LL2@operator:
	mov	r10, rax
	mov	r11, rax
	mov	rdx, r9
	cmp	rcx, QWORD PTR [rax]
	jne	SHORT $LN3@operator
	mov	rcx, rax

; 77   :                 _Ptr = _Pnode; // ==> parent while left subtree

	mov	QWORD PTR [r8], rax
	mov	rax, QWORD PTR [rax+8]
	mov	r9, rcx
	mov	rdx, rcx
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL2@operator
$LN3@operator:

; 78   :             }
; 79   : 
; 80   :             if (!_Ptr->_Isnil) { // decrement non-begin()

	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN24@operator

; 81   :                 _Ptr = _Pnode; // ==> parent if not head

	mov	QWORD PTR [r8], rax

; 85   :         }
; 86   : 
; 87   :         return *this;
; 88   :     }

	mov	rax, r8
	ret	0
$LN6@operator:

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN12@operator
	npad	5
$LL11@operator:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rcx, rax
	mov	rax, QWORD PTR [rax+16]
	cmp	BYTE PTR [rax+25], 0
	je	SHORT $LL11@operator
$LN12@operator:

; 82   :             }
; 83   :         } else {
; 84   :             _Ptr = _Mytree::_Max(_Ptr->_Left); // ==> largest of left subtree

	mov	QWORD PTR [r8], rcx
$LN24@operator:

; 85   :         }
; 86   : 
; 87   :         return *this;
; 88   :     }

	mov	rax, r8
	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@@Z
_TEXT	SEGMENT
this$ = 8
_Wherenode$ = 16
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Rrotate, COMDAT

; 483  :         _Nodeptr _Pnode   = _Wherenode->_Left;

	mov	r8, QWORD PTR [rdx]

; 484  :         _Wherenode->_Left = _Pnode->_Right;

	mov	rax, QWORD PTR [r8+16]
	mov	QWORD PTR [rdx], rax

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

	mov	rax, QWORD PTR [r8+16]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN2@Rrotate

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

	mov	QWORD PTR [rax+8], rdx
$LN2@Rrotate:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rax

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rax, QWORD PTR [rcx]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN3@Rrotate

; 493  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rax+8], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;
; 501  :         _Wherenode->_Parent = _Pnode;
; 502  :     }

	mov	QWORD PTR [r8+16], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
$LN3@Rrotate:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rax+16]
	jne	SHORT $LN5@Rrotate

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rax+16], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;
; 501  :         _Wherenode->_Parent = _Pnode;
; 502  :     }

	mov	QWORD PTR [r8+16], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
$LN5@Rrotate:

; 496  :         } else {
; 497  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rax], r8

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;
; 501  :         _Wherenode->_Parent = _Pnode;
; 502  :     }

	mov	QWORD PTR [r8+16], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@@Z
_TEXT	SEGMENT
this$ = 8
_Wherenode$ = 16
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Lrotate, COMDAT

; 461  :         _Nodeptr _Pnode    = _Wherenode->_Right;

	mov	r8, QWORD PTR [rdx+16]

; 462  :         _Wherenode->_Right = _Pnode->_Left;

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rdx+16], rax

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

	mov	rax, QWORD PTR [r8]
	cmp	BYTE PTR [rax+25], 0
	jne	SHORT $LN2@Lrotate

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

	mov	QWORD PTR [rax+8], rdx
$LN2@Lrotate:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	rax, QWORD PTR [rdx+8]
	mov	QWORD PTR [r8+8], rax

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

	mov	rax, QWORD PTR [rcx]
	cmp	rdx, QWORD PTR [rax+8]
	jne	SHORT $LN3@Lrotate

; 471  :             _Myhead->_Parent = _Pnode;

	mov	QWORD PTR [rax+8], r8

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;
; 479  :         _Wherenode->_Parent = _Pnode;
; 480  :     }

	mov	QWORD PTR [r8], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
$LN3@Lrotate:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

	mov	rax, QWORD PTR [rdx+8]
	cmp	rdx, QWORD PTR [rax]
	jne	SHORT $LN5@Lrotate

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	QWORD PTR [rax], r8

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;
; 479  :         _Wherenode->_Parent = _Pnode;
; 480  :     }

	mov	QWORD PTR [r8], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
$LN5@Lrotate:

; 474  :         } else {
; 475  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	QWORD PTR [rax+16], r8

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;
; 479  :         _Wherenode->_Parent = _Pnode;
; 480  :     }

	mov	QWORD PTR [r8], rdx
	mov	QWORD PTR [rdx+8], r8
	ret	0
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAXPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::max_size, COMDAT

; 1198 :         return (_STD min)(

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH

; 1199 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alnode_traits::max_size(_Getal()));
; 1200 :     }

	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@QEBA_KXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 288				; 00000120H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@PEAU32@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@PEAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Min, COMDAT

; 453  :         while (!_Pnode->_Left->_Isnil) {

	mov	rdx, QWORD PTR [rcx]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN9@Min
	npad	7
$LL2@Min:
	mov	rcx, QWORD PTR [rdx]

; 454  :             _Pnode = _Pnode->_Left;

	mov	rax, rdx
	mov	rdx, rcx
	cmp	BYTE PTR [rcx+25], 0
	je	SHORT $LL2@Min

; 458  :     }

	ret	0
$LN9@Min:

; 455  :         }
; 456  : 
; 457  :         return _Pnode;

	mov	rax, rcx

; 458  :     }

	ret	0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@PEAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Min
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@PEAU32@@Z
_TEXT	SEGMENT
_Pnode$ = 8
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@PEAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Max, COMDAT

; 445  :         while (!_Pnode->_Right->_Isnil) {

	mov	rdx, QWORD PTR [rcx+16]
	cmp	BYTE PTR [rdx+25], 0
	jne	SHORT $LN9@Max
	npad	6
$LL2@Max:

; 446  :             _Pnode = _Pnode->_Right;

	mov	rax, rdx
	mov	rdx, QWORD PTR [rdx+16]
	cmp	BYTE PTR [rdx+25], 0
	je	SHORT $LL2@Max

; 450  :     }

	ret	0
$LN9@Max:

; 447  :         }
; 448  : 
; 449  :         return _Pnode;

	mov	rax, rcx

; 450  :     }

	ret	0
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@SAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@PEAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Max
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal, COMDAT

; 1965 :         return _Mypair._Myval2._Get_first();

	mov	rax, rcx

; 1966 :     }

	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::max_size, COMDAT

; 733  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH

; 734  :     }

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::deallocate, COMDAT

; 966  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@QEAAXQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first, COMDAT

; 1527 :         return *this;

	mov	rax, rcx

; 1528 :     }

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1515 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > > >, COMDAT

; 1133 :     // check that [_First, _Last) forms an iterator range
; 1134 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1135 :         _Verify_range(_First, _Last);
; 1136 :     }
; 1137 : }

	ret	0
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UEntry@SarcFile@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SarcFile::Entry> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
_Mid$1 = 48
_Val$2 = 64
__$ArrayPad$ = 120
_First$ = 192
_Last$ = 200
_Ideal$ = 208
_Pred$ = 216
??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::_Sort_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 8033 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 8034 :     // order [_First, _Last)
; 8035 :     for (;;) {
; 8036 :         if (_Last - _First <= _ISORT_MAX) { // small

	mov	rax, rdx
	movzx	ebx, r9b
	sub	rax, rcx
	mov	rdi, r8
	mov	rbp, rdx
	mov	rsi, rcx
	cmp	rax, 1848				; 00000738H
	jl	$LN107@Sort_unche
	mov	r12, 7905747460161236407		; 6db6db6db6db6db7H
	npad	6
$LL2@Sort_unche:

; 8038 :             return;
; 8039 :         }
; 8040 : 
; 8041 :         if (_Ideal <= 0) { // heap sort if too many divisions

	test	rdi, rdi
	jle	$LN108@Sort_unche

; 8043 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 8044 :             return;
; 8045 :         }
; 8046 : 
; 8047 :         // divide and conquer by quicksort
; 8048 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

	movzx	r9d, bl
	lea	rcx, QWORD PTR _Mid$1[rsp]
	mov	r8, rbp
	mov	rdx, rsi
	call	??$_Partition_by_median_guess_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YA?AU?$pair@PEAUEntry@SarcFile@@PEAU12@@0@PEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Partition_by_median_guess_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >

; 8049 : 
; 8050 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 8051 : 
; 8052 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

	mov	r15, QWORD PTR _Mid$1[rsp]
	mov	rcx, rdi
	mov	r14, QWORD PTR _Mid$1[rsp+8]
	mov	rax, r15
	sub	rax, rsi
	sar	rcx, 2
	sar	rax, 3
	mov	rdx, rbp
	sub	rdx, r14
	sar	rdi, 1
	sar	rdx, 3
	add	rdi, rcx
	imul	rax, r12
	imul	rdx, r12
	movzx	r9d, bl
	mov	r8, rdi
	cmp	rax, rdx
	jge	SHORT $LN7@Sort_unche

; 8053 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

	mov	rdx, r15
	mov	rcx, rsi
	call	??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Sort_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >

; 8054 :             _First = _Mid.second;

	mov	rsi, r14

; 8055 :         } else { // loop on first half

	jmp	SHORT $LN8@Sort_unche
$LN7@Sort_unche:

; 8056 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

	mov	rdx, rbp
	mov	rcx, r14
	call	??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Sort_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >

; 8057 :             _Last = _Mid.first;

	mov	rbp, r15
$LN8@Sort_unche:

; 8034 :     // order [_First, _Last)
; 8035 :     for (;;) {
; 8036 :         if (_Last - _First <= _ISORT_MAX) { // small

	mov	rax, rbp
	sub	rax, rsi
	cmp	rax, 1848				; 00000738H
	jge	$LL2@Sort_unche
$LN107@Sort_unche:

; 8037 :             _Insertion_sort_unchecked(_First, _Last, _Pred);

	mov	rdx, rbp
	mov	rcx, rsi
	call	??$_Insertion_sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAPEAUEntry@SarcFile@@QEAU12@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Insertion_sort_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
	jmp	$LN12@Sort_unche
$LN108@Sort_unche:

; 8042 :             _Make_heap_unchecked(_First, _Last, _Pred);

	movzx	r8d, bl
	mov	rdx, rbp
	mov	rcx, rsi
	call	??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Make_heap_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >

; 6818 :     for (; _Last - _First >= 2; --_Last) {

	mov	rax, rbp
	sub	rax, rsi
	cmp	rax, 112				; 00000070H
	jl	$LN12@Sort_unche

; 8042 :             _Make_heap_unchecked(_First, _Last, _Pred);

	mov	r15, -40				; ffffffffffffffd8H

; 6818 :     for (; _Last - _First >= 2; --_Last) {

	mov	QWORD PTR [rsp+216], r13

; 8042 :             _Make_heap_unchecked(_First, _Last, _Pred);

	mov	r14d, 16
	sub	r15, rsi
	sub	r14, rsi
	add	rbp, -16
	xor	r13d, r13d
	npad	3
$LL13@Sort_unche:

; 6474 :     if (2 <= _Last - _First) {

	lea	rax, QWORD PTR [r14+rbp]
	sar	rax, 3
	imul	rax, r12
	cmp	rax, 2
	jl	$LN11@Sort_unche
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rbp-40]
	lea	rcx, QWORD PTR [rbp-40]
	movups	xmm1, XMMWORD PTR [rcx+16]
	movups	XMMWORD PTR _Val$2[rsp], xmm0
	movups	XMMWORD PTR _Val$2[rsp+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [rbp-24], r13
	mov	QWORD PTR [rbp-16], 15
	mov	BYTE PTR [rcx], r13b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rbp]
	mov	r8, QWORD PTR [rbp+8]
	mov	rax, QWORD PTR [rbp-8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Val$2[rsp+40], rdx
	mov	rdx, rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rbp+8], r13
	mov	QWORD PTR [rbp], r13
	mov	QWORD PTR [rbp-8], r13
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Val$2[rsp+32], rax
	mov	QWORD PTR _Val$2[rsp+48], r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rsi+32]
	lea	rcx, QWORD PTR [rbp-8]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6467 :     _STD _Pop_heap_hole_by_index(

	lea	r8, QWORD PTR [r15+rbp]
	mov	BYTE PTR [rsp+32], bl
	sar	r8, 3
	lea	r9, QWORD PTR _Val$2[rsp]
	imul	r8, r12
	xor	edx, edx
	mov	rcx, rsi
	call	??$_Pop_heap_hole_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Pop_heap_hole_by_index<SarcFile::Entry *,SarcFile::Entry,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR _Val$2[rsp+32]
	test	rcx, rcx
	je	SHORT $LN73@Sort_unche

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Val$2[rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN91@Sort_unche

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN88@Sort_unche
$LN91@Sort_unche:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Val$2[rsp+48], r13
	movdqu	XMMWORD PTR _Val$2[rsp+32], xmm0
$LN73@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Val$2[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN11@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6818 :     for (; _Last - _First >= 2; --_Last) {

	sub	rbp, 56					; 00000038H
	lea	rax, QWORD PTR [r14+rbp]
	cmp	rax, 112				; 00000070H
	jge	$LL13@Sort_unche
	mov	r13, QWORD PTR [rsp+216]
$LN12@Sort_unche:

; 8060 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 128				; 00000080H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN88@Sort_unche:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN129@Sort_unche:
??$_Sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0_JV<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::_Sort_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@VBymlFile@@@std@@YA$$QEAVBymlFile@@AEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@VBymlFile@@@std@@YA$$QEAVBymlFile@@AEAV1@@Z PROC ; std::forward<BymlFile>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@VBymlFile@@@std@@YA$$QEAVBymlFile@@AEAV1@@Z ENDP ; std::forward<BymlFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z PROC ; std::move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z ENDP ; std::move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
$T4 = 72
this$ = 144
__$ReturnUdt$ = 152
<_Vals_0>$ = 160
??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >, COMDAT

; 995  :     pair<_Nodeptr, bool> _Emplace(_Valtys&&... _Vals) {

$LN149:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rsi, r8
	mov	r14, rdx
	mov	r15, rcx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbp, QWORD PTR [rcx]
	mov	rbx, QWORD PTR [rbp+8]
	mov	QWORD PTR $T3[rsp], rbx
	xor	r12d, r12d
	mov	DWORD PTR $T3[rsp+8], r12d
	mov	rdi, rbp

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	jne	SHORT $LN7@Emplace
	npad	11
$LL6@Emplace:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR $T3[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN8@Emplace

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR $T3[rsp+8], r12d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN9@Emplace
$LN8@Emplace:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR $T3[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN9@Emplace:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	je	SHORT $LL6@Emplace
$LN7@Emplace:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r12b
	jne	SHORT $LN2@Emplace
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN2@Emplace
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [r14], rdi
	mov	BYTE PTR [r14+8], r12b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1004 :                 return {_Loc._Bound, false};

	jmp	$LN145@Emplace
$LN2@Emplace:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 64051194700380387			; 00e38e38e38e38e3H
	cmp	QWORD PTR [r15+8], rax
	je	$LN147@Emplace
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T2[rsp], r15

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T2[rsp+8], r12

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T2[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 806  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T4[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 246  :     pair(pair&&)      = default;

	mov	rdx, rsi
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [rsi+32]
	call	??0BymlFile@@QEAA@$$QEAV0@@Z
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0

; 1005 :             }
; 1006 : 
; 1007 :             _Check_grow_by_1();
; 1008 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();
; 1009 :             // nothrow hereafter
; 1010 :         } else {
; 1011 :             _Tree_temp_node<_Alnode> _Newnode(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...);
; 1012 :             const auto& _Keyval = _Traits::_Kfn(_Newnode._Ptr->_Myval);
; 1013 :             if constexpr (_Multi) { // duplicate check if unique
; 1014 :                 _Loc = _Find_upper_bound(_Keyval);
; 1015 :             } else {
; 1016 :                 _Loc = _Find_lower_bound(_Keyval);
; 1017 :                 if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {
; 1018 :                     return {_Loc._Bound, false};
; 1019 :                 }
; 1020 :             }
; 1021 : 
; 1022 :             _Check_grow_by_1();
; 1023 :             // nothrow hereafter
; 1024 :             _Inserted = _Newnode._Release();
; 1025 :         }
; 1026 : 
; 1027 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR $T3[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	r8, rdi
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r15
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Insert_node
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [r14], rax
	mov	BYTE PTR [r14+8], 1
$LN145@Emplace:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1028 :     }

	mov	rax, r14
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN147@Emplace:

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN144@Emplace:
??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
$T4 = 72
this$ = 144
__$ReturnUdt$ = 152
<_Vals_0>$ = 160
?dtor$2@?0???$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$2
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
?dtor$2@?0???$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
$T4 = 72
this$ = 144
__$ReturnUdt$ = 152
<_Vals_0>$ = 160
?dtor$1@?0???$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$1
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$1@?0???$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
$T4 = 72
this$ = 144
__$ReturnUdt$ = 152
<_Vals_0>$ = 160
?dtor$3@?0???$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$3
	mov	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0???$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@1@AEB_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@1@AEB_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,bool const &,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@1@AEB_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,bool const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@AEAU10@@Z PROC ; std::move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@AEAU10@@Z ENDP ; std::move<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
this$ = 144
__$ReturnUdt$ = 152
<_Vals_0>$ = 160
??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >, COMDAT

; 995  :     pair<_Nodeptr, bool> _Emplace(_Valtys&&... _Vals) {

$LN144:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 80					; 00000050H
	mov	rsi, r8
	mov	r14, rdx
	mov	r15, rcx

; 1613 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	rbp, QWORD PTR [rcx]
	mov	rbx, QWORD PTR [rbp+8]
	mov	QWORD PTR $T3[rsp], rbx
	xor	r12d, r12d
	mov	DWORD PTR $T3[rsp+8], r12d
	mov	rdi, rbp

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	jne	SHORT $LN7@Emplace
	npad	11
$LL6@Emplace:

; 1616 :             _Result._Location._Parent = _Trynode;

	mov	QWORD PTR $T3[rsp], rbx

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	lea	rcx, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rdx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1617 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	test	al, al
	jns	SHORT $LN8@Emplace

; 1618 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR $T3[rsp+8], r12d

; 1619 :                 _Trynode                 = _Trynode->_Right;

	mov	rbx, QWORD PTR [rbx+16]

; 1620 :             } else {

	jmp	SHORT $LN9@Emplace
$LN8@Emplace:

; 1621 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR $T3[rsp+8], 1

; 1622 :                 _Result._Bound           = _Trynode;

	mov	rdi, rbx

; 1623 :                 _Trynode                 = _Trynode->_Left;

	mov	rbx, QWORD PTR [rbx]
$LN9@Emplace:

; 1614 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1615 :         while (!_Trynode->_Isnil) {

	cmp	BYTE PTR [rbx+25], r12b
	je	SHORT $LL6@Emplace
$LN7@Emplace:

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	cmp	BYTE PTR [rdi+25], r12b
	jne	SHORT $LN2@Emplace
	lea	rdx, QWORD PTR [rdi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits

; 2465 :         return _Left < _Right;

	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1607 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	test	al, al
	js	SHORT $LN2@Emplace
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [r14], rdi
	mov	BYTE PTR [r14+8], r12b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1004 :                 return {_Loc._Bound, false};

	jmp	$LN140@Emplace
$LN2@Emplace:

; 1631 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	rax, 209622091746699450			; 02e8ba2e8ba2e8baH
	cmp	QWORD PTR [r15+8], rax
	je	$LN142@Emplace
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR $T2[rsp], r15

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR $T2[rsp+8], r12

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR $T2[rsp+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 246  :     pair(pair&&)      = default;

	mov	rdx, rsi
	lea	rcx, QWORD PTR [rax+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rsi+48]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rsi+48], r12

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rsi+40]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rsi+40], r12

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rsi+32]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rsi+32], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rdi+64], rax
	mov	QWORD PTR [rdi+72], rdx
	mov	QWORD PTR [rdi+80], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 811  :         this->_Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0

; 1005 :             }
; 1006 : 
; 1007 :             _Check_grow_by_1();
; 1008 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();
; 1009 :             // nothrow hereafter
; 1010 :         } else {
; 1011 :             _Tree_temp_node<_Alnode> _Newnode(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...);
; 1012 :             const auto& _Keyval = _Traits::_Kfn(_Newnode._Ptr->_Myval);
; 1013 :             if constexpr (_Multi) { // duplicate check if unique
; 1014 :                 _Loc = _Find_upper_bound(_Keyval);
; 1015 :             } else {
; 1016 :                 _Loc = _Find_lower_bound(_Keyval);
; 1017 :                 if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {
; 1018 :                     return {_Loc._Bound, false};
; 1019 :                 }
; 1020 :             }
; 1021 : 
; 1022 :             _Check_grow_by_1();
; 1023 :             // nothrow hereafter
; 1024 :             _Inserted = _Newnode._Release();
; 1025 :         }
; 1026 : 
; 1027 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	movups	xmm0, XMMWORD PTR $T3[rsp]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	r8, rdi
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r15
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@U?$_Tree_id@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Insert_node
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	QWORD PTR [r14], rax
	mov	BYTE PTR [r14+8], 1
$LN140@Emplace:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 1028 :     }

	mov	rax, r14
	add	rsp, 80					; 00000050H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN142@Emplace:

; 1632 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
	int	3
$LN139@Emplace:
??$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
this$ = 144
__$ReturnUdt$ = 152
<_Vals_0>$ = 160
?dtor$2@?0???$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >'::`1'::dtor$2
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
?dtor$2@?0???$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 32
$T3 = 48
this$ = 144
__$ReturnUdt$ = 152
<_Vals_0>$ = 160
?dtor$1@?0???$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >'::`1'::dtor$1
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$1@?0???$_Emplace@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0> >::_Emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@1@AEB_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@1@AEB_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool const &,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@1@AEB_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,bool const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z PROC ; std::move<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z ENDP ; std::move<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 8
_UIt$ = 16
??$_Seek_wrapped@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@@Z PROC ; std::_Seek_wrapped<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > >, COMDAT

; 1256 :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 1257 :         _It._Seek_to(_STD forward<_UIter>(_UIt));

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax

; 1258 :     } else {
; 1259 :         _It = _STD forward<_UIter>(_UIt);
; 1260 :     }
; 1261 : }

	ret	0
??$_Seek_wrapped@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@2@@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Seek_wrapped<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >,std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z PROC ; std::move<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z ENDP ; std::move<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@2@@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 8
_UIt$ = 16
??$_Seek_wrapped@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@2@@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Seek_wrapped<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >, COMDAT

; 1256 :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 1257 :         _It._Seek_to(_STD forward<_UIter>(_UIt));

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax

; 1258 :     } else {
; 1259 :         _It = _STD forward<_UIter>(_UIt);
; 1260 :     }
; 1261 : }

	ret	0
??$_Seek_wrapped@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@2@@std@@YAXAEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Seek_wrapped<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >,std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YAPEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YAPEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YAPEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YA$$QEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@V12@$0A@@std@@YAPEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@QEAV10@$$QEAV10@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$dead$ = 16
??$construct_at@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@V12@$0A@@std@@YAPEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@QEAV10@$$QEAV10@@Z PROC ; std::construct_at<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@V12@$0A@@std@@YAPEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@QEAV10@$$QEAV10@@Z ENDP ; std::construct_at<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\tuple
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
this$GSCopy$ = 32
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$dead$ = 88
<_Vals_1>$ = 96
<_Vals_2>$dead$ = 104
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >, COMDAT

; 806  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

$LN69:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, r8
	mov	rsi, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR [rcx], rdx
	xor	ebp, ebp

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR [rcx+8], rbp

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rbp+88]
	call	??2@YAPEAX_K@Z				; operator new

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR [rsi+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 807  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\tuple

; 366  :     tuple(tuple&&)      = default;

	mov	rdx, QWORD PTR <_Vals_1>$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [rdx]
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rbx+32], rbp
	mov	QWORD PTR [rbx+40], rbp
	mov	QWORD PTR [rbx+48], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	rcx, QWORD PTR [rsi+8]
	mov	QWORD PTR [rcx], rdi

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	rcx, QWORD PTR [rsi+8]
	mov	QWORD PTR [rcx+8], rdi

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	rcx, QWORD PTR [rsi+8]
	mov	QWORD PTR [rcx+16], rdi

; 811  :         this->_Ptr->_Color = _Red;

	mov	rcx, QWORD PTR [rsi+8]
	mov	BYTE PTR [rcx+24], bpl
	mov	rcx, QWORD PTR [rsi+8]
	mov	BYTE PTR [rcx+25], bpl

; 812  :         this->_Ptr->_Isnil = false;
; 813  :     }

	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+72]
	mov	rbp, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$dead$ = 88
<_Vals_1>$ = 96
<_Vals_2>$dead$ = 104
?dtor$1@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
?dtor$1@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$dead$ = 88
<_Vals_1>$ = 96
<_Vals_2>$dead$ = 104
?dtor$0@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$0@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * const &,bool,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * const &,bool,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\map
;	COMDAT ??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
_TEXT	SEGMENT
_Val$ = 8
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z PROC ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >, COMDAT

; 68   :         return _Val.first;

	mov	rax, rcx

; 69   :     }

	ret	0
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@2@$0A@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z ENDP ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::vector<unsigned char,std::allocator<unsigned char> >,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@0@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Ptr$ = 56
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >, COMDAT

; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

$LN56:
	push	rbx
	sub	rsp, 32					; 00000020H

; 381  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode call");
; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	lea	rcx, QWORD PTR [rdx+32]
	mov	rbx, rdx
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 384  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >, COMDAT

; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	mov	rcx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\tuple
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$dead$ = 88
<_Vals_1>$ = 96
<_Vals_2>$dead$ = 104
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >, COMDAT

; 806  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

$LN59:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, r8
	mov	rsi, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR [rcx], rdx
	xor	eax, eax

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR [rcx+8], rax

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR [rsi+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 807  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\tuple

; 366  :     tuple(tuple&&)      = default;

	mov	rdx, QWORD PTR <_Vals_1>$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [rdx]
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	call	??0BymlFile@@QEAA@XZ			; BymlFile::BymlFile
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	rcx, QWORD PTR [rsi+8]
	mov	QWORD PTR [rcx], rdi

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	rcx, QWORD PTR [rsi+8]
	mov	QWORD PTR [rcx+8], rdi

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	rcx, QWORD PTR [rsi+8]
	mov	QWORD PTR [rcx+16], rdi

; 811  :         this->_Ptr->_Color = _Red;

	mov	rcx, QWORD PTR [rsi+8]
	mov	BYTE PTR [rcx+24], 0
	mov	rcx, QWORD PTR [rsi+8]
	mov	BYTE PTR [rcx+25], 0

; 812  :         this->_Ptr->_Isnil = false;
; 813  :     }

	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$dead$ = 88
<_Vals_1>$ = 96
<_Vals_2>$dead$ = 104
?dtor$1@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
?dtor$1@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$dead$ = 88
<_Vals_1>$ = 96
<_Vals_2>$dead$ = 104
?dtor$0@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$0@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$dead$ = 88
<_Vals_1>$ = 96
<_Vals_2>$dead$ = 104
?dtor$3@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$3
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0???$?0AEBUpiecewise_construct_t@std@@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * const &,bool,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@std@@QEAA@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * const &,bool,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@0@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$dead$ = 48
_Ptr$ = 56
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >, COMDAT

; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

$LN77:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+216]
	mov	rsi, rdx
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rsi+152]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rsi+112]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rsi+88]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rsi+64]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rsi+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 288				; 00000120H
	mov	rcx, rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 384  :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	jmp	??3@YAXPEAX_K@Z				; operator delete
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@UEntry@SarcFile@@@std@@@std@@YA$$QEAV?$allocator@UEntry@SarcFile@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$allocator@UEntry@SarcFile@@@std@@@std@@YA$$QEAV?$allocator@UEntry@SarcFile@@@0@AEAV10@@Z PROC ; std::move<std::allocator<SarcFile::Entry> &>, COMDAT

; 1595 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	rax, rcx

; 1596 : }

	ret	0
??$move@AEAV?$allocator@UEntry@SarcFile@@@std@@@std@@YA$$QEAV?$allocator@UEntry@SarcFile@@@0@AEAV10@@Z ENDP ; std::move<std::allocator<SarcFile::Entry> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@@Z
_TEXT	SEGMENT
_Location$ = 48
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@@Z PROC ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

$LN29:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	add	rcx, 184				; 000000b8H
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+120]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+56]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 323  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@@Z ENDP ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *>, COMDAT

; 305  :     if constexpr (is_array_v<_Ty>) {
; 306  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 307  :     } else {
; 308  :         _Obj.~_Ty();
; 309  :     }
; 310  : }

	ret	0
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z
_TEXT	SEGMENT
$T1 = 32
_Newroot$ = 32
this$GSCopy$ = 40
_Newnode$2 = 48
this$ = 112
_Rootnode$ = 120
_Wherenode$ = 128
??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>, COMDAT

; 1665 :     _Nodeptr _Copy_nodes(_Nodeptr _Rootnode, _Nodeptr _Wherenode) {

$LN87:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
	mov	r13, r8
	mov	r15, rdx
	mov	r14, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx

; 1666 :         // copy entire subtree, recursively
; 1667 :         const auto _Scary = _Get_scary();
; 1668 :         _Nodeptr _Newroot = _Scary->_Myhead; // point at nil node

	mov	r12, QWORD PTR [rcx]

; 1669 : 
; 1670 :         if (!_Rootnode->_Isnil) { // copy or move a node, then any subtrees

	cmp	BYTE PTR [rdx+25], 0
	jne	$LN8@Copy_nodes
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR _Newnode$2[rsp], rcx

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR _Newnode$2[rsp+8], 0

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rsi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR _Newnode$2[rsp+8], rax
	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 245  :     pair(const pair&) = default;

	lea	rdx, QWORD PTR [r15+32]
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [r15+64]
	call	??0BymlFile@@QEAA@AEBV0@@Z
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 362  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

	mov	QWORD PTR [rsi], r12

; 363  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);
; 364  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);

	mov	QWORD PTR [rsi+16], r12

; 365  :         _Newnode._Ptr->_Color = _Red;

	mov	WORD PTR [rsi+24], 0

; 1671 :             _Nodeptr _Pnode = _Copy_or_move<_Strat>(_Rootnode->_Myval);
; 1672 :             _Pnode->_Parent = _Wherenode;

	mov	QWORD PTR [rsi+8], r13

; 1673 :             _Pnode->_Color  = _Rootnode->_Color;

	movzx	eax, BYTE PTR [r15+24]
	mov	BYTE PTR [rsi+24], al

; 1674 :             if (_Newroot->_Isnil) {

	cmp	BYTE PTR [r12+25], 0
	cmovne	r12, rsi
	mov	QWORD PTR _Newroot$[rsp], r12

; 1675 :                 _Newroot = _Pnode; // memorize new root
; 1676 :             }
; 1677 : 
; 1678 :             _TRY_BEGIN
; 1679 :             _Pnode->_Left  = _Copy_nodes<_Strat>(_Rootnode->_Left, _Pnode);

	mov	r8, rsi
	mov	rdx, QWORD PTR [r15]
	mov	rcx, r14
	call	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>
	mov	QWORD PTR [rsi], rax

; 1680 :             _Pnode->_Right = _Copy_nodes<_Strat>(_Rootnode->_Right, _Pnode);

	mov	r8, rsi
	mov	rdx, QWORD PTR [r15+16]
	mov	rcx, r14
	call	??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>
	mov	QWORD PTR [rsi+16], rax
$LN8@Copy_nodes:

; 1681 :             _CATCH_ALL
; 1682 :             _Scary->_Erase_tree_and_orphan(_Getal(), _Newroot); // subtree copy failed, bail out
; 1683 :             _RERAISE;
; 1684 :             _CATCH_END
; 1685 :         }
; 1686 : 
; 1687 :         return _Newroot; // return newly constructed tree

	mov	rax, r12

; 1688 :     }

	lea	r11, QWORD PTR [rsp+64]
	mov	rbx, QWORD PTR [r11+64]
	mov	rsi, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
$LN85@Copy_nodes:
??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Newroot$ = 32
this$GSCopy$ = 40
_Newnode$2 = 48
this$ = 112
_Rootnode$ = 120
_Wherenode$ = 128
?dtor$0@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Newnode$2[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
?dtor$0@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Newroot$ = 32
this$GSCopy$ = 40
_Newnode$2 = 48
this$ = 112
_Rootnode$ = 120
_Wherenode$ = 128
?dtor$1@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>'::`1'::dtor$1
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Newroot$ = 32
this$GSCopy$ = 40
_Newnode$2 = 48
this$ = 112
_Rootnode$ = 120
_Wherenode$ = 128
?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>'::`1'::catch$3

; 1681 :             _CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z$0:

; 1682 :             _Scary->_Erase_tree_and_orphan(_Getal(), _Newroot); // subtree copy failed, bail out

	mov	rcx, QWORD PTR this$GSCopy$[rbp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Getal
	mov	rdx, rax
	mov	r8, QWORD PTR _Newroot$[rbp]
	call	??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >

; 1683 :             _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
?catch$3@?0???$_Copy_nodes@$0A@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@PEAU21@0@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_nodes<0>'::`1'::catch$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEBQEAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * const &>, COMDAT

; 248  : #if _HAS_CXX20
; 249  :     if (_STD is_constant_evaluated()) {
; 250  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 251  :     } else
; 252  : #endif // _HAS_CXX20
; 253  :     {
; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 255  :     }
; 256  : }

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	ret	0
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEBQEAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEBQEAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * const &>, COMDAT

; 248  : #if _HAS_CXX20
; 249  :     if (_STD is_constant_evaluated()) {
; 250  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 251  :     } else
; 252  : #endif // _HAS_CXX20
; 253  :     {
; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 255  :     }
; 256  : }

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	ret	0
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEBQEAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > const &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@AEBV12@$0A@@std@@YAPEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@QEAV10@AEBV10@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$dead$ = 16
??$construct_at@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@AEBV12@$0A@@std@@YAPEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@QEAV10@AEBV10@@Z PROC ; std::construct_at<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > const &,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@AEBV12@$0A@@std@@YAPEAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@0@QEAV10@AEBV10@@Z ENDP ; std::construct_at<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

$LN31:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rcx, QWORD PTR [rdx+184]
	mov	rdi, rdx
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+120]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+56]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 730  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	jmp	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@@Z
_TEXT	SEGMENT
_Obj$dead$ = 8
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>, COMDAT

; 305  :     if constexpr (is_array_v<_Ty>) {
; 306  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 307  :     } else {
; 308  :         _Obj.~_Ty();
; 309  :     }
; 310  : }

	ret	0
??$_Destroy_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
_Ptr$ = 16
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >, COMDAT

; 724  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	mov	rcx, rdx
	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Val$ = 8
_New_val$ = 16
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::nullptr_t>, COMDAT

; 753  :     // assign _New_val to _Val, return previous _Val
; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);
; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rdx, QWORD PTR [rdx]
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rcx], rdx

; 756  :     return _Old_val;
; 757  : }

	ret	0
??$exchange@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@$$T@std@@YAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BCA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$dead$ = 8
??$_Get_size_of_n@$0BCA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<288>, COMDAT

; 66   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;
; 67   : 
; 68   :     if constexpr (_Overflow_is_possible) {
; 69   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 70   :         if (_Count > _Max_possible) {
; 71   :             _Throw_bad_array_new_length(); // multiply overflow
; 72   :         }
; 73   :     }
; 74   : 
; 75   :     return _Count * _Ty_size;

	mov	eax, 288				; 00000120H

; 76   : }

	ret	0
??$_Get_size_of_n@$0BCA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<288>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAAPEAXI@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::`scalar deleting destructor', COMDAT
$LN27:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	add	rcx, 184				; 000000b8H
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+120]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rdi+80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+56]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rdi+32]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	mov	rcx, rdi
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAAPEAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@2@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@2@@Z
_TEXT	SEGMENT
_Val$ = 8
?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@2@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@2@@Z PROC ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >::_Extract, COMDAT

; 2113 :         return _Val.first;

	mov	rax, rcx

; 2114 :     }

	ret	0
?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@2@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@2@@Z ENDP ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >::_Extract
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@Z
_TEXT	SEGMENT
_Val$ = 8
?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@Z PROC ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >::_Extract, COMDAT

; 2113 :         return _Val.first;

	mov	rax, rcx

; 2114 :     }

	ret	0
?_Extract@?$_In_place_key_extract_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@std@@SAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AEBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@Z ENDP ; std::_In_place_key_extract_map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >::_Extract
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al_$ = 56
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >, COMDAT

; 785  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

$LN36:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR [rcx], rdx
	xor	eax, eax

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR [rcx+8], rax

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR [rbx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 787  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Al_$ = 56
?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z@4HA PROC ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z@4HA ENDP ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al_$ = 56
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >, COMDAT

; 785  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

$LN40:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR [rcx], rdx
	xor	eax, eax

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR [rcx+8], rax

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rax+88]
	call	??2@YAPEAX_K@Z				; operator new

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR [rbx+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 787  :     }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Al_$ = 56
?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z@4HA PROC ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z@4HA ENDP ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Seek_to@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
this$ = 8
_It$ = 16
?_Seek_to@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Seek_to, COMDAT

; 255  :         this->_Ptr = _It._Ptr;

	mov	QWORD PTR [rcx], rdx

; 256  :     }

	ret	0
?_Seek_to@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@QEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > >::_Seek_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ?_Seek_to@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
this$ = 8
_It$ = 16
?_Seek_to@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Seek_to, COMDAT

; 255  :         this->_Ptr = _It._Ptr;

	mov	QWORD PTR [rcx], rdx

; 256  :     }

	ret	0
?_Seek_to@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@QEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > >::_Seek_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >, COMDAT

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
_Al$dead$ = 8
_Ptr$ = 16
_Count$dead$ = 24
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate, COMDAT

; 701  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	mov	rcx, rdx

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 88					; 00000058H
	jmp	??3@YAXPEAX_K@Z				; operator delete
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@2@QEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@QEAA@XZ PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >, COMDAT

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	rax, rcx
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAA@XZ PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >, COMDAT

; 958  :     constexpr allocator() noexcept {}

	mov	rax, rcx
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Allocate, COMDAT

; 1150 :     _CONSTEXPR20 void _Allocate() { // disengage *this, then allocate a new memory block

$LN29:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR [rcx+8], 0

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR [rbx+8], rax

; 1153 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al_$ = 16
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >, COMDAT

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 0
	ret	0
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Allocate, COMDAT

; 1150 :     _CONSTEXPR20 void _Allocate() { // disengage *this, then allocate a new memory block

$LN33:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR [rcx+8], 0

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 88					; 00000058H
	call	??2@YAPEAX_K@Z				; operator new

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR [rbx+8], rax

; 1153 :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
_Al_$ = 16
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >, COMDAT

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR [rcx], rdx
	mov	rax, rcx
	mov	QWORD PTR [rcx+8], 0
	ret	0
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@@Z ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Insertion_sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAPEAUEntry@SarcFile@@QEAU12@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
_Val$3$ = 32
_Val$2$ = 40
_Last$1$ = 48
_Val$5 = 56
__$ArrayPad$ = 112
_First$ = 176
_Last$ = 184
_Pred$dead$ = 192
??$_Insertion_sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAPEAUEntry@SarcFile@@QEAU12@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::_Insertion_sort_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 7905 : _CONSTEXPR20 _BidIt _Insertion_sort_unchecked(const _BidIt _First, const _BidIt _Last, _Pr _Pred) {

	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	QWORD PTR _Last$1$[rsp], rdx
	mov	r8, rdx
	mov	r15, rcx

; 7906 :     // insertion sort [_First, _Last)
; 7907 :     if (_First != _Last) {

	cmp	rcx, rdx
	je	$LN190@Insertion_

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

	lea	r12, QWORD PTR [rcx+56]
	cmp	r12, rdx
	je	$LN190@Insertion_
	lea	r13, QWORD PTR [r12+40]
$LN203@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm2, XMMWORD PTR [r12]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7909 :             _BidIt _Hole               = _Mid;

	xor	r8d, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	lea	rsi, QWORD PTR [r13-8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR [r12+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7909 :             _BidIt _Hole               = _Mid;

	mov	rbp, r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	XMMWORD PTR _Val$5[rsp], xmm2
	movups	XMMWORD PTR _Val$5[rsp+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [r13-24], r8
	mov	QWORD PTR [r13-16], 15
	mov	BYTE PTR [r12], r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r13+8]
	mov	rcx, QWORD PTR [r13]
	mov	rax, QWORD PTR [rsi]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r13+8], r8
	mov	QWORD PTR [r13], r8
	mov	QWORD PTR [rsi], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [r15+24], 16

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rbx, QWORD PTR [r15+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Val$5[rsp+48], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Val$5[rsp+32], rax
	mov	QWORD PTR _Val$5[rsp+40], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN68@Insertion_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [r15]
$LN68@Insertion_:

; 2236 :         if (_Large_string_engaged()) {

	movq	rax, xmm2
	lea	rcx, QWORD PTR _Val$5[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	movq	r14, xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	mov	QWORD PTR _Val$3$[rsp], rax

; 2244 :         return _BUF_SIZE <= _Myres;

	movdqa	xmm0, xmm1
	psrldq	xmm0, 8
	movq	r8, xmm0
	cmp	r8, 16
	mov	QWORD PTR _Val$2$[rsp], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	mov	r8, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmovae	rcx, rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	rbx, r14
	cmovb	r8, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	$LN78@Insertion_

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	js	$LN186@Insertion_
$LN9@Insertion_:
	mov	rsi, QWORD PTR _Val$3$[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

	mov	rbx, r12
	npad	3
$LL7@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rdi, QWORD PTR [rbx-40]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

	sub	rbx, 56					; 00000038H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, rbx

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rbx+24], 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN107@Insertion_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rbx]
$LN107@Insertion_:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR _Val$2$[rsp], 16

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rcx, QWORD PTR _Val$5[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	mov	r8, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2236 :         if (_Large_string_engaged()) {

	cmovae	rcx, rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	rdi, r14
	cmovb	r8, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	$LN117@Insertion_

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	js	$LN188@Insertion_
$LN183@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	lea	rbx, QWORD PTR [rbp+32]
$LN6@Insertion_:
	lea	rdx, QWORD PTR _Val$5[rsp]
	mov	rcx, rbp
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR _Val$5[rsp+32]
	mov	rcx, rbx
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	mov	rcx, QWORD PTR _Val$5[rsp+32]
	test	rcx, rcx
	je	SHORT $LN137@Insertion_

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Val$5[rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN155@Insertion_

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN152@Insertion_
$LN155@Insertion_:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Val$5[rsp+48], 0
	movdqu	XMMWORD PTR _Val$5[rsp+32], xmm0
$LN137@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Val$5[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7908 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

	mov	r8, QWORD PTR _Last$1$[rsp]
	add	r12, 56					; 00000038H
	add	r13, 56					; 00000038H
	cmp	r12, r8
	jne	$LN203@Insertion_
$LN190@Insertion_:

; 7917 :                     *_Hole = _STD move(*_Prev); // move hole down
; 7918 :                 }
; 7919 : 
; 7920 :                 *_Hole = _STD move(_Val); // insert element in hole
; 7921 :             }
; 7922 :         }
; 7923 :     }
; 7924 : 
; 7925 :     return _Last;

	mov	rax, r8

; 7926 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+56]
	mov	rbp, QWORD PTR [r11+64]
	mov	rsi, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	ret	0
$LN78@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 561  :     if (_Left_size < _Right_size) {

	cmp	r14, rbx
	jae	$LN9@Insertion_
$LN186@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 4940 :     while (_First != _Last) {

	cmp	r12, r15
	je	SHORT $LN90@Insertion_
	npad	4
$LL174@Insertion_:

; 4941 :         *--_Dest = _STD move(*--_Last);

	mov	rbx, rsi
	sub	rsi, 56					; 00000038H
	lea	rdi, QWORD PTR [rsi-32]
	mov	rdx, rdi
	lea	rcx, QWORD PTR [rsi+24]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	rdx, rsi
	mov	rcx, rbx
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 4940 :     while (_First != _Last) {

	cmp	rdi, r15
	jne	SHORT $LL174@Insertion_
$LN90@Insertion_:
	lea	rbx, QWORD PTR [r15+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7915 :             } else { // look for insertion point after first

	mov	rbp, r15
	jmp	$LN6@Insertion_
$LN117@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 561  :     if (_Left_size < _Right_size) {

	cmp	r14, rdi
	jae	$LN183@Insertion_
$LN188@Insertion_:
	mov	rdx, rbx
	mov	rcx, rbp
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rbx+32]

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	lea	rcx, QWORD PTR [rbp+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7916 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

	mov	rbp, rbx
	jmp	$LL7@Insertion_
$LN152@Insertion_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN202@Insertion_:
??$_Insertion_sort_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAPEAUEntry@SarcFile@@QEAU12@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::_Insertion_sort_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
_Bottom$1$ = 32
tv1167 = 40
_Max_sequence_non_leaf$1$ = 48
_Val$3 = 56
__$ArrayPad$ = 112
_First$ = 192
_Last$ = 200
_Pred$ = 208
??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::_Make_heap_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 6593 : _CONSTEXPR20 void _Make_heap_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

	mov	r11, rsp
	push	r12
	push	r14
	sub	rsp, 168				; 000000a8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r8, rdx

; 6594 :     // make [_First, _Last) into a heap
; 6595 :     using _Diff   = _Iter_diff_t<_RanIt>;
; 6596 :     _Diff _Bottom = _Last - _First;

	mov	rax, 7905747460161236407		; 6db6db6db6db6db7H
	sub	r8, rcx
	mov	r14, rcx
	sar	r8, 3
	imul	r8, rax

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

	mov	r12, r8
	mov	QWORD PTR _Bottom$1$[rsp], r8
	sar	r12, 1
	test	r12, r12
	jle	$LN161@Make_heap_
	mov	QWORD PTR [r11+24], rbx
	lea	rax, QWORD PTR [r8-1]
	mov	QWORD PTR [r11-24], rbp
	mov	QWORD PTR [r11-32], rsi
	mov	QWORD PTR [r11-40], rdi
	mov	QWORD PTR [r11-48], r13
	imul	r13, r12, 56				; 00000038H
	mov	QWORD PTR [r11-56], r15
	mov	r15, rax
	sar	r15, 1
	add	r13, 40					; 00000028H
	add	r13, rcx
	mov	QWORD PTR tv1167[rsp], rax
	mov	QWORD PTR _Max_sequence_non_leaf$1$[rsp], r15
$LN182@Make_heap_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [r13-96]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6599 :         --_Hole;

	lea	r13, QWORD PTR [r13-56]
	xor	r9d, r9d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR [r13-24]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6599 :         --_Hole;

	dec	r12

; 6600 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));
; 6601 :         _STD _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

	mov	rbp, r12

; 6438 :     _Diff _Idx       = _Hole;

	mov	rsi, r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	XMMWORD PTR _Val$3[rsp], xmm0
	movups	XMMWORD PTR _Val$3[rsp+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [r13-24], r9
	mov	QWORD PTR [r13-16], 15
	mov	BYTE PTR [r13-40], r9b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r13+8]
	mov	rcx, QWORD PTR [r13]
	mov	rax, QWORD PTR [r13-8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Val$3[rsp+32], rax
	mov	QWORD PTR _Val$3[rsp+40], rcx
	mov	QWORD PTR _Val$3[rsp+48], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r13+8], r9
	mov	QWORD PTR [r13], r9
	mov	QWORD PTR [r13-8], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

	cmp	r12, r15
	jge	SHORT $LN53@Make_heap_
	npad	13
$LL52@Make_heap_:

; 6444 :         _Idx = 2 * _Idx + 2;

	lea	rbx, QWORD PTR [rsi+rsi]

; 6445 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

	lea	rax, QWORD PTR [rbx+2]
	imul	rcx, rax, 56				; 00000038H
	add	rcx, r14
	lea	rdx, QWORD PTR [rcx-56]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

	lea	rsi, QWORD PTR [rbx+2]
	movsx	rcx, al
	sar	rcx, 63					; 0000003fH
	add	rsi, rcx
	imul	rdi, rsi, 56				; 00000038H
	imul	rbx, rbp, 56				; 00000038H
	add	rdi, r14
	mov	rdx, rdi
	add	rbx, r14
	mov	rcx, rbx
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rdi+32]
	lea	rcx, QWORD PTR [rbx+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 6449 :         _Hole             = _Idx;

	mov	rbp, rsi
	cmp	rsi, r15
	jl	SHORT $LL52@Make_heap_
	mov	r8, QWORD PTR _Bottom$1$[rsp]
$LN53@Make_heap_:

; 6450 :     }
; 6451 : 
; 6452 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

	cmp	rbp, r15
	jne	SHORT $LN55@Make_heap_
	test	r8b, 1
	jne	SHORT $LN55@Make_heap_

; 6453 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

	imul	rbx, r8, 56				; 00000038H
	imul	rdi, rbp, 56				; 00000038H
	lea	rdx, QWORD PTR [r14-56]
	add	rdx, rbx
	add	rdi, r14
	mov	rcx, rdi
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [r14-24]
	add	rdx, rbx
	lea	rcx, QWORD PTR [rdi+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 6454 :         _Hole             = _Bottom - 1;

	mov	rbp, QWORD PTR tv1167[rsp]
$LN55@Make_heap_:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

	cmp	r12, rbp
	jge	SHORT $LN67@Make_heap_
	mov	r15, QWORD PTR _Val$3[rsp+16]
	npad	2
$LL68@Make_heap_:

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

	lea	rsi, QWORD PTR [rbp-1]
	sar	rsi, 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2235 :         const value_type* _Result = _Bx._Buf;

	lea	rdx, QWORD PTR _Val$3[rsp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

	imul	rbx, rsi, 56				; 00000038H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	add	rbx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR _Val$3[rsp+24], 16

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rbx

; 2236 :         if (_Large_string_engaged()) {

	cmovae	rdx, QWORD PTR _Val$3[rsp]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [rbx+24], 16

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rdi, QWORD PTR [rbx+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN86@Make_heap_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx]
$LN86@Make_heap_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	r15, rdi
	mov	r8, rdi
	cmovb	r8, r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	SHORT $LN91@Make_heap_

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	jns	SHORT $LN162@Make_heap_
	jmp	SHORT $LN158@Make_heap_
$LN91@Make_heap_:

; 561  :     if (_Left_size < _Right_size) {

	cmp	rdi, r15
	jae	SHORT $LN162@Make_heap_
$LN158@Make_heap_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6331 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

	imul	rdi, rbp, 56				; 00000038H
	mov	rdx, rbx
	add	rdi, r14
	mov	rcx, rdi
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rbx+32]
	lea	rcx, QWORD PTR [rdi+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 6332 :         _Hole             = _Idx;

	mov	rbp, rsi
	cmp	r12, rsi
	jl	SHORT $LL68@Make_heap_
$LN162@Make_heap_:
	mov	r15, QWORD PTR _Max_sequence_non_leaf$1$[rsp]
$LN67@Make_heap_:

; 6333 :     }
; 6334 : 
; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

	imul	rbx, rbp, 56				; 00000038H
	lea	rdx, QWORD PTR _Val$3[rsp]
	add	rbx, r14
	mov	rcx, rbx
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR _Val$3[rsp+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR _Val$3[rsp+32]
	test	rcx, rcx
	je	SHORT $LN111@Make_heap_

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Val$3[rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN129@Make_heap_

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN126@Make_heap_
$LN129@Make_heap_:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Val$3[rsp+48], 0
	movdqu	XMMWORD PTR _Val$3[rsp+32], xmm0
$LN111@Make_heap_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Val$3[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6597 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

	test	r12, r12
	jle	SHORT $LN180@Make_heap_
	mov	r8, QWORD PTR _Bottom$1$[rsp]
	jmp	$LN182@Make_heap_
$LN126@Make_heap_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN180@Make_heap_:
	mov	r13, QWORD PTR [rsp+136]
	mov	rdi, QWORD PTR [rsp+144]
	mov	rsi, QWORD PTR [rsp+152]
	mov	rbp, QWORD PTR [rsp+160]
	mov	rbx, QWORD PTR [rsp+208]
	mov	r15, QWORD PTR [rsp+128]
$LN161@Make_heap_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6603 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 168				; 000000a8H
	pop	r14
	pop	r12
	ret	0
$LN181@Make_heap_:
??$_Make_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::_Make_heap_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
_Val$1 = 48
__$ArrayPad$ = 104
_First$ = 176
_Last$ = 184
_Pred$ = 192
??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::_Sort_heap_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 6816 : _CONSTEXPR20 void _Sort_heap_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

	mov	r11, rsp
	push	rbx
	push	rbp
	sub	rsp, 152				; 00000098H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 6818 :     for (; _Last - _First >= 2; --_Last) {

	mov	rax, rdx
	movzx	ebx, r8b
	sub	rax, rcx
	mov	rbp, rcx
	cmp	rax, 112				; 00000070H
	jl	$LN104@Sort_heap_
	mov	QWORD PTR [r11+24], rsi
	lea	rsi, QWORD PTR [rdx-16]
	mov	QWORD PTR [r11-32], r12
	mov	QWORD PTR [r11-40], r13
	mov	r13, 7905747460161236407		; 6db6db6db6db6db7H
	mov	QWORD PTR [r11-48], r14
	mov	r14d, 16
	mov	QWORD PTR [r11-56], r15
	sub	r14, rcx
	mov	r15, -40				; ffffffffffffffd8H
	mov	QWORD PTR [r11-24], rdi
	sub	r15, rcx
	xor	r12d, r12d
	npad	2
$LL4@Sort_heap_:

; 6474 :     if (2 <= _Last - _First) {

	lea	rax, QWORD PTR [r14+rsi]
	sar	rax, 3
	imul	rax, r13
	cmp	rax, 2
	jl	$LN2@Sort_heap_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rsi-40]
	lea	rcx, QWORD PTR [rsi-40]
	movups	xmm1, XMMWORD PTR [rcx+16]
	movups	XMMWORD PTR _Val$1[rsp], xmm0
	movups	XMMWORD PTR _Val$1[rsp+16], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [rsi-24], r12
	mov	QWORD PTR [rsi-16], 15
	mov	BYTE PTR [rcx], r12b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rsi]
	mov	r8, QWORD PTR [rsi+8]
	mov	rax, QWORD PTR [rsi-8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Val$1[rsp+40], rdx
	mov	rdx, rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rsi+8], r12
	mov	QWORD PTR [rsi], r12
	mov	QWORD PTR [rsi-8], r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Val$1[rsp+32], rax
	mov	QWORD PTR _Val$1[rsp+48], r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rbp+32]
	lea	rcx, QWORD PTR [rsi-8]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6467 :     _STD _Pop_heap_hole_by_index(

	lea	r8, QWORD PTR [r15+rsi]
	mov	BYTE PTR [rsp+32], bl
	sar	r8, 3
	lea	r9, QWORD PTR _Val$1[rsp]
	imul	r8, r13
	xor	edx, edx
	mov	rcx, rbp
	call	??$_Pop_heap_hole_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Pop_heap_hole_by_index<SarcFile::Entry *,SarcFile::Entry,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR _Val$1[rsp+32]
	test	rcx, rcx
	je	SHORT $LN64@Sort_heap_

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Val$1[rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN82@Sort_heap_

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN79@Sort_heap_
$LN82@Sort_heap_:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Val$1[rsp+48], r12
	movdqu	XMMWORD PTR _Val$1[rsp+32], xmm0
$LN64@Sort_heap_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Val$1[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN2@Sort_heap_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6818 :     for (; _Last - _First >= 2; --_Last) {

	sub	rsi, 56					; 00000038H
	lea	rax, QWORD PTR [r14+rsi]
	cmp	rax, 112				; 00000070H
	jge	$LL4@Sort_heap_
	mov	rdi, QWORD PTR [rsp+144]
	mov	r13, QWORD PTR [rsp+128]
	mov	r12, QWORD PTR [rsp+136]
	mov	r14, QWORD PTR [rsp+120]
	mov	rsi, QWORD PTR [rsp+192]
	mov	r15, QWORD PTR [rsp+112]
$LN104@Sort_heap_:

; 6821 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 152				; 00000098H
	pop	rbp
	pop	rbx
	ret	0
$LN79@Sort_heap_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN115@Sort_heap_:
??$_Sort_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::_Sort_heap_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YA?AU?$pair@PEAUEntry@SarcFile@@PEAU12@@0@PEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
_First$GSCopy$1$ = 32
_Last$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$1$ = 48
_Tmp$13 = 56
_Tmp$14 = 56
_Tmp$15 = 56
_Tmp$16 = 56
_Tmp$17 = 56
_Tmp$18 = 56
_Tmp$19 = 56
__$ArrayPad$ = 112
__$ReturnUdt$ = 192
_First$ = 200
_Last$ = 208
_Pred$ = 216
??$_Partition_by_median_guess_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YA?AU?$pair@PEAUEntry@SarcFile@@PEAU12@@0@PEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::_Partition_by_median_guess_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 7962 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

	mov	QWORD PTR [rsp+32], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	mov	rbp, rsp
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-128], rax
	mov	QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-128], rcx

; 7963 :     // partition [_First, _Last)
; 7964 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

	mov	rax, r8
	sub	rax, rdx
	mov	QWORD PTR _Last$GSCopy$1$[rbp-128], r8
	sar	rax, 3
	mov	rcx, 7905747460161236407		; 6db6db6db6db6db7H
	imul	rax, rcx
	mov	r13, r8
	mov	QWORD PTR _First$GSCopy$1$[rbp-128], rdx
	sar	rax, 1
	mov	r9, rdx
	imul	rbx, rax, 56				; 00000038H

; 7948 :     const _Diff _Count = _Last - _First;

	lea	rax, QWORD PTR [r8-56]
	sub	rax, rdx

; 7963 :     // partition [_First, _Last)
; 7964 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

	add	rbx, rdx

; 7948 :     const _Diff _Count = _Last - _First;

	sar	rax, 3
	imul	rax, rcx

; 7949 :     if (40 < _Count) { // Tukey's ninther

	mov	rcx, rdx
	cmp	rax, 40					; 00000028H
	jle	SHORT $LN834@Partition_

; 7950 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

	inc	rax
	sar	rax, 3

; 7951 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 7952 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

	imul	rsi, rax, 56				; 00000038H
	imul	r14, rax, 112				; 00000070H
	lea	r15, QWORD PTR [rdx+rsi]
	lea	r8, QWORD PTR [r14+rdx]
	mov	rdx, r15
	call	??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Med3_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >

; 7953 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

	mov	rcx, rbx
	lea	r8, QWORD PTR [rsi+rbx]
	sub	rcx, rsi
	mov	rdx, rbx
	call	??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Med3_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >

; 7954 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

	lea	rdi, QWORD PTR [r13-56]
	sub	rdi, rsi
	lea	rcx, QWORD PTR [r13-56]
	mov	rdx, rdi
	lea	r8, QWORD PTR [r13-56]
	sub	rcx, r14
	call	??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Med3_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >

; 7955 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

	mov	r8, rdi
	mov	rcx, r15

; 7956 :     } else {

	jmp	SHORT $LN999@Partition_
$LN834@Partition_:

; 7957 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

	add	r8, -56					; ffffffffffffffc8H
$LN999@Partition_:

; 7967 :     _RanIt _Plast  = _Next_iter(_Pfirst);

	mov	rdx, rbx
	call	??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Med3_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
	lea	r15, QWORD PTR [rbx+56]

; 7968 : 
; 7969 :     while (_First < _Pfirst && !_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Pfirst), *_Pfirst)
; 7970 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

	cmp	QWORD PTR _First$GSCopy$1$[rbp-128], rbx
	jae	$LN937@Partition_

; 7965 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);
; 7966 :     _RanIt _Pfirst = _Mid;

	lea	rdi, QWORD PTR [rbx-56]
	npad	11
$LL2@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	r13, QWORD PTR [rdi+80]

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, rbx

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	r14, QWORD PTR [rdi+72]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r13, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN916@Partition_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rbx]
$LN916@Partition_:

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	r12, QWORD PTR [rdi+24]

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rdi

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rsi, QWORD PTR [rdi+16]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r12, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN915@Partition_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rdi]
$LN915@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	r14, rsi
	mov	r8, rsi
	cmovb	r8, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	SHORT $LN644@Partition_

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	js	SHORT $LN949@Partition_
	jmp	SHORT $LN908@Partition_
$LN644@Partition_:

; 561  :     if (_Left_size < _Right_size) {

	cmp	rsi, r14
	jb	SHORT $LN949@Partition_
$LN908@Partition_:

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, rdi

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r12, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN696@Partition_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rdi]
$LN696@Partition_:

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rbx

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r13, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN914@Partition_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx]
$LN914@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	rsi, r14
	mov	r8, r14
	cmovb	r8, rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	SHORT $LN706@Partition_

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	js	SHORT $LN949@Partition_
	jmp	SHORT $LN909@Partition_
$LN706@Partition_:

; 561  :     if (_Left_size < _Right_size) {

	cmp	r14, rsi
	jb	SHORT $LN949@Partition_
$LN909@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7971 :         --_Pfirst;

	sub	rbx, 56					; 00000038H
	sub	rdi, 56					; 00000038H
	cmp	QWORD PTR _First$GSCopy$1$[rbp-128], rbx
	jb	$LL2@Partition_
$LN949@Partition_:
	mov	r13, QWORD PTR _Last$GSCopy$1$[rbp-128]
$LN937@Partition_:

; 7972 :     }
; 7973 : 
; 7974 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

	cmp	r15, r13
	jae	$LN950@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rsi, QWORD PTR [rbx+16]

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	r12, QWORD PTR [rbx+24]
	npad	1
$LL4@Partition_:

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, rbx

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r12, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN919@Partition_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rbx]
$LN919@Partition_:

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	r14, QWORD PTR [r15+24]

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, r15

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rdi, QWORD PTR [r15+16]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r14, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN918@Partition_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r15]
$LN918@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	rsi, rdi
	mov	r8, rdi
	cmovb	r8, rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	SHORT $LN675@Partition_

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	js	SHORT $LN950@Partition_
	jmp	SHORT $LN910@Partition_
$LN675@Partition_:

; 561  :     if (_Left_size < _Right_size) {

	cmp	rdi, rsi
	jb	SHORT $LN950@Partition_
$LN910@Partition_:

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, r15

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r14, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN727@Partition_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [r15]
$LN727@Partition_:

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rbx

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r12, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN917@Partition_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx]
$LN917@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	rdi, rsi
	mov	r8, rsi
	cmovb	r8, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	SHORT $LN737@Partition_

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	js	SHORT $LN950@Partition_
	jmp	SHORT $LN911@Partition_
$LN737@Partition_:

; 561  :     if (_Left_size < _Right_size) {

	cmp	rsi, rdi
	jb	SHORT $LN950@Partition_
$LN911@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7975 :         ++_Plast;

	add	r15, 56					; 00000038H
	cmp	r15, r13
	jb	SHORT $LL4@Partition_
$LN950@Partition_:

; 7976 :     }
; 7977 : 
; 7978 :     _RanIt _Gfirst = _Plast;

	mov	r14, r15

; 7979 :     _RanIt _Glast  = _Pfirst;

	mov	r12, rbx
	npad	1
$LL6@Partition_:

; 7982 :         for (; _Gfirst < _Last; ++_Gfirst) {

	cmp	r14, r13
	jae	$LN945@Partition_
	npad	7
$LL11@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [r14+24], 16

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, r14

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rsi, QWORD PTR [r14+16]

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN921@Partition_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [r14]
$LN921@Partition_:

; 2244 :         return _BUF_SIZE <= _Myres;

	mov	r13, QWORD PTR [rbx+24]

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, rbx

; 4626 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

	mov	rdi, QWORD PTR [rbx+16]

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r13, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN920@Partition_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [rbx]
$LN920@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	rsi, rdi
	mov	r8, rdi
	cmovb	r8, rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	SHORT $LN410@Partition_

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	jns	SHORT $LN912@Partition_
	jmp	$LN9@Partition_
$LN410@Partition_:

; 561  :     if (_Left_size < _Right_size) {

	cmp	rdi, rsi
	jb	$LN9@Partition_
$LN912@Partition_:

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rdx, rbx

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	r13, 16

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN603@Partition_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rdx, QWORD PTR [rbx]
$LN603@Partition_:

; 2244 :         return _BUF_SIZE <= _Myres;

	cmp	QWORD PTR [r14+24], 16

; 2235 :         const value_type* _Result = _Bx._Buf;

	mov	rcx, r14

; 2236 :         if (_Large_string_engaged()) {

	jb	SHORT $LN608@Partition_

; 2237 :             _Result = _Unfancy(_Bx._Ptr);

	mov	rcx, QWORD PTR [r14]
$LN608@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 70   :     return _Right < _Left ? _Right : _Left;

	cmp	rdi, rsi
	mov	r8, rsi
	cmovb	r8, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 381  :         return __builtin_memcmp(_First1, _First2, _Count);

	call	memcmp

; 557  :     if (_Ans != 0) {

	test	eax, eax
	je	SHORT $LN613@Partition_

; 5024 :     return static_cast<_Get_comparison_category_t<_Traits>>(_Left.compare(_Right) <=> 0);

	js	$LN945@Partition_
	jmp	SHORT $LN913@Partition_
$LN613@Partition_:

; 561  :     if (_Left_size < _Right_size) {

	cmp	rsi, rdi
	jb	$LN945@Partition_
$LN913@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7987 :             } else if (_Plast != _Gfirst) {

	cmp	r15, r14
	je	$LN19@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR [r15]
	mov	rcx, r15
	movups	xmm0, XMMWORD PTR [r15+16]
	movups	XMMWORD PTR _Tmp$13[rbp-128], xmm1
	movups	XMMWORD PTR _Tmp$13[rbp-112], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [r15+16], 0
	mov	QWORD PTR [r15+24], 15
	mov	BYTE PTR [r15], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r15+40]
	mov	r8, QWORD PTR [r15+48]
	mov	rax, QWORD PTR [r15+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$13[rbp-88], rdx
	mov	rdx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r15+48], 0
	mov	QWORD PTR [r15+40], 0
	mov	QWORD PTR [r15+32], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$13[rbp-96], rax
	mov	QWORD PTR _Tmp$13[rbp-80], r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [r14+32]
	lea	rcx, QWORD PTR [r15+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	lea	rdx, QWORD PTR _Tmp$13[rbp-128]
	mov	rcx, r14
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR _Tmp$13[rbp-96]
	lea	rcx, QWORD PTR [r14+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR _Tmp$13[rbp-96]
	test	rcx, rcx
	je	SHORT $LN805@Partition_

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Tmp$13[rbp-80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN823@Partition_

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN376@Partition_
$LN823@Partition_:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Tmp$13[rbp-80], 0
	movdqu	XMMWORD PTR _Tmp$13[rbp-96], xmm0
$LN805@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Tmp$13[rbp-128]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN19@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7982 :         for (; _Gfirst < _Last; ++_Gfirst) {

	add	r15, 56					; 00000038H
$LN9@Partition_:
	add	r14, 56					; 00000038H
	cmp	r14, QWORD PTR _Last$GSCopy$1$[rbp-128]
	jb	$LL11@Partition_
$LN945@Partition_:

; 7995 :         for (; _First < _Glast; --_Glast) {

	mov	rdi, QWORD PTR _First$GSCopy$1$[rbp-128]
	cmp	r12, rdi
	jbe	$LN1000@Partition_
	lea	r13, QWORD PTR [r12-56]
	npad	5
$LL14@Partition_:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	mov	rdx, rbx
	mov	rcx, r13
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7997 :             if (_DEBUG_LT_PRED(_Pred, *_Glast_prev, *_Pfirst)) {

	js	$LN12@Partition_
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	mov	rdx, r13
	mov	rcx, rbx
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7999 :             } else if (_Pred(*_Pfirst, *_Glast_prev)) {

	js	$LN851@Partition_

; 8000 :                 break;
; 8001 :             } else if (--_Pfirst != _Glast_prev) {

	add	rbx, -56				; ffffffffffffffc8H
	cmp	rbx, r13
	je	$LN12@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	ecx, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rbx+16]
	movups	XMMWORD PTR _Tmp$15[rbp-128], xmm1
	movups	XMMWORD PTR _Tmp$15[rbp-112], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [rbx+16], 0
	mov	QWORD PTR [rbx+24], 15
	mov	BYTE PTR [rbx], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rbx+40]
	mov	r8, QWORD PTR [rbx+48]
	mov	rax, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$15[rbp-88], rdx
	mov	rdx, r13
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rbx+48], rcx
	mov	QWORD PTR [rbx+40], rcx
	mov	QWORD PTR [rbx+32], rcx
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$15[rbp-96], rax
	mov	QWORD PTR _Tmp$15[rbp-80], r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [r13+32]
	lea	rcx, QWORD PTR [rbx+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	lea	rdx, QWORD PTR _Tmp$15[rbp-128]
	mov	rcx, r13
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR _Tmp$15[rbp-96]
	lea	rcx, QWORD PTR [r13+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR _Tmp$15[rbp-96]
	test	rcx, rcx
	je	SHORT $LN478@Partition_

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Tmp$15[rbp-80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN496@Partition_

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN376@Partition_
$LN496@Partition_:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Tmp$15[rbp-80], 0
	movdqu	XMMWORD PTR _Tmp$15[rbp-96], xmm0
$LN478@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Tmp$15[rbp-128]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	rdi, QWORD PTR _First$GSCopy$1$[rbp-128]
$LN12@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7995 :         for (; _First < _Glast; --_Glast) {

	sub	r12, 56					; 00000038H
	sub	r13, 56					; 00000038H
	cmp	rdi, r12
	jb	$LL14@Partition_
$LN851@Partition_:

; 8002 :                 swap(*_Pfirst, *_Glast_prev); // intentional ADL
; 8003 :             }
; 8004 :         }
; 8005 : 
; 8006 :         if (_Glast == _First && _Gfirst == _Last) {

	cmp	r12, rdi
$LN1000@Partition_:
	mov	r13, QWORD PTR _Last$GSCopy$1$[rbp-128]
	jne	$LN27@Partition_
	cmp	r14, r13
	je	$LN852@Partition_

; 8007 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);
; 8008 :         }
; 8009 : 
; 8010 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 8011 :             if (_Plast != _Gfirst) {

	cmp	r15, r14
	je	$LN922@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	xor	ecx, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rbx+16]
	movups	XMMWORD PTR _Tmp$18[rbp-128], xmm1
	movups	XMMWORD PTR _Tmp$18[rbp-112], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [rbx+16], rcx
	mov	QWORD PTR [rbx+24], 15
	mov	BYTE PTR [rbx], cl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rbx+40]
	mov	r8, QWORD PTR [rbx+48]
	mov	rax, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$18[rbp-88], rdx
	mov	rdx, r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rbx+48], rcx
	mov	QWORD PTR [rbx+40], rcx
	mov	QWORD PTR [rbx+32], rcx
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$18[rbp-96], rax
	mov	QWORD PTR _Tmp$18[rbp-80], r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [r15+32]
	lea	rcx, QWORD PTR [rbx+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	lea	rdx, QWORD PTR _Tmp$18[rbp-128]
	mov	rcx, r15
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR _Tmp$18[rbp-96]
	lea	rcx, QWORD PTR [r15+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR _Tmp$18[rbp-96]
	test	rcx, rcx
	je	SHORT $LN189@Partition_

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Tmp$18[rbp-80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN207@Partition_

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN376@Partition_
$LN207@Partition_:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Tmp$18[rbp-80], 0
	movdqu	XMMWORD PTR _Tmp$18[rbp-96], xmm0
$LN189@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Tmp$18[rbp-128]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
$LN922@Partition_:

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	xor	ecx, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8015 :             ++_Plast;

	add	r15, 56					; 00000038H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rbx+16]
	movups	XMMWORD PTR _Tmp$19[rbp-128], xmm1
	movups	XMMWORD PTR _Tmp$19[rbp-112], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [rbx+16], rcx
	mov	QWORD PTR [rbx+24], 15
	mov	BYTE PTR [rbx], cl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rbx+40]
	mov	r8, QWORD PTR [rbx+48]
	mov	rax, QWORD PTR [rbx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$19[rbp-88], rdx
	mov	rdx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rbx+48], rcx
	mov	QWORD PTR [rbx+40], rcx
	mov	QWORD PTR [rbx+32], rcx
	mov	rcx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$19[rbp-96], rax
	mov	QWORD PTR _Tmp$19[rbp-80], r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [r14+32]
	lea	rcx, QWORD PTR [rbx+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	lea	rdx, QWORD PTR _Tmp$19[rbp-128]
	mov	rcx, r14
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR _Tmp$19[rbp-96]
	lea	rcx, QWORD PTR [r14+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR _Tmp$19[rbp-96]
	test	rcx, rcx
	je	SHORT $LN100@Partition_

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Tmp$19[rbp-80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN118@Partition_

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN376@Partition_
$LN118@Partition_:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Tmp$19[rbp-80], 0
	movdqu	XMMWORD PTR _Tmp$19[rbp-96], xmm0
$LN100@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Tmp$19[rbp-128]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8017 :             ++_Pfirst;

	add	rbx, 56					; 00000038H

; 8018 :             ++_Gfirst;

	add	r14, 56					; 00000038H
	jmp	$LL6@Partition_
$LN27@Partition_:

; 8019 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

	add	r12, -56				; ffffffffffffffc8H
	cmp	r14, r13
	jne	$LN30@Partition_

; 8020 :             if (--_Glast != --_Pfirst) {

	add	rbx, -56				; ffffffffffffffc8H
	cmp	r12, rbx
	je	$LN923@Partition_
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR [r12]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	xor	ecx, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [r12+16]
	movups	XMMWORD PTR _Tmp$14[rbp-128], xmm1
	movups	XMMWORD PTR _Tmp$14[rbp-112], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [r12+16], rcx
	mov	QWORD PTR [r12+24], 15
	mov	BYTE PTR [r12], cl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r12+40]
	mov	r8, QWORD PTR [r12+48]
	mov	rax, QWORD PTR [r12+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$14[rbp-88], rdx
	mov	rdx, rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r12+48], rcx
	mov	QWORD PTR [r12+40], rcx
	mov	QWORD PTR [r12+32], rcx
	mov	rcx, r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$14[rbp-96], rax
	mov	QWORD PTR _Tmp$14[rbp-80], r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rsi, QWORD PTR [rbx+32]
	mov	rdx, rsi
	lea	rcx, QWORD PTR [r12+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	lea	rdx, QWORD PTR _Tmp$14[rbp-128]
	mov	rcx, rbx
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR _Tmp$14[rbp-96]
	mov	rcx, rsi
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR _Tmp$14[rbp-96]
	test	rcx, rcx
	je	SHORT $LN564@Partition_

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Tmp$14[rbp-80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN582@Partition_

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN376@Partition_
$LN582@Partition_:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Tmp$14[rbp-80], 0
	movdqu	XMMWORD PTR _Tmp$14[rbp-96], xmm0
$LN564@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Tmp$14[rbp-128]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	jmp	SHORT $LN589@Partition_
$LN923@Partition_:
	lea	rsi, QWORD PTR [rbx+32]
$LN589@Partition_:

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR [rbx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	xor	r8d, r8d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8024 :             swap(*_Pfirst, *--_Plast); // intentional ADL

	sub	r15, 56					; 00000038H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rbx+16]
	movups	XMMWORD PTR _Tmp$17[rbp-128], xmm1
	movups	XMMWORD PTR _Tmp$17[rbp-112], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [rbx+16], r8
	mov	QWORD PTR [rbx+24], 15
	mov	BYTE PTR [rbx], r8b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rsi+16]
	mov	rcx, QWORD PTR [rsi+8]
	mov	rax, QWORD PTR [rsi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$17[rbp-88], rcx
	mov	rcx, rbx
	mov	QWORD PTR _Tmp$17[rbp-80], rdx
	mov	rdx, r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rsi+16], r8
	mov	QWORD PTR [rsi+8], r8
	mov	QWORD PTR [rsi], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$17[rbp-96], rax
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [r15+32]
	mov	rcx, rsi
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	lea	rdx, QWORD PTR _Tmp$17[rbp-128]
	mov	rcx, r15
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR _Tmp$17[rbp-96]
	lea	rcx, QWORD PTR [r15+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR _Tmp$17[rbp-96]
	test	rcx, rcx
	je	SHORT $LN275@Partition_

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Tmp$17[rbp-80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN293@Partition_

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	$LN376@Partition_
$LN293@Partition_:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Tmp$17[rbp-80], 0
	movdqu	XMMWORD PTR _Tmp$17[rbp-96], xmm0
$LN275@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Tmp$17[rbp-128]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8025 :         } else {

	jmp	$LL6@Partition_
$LN30@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR [r14]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	xor	ecx, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [r14+16]
	movups	XMMWORD PTR _Tmp$16[rbp-128], xmm1
	movups	XMMWORD PTR _Tmp$16[rbp-112], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [r14+16], rcx
	mov	QWORD PTR [r14+24], 15
	mov	BYTE PTR [r14], cl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [r14+40]
	mov	r8, QWORD PTR [r14+48]
	mov	rax, QWORD PTR [r14+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$16[rbp-88], rdx
	mov	rdx, r12
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [r14+48], rcx
	mov	QWORD PTR [r14+40], rcx
	mov	QWORD PTR [r14+32], rcx
	mov	rcx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$16[rbp-96], rax
	mov	QWORD PTR _Tmp$16[rbp-80], r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [r12+32]
	lea	rcx, QWORD PTR [r14+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	lea	rdx, QWORD PTR _Tmp$16[rbp-128]
	mov	rcx, r12
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR _Tmp$16[rbp-96]
	lea	rcx, QWORD PTR [r12+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR _Tmp$16[rbp-96]
	test	rcx, rcx
	je	SHORT $LN361@Partition_

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Tmp$16[rbp-80]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN379@Partition_

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	ja	SHORT $LN376@Partition_
$LN379@Partition_:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Tmp$16[rbp-80], 0
	movdqu	XMMWORD PTR _Tmp$16[rbp-96], xmm0
$LN361@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Tmp$16[rbp-128]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8027 :             ++_Gfirst;

	add	r14, 56					; 00000038H

; 8028 :         }
; 8029 :     }

	jmp	$LL6@Partition_
$LN852@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR __$ReturnUdt$GSCopy$1$[rbp-128]
	mov	QWORD PTR [rax], rbx
	mov	QWORD PTR [rax+8], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 8030 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-128]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+216]
	add	rsp, 128				; 00000080H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN376@Partition_:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN998@Partition_:
??$_Partition_by_median_guess_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YA?AU?$pair@PEAUEntry@SarcFile@@PEAU12@@0@PEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::_Partition_by_median_guess_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z PROC ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z ENDP ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
_TEXT	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 80
_Al_$ = 88
_Myhead$ = 96
<_Vals_0>$ = 104
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >, COMDAT

; 806  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

$LN54:
	mov	QWORD PTR [rsp+16], rbx
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 48					; 00000030H
	mov	rdi, r9
	mov	rsi, r8
	mov	r14, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR [rcx], rdx
	xor	eax, eax

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR [rcx+8], rax

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR [r14+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 807  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 246  :     pair(pair&&)      = default;

	mov	rdx, rdi
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [rdi+32]
	call	??0BymlFile@@QEAA@$$QEAV0@@Z
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	rcx, QWORD PTR [r14+8]
	mov	QWORD PTR [rcx], rsi

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	rcx, QWORD PTR [r14+8]
	mov	QWORD PTR [rcx+8], rsi

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	rcx, QWORD PTR [r14+8]
	mov	QWORD PTR [rcx+16], rsi

; 811  :         this->_Ptr->_Color = _Red;

	mov	rcx, QWORD PTR [r14+8]
	mov	BYTE PTR [rcx+24], 0
	mov	rcx, QWORD PTR [r14+8]
	mov	BYTE PTR [rcx+25], 0

; 812  :         this->_Ptr->_Isnil = false;
; 813  :     }

	mov	rax, r14
	mov	rbx, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 80
_Al_$ = 88
_Myhead$ = 96
<_Vals_0>$ = 104
?dtor$1@?0???$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
?dtor$1@?0???$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 80
_Al_$ = 88
_Myhead$ = 96
<_Vals_0>$ = 104
?dtor$0@?0???$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$0@?0???$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
$T1 = 40
this$ = 80
_Al_$ = 88
_Myhead$ = 96
<_Vals_0>$ = 104
?dtor$2@?0???$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$2
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0???$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &,bool,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &,bool,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@AEAU10@@Z PROC ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YA$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@AEAU10@@Z ENDP ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z
_TEXT	SEGMENT
this$GSCopy$ = 32
this$ = 80
_Al_$ = 88
_Myhead$ = 96
<_Vals_0>$ = 104
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >, COMDAT

; 806  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

$LN70:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 48					; 00000030H
	mov	rdi, r9
	mov	rsi, r8
	mov	r14, rcx
	mov	QWORD PTR this$GSCopy$[rsp], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR [rcx], rdx
	xor	ebp, ebp

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR [rcx+8], rbp

; 87   :         return ::operator new(_Bytes);

	lea	ecx, QWORD PTR [rbp+88]
	call	??2@YAPEAX_K@Z				; operator new

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR [r14+8], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 807  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 246  :     pair(pair&&)      = default;

	mov	rdx, rdi
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rdi+48]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdi+48], rbp

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rdi+40]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdi+40], rbp

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rcx, QWORD PTR [rdi+32]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdi+32], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rbx+32], rcx
	mov	QWORD PTR [rbx+40], rdx
	mov	QWORD PTR [rbx+48], r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 808  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	mov	rcx, QWORD PTR [r14+8]
	mov	QWORD PTR [rcx], rsi

; 809  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	mov	rcx, QWORD PTR [r14+8]
	mov	QWORD PTR [rcx+8], rsi

; 810  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	mov	rcx, QWORD PTR [r14+8]
	mov	QWORD PTR [rcx+16], rsi

; 811  :         this->_Ptr->_Color = _Red;

	mov	rcx, QWORD PTR [r14+8]
	mov	BYTE PTR [rcx+24], bpl
	mov	rcx, QWORD PTR [r14+8]
	mov	BYTE PTR [rcx+25], bpl

; 812  :         this->_Ptr->_Isnil = false;
; 813  :     }

	mov	rax, r14
	mov	rbx, QWORD PTR [rsp+88]
	mov	rbp, QWORD PTR [rsp+96]
	add	rsp, 48					; 00000030H
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
this$ = 80
_Al_$ = 88
_Myhead$ = 96
<_Vals_0>$ = 104
?dtor$1@?0???$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >
?dtor$1@?0???$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$GSCopy$ = 32
this$ = 80
_Al_$ = 88
_Myhead$ = 96
<_Vals_0>$ = 104
?dtor$0@?0???$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$GSCopy$[rdx]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
?dtor$0@?0???$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &,bool,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	movzx	eax, BYTE PTR [r8]
	mov	BYTE PTR [rcx+8], al

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool>::pair<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,bool><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &,bool,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@V?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_unchecked_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::_Tree_unchecked_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$dead$ = 64
<_Args_1>$ = 72
<_Args_2>$dead$ = 80
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN22:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [r9]
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rbx+32], rax
	mov	QWORD PTR [rbx+40], rax
	mov	QWORD PTR [rbx+48], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@0@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>, COMDAT

; 248  : #if _HAS_CXX20
; 249  :     if (_STD is_constant_evaluated()) {
; 250  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 251  :     } else
; 252  : #endif // _HAS_CXX20
; 253  :     {
; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 255  :     }
; 256  : }

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	ret	0
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEBQEAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * const &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEBQEAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
$T1 = 64
<_Args_0>$dead$ = 64
<_Args_1>$ = 72
<_Args_2>$dead$ = 80
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN16:
	mov	QWORD PTR [rsp+24], r8
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [r9]
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	call	??0BymlFile@@QEAA@XZ			; BymlFile::BymlFile
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
$T1 = 64
<_Args_0>$dead$ = 64
<_Args_1>$ = 72
<_Args_2>$dead$ = 80
?dtor$1@?0???$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA PROC ; `std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$1
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEBUpiecewise_construct_t@1@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QEAV?$tuple@$$V@1@@Z@4HA ENDP ; `std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@0@Z
_TEXT	SEGMENT
_Obj$ = 8
<_Args_0>$ = 16
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &>, COMDAT

; 248  : #if _HAS_CXX20
; 249  :     if (_STD is_constant_evaluated()) {
; 250  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 251  :     } else
; 252  : #endif // _HAS_CXX20
; 253  :     {
; 254  :         ::new (static_cast<void*>(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);
; 255  :     }
; 256  : }

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	ret	0
??$_Construct_in_place@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEBQEAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * const &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEBQEAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
_TEXT	SEGMENT
_Newnode$1 = 32
$T2 = 48
this$ = 80
_Val$ = 88
??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >, COMDAT

; 1652 :     _Nodeptr _Copy_or_move(_Ty& _Val) {

$LN77:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rsi, rdx

; 1949 :         return _Node::_Buynode(_Getal(), _Get_scary()->_Myhead, _STD forward<_Valty>(_Val)...);

	mov	rbp, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR _Newnode$1[rsp], rcx

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR _Newnode$1[rsp+8], 0

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR _Newnode$1[rsp+8], rax
	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T2[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 245  :     pair(const pair&) = default;

	mov	rdx, rsi
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [rsi+32]
	call	??0BymlFile@@QEAA@AEBV0@@Z
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 362  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 363  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 364  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 365  :         _Newnode._Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0

; 1653 :         if constexpr (_Strat == _Strategy::_Copy) {
; 1654 :             return _Buynode(_Val);

	mov	rax, rdi

; 1655 :         } else {
; 1656 :             if constexpr (_Is_set) {
; 1657 :                 return _Buynode(_STD move(_Val));
; 1658 :             } else {
; 1659 :                 return _Buynode(_STD move(const_cast<key_type&>(_Val.first)), _STD move(_Val.second));
; 1660 :             }
; 1661 :         }
; 1662 :     }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newnode$1 = 32
$T2 = 48
this$ = 80
_Val$ = 88
?dtor$0@?0???$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Newnode$1[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
?dtor$0@?0???$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newnode$1 = 32
$T2 = 48
this$ = 80
_Val$ = 88
?dtor$1@?0???$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$1
	mov	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$_Copy_or_move@$0A@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Copy_or_move<0,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z
_TEXT	SEGMENT
this$ = 80
_Al$ = 88
_Rootnode$ = 96
??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >, COMDAT

; 734  :     void _Erase_tree_and_orphan(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

$LN88:
	push	rbx
	push	r14
	push	r15
	sub	rsp, 48					; 00000030H

; 735  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [r8+25], 0
	mov	rbx, r8
	mov	r15, rdx
	mov	r14, rcx
	jne	$LN3@Erase_tree
	mov	QWORD PTR [rsp+104], rbp
	mov	QWORD PTR [rsp+40], rsi
	mov	QWORD PTR [rsp+32], rdi
	npad	3
$LL2@Erase_tree:

; 736  :             _Erase_tree_and_orphan(_Al, _Rootnode->_Right);

	mov	r8, QWORD PTR [rbx+16]
	mov	rdx, r15
	mov	rcx, r14
	call	??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rbp, rbx

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rbx, QWORD PTR [rbx]
	lea	rcx, QWORD PTR [rbp+216]
	call	??1?$_Hash@V?$_Umap_traits@VNode@BymlFile@@IV?$_Uhash_compare@VNode@BymlFile@@UNodeHasher@2@UNodeEqual@2@@std@@V?$allocator@U?$pair@$$CBVNode@BymlFile@@I@std@@@4@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp+152]
	call	??1?$_Hash@V?$_Umap_traits@V?$vector@EV?$allocator@E@std@@@std@@IV?$_Uhash_compare@V?$vector@EV?$allocator@E@std@@@std@@UVectorHasher@BymlFile@@U?$equal_to@V?$vector@EV?$allocator@E@std@@@std@@@2@@2@V?$allocator@U?$pair@$$CBV?$vector@EV?$allocator@E@std@@@std@@I@std@@@2@$0A@@std@@@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp+112]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 767  :         _Tidy();

	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rbp+88]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
	lea	rcx, QWORD PTR [rbp+64]
	call	?_Tidy@?$vector@VNode@BymlFile@@V?$allocator@VNode@BymlFile@@@std@@@std@@AEAAXXZ ; std::vector<BymlFile::Node,std::allocator<BymlFile::Node> >::_Tidy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR [rbp+32]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 265  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, 288				; 00000120H
	mov	rcx, rbp
	call	??3@YAXPEAX_K@Z				; operator delete
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 735  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	cmp	BYTE PTR [rbx+25], 0
	je	SHORT $LL2@Erase_tree
	mov	rdi, QWORD PTR [rsp+32]
	mov	rsi, QWORD PTR [rsp+40]
	mov	rbp, QWORD PTR [rsp+104]
$LN3@Erase_tree:

; 737  :             auto _To_delete = _STD exchange(_Rootnode, _Rootnode->_Left);
; 738  :             _Orphan_ptr(_To_delete);
; 739  :             _Alnode::value_type::_Freenode(_Al, _To_delete);
; 740  :         }
; 741  :     }

	add	rsp, 48					; 00000030H
	pop	r15
	pop	r14
	pop	rbx
	ret	0
??$_Erase_tree_and_orphan@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> > >::_Erase_tree_and_orphan<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z PROC ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * const &,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z ENDP ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *>, COMDAT

; 1607 :     return __builtin_addressof(_Val);

	mov	rax, rcx

; 1608 : }

	ret	0
??$addressof@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z PROC ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * const &,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEBQEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@QEAPEAU10@AEBQEAU10@@Z ENDP ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * const &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@@Z
_TEXT	SEGMENT
_Location$ = 8
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@@Z PROC ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >, COMDAT

; 314  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

	jmp	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
??$destroy_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@@std@@YAXQEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@@Z ENDP ; std::destroy_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$dead$ = 56
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAAPEAXI@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::`scalar deleting destructor', COMDAT
$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@XZ
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAAPEAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Move_backward_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Move_backward_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z PROC ; std::_Move_backward_unchecked<SarcFile::Entry *,SarcFile::Entry *>, COMDAT

; 4928 : _CONSTEXPR20 _BidIt2 _Move_backward_unchecked(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

$LN17:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rbx, rdx
	mov	rsi, rcx

; 4929 :     // move [_First, _Last) backwards to [..., _Dest)
; 4930 :     // note: _Move_backward_unchecked has callers other than the move_backward family
; 4931 :     if constexpr (_Iter_move_cat<_BidIt1, _BidIt2>::_Bitcopy_assignable) {
; 4932 : #if _HAS_CXX20
; 4933 :         if (!_STD is_constant_evaluated())
; 4934 : #endif // _HAS_CXX20
; 4935 :         {
; 4936 :             return _Copy_backward_memmove(_First, _Last, _Dest);
; 4937 :         }
; 4938 :     }
; 4939 : 
; 4940 :     while (_First != _Last) {

	cmp	rdx, rcx
	je	SHORT $LN12@Move_backw
	npad	3
$LL9@Move_backw:

; 4941 :         *--_Dest = _STD move(*--_Last);

	sub	rbx, 56					; 00000038H
	sub	rdi, 56					; 00000038H
	mov	rdx, rbx
	mov	rcx, rdi
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rbx+32]
	lea	rcx, QWORD PTR [rdi+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	cmp	rbx, rsi
	jne	SHORT $LL9@Move_backw
$LN12@Move_backw:

; 4942 :     }
; 4943 : 
; 4944 :     return _Dest;
; 4945 : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Move_backward_unchecked@PEAUEntry@SarcFile@@PEAU12@@std@@YAPEAUEntry@SarcFile@@PEAU12@00@Z ENDP ; std::_Move_backward_unchecked<SarcFile::Entry *,SarcFile::Entry *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
_Bottom$GSCopy$1$ = 32
tv418 = 40
_First$ = 128
_Hole$ = 136
_Bottom$ = 144
_Val$ = 152
_Pred$ = 160
??$_Pop_heap_hole_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::_Pop_heap_hole_by_index<SarcFile::Entry *,SarcFile::Entry,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 6432 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 56					; 00000038H
	mov	rbp, rcx
	mov	rax, r8

; 6433 :     // percolate _Hole to _Bottom, then push _Val
; 6434 :     _STL_INTERNAL_CHECK(_Bottom > 0);
; 6435 : 
; 6436 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 6437 :     const _Diff _Top = _Hole;
; 6438 :     _Diff _Idx       = _Hole;
; 6439 : 
; 6440 :     // Check whether _Idx can have a child before calculating that child's index, since
; 6441 :     // calculating the child's index can trigger integer overflows
; 6442 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen

	lea	rcx, QWORD PTR [r8-1]
	mov	QWORD PTR _Bottom$GSCopy$1$[rsp], rax
	mov	r15, rcx
	mov	QWORD PTR tv418[rsp], rcx
	sar	r15, 1
	mov	r14, r9
	mov	r13, rdx
	mov	r12, rdx
	mov	rsi, rdx

; 6443 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

	cmp	rdx, r15
	jge	SHORT $LN3@Pop_heap_h
	npad	4
$LL2@Pop_heap_h:

; 6444 :         _Idx = 2 * _Idx + 2;

	lea	rbx, QWORD PTR [rsi+rsi]

; 6445 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

	lea	rax, QWORD PTR [rbx+2]
	imul	rcx, rax, 56				; 00000038H
	add	rcx, rbp
	lea	rdx, QWORD PTR [rcx-56]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6448 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

	lea	rsi, QWORD PTR [rbx+2]
	movsx	rcx, al
	sar	rcx, 63					; 0000003fH
	add	rsi, rcx
	imul	rdi, rsi, 56				; 00000038H
	imul	rbx, r13, 56				; 00000038H
	add	rdi, rbp
	mov	rdx, rdi
	add	rbx, rbp
	mov	rcx, rbx
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rdi+32]
	lea	rcx, QWORD PTR [rbx+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 6449 :         _Hole             = _Idx;

	mov	r13, rsi
	cmp	rsi, r15
	jl	SHORT $LL2@Pop_heap_h
	mov	rax, QWORD PTR _Bottom$GSCopy$1$[rsp]
$LN3@Pop_heap_h:

; 6450 :     }
; 6451 : 
; 6452 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

	mov	rdi, rsi
	cmp	rsi, r15
	jne	SHORT $LN5@Pop_heap_h
	test	al, 1
	jne	SHORT $LN5@Pop_heap_h

; 6453 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

	imul	rbx, rax, 56				; 00000038H
	imul	rdi, rsi, 56				; 00000038H
	lea	rdx, QWORD PTR [rbp-56]
	add	rdx, rbx
	add	rdi, rbp
	mov	rcx, rdi
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rbp-24]
	add	rdx, rbx
	lea	rcx, QWORD PTR [rdi+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 6454 :         _Hole             = _Bottom - 1;

	mov	rdi, QWORD PTR tv418[rsp]
$LN5@Pop_heap_h:

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

	cmp	r12, rdi
	jge	SHORT $LN36@Pop_heap_h
	npad	6
$LL18@Pop_heap_h:

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

	lea	rbx, QWORD PTR [rdi-1]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	mov	rdx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

	sar	rbx, 1

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

	imul	rsi, rbx, 56				; 00000038H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	add	rsi, rbp
	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

	jns	SHORT $LN36@Pop_heap_h

; 6329 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 6330 :         // move _Hole up to parent
; 6331 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

	imul	rdi, rdi, 56				; 00000038H
	mov	rdx, rsi
	add	rdi, rbp
	mov	rcx, rdi
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rsi+32]
	lea	rcx, QWORD PTR [rdi+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 6332 :         _Hole             = _Idx;

	mov	rdi, rbx
	cmp	r12, rbx
	jl	SHORT $LL18@Pop_heap_h
$LN36@Pop_heap_h:

; 6333 :     }
; 6334 : 
; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

	imul	rbx, rdi, 56				; 00000038H
	mov	rdx, r14
	add	rbx, rbp
	mov	rcx, rbx
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [r14+32]
	lea	rcx, QWORD PTR [rbx+32]

; 6455 :     }
; 6456 : 
; 6457 :     _STD _Push_heap_by_index(_First, _Hole, _Top, _STD forward<_Ty>(_Val), _Pred);
; 6458 : }

	add	rsp, 56					; 00000038H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	jmp	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
??$_Pop_heap_hole_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::_Pop_heap_hole_by_index<SarcFile::Entry *,SarcFile::Entry,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
_Val$1 = 48
__$ArrayPad$ = 104
_First$ = 160
_Last$ = 168
_Pred$ = 176
??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::_Pop_heap_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 6472 : _CONSTEXPR20 void _Pop_heap_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

	mov	r11, rsp
	push	rbx
	push	rbp
	push	r14
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 6474 :     if (2 <= _Last - _First) {

	mov	rax, rdx
	mov	r14, 7905747460161236407		; 6db6db6db6db6db7H
	sub	rax, rcx
	movzx	ebx, r8b
	sar	rax, 3
	mov	rbp, rcx
	imul	rax, r14
	cmp	rax, 2
	jl	$LN84@Pop_heap_u
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR [rdx-56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6474 :     if (2 <= _Last - _First) {

	mov	QWORD PTR [r11+24], rsi

; 6475 :         --_Last;

	lea	rsi, QWORD PTR [rdx-56]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rsi+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6474 :     if (2 <= _Last - _First) {

	mov	QWORD PTR [r11-32], rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	XMMWORD PTR _Val$1[rsp], xmm1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6474 :     if (2 <= _Last - _First) {

	mov	QWORD PTR [r11-40], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	xor	r15d, r15d
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	XMMWORD PTR _Val$1[rsp+16], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [rsi+16], r15
	mov	QWORD PTR [rsi+24], 15
	mov	BYTE PTR [rsi], r15b
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rsi+48]
	mov	rcx, QWORD PTR [rsi+40]
	mov	rax, QWORD PTR [rsi+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r11-64], rcx
	mov	rcx, rsi
	mov	QWORD PTR [r11-56], rdx
	mov	rdx, rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rsi+48], r15
	mov	QWORD PTR [rsi+40], r15
	mov	QWORD PTR [rsi+32], r15
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [r11-72], rax
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rbp+32]
	lea	rcx, QWORD PTR [rsi+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6467 :     _STD _Pop_heap_hole_by_index(

	sub	rsi, rbp
	mov	BYTE PTR [rsp+32], bl
	sar	rsi, 3
	lea	r9, QWORD PTR _Val$1[rsp]
	imul	rsi, r14
	xor	edx, edx
	mov	rcx, rbp
	mov	r8, rsi
	call	??$_Pop_heap_hole_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Pop_heap_hole_by_index<SarcFile::Entry *,SarcFile::Entry,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR _Val$1[rsp+32]
	mov	rdi, QWORD PTR [rsp+120]
	mov	rsi, QWORD PTR [rsp+176]
	test	rcx, rcx
	je	SHORT $LN59@Pop_heap_u

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Val$1[rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN77@Pop_heap_u

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN77@Pop_heap_u
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN77@Pop_heap_u:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Val$1[rsp+48], r15
	movdqu	XMMWORD PTR _Val$1[rsp+32], xmm0
$LN59@Pop_heap_u:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Val$1[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
	mov	r15, QWORD PTR [rsp+112]
$LN84@Pop_heap_u:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6479 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 128				; 00000080H
	pop	r14
	pop	rbp
	pop	rbx
	ret	0
$LN98@Pop_heap_u:
??$_Pop_heap_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@0V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::_Pop_heap_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Prev_iter@PEAUEntry@SarcFile@@@std@@YAPEAUEntry@SarcFile@@PEAU12@@Z
_TEXT	SEGMENT
_First$ = 8
??$_Prev_iter@PEAUEntry@SarcFile@@@std@@YAPEAUEntry@SarcFile@@PEAU12@@Z PROC ; std::_Prev_iter<SarcFile::Entry *>, COMDAT

; 1451 :     return --_First;

	lea	rax, QWORD PTR [rcx-56]

; 1452 : }

	ret	0
??$_Prev_iter@PEAUEntry@SarcFile@@@std@@YAPEAUEntry@SarcFile@@PEAU12@@Z ENDP ; std::_Prev_iter<SarcFile::Entry *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
_First$ = 64
_Mid$ = 72
_Last$ = 80
_Pred$ = 88
??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::_Guess_median_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 7945 : _CONSTEXPR20 void _Guess_median_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

	push	r14
	push	r15
	sub	rsp, 40					; 00000028H

; 7946 :     // sort median element to middle
; 7947 :     using _Diff        = _Iter_diff_t<_RanIt>;
; 7948 :     const _Diff _Count = _Last - _First;

	mov	rax, r8
	mov	r15, rdx
	sub	rax, rcx
	mov	rdx, 7905747460161236407		; 6db6db6db6db6db7H
	sar	rax, 3
	mov	r14, r8
	imul	rax, rdx

; 7949 :     if (40 < _Count) { // Tukey's ninther

	cmp	rax, 40					; 00000028H
	jle	$LN2@Guess_medi
	mov	QWORD PTR [rsp+64], rbx

; 7950 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

	inc	rax
	mov	QWORD PTR [rsp+72], rbp
	sar	rax, 3
	mov	QWORD PTR [rsp+80], rsi

; 7951 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 7952 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

	imul	rsi, rax, 112				; 00000070H
	mov	QWORD PTR [rsp+32], rdi
	imul	rdi, rax, 56				; 00000038H
	lea	r8, QWORD PTR [rsi+rcx]
	lea	rbp, QWORD PTR [rdi+rcx]
	mov	rdx, rbp
	call	??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Med3_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >

; 7953 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

	mov	rcx, r15
	lea	r8, QWORD PTR [rdi+r15]
	sub	rcx, rdi
	mov	rdx, r15
	call	??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Med3_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >

; 7954 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

	mov	rbx, r14
	mov	rcx, r14
	sub	rbx, rdi
	sub	rcx, rsi
	mov	rdx, rbx
	mov	r8, r14
	call	??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Med3_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >

; 7955 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

	mov	r8, rbx
	mov	rdx, r15
	mov	rcx, rbp
	mov	rdi, QWORD PTR [rsp+32]
	mov	rsi, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rbx, QWORD PTR [rsp+64]

; 7958 :     }
; 7959 : }

	add	rsp, 40					; 00000028H
	pop	r15
	pop	r14

; 7955 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

	jmp	??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Med3_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
$LN2@Guess_medi:

; 7956 :     } else {
; 7957 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

	mov	rdx, r15

; 7958 :     }
; 7959 : }

	add	rsp, 40					; 00000028H
	pop	r15
	pop	r14

; 7956 :     } else {
; 7957 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

	jmp	??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Med3_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
??$_Guess_median_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::_Guess_median_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$_Next_iter@PEAUEntry@SarcFile@@@std@@YAPEAUEntry@SarcFile@@PEAU12@@Z
_TEXT	SEGMENT
_First$ = 8
??$_Next_iter@PEAUEntry@SarcFile@@@std@@YAPEAUEntry@SarcFile@@PEAU12@@Z PROC ; std::_Next_iter<SarcFile::Entry *>, COMDAT

; 1438 :     return ++_First;

	lea	rax, QWORD PTR [rcx+56]

; 1439 : }

	ret	0
??$_Next_iter@PEAUEntry@SarcFile@@@std@@YAPEAUEntry@SarcFile@@PEAU12@@Z ENDP ; std::_Next_iter<SarcFile::Entry *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$swap@UEntry@SarcFile@@$0A@@std@@YAXAEAUEntry@SarcFile@@0@Z
_TEXT	SEGMENT
_Tmp$ = 32
__$ArrayPad$ = 88
_Left$ = 128
_Right$ = 136
??$swap@UEntry@SarcFile@@$0A@@std@@YAXAEAUEntry@SarcFile@@0@Z PROC ; std::swap<SarcFile::Entry,0>, COMDAT

; 98   :     is_nothrow_move_constructible_v<_Ty>&& is_nothrow_move_assignable_v<_Ty>) {

$LN98:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm1, XMMWORD PTR [rcx]
	lea	rdi, QWORD PTR [rcx+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	xor	ebp, ebp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	xmm0, XMMWORD PTR [rcx+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 98   :     is_nothrow_move_constructible_v<_Ty>&& is_nothrow_move_assignable_v<_Ty>) {

	mov	rsi, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 2999 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

	movups	XMMWORD PTR _Tmp$[rsp], xmm1
	movups	XMMWORD PTR _Tmp$[rsp+16], xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 697  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	QWORD PTR [rcx+16], rbp
	mov	QWORD PTR [rcx+24], 15
	mov	BYTE PTR [rcx], bpl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rdx, QWORD PTR [rdi+8]
	mov	r8, QWORD PTR [rdi+16]
	mov	rax, QWORD PTR [rdi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$[rsp+40], rdx
	mov	rdx, rsi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rdi+16], rbp
	mov	QWORD PTR [rdi+8], rbp
	mov	QWORD PTR [rdi], rbp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR _Tmp$[rsp+32], rax
	mov	QWORD PTR _Tmp$[rsp+48], r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rsi+32]
	mov	rcx, rdi
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
	lea	rdx, QWORD PTR _Tmp$[rsp]
	mov	rcx, rsi
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR _Tmp$[rsp+32]
	lea	rcx, QWORD PTR [rsi+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 2044 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rcx, QWORD PTR _Tmp$[rsp+32]
	test	rcx, rcx
	je	SHORT $LN58@swap

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rdx, QWORD PTR _Tmp$[rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 969  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2047 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	sub	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 261  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	rdx, 4096				; 00001000H
	jb	SHORT $LN76@swap

; 160  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	rcx, QWORD PTR [rcx-8]
	add	rdx, 39					; 00000027H
	sub	rax, rcx

; 161  : 
; 162  :     // If the following asserts, it likely means that we are performing
; 163  :     // an aligned delete on memory coming from an unaligned allocation.
; 164  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 165  : 
; 166  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 167  :     // in range [_Min_back_shift, _Non_user_size]
; 168  : #ifdef _DEBUG
; 169  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 170  : #else // ^^^ _DEBUG / !_DEBUG vvv
; 171  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 172  : #endif // _DEBUG
; 173  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;
; 174  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	add	rax, -8
	cmp	rax, 31
	jbe	SHORT $LN76@swap
	call	QWORD PTR __imp__invalid_parameter_noinfo_noreturn
	int	3
$LN76@swap:

; 265  :         ::operator delete(_Ptr, _Bytes);

	call	??3@YAXPEAX_K@Z				; operator delete
	xorps	xmm0, xmm0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 2051 :             _Myend   = nullptr;

	mov	QWORD PTR _Tmp$[rsp+48], rbp
	movdqu	XMMWORD PTR _Tmp$[rsp+32], xmm0
$LN58@swap:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring

; 3119 :         _Tidy_deallocate();

	lea	rcx, QWORD PTR _Tmp$[rsp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 102  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+144]
	add	rsp, 96					; 00000060H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN95@swap:
??$swap@UEntry@SarcFile@@$0A@@std@@YAXAEAUEntry@SarcFile@@0@Z ENDP ; std::swap<SarcFile::Entry,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEAPEAUEntry@SarcFile@@AEAPEAU01@$0A@@?$pair@PEAUEntry@SarcFile@@PEAU12@@std@@QEAA@AEAPEAUEntry@SarcFile@@0@Z
_TEXT	SEGMENT
this$ = 8
_Val1$ = 16
_Val2$ = 24
??$?0AEAPEAUEntry@SarcFile@@AEAPEAU01@$0A@@?$pair@PEAUEntry@SarcFile@@PEAU12@@std@@QEAA@AEAPEAUEntry@SarcFile@@0@Z PROC ; std::pair<SarcFile::Entry *,SarcFile::Entry *>::pair<SarcFile::Entry *,SarcFile::Entry *><SarcFile::Entry * &,SarcFile::Entry * &,0>, COMDAT

; 242  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx+8], rax

; 243  :     }

	mov	rax, rcx
	ret	0
??$?0AEAPEAUEntry@SarcFile@@AEAPEAU01@$0A@@?$pair@PEAUEntry@SarcFile@@PEAU12@@std@@QEAA@AEAPEAUEntry@SarcFile@@0@Z ENDP ; std::pair<SarcFile::Entry *,SarcFile::Entry *>::pair<SarcFile::Entry *,SarcFile::Entry *><SarcFile::Entry * &,SarcFile::Entry * &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z
_TEXT	SEGMENT
$T1 = 48
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN11:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 246  :     pair(pair&&)      = default;

	mov	rdx, r8
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [rdi+32]
	call	??0BymlFile@@QEAA@$$QEAV0@@Z
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
?dtor$0@?0???$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z@4HA PROC ; `std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$0
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@$$QEAU31@@Z@4HA ENDP ; `std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@$$QEAU31@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@$$QEAU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN23:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, r8
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 246  :     pair(pair&&)      = default;

	mov	rcx, rdi
	mov	rdx, r8
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r9, QWORD PTR [rbx+48]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	edx, edx

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rcx, QWORD PTR [rbx+40]
	mov	rax, QWORD PTR [rbx+32]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rbx+48], rdx
	mov	QWORD PTR [rbx+40], rdx
	mov	QWORD PTR [rbx+32], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	mov	rbx, QWORD PTR [rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rdi+32], rax
	mov	QWORD PTR [rdi+40], rcx
	mov	QWORD PTR [rdi+48], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@1@$$QEAU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@@std@@YAAEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
_TEXT	SEGMENT
_Location$ = 48
<_Args_0>$dead$ = 56
<_Args_1>$ = 64
<_Args_2>$dead$ = 72
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z PROC ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN20:
	push	rbx
	sub	rsp, 32					; 00000020H
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [r8]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

	mov	rbx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rbx+32], rax
	mov	QWORD PTR [rbx+40], rax
	mov	QWORD PTR [rbx+48], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rbx

; 242  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z ENDP ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z PROC ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z ENDP ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,void *> * &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z
_TEXT	SEGMENT
_Location$ = 48
<_Args_0>$dead$ = 56
<_Args_1>$ = 64
<_Args_2>$dead$ = 72
$T1 = 72
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z PROC ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN14:
	mov	QWORD PTR [rsp+32], r9
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [r8]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	call	??0BymlFile@@QEAA@XZ			; BymlFile::BymlFile
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rbx

; 242  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z ENDP ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Location$ = 48
<_Args_0>$dead$ = 56
<_Args_1>$ = 64
<_Args_2>$dead$ = 72
$T1 = 72
?dtor$1@?0???$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z@4HA PROC ; `std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>'::`1'::dtor$1
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEBUpiecewise_construct_t@2@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$tuple@$$V@2@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEBUpiecewise_construct_t@0@$$QEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@$$QEAV?$tuple@$$V@0@@Z@4HA ENDP ; `std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::piecewise_construct_t const &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z
_TEXT	SEGMENT
_Location$ = 8
<_Args_0>$ = 16
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z PROC ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &,0>, COMDAT

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx

; 242  : }

	ret	0
??$construct_at@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@AEAPEAU12@$0A@@std@@YAPEAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@0@QEAPEAU10@AEAPEAU10@@Z ENDP ; std::construct_at<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> * &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
_TEXT	SEGMENT
_Newnode$1 = 32
$T2 = 48
this$ = 80
<_Val_0>$ = 88
??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>, COMDAT

; 1948 :     _Nodeptr _Buynode(_Valty&&... _Val) {

$LN74:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rsi, rdx

; 1949 :         return _Node::_Buynode(_Getal(), _Get_scary()->_Myhead, _STD forward<_Valty>(_Val)...);

	mov	rbp, QWORD PTR [rcx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR _Newnode$1[rsp], rcx

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR _Newnode$1[rsp+8], 0

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR _Newnode$1[rsp+8], rax
	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T2[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 245  :     pair(const pair&) = default;

	mov	rdx, rsi
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [rsi+32]
	call	??0BymlFile@@QEAA@AEBV0@@Z
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 362  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 363  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 364  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 365  :         _Newnode._Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0

; 1949 :         return _Node::_Buynode(_Getal(), _Get_scary()->_Myhead, _STD forward<_Valty>(_Val)...);

	mov	rax, rdi

; 1950 :     }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newnode$1 = 32
$T2 = 48
this$ = 80
<_Val_0>$ = 88
?dtor$0@?0???$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Newnode$1[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
?dtor$0@?0???$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newnode$1 = 32
$T2 = 48
this$ = 80
<_Val_0>$ = 88
?dtor$1@?0???$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>'::`1'::dtor$1
	mov	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$_Buynode@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@2@$0A@@std@@@std@@IEAAPEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@1@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,BymlFile,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$dead$ = 56
_Val1$ = 64
_Val2$dead$ = 72
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 305  :         : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

$LN16:
	push	rbx
	sub	rsp, 32					; 00000020H

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [r8]

; 305  :         : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

	mov	rbx, rcx

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rbx+32], rax
	mov	QWORD PTR [rbx+40], rax
	mov	QWORD PTR [rbx+48], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 305  :         : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > ><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$dead$ = 56
_Val1$ = 64
_Val2$dead$ = 72
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 305  :         : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

$LN10:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rdx, QWORD PTR [r8]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	call	??0BymlFile@@QEAA@XZ			; BymlFile::BymlFile
	npad	1

; 305  :         : pair(_Val1, _Val2, index_sequence_for<_Types1...>{}, index_sequence_for<_Types2...>{}) {}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$dead$ = 56
_Val1$ = 64
_Val2$dead$ = 72
?dtor$1@?0???$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z@4HA PROC ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$?0AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$Z$$V@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@Upiecewise_construct_t@1@V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$tuple@$$V@1@@Z@4HA ENDP ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
_First$ = 80
_Hole$ = 88
_Top$ = 96
_Val$ = 104
_Pred$dead$ = 112
??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::_Push_heap_by_index<SarcFile::Entry *,SarcFile::Entry,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 6324 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Top, _Ty&& _Val, _Pr _Pred) {

	push	rbx
	push	rbp
	push	rdi
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
	mov	r14, r9
	mov	r15, r8
	mov	rdi, rdx
	mov	rbp, rcx

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

	cmp	r8, rdx
	jge	SHORT $LN18@Push_heap_
	mov	QWORD PTR [rsp+96], rsi
$LL4@Push_heap_:

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

	lea	rbx, QWORD PTR [rdi-1]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	mov	rdx, r14
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6327 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

	sar	rbx, 1

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

	imul	rsi, rbx, 56				; 00000038H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	add	rsi, rbp
	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 6328 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

	jns	SHORT $LN21@Push_heap_

; 6329 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 6330 :         // move _Hole up to parent
; 6331 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

	imul	rdi, rdi, 56				; 00000038H
	mov	rdx, rsi
	add	rdi, rbp
	mov	rcx, rdi
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rsi+32]
	lea	rcx, QWORD PTR [rdi+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 6332 :         _Hole             = _Idx;

	mov	rdi, rbx
	cmp	r15, rbx
	jl	SHORT $LL4@Push_heap_
$LN21@Push_heap_:
	mov	rsi, QWORD PTR [rsp+96]
$LN18@Push_heap_:

; 6333 :     }
; 6334 : 
; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

	imul	rbx, rdi, 56				; 00000038H
	mov	rdx, r14
	add	rbx, rbp
	mov	rcx, rbx
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [r14+32]
	lea	rcx, QWORD PTR [rbx+32]

; 6336 : }

	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	rdi
	pop	rbp
	pop	rbx

; 6333 :     }
; 6334 : 
; 6335 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

	jmp	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=
??$_Push_heap_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::_Push_heap_by_index<SarcFile::Entry *,SarcFile::Entry,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Pop_heap_hole_unchecked@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Val$ = 88
_Pred$ = 96
??$_Pop_heap_hole_unchecked@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::_Pop_heap_hole_unchecked<SarcFile::Entry *,SarcFile::Entry,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 6461 : _CONSTEXPR20 void _Pop_heap_hole_unchecked(_RanIt _First, _RanIt _Last, _RanIt _Dest, _Ty&& _Val, _Pr _Pred) {

	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rdx
	mov	rbp, rcx
	mov	rdx, rcx
	mov	rsi, r9
	mov	rcx, r8
	mov	rbx, r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	rdx, QWORD PTR [rbp+32]
	lea	rcx, QWORD PTR [rbx+32]
	call	??4?$vector@EV?$allocator@E@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::vector<unsigned char,std::allocator<unsigned char> >::operator=

; 6462 :     // pop *_First to *_Dest and reheap
; 6463 :     // precondition: _First != _Last
; 6464 :     // precondition: _First != _Dest
; 6465 :     *_Dest      = _STD move(*_First);
; 6466 :     using _Diff = _Iter_diff_t<_RanIt>;
; 6467 :     _STD _Pop_heap_hole_by_index(

	movzx	eax, BYTE PTR _Pred$[rsp]
	sub	rdi, rbp
	sar	rdi, 3
	mov	r8, 7905747460161236407			; 6db6db6db6db6db7H
	imul	r8, rdi
	mov	r9, rsi
	mov	BYTE PTR _Pred$[rsp], al
	xor	edx, edx
	mov	rcx, rbp

; 6468 :         _First, static_cast<_Diff>(0), static_cast<_Diff>(_Last - _First), _STD forward<_Ty>(_Val), _Pred);
; 6469 : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi

; 6462 :     // pop *_First to *_Dest and reheap
; 6463 :     // precondition: _First != _Last
; 6464 :     // precondition: _First != _Dest
; 6465 :     *_Dest      = _STD move(*_First);
; 6466 :     using _Diff = _Iter_diff_t<_RanIt>;
; 6467 :     _STD _Pop_heap_hole_by_index(

	jmp	??$_Pop_heap_hole_by_index@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@_J1$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ; std::_Pop_heap_hole_by_index<SarcFile::Entry *,SarcFile::Entry,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
??$_Pop_heap_hole_unchecked@PEAUEntry@SarcFile@@U12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00$$QEAU12@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::_Pop_heap_hole_unchecked<SarcFile::Entry *,SarcFile::Entry,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm
;	COMDAT ??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z
_TEXT	SEGMENT
_First$ = 64
_Mid$ = 72
_Last$ = 80
_Pred$dead$ = 88
??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z PROC ; std::_Med3_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >, COMDAT

; 7929 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	mov	rdx, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7929 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

	mov	rsi, r8
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	mov	rcx, rbx
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7931 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

	jns	SHORT $LN2@Med3_unche

; 7932 :         swap(*_Mid, *_First); // intentional ADL

	mov	rdx, rdi
	mov	rcx, rbx
	call	??$swap@UEntry@SarcFile@@$0A@@std@@YAXAEAUEntry@SarcFile@@0@Z ; std::swap<SarcFile::Entry,0>
$LN2@Med3_unche:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	mov	rdx, rbx
	mov	rcx, rsi
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7935 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

	jns	SHORT $LN4@Med3_unche

; 7936 :         swap(*_Last, *_Mid); // intentional ADL

	mov	rdx, rbx
	mov	rcx, rsi
	call	??$swap@UEntry@SarcFile@@$0A@@std@@YAXAEAUEntry@SarcFile@@0@Z ; std::swap<SarcFile::Entry,0>
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\UIActorTool.cpp

; 173  : 						return a.Name < b.Name;

	mov	rdx, rdi
	mov	rcx, rbx
	call	??$?__MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AUstrong_ordering@0@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<=><char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\compare

; 197  :         return _Val._Value < 0;

	test	al, al
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\algorithm

; 7938 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

	jns	SHORT $LN4@Med3_unche

; 7939 :             swap(*_Mid, *_First); // intentional ADL

	mov	rdx, rdi
	mov	rcx, rbx

; 7940 :         }
; 7941 :     }
; 7942 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	pop	rsi
	pop	rbx

; 7939 :             swap(*_Mid, *_First); // intentional ADL

	jmp	??$swap@UEntry@SarcFile@@$0A@@std@@YAXAEAUEntry@SarcFile@@0@Z ; std::swap<SarcFile::Entry,0>
$LN4@Med3_unche:

; 7940 :         }
; 7941 :     }
; 7942 : }

	add	rsp, 32					; 00000020H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
??$_Med3_unchecked@PEAUEntry@SarcFile@@V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@std@@YAXPEAUEntry@SarcFile@@00V<lambda_1>@?N@??DrawActorToolWindow@UIActorTool@@YAXXZ@@Z ENDP ; std::_Med3_unchecked<SarcFile::Entry *,`UIActorTool::DrawActorToolWindow'::`13'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEAPEAUEntry@SarcFile@@@std@@YAAEAPEAUEntry@SarcFile@@AEAPEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEAUEntry@SarcFile@@@std@@YAAEAPEAUEntry@SarcFile@@AEAPEAU12@@Z PROC ; std::forward<SarcFile::Entry * &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEAPEAUEntry@SarcFile@@@std@@YAAEAPEAUEntry@SarcFile@@AEAPEAU12@@Z ENDP ; std::forward<SarcFile::Entry * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z
_TEXT	SEGMENT
$T1 = 48
_Location$ = 48
<_Args_0>$ = 56
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z PROC ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN9:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 246  :     pair(pair&&)      = default;

	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rdi+32]
	lea	rdx, QWORD PTR [rbx+32]
	call	??0BymlFile@@QEAA@$$QEAV0@@Z
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rdi

; 242  : }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z ENDP ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
_Location$ = 48
<_Args_0>$ = 56
?dtor$0@?0???$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z@4HA PROC ; `std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,0>'::`1'::dtor$0
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@$$QEAU10@@Z@4HA ENDP ; `std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@$$QEAU10@@Z
_TEXT	SEGMENT
_Location$ = 48
<_Args_0>$ = 56
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@$$QEAU10@@Z PROC ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN21:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 246  :     pair(pair&&)      = default;

	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rbx+32]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	ecx, ecx
	mov	r9, QWORD PTR [rbx+48]

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rbx+40]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rbx+48], rcx
	mov	QWORD PTR [rbx+40], rcx
	mov	QWORD PTR [rbx+32], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 242  : }

	mov	rbx, QWORD PTR [rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rdi+32], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rdi+40], r8
	mov	QWORD PTR [rdi+48], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 242  : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@U12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@0@QEAU10@$$QEAU10@@Z ENDP ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\type_traits
;	COMDAT ??$forward@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z PROC ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>, COMDAT

; 1584 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, rcx

; 1585 : }

	ret	0
??$forward@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@@std@@YAAEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@AEAU10@@Z ENDP ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree
;	COMDAT ??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z
_TEXT	SEGMENT
_Newnode$ = 32
$T1 = 48
_Al$ = 80
_Myhead$ = 88
<_Val_0>$ = 96
??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z PROC ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>, COMDAT

; 356  :     static _Nodeptr _Buynode(_Alloc& _Al, _Nodeptr _Myhead, _Valty&&... _Val) {

$LN71:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rsi, r8
	mov	rbp, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 1144 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	mov	QWORD PTR _Newnode$[rsp], rcx

; 1151 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	QWORD PTR _Newnode$[rsp+8], 0

; 87   :         return ::operator new(_Bytes);

	mov	ecx, 288				; 00000120H
	call	??2@YAPEAX_K@Z				; operator new
	mov	rdi, rax

; 1152 :         _Ptr = _Al.allocate(1);

	mov	QWORD PTR _Newnode$[rsp+8], rax
	lea	rbx, QWORD PTR [rax+32]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rbx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 245  :     pair(const pair&) = default;

	mov	rdx, rsi
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [rsi+32]
	call	??0BymlFile@@QEAA@AEBV0@@Z
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xtree

; 362  :         _Construct_in_place(_Newnode._Ptr->_Left, _Myhead);

	mov	QWORD PTR [rdi], rbp

; 363  :         _Construct_in_place(_Newnode._Ptr->_Parent, _Myhead);

	mov	QWORD PTR [rdi+8], rbp

; 364  :         _Construct_in_place(_Newnode._Ptr->_Right, _Myhead);

	mov	QWORD PTR [rdi+16], rbp

; 365  :         _Newnode._Ptr->_Color = _Red;

	mov	WORD PTR [rdi+24], 0

; 366  :         _Newnode._Ptr->_Isnil = false;
; 367  :         return _Newnode._Release();

	mov	rax, rdi

; 368  :     }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z ENDP ; std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newnode$ = 32
$T1 = 48
_Al$ = 80
_Myhead$ = 88
<_Val_0>$ = 96
?dtor$0@?0???$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Newnode$[rdx]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >
?dtor$0@?0???$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
_Newnode$ = 32
$T1 = 48
_Al$ = 80
_Myhead$ = 88
<_Val_0>$ = 96
?dtor$1@?0???$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA PROC ; `std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>'::`1'::dtor$1
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0???$_Buynode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@2@@?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@PEAU01@AEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@@Z@4HA ENDP ; `std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *>::_Buynode<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>, COMDAT

; 246  :     pair(pair&&)      = default;

$LN7:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rdi+32]
	lea	rdx, QWORD PTR [rbx+32]
	call	??0BymlFile@@QEAA@$$QEAV0@@Z
	npad	1
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z@4HA PROC ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@$$QEAU01@@Z@4HA ENDP ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@$$QEAU01@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >, COMDAT

; 246  :     pair(pair&&)      = default;

$LN19:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR [rbx+32]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	xor	ecx, ecx
	mov	r9, QWORD PTR [rbx+48]

; 754  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	r8, QWORD PTR [rbx+40]

; 755  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	QWORD PTR [rbx+48], rcx
	mov	QWORD PTR [rbx+40], rcx
	mov	QWORD PTR [rbx+32], rcx

; 246  :     pair(pair&&)      = default;

	mov	rbx, QWORD PTR [rsp+48]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rdi+32], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 246  :     pair(pair&&)      = default;

	mov	rax, rdi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 401  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	mov	QWORD PTR [rdi+40], r8
	mov	QWORD PTR [rdi+48], r9
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 246  :     pair(pair&&)      = default;

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@$$QEAU01@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$dead$ = 64
__formal$dead$ = 72
__formal$dead$ = 80
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > ><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>, COMDAT

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

$LN13:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rdx, QWORD PTR [rdx]
	mov	rbx, rcx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector

; 398  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	eax, eax
	mov	QWORD PTR [rbx+32], rax
	mov	QWORD PTR [rbx+40], rax
	mov	QWORD PTR [rbx+48], rax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$vector@EV?$allocator@E@std@@@2@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > >::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,std::vector<unsigned char,std::allocator<unsigned char> > ><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$dead$ = 64
__formal$dead$ = 72
__formal$dead$ = 80
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>, COMDAT

; 301  :         : first(_Tuple_get<_Indices1>(_STD move(_Val1))...), second(_Tuple_get<_Indices2>(_STD move(_Val2))...) {}

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdx, QWORD PTR [rdx]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	call	??0BymlFile@@QEAA@XZ			; BymlFile::BymlFile
	npad	1
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$dead$ = 64
__formal$dead$ = 72
__formal$dead$ = 80
?dtor$0@?0???$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z@4HA PROC ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$?0V?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$tuple@$$V@1@$0A@$$Z$S@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEAV?$tuple@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@AEAV?$tuple@$$V@1@U?$integer_sequence@_K$0A@@1@U?$integer_sequence@_K$S@1@@Z@4HA ENDP ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile><std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>,std::tuple<>,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z
_TEXT	SEGMENT
$T1 = 48
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>, COMDAT

; 715  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN11:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rbx, rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rdx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 245  :     pair(const pair&) = default;

	mov	rdx, r8
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+32]
	lea	rdx, QWORD PTR [rdi+32]
	call	??0BymlFile@@QEAA@AEBV0@@Z
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xmemory

; 721  :     }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
?dtor$0@?0???$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z@4HA PROC ; `std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>'::`1'::dtor$0
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$construct@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@PEAX@std@@@1@QEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@1@AEAU31@@Z@4HA ENDP ; `std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,void *> > >::construct<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility
;	COMDAT ??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z
_TEXT	SEGMENT
$T1 = 48
_Location$ = 48
<_Args_0>$ = 56
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z PROC ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &,0>, COMDAT

; 240  :     noexcept(::new(static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...))) /* strengthened */ {

$LN9:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	QWORD PTR $T1[rsp], rcx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility

; 245  :     pair(const pair&) = default;

	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rdi+32]
	lea	rdx, QWORD PTR [rbx+32]
	call	??0BymlFile@@QEAA@AEBV0@@Z
	npad	1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xutility

; 241  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

	mov	rax, rdi

; 242  : }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z ENDP ; std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
_Location$ = 48
<_Args_0>$ = 56
?dtor$0@?0???$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z@4HA PROC ; `std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &,0>'::`1'::dtor$0
	mov	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???$construct_at@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@AEAU12@$0A@@std@@YAPEAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@0@QEAU10@AEAU10@@Z@4HA ENDP ; `std::construct_at<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile> &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\utility
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>, COMDAT

; 245  :     pair(const pair&) = default;

$LN7:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rdi+32]
	lea	rdx, QWORD PTR [rbx+32]
	call	??0BymlFile@@QEAA@AEBV0@@Z
	npad	1
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z@4HA PROC ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0???0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VBymlFile@@@std@@QEAA@AEBU01@@Z@4HA ENDP ; `std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,BymlFile>'::`1'::dtor$0
text$x	ENDS
END

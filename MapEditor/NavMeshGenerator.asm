; Listing generated by Microsoft (R) Optimizing Compiler Version 19.37.32822.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_7rcContext@@6B@				; rcContext::`vftable'
PUBLIC	??_R0?AVrcContext@@@8				; rcContext `RTTI Type Descriptor'
PUBLIC	??_R2rcContext@@8				; rcContext::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@rcContext@@8			; rcContext::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4rcContext@@6B@				; rcContext::`RTTI Complete Object Locator'
PUBLIC	??_R3rcContext@@8				; rcContext::`RTTI Class Hierarchy Descriptor'
;	COMDAT ??_R3rcContext@@8
rdata$r	SEGMENT
??_R3rcContext@@8 DD 00H				; rcContext::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2rcContext@@8
rdata$r	ENDS
;	COMDAT ??_R4rcContext@@6B@
rdata$r	SEGMENT
??_R4rcContext@@6B@ DD 01H				; rcContext::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVrcContext@@@8
	DD	imagerel ??_R3rcContext@@8
	DD	imagerel ??_R4rcContext@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@rcContext@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@rcContext@@8 DD imagerel ??_R0?AVrcContext@@@8 ; rcContext::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3rcContext@@8
rdata$r	ENDS
;	COMDAT ??_R2rcContext@@8
rdata$r	SEGMENT
??_R2rcContext@@8 DD imagerel ??_R1A@?0A@EA@rcContext@@8 ; rcContext::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AVrcContext@@@8
data$rs	SEGMENT
??_R0?AVrcContext@@@8 DQ FLAT:??_7type_info@@6B@	; rcContext `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVrcContext@@', 00H
data$rs	ENDS
;	COMDAT ??_7rcContext@@6B@
CONST	SEGMENT
??_7rcContext@@6B@ DQ FLAT:??_R4rcContext@@6B@		; rcContext::`vftable'
	DQ	FLAT:??_ErcContext@@UEAAPEAXI@Z
	DQ	FLAT:?doResetLog@rcContext@@MEAAXXZ
	DQ	FLAT:?doLog@rcContext@@MEAAXW4rcLogCategory@@PEBDH@Z
	DQ	FLAT:?doResetTimers@rcContext@@MEAAXXZ
	DQ	FLAT:?doStartTimer@rcContext@@MEAAXW4rcTimerLabel@@@Z
	DQ	FLAT:?doStopTimer@rcContext@@MEAAXW4rcTimerLabel@@@Z
	DQ	FLAT:?doGetAccumulatedTime@rcContext@@MEBAHW4rcTimerLabel@@@Z
PUBLIC	??$rcSqr@H@@YAHH@Z				; rcSqr<int>
PUBLIC	??$rcIgnoreUnused@W4rcTimerLabel@@@@YAXAEBW4rcTimerLabel@@@Z ; rcIgnoreUnused<enum rcTimerLabel>
PUBLIC	??$rcIgnoreUnused@H@@YAXAEBH@Z			; rcIgnoreUnused<int>
PUBLIC	??$rcIgnoreUnused@PEBD@@YAXAEBQEBD@Z		; rcIgnoreUnused<char const *>
PUBLIC	??$rcIgnoreUnused@W4rcLogCategory@@@@YAXAEBW4rcLogCategory@@@Z ; rcIgnoreUnused<enum rcLogCategory>
PUBLIC	??1NavMeshGenerator@@QEAA@XZ			; NavMeshGenerator::~NavMeshGenerator
PUBLIC	?GetMeshTriangles@NavMeshGenerator@@QEAAXPEAX@Z	; NavMeshGenerator::GetMeshTriangles
PUBLIC	?GetMeshVertices@NavMeshGenerator@@QEAAXPEAX@Z	; NavMeshGenerator::GetMeshVertices
PUBLIC	?GetMeshTriangleCount@NavMeshGenerator@@QEAAHXZ	; NavMeshGenerator::GetMeshTriangleCount
PUBLIC	?GetMeshVertexCount@NavMeshGenerator@@QEAAHXZ	; NavMeshGenerator::GetMeshVertexCount
PUBLIC	?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z ; NavMeshGenerator::BuildNavmeshForMesh
PUBLIC	?SetNavmeshBuildParams@NavMeshGenerator@@QEAAXMMMMMMH@Z ; NavMeshGenerator::SetNavmeshBuildParams
PUBLIC	?rcVcopy@@YAXPEAMPEBM@Z				; rcVcopy
PUBLIC	??_GrcContext@@UEAAPEAXI@Z			; rcContext::`scalar deleting destructor'
PUBLIC	?doGetAccumulatedTime@rcContext@@MEBAHW4rcTimerLabel@@@Z ; rcContext::doGetAccumulatedTime
PUBLIC	?doStopTimer@rcContext@@MEAAXW4rcTimerLabel@@@Z	; rcContext::doStopTimer
PUBLIC	?doStartTimer@rcContext@@MEAAXW4rcTimerLabel@@@Z ; rcContext::doStartTimer
PUBLIC	?doResetTimers@rcContext@@MEAAXXZ		; rcContext::doResetTimers
PUBLIC	?doLog@rcContext@@MEAAXW4rcLogCategory@@PEBDH@Z	; rcContext::doLog
PUBLIC	??1rcContext@@UEAA@XZ				; rcContext::~rcContext
PUBLIC	??0rcContext@@QEAA@_N@Z				; rcContext::rcContext
EXTRN	??_ErcContext@@UEAAPEAXI@Z:PROC			; rcContext::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1NavMeshGenerator@@QEAA@XZ DD imagerel $LN58
	DD	imagerel $LN58+111
	DD	imagerel $unwind$??1NavMeshGenerator@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z DD imagerel $LN247
	DD	imagerel $LN247+1815
	DD	imagerel $unwind$?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNavmeshBuildParams@NavMeshGenerator@@QEAAXMMMMMMH@Z DD imagerel $LN8
	DD	imagerel $LN8+205
	DD	imagerel $unwind$?SetNavmeshBuildParams@NavMeshGenerator@@QEAAXMMMMMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GrcContext@@UEAAPEAXI@Z DD imagerel $LN8
	DD	imagerel $LN8+43
	DD	imagerel $unwind$??_GrcContext@@UEAAPEAXI@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GrcContext@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNavmeshBuildParams@NavMeshGenerator@@QEAAXMMMMMMH@Z DD 063b01H
	DD	02783bH
	DD	03680eH
	DD	030027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z DB 012H
	DB	0aeH
	DB	00H
	DB	0adH, 0eH
	DB	02H
	DB	0a5H, 02H
	DB	04H
	DB	','
	DB	00H
	DB	0feH
	DB	04H
	DB	090H
	DB	00H
	DB	0b9H, 04H
	DB	02H
	DB	'*'
	DB	04H
	DB	','
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z DB 04H
	DB	0aH
	DD	imagerel ??1rcScopedTimer@@QEAA@XZ
	DB	0e0H
	DB	03eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z DB 028H
	DD	imagerel $stateUnwindMap$?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z
	DD	imagerel $ip2state$?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z DD 0153311H
	DD	08a833H
	DD	09982bH
	DD	0a8826H
	DD	0b7821H
	DD	0c681dH
	DD	0243419H
	DD	01a0119H
	DD	0e010f012H
	DD	0c00cd00eH
	DD	06009700aH
	DD	05008H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1NavMeshGenerator@@QEAA@XZ DB 00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1NavMeshGenerator@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1NavMeshGenerator@@QEAA@XZ DB 068H
	DD	imagerel $stateUnwindMap$??1NavMeshGenerator@@QEAA@XZ
	DD	imagerel $ip2state$??1NavMeshGenerator@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1NavMeshGenerator@@QEAA@XZ DD 020619H
	DD	030023206H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1NavMeshGenerator@@QEAA@XZ
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??0rcContext@@QEAA@_N@Z
_TEXT	SEGMENT
this$ = 8
state$dead$ = 16
??0rcContext@@QEAA@_N@Z PROC				; rcContext::rcContext, COMDAT

; 119  : 	inline rcContext(bool state = true) : m_logEnabled(state), m_timerEnabled(state) {}

	lea	rax, OFFSET FLAT:??_7rcContext@@6B@
	mov	WORD PTR [rcx+8], 257			; 00000101H
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0rcContext@@QEAA@_N@Z ENDP				; rcContext::rcContext
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??1rcContext@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1rcContext@@UEAA@XZ PROC				; rcContext::~rcContext, COMDAT

; 120  : 	virtual ~rcContext() {}

	lea	rax, OFFSET FLAT:??_7rcContext@@6B@
	mov	QWORD PTR [rcx], rax
	ret	0
??1rcContext@@UEAA@XZ ENDP				; rcContext::~rcContext
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?doLog@rcContext@@MEAAXW4rcLogCategory@@PEBDH@Z
_TEXT	SEGMENT
this$ = 8
category$ = 16
msg$ = 24
len$ = 32
?doLog@rcContext@@MEAAXW4rcLogCategory@@PEBDH@Z PROC	; rcContext::doLog, COMDAT

; 169  : 	virtual void doLog(const rcLogCategory category, const char* msg, const int len) { rcIgnoreUnused(category); rcIgnoreUnused(msg); rcIgnoreUnused(len); }

	ret	0
?doLog@rcContext@@MEAAXW4rcLogCategory@@PEBDH@Z ENDP	; rcContext::doLog
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?doResetTimers@rcContext@@MEAAXXZ
_TEXT	SEGMENT
this$ = 8
?doResetTimers@rcContext@@MEAAXXZ PROC			; rcContext::doResetTimers, COMDAT

; 172  : 	virtual void doResetTimers() {}

	ret	0
?doResetTimers@rcContext@@MEAAXXZ ENDP			; rcContext::doResetTimers
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?doStartTimer@rcContext@@MEAAXW4rcTimerLabel@@@Z
_TEXT	SEGMENT
this$ = 8
label$ = 16
?doStartTimer@rcContext@@MEAAXW4rcTimerLabel@@@Z PROC	; rcContext::doStartTimer, COMDAT

; 176  : 	virtual void doStartTimer(const rcTimerLabel label) { rcIgnoreUnused(label); }

	ret	0
?doStartTimer@rcContext@@MEAAXW4rcTimerLabel@@@Z ENDP	; rcContext::doStartTimer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?doStopTimer@rcContext@@MEAAXW4rcTimerLabel@@@Z
_TEXT	SEGMENT
this$ = 8
label$ = 16
?doStopTimer@rcContext@@MEAAXW4rcTimerLabel@@@Z PROC	; rcContext::doStopTimer, COMDAT

; 180  : 	virtual void doStopTimer(const rcTimerLabel label) { rcIgnoreUnused(label); }

	ret	0
?doStopTimer@rcContext@@MEAAXW4rcTimerLabel@@@Z ENDP	; rcContext::doStopTimer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?doGetAccumulatedTime@rcContext@@MEBAHW4rcTimerLabel@@@Z
_TEXT	SEGMENT
this$ = 8
label$ = 16
?doGetAccumulatedTime@rcContext@@MEBAHW4rcTimerLabel@@@Z PROC ; rcContext::doGetAccumulatedTime, COMDAT

; 185  : 	virtual int doGetAccumulatedTime(const rcTimerLabel label) const { rcIgnoreUnused(label); return -1; }

	mov	eax, -1
	ret	0
?doGetAccumulatedTime@rcContext@@MEBAHW4rcTimerLabel@@@Z ENDP ; rcContext::doGetAccumulatedTime
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GrcContext@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GrcContext@@UEAAPEAXI@Z PROC				; rcContext::`scalar deleting destructor', COMDAT
$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7rcContext@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN4@scalar
	mov	edx, 16
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GrcContext@@UEAAPEAXI@Z ENDP				; rcContext::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ?rcVcopy@@YAXPEAMPEBM@Z
_TEXT	SEGMENT
dest$ = 8
v$ = 16
?rcVcopy@@YAXPEAMPEBM@Z PROC				; rcVcopy, COMDAT

; 774  : 	dest[0] = v[0];

	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax

; 775  : 	dest[1] = v[1];

	mov	eax, DWORD PTR [rdx+4]
	mov	DWORD PTR [rcx+4], eax

; 776  : 	dest[2] = v[2];

	mov	eax, DWORD PTR [rdx+8]
	mov	DWORD PTR [rcx+8], eax

; 777  : }

	ret	0
?rcVcopy@@YAXPEAMPEBM@Z ENDP				; rcVcopy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
;	COMDAT ?SetNavmeshBuildParams@NavMeshGenerator@@QEAAXMMMMMMH@Z
_TEXT	SEGMENT
this$ = 80
CS$ = 88
CH$ = 96
WalkableSlopeAngle$ = 104
WalkableHeight$ = 112
WalkableClimb$ = 120
WalkableRadius$ = 128
MinRegionArea$dead$ = 136
?SetNavmeshBuildParams@NavMeshGenerator@@QEAAXMMMMMMH@Z PROC ; NavMeshGenerator::SetNavmeshBuildParams, COMDAT

; 7    : {

$LN8:
	push	rbx
	sub	rsp, 64					; 00000040H
	xorps	xmm0, xmm0
	movaps	XMMWORD PTR [rsp+48], xmm6

; 8    :     memset(&mConfig, 0, sizeof(mConfig));

	movups	XMMWORD PTR [rcx], xmm0
	xor	eax, eax
	mov	rbx, rcx
	movups	XMMWORD PTR [rcx+16], xmm0
	movups	XMMWORD PTR [rcx+32], xmm0
	movups	XMMWORD PTR [rcx+48], xmm0
	movups	XMMWORD PTR [rcx+64], xmm0
	mov	QWORD PTR [rcx+80], rax

; 9    :     mConfig.cs = CS;
; 10   :     mConfig.ch = CH;
; 11   :     mConfig.walkableSlopeAngle = WalkableSlopeAngle;
; 12   :     mConfig.walkableHeight = (int)std::ceilf(WalkableHeight / CH);

	movss	xmm0, DWORD PTR WalkableHeight$[rsp]
	movaps	xmm6, xmm2
	mov	DWORD PTR [rcx+88], eax
	movaps	XMMWORD PTR [rsp+32], xmm7
	movaps	xmm7, xmm1
	divss	xmm0, xmm6
	movss	DWORD PTR [rcx+16], xmm7
	movss	DWORD PTR [rcx+20], xmm6
	movss	DWORD PTR [rcx+48], xmm3
	call	ceilf
	cvttss2si eax, xmm0

; 13   :     mConfig.walkableClimb = (int)std::floorf(WalkableClimb / CH);

	movss	xmm0, DWORD PTR WalkableClimb$[rsp]
	divss	xmm0, xmm6
	mov	DWORD PTR [rbx+52], eax
	call	floorf
	cvttss2si eax, xmm0

; 14   :     mConfig.walkableRadius = (int)std::ceilf(WalkableRadius / CS);

	movss	xmm0, DWORD PTR WalkableRadius$[rsp]
	divss	xmm0, xmm7
	mov	DWORD PTR [rbx+56], eax
	call	ceilf

; 15   :     mConfig.maxEdgeLen = (int)12;
; 16   :     mConfig.maxSimplificationError = 1.3f;
; 17   :     mConfig.minRegionArea = (int)rcSqr(MinRegionArea); // Note: area = size*size
; 18   :     mConfig.mergeRegionArea = (int)rcSqr(20); // Note: area = size*size
; 19   :     mConfig.maxVertsPerPoly = 3;
; 20   :     mConfig.detailSampleDist = 6;
; 21   :     mConfig.detailSampleMaxError = 1;
; 22   : 
; 23   : }

	movaps	xmm6, XMMWORD PTR [rsp+48]
	movaps	xmm7, XMMWORD PTR [rsp+32]
	cvttss2si eax, xmm0
	mov	DWORD PTR [rbx+64], 12
	mov	DWORD PTR [rbx+68], 1067869798		; 3fa66666H
	mov	DWORD PTR [rbx+72], 9
	mov	DWORD PTR [rbx+76], 400			; 00000190H
	mov	DWORD PTR [rbx+80], 3
	mov	DWORD PTR [rbx+84], 1086324736		; 40c00000H
	mov	DWORD PTR [rbx+88], 1065353216		; 3f800000H
	mov	DWORD PTR [rbx+60], eax
	add	rsp, 64					; 00000040H
	pop	rbx
	ret	0
?SetNavmeshBuildParams@NavMeshGenerator@@QEAAXMMMMMMH@Z ENDP ; NavMeshGenerator::SetNavmeshBuildParams
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastRasterization.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastRasterization.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastRasterization.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
;	COMDAT ?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z
_TEXT	SEGMENT
Indices$GSCopy$1$ = 96
ptr$4 = 96
ptr$5 = 96
ptr$6 = 96
flagMergeThreshold$1$ = 104
ptr$7 = 104
$T8 = 104
timer$9 = 112
this$ = 272
Vertices$ = 280
VerticesCount$ = 288
Indices$ = 296
IndicesCount$ = 304
?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z PROC ; NavMeshGenerator::BuildNavmeshForMesh, COMDAT

; 26   : {

$LN247:
	mov	rax, rsp
	mov	QWORD PTR [rax+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 208				; 000000d0H
	movaps	XMMWORD PTR [rax-72], xmm6
	movaps	XMMWORD PTR [rax-88], xmm7
	movaps	XMMWORD PTR [rax-104], xmm8
	movaps	XMMWORD PTR [rax-120], xmm9
	movaps	XMMWORD PTR [rax-136], xmm10
	mov	r15, r9
	mov	QWORD PTR Indices$GSCopy$1$[rsp], r9
	movsxd	rsi, r8d
	mov	rbx, rdx
	mov	rdi, rcx
	mov	ebp, DWORD PTR IndicesCount$[rsp]

; 27   :     if (mContext == nullptr)

	cmp	QWORD PTR [rcx+104], 0
	jne	SHORT $LN8@BuildNavme

; 28   :         mContext = new rcContext();

	mov	ecx, 16
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T8[rsp], rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 119  : 	inline rcContext(bool state = true) : m_logEnabled(state), m_timerEnabled(state) {}

	lea	rcx, OFFSET FLAT:??_7rcContext@@6B@
	mov	QWORD PTR [rax], rcx
	mov	WORD PTR [rax+8], 257			; 00000101H
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 28   :         mContext = new rcContext();

	mov	QWORD PTR [rdi+104], rax
$LN8@BuildNavme:

; 29   : 
; 30   :     // Calculate bounding box
; 31   :     for (int i = 0; i < VerticesCount; i++) {

	xor	r14d, r14d
	mov	ecx, r14d
	test	esi, esi
	jle	$LN3@BuildNavme
$LL4@BuildNavme:

; 32   :         for (int j = 0; j < 3; j++) {
; 33   :             if (i == 0) {

	test	rcx, rcx
	jne	SHORT $LN9@BuildNavme

; 34   :                 mBoundingBoxMin[j] = Vertices[j];

	mov	eax, DWORD PTR [rbx]
	mov	DWORD PTR [rdi+112], eax

; 35   :                 mBoundingBoxMax[j] = Vertices[j];

	mov	eax, DWORD PTR [rbx]
	mov	DWORD PTR [rdi+124], eax

; 34   :                 mBoundingBoxMin[j] = Vertices[j];

	mov	eax, DWORD PTR [rbx+4]
	mov	DWORD PTR [rdi+116], eax

; 35   :                 mBoundingBoxMax[j] = Vertices[j];

	mov	eax, DWORD PTR [rbx+4]
	mov	DWORD PTR [rdi+128], eax

; 34   :                 mBoundingBoxMin[j] = Vertices[j];

	mov	eax, DWORD PTR [rbx+8]
	mov	DWORD PTR [rdi+120], eax

; 35   :                 mBoundingBoxMax[j] = Vertices[j];

	mov	eax, DWORD PTR [rbx+8]
	mov	DWORD PTR [rdi+132], eax

; 36   :             }

	jmp	SHORT $LN216@BuildNavme
$LN9@BuildNavme:

; 37   :             else {
; 38   :                 float v = Vertices[i * 3 + j];

	lea	rax, QWORD PTR [rcx+rcx*2]
	movss	xmm1, DWORD PTR [rbx+rax*4]

; 39   :                 if (v < mBoundingBoxMin[j]) {

	movss	xmm0, DWORD PTR [rdi+112]
	comiss	xmm0, xmm1
	jbe	SHORT $LN11@BuildNavme

; 40   :                     mBoundingBoxMin[j] = v;

	movss	DWORD PTR [rdi+112], xmm1
$LN11@BuildNavme:

; 41   :                 }
; 42   :                 if (v > mBoundingBoxMax[j]) {

	comiss	xmm1, DWORD PTR [rdi+124]
	jbe	SHORT $LN210@BuildNavme

; 43   :                     mBoundingBoxMax[j] = v;

	movss	DWORD PTR [rdi+124], xmm1
$LN210@BuildNavme:

; 37   :             else {
; 38   :                 float v = Vertices[i * 3 + j];

	movss	xmm1, DWORD PTR [rbx+rax*4+4]

; 39   :                 if (v < mBoundingBoxMin[j]) {

	movss	xmm0, DWORD PTR [rdi+116]
	comiss	xmm0, xmm1
	jbe	SHORT $LN211@BuildNavme

; 40   :                     mBoundingBoxMin[j] = v;

	movss	DWORD PTR [rdi+116], xmm1
$LN211@BuildNavme:

; 41   :                 }
; 42   :                 if (v > mBoundingBoxMax[j]) {

	comiss	xmm1, DWORD PTR [rdi+128]
	jbe	SHORT $LN214@BuildNavme

; 43   :                     mBoundingBoxMax[j] = v;

	movss	DWORD PTR [rdi+128], xmm1
$LN214@BuildNavme:

; 37   :             else {
; 38   :                 float v = Vertices[i * 3 + j];

	movss	xmm1, DWORD PTR [rbx+rax*4+8]

; 39   :                 if (v < mBoundingBoxMin[j]) {

	movss	xmm0, DWORD PTR [rdi+120]
	comiss	xmm0, xmm1
	jbe	SHORT $LN215@BuildNavme

; 40   :                     mBoundingBoxMin[j] = v;

	movss	DWORD PTR [rdi+120], xmm1
$LN215@BuildNavme:

; 41   :                 }
; 42   :                 if (v > mBoundingBoxMax[j]) {

	comiss	xmm1, DWORD PTR [rdi+132]
	jbe	SHORT $LN216@BuildNavme

; 43   :                     mBoundingBoxMax[j] = v;

	movss	DWORD PTR [rdi+132], xmm1
$LN216@BuildNavme:

; 29   : 
; 30   :     // Calculate bounding box
; 31   :     for (int i = 0; i < VerticesCount; i++) {

	inc	rcx
	cmp	rcx, rsi
	jl	$LL4@BuildNavme
$LN3@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 774  : 	dest[0] = v[0];

	movss	xmm1, DWORD PTR [rdi+112]
	movss	DWORD PTR [rdi+24], xmm1

; 775  : 	dest[1] = v[1];

	mov	eax, DWORD PTR [rdi+116]
	mov	DWORD PTR [rdi+28], eax

; 776  : 	dest[2] = v[2];

	mov	eax, DWORD PTR [rdi+120]
	mov	DWORD PTR [rdi+32], eax

; 774  : 	dest[0] = v[0];

	movss	xmm0, DWORD PTR [rdi+124]
	movss	DWORD PTR [rdi+36], xmm0

; 775  : 	dest[1] = v[1];

	mov	eax, DWORD PTR [rdi+128]
	mov	DWORD PTR [rdi+40], eax

; 776  : 	dest[2] = v[2];

	mov	eax, DWORD PTR [rdi+132]
	mov	DWORD PTR [rdi+44], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 302  : 	*sizeX = (int)((maxBounds[0] - minBounds[0]) / cellSize + 0.5f);

	subss	xmm0, xmm1
	divss	xmm0, DWORD PTR [rdi+16]
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	mov	DWORD PTR [rdi], eax

; 303  : 	*sizeZ = (int)((maxBounds[2] - minBounds[2]) / cellSize + 0.5f);

	movss	xmm0, DWORD PTR [rdi+44]
	subss	xmm0, DWORD PTR [rdi+32]
	divss	xmm0, DWORD PTR [rdi+16]
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	mov	DWORD PTR [rdi+4], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	ecx, 64					; 00000040H
	call	QWORD PTR __imp_malloc
	mov	rsi, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 35   : 	T* ptr = (T*)rcAlloc(sizeof(T), allocLifetime);

	mov	QWORD PTR ptr$7[rsp], rax

; 36   : 	::new(rcNewTag(), (void*)ptr) T();

	test	rax, rax
	je	SHORT $LN42@BuildNavme

; 97   : : width()

	mov	QWORD PTR [rax], r14

; 98   : , height()
; 99   : , bmin()

	xor	eax, eax
	mov	QWORD PTR [rsi+8], rax
	mov	DWORD PTR [rsi+16], eax

; 100  : , bmax()

	mov	QWORD PTR [rsi+20], rax
	mov	QWORD PTR [rsi+28], rax

; 101  : , cs()
; 102  : , ch()

	mov	DWORD PTR [rsi+36], r14d

; 103  : , spans()

	mov	QWORD PTR [rsi+40], r14

; 104  : , pools()

	mov	QWORD PTR [rsi+48], r14

; 105  : , freelist()

	mov	QWORD PTR [rsi+56], r14
$LN42@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 55   :     if (!HeightField) {

	test	rsi, rsi
	je	$LN232@BuildNavme

; 56   :         return false;
; 57   :     }
; 58   :     if (!rcCreateHeightfield(mContext, *HeightField, mConfig.width, mConfig.height, mConfig.bmin, mConfig.bmax, mConfig.cs,

	movss	xmm1, DWORD PTR [rdi+20]
	movss	xmm0, DWORD PTR [rdi+16]
	mov	ecx, DWORD PTR [rdi+4]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 312  : 	heightfield.width = sizeX;

	mov	eax, DWORD PTR [rdi]
	mov	DWORD PTR [rsi], eax

; 313  : 	heightfield.height = sizeZ;

	mov	DWORD PTR [rsi+4], ecx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 774  : 	dest[0] = v[0];

	mov	eax, DWORD PTR [rdi+24]
	mov	DWORD PTR [rsi+8], eax

; 775  : 	dest[1] = v[1];

	mov	eax, DWORD PTR [rdi+28]
	mov	DWORD PTR [rsi+12], eax

; 776  : 	dest[2] = v[2];

	mov	eax, DWORD PTR [rdi+32]
	mov	DWORD PTR [rsi+16], eax

; 774  : 	dest[0] = v[0];

	mov	eax, DWORD PTR [rdi+36]
	mov	DWORD PTR [rsi+20], eax

; 775  : 	dest[1] = v[1];

	mov	eax, DWORD PTR [rdi+40]
	mov	DWORD PTR [rsi+24], eax

; 776  : 	dest[2] = v[2];

	mov	eax, DWORD PTR [rdi+44]
	mov	DWORD PTR [rsi+28], eax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 316  : 	heightfield.cs = cellSize;

	movss	DWORD PTR [rsi+32], xmm0

; 317  : 	heightfield.ch = cellHeight;

	movss	DWORD PTR [rsi+36], xmm1

; 318  : 	heightfield.spans = (rcSpan**)rcAlloc(sizeof(rcSpan*) * heightfield.width * heightfield.height, RC_ALLOC_PERM);

	movsxd	rcx, DWORD PTR [rsi]
	movsxd	rax, DWORD PTR [rsi+4]
	imul	rcx, rax
	shl	rcx, 3
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 318  : 	heightfield.spans = (rcSpan**)rcAlloc(sizeof(rcSpan*) * heightfield.width * heightfield.height, RC_ALLOC_PERM);

	mov	QWORD PTR [rsi+40], rax

; 319  : 	if (!heightfield.spans)

	test	rax, rax
	je	$LN232@BuildNavme

; 320  : 	{
; 321  : 		return false;
; 322  : 	}
; 323  : 	memset(heightfield.spans, 0, sizeof(rcSpan*) * heightfield.width * heightfield.height);

	movsxd	r8, DWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rsi+4]
	imul	r8, rcx
	shl	r8, 3
	xor	edx, edx
	mov	rcx, rax
	call	memset
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 63   :     auto* triareas = new unsigned char[IndicesCount / 3];

	mov	eax, 1431655766				; 55555556H
	imul	ebp
	mov	eax, edx
	shr	eax, 31
	add	edx, eax
	movsxd	r12, edx
	mov	rcx, r12
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	r13, rax

; 64   :     memset(triareas, 0, (IndicesCount / 3) * sizeof(unsigned char));

	mov	r8, r12
	xor	edx, edx
	mov	rcx, rax
	call	memset

; 65   :     rcMarkWalkableTriangles(mContext, mConfig.walkableSlopeAngle, Vertices, VerticesCount, Indices, IndicesCount / 3, triareas);

	movss	xmm0, DWORD PTR [rdi+48]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 344  : 	const float walkableThr = cosf(walkableSlopeAngle / 180.0f * RC_PI);

	divss	xmm0, DWORD PTR __real@43340000
	mulss	xmm0, DWORD PTR __real@40490fdb
	call	cosf
	movaps	xmm10, xmm0

; 345  : 
; 346  : 	float norm[3];
; 347  : 
; 348  : 	for (int i = 0; i < numTris; ++i)

	movss	xmm9, DWORD PTR __real@3f800000
	test	r12, r12
	jle	$LN68@BuildNavme
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 63   :     auto* triareas = new unsigned char[IndicesCount / 3];

	add	r15, 4
	npad	13
$LL69@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 351  : 		calcTriNormal(&verts[tri[0] * 3], &verts[tri[1] * 3], &verts[tri[2] * 3], norm);

	mov	eax, DWORD PTR [r15+4]
	lea	ecx, DWORD PTR [rax+rax*2]
	movsxd	r8, ecx
	mov	eax, DWORD PTR [r15]
	lea	ecx, DWORD PTR [rax+rax*2]
	movsxd	rdx, ecx
	mov	eax, DWORD PTR [r15-4]
	lea	eax, DWORD PTR [rax+rax*2]
	cdqe
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 744  : 	dest[0] = v1[0]-v2[0];

	movss	xmm6, DWORD PTR [rbx+rdx*4]
	subss	xmm6, DWORD PTR [rbx+rax*4]

; 745  : 	dest[1] = v1[1]-v2[1];

	movss	xmm5, DWORD PTR [rbx+rdx*4+4]
	subss	xmm5, DWORD PTR [rbx+rax*4+4]

; 746  : 	dest[2] = v1[2]-v2[2];

	movss	xmm3, DWORD PTR [rbx+rdx*4+8]
	subss	xmm3, DWORD PTR [rbx+rax*4+8]

; 744  : 	dest[0] = v1[0]-v2[0];

	movss	xmm4, DWORD PTR [rbx+r8*4]
	subss	xmm4, DWORD PTR [rbx+rax*4]

; 745  : 	dest[1] = v1[1]-v2[1];

	movss	xmm7, DWORD PTR [rbx+r8*4+4]
	subss	xmm7, DWORD PTR [rbx+rax*4+4]

; 746  : 	dest[2] = v1[2]-v2[2];

	movss	xmm2, DWORD PTR [rbx+r8*4+8]
	subss	xmm2, DWORD PTR [rbx+rax*4+8]

; 701  : 	dest[0] = v1[1]*v2[2] - v1[2]*v2[1];

	movaps	xmm1, xmm2
	mulss	xmm1, xmm5
	movaps	xmm0, xmm7
	mulss	xmm0, xmm3
	subss	xmm1, xmm0

; 702  : 	dest[1] = v1[2]*v2[0] - v1[0]*v2[2];

	movaps	xmm8, xmm4
	mulss	xmm8, xmm3
	mulss	xmm2, xmm6
	subss	xmm8, xmm2

; 703  : 	dest[2] = v1[0]*v2[1] - v1[1]*v2[0];

	mulss	xmm7, xmm6
	mulss	xmm4, xmm5
	subss	xmm7, xmm4

; 674  : template<class T> inline T rcSqr(T a) { return a * a; }

	movaps	xmm2, xmm8
	mulss	xmm2, xmm8
	mulss	xmm1, xmm1

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	addss	xmm2, xmm1

; 674  : template<class T> inline T rcSqr(T a) { return a * a; }

	mulss	xmm7, xmm7

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	addss	xmm2, xmm7
	xorps	xmm0, xmm0
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 55   : 	return sqrtf(x);

	ucomiss	xmm0, xmm2
	ja	SHORT $LN242@BuildNavme
	xorps	xmm0, xmm0
	sqrtss	xmm0, xmm2
	jmp	SHORT $LN243@BuildNavme
$LN242@BuildNavme:
	movaps	xmm0, xmm2
	call	sqrtf
$LN243@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 807  : 	float d = 1.0f / rcSqrt(rcSqr(v[0]) + rcSqr(v[1]) + rcSqr(v[2]));

	movaps	xmm1, xmm9
	divss	xmm1, xmm0

; 808  : 	v[0] *= d;
; 809  : 	v[1] *= d;

	mulss	xmm8, xmm1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 353  : 		if (norm[1] > walkableThr)

	comiss	xmm8, xmm10
	jbe	SHORT $LN67@BuildNavme

; 354  : 		{
; 355  : 			triAreaIDs[i] = RC_WALKABLE_AREA;

	mov	BYTE PTR [r14+r13], 63			; 0000003fH
$LN67@BuildNavme:

; 345  : 
; 346  : 	float norm[3];
; 347  : 
; 348  : 	for (int i = 0; i < numTris; ++i)

	inc	r14
	add	r15, 12
	cmp	r14, r12
	jl	$LL69@BuildNavme
$LN68@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 66   :     if (!rcRasterizeTriangles(mContext, Vertices, VerticesCount, Indices, triareas, IndicesCount / 3, *HeightField,

	mov	eax, DWORD PTR [rdi+56]
	mov	DWORD PTR flagMergeThreshold$1$[rsp], eax
	mov	rbp, QWORD PTR [rdi+104]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastRasterization.cpp

; 482  : 	rcAssert(context != NULL);

	mov	rax, QWORD PTR ?sRecastAssertFailFunc@@3P6AXPEBD0H@ZEA
	test	rax, rax
	je	SHORT $LN96@BuildNavme
	test	rbp, rbp
	jne	SHORT $LN96@BuildNavme
	mov	r8d, 482				; 000001e2H
	lea	rdx, OFFSET FLAT:??_C@_0HD@IMPAODNN@H?3?2Paul?2switchemulator?2Zelda?5To@
	lea	rcx, OFFSET FLAT:??_C@_0BA@GEKLAGIM@context?5?$CB?$DN?5NULL@
	call	rax
$LN96@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 202  : 	inline rcScopedTimer(rcContext* ctx, const rcTimerLabel label) : m_ctx(ctx), m_label(label) { m_ctx->startTimer(m_label); }

	mov	QWORD PTR timer$9[rsp], rbp
	mov	DWORD PTR timer$9[rsp+8], 2

; 150  : 	inline void startTimer(const rcTimerLabel label) { if (m_timerEnabled) doStartTimer(label); }

	cmp	BYTE PTR [rbp+9], 0
	je	SHORT $LN103@BuildNavme
	mov	rax, QWORD PTR [rbp]
	mov	edx, 2
	mov	rcx, rbp
	call	QWORD PTR [rax+32]
	npad	1
$LN103@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastRasterization.cpp

; 487  : 	const float inverseCellSize = 1.0f / heightfield.cs;

	movaps	xmm6, xmm9
	divss	xmm6, DWORD PTR [rsi+32]

; 488  : 	const float inverseCellHeight = 1.0f / heightfield.ch;

	divss	xmm9, DWORD PTR [rsi+36]

; 489  : 	for (int triIndex = 0; triIndex < numTris; ++triIndex)

	xor	r15d, r15d
	test	r12, r12
	jle	$LN92@BuildNavme

; 483  : 
; 484  : 	rcScopedTimer timer(context, RC_TIMER_RASTERIZE_TRIANGLES);

	mov	r14, QWORD PTR Indices$GSCopy$1$[rsp]
	add	r14, 8
	npad	10
$LL93@BuildNavme:

; 490  : 	{
; 491  : 		const float* v0 = &verts[tris[triIndex * 3 + 0] * 3];

	mov	eax, DWORD PTR [r14-8]
	lea	eax, DWORD PTR [rax+rax*2]
	cdqe
	lea	rcx, QWORD PTR [rbx+rax*4]

; 492  : 		const float* v1 = &verts[tris[triIndex * 3 + 1] * 3];

	mov	eax, DWORD PTR [r14-4]
	lea	eax, DWORD PTR [rax+rax*2]
	cdqe
	lea	rdx, QWORD PTR [rbx+rax*4]

; 493  : 		const float* v2 = &verts[tris[triIndex * 3 + 2] * 3];

	mov	eax, DWORD PTR [r14]
	lea	eax, DWORD PTR [rax+rax*2]
	cdqe
	lea	r8, QWORD PTR [rbx+rax*4]

; 494  : 		if (!rasterizeTri(v0, v1, v2, triAreaIDs[triIndex], heightfield, heightfield.bmin, heightfield.bmax, heightfield.cs, inverseCellSize, inverseCellHeight, flagMergeThreshold))

	mov	eax, DWORD PTR flagMergeThreshold$1$[rsp]
	mov	DWORD PTR [rsp+80], eax
	movss	DWORD PTR [rsp+72], xmm9
	movss	DWORD PTR [rsp+64], xmm6
	movss	xmm0, DWORD PTR [rsi+32]
	movss	DWORD PTR [rsp+56], xmm0
	lea	rax, QWORD PTR [rsi+20]
	mov	QWORD PTR [rsp+48], rax
	lea	rax, QWORD PTR [rsi+8]
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], rsi
	movzx	r9d, BYTE PTR [r15+r13]
	call	?rasterizeTri@@YA_NPEBM00EAEAUrcHeightfield@@00MMMH@Z ; rasterizeTri
	test	al, al
	je	$LN203@BuildNavme

; 489  : 	for (int triIndex = 0; triIndex < numTris; ++triIndex)

	inc	r15
	add	r14, 12
	cmp	r15, r12
	jl	SHORT $LL93@BuildNavme
$LN92@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 154  : 	inline void stopTimer(const rcTimerLabel label) { if (m_timerEnabled) doStopTimer(label); }

	cmp	BYTE PTR [rbp+9], 0
	je	SHORT $LN115@BuildNavme
	mov	rax, QWORD PTR [rbp]
	mov	edx, 2
	mov	rcx, rbp
	call	QWORD PTR [rax+40]
	npad	1
$LN115@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 71   :     delete[] triareas;

	mov	rcx, r13
	call	??_V@YAXPEAX@Z				; operator delete[]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	ecx, 96					; 00000060H
	call	QWORD PTR __imp_malloc
	mov	r14, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 35   : 	T* ptr = (T*)rcAlloc(sizeof(T), allocLifetime);

	mov	QWORD PTR ptr$5[rsp], rax

; 36   : 	::new(rcNewTag(), (void*)ptr) T();

	xor	ebp, ebp
	test	rax, rax
	je	SHORT $LN121@BuildNavme

; 133  : : width()

	mov	QWORD PTR [rax], rbp

; 134  : , height()
; 135  : , spanCount()

	mov	QWORD PTR [rax+8], rbp

; 136  : , walkableHeight()
; 137  : , walkableClimb()

	mov	QWORD PTR [rax+16], rbp

; 138  : , borderSize()
; 139  : , maxDistance()

	mov	DWORD PTR [rax+24], ebp

; 140  : , maxRegions()
; 141  : , bmin()

	xor	eax, eax
	mov	QWORD PTR [r14+28], rax
	mov	DWORD PTR [r14+36], eax

; 142  : , bmax()

	mov	QWORD PTR [r14+40], rax
	mov	QWORD PTR [r14+48], rax

; 143  : , cs()
; 144  : , ch()

	mov	DWORD PTR [r14+56], ebp

; 145  : , cells()

	mov	QWORD PTR [r14+64], rbp

; 146  : , spans()

	mov	QWORD PTR [r14+72], rbp

; 147  : , dist()

	mov	QWORD PTR [r14+80], rbp

; 148  : , areas()

	mov	QWORD PTR [r14+88], rbp
$LN121@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 77   :     if (!cHeightField) {

	test	r14, r14
	je	$LN232@BuildNavme

; 78   :         return false;
; 79   :     }
; 80   :     if (!rcBuildCompactHeightfield(mContext, mConfig.walkableHeight, mConfig.walkableClimb, *HeightField, *cHeightField)) {

	mov	QWORD PTR [rsp+32], r14
	mov	r9, rsi
	mov	r8d, DWORD PTR [rdi+56]
	mov	edx, DWORD PTR [rdi+52]
	mov	rcx, QWORD PTR [rdi+104]
	call	?rcBuildCompactHeightfield@@YA_NPEAVrcContext@@HHAEBUrcHeightfield@@AEAUrcCompactHeightfield@@@Z ; rcBuildCompactHeightfield
	test	al, al
	je	$LN232@BuildNavme
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 112  : 	rcFree(spans);

	mov	rcx, QWORD PTR [rsi+40]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN202@BuildNavme

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN202@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 114  : 	while (pools)

	mov	rcx, QWORD PTR [rsi+48]
	test	rcx, rcx
	je	SHORT $LN144@BuildNavme
	npad	8
$LL143@BuildNavme:

; 115  : 	{
; 116  : 		rcSpanPool* next = pools->next;

	mov	rbx, QWORD PTR [rcx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 118  : 		pools = next;

	mov	QWORD PTR [rsi+48], rbx
	mov	rcx, rbx

; 114  : 	while (pools)

	test	rbx, rbx
	jne	SHORT $LL143@BuildNavme
$LN144@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 28   : 	free(ptr);

	mov	rcx, rsi
	call	QWORD PTR __imp_free
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 85   :     if (!rcErodeWalkableArea(mContext, mConfig.walkableRadius, *cHeightField)) {

	mov	r8, r14
	mov	edx, DWORD PTR [rdi+60]
	mov	rcx, QWORD PTR [rdi+104]
	call	?rcErodeWalkableArea@@YA_NPEAVrcContext@@HAEAUrcCompactHeightfield@@@Z ; rcErodeWalkableArea
	test	al, al
	je	$LN232@BuildNavme

; 86   :         return false;
; 87   :     }
; 88   : 
; 89   :     // Use watershed partitioning
; 90   :     if (!rcBuildDistanceField(mContext, *cHeightField)) {

	mov	rdx, r14
	mov	rcx, QWORD PTR [rdi+104]
	call	?rcBuildDistanceField@@YA_NPEAVrcContext@@AEAUrcCompactHeightfield@@@Z ; rcBuildDistanceField
	test	al, al
	je	$LN232@BuildNavme

; 91   :         return false;
; 92   :     }
; 93   : 
; 94   :     if (!rcBuildRegions(mContext, *cHeightField, 0, mConfig.minRegionArea, mConfig.mergeRegionArea)) {

	mov	eax, DWORD PTR [rdi+76]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR [rdi+72]
	mov	rdx, r14
	mov	rcx, QWORD PTR [rdi+104]
	call	?rcBuildRegions@@YA_NPEAVrcContext@@AEAUrcCompactHeightfield@@HHH@Z ; rcBuildRegions
	test	al, al
	je	$LN232@BuildNavme
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	ecx, 64					; 00000040H
	call	QWORD PTR __imp_malloc
	mov	rbx, rax
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 35   : 	T* ptr = (T*)rcAlloc(sizeof(T), allocLifetime);

	mov	QWORD PTR ptr$6[rsp], rax

; 36   : 	::new(rcNewTag(), (void*)ptr) T();

	test	rax, rax
	je	SHORT $LN172@BuildNavme

; 199  : : conts()

	mov	QWORD PTR [rax], rbp

; 200  : , nconts()

	mov	DWORD PTR [rax+8], ebp

; 201  : , bmin()

	xor	eax, eax
	mov	QWORD PTR [rbx+12], rax
	mov	DWORD PTR [rbx+20], eax

; 202  : , bmax()

	mov	QWORD PTR [rbx+24], rax
	mov	QWORD PTR [rbx+32], rax

; 203  : , cs()
; 204  : , ch()

	mov	QWORD PTR [rbx+40], rax

; 205  : , width()
; 206  : , height()

	mov	QWORD PTR [rbx+48], rax

; 207  : , borderSize()
; 208  : , maxError()

	mov	DWORD PTR [rbx+56], ebp
$LN172@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 100  :     if (!cSet) {

	test	rbx, rbx
	je	$LN232@BuildNavme

; 101  :         return false;
; 102  :     }
; 103  :     if (!rcBuildContours(mContext, *cHeightField, mConfig.maxSimplificationError, mConfig.maxEdgeLen, *cSet)) {

	mov	DWORD PTR [rsp+40], 1
	mov	QWORD PTR [rsp+32], rbx
	mov	r9d, DWORD PTR [rdi+64]
	movss	xmm2, DWORD PTR [rdi+68]
	mov	rdx, r14
	mov	rcx, QWORD PTR [rdi+104]
	call	?rcBuildContours@@YA_NPEAVrcContext@@AEBUrcCompactHeightfield@@MHAEAUrcContourSet@@H@Z ; rcBuildContours
	test	al, al
	je	$LN232@BuildNavme

; 104  :         return false;
; 105  :     }
; 106  : 
; 107  :     // Step 6: poly mesh
; 108  :     if (mCurrentMesh != nullptr) {

	mov	rcx, QWORD PTR [rdi+96]
	test	rcx, rcx
	je	SHORT $LN23@BuildNavme

; 109  :         rcFreePolyMesh(mCurrentMesh);

	call	?rcFreePolyMesh@@YAXPEAUrcPolyMesh@@@Z	; rcFreePolyMesh
$LN23@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 23   : 	return malloc(size);

	mov	ecx, 96					; 00000060H
	call	QWORD PTR __imp_malloc
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 35   : 	T* ptr = (T*)rcAlloc(sizeof(T), allocLifetime);

	mov	QWORD PTR ptr$4[rsp], rax

; 36   : 	::new(rcNewTag(), (void*)ptr) T();

	test	rax, rax
	je	SHORT $LN187@BuildNavme

; 233  : : verts()

	mov	QWORD PTR [rax], rbp

; 234  : , polys()

	mov	QWORD PTR [rax+8], rbp

; 235  : , regs()

	mov	QWORD PTR [rax+16], rbp

; 236  : , flags()

	mov	QWORD PTR [rax+24], rbp

; 237  : , areas()

	mov	QWORD PTR [rax+32], rbp

; 238  : , nverts()

	mov	QWORD PTR [rax+40], 0

; 239  : , npolys()
; 240  : , maxpolys()

	mov	QWORD PTR [rax+48], 0

; 241  : , nvp()
; 242  : , bmin()

	xor	ecx, ecx
	mov	QWORD PTR [rax+56], rcx
	mov	DWORD PTR [rax+64], ecx

; 243  : , bmax()

	mov	QWORD PTR [rax+68], rcx
	mov	QWORD PTR [rax+76], rcx

; 244  : , cs()
; 245  : , ch()

	mov	QWORD PTR [rax+84], rcx

; 246  : , borderSize()
; 247  : , maxEdgeError()

	mov	DWORD PTR [rax+92], ebp
$LN187@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 111  :     mCurrentMesh = rcAllocPolyMesh();

	mov	QWORD PTR [rdi+96], rax

; 112  :     if (!mCurrentMesh) {

	test	rax, rax
	je	SHORT $LN232@BuildNavme

; 113  :         return false;
; 114  :     }
; 115  :     if (!rcBuildPolyMesh(mContext, *cSet, mConfig.maxVertsPerPoly, *mCurrentMesh)) {

	mov	r9, rax
	mov	r8d, DWORD PTR [rdi+80]
	mov	rdx, rbx
	mov	rcx, QWORD PTR [rdi+104]
	call	?rcBuildPolyMesh@@YA_NPEAVrcContext@@AEBUrcContourSet@@HAEAUrcPolyMesh@@@Z ; rcBuildPolyMesh
	test	al, al
	setne	al
	jmp	SHORT $LN1@BuildNavme
$LN203@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastRasterization.cpp

; 496  : 			context->log(RC_LOG_ERROR, "rcRasterizeTriangles: Out of memory.");

	lea	r8, OFFSET FLAT:??_C@_0CF@GMPBBABG@rcRasterizeTriangles?3?5Out?5of?5me@
	mov	edx, 3
	mov	rcx, rbp
	call	?log@rcContext@@QEAAXW4rcLogCategory@@PEBDZZ ; rcContext::log
	npad	1
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h

; 154  : 	inline void stopTimer(const rcTimerLabel label) { if (m_timerEnabled) doStopTimer(label); }

	cmp	BYTE PTR [rbp+9], 0
	je	SHORT $LN109@BuildNavme
	mov	rax, QWORD PTR [rbp]
	mov	edx, 2
	mov	rcx, rbp
	call	QWORD PTR [rax+40]
	npad	1
$LN109@BuildNavme:
$LN232@BuildNavme:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 116  :         return false;

	xor	al, al
$LN1@BuildNavme:

; 117  :     }
; 118  : 
; 119  :     return true;
; 120  : 
; 121  : }

	lea	r11, QWORD PTR [rsp+208]
	mov	rbx, QWORD PTR [r11+80]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm7, XMMWORD PTR [r11-32]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm10, XMMWORD PTR [r11-80]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z ENDP ; NavMeshGenerator::BuildNavmeshForMesh
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
Indices$GSCopy$1$ = 96
ptr$4 = 96
ptr$5 = 96
ptr$6 = 96
flagMergeThreshold$1$ = 104
ptr$7 = 104
$T8 = 104
timer$9 = 112
this$ = 272
Vertices$ = 280
VerticesCount$ = 288
Indices$ = 296
IndicesCount$ = 304
?dtor$2@?0??BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z@4HA PROC ; `NavMeshGenerator::BuildNavmeshForMesh'::`1'::dtor$2
	lea	rcx, QWORD PTR timer$9[rdx]
	jmp	??1rcScopedTimer@@QEAA@XZ		; rcScopedTimer::~rcScopedTimer
?dtor$2@?0??BuildNavmeshForMesh@NavMeshGenerator@@QEAA_NPEAMHPEAHH@Z@4HA ENDP ; `NavMeshGenerator::BuildNavmeshForMesh'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
;	COMDAT ?GetMeshVertexCount@NavMeshGenerator@@QEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetMeshVertexCount@NavMeshGenerator@@QEAAHXZ PROC	; NavMeshGenerator::GetMeshVertexCount, COMDAT

; 125  :     if (mCurrentMesh != nullptr) {

	mov	rax, QWORD PTR [rcx+96]
	test	rax, rax
	je	SHORT $LN2@GetMeshVer

; 126  :         return mCurrentMesh->nverts;

	mov	eax, DWORD PTR [rax+40]

; 129  : }

	ret	0
$LN2@GetMeshVer:

; 127  :     }
; 128  :     return -1;

	mov	eax, -1

; 129  : }

	ret	0
?GetMeshVertexCount@NavMeshGenerator@@QEAAHXZ ENDP	; NavMeshGenerator::GetMeshVertexCount
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
;	COMDAT ?GetMeshTriangleCount@NavMeshGenerator@@QEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetMeshTriangleCount@NavMeshGenerator@@QEAAHXZ PROC	; NavMeshGenerator::GetMeshTriangleCount, COMDAT

; 133  :     if (mCurrentMesh != nullptr) {

	mov	rax, QWORD PTR [rcx+96]
	test	rax, rax
	je	SHORT $LN2@GetMeshTri

; 134  :         return mCurrentMesh->npolys;

	mov	eax, DWORD PTR [rax+44]

; 137  : }

	ret	0
$LN2@GetMeshTri:

; 135  :     }
; 136  :     return -1;

	mov	eax, -1

; 137  : }

	ret	0
?GetMeshTriangleCount@NavMeshGenerator@@QEAAHXZ ENDP	; NavMeshGenerator::GetMeshTriangleCount
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
;	COMDAT ?GetMeshVertices@NavMeshGenerator@@QEAAXPEAX@Z
_TEXT	SEGMENT
this$ = 8
Buffer$ = 16
?GetMeshVertices@NavMeshGenerator@@QEAAXPEAX@Z PROC	; NavMeshGenerator::GetMeshVertices, COMDAT

; 140  : {

	mov	r9, rdx

; 141  :     if (mCurrentMesh != nullptr) {

	mov	rdx, QWORD PTR [rcx+96]
	test	rdx, rdx
	je	SHORT $LN2@GetMeshVer

; 142  :         memcpy(Buffer, mCurrentMesh->verts, mCurrentMesh->nverts * sizeof(short) * 3);

	movsxd	rax, DWORD PTR [rdx+40]
	mov	rcx, r9
	mov	rdx, QWORD PTR [rdx]
	lea	r8, QWORD PTR [rax+rax*2]
	add	r8, r8
	jmp	memcpy
$LN2@GetMeshVer:

; 143  :     }
; 144  : }

	ret	0
?GetMeshVertices@NavMeshGenerator@@QEAAXPEAX@Z ENDP	; NavMeshGenerator::GetMeshVertices
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
;	COMDAT ?GetMeshTriangles@NavMeshGenerator@@QEAAXPEAX@Z
_TEXT	SEGMENT
this$ = 8
Buffer$ = 16
?GetMeshTriangles@NavMeshGenerator@@QEAAXPEAX@Z PROC	; NavMeshGenerator::GetMeshTriangles, COMDAT

; 147  : {

	mov	r9, rdx

; 148  :     if (mCurrentMesh != nullptr) {

	mov	rdx, QWORD PTR [rcx+96]
	test	rdx, rdx
	je	SHORT $LN2@GetMeshTri

; 149  :         memcpy(Buffer, mCurrentMesh->polys, mCurrentMesh->npolys * sizeof(short) * 2 * mCurrentMesh->nvp);

	movsxd	r8, DWORD PTR [rdx+52]
	mov	rcx, r9
	movsxd	rax, DWORD PTR [rdx+44]
	mov	rdx, QWORD PTR [rdx+8]
	imul	r8, rax
	shl	r8, 2
	jmp	memcpy
$LN2@GetMeshTri:

; 150  :     }
; 151  : }

	ret	0
?GetMeshTriangles@NavMeshGenerator@@QEAAXPEAX@Z ENDP	; NavMeshGenerator::GetMeshTriangles
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp
;	COMDAT ??1NavMeshGenerator@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1NavMeshGenerator@@QEAA@XZ PROC			; NavMeshGenerator::~NavMeshGenerator, COMDAT

; 154  : {

$LN58:
	push	rbx
	sub	rsp, 32					; 00000020H

; 155  :     rcFreePolyMesh(mCurrentMesh);

	mov	rbx, QWORD PTR [rcx+96]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 45   : 	if (ptr)

	test	rbx, rbx
	je	SHORT $LN52@NavMeshGen

; 253  : 	rcFree(verts);

	mov	rcx, QWORD PTR [rbx]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN17@NavMeshGen

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN17@NavMeshGen:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 254  : 	rcFree(polys);

	mov	rcx, QWORD PTR [rbx+8]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN24@NavMeshGen

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN24@NavMeshGen:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 255  : 	rcFree(regs);

	mov	rcx, QWORD PTR [rbx+16]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN31@NavMeshGen

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN31@NavMeshGen:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 256  : 	rcFree(flags);

	mov	rcx, QWORD PTR [rbx+24]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN38@NavMeshGen

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
$LN38@NavMeshGen:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.cpp

; 257  : 	rcFree(areas);

	mov	rcx, QWORD PTR [rbx+32]
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 47   : 	if (ptr != NULL)

	test	rcx, rcx
	je	SHORT $LN45@NavMeshGen

; 28   : 	free(ptr);

	call	QWORD PTR __imp_free
	npad	1
$LN45@NavMeshGen:
	mov	rcx, rbx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 156  : }

	add	rsp, 32					; 00000020H
	pop	rbx
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\RecastAlloc.cpp

; 28   : 	free(ptr);

	rex_jmp	QWORD PTR __imp_free
$LN52@NavMeshGen:
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\NavMeshGenerator.cpp

; 156  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1NavMeshGenerator@@QEAA@XZ ENDP			; NavMeshGenerator::~NavMeshGenerator
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcIgnoreUnused@W4rcLogCategory@@@@YAXAEBW4rcLogCategory@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
??$rcIgnoreUnused@W4rcLogCategory@@@@YAXAEBW4rcLogCategory@@@Z PROC ; rcIgnoreUnused<enum rcLogCategory>, COMDAT

; 26   : template<class T> void rcIgnoreUnused(const T&) { }

	ret	0
??$rcIgnoreUnused@W4rcLogCategory@@@@YAXAEBW4rcLogCategory@@@Z ENDP ; rcIgnoreUnused<enum rcLogCategory>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcIgnoreUnused@PEBD@@YAXAEBQEBD@Z
_TEXT	SEGMENT
__formal$dead$ = 8
??$rcIgnoreUnused@PEBD@@YAXAEBQEBD@Z PROC		; rcIgnoreUnused<char const *>, COMDAT

; 26   : template<class T> void rcIgnoreUnused(const T&) { }

	ret	0
??$rcIgnoreUnused@PEBD@@YAXAEBQEBD@Z ENDP		; rcIgnoreUnused<char const *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcIgnoreUnused@H@@YAXAEBH@Z
_TEXT	SEGMENT
__formal$dead$ = 8
??$rcIgnoreUnused@H@@YAXAEBH@Z PROC			; rcIgnoreUnused<int>, COMDAT

; 26   : template<class T> void rcIgnoreUnused(const T&) { }

	ret	0
??$rcIgnoreUnused@H@@YAXAEBH@Z ENDP			; rcIgnoreUnused<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcIgnoreUnused@W4rcTimerLabel@@@@YAXAEBW4rcTimerLabel@@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
??$rcIgnoreUnused@W4rcTimerLabel@@@@YAXAEBW4rcTimerLabel@@@Z PROC ; rcIgnoreUnused<enum rcTimerLabel>, COMDAT

; 26   : template<class T> void rcIgnoreUnused(const T&) { }

	ret	0
??$rcIgnoreUnused@W4rcTimerLabel@@@@YAXAEBW4rcTimerLabel@@@Z ENDP ; rcIgnoreUnused<enum rcTimerLabel>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File H:\Paul\switchemulator\Zelda TotK\MapEditorV4\OldVersion\MapEditor\recastnavigation\recast\Recast.h
;	COMDAT ??$rcSqr@H@@YAHH@Z
_TEXT	SEGMENT
a$ = 8
??$rcSqr@H@@YAHH@Z PROC					; rcSqr<int>, COMDAT

; 674  : template<class T> inline T rcSqr(T a) { return a * a; }

	imul	ecx, ecx
	mov	eax, ecx
	ret	0
??$rcSqr@H@@YAHH@Z ENDP					; rcSqr<int>
_TEXT	ENDS
END
